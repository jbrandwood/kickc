
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call sum 
  [2] (byte) sum::return#0 ← (byte) sum::return#3
  to:main::@1
main::@1: scope:[main]  from main
  [3] (byte) main::s1#0 ← (byte) sum::return#0
  [4] call sum 
  [5] (byte) sum::return#1 ← (byte) sum::return#3
  to:main::@2
main::@2: scope:[main]  from main::@1
  [6] (byte) main::s2#0 ← (byte) sum::return#1
  [7] call sum 
  [8] (byte) sum::return#2 ← (byte) sum::return#3
  to:main::@3
main::@3: scope:[main]  from main::@2
  [9] (byte) main::s3#0 ← (byte) sum::return#2
  [10] (byte~) main::$3 ← (byte) main::s1#0 + (byte) main::s2#0
  [11] (byte) main::s4#0 ← (byte~) main::$3 + (byte) main::s3#0
  [12] *((const byte*) screen) ← (byte) main::s4#0
  to:main::@return
main::@return: scope:[main]  from main::@3
  [13] return 
  to:@return

(byte()) sum((byte) sum::a , (byte) sum::b)
sum: scope:[sum]  from main main::@1 main::@2
  [14] (byte) sum::b#3 ← phi( main/(byte) 2 main::@1/(byte) 4 main::@2/(byte) $d )
  [14] (byte) sum::a#3 ← phi( main/(byte) 1 main::@1/(byte) 3 main::@2/(byte) 9 )
  [15] (byte) sum::return#3 ← (byte) sum::a#3 + (byte) sum::b#3
  to:sum::@return
sum::@return: scope:[sum]  from sum
  [16] return 
  to:@return
