
(void()) __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] phi()
  [2] call malloc 
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  [3] (void*) SCREEN_COPY#0 ← (void*)(byte*) malloc::mem#0
  [4] call malloc 
  to:__start::@3
__start::@3: scope:[__start]  from __start::@2
  [5] (void*) SCREEN_DIST#0 ← (void*)(byte*) malloc::mem#0
  to:__start::@1
__start::@1: scope:[__start]  from __start::@3
  [6] phi()
  [7] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

interrupt(HARDWARE_ALL)(void()) irqBottom()
irqBottom: scope:[irqBottom]  from
  [9] phi()
  to:irqBottom::@1
irqBottom::@1: scope:[irqBottom]  from irqBottom
  [10] phi()
  [11] call processChars 
  to:irqBottom::@2
irqBottom::@2: scope:[irqBottom]  from irqBottom::@1
  [12] *((const nomodify byte*) RASTER) ← (const nomodify byte) RASTER_IRQ_TOP
  [13] *((const nomodify void()**) HARDWARE_IRQ) ← &interrupt(HARDWARE_ALL)(void()) irqTop()
  [14] *((const nomodify byte*) IRQ_STATUS) ← (const nomodify byte) IRQ_RASTER
  to:irqBottom::@return
irqBottom::@return: scope:[irqBottom]  from irqBottom::@2
  [15] return 
  to:@return

interrupt(HARDWARE_ALL)(void()) irqTop()
irqTop: scope:[irqTop]  from
  [16] phi()
  to:irqTop::@1
irqTop::@1: scope:[irqTop]  from irqTop
  [17] *((const nomodify byte*) RASTER) ← (const nomodify byte) RASTER_IRQ_MIDDLE
  [18] *((const nomodify void()**) HARDWARE_IRQ) ← &interrupt(HARDWARE_ALL)(void()) irqBottom()
  [19] *((const nomodify byte*) IRQ_STATUS) ← (const nomodify byte) IRQ_RASTER
  to:irqTop::@return
irqTop::@return: scope:[irqTop]  from irqTop::@1
  [20] return 
  to:@return

(void*()) malloc((word) malloc::size)
malloc: scope:[malloc]  from __start::@2 __start::__init1
  [21] (byte*) heap_head#6 ← phi( __start::@2/(byte*) heap_head#0 __start::__init1/(const byte*) HEAP_TOP )
  [22] (byte*) malloc::mem#0 ← (byte*) heap_head#6 - (word) $3e8
  [23] (byte*) heap_head#0 ← (byte*) malloc::mem#0
  to:malloc::@return
malloc::@return: scope:[malloc]  from malloc
  [24] return 
  to:@return

(void()) main()
main: scope:[main]  from __start::@1
  [25] (byte*) init_angle_screen::screen#0 ← (byte*)(void*) SCREEN_DIST#0
  [26] call init_angle_screen 
  to:main::@9
main::@9: scope:[main]  from main
  [27] (byte*) main::dst#0 ← (byte*)(void*) SCREEN_COPY#0
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@9
  [28] (byte*) main::dst#2 ← phi( main::@9/(byte*) main::dst#0 main::@2/(byte*) main::dst#1 )
  [28] (byte*) main::src#2 ← phi( main::@9/(const nomodify byte*) SCREEN main::@2/(byte*) main::src#1 )
  [29] if((byte*) main::src#2!=(const nomodify byte*) SCREEN+(word) $3e8) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@3
  [30] (byte) main::i#2 ← phi( main::@1/(byte) 0 main::@3/(byte) main::i#1 )
  [31] (byte~) main::$11 ← (byte) main::i#2 << (byte) 1
  [32] (byte~) main::$12 ← (byte~) main::$11 + (byte) main::i#2
  [33] (byte~) main::$13 ← (byte~) main::$12 << (byte) 1
  [34] (byte~) main::$14 ← (byte~) main::$13 + (byte) main::i#2
  [35] (byte~) main::$10 ← (byte~) main::$14 << (byte) 1
  [36] *((const struct ProcessingSprite*) PROCESSING + (byte~) main::$10) ← memcpy(*(&(const struct ProcessingSprite) $0), struct ProcessingSprite, (const byte) SIZEOF_STRUCT_PROCESSINGSPRITE)
  [37] (byte) main::i#1 ← ++ (byte) main::i#2
  [38] if((byte) main::i#1!=(const nomodify byte) NUM_PROCESSING-(byte) 1+(byte) 1) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  [39] phi()
  [40] call initSprites 
  to:main::@10
main::@10: scope:[main]  from main::@4
  [41] phi()
  [42] call setupRasterIrq 
  to:main::@5
main::@5: scope:[main]  from main::@10 main::@6
  [43] phi()
  [44] call getCharToProcess 
  [45] (byte) getCharToProcess::return_x#0 ← (byte) getCharToProcess::return_x#1
  [46] (byte) getCharToProcess::return_y#0 ← (byte) getCharToProcess::return_y#1
  [47] (byte) getCharToProcess::return_dist#0 ← (byte) getCharToProcess::return_dist#1
  to:main::@11
main::@11: scope:[main]  from main::@5
  [48] (byte) main::center_x#0 ← (byte) getCharToProcess::return_x#0
  [49] (byte) main::center_y#0 ← (byte) getCharToProcess::return_y#0
  [50] (byte) main::center_dist#0 ← (byte) getCharToProcess::return_dist#0
  [51] if((byte) main::center_dist#0!=(const nomodify byte) NOT_FOUND) goto main::@6
  to:main::@7
main::@7: scope:[main]  from main::@11
  [52] *((const nomodify byte*) SCREEN+(word) $3e7) ← (byte) '.'
  to:main::@8
main::@8: scope:[main]  from main::@7 main::@8
  [53] *((const nomodify byte*) COLS+(word) $3e7) ← ++ *((const nomodify byte*) COLS+(word) $3e7)
  to:main::@8
main::@6: scope:[main]  from main::@11
  [54] (byte) startProcessing::center_x#0 ← (byte) main::center_x#0
  [55] (byte) startProcessing::center_y#0 ← (byte) main::center_y#0
  [56] call startProcessing 
  to:main::@5
main::@2: scope:[main]  from main::@1
  [57] *((byte*) main::dst#2) ← *((byte*) main::src#2)
  [58] (byte*) main::src#1 ← ++ (byte*) main::src#2
  [59] (byte*) main::dst#1 ← ++ (byte*) main::dst#2
  to:main::@1

(void()) processChars()
processChars: scope:[processChars]  from irqBottom::@1
  [60] phi()
  to:processChars::@1
processChars::@1: scope:[processChars]  from processChars processChars::@2
  [61] (byte) processChars::numActive#10 ← phi( processChars/(byte) 0 processChars::@2/(byte) processChars::numActive#3 )
  [61] (byte) processChars::i#10 ← phi( processChars/(byte) 0 processChars::@2/(byte) processChars::i#1 )
  [62] (byte~) processChars::$86 ← (byte) processChars::i#10 << (byte) 1
  [63] (byte~) processChars::$87 ← (byte~) processChars::$86 + (byte) processChars::i#10
  [64] (byte~) processChars::$88 ← (byte~) processChars::$87 << (byte) 1
  [65] (byte~) processChars::$89 ← (byte~) processChars::$88 + (byte) processChars::i#10
  [66] (byte~) processChars::$28 ← (byte~) processChars::$89 << (byte) 1
  [67] (struct ProcessingSprite*) processChars::processing#0 ← (const struct ProcessingSprite*) PROCESSING + (byte~) processChars::$28
  [68] (byte) processChars::bitmask#0 ← (byte) 1 << *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_ID)
  [69] if(*((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS)==(const byte) STATUS_FREE) goto processChars::@2
  to:processChars::@10
processChars::@10: scope:[processChars]  from processChars::@1
  [70] if(*((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS)!=(const byte) STATUS_NEW) goto processChars::@3
  to:processChars::@11
processChars::@11: scope:[processChars]  from processChars::@10
  [71] *(*((byte**)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_SCREENPTR)) ← (byte) ' '
  [72] *((const nomodify byte*) SPRITES_ENABLE) ← *((const nomodify byte*) SPRITES_ENABLE) | (byte) processChars::bitmask#0
  [73] *((const nomodify byte*) SPRITES_COLOR + *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_ID)) ← *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_COL)
  [74] *((const nomodify byte*) SCREEN+(const nomodify word) SPRITE_PTRS + *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_ID)) ← *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_PTR)
  [75] *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS) ← (const byte) STATUS_PROCESSING
  to:processChars::@3
processChars::@3: scope:[processChars]  from processChars::@10 processChars::@11
  [76] (word) processChars::xpos#0 ← *((word*)(struct ProcessingSprite*) processChars::processing#0) >> (byte) 4
  [77] (byte~) processChars::$9 ← > (word) processChars::xpos#0
  [78] if((byte) 0!=(byte~) processChars::$9) goto processChars::@4
  to:processChars::@8
processChars::@8: scope:[processChars]  from processChars::@3
  [79] (byte~) processChars::$10 ← (byte) $ff ^ (byte) processChars::bitmask#0
  [80] *((const nomodify byte*) SPRITES_XMSB) ← *((const nomodify byte*) SPRITES_XMSB) & (byte~) processChars::$10
  to:processChars::@5
processChars::@5: scope:[processChars]  from processChars::@4 processChars::@8
  [81] (byte~) processChars::$13 ← (byte) processChars::i#10 << (byte) 1
  [82] *((const nomodify byte*) SPRITES_XPOS + (byte~) processChars::$13) ← (byte)(word) processChars::xpos#0
  [83] (word~) processChars::$12 ← *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y) >> (byte) 4
  [84] (byte) processChars::ypos#0 ← (byte)(word~) processChars::$12
  [85] *((const nomodify byte*) SPRITES_YPOS + (byte~) processChars::$13) ← (byte) processChars::ypos#0
  [86] if(*((word*)(struct ProcessingSprite*) processChars::processing#0)<(const nomodify word) XPOS_LEFTMOST) goto processChars::@6
  to:processChars::@14
processChars::@14: scope:[processChars]  from processChars::@5
  [87] if(*((word*)(struct ProcessingSprite*) processChars::processing#0)>(const nomodify word) XPOS_RIGHTMOST) goto processChars::@6
  to:processChars::@13
processChars::@13: scope:[processChars]  from processChars::@14
  [88] if(*((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y)<(const nomodify word) YPOS_TOPMOST) goto processChars::@6
  to:processChars::@12
processChars::@12: scope:[processChars]  from processChars::@13
  [89] if(*((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y)>(const nomodify word) YPOS_BOTTOMMOST) goto processChars::@6
  to:processChars::@9
processChars::@9: scope:[processChars]  from processChars::@12
  [90] (word~) processChars::$21 ← (word) processChars::xpos#0 >> (byte) 3
  [91] (byte~) processChars::$73 ← (byte)(word~) processChars::$21
  [92] (byte) processChars::xchar#0 ← (byte~) processChars::$73 - (const nomodify byte) BORDER_XPOS_LEFT/(byte) 8
  [93] (byte~) processChars::$29 ← (byte) processChars::xchar#0 << (byte) 1
  [94] *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VX) ← *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VX) + *((const to_nomodify word*) VXSIN + (byte~) processChars::$29)
  [95] *((word*)(struct ProcessingSprite*) processChars::processing#0) ← *((word*)(struct ProcessingSprite*) processChars::processing#0) + *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VX)
  [96] (byte~) processChars::$79 ← (byte) processChars::ypos#0 >> (byte) 3
  [97] (byte) processChars::ychar#0 ← (byte~) processChars::$79 - (const nomodify byte) BORDER_YPOS_TOP/(byte) 8
  [98] (byte~) processChars::$30 ← (byte) processChars::ychar#0 << (byte) 1
  [99] *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VY) ← *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VY) + *((const to_nomodify word*) VYSIN + (byte~) processChars::$30)
  [100] *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y) ← *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y) + *((word*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VY)
  to:processChars::@7
processChars::@7: scope:[processChars]  from processChars::@6 processChars::@9
  [101] (byte) processChars::numActive#1 ← ++ (byte) processChars::numActive#10
  to:processChars::@2
processChars::@2: scope:[processChars]  from processChars::@1 processChars::@7
  [102] (byte) processChars::numActive#3 ← phi( processChars::@1/(byte) processChars::numActive#10 processChars::@7/(byte) processChars::numActive#1 )
  [103] (byte) processChars::i#1 ← ++ (byte) processChars::i#10
  [104] if((byte) processChars::i#1!=(const nomodify byte) NUM_PROCESSING-(byte) 1+(byte) 1) goto processChars::@1
  to:processChars::@return
processChars::@return: scope:[processChars]  from processChars::@2
  [105] return 
  to:@return
processChars::@6: scope:[processChars]  from processChars::@12 processChars::@13 processChars::@14 processChars::@5
  [106] *((byte*)(struct ProcessingSprite*) processChars::processing#0 + (const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS) ← (const byte) STATUS_FREE
  [107] (byte~) processChars::$25 ← (byte) $ff ^ (byte) processChars::bitmask#0
  [108] *((const nomodify byte*) SPRITES_ENABLE) ← *((const nomodify byte*) SPRITES_ENABLE) & (byte~) processChars::$25
  to:processChars::@7
processChars::@4: scope:[processChars]  from processChars::@3
  [109] *((const nomodify byte*) SPRITES_XMSB) ← *((const nomodify byte*) SPRITES_XMSB) | (byte) processChars::bitmask#0
  to:processChars::@5

(void()) init_angle_screen((byte*) init_angle_screen::screen)
init_angle_screen: scope:[init_angle_screen]  from main
  [110] (byte*) init_angle_screen::screen_topline#0 ← (byte*) init_angle_screen::screen#0 + (word)(number) $28*(number) $c
  [111] (byte*) init_angle_screen::screen_bottomline#0 ← (byte*) init_angle_screen::screen#0 + (word)(number) $28*(number) $c
  to:init_angle_screen::@1
init_angle_screen::@1: scope:[init_angle_screen]  from init_angle_screen init_angle_screen::@4
  [112] (byte*) init_angle_screen::screen_bottomline#6 ← phi( init_angle_screen/(byte*) init_angle_screen::screen_bottomline#0 init_angle_screen::@4/(byte*) init_angle_screen::screen_bottomline#1 )
  [112] (byte*) init_angle_screen::screen_topline#6 ← phi( init_angle_screen/(byte*) init_angle_screen::screen_topline#0 init_angle_screen::@4/(byte*) init_angle_screen::screen_topline#1 )
  [112] (byte) init_angle_screen::y#5 ← phi( init_angle_screen/(byte) 0 init_angle_screen::@4/(byte) init_angle_screen::y#1 )
  to:init_angle_screen::@2
init_angle_screen::@2: scope:[init_angle_screen]  from init_angle_screen::@1 init_angle_screen::@5
  [113] (byte) init_angle_screen::xb#2 ← phi( init_angle_screen::@1/(byte) $27 init_angle_screen::@5/(byte) init_angle_screen::xb#1 )
  [113] (byte) init_angle_screen::x#2 ← phi( init_angle_screen::@1/(byte) 0 init_angle_screen::@5/(byte) init_angle_screen::x#1 )
  [114] if((byte) init_angle_screen::x#2<(byte) $13+(byte) 1) goto init_angle_screen::@3
  to:init_angle_screen::@4
init_angle_screen::@4: scope:[init_angle_screen]  from init_angle_screen::@2
  [115] (byte*) init_angle_screen::screen_topline#1 ← (byte*) init_angle_screen::screen_topline#6 - (byte) $28
  [116] (byte*) init_angle_screen::screen_bottomline#1 ← (byte*) init_angle_screen::screen_bottomline#6 + (byte) $28
  [117] (byte) init_angle_screen::y#1 ← ++ (byte) init_angle_screen::y#5
  [118] if((byte) init_angle_screen::y#1!=(byte) $d) goto init_angle_screen::@1
  to:init_angle_screen::@return
init_angle_screen::@return: scope:[init_angle_screen]  from init_angle_screen::@4
  [119] return 
  to:@return
init_angle_screen::@3: scope:[init_angle_screen]  from init_angle_screen::@2
  [120] (byte~) init_angle_screen::$3 ← (byte) init_angle_screen::x#2 << (byte) 1
  [121] (byte~) init_angle_screen::$4 ← (byte) $27 - (byte~) init_angle_screen::$3
  [122] (word) init_angle_screen::xw#0 ← (byte~) init_angle_screen::$4 w= (byte) 0
  [123] (byte~) init_angle_screen::$5 ← (byte) init_angle_screen::y#5 << (byte) 1
  [124] (word) init_angle_screen::yw#0 ← (byte~) init_angle_screen::$5 w= (byte) 0
  [125] (signed word) atan2_16::x#0 ← (signed word)(word) init_angle_screen::xw#0
  [126] (signed word) atan2_16::y#0 ← (signed word)(word) init_angle_screen::yw#0
  [127] call atan2_16 
  [128] (word) atan2_16::return#2 ← (word) atan2_16::return#0
  to:init_angle_screen::@5
init_angle_screen::@5: scope:[init_angle_screen]  from init_angle_screen::@3
  [129] (word) init_angle_screen::angle_w#0 ← (word) atan2_16::return#2
  [130] (word~) init_angle_screen::$7 ← (word) init_angle_screen::angle_w#0 + (byte) $80
  [131] (byte) init_angle_screen::ang_w#0 ← > (word~) init_angle_screen::$7
  [132] *((byte*) init_angle_screen::screen_bottomline#6 + (byte) init_angle_screen::xb#2) ← (byte) init_angle_screen::ang_w#0
  [133] (byte~) init_angle_screen::$9 ← - (byte) init_angle_screen::ang_w#0
  [134] *((byte*) init_angle_screen::screen_topline#6 + (byte) init_angle_screen::xb#2) ← (byte~) init_angle_screen::$9
  [135] (byte~) init_angle_screen::$10 ← (byte) $80 + (byte) init_angle_screen::ang_w#0
  [136] *((byte*) init_angle_screen::screen_topline#6 + (byte) init_angle_screen::x#2) ← (byte~) init_angle_screen::$10
  [137] (byte~) init_angle_screen::$11 ← (byte) $80 - (byte) init_angle_screen::ang_w#0
  [138] *((byte*) init_angle_screen::screen_bottomline#6 + (byte) init_angle_screen::x#2) ← (byte~) init_angle_screen::$11
  [139] (byte) init_angle_screen::x#1 ← ++ (byte) init_angle_screen::x#2
  [140] (byte) init_angle_screen::xb#1 ← -- (byte) init_angle_screen::xb#2
  to:init_angle_screen::@2

(void()) initSprites()
initSprites: scope:[initSprites]  from main::@4
  [141] phi()
  to:initSprites::@1
initSprites::@1: scope:[initSprites]  from initSprites initSprites::@2
  [142] (byte*) initSprites::sp#2 ← phi( initSprites/(const nomodify byte*) SPRITE_DATA initSprites::@2/(byte*) initSprites::sp#1 )
  [143] if((byte*) initSprites::sp#2<(const nomodify byte*) SPRITE_DATA+(const nomodify byte) NUM_PROCESSING*(byte) $40) goto initSprites::@2
  to:initSprites::@3
initSprites::@3: scope:[initSprites]  from initSprites::@1 initSprites::@3
  [144] (byte) initSprites::i#2 ← phi( initSprites::@1/(byte) 0 initSprites::@3/(byte) initSprites::i#1 )
  [145] *((const nomodify byte*) SPRITES_COLOR + (byte) initSprites::i#2) ← (const nomodify byte) LIGHT_BLUE
  [146] (byte) initSprites::i#1 ← ++ (byte) initSprites::i#2
  [147] if((byte) initSprites::i#1!=(byte) 8) goto initSprites::@3
  to:initSprites::@4
initSprites::@4: scope:[initSprites]  from initSprites::@3
  [148] *((const nomodify byte*) SPRITES_MC) ← (byte) 0
  [149] *((const nomodify byte*) SPRITES_EXPAND_X) ← (byte) 0
  [150] *((const nomodify byte*) SPRITES_EXPAND_Y) ← (byte) 0
  to:initSprites::@return
initSprites::@return: scope:[initSprites]  from initSprites::@4
  [151] return 
  to:@return
initSprites::@2: scope:[initSprites]  from initSprites::@1
  [152] *((byte*) initSprites::sp#2) ← (byte) 0
  [153] (byte*) initSprites::sp#1 ← ++ (byte*) initSprites::sp#2
  to:initSprites::@1

(void()) setupRasterIrq((word) setupRasterIrq::raster , (void()*) setupRasterIrq::irqRoutine)
setupRasterIrq: scope:[setupRasterIrq]  from main::@10
  asm { sei  }
  [155] *((const nomodify byte*) PROCPORT_DDR) ← (const nomodify byte) PROCPORT_DDR_MEMORY_MASK
  [156] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_IO
  [157] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_INTERRUPT) ← (const nomodify byte) CIA_INTERRUPT_CLEAR
  to:setupRasterIrq::@1
setupRasterIrq::@1: scope:[setupRasterIrq]  from setupRasterIrq
  [158] *((const nomodify byte*) VIC_CONTROL) ← *((const nomodify byte*) VIC_CONTROL) & (byte) $7f
  to:setupRasterIrq::@2
setupRasterIrq::@2: scope:[setupRasterIrq]  from setupRasterIrq::@1
  [159] *((const nomodify byte*) RASTER) ← <(const nomodify byte) RASTER_IRQ_TOP
  [160] *((const nomodify byte*) IRQ_ENABLE) ← (const nomodify byte) IRQ_RASTER
  [161] *((const nomodify void()**) HARDWARE_IRQ) ← (const void()*) setupRasterIrq::irqRoutine#0
  asm { cli  }
  to:setupRasterIrq::@return
setupRasterIrq::@return: scope:[setupRasterIrq]  from setupRasterIrq::@2
  [163] return 
  to:@return

(struct ProcessingChar()) getCharToProcess()
getCharToProcess: scope:[getCharToProcess]  from main::@5
  [164] (byte*) getCharToProcess::screen_line#0 ← (byte*)(void*) SCREEN_COPY#0
  [165] (byte*) getCharToProcess::dist_line#0 ← (byte*)(void*) SCREEN_DIST#0
  to:getCharToProcess::@1
getCharToProcess::@1: scope:[getCharToProcess]  from getCharToProcess getCharToProcess::@9
  [166] (byte) getCharToProcess::closest_y#9 ← phi( getCharToProcess/(byte) 0 getCharToProcess::@9/(byte) getCharToProcess::return_y#1 )
  [166] (byte) getCharToProcess::closest_x#9 ← phi( getCharToProcess/(byte) 0 getCharToProcess::@9/(byte) getCharToProcess::return_x#1 )
  [166] (byte) getCharToProcess::y#7 ← phi( getCharToProcess/(byte) 0 getCharToProcess::@9/(byte) getCharToProcess::y#1 )
  [166] (byte) getCharToProcess::closest_dist#8 ← phi( getCharToProcess/(const nomodify byte) NOT_FOUND getCharToProcess::@9/(byte) getCharToProcess::closest_dist#10 )
  [166] (byte*) getCharToProcess::dist_line#6 ← phi( getCharToProcess/(byte*) getCharToProcess::dist_line#0 getCharToProcess::@9/(byte*) getCharToProcess::dist_line#1 )
  [166] (byte*) getCharToProcess::screen_line#4 ← phi( getCharToProcess/(byte*) getCharToProcess::screen_line#0 getCharToProcess::@9/(byte*) getCharToProcess::screen_line#1 )
  to:getCharToProcess::@2
getCharToProcess::@2: scope:[getCharToProcess]  from getCharToProcess::@1 getCharToProcess::@10
  [167] (byte) getCharToProcess::closest_y#7 ← phi( getCharToProcess::@1/(byte) getCharToProcess::closest_y#9 getCharToProcess::@10/(byte) getCharToProcess::return_y#1 )
  [167] (byte) getCharToProcess::closest_x#7 ← phi( getCharToProcess::@1/(byte) getCharToProcess::closest_x#9 getCharToProcess::@10/(byte) getCharToProcess::return_x#1 )
  [167] (byte) getCharToProcess::closest_dist#2 ← phi( getCharToProcess::@1/(byte) getCharToProcess::closest_dist#8 getCharToProcess::@10/(byte) getCharToProcess::closest_dist#12 )
  [167] (byte) getCharToProcess::x#2 ← phi( getCharToProcess::@1/(byte) 0 getCharToProcess::@10/(byte) getCharToProcess::x#1 )
  [168] if(*((byte*) getCharToProcess::screen_line#4 + (byte) getCharToProcess::x#2)==(byte) ' ') goto getCharToProcess::@11
  to:getCharToProcess::@4
getCharToProcess::@4: scope:[getCharToProcess]  from getCharToProcess::@2
  [169] (byte) getCharToProcess::dist#0 ← *((byte*) getCharToProcess::dist_line#6 + (byte) getCharToProcess::x#2)
  [170] if((byte) getCharToProcess::dist#0>=(byte) getCharToProcess::closest_dist#2) goto getCharToProcess::@12
  to:getCharToProcess::@5
getCharToProcess::@5: scope:[getCharToProcess]  from getCharToProcess::@4
  [171] (byte) getCharToProcess::return_x#7 ← (byte) getCharToProcess::x#2
  [172] (byte) getCharToProcess::return_y#7 ← (byte) getCharToProcess::y#7
  to:getCharToProcess::@3
getCharToProcess::@3: scope:[getCharToProcess]  from getCharToProcess::@11 getCharToProcess::@12 getCharToProcess::@5
  [173] (byte) getCharToProcess::return_y#1 ← phi( getCharToProcess::@11/(byte) getCharToProcess::closest_y#7 getCharToProcess::@12/(byte) getCharToProcess::closest_y#7 getCharToProcess::@5/(byte) getCharToProcess::return_y#7 )
  [173] (byte) getCharToProcess::return_x#1 ← phi( getCharToProcess::@11/(byte) getCharToProcess::closest_x#7 getCharToProcess::@12/(byte) getCharToProcess::closest_x#7 getCharToProcess::@5/(byte) getCharToProcess::return_x#7 )
  [173] (byte) getCharToProcess::return_dist#1 ← phi( getCharToProcess::@11/(byte) getCharToProcess::return_dist#5 getCharToProcess::@12/(byte) getCharToProcess::return_dist#6 getCharToProcess::@5/(byte) getCharToProcess::dist#0 )
  [174] (byte) getCharToProcess::x#1 ← ++ (byte) getCharToProcess::x#2
  [175] if((byte) getCharToProcess::x#1!=(byte) $28) goto getCharToProcess::@10
  to:getCharToProcess::@6
getCharToProcess::@6: scope:[getCharToProcess]  from getCharToProcess::@3
  [176] (byte*) getCharToProcess::screen_line#1 ← (byte*) getCharToProcess::screen_line#4 + (byte) $28
  [177] (byte*) getCharToProcess::dist_line#1 ← (byte*) getCharToProcess::dist_line#6 + (byte) $28
  [178] (byte) getCharToProcess::y#1 ← ++ (byte) getCharToProcess::y#7
  [179] if((byte) getCharToProcess::y#1!=(byte) $19) goto getCharToProcess::@9
  to:getCharToProcess::@7
getCharToProcess::@7: scope:[getCharToProcess]  from getCharToProcess::@6
  [180] if((byte) getCharToProcess::return_dist#1==(const nomodify byte) NOT_FOUND) goto getCharToProcess::@return
  to:getCharToProcess::@8
getCharToProcess::@8: scope:[getCharToProcess]  from getCharToProcess::@7
  [181] (word~) getCharToProcess::$11 ← (word)(byte) getCharToProcess::return_y#1
  [182] (word~) getCharToProcess::$12 ← (word~) getCharToProcess::$11 << (byte) 2
  [183] (word~) getCharToProcess::$13 ← (word~) getCharToProcess::$12 + (word~) getCharToProcess::$11
  [184] (word~) getCharToProcess::$8 ← (word~) getCharToProcess::$13 << (byte) 3
  [185] (byte*~) getCharToProcess::$9 ← (byte*)(void*) SCREEN_COPY#0 + (word~) getCharToProcess::$8
  [186] *((byte*~) getCharToProcess::$9 + (byte) getCharToProcess::return_x#1) ← (byte) ' '
  to:getCharToProcess::@return
getCharToProcess::@return: scope:[getCharToProcess]  from getCharToProcess::@7 getCharToProcess::@8
  [187] return 
  to:@return
getCharToProcess::@9: scope:[getCharToProcess]  from getCharToProcess::@6
  [188] (byte) getCharToProcess::closest_dist#10 ← (byte) getCharToProcess::return_dist#1
  to:getCharToProcess::@1
getCharToProcess::@10: scope:[getCharToProcess]  from getCharToProcess::@3
  [189] (byte) getCharToProcess::closest_dist#12 ← (byte) getCharToProcess::return_dist#1
  to:getCharToProcess::@2
getCharToProcess::@12: scope:[getCharToProcess]  from getCharToProcess::@4
  [190] (byte) getCharToProcess::return_dist#6 ← (byte) getCharToProcess::closest_dist#2
  to:getCharToProcess::@3
getCharToProcess::@11: scope:[getCharToProcess]  from getCharToProcess::@2
  [191] (byte) getCharToProcess::return_dist#5 ← (byte) getCharToProcess::closest_dist#2
  to:getCharToProcess::@3

(void()) startProcessing((byte) startProcessing::center_x , (byte) startProcessing::center_y , (byte) startProcessing::center_dist)
startProcessing: scope:[startProcessing]  from main::@6
  [192] phi()
  to:startProcessing::@1
startProcessing::@1: scope:[startProcessing]  from startProcessing startProcessing::@8
  [193] (byte) startProcessing::freeIdx#6 ← phi( startProcessing/(byte) $ff startProcessing::@8/(byte) startProcessing::freeIdx#7 )
  to:startProcessing::@2
startProcessing::@2: scope:[startProcessing]  from startProcessing::@1 startProcessing::@3
  [194] (byte) startProcessing::i#2 ← phi( startProcessing::@1/(byte) 0 startProcessing::@3/(byte) startProcessing::i#1 )
  [195] (byte~) startProcessing::$28 ← (byte) startProcessing::i#2 << (byte) 1
  [196] (byte~) startProcessing::$29 ← (byte~) startProcessing::$28 + (byte) startProcessing::i#2
  [197] (byte~) startProcessing::$30 ← (byte~) startProcessing::$29 << (byte) 1
  [198] (byte~) startProcessing::$31 ← (byte~) startProcessing::$30 + (byte) startProcessing::i#2
  [199] (byte~) startProcessing::$21 ← (byte~) startProcessing::$31 << (byte) 1
  [200] if(*((byte*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS + (byte~) startProcessing::$21)!=(const byte) STATUS_FREE) goto startProcessing::@3
  to:startProcessing::@4
startProcessing::@4: scope:[startProcessing]  from startProcessing::@2 startProcessing::@9
  [201] (byte) startProcessing::freeIdx#2 ← phi( startProcessing::@9/(byte) startProcessing::freeIdx#8 startProcessing::@2/(byte) startProcessing::i#2 )
  [202] if((byte) startProcessing::freeIdx#2==(byte) $ff) goto startProcessing::@8
  to:startProcessing::@5
startProcessing::@5: scope:[startProcessing]  from startProcessing::@4
  [203] (word~) startProcessing::$23 ← (word)(byte) startProcessing::center_y#0
  [204] (word~) startProcessing::$33 ← (word~) startProcessing::$23 << (byte) 2
  [205] (word~) startProcessing::$34 ← (word~) startProcessing::$33 + (word~) startProcessing::$23
  [206] (word~) startProcessing::$0 ← (word~) startProcessing::$34 << (byte) 3
  [207] (word) startProcessing::offset#0 ← (word~) startProcessing::$0 + (byte) startProcessing::center_x#0
  [208] (byte*) startProcessing::colPtr#0 ← (const nomodify byte*) COLS + (word) startProcessing::offset#0
  [209] (byte) startProcessing::spriteCol#0 ← *((byte*) startProcessing::colPtr#0)
  [210] (byte*) startProcessing::screenPtr#0 ← (const nomodify byte*) SCREEN + (word) startProcessing::offset#0
  [211] (word~) startProcessing::$24 ← (word)(byte) startProcessing::freeIdx#2
  [212] (word~) startProcessing::$4 ← (word~) startProcessing::$24 << (byte) 6
  [213] (byte*) startProcessing::spriteData#0 ← (const nomodify byte*) SPRITE_DATA + (word~) startProcessing::$4
  [214] (byte) startProcessing::ch#0 ← *((byte*) startProcessing::screenPtr#0)
  [215] (word~) startProcessing::$25 ← (word)(byte) startProcessing::ch#0
  [216] (word~) startProcessing::$6 ← (word~) startProcessing::$25 << (byte) 3
  [217] (byte*) startProcessing::chargenData#0 ← (const nomodify byte*) CHARGEN + (word~) startProcessing::$6
  asm { sei  }
  [219] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_CHARROM
  to:startProcessing::@6
startProcessing::@6: scope:[startProcessing]  from startProcessing::@5 startProcessing::@6
  [220] (byte) startProcessing::i1#2 ← phi( startProcessing::@5/(byte) 0 startProcessing::@6/(byte) startProcessing::i1#1 )
  [220] (byte*) startProcessing::spriteData#2 ← phi( startProcessing::@5/(byte*) startProcessing::spriteData#0 startProcessing::@6/(byte*) startProcessing::spriteData#1 )
  [220] (byte*) startProcessing::chargenData#2 ← phi( startProcessing::@5/(byte*) startProcessing::chargenData#0 startProcessing::@6/(byte*) startProcessing::chargenData#1 )
  [221] *((byte*) startProcessing::spriteData#2) ← *((byte*) startProcessing::chargenData#2)
  [222] (byte*) startProcessing::spriteData#1 ← (byte*) startProcessing::spriteData#2 + (byte) 3
  [223] (byte*) startProcessing::chargenData#1 ← ++ (byte*) startProcessing::chargenData#2
  [224] (byte) startProcessing::i1#1 ← ++ (byte) startProcessing::i1#2
  [225] if((byte) startProcessing::i1#1!=(byte) 8) goto startProcessing::@6
  to:startProcessing::@7
startProcessing::@7: scope:[startProcessing]  from startProcessing::@6
  [226] *((const nomodify byte*) PROCPORT) ← (const nomodify byte) PROCPORT_RAM_IO
  asm { cli  }
  [228] (word~) startProcessing::$26 ← (word)(byte) startProcessing::center_x#0
  [229] (word~) startProcessing::$8 ← (word~) startProcessing::$26 << (byte) 3
  [230] (word~) startProcessing::$9 ← (const nomodify byte) BORDER_XPOS_LEFT + (word~) startProcessing::$8
  [231] (word) startProcessing::spriteX#0 ← (word~) startProcessing::$9 << (byte) 4
  [232] (word~) startProcessing::$27 ← (word)(byte) startProcessing::center_y#0
  [233] (word~) startProcessing::$11 ← (word~) startProcessing::$27 << (byte) 3
  [234] (word~) startProcessing::$12 ← (const nomodify byte) BORDER_YPOS_TOP + (word~) startProcessing::$11
  [235] (word) startProcessing::spriteY#0 ← (word~) startProcessing::$12 << (byte) 4
  [236] (byte) startProcessing::spritePtr#0 ← (byte)(const nomodify byte*) SPRITE_DATA/(byte) $40 + (byte) startProcessing::freeIdx#2
  [237] (byte~) startProcessing::$15 ← (byte) startProcessing::freeIdx#2 << (byte) 3
  [238] (byte~) startProcessing::$36 ← (byte) startProcessing::freeIdx#2 << (byte) 1
  [239] (byte~) startProcessing::$37 ← (byte~) startProcessing::$36 + (byte) startProcessing::freeIdx#2
  [240] (byte~) startProcessing::$38 ← (byte~) startProcessing::$37 << (byte) 1
  [241] (byte~) startProcessing::$39 ← (byte~) startProcessing::$38 + (byte) startProcessing::freeIdx#2
  [242] (byte~) startProcessing::$22 ← (byte~) startProcessing::$39 << (byte) 1
  [243] *((word*)(const struct ProcessingSprite*) PROCESSING + (byte~) startProcessing::$22) ← (word) startProcessing::spriteX#0
  [244] *((word*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y + (byte~) startProcessing::$22) ← (word) startProcessing::spriteY#0
  [245] *((word*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VX + (byte~) startProcessing::$22) ← (word)(byte~) startProcessing::$15
  [246] *((word*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VY + (byte~) startProcessing::$22) ← (word) $3c
  [247] *((byte*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_ID + (byte~) startProcessing::$22) ← (byte) startProcessing::freeIdx#2
  [248] *((byte*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_PTR + (byte~) startProcessing::$22) ← (byte) startProcessing::spritePtr#0
  [249] *((byte*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_COL + (byte~) startProcessing::$22) ← (byte) startProcessing::spriteCol#0
  [250] *((byte*)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS + (byte~) startProcessing::$22) ← (const byte) STATUS_NEW
  [251] *((byte**)(const struct ProcessingSprite*) PROCESSING+(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_SCREENPTR + (byte~) startProcessing::$22) ← (byte*) startProcessing::screenPtr#0
  to:startProcessing::@return
startProcessing::@return: scope:[startProcessing]  from startProcessing::@7
  [252] return 
  to:@return
startProcessing::@8: scope:[startProcessing]  from startProcessing::@4
  [253] (byte) startProcessing::freeIdx#7 ← (byte) startProcessing::freeIdx#2
  to:startProcessing::@1
startProcessing::@3: scope:[startProcessing]  from startProcessing::@2
  [254] (byte) startProcessing::i#1 ← ++ (byte) startProcessing::i#2
  [255] if((byte) startProcessing::i#1!=(const nomodify byte) NUM_PROCESSING-(byte) 1+(byte) 1) goto startProcessing::@2
  to:startProcessing::@9
startProcessing::@9: scope:[startProcessing]  from startProcessing::@3
  [256] (byte) startProcessing::freeIdx#8 ← (byte) startProcessing::freeIdx#6
  to:startProcessing::@4

(word()) atan2_16((signed word) atan2_16::x , (signed word) atan2_16::y)
atan2_16: scope:[atan2_16]  from init_angle_screen::@3
  [257] if((signed word) atan2_16::y#0>=(signed byte) 0) goto atan2_16::@1
  to:atan2_16::@2
atan2_16::@2: scope:[atan2_16]  from atan2_16
  [258] (signed word~) atan2_16::$2 ← - (signed word) atan2_16::y#0
  to:atan2_16::@3
atan2_16::@3: scope:[atan2_16]  from atan2_16::@1 atan2_16::@2
  [259] (signed word) atan2_16::yi#0 ← phi( atan2_16::@1/(signed word) atan2_16::yi#16 atan2_16::@2/(signed word~) atan2_16::$2 )
  [260] if((signed word) atan2_16::x#0>=(signed byte) 0) goto atan2_16::@4
  to:atan2_16::@5
atan2_16::@5: scope:[atan2_16]  from atan2_16::@3
  [261] (signed word~) atan2_16::$7 ← - (signed word) atan2_16::x#0
  to:atan2_16::@6
atan2_16::@6: scope:[atan2_16]  from atan2_16::@4 atan2_16::@5
  [262] (signed word) atan2_16::xi#0 ← phi( atan2_16::@4/(signed word) atan2_16::xi#13 atan2_16::@5/(signed word~) atan2_16::$7 )
  to:atan2_16::@10
atan2_16::@10: scope:[atan2_16]  from atan2_16::@19 atan2_16::@6
  [263] (word) atan2_16::angle#12 ← phi( atan2_16::@19/(word) atan2_16::angle#13 atan2_16::@6/(word) 0 )
  [263] (byte) atan2_16::i#2 ← phi( atan2_16::@19/(byte) atan2_16::i#1 atan2_16::@6/(byte) 0 )
  [263] (signed word) atan2_16::xi#3 ← phi( atan2_16::@19/(signed word) atan2_16::xi#8 atan2_16::@6/(signed word) atan2_16::xi#0 )
  [263] (signed word) atan2_16::yi#3 ← phi( atan2_16::@19/(signed word) atan2_16::yi#8 atan2_16::@6/(signed word) atan2_16::yi#0 )
  [264] if((signed word) atan2_16::yi#3!=(signed byte) 0) goto atan2_16::@11
  to:atan2_16::@12
atan2_16::@12: scope:[atan2_16]  from atan2_16::@10 atan2_16::@19
  [265] (word) atan2_16::angle#6 ← phi( atan2_16::@10/(word) atan2_16::angle#12 atan2_16::@19/(word) atan2_16::angle#13 )
  [266] (word) atan2_16::angle#1 ← (word) atan2_16::angle#6 >> (byte) 1
  [267] if((signed word) atan2_16::x#0>=(signed byte) 0) goto atan2_16::@7
  to:atan2_16::@21
atan2_16::@21: scope:[atan2_16]  from atan2_16::@12
  [268] (word) atan2_16::angle#4 ← (word) $8000 - (word) atan2_16::angle#1
  to:atan2_16::@7
atan2_16::@7: scope:[atan2_16]  from atan2_16::@12 atan2_16::@21
  [269] (word) atan2_16::angle#11 ← phi( atan2_16::@12/(word) atan2_16::angle#1 atan2_16::@21/(word) atan2_16::angle#4 )
  [270] if((signed word) atan2_16::y#0>=(signed byte) 0) goto atan2_16::@8
  to:atan2_16::@9
atan2_16::@9: scope:[atan2_16]  from atan2_16::@7
  [271] (word) atan2_16::angle#5 ← - (word) atan2_16::angle#11
  to:atan2_16::@8
atan2_16::@8: scope:[atan2_16]  from atan2_16::@7 atan2_16::@9
  [272] (word) atan2_16::return#0 ← phi( atan2_16::@7/(word) atan2_16::angle#11 atan2_16::@9/(word) atan2_16::angle#5 )
  to:atan2_16::@return
atan2_16::@return: scope:[atan2_16]  from atan2_16::@8
  [273] return 
  to:@return
atan2_16::@11: scope:[atan2_16]  from atan2_16::@10
  [274] (byte) atan2_16::shift#5 ← (byte) atan2_16::i#2
  [275] (signed word) atan2_16::xd#10 ← (signed word) atan2_16::xi#3
  [276] (signed word) atan2_16::yd#10 ← (signed word) atan2_16::yi#3
  to:atan2_16::@13
atan2_16::@13: scope:[atan2_16]  from atan2_16::@11 atan2_16::@14
  [277] (signed word) atan2_16::yd#3 ← phi( atan2_16::@11/(signed word) atan2_16::yd#10 atan2_16::@14/(signed word) atan2_16::yd#1 )
  [277] (signed word) atan2_16::xd#3 ← phi( atan2_16::@11/(signed word) atan2_16::xd#10 atan2_16::@14/(signed word) atan2_16::xd#1 )
  [277] (byte) atan2_16::shift#2 ← phi( atan2_16::@11/(byte) atan2_16::shift#5 atan2_16::@14/(byte) atan2_16::shift#1 )
  [278] if((byte) atan2_16::shift#2>=(byte) 2) goto atan2_16::@14
  to:atan2_16::@15
atan2_16::@15: scope:[atan2_16]  from atan2_16::@13
  [279] if((byte) 0==(byte) atan2_16::shift#2) goto atan2_16::@17
  to:atan2_16::@16
atan2_16::@16: scope:[atan2_16]  from atan2_16::@15
  [280] (signed word) atan2_16::xd#2 ← (signed word) atan2_16::xd#3 >> (signed byte) 1
  [281] (signed word) atan2_16::yd#2 ← (signed word) atan2_16::yd#3 >> (signed byte) 1
  to:atan2_16::@17
atan2_16::@17: scope:[atan2_16]  from atan2_16::@15 atan2_16::@16
  [282] (signed word) atan2_16::xd#5 ← phi( atan2_16::@15/(signed word) atan2_16::xd#3 atan2_16::@16/(signed word) atan2_16::xd#2 )
  [282] (signed word) atan2_16::yd#5 ← phi( atan2_16::@15/(signed word) atan2_16::yd#3 atan2_16::@16/(signed word) atan2_16::yd#2 )
  [283] if((signed word) atan2_16::yi#3>=(signed byte) 0) goto atan2_16::@18
  to:atan2_16::@20
atan2_16::@20: scope:[atan2_16]  from atan2_16::@17
  [284] (signed word) atan2_16::xi#2 ← (signed word) atan2_16::xi#3 - (signed word) atan2_16::yd#5
  [285] (signed word) atan2_16::yi#2 ← (signed word) atan2_16::yi#3 + (signed word) atan2_16::xd#5
  [286] (byte~) atan2_16::$23 ← (byte) atan2_16::i#2 << (byte) 1
  [287] (word) atan2_16::angle#3 ← (word) atan2_16::angle#12 - *((const word*) CORDIC_ATAN2_ANGLES_16 + (byte~) atan2_16::$23)
  to:atan2_16::@19
atan2_16::@19: scope:[atan2_16]  from atan2_16::@18 atan2_16::@20
  [288] (signed word) atan2_16::xi#8 ← phi( atan2_16::@18/(signed word) atan2_16::xi#1 atan2_16::@20/(signed word) atan2_16::xi#2 )
  [288] (word) atan2_16::angle#13 ← phi( atan2_16::@18/(word) atan2_16::angle#2 atan2_16::@20/(word) atan2_16::angle#3 )
  [288] (signed word) atan2_16::yi#8 ← phi( atan2_16::@18/(signed word) atan2_16::yi#1 atan2_16::@20/(signed word) atan2_16::yi#2 )
  [289] (byte) atan2_16::i#1 ← ++ (byte) atan2_16::i#2
  [290] if((byte) atan2_16::i#1==(const nomodify byte) CORDIC_ITERATIONS_16-(byte) 1+(byte) 1) goto atan2_16::@12
  to:atan2_16::@10
atan2_16::@18: scope:[atan2_16]  from atan2_16::@17
  [291] (signed word) atan2_16::xi#1 ← (signed word) atan2_16::xi#3 + (signed word) atan2_16::yd#5
  [292] (signed word) atan2_16::yi#1 ← (signed word) atan2_16::yi#3 - (signed word) atan2_16::xd#5
  [293] (byte~) atan2_16::$22 ← (byte) atan2_16::i#2 << (byte) 1
  [294] (word) atan2_16::angle#2 ← (word) atan2_16::angle#12 + *((const word*) CORDIC_ATAN2_ANGLES_16 + (byte~) atan2_16::$22)
  to:atan2_16::@19
atan2_16::@14: scope:[atan2_16]  from atan2_16::@13
  [295] (signed word) atan2_16::xd#1 ← (signed word) atan2_16::xd#3 >> (signed byte) 2
  [296] (signed word) atan2_16::yd#1 ← (signed word) atan2_16::yd#3 >> (signed byte) 2
  [297] (byte) atan2_16::shift#1 ← (byte) atan2_16::shift#2 - (byte) 2
  to:atan2_16::@13
atan2_16::@4: scope:[atan2_16]  from atan2_16::@3
  [298] (signed word) atan2_16::xi#13 ← (signed word) atan2_16::x#0
  to:atan2_16::@6
atan2_16::@1: scope:[atan2_16]  from atan2_16
  [299] (signed word) atan2_16::yi#16 ← (signed word) atan2_16::y#0
  to:atan2_16::@3
