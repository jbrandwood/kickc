(label) @1
(label) @begin
(label) @end
(const byte*) BGCOL = (byte*) 53281
(const byte) BLACK = (number) 0
(const byte*) COLS = (byte*) 55296
(const byte) JMP = (number) $4c
(const byte[]) MESSAGE = (string) "hello world!"
(const byte) NOP = (number) $ea
(const byte*) RASTER = (byte*) 53266
(const byte*) SCREEN = (byte*) 1024
(const struct SysCall[]) SYSCALLS = { { xjmp: (const byte) JMP, syscall: &(void()) syscall1(), xnop: (const byte) NOP }, { xjmp: (const byte) JMP, syscall: &(void()) syscall2(), xnop: (const byte) NOP } }
(const struct SysCall[]) SYSCALL_RESET = { { xjmp: (const byte) JMP, syscall: &(void()) main(), xnop: (const byte) NOP } }
(void()*) SysCall::syscall
(byte) SysCall::xjmp
(byte) SysCall::xnop
(const byte*) VIC_MEMORY = (byte*) 53272
(const byte) WHITE = (number) 1
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(byte*) main::msg
(byte*) main::msg#1 msg zp[2]:2 22.0
(byte*) main::msg#2 msg zp[2]:2 11.0
(byte*) main::sc
(byte*) main::sc#1 sc zp[2]:4 11.0
(byte*) main::sc#2 sc zp[2]:4 11.0
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1.375
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:4 22.0
(byte*) memset::dst#2 dst zp[2]:4 15.333333333333332
(byte*) memset::dst#4 dst zp[2]:4 4.0
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:2 2.1666666666666665
(word) memset::num
(word) memset::num#2 num zp[2]:2 2.0
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:4
(void()) syscall1()
(label) syscall1::@return
(void()) syscall2()
(label) syscall2::@return

zp[2]:2 [ memset::num#2 memset::end#0 main::msg#2 main::msg#1 ]
zp[2]:4 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 main::sc#2 main::sc#1 ]
reg byte x [ memset::c#4 ]
