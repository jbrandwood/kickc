
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call assertType 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call assertType 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call assertType 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [6] phi()
  [7] call assertType 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [8] phi()
  [9] call assertType 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [10] phi()
  [11] call assertType 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [12] phi()
  [13] call assertType 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [14] phi()
  [15] call assertType 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [16] phi()
  [17] call assertType 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [18] phi()
  [19] call assertType 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [20] phi()
  [21] call assertType 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [22] phi()
  [23] call assertType 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [24] phi()
  [25] call assertType 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [26] phi()
  [27] call assertType 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [28] phi()
  [29] call assertType 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [30] phi()
  [31] call assertType 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [32] phi()
  [33] call assertType 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [34] phi()
  [35] call assertType 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [36] phi()
  [37] call assertType 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [38] phi()
  [39] call assertType 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [40] phi()
  [41] call assertType 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [42] phi()
  [43] call assertType 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [44] phi()
  [45] call assertType 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [46] phi()
  [47] call assertType 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [48] phi()
  [49] call assertType 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [50] phi()
  [51] call assertType 
  to:main::@26
main::@26: scope:[main]  from main::@25
  [52] phi()
  [53] call assertType 
  to:main::@27
main::@27: scope:[main]  from main::@26
  [54] phi()
  [55] call assertType 
  to:main::@28
main::@28: scope:[main]  from main::@27
  [56] phi()
  [57] call assertType 
  to:main::@29
main::@29: scope:[main]  from main::@28
  [58] phi()
  [59] call assertType 
  to:main::@30
main::@30: scope:[main]  from main::@29
  [60] phi()
  [61] call assertType 
  to:main::@31
main::@31: scope:[main]  from main::@30
  [62] phi()
  [63] call assertType 
  to:main::@32
main::@32: scope:[main]  from main::@31
  [64] phi()
  [65] call assertType 
  to:main::@33
main::@33: scope:[main]  from main::@32
  [66] phi()
  [67] call assertType 
  to:main::@34
main::@34: scope:[main]  from main::@33
  [68] phi()
  [69] call assertType 
  to:main::@return
main::@return: scope:[main]  from main::@34
  [70] return 
  to:@return

(void()) assertType((byte) assertType::t1 , (byte) assertType::t2)
assertType: scope:[assertType]  from main main::@1 main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@22 main::@23 main::@24 main::@25 main::@26 main::@27 main::@28 main::@29 main::@3 main::@30 main::@31 main::@32 main::@33 main::@34 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [71] (byte) idx#80 ← phi( main/(byte) 0 main::@1/(byte) idx#39 main::@10/(byte) idx#39 main::@11/(byte) idx#39 main::@12/(byte) idx#39 main::@13/(byte) idx#39 main::@14/(byte) idx#39 main::@15/(byte) idx#39 main::@16/(byte) idx#39 main::@17/(byte) idx#39 main::@18/(byte) idx#39 main::@19/(byte) idx#39 main::@2/(byte) idx#39 main::@20/(byte) idx#39 main::@21/(byte) $50 main::@22/(byte) idx#39 main::@23/(byte) idx#39 main::@24/(byte) idx#39 main::@25/(byte) idx#39 main::@26/(byte) idx#39 main::@27/(byte) idx#39 main::@28/(byte) idx#39 main::@29/(byte) idx#39 main::@3/(byte) idx#39 main::@30/(byte) idx#39 main::@31/(byte) idx#39 main::@32/(byte) idx#39 main::@33/(byte) idx#39 main::@34/(byte) idx#39 main::@4/(byte) idx#39 main::@5/(byte) idx#39 main::@6/(byte) idx#39 main::@7/(byte) idx#39 main::@8/(byte) idx#39 main::@9/(byte) $28 )
  [71] (byte) assertType::t2#35 ← phi( main/(const byte) TYPEID_SIGNED_BYTE main::@1/(const byte) TYPEID_SIGNED_WORD main::@10/(const byte) TYPEID_BYTE main::@11/(const byte) TYPEID_WORD main::@12/(const byte) TYPEID_WORD main::@13/(const byte) TYPEID_DWORD main::@14/(const byte) TYPEID_WORD main::@15/(const byte) TYPEID_WORD main::@16/(const byte) TYPEID_DWORD main::@17/(const byte) TYPEID_DWORD main::@18/(const byte) TYPEID_DWORD main::@19/(const byte) TYPEID_DWORD main::@2/(const byte) TYPEID_SIGNED_DWORD main::@20/(const byte) TYPEID_DWORD main::@21/(const byte) TYPEID_BYTE main::@22/(const byte) TYPEID_BYTE main::@23/(const byte) TYPEID_BYTE main::@24/(const byte) TYPEID_WORD main::@25/(const byte) TYPEID_WORD main::@26/(const byte) TYPEID_DWORD main::@27/(const byte) TYPEID_WORD main::@28/(const byte) TYPEID_WORD main::@29/(const byte) TYPEID_WORD main::@3/(const byte) TYPEID_SIGNED_WORD main::@30/(const byte) TYPEID_DWORD main::@31/(const byte) TYPEID_DWORD main::@32/(const byte) TYPEID_DWORD main::@33/(const byte) TYPEID_DWORD main::@34/(const byte) TYPEID_DWORD main::@4/(const byte) TYPEID_SIGNED_WORD main::@5/(const byte) TYPEID_SIGNED_DWORD main::@6/(const byte) TYPEID_SIGNED_DWORD main::@7/(const byte) TYPEID_SIGNED_DWORD main::@8/(const byte) TYPEID_SIGNED_DWORD main::@9/(const byte) TYPEID_BYTE )
  [71] (byte) assertType::t1#35 ← phi( main/(const byte) TYPEID_SIGNED_BYTE main::@1/(const byte) TYPEID_SIGNED_WORD main::@10/(const byte) TYPEID_BYTE main::@11/(const byte) TYPEID_WORD main::@12/(const byte) TYPEID_WORD main::@13/(const byte) TYPEID_DWORD main::@14/(const byte) TYPEID_WORD main::@15/(const byte) TYPEID_WORD main::@16/(const byte) TYPEID_DWORD main::@17/(const byte) TYPEID_DWORD main::@18/(const byte) TYPEID_DWORD main::@19/(const byte) TYPEID_DWORD main::@2/(const byte) TYPEID_SIGNED_DWORD main::@20/(const byte) TYPEID_DWORD main::@21/(const byte) TYPEID_BYTE main::@22/(const byte) TYPEID_BYTE main::@23/(const byte) TYPEID_BYTE main::@24/(const byte) TYPEID_WORD main::@25/(const byte) TYPEID_WORD main::@26/(const byte) TYPEID_DWORD main::@27/(const byte) TYPEID_WORD main::@28/(const byte) TYPEID_WORD main::@29/(const byte) TYPEID_WORD main::@3/(const byte) TYPEID_SIGNED_WORD main::@30/(const byte) TYPEID_DWORD main::@31/(const byte) TYPEID_DWORD main::@32/(const byte) TYPEID_DWORD main::@33/(const byte) TYPEID_DWORD main::@34/(const byte) TYPEID_SIGNED_DWORD main::@4/(const byte) TYPEID_SIGNED_WORD main::@5/(const byte) TYPEID_SIGNED_DWORD main::@6/(const byte) TYPEID_SIGNED_DWORD main::@7/(const byte) TYPEID_SIGNED_DWORD main::@8/(const byte) TYPEID_SIGNED_DWORD main::@9/(const byte) TYPEID_BYTE )
  [72] if((byte) assertType::t1#35==(byte) assertType::t2#35) goto assertType::@1
  to:assertType::@3
assertType::@3: scope:[assertType]  from assertType
  [73] *((const nomodify byte*) COLS + (byte) idx#80) ← (const nomodify byte) RED
  to:assertType::@2
assertType::@2: scope:[assertType]  from assertType::@1 assertType::@3
  [74] *((const nomodify byte*) SCREEN + (byte) idx#80) ← (byte) assertType::t1#35
  [75] (byte) idx#39 ← ++ (byte) idx#80
  to:assertType::@return
assertType::@return: scope:[assertType]  from assertType::@2
  [76] return 
  to:@return
assertType::@1: scope:[assertType]  from assertType
  [77] *((const nomodify byte*) COLS + (byte) idx#80) ← (const nomodify byte) GREEN
  to:assertType::@2
