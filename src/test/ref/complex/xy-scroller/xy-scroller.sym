const nomodify byte BLACK = 0
const nomodify byte* MAIN_CHARSET = (byte*) 4096
const nomodify byte* MAIN_SCREEN0 = (byte*) 14336
const nomodify byte* MAIN_SCREEN1 = (byte*) 15360
const byte OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
const byte OFFSET_STRUCT_MOS6569_VICII_CONTROL1 = $11
const byte OFFSET_STRUCT_MOS6569_VICII_CONTROL2 = $16
const byte OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
const byte OFFSET_STRUCT_MOS6569_VICII_RASTER = $12
const byte* PETSCII_ART[$8c*$7d]  = kickasm {{ .var petsciiPic = LoadPicture("cml.png")
    .print "width: "+petsciiPic.width + " height: "+petsciiPic.height
    .for (var y=0; y<petsciiPic.height; y++)
        .for (var x=0; x<petsciiPic.width; x++)
            .byte petsciiPic.getPixel(x,y)==0?' ':$a0;
 }}
const nomodify word SINSIZE = $800
const signed word* SINTAB[SINSIZE]  = kickasm(  uses SINSIZE) {{ .fillword SINSIZE, 399*sin(i*2*PI/SINSIZE)
 }}
const nomodify struct MOS6569_VICII* VICII = (struct MOS6569_VICII*) 53248
const nomodify byte WHITE = 1
void main()
byte*~ main::$13 zp[2]:3 11.0
byte~ main::$41 zp[1]:21 11.0
byte~ main::$42 reg byte a 22.0
byte~ main::$43 reg byte a 22.0
byte~ main::$44 zp[1]:27 11.0
byte~ main::$45 reg byte a 22.0
byte~ main::$46 reg byte a 22.0
word~ main::$5 zp[2]:17 11.0
word~ main::$9 zp[2]:15 11.0
byte main::i
byte main::i#1 reg byte y 202.0
byte main::i#2 reg byte y 168.33333333333331
byte main::i1
byte main::i1#1 reg byte x 202.0
byte main::i1#2 reg byte x 60.599999999999994
signed byte main::movement
signed byte main::movement#3 reg byte x 6.6000000000000005
signed byte main::movement#4 reg byte x 3.6666666666666665
byte* main::petscii
byte* main::petscii#1 petscii zp[2]:5 11.0
byte* main::petscii#10 petscii zp[2]:5 24.6
byte* main::petscii#11 petscii zp[2]:5 33.0
byte* main::petscii#2 petscii zp[2]:5 11.0
byte* main::petscii#3 petscii zp[2]:5 11.0
byte* main::petscii#4 petscii zp[2]:5 22.0
byte* main::petscii#5 petscii zp[2]:5 101.0
byte* main::petscii#7 petscii zp[2]:5 78.5
byte* main::screen_active
byte* main::screen_active#0 screen_active zp[2]:3 4.4
byte* main::screen_hidden
byte* main::screen_hidden#0 screen_hidden zp[2]:9 1.5714285714285714
byte* main::scrn
byte* main::scrn#1 scrn zp[2]:7 22.0
byte* main::scrn#10 scrn zp[2]:7 24.6
byte* main::scrn#11 scrn_1 zp[2]:9 33.0
byte* main::scrn#13 scrn zp[2]:7 22.0
byte* main::scrn#3 scrn_1 zp[2]:9 22.0
byte* main::scrn#5 scrn_1 zp[2]:9 67.33333333333333
byte* main::scrn#7 scrn_1 zp[2]:9 104.66666666666666
byte* main::toD0181_gfx
byte main::toD0181_return
const byte main::toD0181_return#0 toD0181_return = >(word)MAIN_SCREEN0&$3fff*4|>(word)MAIN_CHARSET/4&$f
byte* main::toD0181_screen
byte* main::toD0182_gfx
byte main::toD0182_return
const byte main::toD0182_return#0 toD0182_return = >(word)MAIN_SCREEN1&$3fff*4|>(word)MAIN_CHARSET/4&$f
byte* main::toD0182_screen
byte* main::toD0183_gfx
byte main::toD0183_return
const byte main::toD0183_return#0 toD0183_return = >(word)MAIN_SCREEN0&$3fff*4|>(word)MAIN_CHARSET/4&$f
byte* main::toD0183_screen
signed byte main::x_movement
signed byte main::x_movement#0 x_movement zp[1]:20 1.3333333333333333
word main::x_pos_coarse_old
word main::x_pos_coarse_old#0 x_pos_coarse_old zp[2]:15 2.4444444444444446
signed byte main::y_movement
signed byte main::y_movement#0 y_movement zp[1]:19 2.75
word main::y_pos_coarse_old
word main::y_pos_coarse_old#0 y_pos_coarse_old zp[2]:17 11.0
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
const byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:11 202.0
byte* memset::dst#2 dst zp[2]:11 134.66666666666666
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)MAIN_SCREEN0
void next_position()
word~ next_position::$12 zp[2]:22 202.0
word~ next_position::$13 zp[2]:24 202.0
byte~ next_position::$15 reg byte a 202.0
byte~ next_position::$17 reg byte a 202.0
signed word*~ next_position::$18 zp[2]:22 202.0
signed word*~ next_position::$19 zp[2]:24 202.0
word~ next_position::$4 zp[2]:22 202.0
word~ next_position::$8 zp[2]:24 202.0
word next_position::x_pos_u
word next_position::x_pos_u#0 x_pos_u zp[2]:22 67.33333333333333
word next_position::y_pos_u
word next_position::y_pos_u#0 y_pos_u zp[2]:24 67.33333333333333
byte* petscii_ptr(word petscii_ptr::row_x , word petscii_ptr::row_y)
word~ petscii_ptr::$0 zp[2]:15 202.0
byte*~ petscii_ptr::$1 zp[2]:15 202.0
word~ petscii_ptr::$3 zp[2]:38 202.0
word~ petscii_ptr::$4 zp[2]:38 202.0
word~ petscii_ptr::$5 zp[2]:38 202.0
word~ petscii_ptr::$6 zp[2]:15 202.0
byte* petscii_ptr::return
byte* petscii_ptr::return#0 return zp[2]:5 22.0
byte* petscii_ptr::return#1 return zp[2]:5 22.0
byte* petscii_ptr::return#10 return zp[2]:5 24.166666666666664
byte* petscii_ptr::return#2 return zp[2]:5 22.0
byte* petscii_ptr::return#3 return zp[2]:5 22.0
word petscii_ptr::row_x
word petscii_ptr::row_x#0 row_x zp[2]:5 11.0
word petscii_ptr::row_x#1 row_x zp[2]:5 11.0
word petscii_ptr::row_x#2 row_x zp[2]:5 11.0
word petscii_ptr::row_x#3 row_x zp[2]:5 11.0
word petscii_ptr::row_x#4 row_x zp[2]:5 20.714285714285715
word petscii_ptr::row_y
word petscii_ptr::row_y#0 row_y zp[2]:15 22.0
word petscii_ptr::row_y#1 row_y zp[2]:15 22.0
word petscii_ptr::row_y#2 row_y zp[2]:15 22.0
word petscii_ptr::row_y#3 row_y zp[2]:15 22.0
word petscii_ptr::row_y#4 row_y zp[2]:15 86.75
byte screen_buffer
byte screen_buffer#0 screen_buffer zp[1]:2 22.0
byte screen_buffer#12 screen_buffer zp[1]:2 0.873015873015873
byte screen_buffer#26 screen_buffer zp[1]:2 13.666666666666666
void screencpy(byte* screencpy::dst , byte* screencpy::src)
byte* screencpy::dst
byte* screencpy::dst#0 dst zp[2]:9 687.6666666666666
byte* screencpy::dst_250
byte* screencpy::dst_250#0 dst_250 zp[2]:28 841.8333333333333
byte* screencpy::dst_500
byte* screencpy::dst_500#0 dst_500 zp[2]:32 1010.2
byte* screencpy::dst_750
byte* screencpy::dst_750#0 dst_750 zp[2]:36 1262.75
byte screencpy::i
byte screencpy::i#1 reg byte y 20002.0
byte screencpy::i#2 reg byte y 18335.166666666668
byte* screencpy::src
byte* screencpy::src#0 src zp[2]:3 736.7857142857143
byte* screencpy::src_250
byte* screencpy::src_250#0 src_250 zp[2]:38 777.076923076923
byte* screencpy::src_500
byte* screencpy::src_500#0 src_500 zp[2]:30 918.3636363636363
byte* screencpy::src_750
byte* screencpy::src_750#0 src_750 zp[2]:34 1122.4444444444443
signed word x_pos
signed word x_pos#11 x_pos zp[2]:22 25.25
word x_pos_coarse
word x_pos_coarse#17 x_pos_coarse zp[2]:22 1.8977272727272727
byte x_pos_fine
byte x_pos_fine#12 x_pos_fine zp[1]:26 1.435897435897436
word x_sin_idx
word x_sin_idx#12 x_sin_idx zp[2]:11 112.0
word x_sin_idx#13 x_sin_idx zp[2]:11 202.0
word x_sin_idx#14 x_sin_idx zp[2]:11 2.9904761904761905
word x_sin_idx#4 x_sin_idx zp[2]:11 202.0
signed word y_pos
signed word y_pos#11 y_pos zp[2]:24 16.833333333333332
word y_pos_coarse
word y_pos_coarse#16 y_pos_coarse zp[2]:24 1.9880952380952381
byte y_pos_fine
byte y_pos_fine#12 y_pos_fine zp[1]:27 1.6231884057971016
word y_sin_idx
word y_sin_idx#12 y_sin_idx zp[2]:13 22.4
word y_sin_idx#13 y_sin_idx zp[2]:13 3.108910891089109
word y_sin_idx#14 y_sin_idx zp[2]:13 202.0
word y_sin_idx#4 y_sin_idx zp[2]:13 202.0

zp[1]:2 [ screen_buffer#12 screen_buffer#26 screen_buffer#0 ]
reg byte x [ main::movement#4 ]
zp[2]:3 [ main::$13 main::screen_active#0 screencpy::src#0 ]
zp[2]:5 [ main::petscii#10 main::petscii#1 main::petscii#2 petscii_ptr::return#1 petscii_ptr::return#0 petscii_ptr::row_x#4 petscii_ptr::row_x#0 petscii_ptr::row_x#2 petscii_ptr::row_x#1 petscii_ptr::row_x#3 petscii_ptr::return#10 main::petscii#7 main::petscii#11 main::petscii#3 main::petscii#4 main::petscii#5 petscii_ptr::return#3 petscii_ptr::return#2 ]
zp[2]:7 [ main::scrn#10 main::scrn#1 main::scrn#13 ]
reg byte y [ main::i#2 main::i#1 ]
reg byte x [ main::i1#2 main::i1#1 ]
zp[2]:9 [ main::scrn#7 main::scrn#11 main::scrn#3 main::screen_hidden#0 main::scrn#5 screencpy::dst#0 ]
zp[2]:11 [ x_sin_idx#12 x_sin_idx#14 x_sin_idx#13 x_sin_idx#4 memset::dst#2 memset::dst#1 ]
zp[2]:13 [ y_sin_idx#12 y_sin_idx#13 y_sin_idx#14 y_sin_idx#4 ]
reg byte y [ screencpy::i#2 screencpy::i#1 ]
zp[2]:15 [ main::x_pos_coarse_old#0 main::$9 petscii_ptr::row_y#4 petscii_ptr::row_y#0 petscii_ptr::row_y#2 petscii_ptr::row_y#1 petscii_ptr::row_y#3 petscii_ptr::$6 petscii_ptr::$0 petscii_ptr::$1 ]
zp[2]:17 [ main::y_pos_coarse_old#0 main::$5 ]
zp[1]:19 [ main::y_movement#0 ]
zp[1]:20 [ main::x_movement#0 ]
reg byte x [ main::movement#3 ]
zp[1]:21 [ main::$41 ]
reg byte a [ main::$42 ]
reg byte a [ main::$43 ]
reg byte a [ main::$45 ]
reg byte a [ main::$46 ]
zp[2]:22 [ next_position::$12 next_position::$18 x_pos#11 next_position::$4 next_position::x_pos_u#0 x_pos_coarse#17 ]
zp[2]:24 [ next_position::$13 next_position::$19 y_pos#11 next_position::$8 next_position::y_pos_u#0 y_pos_coarse#16 ]
reg byte a [ next_position::$15 ]
zp[1]:26 [ x_pos_fine#12 ]
reg byte a [ next_position::$17 ]
zp[1]:27 [ y_pos_fine#12 main::$44 ]
zp[2]:28 [ screencpy::dst_250#0 ]
zp[2]:30 [ screencpy::src_500#0 ]
zp[2]:32 [ screencpy::dst_500#0 ]
zp[2]:34 [ screencpy::src_750#0 ]
zp[2]:36 [ screencpy::dst_750#0 ]
zp[2]:38 [ petscii_ptr::$3 petscii_ptr::$4 petscii_ptr::$5 screencpy::src_250#0 ]
