const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void main()
const byte* msg[]  = "hello world! "
const byte* msg2[]  = "hello c64! "
const byte* msg3[]  = "hello 2017! "
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 1102.0
byte* print_char_cursor
byte* print_char_cursor#1 print_char_cursor zp[2]:4 147.66666666666669
byte* print_char_cursor#21 print_char_cursor zp[2]:4 275.5
byte* print_char_cursor#36 print_char_cursor zp[2]:4 15.0
byte* print_char_cursor#37 print_char_cursor zp[2]:4 4.0
byte* print_char_cursor#38 print_char_cursor zp[2]:4 4.0
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:6 28.272727272727273
byte* print_line_cursor#18 print_line_cursor zp[2]:6 15.0
byte* print_line_cursor#9 print_line_cursor zp[2]:6 213.0
void print_ln()
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:2 202.0
byte* print_str::str#4 str zp[2]:2 103.75
byte* print_str::str#7 str zp[2]:2 11.0

zp[2]:2 [ print_str::str#4 print_str::str#7 print_str::str#0 ]
zp[2]:4 [ print_char_cursor#1 print_char_cursor#36 print_char_cursor#37 print_char_cursor#38 print_char_cursor#21 ]
zp[2]:6 [ print_line_cursor#9 print_line_cursor#18 print_line_cursor#0 ]
reg byte a [ print_char::ch#0 ]
