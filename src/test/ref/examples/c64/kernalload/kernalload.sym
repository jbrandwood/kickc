constant const byte GREEN = 5
constant byte* const LOAD_SPRITE = (byte*) 12288
constant const word OFFSET_SPRITE_PTRS = $3f8
constant byte OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
constant byte OFFSET_STRUCT_MOS6569_VICII_SPRITES_ENABLE = $15
constant byte* const SCREEN = (byte*) 1024
constant byte* SPRITE[]  = kickasm {{ .var pic = LoadPicture("sprite.png", List().add($000000, $ffffff))
    .for (var y=0; y<21; y++)
        .for (var x=0;x<3; x++)
            .byte pic.getSinglecolorByte(x,y)
 }}
constant byte* const SPRITES_COLOR = (byte*) 53287
constant byte* const SPRITES_PTR = SCREEN+OFFSET_SPRITE_PTRS
constant byte* const SPRITES_XPOS = (byte*) 53248
constant byte* const SPRITES_YPOS = (byte*) 53249
constant struct MOS6569_VICII* const VICII = (struct MOS6569_VICII*) 53248
void error(volatile byte error::err)
volatile byte error::err loadstore zp[1]:6 2.0
byte load(byte* volatile load::address , volatile byte load::verify)
byte* volatile load::address loadstore zp[2]:10 3.6666666666666665
byte load::return
byte load::return#0 reg byte a 22.0
byte load::return#1 reg byte a 202.0
byte load::return#2 reg byte a 37.33333333333333
volatile byte load::status loadstore zp[1]:14 101.0
volatile byte load::verify loadstore zp[1]:12 5.5
byte loadFileToMemory(byte loadFileToMemory::device , byte* loadFileToMemory::filename , byte* loadFileToMemory::address)
byte* loadFileToMemory::address
byte loadFileToMemory::device
constant byte loadFileToMemory::device#0 device = 8
byte* loadFileToMemory::filename
byte loadFileToMemory::return
byte loadFileToMemory::return#0 reg byte a 4.0
byte loadFileToMemory::return#1 reg byte a 4.333333333333333
void main()
constant byte* main::filename[7]  = "SPRITE"
byte main::status
byte main::status#0 reg byte x 2.0
byte main::toSpritePtr1_return
constant byte main::toSpritePtr1_return#0 toSpritePtr1_return = (byte)(word)LOAD_SPRITE/$40
byte* main::toSpritePtr1_sprite
void setlfs(volatile byte setlfs::device)
volatile byte setlfs::device loadstore zp[1]:9 11.0
void setnam(byte* volatile setnam::filename)
word~ setnam::$0 zp[2]:4 101.0
byte* volatile setnam::filename loadstore zp[2]:7 18.666666666666664
volatile byte setnam::filename_len loadstore zp[1]:13 101.0
word strlen(byte* strlen::str)
word strlen::len
word strlen::len#1 len zp[2]:4 10001.0
word strlen::len#2 len zp[2]:4 5025.75
word strlen::return
word strlen::return#2 return zp[2]:4 202.0
byte* strlen::str
byte* strlen::str#0 str zp[2]:2 20002.0
byte* strlen::str#1 str zp[2]:2 551.0
byte* strlen::str#2 str zp[2]:2 10334.666666666666

zp[2]:2 [ strlen::str#2 strlen::str#1 strlen::str#0 ]
zp[2]:4 [ strlen::len#2 strlen::len#1 strlen::return#2 setnam::$0 ]
reg byte a [ loadFileToMemory::return#0 ]
reg byte x [ main::status#0 ]
zp[1]:6 [ error::err ]
zp[2]:7 [ setnam::filename ]
zp[1]:9 [ setlfs::device ]
zp[2]:10 [ load::address ]
zp[1]:12 [ load::verify ]
reg byte a [ load::return#0 ]
reg byte a [ loadFileToMemory::return#1 ]
zp[1]:13 [ setnam::filename_len ]
zp[1]:14 [ load::status ]
reg byte a [ load::return#1 ]
reg byte a [ load::return#2 ]
