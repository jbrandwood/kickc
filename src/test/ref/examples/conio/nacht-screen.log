Fixing struct type size struct $0 to 41
Fixing struct type SIZE_OF struct $0 to 41
Fixing struct type SIZE_OF struct $0 to 41
Setting inferred volatile on symbol affected by address-of (void~) main::$0 ← call screensize &(byte) XSize &(byte) YSize 
Setting inferred volatile on symbol affected by address-of (void~) main::$0 ← call screensize &(volatile byte) XSize &(byte) YSize 
Inlined call (byte~) vicSelectGfxBank::$0 ← call toDd00 (byte*) vicSelectGfxBank::gfx 
Inlined call call __init 

CONTROL FLOW GRAPH SSA

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  (word) memcpy::num#2 ← phi( cscroll::@3/(word) memcpy::num#0 cscroll::@4/(word) memcpy::num#1 )
  (void*) memcpy::destination#2 ← phi( cscroll::@3/(void*) memcpy::destination#0 cscroll::@4/(void*) memcpy::destination#1 )
  (void*) memcpy::source#2 ← phi( cscroll::@3/(void*) memcpy::source#0 cscroll::@4/(void*) memcpy::source#1 )
  (byte*) memcpy::src#0 ← ((byte*)) (void*) memcpy::source#2
  (byte*) memcpy::dst#0 ← ((byte*)) (void*) memcpy::destination#2
  (byte*~) memcpy::$2 ← (byte*)(void*) memcpy::source#2
  (byte*~) memcpy::$0 ← (byte*~) memcpy::$2 + (word) memcpy::num#2
  (byte*) memcpy::src_end#0 ← (byte*~) memcpy::$0
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  (void*) memcpy::destination#4 ← phi( memcpy/(void*) memcpy::destination#2 memcpy::@2/(void*) memcpy::destination#5 )
  (byte*) memcpy::dst#3 ← phi( memcpy/(byte*) memcpy::dst#0 memcpy::@2/(byte*) memcpy::dst#1 )
  (byte*) memcpy::src_end#1 ← phi( memcpy/(byte*) memcpy::src_end#0 memcpy::@2/(byte*) memcpy::src_end#2 )
  (byte*) memcpy::src#2 ← phi( memcpy/(byte*) memcpy::src#0 memcpy::@2/(byte*) memcpy::src#1 )
  (bool~) memcpy::$1 ← (byte*) memcpy::src#2 != (byte*) memcpy::src_end#1
  if((bool~) memcpy::$1) goto memcpy::@2
  to:memcpy::@3
memcpy::@2: scope:[memcpy]  from memcpy::@1
  (void*) memcpy::destination#5 ← phi( memcpy::@1/(void*) memcpy::destination#4 )
  (byte*) memcpy::src_end#2 ← phi( memcpy::@1/(byte*) memcpy::src_end#1 )
  (byte*) memcpy::dst#2 ← phi( memcpy::@1/(byte*) memcpy::dst#3 )
  (byte*) memcpy::src#3 ← phi( memcpy::@1/(byte*) memcpy::src#2 )
  *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#3)
  (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#3
  to:memcpy::@1
memcpy::@3: scope:[memcpy]  from memcpy::@1
  (void*) memcpy::destination#3 ← phi( memcpy::@1/(void*) memcpy::destination#4 )
  (void*) memcpy::return#0 ← (void*) memcpy::destination#3
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@3
  (void*) memcpy::return#4 ← phi( memcpy::@3/(void*) memcpy::return#0 )
  (void*) memcpy::return#1 ← (void*) memcpy::return#4
  return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  (byte) memset::c#5 ← phi( cscroll::@5/(byte) memset::c#0 cscroll::@6/(byte) memset::c#1 )
  (void*) memset::str#4 ← phi( cscroll::@5/(void*) memset::str#0 cscroll::@6/(void*) memset::str#1 )
  (word) memset::num#2 ← phi( cscroll::@5/(word) memset::num#0 cscroll::@6/(word) memset::num#1 )
  (bool~) memset::$0 ← (word) memset::num#2 > (number) 0
  (bool~) memset::$1 ← ! (bool~) memset::$0
  if((bool~) memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@3
  (void*) memset::str#2 ← phi( memset/(void*) memset::str#4 memset::@3/(void*) memset::str#5 )
  (void*) memset::return#0 ← (void*) memset::str#2
  to:memset::@return
memset::@2: scope:[memset]  from memset
  (byte) memset::c#4 ← phi( memset/(byte) memset::c#5 )
  (word) memset::num#3 ← phi( memset/(word) memset::num#2 )
  (void*) memset::str#3 ← phi( memset/(void*) memset::str#4 )
  (byte*~) memset::$4 ← (byte*)(void*) memset::str#3
  (byte*~) memset::$2 ← (byte*~) memset::$4 + (word) memset::num#3
  (byte*) memset::end#0 ← (byte*~) memset::$2
  (byte*) memset::dst#0 ← ((byte*)) (void*) memset::str#3
  to:memset::@3
memset::@3: scope:[memset]  from memset::@2 memset::@4
  (byte) memset::c#3 ← phi( memset::@2/(byte) memset::c#4 memset::@4/(byte) memset::c#2 )
  (void*) memset::str#5 ← phi( memset::@2/(void*) memset::str#3 memset::@4/(void*) memset::str#6 )
  (byte*) memset::end#1 ← phi( memset::@2/(byte*) memset::end#0 memset::@4/(byte*) memset::end#2 )
  (byte*) memset::dst#2 ← phi( memset::@2/(byte*) memset::dst#0 memset::@4/(byte*) memset::dst#1 )
  (bool~) memset::$3 ← (byte*) memset::dst#2 != (byte*) memset::end#1
  if((bool~) memset::$3) goto memset::@4
  to:memset::@1
memset::@4: scope:[memset]  from memset::@3
  (void*) memset::str#6 ← phi( memset::@3/(void*) memset::str#5 )
  (byte*) memset::end#2 ← phi( memset::@3/(byte*) memset::end#1 )
  (byte*) memset::dst#3 ← phi( memset::@3/(byte*) memset::dst#2 )
  (byte) memset::c#2 ← phi( memset::@3/(byte) memset::c#3 )
  *((byte*) memset::dst#3) ← (byte) memset::c#2
  (byte*) memset::dst#1 ← ++ (byte*) memset::dst#3
  to:memset::@3
memset::@return: scope:[memset]  from memset::@1
  (void*) memset::return#4 ← phi( memset::@1/(void*) memset::return#0 )
  (void*) memset::return#1 ← (void*) memset::return#4
  return 
  to:@return

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from MakeNiceScreen::@2
  (byte*) strlen::str#4 ← phi( MakeNiceScreen::@2/(byte*) strlen::str#1 )
  (word) strlen::len#0 ← (word) 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  (word) strlen::len#4 ← phi( strlen/(word) strlen::len#0 strlen::@2/(word) strlen::len#1 )
  (byte*) strlen::str#2 ← phi( strlen/(byte*) strlen::str#4 strlen::@2/(byte*) strlen::str#0 )
  (bool~) strlen::$0 ← (number) 0 != *((byte*) strlen::str#2)
  if((bool~) strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  (byte*) strlen::str#3 ← phi( strlen::@1/(byte*) strlen::str#2 )
  (word) strlen::len#2 ← phi( strlen::@1/(word) strlen::len#4 )
  (word) strlen::len#1 ← ++ (word) strlen::len#2
  (byte*) strlen::str#0 ← ++ (byte*) strlen::str#3
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  (word) strlen::len#3 ← phi( strlen::@1/(word) strlen::len#4 )
  (word) strlen::return#0 ← (word) strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  (word) strlen::return#3 ← phi( strlen::@3/(word) strlen::return#0 )
  (word) strlen::return#1 ← (word) strlen::return#3
  return 
  to:@return

(void()) clrscr()
clrscr: scope:[clrscr]  from MakeNiceScreen::@6 main::@2
  (byte*) clrscr::line_text#0 ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) clrscr::line_cols#0 ← (const nomodify byte*) CONIO_SCREEN_COLORS
  (byte) clrscr::l#0 ← (byte) 0
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@6
  (byte*) clrscr::line_cols#6 ← phi( clrscr/(byte*) clrscr::line_cols#0 clrscr::@6/(byte*) clrscr::line_cols#1 )
  (byte*) clrscr::line_text#6 ← phi( clrscr/(byte*) clrscr::line_text#0 clrscr::@6/(byte*) clrscr::line_text#1 )
  (byte) clrscr::l#2 ← phi( clrscr/(byte) clrscr::l#0 clrscr::@6/(byte) clrscr::l#1 )
  (bool~) clrscr::$0 ← (byte) clrscr::l#2 < (number) $19
  if((bool~) clrscr::$0) goto clrscr::@2
  to:clrscr::@3
clrscr::@2: scope:[clrscr]  from clrscr::@1
  (byte) clrscr::l#5 ← phi( clrscr::@1/(byte) clrscr::l#2 )
  (byte*) clrscr::line_cols#5 ← phi( clrscr::@1/(byte*) clrscr::line_cols#6 )
  (byte*) clrscr::line_text#5 ← phi( clrscr::@1/(byte*) clrscr::line_text#6 )
  (byte) clrscr::c#0 ← (byte) 0
  to:clrscr::@4
clrscr::@3: scope:[clrscr]  from clrscr::@1
  (byte) conio_cursor_x ← (number) 0
  (byte) conio_cursor_y ← (number) 0
  (byte*) conio_line_text ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) conio_line_color ← (const nomodify byte*) CONIO_SCREEN_COLORS
  to:clrscr::@return
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  (byte) clrscr::l#4 ← phi( clrscr::@2/(byte) clrscr::l#5 clrscr::@5/(byte) clrscr::l#6 )
  (byte*) clrscr::line_cols#4 ← phi( clrscr::@2/(byte*) clrscr::line_cols#5 clrscr::@5/(byte*) clrscr::line_cols#2 )
  (byte*) clrscr::line_text#4 ← phi( clrscr::@2/(byte*) clrscr::line_text#5 clrscr::@5/(byte*) clrscr::line_text#2 )
  (byte) clrscr::c#2 ← phi( clrscr::@2/(byte) clrscr::c#0 clrscr::@5/(byte) clrscr::c#1 )
  (bool~) clrscr::$1 ← (byte) clrscr::c#2 < (number) $28
  if((bool~) clrscr::$1) goto clrscr::@5
  to:clrscr::@6
clrscr::@5: scope:[clrscr]  from clrscr::@4
  (byte) clrscr::l#6 ← phi( clrscr::@4/(byte) clrscr::l#4 )
  (byte*) clrscr::line_cols#2 ← phi( clrscr::@4/(byte*) clrscr::line_cols#4 )
  (byte) clrscr::c#3 ← phi( clrscr::@4/(byte) clrscr::c#2 )
  (byte*) clrscr::line_text#2 ← phi( clrscr::@4/(byte*) clrscr::line_text#4 )
  *((byte*) clrscr::line_text#2 + (byte) clrscr::c#3) ← (byte) ' '
  *((byte*) clrscr::line_cols#2 + (byte) clrscr::c#3) ← (byte) conio_textcolor
  (byte) clrscr::c#1 ← ++ (byte) clrscr::c#3
  to:clrscr::@4
clrscr::@6: scope:[clrscr]  from clrscr::@4
  (byte) clrscr::l#3 ← phi( clrscr::@4/(byte) clrscr::l#4 )
  (byte*) clrscr::line_cols#3 ← phi( clrscr::@4/(byte*) clrscr::line_cols#4 )
  (byte*) clrscr::line_text#3 ← phi( clrscr::@4/(byte*) clrscr::line_text#4 )
  (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#3 + (number) $28
  (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#3 + (number) $28
  (byte) clrscr::l#1 ← ++ (byte) clrscr::l#3
  to:clrscr::@1
clrscr::@return: scope:[clrscr]  from clrscr::@3
  return 
  to:@return

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cputcxy cputsxy cscroll::@2 cvline::@3 cvlinexy
  (byte) gotoxy::x#8 ← phi( cputcxy/(byte) gotoxy::x#2 cputsxy/(byte) gotoxy::x#3 cscroll::@2/(byte) gotoxy::x#1 cvline::@3/(byte) gotoxy::x#4 cvlinexy/(byte) gotoxy::x#5 )
  (byte) gotoxy::y#6 ← phi( cputcxy/(byte) gotoxy::y#2 cputsxy/(byte) gotoxy::y#3 cscroll::@2/(byte) gotoxy::y#1 cvline::@3/(byte) gotoxy::y#4 cvlinexy/(byte) gotoxy::y#5 )
  (bool~) gotoxy::$0 ← (byte) gotoxy::y#6 > (number) $19
  (bool~) gotoxy::$1 ← ! (bool~) gotoxy::$0
  if((bool~) gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  (byte) gotoxy::y#8 ← phi( gotoxy/(byte) gotoxy::y#6 gotoxy::@3/(byte) gotoxy::y#0 )
  (byte) gotoxy::x#6 ← phi( gotoxy/(byte) gotoxy::x#8 gotoxy::@3/(byte) gotoxy::x#9 )
  (bool~) gotoxy::$2 ← (byte) gotoxy::x#6 >= (number) $28
  (bool~) gotoxy::$3 ← ! (bool~) gotoxy::$2
  if((bool~) gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  (byte) gotoxy::x#9 ← phi( gotoxy/(byte) gotoxy::x#8 )
  (byte) gotoxy::y#0 ← (number) 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  (byte) gotoxy::y#7 ← phi( gotoxy::@1/(byte) gotoxy::y#8 gotoxy::@4/(byte) gotoxy::y#9 )
  (byte) gotoxy::x#7 ← phi( gotoxy::@1/(byte) gotoxy::x#6 gotoxy::@4/(byte) gotoxy::x#0 )
  (byte) conio_cursor_x ← (byte) gotoxy::x#7
  (byte) conio_cursor_y ← (byte) gotoxy::y#7
  (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7
  (number~) gotoxy::$4 ← (word~) gotoxy::$7 * (number) $28
  (word) gotoxy::line_offset#0 ← (number~) gotoxy::$4
  (byte*~) gotoxy::$5 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::line_offset#0
  (byte*) conio_line_text ← (byte*~) gotoxy::$5
  (byte*~) gotoxy::$6 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::line_offset#0
  (byte*) conio_line_color ← (byte*~) gotoxy::$6
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  (byte) gotoxy::y#9 ← phi( gotoxy::@1/(byte) gotoxy::y#8 )
  (byte) gotoxy::x#0 ← (number) 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
screensize: scope:[screensize]  from main
  (byte*) screensize::y#1 ← phi( main/(byte*) screensize::y#0 )
  (byte*) screensize::x#1 ← phi( main/(byte*) screensize::x#0 )
  *((byte*) screensize::x#1) ← (number) $28
  *((byte*) screensize::y#1) ← (number) $19
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  return 
  to:@return

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from MakeNiceScreen::@10 MakeNiceScreen::@12 MakeNiceScreen::@14 MakeTeeLine::@2 chline::@2 cputcxy::@1 cputs::@2 cvline::@2
  (byte) cputc::c#8 ← phi( MakeNiceScreen::@10/(byte) cputc::c#5 MakeNiceScreen::@12/(byte) cputc::c#6 MakeNiceScreen::@14/(byte) cputc::c#7 MakeTeeLine::@2/(byte) cputc::c#4 chline::@2/(byte) cputc::c#2 cputcxy::@1/(byte) cputc::c#1 cputs::@2/(byte) cputc::c#0 cvline::@2/(byte) cputc::c#3 )
  (bool~) cputc::$0 ← (byte) cputc::c#8 == (byte) '
'
  if((bool~) cputc::$0) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc
  call cputln 
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc
  (byte) cputc::c#9 ← phi( cputc/(byte) cputc::c#8 )
  *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#9
  *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor
  (byte) conio_cursor_x ← ++ (byte) conio_cursor_x
  (bool~) cputc::$1 ← (byte) conio_cursor_x == (number) $28
  (bool~) cputc::$2 ← ! (bool~) cputc::$1
  if((bool~) cputc::$2) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  call cputln 
  to:cputc::@5
cputc::@5: scope:[cputc]  from cputc::@3
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@2 cputc::@4 cputc::@5
  return 
  to:@return

(void()) cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  (byte*) conio_line_text ← (byte*) conio_line_text + (number) $28
  (byte*) conio_line_color ← (byte*) conio_line_color + (number) $28
  (byte) conio_cursor_x ← (number) 0
  (byte) conio_cursor_y ← ++ (byte) conio_cursor_y
  call cscroll 
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

(void()) cscroll()
cscroll: scope:[cscroll]  from cputln
  (bool~) cscroll::$0 ← (byte) conio_cursor_y == (number) $19
  (bool~) cscroll::$1 ← ! (bool~) cscroll::$0
  if((bool~) cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  (bool~) cscroll::$7 ← (number) 0 != (byte) conio_scroll_enable
  if((bool~) cscroll::$7) goto cscroll::@3
  to:cscroll::@2
cscroll::@3: scope:[cscroll]  from cscroll::@1
  (void*) memcpy::destination#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT
  (void*) memcpy::source#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $28
  (word) memcpy::num#0 ← (number) $19*(number) $28-(number) $28
  call memcpy 
  (void*) memcpy::return#2 ← (void*) memcpy::return#1
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  (void*) memcpy::destination#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS
  (void*) memcpy::source#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $28
  (word) memcpy::num#1 ← (number) $19*(number) $28-(number) $28
  call memcpy 
  (void*) memcpy::return#3 ← (void*) memcpy::return#1
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  (void*) memset::str#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $19*(number) $28-(number) $28
  (byte) memset::c#0 ← (byte) ' '
  (word) memset::num#0 ← (number) $28
  call memset 
  (void*) memset::return#2 ← (void*) memset::return#1
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  (void*) memset::str#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $19*(number) $28-(number) $28
  (byte) memset::c#1 ← (byte) conio_textcolor
  (word) memset::num#1 ← (number) $28
  call memset 
  (void*) memset::return#3 ← (void*) memset::return#1
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  (byte*) conio_line_text ← (byte*) conio_line_text - (number) $28
  (byte*) conio_line_color ← (byte*) conio_line_color - (number) $28
  (byte) conio_cursor_y ← -- (byte) conio_cursor_y
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  (byte) gotoxy::x#1 ← (number) 0
  (byte) gotoxy::y#1 ← (number) 0
  call gotoxy 
  to:cscroll::@8
cscroll::@8: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@7 cscroll::@8
  return 
  to:@return

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from cputsxy::@1
  (to_nomodify byte*) cputs::s#3 ← phi( cputsxy::@1/(to_nomodify byte*) cputs::s#1 )
  (byte) cputs::c#0 ← (byte) 0
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@3
  (to_nomodify byte*) cputs::s#2 ← phi( cputs/(to_nomodify byte*) cputs::s#3 cputs::@3/(to_nomodify byte*) cputs::s#4 )
  (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  (byte~) cputs::$0 ← (byte) cputs::c#1
  (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  (bool~) cputs::$2 ← (number) 0 != (byte~) cputs::$0
  if((bool~) cputs::$2) goto cputs::@2
  to:cputs::@return
cputs::@2: scope:[cputs]  from cputs::@1
  (to_nomodify byte*) cputs::s#5 ← phi( cputs::@1/(to_nomodify byte*) cputs::s#0 )
  (byte) cputs::c#2 ← phi( cputs::@1/(byte) cputs::c#1 )
  (byte) cputc::c#0 ← (byte) cputs::c#2
  call cputc 
  to:cputs::@3
cputs::@3: scope:[cputs]  from cputs::@2
  (to_nomodify byte*) cputs::s#4 ← phi( cputs::@2/(to_nomodify byte*) cputs::s#5 )
  to:cputs::@1
cputs::@return: scope:[cputs]  from cputs::@1
  return 
  to:@return

(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
cputcxy: scope:[cputcxy]  from MakeNiceScreen::@8 MakeTeeLine
  (byte) cputcxy::c#3 ← phi( MakeNiceScreen::@8/(byte) cputcxy::c#1 MakeTeeLine/(byte) cputcxy::c#0 )
  (byte) cputcxy::y#2 ← phi( MakeNiceScreen::@8/(byte) cputcxy::y#1 MakeTeeLine/(byte) cputcxy::y#0 )
  (byte) cputcxy::x#2 ← phi( MakeNiceScreen::@8/(byte) cputcxy::x#1 MakeTeeLine/(byte) cputcxy::x#0 )
  (byte) gotoxy::x#2 ← (byte) cputcxy::x#2
  (byte) gotoxy::y#2 ← (byte) cputcxy::y#2
  call gotoxy 
  to:cputcxy::@1
cputcxy::@1: scope:[cputcxy]  from cputcxy
  (byte) cputcxy::c#2 ← phi( cputcxy/(byte) cputcxy::c#3 )
  (byte) cputc::c#1 ← (byte) cputcxy::c#2
  call cputc 
  to:cputcxy::@2
cputcxy::@2: scope:[cputcxy]  from cputcxy::@1
  to:cputcxy::@return
cputcxy::@return: scope:[cputcxy]  from cputcxy::@2
  return 
  to:@return

(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
cputsxy: scope:[cputsxy]  from MakeNiceScreen::@19
  (to_nomodify byte*) cputsxy::s#2 ← phi( MakeNiceScreen::@19/(to_nomodify byte*) cputsxy::s#0 )
  (byte) cputsxy::y#1 ← phi( MakeNiceScreen::@19/(byte) cputsxy::y#0 )
  (byte) cputsxy::x#1 ← phi( MakeNiceScreen::@19/(byte) cputsxy::x#0 )
  (byte) gotoxy::x#3 ← (byte) cputsxy::x#1
  (byte) gotoxy::y#3 ← (byte) cputsxy::y#1
  call gotoxy 
  to:cputsxy::@1
cputsxy::@1: scope:[cputsxy]  from cputsxy
  (to_nomodify byte*) cputsxy::s#1 ← phi( cputsxy/(to_nomodify byte*) cputsxy::s#2 )
  (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#1
  call cputs 
  to:cputsxy::@2
cputsxy::@2: scope:[cputsxy]  from cputsxy::@1
  to:cputsxy::@return
cputsxy::@return: scope:[cputsxy]  from cputsxy::@2
  return 
  to:@return

(byte()) textcolor((byte) textcolor::color)
textcolor: scope:[textcolor]  from MakeNiceScreen::@3
  (byte) textcolor::color#1 ← phi( MakeNiceScreen::@3/(byte) textcolor::color#0 )
  (byte) textcolor::old#0 ← (byte) conio_textcolor
  (byte) conio_textcolor ← (byte) textcolor::color#1
  (byte) textcolor::return#0 ← (byte) textcolor::old#0
  to:textcolor::@return
textcolor::@return: scope:[textcolor]  from textcolor
  (byte) textcolor::return#3 ← phi( textcolor/(byte) textcolor::return#0 )
  (byte) textcolor::return#1 ← (byte) textcolor::return#3
  return 
  to:@return

(byte()) cursor((byte) cursor::onoff)
cursor: scope:[cursor]  from MakeNiceScreen::@7
  (byte) cursor::onoff#1 ← phi( MakeNiceScreen::@7/(byte) cursor::onoff#0 )
  (byte) cursor::old#0 ← (byte) conio_display_cursor
  (byte) conio_display_cursor ← (byte) cursor::onoff#1
  (byte) cursor::return#0 ← (byte) cursor::old#0
  to:cursor::@return
cursor::@return: scope:[cursor]  from cursor
  (byte) cursor::return#3 ← phi( cursor/(byte) cursor::return#0 )
  (byte) cursor::return#1 ← (byte) cursor::return#3
  return 
  to:@return

(byte()) scroll((byte) scroll::onoff)
scroll: scope:[scroll]  from MakeNiceScreen
  (byte) scroll::onoff#1 ← phi( MakeNiceScreen/(byte) scroll::onoff#0 )
  (byte) scroll::old#0 ← (byte) conio_scroll_enable
  (byte) conio_scroll_enable ← (byte) scroll::onoff#1
  (byte) scroll::return#0 ← (byte) scroll::old#0
  to:scroll::@return
scroll::@return: scope:[scroll]  from scroll
  (byte) scroll::return#3 ← phi( scroll/(byte) scroll::return#0 )
  (byte) scroll::return#1 ← (byte) scroll::return#3
  return 
  to:@return

(byte()) kbhit()
kbhit: scope:[kbhit]  from main::@1
  *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (number) 0
  (byte~) kbhit::$0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B)
  (byte) kbhit::return#0 ← (byte~) kbhit::$0
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  (byte) kbhit::return#3 ← phi( kbhit/(byte) kbhit::return#0 )
  (byte) kbhit::return#1 ← (byte) kbhit::return#3
  return 
  to:@return

(byte()) bgcolor((byte) bgcolor::color)
bgcolor: scope:[bgcolor]  from MakeNiceScreen::@5
  (byte) bgcolor::color#1 ← phi( MakeNiceScreen::@5/(byte) bgcolor::color#0 )
  (byte) bgcolor::old#0 ← *((const nomodify byte*) bgcolor::CONIO_BGCOLOR)
  *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (byte) bgcolor::color#1
  (byte) bgcolor::return#0 ← (byte) bgcolor::old#0
  to:bgcolor::@return
bgcolor::@return: scope:[bgcolor]  from bgcolor
  (byte) bgcolor::return#3 ← phi( bgcolor/(byte) bgcolor::return#0 )
  (byte) bgcolor::return#1 ← (byte) bgcolor::return#3
  return 
  to:@return

(byte()) bordercolor((byte) bordercolor::color)
bordercolor: scope:[bordercolor]  from MakeNiceScreen::@4
  (byte) bordercolor::color#1 ← phi( MakeNiceScreen::@4/(byte) bordercolor::color#0 )
  (byte) bordercolor::old#0 ← *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR)
  *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (byte) bordercolor::color#1
  (byte) bordercolor::return#0 ← (byte) bordercolor::old#0
  to:bordercolor::@return
bordercolor::@return: scope:[bordercolor]  from bordercolor
  (byte) bordercolor::return#3 ← phi( bordercolor/(byte) bordercolor::return#0 )
  (byte) bordercolor::return#1 ← (byte) bordercolor::return#3
  return 
  to:@return

(void()) chline((byte) chline::length)
chline: scope:[chline]  from MakeNiceScreen::@13 MakeNiceScreen::@9 MakeTeeLine::@1
  (byte) chline::length#4 ← phi( MakeNiceScreen::@13/(byte) chline::length#2 MakeNiceScreen::@9/(byte) chline::length#1 MakeTeeLine::@1/(byte) chline::length#0 )
  (byte) chline::i#0 ← (byte) 0
  to:chline::@1
chline::@1: scope:[chline]  from chline chline::@3
  (byte) chline::length#3 ← phi( chline/(byte) chline::length#4 chline::@3/(byte) chline::length#5 )
  (byte) chline::i#2 ← phi( chline/(byte) chline::i#0 chline::@3/(byte) chline::i#1 )
  (bool~) chline::$0 ← (byte) chline::i#2 < (byte) chline::length#3
  if((bool~) chline::$0) goto chline::@2
  to:chline::@return
chline::@2: scope:[chline]  from chline::@1
  (byte) chline::length#6 ← phi( chline::@1/(byte) chline::length#3 )
  (byte) chline::i#4 ← phi( chline::@1/(byte) chline::i#2 )
  (byte) cputc::c#2 ← (const nomodify byte) CH_HLINE
  call cputc 
  to:chline::@3
chline::@3: scope:[chline]  from chline::@2
  (byte) chline::length#5 ← phi( chline::@2/(byte) chline::length#6 )
  (byte) chline::i#3 ← phi( chline::@2/(byte) chline::i#4 )
  (byte) chline::i#1 ← ++ (byte) chline::i#3
  to:chline::@1
chline::@return: scope:[chline]  from chline::@1
  return 
  to:@return

(void()) cvline((byte) cvline::length)
cvline: scope:[cvline]  from cvlinexy::@1
  (byte) cvline::length#2 ← phi( cvlinexy::@1/(byte) cvline::length#0 )
  (byte) cvline::x#0 ← (byte) conio_cursor_x
  (byte) cvline::y#0 ← (byte) conio_cursor_y
  (byte) cvline::i#0 ← (byte) 0
  to:cvline::@1
cvline::@1: scope:[cvline]  from cvline cvline::@4
  (byte) cvline::x#3 ← phi( cvline/(byte) cvline::x#0 cvline::@4/(byte) cvline::x#4 )
  (byte) cvline::y#4 ← phi( cvline/(byte) cvline::y#0 cvline::@4/(byte) cvline::y#5 )
  (byte) cvline::length#1 ← phi( cvline/(byte) cvline::length#2 cvline::@4/(byte) cvline::length#3 )
  (byte) cvline::i#2 ← phi( cvline/(byte) cvline::i#0 cvline::@4/(byte) cvline::i#1 )
  (bool~) cvline::$0 ← (byte) cvline::i#2 < (byte) cvline::length#1
  if((bool~) cvline::$0) goto cvline::@2
  to:cvline::@return
cvline::@2: scope:[cvline]  from cvline::@1
  (byte) cvline::length#5 ← phi( cvline::@1/(byte) cvline::length#1 )
  (byte) cvline::i#5 ← phi( cvline::@1/(byte) cvline::i#2 )
  (byte) cvline::x#2 ← phi( cvline::@1/(byte) cvline::x#3 )
  (byte) cvline::y#3 ← phi( cvline::@1/(byte) cvline::y#4 )
  (byte) cputc::c#3 ← (const nomodify byte) CH_VLINE
  call cputc 
  to:cvline::@3
cvline::@3: scope:[cvline]  from cvline::@2
  (byte) cvline::length#4 ← phi( cvline::@2/(byte) cvline::length#5 )
  (byte) cvline::i#4 ← phi( cvline::@2/(byte) cvline::i#5 )
  (byte) cvline::x#1 ← phi( cvline::@2/(byte) cvline::x#2 )
  (byte) cvline::y#2 ← phi( cvline::@2/(byte) cvline::y#3 )
  (byte) cvline::y#1 ← ++ (byte) cvline::y#2
  (byte) gotoxy::x#4 ← (byte) cvline::x#1
  (byte) gotoxy::y#4 ← (byte) cvline::y#1
  call gotoxy 
  to:cvline::@4
cvline::@4: scope:[cvline]  from cvline::@3
  (byte) cvline::x#4 ← phi( cvline::@3/(byte) cvline::x#1 )
  (byte) cvline::y#5 ← phi( cvline::@3/(byte) cvline::y#1 )
  (byte) cvline::length#3 ← phi( cvline::@3/(byte) cvline::length#4 )
  (byte) cvline::i#3 ← phi( cvline::@3/(byte) cvline::i#4 )
  (byte) cvline::i#1 ← ++ (byte) cvline::i#3
  to:cvline::@1
cvline::@return: scope:[cvline]  from cvline::@1
  return 
  to:@return

(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
cvlinexy: scope:[cvlinexy]  from MakeNiceScreen::@11 MakeNiceScreen::@15
  (byte) cvlinexy::length#3 ← phi( MakeNiceScreen::@11/(byte) cvlinexy::length#0 MakeNiceScreen::@15/(byte) cvlinexy::length#1 )
  (byte) cvlinexy::y#2 ← phi( MakeNiceScreen::@11/(byte) cvlinexy::y#0 MakeNiceScreen::@15/(byte) cvlinexy::y#1 )
  (byte) cvlinexy::x#2 ← phi( MakeNiceScreen::@11/(byte) cvlinexy::x#0 MakeNiceScreen::@15/(byte) cvlinexy::x#1 )
  (byte) gotoxy::x#5 ← (byte) cvlinexy::x#2
  (byte) gotoxy::y#5 ← (byte) cvlinexy::y#2
  call gotoxy 
  to:cvlinexy::@1
cvlinexy::@1: scope:[cvlinexy]  from cvlinexy
  (byte) cvlinexy::length#2 ← phi( cvlinexy/(byte) cvlinexy::length#3 )
  (byte) cvline::length#0 ← (byte) cvlinexy::length#2
  call cvline 
  to:cvlinexy::@2
cvlinexy::@2: scope:[cvlinexy]  from cvlinexy::@1
  to:cvlinexy::@return
cvlinexy::@return: scope:[cvlinexy]  from cvlinexy::@2
  return 
  to:@return

(void()) main()
main: scope:[main]  from __start::@1
  *((const nomodify byte*) VIC_MEMORY) ← (number) $17
  (byte*) screensize::x#0 ← &(volatile byte) XSize
  (byte*) screensize::y#0 ← &(volatile byte) YSize
  call screensize 
  to:main::@3
main::@3: scope:[main]  from main
  call MakeNiceScreen 
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@1
main::@1: scope:[main]  from main::@4 main::@5
  call kbhit 
  (byte) kbhit::return#2 ← (byte) kbhit::return#1
  to:main::@5
main::@5: scope:[main]  from main::@1
  (byte) kbhit::return#4 ← phi( main::@1/(byte) kbhit::return#2 )
  (byte~) main::$3 ← (byte) kbhit::return#4
  (bool~) main::$5 ← (number) 0 != (byte~) main::$3
  (bool~) main::$4 ← ! (bool~) main::$5
  if((bool~) main::$4) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@5
  call clrscr 
  to:main::@6
main::@6: scope:[main]  from main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return

(void()) MakeTeeLine((byte) MakeTeeLine::Y)
MakeTeeLine: scope:[MakeTeeLine]  from MakeNiceScreen::@16 MakeNiceScreen::@17
  (byte) MakeTeeLine::Y#2 ← phi( MakeNiceScreen::@16/(byte) MakeTeeLine::Y#0 MakeNiceScreen::@17/(byte) MakeTeeLine::Y#1 )
  (byte) cputcxy::x#0 ← (number) 0
  (byte) cputcxy::y#0 ← (byte) MakeTeeLine::Y#2
  (byte) cputcxy::c#0 ← (const nomodify byte) CH_LTEE
  call cputcxy 
  to:MakeTeeLine::@1
MakeTeeLine::@1: scope:[MakeTeeLine]  from MakeTeeLine
  (number~) MakeTeeLine::$1 ← (volatile byte) XSize - (number) 2
  (byte) chline::length#0 ← (number~) MakeTeeLine::$1
  call chline 
  to:MakeTeeLine::@2
MakeTeeLine::@2: scope:[MakeTeeLine]  from MakeTeeLine::@1
  (byte) cputc::c#4 ← (const nomodify byte) CH_RTEE
  call cputc 
  to:MakeTeeLine::@3
MakeTeeLine::@3: scope:[MakeTeeLine]  from MakeTeeLine::@2
  to:MakeTeeLine::@return
MakeTeeLine::@return: scope:[MakeTeeLine]  from MakeTeeLine::@3
  return 
  to:@return

(void()) MakeNiceScreen()
MakeNiceScreen: scope:[MakeNiceScreen]  from main::@3
  (to_nomodify struct $0*) MakeNiceScreen::T#0 ← (struct $0*) 0
  (byte) MakeNiceScreen::I#0 ← (byte) 0
  (byte) MakeNiceScreen::X#0 ← (byte) 0
  (byte) scroll::onoff#0 ← (number) 0
  call scroll 
  (byte) scroll::return#2 ← (byte) scroll::return#1
  to:MakeNiceScreen::@3
MakeNiceScreen::@3: scope:[MakeNiceScreen]  from MakeNiceScreen
  (byte) textcolor::color#0 ← (const nomodify byte) COLOR_GRAY3
  call textcolor 
  (byte) textcolor::return#2 ← (byte) textcolor::return#1
  to:MakeNiceScreen::@4
MakeNiceScreen::@4: scope:[MakeNiceScreen]  from MakeNiceScreen::@3
  (byte) bordercolor::color#0 ← (const nomodify byte) COLOR_BLACK
  call bordercolor 
  (byte) bordercolor::return#2 ← (byte) bordercolor::return#1
  to:MakeNiceScreen::@5
MakeNiceScreen::@5: scope:[MakeNiceScreen]  from MakeNiceScreen::@4
  (byte) bgcolor::color#0 ← (const nomodify byte) COLOR_BLACK
  call bgcolor 
  (byte) bgcolor::return#2 ← (byte) bgcolor::return#1
  to:MakeNiceScreen::@6
MakeNiceScreen::@6: scope:[MakeNiceScreen]  from MakeNiceScreen::@5
  call clrscr 
  to:MakeNiceScreen::@7
MakeNiceScreen::@7: scope:[MakeNiceScreen]  from MakeNiceScreen::@6
  (byte) cursor::onoff#0 ← (number) 0
  call cursor 
  (byte) cursor::return#2 ← (byte) cursor::return#1
  to:MakeNiceScreen::@8
MakeNiceScreen::@8: scope:[MakeNiceScreen]  from MakeNiceScreen::@7
  (byte) cputcxy::x#1 ← (number) 0
  (byte) cputcxy::y#1 ← (number) 0
  (byte) cputcxy::c#1 ← (const nomodify byte) CH_ULCORNER
  call cputcxy 
  to:MakeNiceScreen::@9
MakeNiceScreen::@9: scope:[MakeNiceScreen]  from MakeNiceScreen::@8
  (number~) MakeNiceScreen::$7 ← (volatile byte) XSize - (number) 2
  (byte) chline::length#1 ← (number~) MakeNiceScreen::$7
  call chline 
  to:MakeNiceScreen::@10
MakeNiceScreen::@10: scope:[MakeNiceScreen]  from MakeNiceScreen::@9
  (byte) cputc::c#5 ← (const nomodify byte) CH_URCORNER
  call cputc 
  to:MakeNiceScreen::@11
MakeNiceScreen::@11: scope:[MakeNiceScreen]  from MakeNiceScreen::@10
  (byte) cvlinexy::x#0 ← (number) 0
  (byte) cvlinexy::y#0 ← (number) 1
  (byte) cvlinexy::length#0 ← (number) $17
  call cvlinexy 
  to:MakeNiceScreen::@12
MakeNiceScreen::@12: scope:[MakeNiceScreen]  from MakeNiceScreen::@11
  (byte) cputc::c#6 ← (const nomodify byte) CH_LLCORNER
  call cputc 
  to:MakeNiceScreen::@13
MakeNiceScreen::@13: scope:[MakeNiceScreen]  from MakeNiceScreen::@12
  (number~) MakeNiceScreen::$12 ← (volatile byte) XSize - (number) 2
  (byte) chline::length#2 ← (number~) MakeNiceScreen::$12
  call chline 
  to:MakeNiceScreen::@14
MakeNiceScreen::@14: scope:[MakeNiceScreen]  from MakeNiceScreen::@13
  (byte) cputc::c#7 ← (const nomodify byte) CH_LRCORNER
  call cputc 
  to:MakeNiceScreen::@15
MakeNiceScreen::@15: scope:[MakeNiceScreen]  from MakeNiceScreen::@14
  (number~) MakeNiceScreen::$15 ← (volatile byte) XSize - (number) 1
  (byte) cvlinexy::x#1 ← (number~) MakeNiceScreen::$15
  (byte) cvlinexy::y#1 ← (number) 1
  (byte) cvlinexy::length#1 ← (number) $17
  call cvlinexy 
  to:MakeNiceScreen::@16
MakeNiceScreen::@16: scope:[MakeNiceScreen]  from MakeNiceScreen::@15
  (byte) MakeTeeLine::Y#0 ← (number) 7
  call MakeTeeLine 
  to:MakeNiceScreen::@17
MakeNiceScreen::@17: scope:[MakeNiceScreen]  from MakeNiceScreen::@16
  (byte) MakeTeeLine::Y#1 ← (number) $16
  call MakeTeeLine 
  to:MakeNiceScreen::@18
MakeNiceScreen::@18: scope:[MakeNiceScreen]  from MakeNiceScreen::@17
  (byte) MakeNiceScreen::I#1 ← (number) 0
  (to_nomodify struct $0*) MakeNiceScreen::T#1 ← (const struct $0*) MakeNiceScreen::Text
  to:MakeNiceScreen::@1
MakeNiceScreen::@1: scope:[MakeNiceScreen]  from MakeNiceScreen::@18 MakeNiceScreen::@20
  (to_nomodify struct $0*) MakeNiceScreen::T#6 ← phi( MakeNiceScreen::@18/(to_nomodify struct $0*) MakeNiceScreen::T#1 MakeNiceScreen::@20/(to_nomodify struct $0*) MakeNiceScreen::T#2 )
  (byte) MakeNiceScreen::I#3 ← phi( MakeNiceScreen::@18/(byte) MakeNiceScreen::I#1 MakeNiceScreen::@20/(byte) MakeNiceScreen::I#2 )
  (byte~) MakeNiceScreen::$19 ← sizeof  (const struct $0*) MakeNiceScreen::Text
  (byte~) MakeNiceScreen::$20 ← (byte~) MakeNiceScreen::$19 / (const byte) SIZEOF_STRUCT_$0
  (bool~) MakeNiceScreen::$21 ← (byte) MakeNiceScreen::I#3 < (byte~) MakeNiceScreen::$20
  if((bool~) MakeNiceScreen::$21) goto MakeNiceScreen::@2
  to:MakeNiceScreen::@return
MakeNiceScreen::@2: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  (byte) MakeNiceScreen::I#6 ← phi( MakeNiceScreen::@1/(byte) MakeNiceScreen::I#3 )
  (to_nomodify struct $0*) MakeNiceScreen::T#3 ← phi( MakeNiceScreen::@1/(to_nomodify struct $0*) MakeNiceScreen::T#6 )
  (byte*~) MakeNiceScreen::$33 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3
  (byte*~) MakeNiceScreen::$29 ← (byte*~) MakeNiceScreen::$33 + (const byte) OFFSET_STRUCT_$0_MSG
  (byte*) strlen::str#1 ← (byte*~) MakeNiceScreen::$29
  call strlen 
  (word) strlen::return#2 ← (word) strlen::return#1
  to:MakeNiceScreen::@19
MakeNiceScreen::@19: scope:[MakeNiceScreen]  from MakeNiceScreen::@2
  (byte) MakeNiceScreen::I#5 ← phi( MakeNiceScreen::@2/(byte) MakeNiceScreen::I#6 )
  (to_nomodify struct $0*) MakeNiceScreen::T#4 ← phi( MakeNiceScreen::@2/(to_nomodify struct $0*) MakeNiceScreen::T#3 )
  (word) strlen::return#4 ← phi( MakeNiceScreen::@2/(word) strlen::return#2 )
  (word~) MakeNiceScreen::$22 ← (word) strlen::return#4
  (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22
  (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34
  (byte~) MakeNiceScreen::$24 ← (byte~) MakeNiceScreen::$23 >> (number) 1
  (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$24
  (byte*~) MakeNiceScreen::$37 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#4
  (byte*~) MakeNiceScreen::$30 ← (byte*~) MakeNiceScreen::$37 + (const byte) OFFSET_STRUCT_$0_Y
  (byte*~) MakeNiceScreen::$38 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#4
  (byte*~) MakeNiceScreen::$31 ← (byte*~) MakeNiceScreen::$38 + (const byte) OFFSET_STRUCT_$0_MSG
  (byte) cputsxy::x#0 ← (byte) MakeNiceScreen::X#1
  (byte) cputsxy::y#0 ← *((byte*~) MakeNiceScreen::$30)
  (to_nomodify byte*) cputsxy::s#0 ← (byte*~) MakeNiceScreen::$31
  call cputsxy 
  to:MakeNiceScreen::@20
MakeNiceScreen::@20: scope:[MakeNiceScreen]  from MakeNiceScreen::@19
  (byte) MakeNiceScreen::I#4 ← phi( MakeNiceScreen::@19/(byte) MakeNiceScreen::I#5 )
  (to_nomodify struct $0*) MakeNiceScreen::T#5 ← phi( MakeNiceScreen::@19/(to_nomodify struct $0*) MakeNiceScreen::T#4 )
  (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#5 + (const byte) SIZEOF_STRUCT_$0
  (byte) MakeNiceScreen::I#2 ← ++ (byte) MakeNiceScreen::I#4
  to:MakeNiceScreen::@1
MakeNiceScreen::@return: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  return 
  to:@return

(void()) __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  (byte) conio_cursor_x ← (byte) 0
  (byte) conio_cursor_y ← (byte) 0
  (byte*) conio_line_text ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) conio_line_color ← (const nomodify byte*) CONIO_SCREEN_COLORS
  (byte) conio_textcolor ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  (byte) conio_display_cursor ← (byte) 0
  (byte) conio_scroll_enable ← (byte) 1
  (volatile byte) XSize ← (byte) 0
  (volatile byte) YSize ← (byte) 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  call main 
  to:__start::@2
__start::@2: scope:[__start]  from __start::@1
  to:__start::@return
__start::@return: scope:[__start]  from __start::@2
  return 
  to:@return

SYMBOL TABLE SSA
(const byte*) $0::Msg[(number) $28]  = { fill( $28, 0) }
(byte) $0::Y
(const nomodify byte) CH_HLINE = (byte) $40
(const nomodify byte) CH_LLCORNER = (byte) $6d
(const nomodify byte) CH_LRCORNER = (byte) $7d
(const nomodify byte) CH_LTEE = (byte) $6b
(const nomodify byte) CH_RTEE = (byte) $73
(const nomodify byte) CH_ULCORNER = (byte) $70
(const nomodify byte) CH_URCORNER = (byte) $6e
(const nomodify byte) CH_VLINE = (byte) $5d
(const nomodify byte*) COLORRAM = (byte*)(number) $d800
(const nomodify byte) COLOR_BLACK = (byte) 0
(const nomodify byte) COLOR_GRAY3 = (byte) $f
(const nomodify byte*) CONIO_SCREEN_COLORS = (const nomodify byte*) COLORRAM
(const nomodify byte*) CONIO_SCREEN_TEXT = (const nomodify byte*) DEFAULT_SCREEN
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (const nomodify byte) LIGHT_BLUE
(const nomodify byte*) DEFAULT_SCREEN = (byte*)(number) $400
(const nomodify byte) LIGHT_BLUE = (byte) $e
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(void()) MakeNiceScreen()
(number~) MakeNiceScreen::$12
(number~) MakeNiceScreen::$15
(byte~) MakeNiceScreen::$19
(byte~) MakeNiceScreen::$20
(bool~) MakeNiceScreen::$21
(word~) MakeNiceScreen::$22
(byte~) MakeNiceScreen::$23
(byte~) MakeNiceScreen::$24
(byte*~) MakeNiceScreen::$29
(byte*~) MakeNiceScreen::$30
(byte*~) MakeNiceScreen::$31
(byte*~) MakeNiceScreen::$33
(byte~) MakeNiceScreen::$34
(byte*~) MakeNiceScreen::$37
(byte*~) MakeNiceScreen::$38
(number~) MakeNiceScreen::$7
(label) MakeNiceScreen::@1
(label) MakeNiceScreen::@10
(label) MakeNiceScreen::@11
(label) MakeNiceScreen::@12
(label) MakeNiceScreen::@13
(label) MakeNiceScreen::@14
(label) MakeNiceScreen::@15
(label) MakeNiceScreen::@16
(label) MakeNiceScreen::@17
(label) MakeNiceScreen::@18
(label) MakeNiceScreen::@19
(label) MakeNiceScreen::@2
(label) MakeNiceScreen::@20
(label) MakeNiceScreen::@3
(label) MakeNiceScreen::@4
(label) MakeNiceScreen::@5
(label) MakeNiceScreen::@6
(label) MakeNiceScreen::@7
(label) MakeNiceScreen::@8
(label) MakeNiceScreen::@9
(label) MakeNiceScreen::@return
(byte) MakeNiceScreen::I
(byte) MakeNiceScreen::I#0
(byte) MakeNiceScreen::I#1
(byte) MakeNiceScreen::I#2
(byte) MakeNiceScreen::I#3
(byte) MakeNiceScreen::I#4
(byte) MakeNiceScreen::I#5
(byte) MakeNiceScreen::I#6
(to_nomodify struct $0*) MakeNiceScreen::T
(to_nomodify struct $0*) MakeNiceScreen::T#0
(to_nomodify struct $0*) MakeNiceScreen::T#1
(to_nomodify struct $0*) MakeNiceScreen::T#2
(to_nomodify struct $0*) MakeNiceScreen::T#3
(to_nomodify struct $0*) MakeNiceScreen::T#4
(to_nomodify struct $0*) MakeNiceScreen::T#5
(to_nomodify struct $0*) MakeNiceScreen::T#6
(const struct $0*) MakeNiceScreen::Text[]  = { { Y: (byte) 2, Msg: (byte*) "Wolfgang Amadeus Mozart" }, { Y: (byte) 4, Msg: (byte*) ""Eine kleine Nachtmusik"" }, { Y: (byte) 5, Msg: (byte*) "(KV 525)" }, { Y: (byte) 9, Msg: (byte*) "Ported to the SID in 1987 by" }, { Y: (byte) $b, Msg: (byte*) "Joachim von Bassewitz" }, { Y: (byte) $c, Msg: (byte*) "(joachim@von-bassewitz.de)" }, { Y: (byte) $d, Msg: (byte*) "and" }, { Y: (byte) $e, Msg: (byte*) "Ullrich von Bassewitz" }, { Y: (byte) $f, Msg: (byte*) "(ullrich@von-bassewitz.de)" }, { Y: (byte) $12, Msg: (byte*) "C Implementation by" }, { Y: (byte) $13, Msg: (byte*) "Ullrich von Bassewitz" }, { Y: (byte) $17, Msg: (byte*) "Press any key to quit..." } }
(byte) MakeNiceScreen::X
(byte) MakeNiceScreen::X#0
(byte) MakeNiceScreen::X#1
(void()) MakeTeeLine((byte) MakeTeeLine::Y)
(number~) MakeTeeLine::$1
(label) MakeTeeLine::@1
(label) MakeTeeLine::@2
(label) MakeTeeLine::@3
(label) MakeTeeLine::@return
(byte) MakeTeeLine::Y
(byte) MakeTeeLine::Y#0
(byte) MakeTeeLine::Y#1
(byte) MakeTeeLine::Y#2
(const byte) OFFSET_STRUCT_$0_MSG = (byte) 1
(const byte) OFFSET_STRUCT_$0_Y = (byte) 0
(const byte) SIZEOF_STRUCT_$0 = (byte) $29
(const nomodify byte*) VIC_MEMORY = (byte*)(number) $d018
(volatile byte) XSize loadstore
(volatile byte) YSize loadstore
(void()) __start()
(label) __start::@1
(label) __start::@2
(label) __start::@return
(label) __start::__init1
(byte()) bgcolor((byte) bgcolor::color)
(label) bgcolor::@return
(const nomodify byte*) bgcolor::CONIO_BGCOLOR = (byte*)(number) $d021
(byte) bgcolor::color
(byte) bgcolor::color#0
(byte) bgcolor::color#1
(byte) bgcolor::old
(byte) bgcolor::old#0
(byte) bgcolor::return
(byte) bgcolor::return#0
(byte) bgcolor::return#1
(byte) bgcolor::return#2
(byte) bgcolor::return#3
(byte()) bordercolor((byte) bordercolor::color)
(label) bordercolor::@return
(const nomodify byte*) bordercolor::CONIO_BORDERCOLOR = (byte*)(number) $d020
(byte) bordercolor::color
(byte) bordercolor::color#0
(byte) bordercolor::color#1
(byte) bordercolor::old
(byte) bordercolor::old#0
(byte) bordercolor::return
(byte) bordercolor::return#0
(byte) bordercolor::return#1
(byte) bordercolor::return#2
(byte) bordercolor::return#3
(void()) chline((byte) chline::length)
(bool~) chline::$0
(label) chline::@1
(label) chline::@2
(label) chline::@3
(label) chline::@return
(byte) chline::i
(byte) chline::i#0
(byte) chline::i#1
(byte) chline::i#2
(byte) chline::i#3
(byte) chline::i#4
(byte) chline::length
(byte) chline::length#0
(byte) chline::length#1
(byte) chline::length#2
(byte) chline::length#3
(byte) chline::length#4
(byte) chline::length#5
(byte) chline::length#6
(void()) clrscr()
(bool~) clrscr::$0
(bool~) clrscr::$1
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@5
(label) clrscr::@6
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#0
(byte) clrscr::c#1
(byte) clrscr::c#2
(byte) clrscr::c#3
(byte) clrscr::l
(byte) clrscr::l#0
(byte) clrscr::l#1
(byte) clrscr::l#2
(byte) clrscr::l#3
(byte) clrscr::l#4
(byte) clrscr::l#5
(byte) clrscr::l#6
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#0
(byte*) clrscr::line_cols#1
(byte*) clrscr::line_cols#2
(byte*) clrscr::line_cols#3
(byte*) clrscr::line_cols#4
(byte*) clrscr::line_cols#5
(byte*) clrscr::line_cols#6
(byte*) clrscr::line_text
(byte*) clrscr::line_text#0
(byte*) clrscr::line_text#1
(byte*) clrscr::line_text#2
(byte*) clrscr::line_text#3
(byte*) clrscr::line_text#4
(byte*) clrscr::line_text#5
(byte*) clrscr::line_text#6
(byte) conio_cursor_x loadstore
(byte) conio_cursor_y loadstore
(byte) conio_display_cursor loadstore
(byte*) conio_line_color loadstore
(byte*) conio_line_text loadstore
(byte) conio_scroll_enable loadstore
(byte) conio_textcolor loadstore
(void()) cputc((byte) cputc::c)
(bool~) cputc::$0
(bool~) cputc::$1
(bool~) cputc::$2
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@4
(label) cputc::@5
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0
(byte) cputc::c#1
(byte) cputc::c#2
(byte) cputc::c#3
(byte) cputc::c#4
(byte) cputc::c#5
(byte) cputc::c#6
(byte) cputc::c#7
(byte) cputc::c#8
(byte) cputc::c#9
(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
(label) cputcxy::@1
(label) cputcxy::@2
(label) cputcxy::@return
(byte) cputcxy::c
(byte) cputcxy::c#0
(byte) cputcxy::c#1
(byte) cputcxy::c#2
(byte) cputcxy::c#3
(byte) cputcxy::x
(byte) cputcxy::x#0
(byte) cputcxy::x#1
(byte) cputcxy::x#2
(byte) cputcxy::y
(byte) cputcxy::y#0
(byte) cputcxy::y#1
(byte) cputcxy::y#2
(void()) cputln()
(label) cputln::@1
(label) cputln::@return
(void()) cputs((to_nomodify byte*) cputs::s)
(byte~) cputs::$0
(bool~) cputs::$2
(label) cputs::@1
(label) cputs::@2
(label) cputs::@3
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#0
(byte) cputs::c#1
(byte) cputs::c#2
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0
(to_nomodify byte*) cputs::s#1
(to_nomodify byte*) cputs::s#2
(to_nomodify byte*) cputs::s#3
(to_nomodify byte*) cputs::s#4
(to_nomodify byte*) cputs::s#5
(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
(label) cputsxy::@1
(label) cputsxy::@2
(label) cputsxy::@return
(to_nomodify byte*) cputsxy::s
(to_nomodify byte*) cputsxy::s#0
(to_nomodify byte*) cputsxy::s#1
(to_nomodify byte*) cputsxy::s#2
(byte) cputsxy::x
(byte) cputsxy::x#0
(byte) cputsxy::x#1
(byte) cputsxy::y
(byte) cputsxy::y#0
(byte) cputsxy::y#1
(void()) cscroll()
(bool~) cscroll::$0
(bool~) cscroll::$1
(bool~) cscroll::$7
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@6
(label) cscroll::@7
(label) cscroll::@8
(label) cscroll::@return
(byte()) cursor((byte) cursor::onoff)
(label) cursor::@return
(byte) cursor::old
(byte) cursor::old#0
(byte) cursor::onoff
(byte) cursor::onoff#0
(byte) cursor::onoff#1
(byte) cursor::return
(byte) cursor::return#0
(byte) cursor::return#1
(byte) cursor::return#2
(byte) cursor::return#3
(void()) cvline((byte) cvline::length)
(bool~) cvline::$0
(label) cvline::@1
(label) cvline::@2
(label) cvline::@3
(label) cvline::@4
(label) cvline::@return
(byte) cvline::i
(byte) cvline::i#0
(byte) cvline::i#1
(byte) cvline::i#2
(byte) cvline::i#3
(byte) cvline::i#4
(byte) cvline::i#5
(byte) cvline::length
(byte) cvline::length#0
(byte) cvline::length#1
(byte) cvline::length#2
(byte) cvline::length#3
(byte) cvline::length#4
(byte) cvline::length#5
(byte) cvline::x
(byte) cvline::x#0
(byte) cvline::x#1
(byte) cvline::x#2
(byte) cvline::x#3
(byte) cvline::x#4
(byte) cvline::y
(byte) cvline::y#0
(byte) cvline::y#1
(byte) cvline::y#2
(byte) cvline::y#3
(byte) cvline::y#4
(byte) cvline::y#5
(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
(label) cvlinexy::@1
(label) cvlinexy::@2
(label) cvlinexy::@return
(byte) cvlinexy::length
(byte) cvlinexy::length#0
(byte) cvlinexy::length#1
(byte) cvlinexy::length#2
(byte) cvlinexy::length#3
(byte) cvlinexy::x
(byte) cvlinexy::x#0
(byte) cvlinexy::x#1
(byte) cvlinexy::x#2
(byte) cvlinexy::y
(byte) cvlinexy::y#0
(byte) cvlinexy::y#1
(byte) cvlinexy::y#2
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(bool~) gotoxy::$0
(bool~) gotoxy::$1
(bool~) gotoxy::$2
(bool~) gotoxy::$3
(number~) gotoxy::$4
(byte*~) gotoxy::$5
(byte*~) gotoxy::$6
(word~) gotoxy::$7
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@4
(label) gotoxy::@return
(word) gotoxy::line_offset
(word) gotoxy::line_offset#0
(byte) gotoxy::x
(byte) gotoxy::x#0
(byte) gotoxy::x#1
(byte) gotoxy::x#2
(byte) gotoxy::x#3
(byte) gotoxy::x#4
(byte) gotoxy::x#5
(byte) gotoxy::x#6
(byte) gotoxy::x#7
(byte) gotoxy::x#8
(byte) gotoxy::x#9
(byte) gotoxy::y
(byte) gotoxy::y#0
(byte) gotoxy::y#1
(byte) gotoxy::y#2
(byte) gotoxy::y#3
(byte) gotoxy::y#4
(byte) gotoxy::y#5
(byte) gotoxy::y#6
(byte) gotoxy::y#7
(byte) gotoxy::y#8
(byte) gotoxy::y#9
(byte()) kbhit()
(byte~) kbhit::$0
(label) kbhit::@return
(const nomodify byte*) kbhit::CIA1_PORT_A = (byte*)(number) $dc00
(const nomodify byte*) kbhit::CIA1_PORT_B = (byte*)(number) $dc01
(byte) kbhit::return
(byte) kbhit::return#0
(byte) kbhit::return#1
(byte) kbhit::return#2
(byte) kbhit::return#3
(byte) kbhit::return#4
(void()) main()
(byte~) main::$3
(bool~) main::$4
(bool~) main::$5
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@return
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(byte*~) memcpy::$0
(bool~) memcpy::$1
(byte*~) memcpy::$2
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@3
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#0
(void*) memcpy::destination#1
(void*) memcpy::destination#2
(void*) memcpy::destination#3
(void*) memcpy::destination#4
(void*) memcpy::destination#5
(byte*) memcpy::dst
(byte*) memcpy::dst#0
(byte*) memcpy::dst#1
(byte*) memcpy::dst#2
(byte*) memcpy::dst#3
(word) memcpy::num
(word) memcpy::num#0
(word) memcpy::num#1
(word) memcpy::num#2
(void*) memcpy::return
(void*) memcpy::return#0
(void*) memcpy::return#1
(void*) memcpy::return#2
(void*) memcpy::return#3
(void*) memcpy::return#4
(void*) memcpy::source
(void*) memcpy::source#0
(void*) memcpy::source#1
(void*) memcpy::source#2
(byte*) memcpy::src
(byte*) memcpy::src#0
(byte*) memcpy::src#1
(byte*) memcpy::src#2
(byte*) memcpy::src#3
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0
(byte*) memcpy::src_end#1
(byte*) memcpy::src_end#2
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(bool~) memset::$0
(bool~) memset::$1
(byte*~) memset::$2
(bool~) memset::$3
(byte*~) memset::$4
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@4
(label) memset::@return
(byte) memset::c
(byte) memset::c#0
(byte) memset::c#1
(byte) memset::c#2
(byte) memset::c#3
(byte) memset::c#4
(byte) memset::c#5
(byte*) memset::dst
(byte*) memset::dst#0
(byte*) memset::dst#1
(byte*) memset::dst#2
(byte*) memset::dst#3
(byte*) memset::end
(byte*) memset::end#0
(byte*) memset::end#1
(byte*) memset::end#2
(word) memset::num
(word) memset::num#0
(word) memset::num#1
(word) memset::num#2
(word) memset::num#3
(void*) memset::return
(void*) memset::return#0
(void*) memset::return#1
(void*) memset::return#2
(void*) memset::return#3
(void*) memset::return#4
(void*) memset::str
(void*) memset::str#0
(void*) memset::str#1
(void*) memset::str#2
(void*) memset::str#3
(void*) memset::str#4
(void*) memset::str#5
(void*) memset::str#6
(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
(label) screensize::@return
(byte*) screensize::x
(byte*) screensize::x#0
(byte*) screensize::x#1
(byte*) screensize::y
(byte*) screensize::y#0
(byte*) screensize::y#1
(byte()) scroll((byte) scroll::onoff)
(label) scroll::@return
(byte) scroll::old
(byte) scroll::old#0
(byte) scroll::onoff
(byte) scroll::onoff#0
(byte) scroll::onoff#1
(byte) scroll::return
(byte) scroll::return#0
(byte) scroll::return#1
(byte) scroll::return#2
(byte) scroll::return#3
(word()) strlen((byte*) strlen::str)
(bool~) strlen::$0
(label) strlen::@1
(label) strlen::@2
(label) strlen::@3
(label) strlen::@return
(word) strlen::len
(word) strlen::len#0
(word) strlen::len#1
(word) strlen::len#2
(word) strlen::len#3
(word) strlen::len#4
(word) strlen::return
(word) strlen::return#0
(word) strlen::return#1
(word) strlen::return#2
(word) strlen::return#3
(word) strlen::return#4
(byte*) strlen::str
(byte*) strlen::str#0
(byte*) strlen::str#1
(byte*) strlen::str#2
(byte*) strlen::str#3
(byte*) strlen::str#4
(byte()) textcolor((byte) textcolor::color)
(label) textcolor::@return
(byte) textcolor::color
(byte) textcolor::color#0
(byte) textcolor::color#1
(byte) textcolor::old
(byte) textcolor::old#0
(byte) textcolor::return
(byte) textcolor::return#0
(byte) textcolor::return#1
(byte) textcolor::return#2
(byte) textcolor::return#3

Adding number conversion cast (unumber) 0 in (bool~) memset::$0 ← (word) memset::num#2 > (number) 0
Adding number conversion cast (unumber) 0 in (bool~) strlen::$0 ← (number) 0 != *((byte*) strlen::str#2)
Adding number conversion cast (unumber) $19 in (bool~) clrscr::$0 ← (byte) clrscr::l#2 < (number) $19
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_x ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_y ← (number) 0
Adding number conversion cast (unumber) $28 in (bool~) clrscr::$1 ← (byte) clrscr::c#2 < (number) $28
Adding number conversion cast (unumber) $28 in (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#3 + (number) $28
Adding number conversion cast (unumber) $28 in (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#3 + (number) $28
Adding number conversion cast (unumber) $19 in (bool~) gotoxy::$0 ← (byte) gotoxy::y#6 > (number) $19
Adding number conversion cast (unumber) $28 in (bool~) gotoxy::$2 ← (byte) gotoxy::x#6 >= (number) $28
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#0 ← (number) 0
Adding number conversion cast (unumber) $28 in (number~) gotoxy::$4 ← (word~) gotoxy::$7 * (number) $28
Adding number conversion cast (unumber) gotoxy::$4 in (number~) gotoxy::$4 ← (word~) gotoxy::$7 * (unumber)(number) $28
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#0 ← (number) 0
Adding number conversion cast (unumber) $28 in *((byte*) screensize::x#1) ← (number) $28
Adding number conversion cast (unumber) $19 in *((byte*) screensize::y#1) ← (number) $19
Adding number conversion cast (unumber) $28 in (bool~) cputc::$1 ← (byte) conio_cursor_x == (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_text ← (byte*) conio_line_text + (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_color ← (byte*) conio_line_color + (number) $28
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_x ← (number) 0
Adding number conversion cast (unumber) $19 in (bool~) cscroll::$0 ← (byte) conio_cursor_y == (number) $19
Adding number conversion cast (unumber) 0 in (bool~) cscroll::$7 ← (number) 0 != (byte) conio_scroll_enable
Adding number conversion cast (unumber) $28 in (void*) memcpy::source#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $28
Adding number conversion cast (unumber) $19*$28-$28 in (word) memcpy::num#0 ← (number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $28 in (void*) memcpy::source#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $28
Adding number conversion cast (unumber) $19*$28-$28 in (word) memcpy::num#1 ← (number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $28 in (void*) memset::str#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $19*$28 in (void*) memset::str#0 ← (void*)(const nomodify byte*) CONIO_SCREEN_TEXT+(number) $19*(number) $28-(unumber)(number) $28
Adding number conversion cast (unumber) $28 in (word) memset::num#0 ← (number) $28
Adding number conversion cast (unumber) $28 in (void*) memset::str#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $19*(number) $28-(number) $28
Adding number conversion cast (unumber) $19*$28 in (void*) memset::str#1 ← (void*)(const nomodify byte*) CONIO_SCREEN_COLORS+(number) $19*(number) $28-(unumber)(number) $28
Adding number conversion cast (unumber) $28 in (word) memset::num#1 ← (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_text ← (byte*) conio_line_text - (number) $28
Adding number conversion cast (unumber) $28 in (byte*) conio_line_color ← (byte*) conio_line_color - (number) $28
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#1 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#1 ← (number) 0
Adding number conversion cast (unumber) 0 in (bool~) cputs::$2 ← (number) 0 != (byte~) cputs::$0
Adding number conversion cast (unumber) 0 in *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (number) 0
Adding number conversion cast (unumber) $17 in *((const nomodify byte*) VIC_MEMORY) ← (number) $17
Adding number conversion cast (unumber) 0 in (bool~) main::$5 ← (number) 0 != (byte~) main::$3
Adding number conversion cast (unumber) 0 in (byte) cputcxy::x#0 ← (number) 0
Adding number conversion cast (unumber) 2 in (number~) MakeTeeLine::$1 ← (volatile byte) XSize - (number) 2
Adding number conversion cast (unumber) MakeTeeLine::$1 in (number~) MakeTeeLine::$1 ← (volatile byte) XSize - (unumber)(number) 2
Adding number conversion cast (unumber) 0 in (byte) scroll::onoff#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) cursor::onoff#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) cputcxy::x#1 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) cputcxy::y#1 ← (number) 0
Adding number conversion cast (unumber) 2 in (number~) MakeNiceScreen::$7 ← (volatile byte) XSize - (number) 2
Adding number conversion cast (unumber) MakeNiceScreen::$7 in (number~) MakeNiceScreen::$7 ← (volatile byte) XSize - (unumber)(number) 2
Adding number conversion cast (unumber) 0 in (byte) cvlinexy::x#0 ← (number) 0
Adding number conversion cast (unumber) 1 in (byte) cvlinexy::y#0 ← (number) 1
Adding number conversion cast (unumber) $17 in (byte) cvlinexy::length#0 ← (number) $17
Adding number conversion cast (unumber) 2 in (number~) MakeNiceScreen::$12 ← (volatile byte) XSize - (number) 2
Adding number conversion cast (unumber) MakeNiceScreen::$12 in (number~) MakeNiceScreen::$12 ← (volatile byte) XSize - (unumber)(number) 2
Adding number conversion cast (unumber) 1 in (number~) MakeNiceScreen::$15 ← (volatile byte) XSize - (number) 1
Adding number conversion cast (unumber) MakeNiceScreen::$15 in (number~) MakeNiceScreen::$15 ← (volatile byte) XSize - (unumber)(number) 1
Adding number conversion cast (unumber) 1 in (byte) cvlinexy::y#1 ← (number) 1
Adding number conversion cast (unumber) $17 in (byte) cvlinexy::length#1 ← (number) $17
Adding number conversion cast (unumber) 7 in (byte) MakeTeeLine::Y#0 ← (number) 7
Adding number conversion cast (unumber) $16 in (byte) MakeTeeLine::Y#1 ← (number) $16
Adding number conversion cast (unumber) 0 in (byte) MakeNiceScreen::I#1 ← (number) 0
Adding number conversion cast (unumber) 1 in (byte~) MakeNiceScreen::$24 ← (byte~) MakeNiceScreen::$23 >> (number) 1
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast (byte*) memcpy::src#0 ← (byte*)(void*) memcpy::source#2
Inlining cast (byte*) memcpy::dst#0 ← (byte*)(void*) memcpy::destination#2
Inlining cast (byte*) memset::dst#0 ← (byte*)(void*) memset::str#3
Inlining cast (byte) conio_cursor_x ← (unumber)(number) 0
Inlining cast (byte) conio_cursor_y ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#0 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::x#0 ← (unumber)(number) 0
Inlining cast *((byte*) screensize::x#1) ← (unumber)(number) $28
Inlining cast *((byte*) screensize::y#1) ← (unumber)(number) $19
Inlining cast (byte) conio_cursor_x ← (unumber)(number) 0
Inlining cast (word) memcpy::num#0 ← (unumber)(number) $19*(number) $28-(number) $28
Inlining cast (word) memcpy::num#1 ← (unumber)(number) $19*(number) $28-(number) $28
Inlining cast (word) memset::num#0 ← (unumber)(number) $28
Inlining cast (word) memset::num#1 ← (unumber)(number) $28
Inlining cast (byte) gotoxy::x#1 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#1 ← (unumber)(number) 0
Inlining cast *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (unumber)(number) 0
Inlining cast *((const nomodify byte*) VIC_MEMORY) ← (unumber)(number) $17
Inlining cast (byte) cputcxy::x#0 ← (unumber)(number) 0
Inlining cast (byte) scroll::onoff#0 ← (unumber)(number) 0
Inlining cast (byte) cursor::onoff#0 ← (unumber)(number) 0
Inlining cast (byte) cputcxy::x#1 ← (unumber)(number) 0
Inlining cast (byte) cputcxy::y#1 ← (unumber)(number) 0
Inlining cast (byte) cvlinexy::x#0 ← (unumber)(number) 0
Inlining cast (byte) cvlinexy::y#0 ← (unumber)(number) 1
Inlining cast (byte) cvlinexy::length#0 ← (unumber)(number) $17
Inlining cast (byte) cvlinexy::y#1 ← (unumber)(number) 1
Inlining cast (byte) cvlinexy::length#1 ← (unumber)(number) $17
Inlining cast (byte) MakeTeeLine::Y#0 ← (unumber)(number) 7
Inlining cast (byte) MakeTeeLine::Y#1 ← (unumber)(number) $16
Inlining cast (byte) MakeNiceScreen::I#1 ← (unumber)(number) 0
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 53272
Simplifying constant pointer cast (byte*) 55296
Simplifying constant pointer cast (byte*) 1024
Simplifying constant pointer cast (byte*) 56320
Simplifying constant pointer cast (byte*) 56321
Simplifying constant pointer cast (byte*) 53281
Simplifying constant pointer cast (byte*) 53280
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $19
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $19
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast $19
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast $28
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $17
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast $17
Simplifying constant integer cast 2
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast $17
Simplifying constant integer cast 7
Simplifying constant integer cast $16
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $19
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) $16
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to word in (unumber~) gotoxy::$4 ← (word~) gotoxy::$7 * (byte) $28
Inferred type updated to byte in (unumber~) MakeTeeLine::$1 ← (volatile byte) XSize - (byte) 2
Inferred type updated to byte in (unumber~) MakeNiceScreen::$7 ← (volatile byte) XSize - (byte) 2
Inferred type updated to byte in (unumber~) MakeNiceScreen::$12 ← (volatile byte) XSize - (byte) 2
Inferred type updated to byte in (unumber~) MakeNiceScreen::$15 ← (volatile byte) XSize - (byte) 1
Inversing boolean not [20] (bool~) memset::$1 ← (word) memset::num#2 <= (byte) 0 from [19] (bool~) memset::$0 ← (word) memset::num#2 > (byte) 0
Inversing boolean not [77] (bool~) gotoxy::$1 ← (byte) gotoxy::y#6 <= (byte) $19 from [76] (bool~) gotoxy::$0 ← (byte) gotoxy::y#6 > (byte) $19
Inversing boolean not [81] (bool~) gotoxy::$3 ← (byte) gotoxy::x#6 < (byte) $28 from [80] (bool~) gotoxy::$2 ← (byte) gotoxy::x#6 >= (byte) $28
Inversing boolean not [111] (bool~) cputc::$2 ← (byte) conio_cursor_x != (byte) $28 from [110] (bool~) cputc::$1 ← (byte) conio_cursor_x == (byte) $28
Inversing boolean not [122] (bool~) cscroll::$1 ← (byte) conio_cursor_y != (byte) $19 from [121] (bool~) cscroll::$0 ← (byte) conio_cursor_y == (byte) $19
Inversing boolean not [270] (bool~) main::$4 ← (byte) 0 == (byte~) main::$3 from [269] (bool~) main::$5 ← (byte) 0 != (byte~) main::$3
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias memcpy::src_end#0 = memcpy::$0 
Alias memcpy::src#2 = memcpy::src#3 
Alias memcpy::dst#2 = memcpy::dst#3 
Alias memcpy::src_end#1 = memcpy::src_end#2 
Alias memcpy::destination#3 = memcpy::destination#5 memcpy::destination#4 memcpy::return#0 memcpy::return#4 memcpy::return#1 
Alias memset::return#0 = memset::str#2 memset::return#4 memset::return#1 
Alias memset::str#3 = memset::str#4 
Alias memset::num#2 = memset::num#3 
Alias memset::c#4 = memset::c#5 
Alias memset::end#0 = memset::$2 
Alias memset::c#2 = memset::c#3 
Alias memset::dst#2 = memset::dst#3 
Alias memset::end#1 = memset::end#2 
Alias memset::str#5 = memset::str#6 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#0 strlen::return#3 strlen::return#1 
Alias strlen::str#2 = strlen::str#3 
Alias clrscr::line_text#5 = clrscr::line_text#6 
Alias clrscr::line_cols#5 = clrscr::line_cols#6 
Alias clrscr::l#2 = clrscr::l#5 
Alias clrscr::line_text#2 = clrscr::line_text#4 clrscr::line_text#3 
Alias clrscr::c#2 = clrscr::c#3 
Alias clrscr::line_cols#2 = clrscr::line_cols#4 clrscr::line_cols#3 
Alias clrscr::l#3 = clrscr::l#6 clrscr::l#4 
Alias gotoxy::x#8 = gotoxy::x#9 
Alias gotoxy::line_offset#0 = gotoxy::$4 
Alias gotoxy::y#8 = gotoxy::y#9 
Alias cputc::c#8 = cputc::c#9 
Alias cputs::c#1 = cputs::$0 cputs::c#2 
Alias cputs::s#0 = cputs::s#5 cputs::s#4 
Alias cputcxy::c#2 = cputcxy::c#3 
Alias cputsxy::s#1 = cputsxy::s#2 
Alias textcolor::return#0 = textcolor::old#0 textcolor::return#3 textcolor::return#1 
Alias cursor::return#0 = cursor::old#0 cursor::return#3 cursor::return#1 
Alias scroll::return#0 = scroll::old#0 scroll::return#3 scroll::return#1 
Alias kbhit::return#0 = kbhit::$0 kbhit::return#3 kbhit::return#1 
Alias bgcolor::return#0 = bgcolor::old#0 bgcolor::return#3 bgcolor::return#1 
Alias bordercolor::return#0 = bordercolor::old#0 bordercolor::return#3 bordercolor::return#1 
Alias chline::i#2 = chline::i#4 chline::i#3 
Alias chline::length#3 = chline::length#6 chline::length#5 
Alias cvline::y#2 = cvline::y#3 cvline::y#4 
Alias cvline::x#1 = cvline::x#2 cvline::x#3 cvline::x#4 
Alias cvline::i#2 = cvline::i#5 cvline::i#4 cvline::i#3 
Alias cvline::length#1 = cvline::length#5 cvline::length#4 cvline::length#3 
Alias cvline::y#1 = cvline::y#5 
Alias cvlinexy::length#2 = cvlinexy::length#3 
Alias kbhit::return#2 = kbhit::return#4 
Alias chline::length#0 = MakeTeeLine::$1 
Alias chline::length#1 = MakeNiceScreen::$7 
Alias chline::length#2 = MakeNiceScreen::$12 
Alias cvlinexy::x#1 = MakeNiceScreen::$15 
Alias MakeNiceScreen::T#3 = MakeNiceScreen::T#6 MakeNiceScreen::T#4 MakeNiceScreen::T#5 
Alias MakeNiceScreen::I#3 = MakeNiceScreen::I#6 MakeNiceScreen::I#5 MakeNiceScreen::I#4 
Alias strlen::str#1 = MakeNiceScreen::$29 
Alias strlen::return#2 = strlen::return#4 
Alias MakeNiceScreen::X#1 = MakeNiceScreen::$24 
Alias cputsxy::s#0 = MakeNiceScreen::$31 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias gotoxy::x#6 = gotoxy::x#8 
Alias gotoxy::y#7 = gotoxy::y#8 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values (byte*) memcpy::src_end#1 (byte*) memcpy::src_end#0
Identical Phi Values (void*) memcpy::destination#3 (void*) memcpy::destination#2
Identical Phi Values (byte*) memset::end#1 (byte*) memset::end#0
Identical Phi Values (void*) memset::str#5 (void*) memset::str#3
Identical Phi Values (byte) memset::c#2 (byte) memset::c#4
Identical Phi Values (byte*) strlen::str#4 (byte*) strlen::str#1
Identical Phi Values (byte*) clrscr::line_text#2 (byte*) clrscr::line_text#5
Identical Phi Values (byte*) clrscr::line_cols#2 (byte*) clrscr::line_cols#5
Identical Phi Values (byte) clrscr::l#3 (byte) clrscr::l#2
Identical Phi Values (byte*) screensize::x#1 (byte*) screensize::x#0
Identical Phi Values (byte*) screensize::y#1 (byte*) screensize::y#0
Identical Phi Values (to_nomodify byte*) cputs::s#3 (to_nomodify byte*) cputs::s#1
Identical Phi Values (byte) cputsxy::x#1 (byte) cputsxy::x#0
Identical Phi Values (byte) cputsxy::y#1 (byte) cputsxy::y#0
Identical Phi Values (to_nomodify byte*) cputsxy::s#1 (to_nomodify byte*) cputsxy::s#0
Identical Phi Values (byte) textcolor::color#1 (byte) textcolor::color#0
Identical Phi Values (byte) cursor::onoff#1 (byte) cursor::onoff#0
Identical Phi Values (byte) scroll::onoff#1 (byte) scroll::onoff#0
Identical Phi Values (byte) bgcolor::color#1 (byte) bgcolor::color#0
Identical Phi Values (byte) bordercolor::color#1 (byte) bordercolor::color#0
Identical Phi Values (byte) chline::length#3 (byte) chline::length#4
Identical Phi Values (byte) cvline::length#2 (byte) cvline::length#0
Identical Phi Values (byte) cvline::length#1 (byte) cvline::length#2
Identical Phi Values (byte) cvline::x#1 (byte) cvline::x#0
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values (void*) memset::return#0 (void*) memset::str#3
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition (bool~) memcpy::$1 [7] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2
Simple Condition (bool~) memset::$1 [14] if((word) memset::num#2<=(byte) 0) goto memset::@1
Simple Condition (bool~) memset::$3 [21] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@4
Simple Condition (bool~) strlen::$0 [29] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2
Simple Condition (bool~) clrscr::$0 [38] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@2
Simple Condition (bool~) clrscr::$1 [46] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@5
Simple Condition (bool~) gotoxy::$1 [56] if((byte) gotoxy::y#6<=(byte) $19) goto gotoxy::@1
Simple Condition (bool~) gotoxy::$3 [59] if((byte) gotoxy::x#6<(byte) $28) goto gotoxy::@2
Simple Condition (bool~) cputc::$0 [78] if((byte) cputc::c#8==(byte) '
') goto cputc::@1
Simple Condition (bool~) cputc::$2 [84] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return
Simple Condition (bool~) cscroll::$1 [94] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return
Simple Condition (bool~) cscroll::$7 [96] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3
Simple Condition (bool~) cputs::$2 [130] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
Simple Condition (bool~) chline::$0 [175] if((byte) chline::i#2<(byte) chline::length#4) goto chline::@2
Simple Condition (bool~) cvline::$0 [186] if((byte) cvline::i#2<(byte) cvline::length#0) goto cvline::@2
Simple Condition (bool~) main::$4 [211] if((byte) 0==(byte~) main::$3) goto main::@1
Simple Condition (bool~) MakeNiceScreen::$21 [275] if((byte) MakeNiceScreen::I#3<(byte~) MakeNiceScreen::$20) goto MakeNiceScreen::@2
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant right-side identified [99] (word) memcpy::num#0 ← (unumber)(number) $19*(number) $28-(number) $28
Constant right-side identified [104] (word) memcpy::num#1 ← (unumber)(number) $19*(number) $28-(number) $28
Constant right-side identified [272] (byte~) MakeNiceScreen::$19 ← sizeof  (const struct $0*) MakeNiceScreen::Text
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const word) strlen::len#0 = 0
Constant (const byte*) clrscr::line_text#0 = CONIO_SCREEN_TEXT
Constant (const byte*) clrscr::line_cols#0 = CONIO_SCREEN_COLORS
Constant (const byte) clrscr::l#0 = 0
Constant (const byte) clrscr::c#0 = 0
Constant (const byte) gotoxy::y#0 = 0
Constant (const byte) gotoxy::x#0 = 0
Constant (const void*) memcpy::destination#0 = (void*)CONIO_SCREEN_TEXT
Constant (const void*) memcpy::source#0 = (void*)CONIO_SCREEN_TEXT+$28
Constant (const word) memcpy::num#0 = (unumber)$19*$28-$28
Constant (const void*) memcpy::destination#1 = (void*)CONIO_SCREEN_COLORS
Constant (const void*) memcpy::source#1 = (void*)CONIO_SCREEN_COLORS+$28
Constant (const word) memcpy::num#1 = (unumber)$19*$28-$28
Constant (const void*) memset::str#0 = (void*)CONIO_SCREEN_TEXT+(word)$19*$28-$28
Constant (const byte) memset::c#0 = ' '
Constant (const word) memset::num#0 = $28
Constant (const void*) memset::str#1 = (void*)CONIO_SCREEN_COLORS+(word)$19*$28-$28
Constant (const word) memset::num#1 = $28
Constant (const byte) gotoxy::x#1 = 0
Constant (const byte) gotoxy::y#1 = 0
Constant (const byte) cputs::c#0 = 0
Constant (const byte) chline::i#0 = 0
Constant (const byte) cputc::c#2 = CH_HLINE
Constant (const byte) cvline::i#0 = 0
Constant (const byte) cputc::c#3 = CH_VLINE
Constant (const byte*) screensize::x#0 = &XSize
Constant (const byte*) screensize::y#0 = &YSize
Constant (const byte) cputcxy::x#0 = 0
Constant (const byte) cputcxy::c#0 = CH_LTEE
Constant (const byte) cputc::c#4 = CH_RTEE
Constant (const to_nomodify struct $0*) MakeNiceScreen::T#0 = (struct $0*) 0
Constant (const byte) MakeNiceScreen::I#0 = 0
Constant (const byte) MakeNiceScreen::X#0 = 0
Constant (const byte) scroll::onoff#0 = 0
Constant (const byte) textcolor::color#0 = COLOR_GRAY3
Constant (const byte) bordercolor::color#0 = COLOR_BLACK
Constant (const byte) bgcolor::color#0 = COLOR_BLACK
Constant (const byte) cursor::onoff#0 = 0
Constant (const byte) cputcxy::x#1 = 0
Constant (const byte) cputcxy::y#1 = 0
Constant (const byte) cputcxy::c#1 = CH_ULCORNER
Constant (const byte) cputc::c#5 = CH_URCORNER
Constant (const byte) cvlinexy::x#0 = 0
Constant (const byte) cvlinexy::y#0 = 1
Constant (const byte) cvlinexy::length#0 = $17
Constant (const byte) cputc::c#6 = CH_LLCORNER
Constant (const byte) cputc::c#7 = CH_LRCORNER
Constant (const byte) cvlinexy::y#1 = 1
Constant (const byte) cvlinexy::length#1 = $17
Constant (const byte) MakeTeeLine::Y#0 = 7
Constant (const byte) MakeTeeLine::Y#1 = $16
Constant (const byte) MakeNiceScreen::I#1 = 0
Constant (const to_nomodify struct $0*) MakeNiceScreen::T#1 = MakeNiceScreen::Text
Constant (const byte) MakeNiceScreen::$19 = sizeof MakeNiceScreen::Text
Successful SSA optimization Pass2ConstantIdentification
Rewriting conditional comparison [56] if((byte) gotoxy::y#6<=(byte) $19) goto gotoxy::@1
Converting *(pointer+n) to pointer[n] [289] (byte) cputsxy::y#0 ← *((byte*~) MakeNiceScreen::$30)  -- *(MakeNiceScreen::$37 + OFFSET_STRUCT_$0_Y)
Successful SSA optimization Pass2InlineDerefIdx
Simplifying expression containing zero MakeNiceScreen::$37 in [285] (byte*~) MakeNiceScreen::$30 ← (byte*~) MakeNiceScreen::$37 + (const byte) OFFSET_STRUCT_$0_Y
Simplifying expression containing zero MakeNiceScreen::$37 in [289] (byte) cputsxy::y#0 ← *((byte*~) MakeNiceScreen::$37 + (const byte) OFFSET_STRUCT_$0_Y)
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused variable (void*) memcpy::return#2 and assignment [76] (void*) memcpy::return#2 ← (void*) memcpy::destination#2
Eliminating unused variable (void*) memcpy::return#3 and assignment [78] (void*) memcpy::return#3 ← (void*) memcpy::destination#2
Eliminating unused variable (void*) memset::return#2 and assignment [80] (void*) memset::return#2 ← (void*) memset::str#3
Eliminating unused variable (void*) memset::return#3 and assignment [83] (void*) memset::return#3 ← (void*) memset::str#3
Eliminating unused variable (byte) scroll::return#2 and assignment [168] (byte) scroll::return#2 ← (byte) scroll::return#0
Eliminating unused variable (byte) textcolor::return#2 and assignment [170] (byte) textcolor::return#2 ← (byte) textcolor::return#0
Eliminating unused variable (byte) bordercolor::return#2 and assignment [172] (byte) bordercolor::return#2 ← (byte) bordercolor::return#0
Eliminating unused variable (byte) bgcolor::return#2 and assignment [174] (byte) bgcolor::return#2 ← (byte) bgcolor::return#0
Eliminating unused variable (byte) cursor::return#2 and assignment [177] (byte) cursor::return#2 ← (byte) cursor::return#0
Eliminating unused variable (byte*~) MakeNiceScreen::$30 and assignment [203] (byte*~) MakeNiceScreen::$30 ← (byte*~) MakeNiceScreen::$37
Eliminating unused constant (const byte) cputs::c#0
Eliminating unused constant (const to_nomodify struct $0*) MakeNiceScreen::T#0
Eliminating unused constant (const byte) MakeNiceScreen::I#0
Eliminating unused constant (const byte) MakeNiceScreen::X#0
Eliminating unused constant (const byte) OFFSET_STRUCT_$0_Y
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable (byte) textcolor::return#0 and assignment [105] (byte) textcolor::return#0 ← (byte) conio_textcolor
Eliminating unused variable (byte) cursor::return#0 and assignment [108] (byte) cursor::return#0 ← (byte) conio_display_cursor
Eliminating unused variable (byte) scroll::return#0 and assignment [111] (byte) scroll::return#0 ← (byte) conio_scroll_enable
Eliminating unused variable (byte) bgcolor::return#0 and assignment [117] (byte) bgcolor::return#0 ← *((const nomodify byte*) bgcolor::CONIO_BGCOLOR)
Eliminating unused variable (byte) bordercolor::return#0 and assignment [120] (byte) bordercolor::return#0 ← *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR)
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable (byte) conio_display_cursor and assignment [107] (byte) conio_display_cursor ← (const byte) cursor::onoff#0
Eliminating unused variable conio_display_cursor(null) and assignment [202] conio_display_cursor(null) ← (byte) 0
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant (const byte) cursor::onoff#0
Successful SSA optimization PassNEliminateUnusedVars
Removing call to empty procedure [162] call cursor 
Removing unused procedure cursor
Removing unused procedure block cursor
Removing unused procedure block cursor::@return
Successful SSA optimization PassNEliminateEmptyProcedure
Adding number conversion cast (unumber) $19+1 in [42] if((byte) gotoxy::y#6<(byte) $19+(number) 1) goto gotoxy::@1
Adding number conversion cast (unumber) 1 in [42] if((byte) gotoxy::y#6<(unumber)(byte) $19+(number) 1) goto gotoxy::@1
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast (byte) $19+(unumber)(number) 1
Simplifying constant integer cast 1
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Resolving array sizeof() sizeof (const struct $0*) MakeNiceScreen::Text
Successful SSA optimization PassNSizeOfSimplification
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Constant right-side identified [175] (byte~) MakeNiceScreen::$20 ← (const byte) MakeNiceScreen::$19 / (const byte) SIZEOF_STRUCT_$0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte) MakeNiceScreen::$20 = MakeNiceScreen::$19/SIZEOF_STRUCT_$0
Successful SSA optimization Pass2ConstantIdentification
Adding number conversion cast (unumber) $c in 
Successful SSA optimization PassNAddNumberTypeConversions
Simplifying constant integer cast $c
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) $c
Successful SSA optimization PassNFinalizeNumberTypeConversions
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Inlining Noop Cast [1] (byte*) memcpy::src#0 ← (byte*)(void*) memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [2] (byte*) memcpy::dst#0 ← (byte*)(void*) memcpy::destination#2 keeping memcpy::destination#2
Inlining Noop Cast [3] (byte*~) memcpy::$2 ← (byte*)(void*) memcpy::source#2 keeping memcpy::source#2
Inlining Noop Cast [13] (byte*~) memset::$4 ← (byte*)(void*) memset::str#3 keeping memset::str#3
Inlining Noop Cast [15] (byte*) memset::dst#0 ← (byte*)(void*) memset::str#3 keeping memset::str#3
Inlining Noop Cast [176] (byte*~) MakeNiceScreen::$33 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 keeping MakeNiceScreen::T#3
Inlining Noop Cast [184] (byte*~) MakeNiceScreen::$37 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 keeping MakeNiceScreen::T#3
Inlining Noop Cast [185] (byte*~) MakeNiceScreen::$38 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 keeping MakeNiceScreen::T#3
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift and addition[49] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$7 * (byte) $28
Inlining constant with var siblings (const void*) memcpy::destination#0
Inlining constant with var siblings (const void*) memcpy::source#0
Inlining constant with var siblings (const word) memcpy::num#0
Inlining constant with var siblings (const void*) memcpy::destination#1
Inlining constant with var siblings (const void*) memcpy::source#1
Inlining constant with var siblings (const word) memcpy::num#1
Inlining constant with var siblings (const void*) memset::str#0
Inlining constant with var siblings (const byte) memset::c#0
Inlining constant with var siblings (const word) memset::num#0
Inlining constant with var siblings (const void*) memset::str#1
Inlining constant with var siblings (const word) memset::num#1
Inlining constant with var siblings (const word) strlen::len#0
Inlining constant with var siblings (const byte*) clrscr::line_text#0
Inlining constant with var siblings (const byte*) clrscr::line_cols#0
Inlining constant with var siblings (const byte) clrscr::l#0
Inlining constant with var siblings (const byte) clrscr::c#0
Inlining constant with var siblings (const byte) gotoxy::y#0
Inlining constant with var siblings (const byte) gotoxy::x#0
Inlining constant with var siblings (const byte) gotoxy::x#1
Inlining constant with var siblings (const byte) gotoxy::y#1
Inlining constant with var siblings (const byte) cputc::c#2
Inlining constant with var siblings (const byte) cputc::c#3
Inlining constant with var siblings (const byte) cputc::c#4
Inlining constant with var siblings (const byte) cputc::c#5
Inlining constant with var siblings (const byte) cputc::c#6
Inlining constant with var siblings (const byte) cputc::c#7
Inlining constant with var siblings (const byte) cputcxy::x#0
Inlining constant with var siblings (const byte) cputcxy::c#0
Inlining constant with var siblings (const byte) cputcxy::x#1
Inlining constant with var siblings (const byte) cputcxy::y#1
Inlining constant with var siblings (const byte) cputcxy::c#1
Inlining constant with var siblings (const byte) chline::i#0
Inlining constant with var siblings (const byte) cvline::i#0
Inlining constant with var siblings (const byte) cvlinexy::x#0
Inlining constant with var siblings (const byte) cvlinexy::y#0
Inlining constant with var siblings (const byte) cvlinexy::length#0
Inlining constant with var siblings (const byte) cvlinexy::y#1
Inlining constant with var siblings (const byte) cvlinexy::length#1
Inlining constant with var siblings (const byte) MakeTeeLine::Y#0
Inlining constant with var siblings (const byte) MakeTeeLine::Y#1
Inlining constant with var siblings (const byte) MakeNiceScreen::I#1
Inlining constant with var siblings (const to_nomodify struct $0*) MakeNiceScreen::T#1
Constant inlined chline::i#0 = (byte) 0
Constant inlined memset::num#1 = (byte) $28
Constant inlined memset::num#0 = (byte) $28
Constant inlined clrscr::l#0 = (byte) 0
Constant inlined strlen::len#0 = (word) 0
Constant inlined cvlinexy::length#0 = (byte) $17
Constant inlined bordercolor::color#0 = (const nomodify byte) COLOR_BLACK
Constant inlined cputcxy::y#1 = (byte) 0
Constant inlined cvlinexy::length#1 = (byte) $17
Constant inlined CONIO_SCREEN_TEXT = (const nomodify byte*) DEFAULT_SCREEN
Constant inlined MakeNiceScreen::I#1 = (byte) 0
Constant inlined cvlinexy::y#0 = (byte) 1
Constant inlined cvlinexy::y#1 = (byte) 1
Constant inlined clrscr::line_text#0 = (const nomodify byte*) DEFAULT_SCREEN
Constant inlined OFFSET_STRUCT_$0_MSG = (byte) 1
Constant inlined memcpy::source#0 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28
Constant inlined gotoxy::x#0 = (byte) 0
Constant inlined gotoxy::x#1 = (byte) 0
Constant inlined SIZEOF_STRUCT_$0 = (byte) $29
Constant inlined memset::c#0 = (byte) ' '
Constant inlined memcpy::destination#0 = (void*)(const nomodify byte*) DEFAULT_SCREEN
Constant inlined cputc::c#2 = (const nomodify byte) CH_HLINE
Constant inlined memcpy::destination#1 = (void*)(const nomodify byte*) COLORRAM
Constant inlined cputc::c#3 = (const nomodify byte) CH_VLINE
Constant inlined MakeNiceScreen::$19 = (byte) $c*(byte) $29
Constant inlined cputc::c#4 = (const nomodify byte) CH_RTEE
Constant inlined cputc::c#5 = (const nomodify byte) CH_URCORNER
Constant inlined cputc::c#6 = (const nomodify byte) CH_LLCORNER
Constant inlined MakeNiceScreen::T#1 = (const struct $0*) MakeNiceScreen::Text
Constant inlined cputcxy::x#0 = (byte) 0
Constant inlined cputcxy::x#1 = (byte) 0
Constant inlined memcpy::source#1 = (void*)(const nomodify byte*) COLORRAM+(byte) $28
Constant inlined cvline::i#0 = (byte) 0
Constant inlined textcolor::color#0 = (const nomodify byte) COLOR_GRAY3
Constant inlined CONIO_TEXTCOLOR_DEFAULT = (const nomodify byte) LIGHT_BLUE
Constant inlined memset::str#1 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28
Constant inlined cputcxy::c#1 = (const nomodify byte) CH_ULCORNER
Constant inlined memset::str#0 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28
Constant inlined CONIO_SCREEN_COLORS = (const nomodify byte*) COLORRAM
Constant inlined cputcxy::c#0 = (const nomodify byte) CH_LTEE
Constant inlined cvlinexy::x#0 = (byte) 0
Constant inlined MakeTeeLine::Y#0 = (byte) 7
Constant inlined MakeTeeLine::Y#1 = (byte) $16
Constant inlined cputc::c#7 = (const nomodify byte) CH_LRCORNER
Constant inlined memcpy::num#1 = (word)(number) $19*(number) $28-(number) $28
Constant inlined memcpy::num#0 = (word)(number) $19*(number) $28-(number) $28
Constant inlined MakeNiceScreen::$20 = (byte) $c*(byte) $29/(byte) $29
Constant inlined bgcolor::color#0 = (const nomodify byte) COLOR_BLACK
Constant inlined gotoxy::y#0 = (byte) 0
Constant inlined gotoxy::y#1 = (byte) 0
Constant inlined clrscr::c#0 = (byte) 0
Constant inlined clrscr::line_cols#0 = (const nomodify byte*) COLORRAM
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias gotoxy::line_offset#0 = gotoxy::$10 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Identical Phi Values (word) memcpy::num#2 (word)(number) $19*(number) $28-(number) $28
Identical Phi Values (word) memset::num#2 (byte) $28
Identical Phi Values (byte) cputcxy::x#2 (byte) 0
Identical Phi Values (byte) cvlinexy::y#2 (byte) 1
Identical Phi Values (byte) cvlinexy::length#2 (byte) $17
Successful SSA optimization Pass2IdenticalPhiElimination
Constant (const byte) gotoxy::x#2 = 0
Constant (const byte) gotoxy::y#5 = 1
Constant (const byte) cvline::length#0 = $17
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [9] if((byte) $28<=(byte) 0) goto memset::@1
Successful SSA optimization Pass2ConstantIfs
Inlining constant with var siblings (const byte) gotoxy::x#2
Inlining constant with var siblings (const byte) gotoxy::y#5
Constant inlined gotoxy::y#5 = (byte) 1
Constant inlined gotoxy::x#2 = (byte) 0
Successful SSA optimization Pass2ConstantInlining
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Alias candidate removed (volatile)conio_line_text = gotoxy::$5 
Alias candidate removed (volatile)conio_line_color = gotoxy::$6 
Added new block during phi lifting gotoxy::@5(between gotoxy and gotoxy::@1)
Added new block during phi lifting gotoxy::@6(between gotoxy::@1 and gotoxy::@2)
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of __start::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of MakeNiceScreen
Adding NOP phi() at start of MakeNiceScreen::@3
Adding NOP phi() at start of MakeNiceScreen::@4
Adding NOP phi() at start of MakeNiceScreen::@5
Adding NOP phi() at start of MakeNiceScreen::@6
Adding NOP phi() at start of MakeNiceScreen::@7
Adding NOP phi() at start of MakeNiceScreen::@8
Adding NOP phi() at start of MakeNiceScreen::@10
Adding NOP phi() at start of MakeNiceScreen::@11
Adding NOP phi() at start of MakeNiceScreen::@12
Adding NOP phi() at start of MakeNiceScreen::@14
Adding NOP phi() at start of MakeNiceScreen::@16
Adding NOP phi() at start of MakeNiceScreen::@17
Adding NOP phi() at start of MakeNiceScreen::@18
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of clrscr::@2
Adding NOP phi() at start of cputcxy::@2
Adding NOP phi() at start of chline::@2
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@5
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cvlinexy::@1
Adding NOP phi() at start of cvlinexy::@2
Adding NOP phi() at start of MakeTeeLine::@2
Adding NOP phi() at start of MakeTeeLine::@3
Adding NOP phi() at start of strlen::@3
Adding NOP phi() at start of cputsxy::@2
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of gotoxy::@4
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of cvline::@2
Adding NOP phi() at start of cscroll::@2
Adding NOP phi() at start of cscroll::@8
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@5
Adding NOP phi() at start of memcpy::@3
Adding NOP phi() at start of memset::@1
CALL GRAPH
Calls in [__start] to main:10 
Calls in [main] to screensize:14 MakeNiceScreen:16 kbhit:19 clrscr:24 
Calls in [MakeNiceScreen] to scroll:31 textcolor:33 bordercolor:35 bgcolor:37 clrscr:39 cputcxy:42 chline:45 cputc:47 cvlinexy:49 cputc:51 chline:54 cputc:56 cvlinexy:59 MakeTeeLine:61 MakeTeeLine:63 strlen:69 cputsxy:78 
Calls in [cputcxy] to gotoxy:118 cputc:121 
Calls in [chline] to cputc:129 
Calls in [cputc] to cputln:139 cputln:143 
Calls in [cvlinexy] to gotoxy:148 cvline:150 
Calls in [MakeTeeLine] to cputcxy:156 chline:159 cputc:161 
Calls in [cputsxy] to gotoxy:177 cputs:179 
Calls in [cputln] to cscroll:206 
Calls in [cvline] to cputc:216 gotoxy:222 
Calls in [cputs] to cputc:234 
Calls in [cscroll] to gotoxy:239 memcpy:243 memcpy:245 memset:247 memset:250 

Created 29 initial phi equivalence classes
Coalesced [44] chline::length#8 ← chline::length#1
Coalesced [53] chline::length#7 ← chline::length#2
Coalesced [58] cvlinexy::x#3 ← cvlinexy::x#1
Coalesced [81] MakeNiceScreen::I#7 ← MakeNiceScreen::I#2
Coalesced [82] MakeNiceScreen::T#7 ← MakeNiceScreen::T#2
Coalesced [100] clrscr::l#7 ← clrscr::l#1
Coalesced [101] clrscr::line_text#7 ← clrscr::line_text#1
Coalesced [102] clrscr::line_cols#7 ← clrscr::line_cols#1
Coalesced [106] clrscr::c#4 ← clrscr::c#1
Coalesced [117] gotoxy::y#10 ← gotoxy::y#2
Coalesced [120] cputc::c#10 ← cputc::c#1
Coalesced [131] chline::i#5 ← chline::i#1
Coalesced [147] gotoxy::x#12 ← gotoxy::x#5
Coalesced [155] cputcxy::y#3 ← cputcxy::y#0
Coalesced [158] chline::length#9 ← chline::length#0
Coalesced [164] strlen::str#5 ← strlen::str#1
Coalesced [171] strlen::str#6 ← strlen::str#0
Coalesced [172] strlen::len#5 ← strlen::len#1
Coalesced [175] gotoxy::y#11 ← gotoxy::y#3
Coalesced [176] gotoxy::x#10 ← gotoxy::x#3
Coalesced [200] gotoxy::x#13 ← gotoxy::x#6
Coalesced [201] gotoxy::y#13 ← gotoxy::y#6
Coalesced [211] cvline::y#6 ← cvline::y#0
Coalesced [220] gotoxy::y#12 ← gotoxy::y#4
Coalesced [221] gotoxy::x#11 ← gotoxy::x#4
Coalesced [224] cvline::i#6 ← cvline::i#1
Coalesced [225] cvline::y#7 ← cvline::y#1
Coalesced [226] cputs::s#6 ← cputs::s#1
Coalesced [233] cputc::c#11 ← cputc::c#0
Coalesced [235] cputs::s#7 ← cputs::s#0
Coalesced [249] memset::c#6 ← memset::c#1
Coalesced [265] memcpy::src#5 ← memcpy::src#1
Coalesced [266] memcpy::dst#5 ← memcpy::dst#1
Coalesced [276] memset::dst#5 ← memset::dst#1
Coalesced down to 27 phi equivalence classes
Culled Empty Block (label) __start::@2
Culled Empty Block (label) main::@4
Culled Empty Block (label) main::@6
Culled Empty Block (label) MakeNiceScreen::@7
Culled Empty Block (label) MakeNiceScreen::@18
Culled Empty Block (label) clrscr::@2
Culled Empty Block (label) cputcxy::@2
Culled Empty Block (label) cputc::@5
Culled Empty Block (label) cputc::@4
Culled Empty Block (label) cvlinexy::@2
Culled Empty Block (label) MakeTeeLine::@3
Culled Empty Block (label) strlen::@3
Culled Empty Block (label) cputsxy::@2
Culled Empty Block (label) gotoxy::@3
Culled Empty Block (label) gotoxy::@4
Culled Empty Block (label) cputln::@1
Culled Empty Block (label) cputs::@3
Culled Empty Block (label) cscroll::@8
Culled Empty Block (label) memcpy::@3
Culled Empty Block (label) memset::@1
Renumbering block memset::@2 to memset::@1
Renumbering block memset::@3 to memset::@2
Renumbering block memset::@4 to memset::@3
Renumbering block clrscr::@3 to clrscr::@2
Renumbering block clrscr::@4 to clrscr::@3
Renumbering block clrscr::@5 to clrscr::@4
Renumbering block clrscr::@6 to clrscr::@5
Renumbering block gotoxy::@5 to gotoxy::@3
Renumbering block gotoxy::@6 to gotoxy::@4
Renumbering block main::@5 to main::@4
Renumbering block MakeNiceScreen::@8 to MakeNiceScreen::@7
Renumbering block MakeNiceScreen::@9 to MakeNiceScreen::@8
Renumbering block MakeNiceScreen::@10 to MakeNiceScreen::@9
Renumbering block MakeNiceScreen::@11 to MakeNiceScreen::@10
Renumbering block MakeNiceScreen::@12 to MakeNiceScreen::@11
Renumbering block MakeNiceScreen::@13 to MakeNiceScreen::@12
Renumbering block MakeNiceScreen::@14 to MakeNiceScreen::@13
Renumbering block MakeNiceScreen::@15 to MakeNiceScreen::@14
Renumbering block MakeNiceScreen::@16 to MakeNiceScreen::@15
Renumbering block MakeNiceScreen::@17 to MakeNiceScreen::@16
Renumbering block MakeNiceScreen::@19 to MakeNiceScreen::@17
Renumbering block MakeNiceScreen::@20 to MakeNiceScreen::@18
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of MakeNiceScreen
Adding NOP phi() at start of MakeNiceScreen::@3
Adding NOP phi() at start of MakeNiceScreen::@4
Adding NOP phi() at start of MakeNiceScreen::@5
Adding NOP phi() at start of MakeNiceScreen::@6
Adding NOP phi() at start of MakeNiceScreen::@7
Adding NOP phi() at start of MakeNiceScreen::@9
Adding NOP phi() at start of MakeNiceScreen::@10
Adding NOP phi() at start of MakeNiceScreen::@11
Adding NOP phi() at start of MakeNiceScreen::@13
Adding NOP phi() at start of MakeNiceScreen::@15
Adding NOP phi() at start of MakeNiceScreen::@16
Adding NOP phi() at start of clrscr
Adding NOP phi() at start of chline::@2
Adding NOP phi() at start of cputc::@3
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cvlinexy::@1
Adding NOP phi() at start of MakeTeeLine::@2
Adding NOP phi() at start of strlen
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of gotoxy::@4
Adding NOP phi() at start of cvline::@2
Adding NOP phi() at start of cputs
Adding NOP phi() at start of cscroll::@2
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@5

FINAL CONTROL FLOW GRAPH

(void()) __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] (byte) conio_cursor_x ← (byte) 0
  [2] (byte) conio_cursor_y ← (byte) 0
  [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN
  [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM
  [5] (byte) conio_textcolor ← (const nomodify byte) LIGHT_BLUE
  [6] (byte) conio_scroll_enable ← (byte) 1
  [7] (volatile byte) XSize ← (byte) 0
  [8] (volatile byte) YSize ← (byte) 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [9] phi()
  [10] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [11] return 
  to:@return

(void()) main()
main: scope:[main]  from __start::@1
  [12] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17
  [13] call screensize 
  to:main::@3
main::@3: scope:[main]  from main
  [14] phi()
  [15] call MakeNiceScreen 
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@4
  [16] phi()
  [17] call kbhit 
  [18] (byte) kbhit::return#2 ← (byte) kbhit::return#0
  to:main::@4
main::@4: scope:[main]  from main::@1
  [19] (byte~) main::$3 ← (byte) kbhit::return#2
  [20] if((byte) 0==(byte~) main::$3) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@4
  [21] phi()
  [22] call clrscr 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [23] return 
  to:@return

(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
screensize: scope:[screensize]  from main
  [24] *((const byte*) screensize::x#0) ← (byte) $28
  [25] *((const byte*) screensize::y#0) ← (byte) $19
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  [26] return 
  to:@return

(void()) MakeNiceScreen()
MakeNiceScreen: scope:[MakeNiceScreen]  from main::@3
  [27] phi()
  [28] call scroll 
  to:MakeNiceScreen::@3
MakeNiceScreen::@3: scope:[MakeNiceScreen]  from MakeNiceScreen
  [29] phi()
  [30] call textcolor 
  to:MakeNiceScreen::@4
MakeNiceScreen::@4: scope:[MakeNiceScreen]  from MakeNiceScreen::@3
  [31] phi()
  [32] call bordercolor 
  to:MakeNiceScreen::@5
MakeNiceScreen::@5: scope:[MakeNiceScreen]  from MakeNiceScreen::@4
  [33] phi()
  [34] call bgcolor 
  to:MakeNiceScreen::@6
MakeNiceScreen::@6: scope:[MakeNiceScreen]  from MakeNiceScreen::@5
  [35] phi()
  [36] call clrscr 
  to:MakeNiceScreen::@7
MakeNiceScreen::@7: scope:[MakeNiceScreen]  from MakeNiceScreen::@6
  [37] phi()
  [38] call cputcxy 
  to:MakeNiceScreen::@8
MakeNiceScreen::@8: scope:[MakeNiceScreen]  from MakeNiceScreen::@7
  [39] (byte) chline::length#1 ← (volatile byte) XSize - (byte) 2
  [40] call chline 
  to:MakeNiceScreen::@9
MakeNiceScreen::@9: scope:[MakeNiceScreen]  from MakeNiceScreen::@8
  [41] phi()
  [42] call cputc 
  to:MakeNiceScreen::@10
MakeNiceScreen::@10: scope:[MakeNiceScreen]  from MakeNiceScreen::@9
  [43] phi()
  [44] call cvlinexy 
  to:MakeNiceScreen::@11
MakeNiceScreen::@11: scope:[MakeNiceScreen]  from MakeNiceScreen::@10
  [45] phi()
  [46] call cputc 
  to:MakeNiceScreen::@12
MakeNiceScreen::@12: scope:[MakeNiceScreen]  from MakeNiceScreen::@11
  [47] (byte) chline::length#2 ← (volatile byte) XSize - (byte) 2
  [48] call chline 
  to:MakeNiceScreen::@13
MakeNiceScreen::@13: scope:[MakeNiceScreen]  from MakeNiceScreen::@12
  [49] phi()
  [50] call cputc 
  to:MakeNiceScreen::@14
MakeNiceScreen::@14: scope:[MakeNiceScreen]  from MakeNiceScreen::@13
  [51] (byte) cvlinexy::x#1 ← (volatile byte) XSize - (byte) 1
  [52] call cvlinexy 
  to:MakeNiceScreen::@15
MakeNiceScreen::@15: scope:[MakeNiceScreen]  from MakeNiceScreen::@14
  [53] phi()
  [54] call MakeTeeLine 
  to:MakeNiceScreen::@16
MakeNiceScreen::@16: scope:[MakeNiceScreen]  from MakeNiceScreen::@15
  [55] phi()
  [56] call MakeTeeLine 
  to:MakeNiceScreen::@1
MakeNiceScreen::@1: scope:[MakeNiceScreen]  from MakeNiceScreen::@16 MakeNiceScreen::@18
  [57] (to_nomodify struct $0*) MakeNiceScreen::T#3 ← phi( MakeNiceScreen::@16/(const struct $0*) MakeNiceScreen::Text MakeNiceScreen::@18/(to_nomodify struct $0*) MakeNiceScreen::T#2 )
  [57] (byte) MakeNiceScreen::I#3 ← phi( MakeNiceScreen::@16/(byte) 0 MakeNiceScreen::@18/(byte) MakeNiceScreen::I#2 )
  [58] if((byte) MakeNiceScreen::I#3<(byte) $c*(byte) $29/(byte) $29) goto MakeNiceScreen::@2
  to:MakeNiceScreen::@return
MakeNiceScreen::@return: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  [59] return 
  to:@return
MakeNiceScreen::@2: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  [60] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1
  [61] call strlen 
  [62] (word) strlen::return#2 ← (word) strlen::len#2
  to:MakeNiceScreen::@17
MakeNiceScreen::@17: scope:[MakeNiceScreen]  from MakeNiceScreen::@2
  [63] (word~) MakeNiceScreen::$22 ← (word) strlen::return#2
  [64] (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22
  [65] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34
  [66] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1
  [67] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1
  [68] (byte) cputsxy::x#0 ← (byte) MakeNiceScreen::X#1
  [69] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3)
  [70] call cputsxy 
  to:MakeNiceScreen::@18
MakeNiceScreen::@18: scope:[MakeNiceScreen]  from MakeNiceScreen::@17
  [71] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29
  [72] (byte) MakeNiceScreen::I#2 ← ++ (byte) MakeNiceScreen::I#3
  to:MakeNiceScreen::@1

(byte()) kbhit()
kbhit: scope:[kbhit]  from main::@1
  [73] *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (byte) 0
  [74] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B)
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  [75] return 
  to:@return

(void()) clrscr()
clrscr: scope:[clrscr]  from MakeNiceScreen::@6 main::@2
  [76] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [77] (byte*) clrscr::line_cols#5 ← phi( clrscr/(const nomodify byte*) COLORRAM clrscr::@5/(byte*) clrscr::line_cols#1 )
  [77] (byte*) clrscr::line_text#5 ← phi( clrscr/(const nomodify byte*) DEFAULT_SCREEN clrscr::@5/(byte*) clrscr::line_text#1 )
  [77] (byte) clrscr::l#2 ← phi( clrscr/(byte) 0 clrscr::@5/(byte) clrscr::l#1 )
  [78] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [79] (byte) conio_cursor_x ← (byte) 0
  [80] (byte) conio_cursor_y ← (byte) 0
  [81] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN
  [82] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [83] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [84] (byte) clrscr::c#2 ← phi( clrscr::@1/(byte) 0 clrscr::@4/(byte) clrscr::c#1 )
  [85] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [86] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28
  [87] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28
  [88] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [89] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' '
  [90] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (byte) conio_textcolor
  [91] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2
  to:clrscr::@3

(byte()) scroll((byte) scroll::onoff)
scroll: scope:[scroll]  from MakeNiceScreen
  [92] (byte) conio_scroll_enable ← (const byte) scroll::onoff#0
  to:scroll::@return
scroll::@return: scope:[scroll]  from scroll
  [93] return 
  to:@return

(byte()) textcolor((byte) textcolor::color)
textcolor: scope:[textcolor]  from MakeNiceScreen::@3
  [94] (byte) conio_textcolor ← (const nomodify byte) COLOR_GRAY3
  to:textcolor::@return
textcolor::@return: scope:[textcolor]  from textcolor
  [95] return 
  to:@return

(byte()) bordercolor((byte) bordercolor::color)
bordercolor: scope:[bordercolor]  from MakeNiceScreen::@4
  [96] *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK
  to:bordercolor::@return
bordercolor::@return: scope:[bordercolor]  from bordercolor
  [97] return 
  to:@return

(byte()) bgcolor((byte) bgcolor::color)
bgcolor: scope:[bgcolor]  from MakeNiceScreen::@5
  [98] *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK
  to:bgcolor::@return
bgcolor::@return: scope:[bgcolor]  from bgcolor
  [99] return 
  to:@return

(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
cputcxy: scope:[cputcxy]  from MakeNiceScreen::@7 MakeTeeLine
  [100] (byte) cputcxy::c#2 ← phi( MakeNiceScreen::@7/(const nomodify byte) CH_ULCORNER MakeTeeLine/(const nomodify byte) CH_LTEE )
  [100] (byte) cputcxy::y#2 ← phi( MakeNiceScreen::@7/(byte) 0 MakeTeeLine/(byte) cputcxy::y#0 )
  [101] (byte) gotoxy::y#2 ← (byte) cputcxy::y#2
  [102] call gotoxy 
  to:cputcxy::@1
cputcxy::@1: scope:[cputcxy]  from cputcxy
  [103] (byte) cputc::c#1 ← (byte) cputcxy::c#2
  [104] call cputc 
  to:cputcxy::@return
cputcxy::@return: scope:[cputcxy]  from cputcxy::@1
  [105] return 
  to:@return

(void()) chline((byte) chline::length)
chline: scope:[chline]  from MakeNiceScreen::@12 MakeNiceScreen::@8 MakeTeeLine::@1
  [106] (byte) chline::length#4 ← phi( MakeNiceScreen::@12/(byte) chline::length#2 MakeNiceScreen::@8/(byte) chline::length#1 MakeTeeLine::@1/(byte) chline::length#0 )
  to:chline::@1
chline::@1: scope:[chline]  from chline chline::@3
  [107] (byte) chline::i#2 ← phi( chline/(byte) 0 chline::@3/(byte) chline::i#1 )
  [108] if((byte) chline::i#2<(byte) chline::length#4) goto chline::@2
  to:chline::@return
chline::@return: scope:[chline]  from chline::@1
  [109] return 
  to:@return
chline::@2: scope:[chline]  from chline::@1
  [110] phi()
  [111] call cputc 
  to:chline::@3
chline::@3: scope:[chline]  from chline::@2
  [112] (byte) chline::i#1 ← ++ (byte) chline::i#2
  to:chline::@1

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from MakeNiceScreen::@11 MakeNiceScreen::@13 MakeNiceScreen::@9 MakeTeeLine::@2 chline::@2 cputcxy::@1 cputs::@2 cvline::@2
  [113] (byte) cputc::c#8 ← phi( MakeNiceScreen::@9/(const nomodify byte) CH_URCORNER MakeNiceScreen::@11/(const nomodify byte) CH_LLCORNER MakeNiceScreen::@13/(const nomodify byte) CH_LRCORNER MakeTeeLine::@2/(const nomodify byte) CH_RTEE chline::@2/(const nomodify byte) CH_HLINE cputcxy::@1/(byte) cputc::c#1 cputs::@2/(byte) cputc::c#0 cvline::@2/(const nomodify byte) CH_VLINE )
  [114] if((byte) cputc::c#8==(byte) '
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [115] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#8
  [116] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor
  [117] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x
  [118] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [119] phi()
  [120] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [121] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [122] phi()
  [123] call cputln 
  to:cputc::@return

(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
cvlinexy: scope:[cvlinexy]  from MakeNiceScreen::@10 MakeNiceScreen::@14
  [124] (byte) cvlinexy::x#2 ← phi( MakeNiceScreen::@10/(byte) 0 MakeNiceScreen::@14/(byte) cvlinexy::x#1 )
  [125] (byte) gotoxy::x#5 ← (byte) cvlinexy::x#2
  [126] call gotoxy 
  to:cvlinexy::@1
cvlinexy::@1: scope:[cvlinexy]  from cvlinexy
  [127] phi()
  [128] call cvline 
  to:cvlinexy::@return
cvlinexy::@return: scope:[cvlinexy]  from cvlinexy::@1
  [129] return 
  to:@return

(void()) MakeTeeLine((byte) MakeTeeLine::Y)
MakeTeeLine: scope:[MakeTeeLine]  from MakeNiceScreen::@15 MakeNiceScreen::@16
  [130] (byte) MakeTeeLine::Y#2 ← phi( MakeNiceScreen::@15/(byte) 7 MakeNiceScreen::@16/(byte) $16 )
  [131] (byte) cputcxy::y#0 ← (byte) MakeTeeLine::Y#2
  [132] call cputcxy 
  to:MakeTeeLine::@1
MakeTeeLine::@1: scope:[MakeTeeLine]  from MakeTeeLine
  [133] (byte) chline::length#0 ← (volatile byte) XSize - (byte) 2
  [134] call chline 
  to:MakeTeeLine::@2
MakeTeeLine::@2: scope:[MakeTeeLine]  from MakeTeeLine::@1
  [135] phi()
  [136] call cputc 
  to:MakeTeeLine::@return
MakeTeeLine::@return: scope:[MakeTeeLine]  from MakeTeeLine::@2
  [137] return 
  to:@return

(word()) strlen((byte*) strlen::str)
strlen: scope:[strlen]  from MakeNiceScreen::@2
  [138] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [139] (word) strlen::len#2 ← phi( strlen/(word) 0 strlen::@2/(word) strlen::len#1 )
  [139] (byte*) strlen::str#2 ← phi( strlen/(byte*) strlen::str#1 strlen::@2/(byte*) strlen::str#0 )
  [140] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [141] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [142] (word) strlen::len#1 ← ++ (word) strlen::len#2
  [143] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2
  to:strlen::@1

(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
cputsxy: scope:[cputsxy]  from MakeNiceScreen::@17
  [144] (byte) gotoxy::x#3 ← (byte) cputsxy::x#0
  [145] (byte) gotoxy::y#3 ← (byte) cputsxy::y#0
  [146] call gotoxy 
  to:cputsxy::@1
cputsxy::@1: scope:[cputsxy]  from cputsxy
  [147] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0
  [148] call cputs 
  to:cputsxy::@return
cputsxy::@return: scope:[cputsxy]  from cputsxy::@1
  [149] return 
  to:@return

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cputcxy cputsxy cscroll::@2 cvline::@3 cvlinexy
  [150] (byte) gotoxy::x#6 ← phi( cputcxy/(byte) 0 cputsxy/(byte) gotoxy::x#3 cscroll::@2/(byte) 0 cvline::@3/(byte) gotoxy::x#4 cvlinexy/(byte) gotoxy::x#5 )
  [150] (byte) gotoxy::y#6 ← phi( cputcxy/(byte) gotoxy::y#2 cputsxy/(byte) gotoxy::y#3 cscroll::@2/(byte) 0 cvline::@3/(byte) gotoxy::y#4 cvlinexy/(byte) 1 )
  [151] if((byte) gotoxy::y#6<(byte) $19+(byte) 1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [152] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [153] (byte) gotoxy::y#7 ← phi( gotoxy::@3/(byte) gotoxy::y#6 gotoxy/(byte) 0 )
  [154] if((byte) gotoxy::x#6<(byte) $28) goto gotoxy::@4
  to:gotoxy::@2
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  [155] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  [156] (byte) gotoxy::x#7 ← phi( gotoxy::@4/(byte) gotoxy::x#6 gotoxy::@1/(byte) 0 )
  [157] (byte) conio_cursor_x ← (byte) gotoxy::x#7
  [158] (byte) conio_cursor_y ← (byte) gotoxy::y#7
  [159] (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7
  [160] (word~) gotoxy::$8 ← (word~) gotoxy::$7 << (byte) 2
  [161] (word~) gotoxy::$9 ← (word~) gotoxy::$8 + (word~) gotoxy::$7
  [162] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$9 << (byte) 3
  [163] (byte*~) gotoxy::$5 ← (const nomodify byte*) DEFAULT_SCREEN + (word) gotoxy::line_offset#0
  [164] (byte*) conio_line_text ← (byte*~) gotoxy::$5
  [165] (byte*~) gotoxy::$6 ← (const nomodify byte*) COLORRAM + (word) gotoxy::line_offset#0
  [166] (byte*) conio_line_color ← (byte*~) gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [167] return 
  to:@return

(void()) cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [168] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28
  [169] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28
  [170] (byte) conio_cursor_x ← (byte) 0
  [171] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y
  [172] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [173] return 
  to:@return

(void()) cvline((byte) cvline::length)
cvline: scope:[cvline]  from cvlinexy::@1
  [174] (byte) cvline::x#0 ← (byte) conio_cursor_x
  [175] (byte) cvline::y#0 ← (byte) conio_cursor_y
  to:cvline::@1
cvline::@1: scope:[cvline]  from cvline cvline::@4
  [176] (byte) cvline::y#2 ← phi( cvline/(byte) cvline::y#0 cvline::@4/(byte) cvline::y#1 )
  [176] (byte) cvline::i#2 ← phi( cvline/(byte) 0 cvline::@4/(byte) cvline::i#1 )
  [177] if((byte) cvline::i#2<(const byte) cvline::length#0) goto cvline::@2
  to:cvline::@return
cvline::@return: scope:[cvline]  from cvline::@1
  [178] return 
  to:@return
cvline::@2: scope:[cvline]  from cvline::@1
  [179] phi()
  [180] call cputc 
  to:cvline::@3
cvline::@3: scope:[cvline]  from cvline::@2
  [181] (byte) cvline::y#1 ← ++ (byte) cvline::y#2
  [182] (byte) gotoxy::x#4 ← (byte) cvline::x#0
  [183] (byte) gotoxy::y#4 ← (byte) cvline::y#1
  [184] call gotoxy 
  to:cvline::@4
cvline::@4: scope:[cvline]  from cvline::@3
  [185] (byte) cvline::i#1 ← ++ (byte) cvline::i#2
  to:cvline::@1

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from cputsxy::@1
  [186] phi()
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [187] (to_nomodify byte*) cputs::s#2 ← phi( cputs/(to_nomodify byte*) cputs::s#1 cputs::@2/(to_nomodify byte*) cputs::s#0 )
  [188] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  [189] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  [190] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [191] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [192] (byte) cputc::c#0 ← (byte) cputs::c#1
  [193] call cputc 
  to:cputs::@1

(void()) cscroll()
cscroll: scope:[cscroll]  from cputln
  [194] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [195] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [196] phi()
  [197] call gotoxy 
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@7
  [198] return 
  to:@return
cscroll::@3: scope:[cscroll]  from cscroll::@1
  [199] phi()
  [200] call memcpy 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [201] phi()
  [202] call memcpy 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [203] phi()
  [204] call memset 
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  [205] (byte) memset::c#1 ← (byte) conio_textcolor
  [206] call memset 
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  [207] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28
  [208] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28
  [209] (byte) conio_cursor_y ← -- (byte) conio_cursor_y
  to:cscroll::@return

(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  [210] (void*) memcpy::destination#2 ← phi( cscroll::@3/(void*)(const nomodify byte*) DEFAULT_SCREEN cscroll::@4/(void*)(const nomodify byte*) COLORRAM )
  [210] (void*) memcpy::source#2 ← phi( cscroll::@3/(void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 cscroll::@4/(void*)(const nomodify byte*) COLORRAM+(byte) $28 )
  [211] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28
  [212] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
  [213] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [214] (byte*) memcpy::dst#2 ← phi( memcpy/(byte*) memcpy::dst#4 memcpy::@2/(byte*) memcpy::dst#1 )
  [214] (byte*) memcpy::src#2 ← phi( memcpy/(byte*) memcpy::src#4 memcpy::@2/(byte*) memcpy::src#1 )
  [215] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [216] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [217] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2)
  [218] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2
  [219] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2
  to:memcpy::@1

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  [220] (byte) memset::c#4 ← phi( cscroll::@5/(byte) ' ' cscroll::@6/(byte) memset::c#1 )
  [220] (void*) memset::str#3 ← phi( cscroll::@5/(void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 cscroll::@6/(void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28
  [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [223] (byte*) memset::dst#2 ← phi( memset::@1/(byte*) memset::dst#4 memset::@3/(byte*) memset::dst#1 )
  [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [225] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [226] *((byte*) memset::dst#2) ← (byte) memset::c#4
  [227] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@2

null depth in calling loop Loop head: cvline::@1 tails: cvline::@4 blocks: cvline::@4 cvline::@3 cvline::@2 cvline::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cvline::@1 tails: cvline::@4 blocks: cvline::@4 cvline::@3 cvline::@2 cvline::@1  in scope gotoxy
null depth in calling loop Loop head: cvline::@1 tails: cvline::@4 blocks: cvline::@4 cvline::@3 cvline::@2 cvline::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cvline::@1 tails: cvline::@4 blocks: cvline::@4 cvline::@3 cvline::@2 cvline::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cvline::@1 tails: cvline::@4 blocks: cvline::@4 cvline::@3 cvline::@2 cvline::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cvline::@1 tails: cvline::@4 blocks: cvline::@4 cvline::@3 cvline::@2 cvline::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc

VARIABLE REGISTER WEIGHTS
(byte) $0::Y
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(void()) MakeNiceScreen()
(word~) MakeNiceScreen::$22 1001.0
(byte~) MakeNiceScreen::$23 2002.0
(byte~) MakeNiceScreen::$34 2002.0
(byte) MakeNiceScreen::I
(byte) MakeNiceScreen::I#2 2002.0
(byte) MakeNiceScreen::I#3 214.5
(to_nomodify struct $0*) MakeNiceScreen::T
(to_nomodify struct $0*) MakeNiceScreen::T#2 1001.0
(to_nomodify struct $0*) MakeNiceScreen::T#3 154.0
(byte) MakeNiceScreen::X
(byte) MakeNiceScreen::X#1 1001.0
(void()) MakeTeeLine((byte) MakeTeeLine::Y)
(byte) MakeTeeLine::Y
(byte) MakeTeeLine::Y#2 1001.0
(volatile byte) XSize loadstore 39.101694915254235
(volatile byte) YSize loadstore 20.0
(void()) __start()
(byte()) bgcolor((byte) bgcolor::color)
(byte) bgcolor::color
(byte) bgcolor::old
(byte) bgcolor::return
(byte()) bordercolor((byte) bordercolor::color)
(byte) bordercolor::color
(byte) bordercolor::old
(byte) bordercolor::return
(void()) chline((byte) chline::length)
(byte) chline::i
(byte) chline::i#1 200002.0
(byte) chline::i#2 75000.75
(byte) chline::length
(byte) chline::length#0 2002.0
(byte) chline::length#1 202.0
(byte) chline::length#2 202.0
(byte) chline::length#4 16867.333333333332
(void()) clrscr()
(byte) clrscr::c
(byte) clrscr::c#1 200002.0
(byte) clrscr::c#2 125001.25
(byte) clrscr::l
(byte) clrscr::l#1 20002.0
(byte) clrscr::l#2 3333.6666666666665
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 10001.0
(byte*) clrscr::line_cols#5 15000.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 6667.333333333333
(byte*) clrscr::line_text#5 17143.285714285714
(byte) conio_cursor_x loadstore 1.1941177766E9
(byte) conio_cursor_y loadstore 1.5000001251136363E9
(byte*) conio_line_color loadstore 1.5262500126125002E9
(byte*) conio_line_text loadstore 1.4890244025487807E9
(byte) conio_scroll_enable loadstore 7.575758336363636E7
(byte) conio_textcolor loadstore 6.558507146753247E7
(void()) cputc((byte) cputc::c)
(byte) cputc::c
(byte) cputc::c#0 2.0000002E7
(byte) cputc::c#1 20002.0
(byte) cputc::c#8 1.05005002E8
(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
(byte) cputcxy::c
(byte) cputcxy::c#2 3333.6666666666665
(byte) cputcxy::x
(byte) cputcxy::y
(byte) cputcxy::y#0 2002.0
(byte) cputcxy::y#2 11002.0
(void()) cputln()
(void()) cputs((to_nomodify byte*) cputs::s)
(byte) cputs::c
(byte) cputs::c#1 1.0000001E7
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 5000000.5
(to_nomodify byte*) cputs::s#1 55001.0
(to_nomodify byte*) cputs::s#2 1.5050002E7
(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
(to_nomodify byte*) cputsxy::s
(to_nomodify byte*) cputsxy::s#0 1833.6666666666665
(byte) cputsxy::x
(byte) cputsxy::x#0 5501.0
(byte) cputsxy::y
(byte) cputsxy::y#0 5501.0
(void()) cscroll()
(void()) cvline((byte) cvline::length)
(byte) cvline::i
(byte) cvline::i#1 200002.0
(byte) cvline::i#2 37500.375
(byte) cvline::length
(byte) cvline::x
(byte) cvline::x#0 10000.181818181818
(byte) cvline::y
(byte) cvline::y#0 20002.0
(byte) cvline::y#1 60000.600000000006
(byte) cvline::y#2 52500.75
(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
(byte) cvlinexy::length
(byte) cvlinexy::x
(byte) cvlinexy::x#1 202.0
(byte) cvlinexy::x#2 1102.0
(byte) cvlinexy::y
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(byte*~) gotoxy::$5 2.00000000002E11
(byte*~) gotoxy::$6 2.00000000002E11
(word~) gotoxy::$7 1.500000000015E11
(word~) gotoxy::$8 2.00000000002E11
(word~) gotoxy::$9 2.00000000002E11
(word) gotoxy::line_offset
(word) gotoxy::line_offset#0 1.00000000001E11
(byte) gotoxy::x
(byte) gotoxy::x#3 10001.0
(byte) gotoxy::x#4 100001.0
(byte) gotoxy::x#5 2002.0
(byte) gotoxy::x#6 3.3333351834166668E10
(byte) gotoxy::x#7 2.00000000002E11
(byte) gotoxy::y
(byte) gotoxy::y#2 20002.0
(byte) gotoxy::y#3 20002.0
(byte) gotoxy::y#4 200002.0
(byte) gotoxy::y#6 6.6666706668333336E10
(byte) gotoxy::y#7 3.3333333333666668E10
(byte()) kbhit()
(byte) kbhit::return
(byte) kbhit::return#0 367.33333333333337
(byte) kbhit::return#2 202.0
(void()) main()
(byte~) main::$3 202.0
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(void*) memcpy::destination
(void*) memcpy::destination#2
(byte*) memcpy::dst
(byte*) memcpy::dst#1 1.00000000000001E14
(byte*) memcpy::dst#2 1.0003333333333467E14
(byte*) memcpy::dst#4 2.00000000002E11
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2
(byte*) memcpy::src
(byte*) memcpy::src#1 2.00000000000002E14
(byte*) memcpy::src#2 1.0002500000000125E14
(byte*) memcpy::src#4 1.00000000001E11
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 1.251250000000025E13
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(byte) memset::c
(byte) memset::c#1 2.0000000002E10
(byte) memset::c#4 1.4287142857143143E13
(byte*) memset::dst
(byte*) memset::dst#1 2.00000000000002E14
(byte*) memset::dst#2 1.3336666666666834E14
(byte*) memset::dst#4 2.00000000002E11
(byte*) memset::end
(byte*) memset::end#0 1.6683333333333668E13
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3
(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
(byte*) screensize::x
(byte*) screensize::y
(byte()) scroll((byte) scroll::onoff)
(byte) scroll::old
(byte) scroll::onoff
(byte) scroll::return
(word()) strlen((byte*) strlen::str)
(word) strlen::len
(word) strlen::len#1 1000001.0
(word) strlen::len#2 500250.75
(word) strlen::return
(word) strlen::return#2 2002.0
(byte*) strlen::str
(byte*) strlen::str#0 2000002.0
(byte*) strlen::str#1 5501.0
(byte*) strlen::str#2 1003334.6666666667
(byte()) textcolor((byte) textcolor::color)
(byte) textcolor::color
(byte) textcolor::old
(byte) textcolor::return

Initial phi equivalence classes
[ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
[ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ cputcxy::y#2 cputcxy::y#0 ]
[ cputcxy::c#2 ]
[ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
[ chline::i#2 chline::i#1 ]
[ cputc::c#8 cputc::c#1 cputc::c#0 ]
[ cvlinexy::x#2 cvlinexy::x#1 ]
[ MakeTeeLine::Y#2 ]
[ strlen::str#2 strlen::str#1 strlen::str#0 ]
[ strlen::len#2 strlen::len#1 ]
[ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ]
[ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ]
[ cvline::i#2 cvline::i#1 ]
[ cvline::y#2 cvline::y#0 cvline::y#1 ]
[ cputs::s#2 cputs::s#1 cputs::s#0 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 memset::c#1 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
Added variable conio_cursor_x to live range equivalence class [ conio_cursor_x ]
Added variable conio_cursor_y to live range equivalence class [ conio_cursor_y ]
Added variable conio_line_text to live range equivalence class [ conio_line_text ]
Added variable conio_line_color to live range equivalence class [ conio_line_color ]
Added variable conio_textcolor to live range equivalence class [ conio_textcolor ]
Added variable conio_scroll_enable to live range equivalence class [ conio_scroll_enable ]
Added variable XSize to live range equivalence class [ XSize ]
Added variable YSize to live range equivalence class [ YSize ]
Added variable kbhit::return#2 to live range equivalence class [ kbhit::return#2 ]
Added variable main::$3 to live range equivalence class [ main::$3 ]
Added variable strlen::return#2 to live range equivalence class [ strlen::return#2 ]
Added variable MakeNiceScreen::$22 to live range equivalence class [ MakeNiceScreen::$22 ]
Added variable MakeNiceScreen::$34 to live range equivalence class [ MakeNiceScreen::$34 ]
Added variable MakeNiceScreen::$23 to live range equivalence class [ MakeNiceScreen::$23 ]
Added variable MakeNiceScreen::X#1 to live range equivalence class [ MakeNiceScreen::X#1 ]
Added variable cputsxy::s#0 to live range equivalence class [ cputsxy::s#0 ]
Added variable cputsxy::x#0 to live range equivalence class [ cputsxy::x#0 ]
Added variable cputsxy::y#0 to live range equivalence class [ cputsxy::y#0 ]
Added variable kbhit::return#0 to live range equivalence class [ kbhit::return#0 ]
Added variable gotoxy::$7 to live range equivalence class [ gotoxy::$7 ]
Added variable gotoxy::$8 to live range equivalence class [ gotoxy::$8 ]
Added variable gotoxy::$9 to live range equivalence class [ gotoxy::$9 ]
Added variable gotoxy::line_offset#0 to live range equivalence class [ gotoxy::line_offset#0 ]
Added variable gotoxy::$5 to live range equivalence class [ gotoxy::$5 ]
Added variable gotoxy::$6 to live range equivalence class [ gotoxy::$6 ]
Added variable cvline::x#0 to live range equivalence class [ cvline::x#0 ]
Added variable cputs::c#1 to live range equivalence class [ cputs::c#1 ]
Added variable memcpy::src_end#0 to live range equivalence class [ memcpy::src_end#0 ]
Added variable memset::end#0 to live range equivalence class [ memset::end#0 ]
Complete equivalence classes
[ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
[ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#5 clrscr::line_text#1 ]
[ clrscr::line_cols#5 clrscr::line_cols#1 ]
[ clrscr::c#2 clrscr::c#1 ]
[ cputcxy::y#2 cputcxy::y#0 ]
[ cputcxy::c#2 ]
[ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
[ chline::i#2 chline::i#1 ]
[ cputc::c#8 cputc::c#1 cputc::c#0 ]
[ cvlinexy::x#2 cvlinexy::x#1 ]
[ MakeTeeLine::Y#2 ]
[ strlen::str#2 strlen::str#1 strlen::str#0 ]
[ strlen::len#2 strlen::len#1 ]
[ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ]
[ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ]
[ cvline::i#2 cvline::i#1 ]
[ cvline::y#2 cvline::y#0 cvline::y#1 ]
[ cputs::s#2 cputs::s#1 cputs::s#0 ]
[ memcpy::source#2 ]
[ memcpy::destination#2 ]
[ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
[ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
[ memset::str#3 ]
[ memset::c#4 memset::c#1 ]
[ memset::dst#2 memset::dst#4 memset::dst#1 ]
[ conio_cursor_x ]
[ conio_cursor_y ]
[ conio_line_text ]
[ conio_line_color ]
[ conio_textcolor ]
[ conio_scroll_enable ]
[ XSize ]
[ YSize ]
[ kbhit::return#2 ]
[ main::$3 ]
[ strlen::return#2 ]
[ MakeNiceScreen::$22 ]
[ MakeNiceScreen::$34 ]
[ MakeNiceScreen::$23 ]
[ MakeNiceScreen::X#1 ]
[ cputsxy::s#0 ]
[ cputsxy::x#0 ]
[ cputsxy::y#0 ]
[ kbhit::return#0 ]
[ gotoxy::$7 ]
[ gotoxy::$8 ]
[ gotoxy::$9 ]
[ gotoxy::line_offset#0 ]
[ gotoxy::$5 ]
[ gotoxy::$6 ]
[ cvline::x#0 ]
[ cputs::c#1 ]
[ memcpy::src_end#0 ]
[ memset::end#0 ]
Allocated zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
Allocated zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ]
Allocated zp[1]:5 [ clrscr::l#2 clrscr::l#1 ]
Allocated zp[2]:6 [ clrscr::line_text#5 clrscr::line_text#1 ]
Allocated zp[2]:8 [ clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated zp[1]:10 [ clrscr::c#2 clrscr::c#1 ]
Allocated zp[1]:11 [ cputcxy::y#2 cputcxy::y#0 ]
Allocated zp[1]:12 [ cputcxy::c#2 ]
Allocated zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
Allocated zp[1]:14 [ chline::i#2 chline::i#1 ]
Allocated zp[1]:15 [ cputc::c#8 cputc::c#1 cputc::c#0 ]
Allocated zp[1]:16 [ cvlinexy::x#2 cvlinexy::x#1 ]
Allocated zp[1]:17 [ MakeTeeLine::Y#2 ]
Allocated zp[2]:18 [ strlen::str#2 strlen::str#1 strlen::str#0 ]
Allocated zp[2]:20 [ strlen::len#2 strlen::len#1 ]
Allocated zp[1]:22 [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ]
Allocated zp[1]:23 [ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ]
Allocated zp[1]:24 [ cvline::i#2 cvline::i#1 ]
Allocated zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ]
Allocated zp[2]:26 [ cputs::s#2 cputs::s#1 cputs::s#0 ]
Allocated zp[2]:28 [ memcpy::source#2 ]
Allocated zp[2]:30 [ memcpy::destination#2 ]
Allocated zp[2]:32 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated zp[2]:34 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated zp[2]:36 [ memset::str#3 ]
Allocated zp[1]:38 [ memset::c#4 memset::c#1 ]
Allocated zp[2]:39 [ memset::dst#2 memset::dst#4 memset::dst#1 ]
Allocated zp[1]:41 [ conio_cursor_x ]
Allocated zp[1]:42 [ conio_cursor_y ]
Allocated zp[2]:43 [ conio_line_text ]
Allocated zp[2]:45 [ conio_line_color ]
Allocated zp[1]:47 [ conio_textcolor ]
Allocated zp[1]:48 [ conio_scroll_enable ]
Allocated zp[1]:49 [ XSize ]
Allocated zp[1]:50 [ YSize ]
Allocated zp[1]:51 [ kbhit::return#2 ]
Allocated zp[1]:52 [ main::$3 ]
Allocated zp[2]:53 [ strlen::return#2 ]
Allocated zp[2]:55 [ MakeNiceScreen::$22 ]
Allocated zp[1]:57 [ MakeNiceScreen::$34 ]
Allocated zp[1]:58 [ MakeNiceScreen::$23 ]
Allocated zp[1]:59 [ MakeNiceScreen::X#1 ]
Allocated zp[2]:60 [ cputsxy::s#0 ]
Allocated zp[1]:62 [ cputsxy::x#0 ]
Allocated zp[1]:63 [ cputsxy::y#0 ]
Allocated zp[1]:64 [ kbhit::return#0 ]
Allocated zp[2]:65 [ gotoxy::$7 ]
Allocated zp[2]:67 [ gotoxy::$8 ]
Allocated zp[2]:69 [ gotoxy::$9 ]
Allocated zp[2]:71 [ gotoxy::line_offset#0 ]
Allocated zp[2]:73 [ gotoxy::$5 ]
Allocated zp[2]:75 [ gotoxy::$6 ]
Allocated zp[1]:77 [ cvline::x#0 ]
Allocated zp[1]:78 [ cputs::c#1 ]
Allocated zp[2]:79 [ memcpy::src_end#0 ]
Allocated zp[2]:81 [ memset::end#0 ]

INITIAL ASM
Target platform is c64basic / MOS6502X
  // File Comments
// Show a nice screen using conio.h
// From CC65 sample "Eine kleine Nachtmusik" by Ullrich von Bassewitz
// https://github.com/cc65/cc65/blob/master/samples/nachtm.c
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__start)
.pc = $80d "Program"
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  // The horizontal line character
  .const CH_HLINE = $40
  // The vertical line character
  .const CH_VLINE = $5d
  // The upper left corner character
  .const CH_ULCORNER = $70
  // The upper right corner character
  .const CH_URCORNER = $6e
  // The lower left corner character
  .const CH_LLCORNER = $6d
  // The lower right corner character
  .const CH_LRCORNER = $7d
  // The left T character
  .const CH_LTEE = $6b
  // The right T character
  .const CH_RTEE = $73
  .const COLOR_GRAY3 = $f
  .const COLOR_BLACK = 0
  .label VIC_MEMORY = $d018
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $29
  // The current cursor y-position
  .label conio_cursor_y = $2a
  // The current text cursor line start
  .label conio_line_text = $2b
  // The current color cursor line start
  .label conio_line_color = $2d
  // The current text color
  .label conio_textcolor = $2f
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  .label conio_scroll_enable = $30
  .label XSize = $31
  .label YSize = $32
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] (byte) conio_textcolor ← (const nomodify byte) LIGHT_BLUE -- vbuz1=vbuc1 
    lda #LIGHT_BLUE
    sta.z conio_textcolor
    // [6] (byte) conio_scroll_enable ← (byte) 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_scroll_enable
    // [7] (volatile byte) XSize ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z XSize
    // [8] (volatile byte) YSize ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z YSize
    // [9] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [10] call main 
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [11] return 
    rts
}
  // main
main: {
    .label __3 = $34
    // [12] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17 -- _deref_pbuc1=vbuc2 
    lda #$17
    sta VIC_MEMORY
    // [13] call screensize 
    jsr screensize
    // [14] phi from main to main::@3 [phi:main->main::@3]
  __b3_from_main:
    jmp __b3
    // main::@3
  __b3:
    // [15] call MakeNiceScreen 
    // [27] phi from main::@3 to MakeNiceScreen [phi:main::@3->MakeNiceScreen]
  MakeNiceScreen_from___b3:
    jsr MakeNiceScreen
    // [16] phi from main::@3 main::@4 to main::@1 [phi:main::@3/main::@4->main::@1]
  __b1_from___b3:
  __b1_from___b4:
    jmp __b1
    // main::@1
  __b1:
    // [17] call kbhit 
    jsr kbhit
    // [18] (byte) kbhit::return#2 ← (byte) kbhit::return#0 -- vbuz1=vbuz2 
    lda.z kbhit.return
    sta.z kbhit.return_1
    jmp __b4
    // main::@4
  __b4:
    // [19] (byte~) main::$3 ← (byte) kbhit::return#2 -- vbuz1=vbuz2 
    lda.z kbhit.return_1
    sta.z __3
    // [20] if((byte) 0==(byte~) main::$3) goto main::@1 -- vbuc1_eq_vbuz1_then_la1 
    lda #0
    cmp.z __3
    beq __b1_from___b4
    // [21] phi from main::@4 to main::@2 [phi:main::@4->main::@2]
  __b2_from___b4:
    jmp __b2
    // main::@2
  __b2:
    // [22] call clrscr 
    // [76] phi from main::@2 to clrscr [phi:main::@2->clrscr]
  clrscr_from___b2:
    jsr clrscr
    jmp __breturn
    // main::@return
  __breturn:
    // [23] return 
    rts
}
  // screensize
// Return the current screen size.
screensize: {
    .label x = XSize
    .label y = YSize
    // [24] *((const byte*) screensize::x#0) ← (byte) $28 -- _deref_pbuc1=vbuc2 
    lda #$28
    sta.z x
    // [25] *((const byte*) screensize::y#0) ← (byte) $19 -- _deref_pbuc1=vbuc2 
    lda #$19
    sta.z y
    jmp __breturn
    // screensize::@return
  __breturn:
    // [26] return 
    rts
}
  // MakeNiceScreen
MakeNiceScreen: {
    .label __22 = $37
    .label __23 = $3a
    .label __34 = $39
    .label X = $3b
    .label T = 3
    .label I = 2
    // [28] call scroll 
    // disable scrolling
    jsr scroll
    // [29] phi from MakeNiceScreen to MakeNiceScreen::@3 [phi:MakeNiceScreen->MakeNiceScreen::@3]
  __b3_from_MakeNiceScreen:
    jmp __b3
    // MakeNiceScreen::@3
  __b3:
    // [30] call textcolor 
    /* Clear the screen hide the cursor, set colors */
    jsr textcolor
    // [31] phi from MakeNiceScreen::@3 to MakeNiceScreen::@4 [phi:MakeNiceScreen::@3->MakeNiceScreen::@4]
  __b4_from___b3:
    jmp __b4
    // MakeNiceScreen::@4
  __b4:
    // [32] call bordercolor 
    jsr bordercolor
    // [33] phi from MakeNiceScreen::@4 to MakeNiceScreen::@5 [phi:MakeNiceScreen::@4->MakeNiceScreen::@5]
  __b5_from___b4:
    jmp __b5
    // MakeNiceScreen::@5
  __b5:
    // [34] call bgcolor 
    jsr bgcolor
    // [35] phi from MakeNiceScreen::@5 to MakeNiceScreen::@6 [phi:MakeNiceScreen::@5->MakeNiceScreen::@6]
  __b6_from___b5:
    jmp __b6
    // MakeNiceScreen::@6
  __b6:
    // [36] call clrscr 
    // [76] phi from MakeNiceScreen::@6 to clrscr [phi:MakeNiceScreen::@6->clrscr]
  clrscr_from___b6:
    jsr clrscr
    // [37] phi from MakeNiceScreen::@6 to MakeNiceScreen::@7 [phi:MakeNiceScreen::@6->MakeNiceScreen::@7]
  __b7_from___b6:
    jmp __b7
    // MakeNiceScreen::@7
  __b7:
    // [38] call cputcxy 
  /* Top line */
    // [100] phi from MakeNiceScreen::@7 to cputcxy [phi:MakeNiceScreen::@7->cputcxy]
  cputcxy_from___b7:
    // [100] phi (byte) cputcxy::c#2 = (const nomodify byte) CH_ULCORNER [phi:MakeNiceScreen::@7->cputcxy#0] -- vbuz1=vbuc1 
    lda #CH_ULCORNER
    sta.z cputcxy.c
    // [100] phi (byte) cputcxy::y#2 = (byte) 0 [phi:MakeNiceScreen::@7->cputcxy#1] -- vbuz1=vbuc1 
    lda #0
    sta.z cputcxy.y
    jsr cputcxy
    jmp __b8
    // MakeNiceScreen::@8
  __b8:
    // [39] (byte) chline::length#1 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [40] call chline 
    // [106] phi from MakeNiceScreen::@8 to chline [phi:MakeNiceScreen::@8->chline]
  chline_from___b8:
    // [106] phi (byte) chline::length#4 = (byte) chline::length#1 [phi:MakeNiceScreen::@8->chline#0] -- register_copy 
    jsr chline
    // [41] phi from MakeNiceScreen::@8 to MakeNiceScreen::@9 [phi:MakeNiceScreen::@8->MakeNiceScreen::@9]
  __b9_from___b8:
    jmp __b9
    // MakeNiceScreen::@9
  __b9:
    // [42] call cputc 
    // [113] phi from MakeNiceScreen::@9 to cputc [phi:MakeNiceScreen::@9->cputc]
  cputc_from___b9:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_URCORNER [phi:MakeNiceScreen::@9->cputc#0] -- vbuz1=vbuc1 
    lda #CH_URCORNER
    sta.z cputc.c
    jsr cputc
    // [43] phi from MakeNiceScreen::@9 to MakeNiceScreen::@10 [phi:MakeNiceScreen::@9->MakeNiceScreen::@10]
  __b10_from___b9:
    jmp __b10
    // MakeNiceScreen::@10
  __b10:
    // [44] call cvlinexy 
  /* Left line */
    // [124] phi from MakeNiceScreen::@10 to cvlinexy [phi:MakeNiceScreen::@10->cvlinexy]
  cvlinexy_from___b10:
    // [124] phi (byte) cvlinexy::x#2 = (byte) 0 [phi:MakeNiceScreen::@10->cvlinexy#0] -- vbuz1=vbuc1 
    lda #0
    sta.z cvlinexy.x
    jsr cvlinexy
    // [45] phi from MakeNiceScreen::@10 to MakeNiceScreen::@11 [phi:MakeNiceScreen::@10->MakeNiceScreen::@11]
  __b11_from___b10:
    jmp __b11
    // MakeNiceScreen::@11
  __b11:
    // [46] call cputc 
  /* Bottom line */
    // [113] phi from MakeNiceScreen::@11 to cputc [phi:MakeNiceScreen::@11->cputc]
  cputc_from___b11:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_LLCORNER [phi:MakeNiceScreen::@11->cputc#0] -- vbuz1=vbuc1 
    lda #CH_LLCORNER
    sta.z cputc.c
    jsr cputc
    jmp __b12
    // MakeNiceScreen::@12
  __b12:
    // [47] (byte) chline::length#2 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [48] call chline 
    // [106] phi from MakeNiceScreen::@12 to chline [phi:MakeNiceScreen::@12->chline]
  chline_from___b12:
    // [106] phi (byte) chline::length#4 = (byte) chline::length#2 [phi:MakeNiceScreen::@12->chline#0] -- register_copy 
    jsr chline
    // [49] phi from MakeNiceScreen::@12 to MakeNiceScreen::@13 [phi:MakeNiceScreen::@12->MakeNiceScreen::@13]
  __b13_from___b12:
    jmp __b13
    // MakeNiceScreen::@13
  __b13:
    // [50] call cputc 
    // [113] phi from MakeNiceScreen::@13 to cputc [phi:MakeNiceScreen::@13->cputc]
  cputc_from___b13:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_LRCORNER [phi:MakeNiceScreen::@13->cputc#0] -- vbuz1=vbuc1 
    lda #CH_LRCORNER
    sta.z cputc.c
    jsr cputc
    jmp __b14
    // MakeNiceScreen::@14
  __b14:
    // [51] (byte) cvlinexy::x#1 ← (volatile byte) XSize - (byte) 1 -- vbuz1=vbuz2_minus_1 
    ldx.z XSize
    dex
    stx.z cvlinexy.x
    // [52] call cvlinexy 
  /* Right line */
    // [124] phi from MakeNiceScreen::@14 to cvlinexy [phi:MakeNiceScreen::@14->cvlinexy]
  cvlinexy_from___b14:
    // [124] phi (byte) cvlinexy::x#2 = (byte) cvlinexy::x#1 [phi:MakeNiceScreen::@14->cvlinexy#0] -- register_copy 
    jsr cvlinexy
    // [53] phi from MakeNiceScreen::@14 to MakeNiceScreen::@15 [phi:MakeNiceScreen::@14->MakeNiceScreen::@15]
  __b15_from___b14:
    jmp __b15
    // MakeNiceScreen::@15
  __b15:
    // [54] call MakeTeeLine 
  /* Several divider lines */
    // [130] phi from MakeNiceScreen::@15 to MakeTeeLine [phi:MakeNiceScreen::@15->MakeTeeLine]
  MakeTeeLine_from___b15:
    // [130] phi (byte) MakeTeeLine::Y#2 = (byte) 7 [phi:MakeNiceScreen::@15->MakeTeeLine#0] -- vbuz1=vbuc1 
    lda #7
    sta.z MakeTeeLine.Y
    jsr MakeTeeLine
    // [55] phi from MakeNiceScreen::@15 to MakeNiceScreen::@16 [phi:MakeNiceScreen::@15->MakeNiceScreen::@16]
  __b16_from___b15:
    jmp __b16
    // MakeNiceScreen::@16
  __b16:
    // [56] call MakeTeeLine 
    // [130] phi from MakeNiceScreen::@16 to MakeTeeLine [phi:MakeNiceScreen::@16->MakeTeeLine]
  MakeTeeLine_from___b16:
    // [130] phi (byte) MakeTeeLine::Y#2 = (byte) $16 [phi:MakeNiceScreen::@16->MakeTeeLine#0] -- vbuz1=vbuc1 
    lda #$16
    sta.z MakeTeeLine.Y
    jsr MakeTeeLine
    // [57] phi from MakeNiceScreen::@16 to MakeNiceScreen::@1 [phi:MakeNiceScreen::@16->MakeNiceScreen::@1]
  __b1_from___b16:
    // [57] phi (to_nomodify struct $0*) MakeNiceScreen::T#3 = (const struct $0*) MakeNiceScreen::Text [phi:MakeNiceScreen::@16->MakeNiceScreen::@1#0] -- pssz1=pssc1 
    lda #<Text
    sta.z T
    lda #>Text
    sta.z T+1
    // [57] phi (byte) MakeNiceScreen::I#3 = (byte) 0 [phi:MakeNiceScreen::@16->MakeNiceScreen::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z I
    jmp __b1
  /* Write something into the frame */
    // MakeNiceScreen::@1
  __b1:
    // [58] if((byte) MakeNiceScreen::I#3<(byte) $c*(byte) $29/(byte) $29) goto MakeNiceScreen::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z I
    cmp #$c*$29/$29
    bcc __b2
    jmp __breturn
    // MakeNiceScreen::@return
  __breturn:
    // [59] return 
    rts
    // MakeNiceScreen::@2
  __b2:
    // [60] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 -- pbuz1=pbuz2_plus_1 
    lda.z T
    clc
    adc #1
    sta.z strlen.str
    lda.z T+1
    adc #0
    sta.z strlen.str+1
    // [61] call strlen 
    // [138] phi from MakeNiceScreen::@2 to strlen [phi:MakeNiceScreen::@2->strlen]
  strlen_from___b2:
    jsr strlen
    // [62] (word) strlen::return#2 ← (word) strlen::len#2 -- vwuz1=vwuz2 
    lda.z strlen.len
    sta.z strlen.return
    lda.z strlen.len+1
    sta.z strlen.return+1
    jmp __b17
    // MakeNiceScreen::@17
  __b17:
    // [63] (word~) MakeNiceScreen::$22 ← (word) strlen::return#2 -- vwuz1=vwuz2 
    lda.z strlen.return
    sta.z __22
    lda.z strlen.return+1
    sta.z __22+1
    // [64] (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22 -- vbuz1=_byte_vwuz2 
    lda.z __22
    sta.z __34
    // [65] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34 -- vbuz1=vbuz2_minus_vbuz3 
    lda.z XSize
    sec
    sbc.z __34
    sta.z __23
    // [66] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1 -- vbuz1=vbuz2_ror_1 
    lda.z __23
    lsr
    sta.z X
    // [67] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 -- pbuz1=pbuz2_plus_1 
    lda.z T
    clc
    adc #1
    sta.z cputsxy.s
    lda.z T+1
    adc #0
    sta.z cputsxy.s+1
    // [68] (byte) cputsxy::x#0 ← (byte) MakeNiceScreen::X#1 -- vbuz1=vbuz2 
    lda.z X
    sta.z cputsxy.x
    // [69] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (T),y
    sta.z cputsxy.y
    // [70] call cputsxy 
    jsr cputsxy
    jmp __b18
    // MakeNiceScreen::@18
  __b18:
    // [71] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29 -- pssz1=pssz1_plus_vbuc1 
    lda #$29
    clc
    adc.z T
    sta.z T
    bcc !+
    inc.z T+1
  !:
    // [72] (byte) MakeNiceScreen::I#2 ← ++ (byte) MakeNiceScreen::I#3 -- vbuz1=_inc_vbuz1 
    inc.z I
    // [57] phi from MakeNiceScreen::@18 to MakeNiceScreen::@1 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1]
  __b1_from___b18:
    // [57] phi (to_nomodify struct $0*) MakeNiceScreen::T#3 = (to_nomodify struct $0*) MakeNiceScreen::T#2 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1#0] -- register_copy 
    // [57] phi (byte) MakeNiceScreen::I#3 = (byte) MakeNiceScreen::I#2 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1#1] -- register_copy 
    jmp __b1
    Text: .byte 2
    .text "Wolfgang Amadeus Mozart"
    .byte 0
    .fill $10, 0
    .byte 4
    .text @"\"Eine kleine Nachtmusik\""
    .byte 0
    .fill $f, 0
    .byte 5
    .text "(KV 525)"
    .byte 0
    .fill $1f, 0
    .byte 9
    .text "Ported to the SID in 1987 by"
    .byte 0
    .fill $b, 0
    .byte $b
    .text "Joachim von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $c
    .text "(joachim@von-bassewitz.de)"
    .byte 0
    .fill $d, 0
    .byte $d
    .text "and"
    .byte 0
    .fill $24, 0
    .byte $e
    .text "Ullrich von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $f
    .text "(ullrich@von-bassewitz.de)"
    .byte 0
    .fill $d, 0
    .byte $12
    .text "C Implementation by"
    .byte 0
    .fill $14, 0
    .byte $13
    .text "Ullrich von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $17
    .text "Press any key to quit..."
    .byte 0
    .fill $f, 0
}
  // kbhit
// Return true if there's a key waiting, return false if not
kbhit: {
    // CIA#1 Port A: keyboard matrix columns and joystick #2
    .label CIA1_PORT_A = $dc00
    // CIA#1 Port B: keyboard matrix rows and joystick #1.
    .label CIA1_PORT_B = $dc01
    .label return = $40
    .label return_1 = $33
    // [73] *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta CIA1_PORT_A
    // [74] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B) -- vbuz1=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    sta.z return
    jmp __breturn
    // kbhit::@return
  __breturn:
    // [75] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label c = $a
    .label line_text = 6
    .label line_cols = 8
    .label l = 5
    // [77] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
  __b1_from_clrscr:
    // [77] phi (byte*) clrscr::line_cols#5 = (const nomodify byte*) COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [77] phi (byte*) clrscr::line_text#5 = (const nomodify byte*) DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [77] phi (byte) clrscr::l#2 = (byte) 0 [phi:clrscr->clrscr::@1#2] -- vbuz1=vbuc1 
    lda #0
    sta.z l
    jmp __b1
    // clrscr::@1
  __b1:
    // [78] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z l
    cmp #$19
    bcc __b3_from___b1
    jmp __b2
    // clrscr::@2
  __b2:
    // [79] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [80] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [81] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [82] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [83] return 
    rts
    // [84] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b3_from___b1:
    // [84] phi (byte) clrscr::c#2 = (byte) 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuz1=vbuc1 
    lda #0
    sta.z c
    jmp __b3
    // clrscr::@3
  __b3:
    // [85] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z c
    cmp #$28
    bcc __b4
    jmp __b5
    // clrscr::@5
  __b5:
    // [86] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // [87] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // [88] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2 -- vbuz1=_inc_vbuz1 
    inc.z l
    // [77] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
  __b1_from___b5:
    // [77] phi (byte*) clrscr::line_cols#5 = (byte*) clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [77] phi (byte*) clrscr::line_text#5 = (byte*) clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [77] phi (byte) clrscr::l#2 = (byte) clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // [89] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' -- pbuz1_derefidx_vbuz2=vbuc1 
    lda #' '
    ldy.z c
    sta (line_text),y
    // [90] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (byte) conio_textcolor -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z conio_textcolor
    ldy.z c
    sta (line_cols),y
    // [91] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2 -- vbuz1=_inc_vbuz1 
    inc.z c
    // [84] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
  __b3_from___b4:
    // [84] phi (byte) clrscr::c#2 = (byte) clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // scroll
// If onoff is 1, scrolling is enabled when outputting past the end of the screen
// If onoff is 1, scrolling is disabled and the cursor instead moves to (0,0)
// The function returns the old scroll setting.
scroll: {
    .const onoff = 0
    // [92] (byte) conio_scroll_enable ← (const byte) scroll::onoff#0 -- vbuz1=vbuc1 
    lda #onoff
    sta.z conio_scroll_enable
    jmp __breturn
    // scroll::@return
  __breturn:
    // [93] return 
    rts
}
  // textcolor
// Set the color for text output. The old color setting is returned.
textcolor: {
    // [94] (byte) conio_textcolor ← (const nomodify byte) COLOR_GRAY3 -- vbuz1=vbuc1 
    lda #COLOR_GRAY3
    sta.z conio_textcolor
    jmp __breturn
    // textcolor::@return
  __breturn:
    // [95] return 
    rts
}
  // bordercolor
// Set the color for the border. The old color setting is returned.
bordercolor: {
    // The border color register address
    .label CONIO_BORDERCOLOR = $d020
    // [96] *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK -- _deref_pbuc1=vbuc2 
    lda #COLOR_BLACK
    sta CONIO_BORDERCOLOR
    jmp __breturn
    // bordercolor::@return
  __breturn:
    // [97] return 
    rts
}
  // bgcolor
// Set the color for the background. The old color setting is returned.
bgcolor: {
    // The background color register address
    .label CONIO_BGCOLOR = $d021
    // [98] *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK -- _deref_pbuc1=vbuc2 
    lda #COLOR_BLACK
    sta CONIO_BGCOLOR
    jmp __breturn
    // bgcolor::@return
  __breturn:
    // [99] return 
    rts
}
  // cputcxy
// Move cursor and output one character
// Same as "gotoxy (x, y); cputc (c);"
// cputcxy(byte zp($b) y, byte zp($c) c)
cputcxy: {
    .label y = $b
    .label c = $c
    // [101] (byte) gotoxy::y#2 ← (byte) cputcxy::y#2 -- vbuz1=vbuz2 
    lda.z y
    sta.z gotoxy.y
    // [102] call gotoxy 
    // [150] phi from cputcxy to gotoxy [phi:cputcxy->gotoxy]
  gotoxy_from_cputcxy:
    // [150] phi (byte) gotoxy::x#6 = (byte) 0 [phi:cputcxy->gotoxy#0] -- vbuz1=vbuc1 
    lda #0
    sta.z gotoxy.x
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#2 [phi:cputcxy->gotoxy#1] -- register_copy 
    jsr gotoxy
    jmp __b1
    // cputcxy::@1
  __b1:
    // [103] (byte) cputc::c#1 ← (byte) cputcxy::c#2 -- vbuz1=vbuz2 
    lda.z c
    sta.z cputc.c
    // [104] call cputc 
    // [113] phi from cputcxy::@1 to cputc [phi:cputcxy::@1->cputc]
  cputc_from___b1:
    // [113] phi (byte) cputc::c#8 = (byte) cputc::c#1 [phi:cputcxy::@1->cputc#0] -- register_copy 
    jsr cputc
    jmp __breturn
    // cputcxy::@return
  __breturn:
    // [105] return 
    rts
}
  // chline
// Output a horizontal line with the given length starting at the current cursor position.
// chline(byte zp($d) length)
chline: {
    .label i = $e
    .label length = $d
    // [107] phi from chline to chline::@1 [phi:chline->chline::@1]
  __b1_from_chline:
    // [107] phi (byte) chline::i#2 = (byte) 0 [phi:chline->chline::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // chline::@1
  __b1:
    // [108] if((byte) chline::i#2<(byte) chline::length#4) goto chline::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2_from___b1
    jmp __breturn
    // chline::@return
  __breturn:
    // [109] return 
    rts
    // [110] phi from chline::@1 to chline::@2 [phi:chline::@1->chline::@2]
  __b2_from___b1:
    jmp __b2
    // chline::@2
  __b2:
    // [111] call cputc 
    // [113] phi from chline::@2 to cputc [phi:chline::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_HLINE [phi:chline::@2->cputc#0] -- vbuz1=vbuc1 
    lda #CH_HLINE
    sta.z cputc.c
    jsr cputc
    jmp __b3
    // chline::@3
  __b3:
    // [112] (byte) chline::i#1 ← ++ (byte) chline::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [107] phi from chline::@3 to chline::@1 [phi:chline::@3->chline::@1]
  __b1_from___b3:
    // [107] phi (byte) chline::i#2 = (byte) chline::i#1 [phi:chline::@3->chline::@1#0] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte zp($f) c)
cputc: {
    .label c = $f
    // [114] if((byte) cputc::c#8==(byte) ' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [115] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#8 -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z c
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [116] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z conio_textcolor
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [117] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [118] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [119] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [120] call cputln 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [121] return 
    rts
    // [122] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [123] call cputln 
    jsr cputln
    jmp __breturn
}
  // cvlinexy
// Move cursor and output a vertical line with the given length
// Same as "gotoxy (x, y); cvline (length);"
// cvlinexy(byte zp($10) x)
cvlinexy: {
    .label x = $10
    // [125] (byte) gotoxy::x#5 ← (byte) cvlinexy::x#2 -- vbuz1=vbuz2 
    lda.z x
    sta.z gotoxy.x
    // [126] call gotoxy 
    // [150] phi from cvlinexy to gotoxy [phi:cvlinexy->gotoxy]
  gotoxy_from_cvlinexy:
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#5 [phi:cvlinexy->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) 1 [phi:cvlinexy->gotoxy#1] -- vbuz1=vbuc1 
    lda #1
    sta.z gotoxy.y
    jsr gotoxy
    // [127] phi from cvlinexy to cvlinexy::@1 [phi:cvlinexy->cvlinexy::@1]
  __b1_from_cvlinexy:
    jmp __b1
    // cvlinexy::@1
  __b1:
    // [128] call cvline 
    jsr cvline
    jmp __breturn
    // cvlinexy::@return
  __breturn:
    // [129] return 
    rts
}
  // MakeTeeLine
// MakeTeeLine(byte zp($11) Y)
MakeTeeLine: {
    .label Y = $11
    // [131] (byte) cputcxy::y#0 ← (byte) MakeTeeLine::Y#2 -- vbuz1=vbuz2 
    lda.z Y
    sta.z cputcxy.y
    // [132] call cputcxy 
    // [100] phi from MakeTeeLine to cputcxy [phi:MakeTeeLine->cputcxy]
  cputcxy_from_MakeTeeLine:
    // [100] phi (byte) cputcxy::c#2 = (const nomodify byte) CH_LTEE [phi:MakeTeeLine->cputcxy#0] -- vbuz1=vbuc1 
    lda #CH_LTEE
    sta.z cputcxy.c
    // [100] phi (byte) cputcxy::y#2 = (byte) cputcxy::y#0 [phi:MakeTeeLine->cputcxy#1] -- register_copy 
    jsr cputcxy
    jmp __b1
    // MakeTeeLine::@1
  __b1:
    // [133] (byte) chline::length#0 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [134] call chline 
    // [106] phi from MakeTeeLine::@1 to chline [phi:MakeTeeLine::@1->chline]
  chline_from___b1:
    // [106] phi (byte) chline::length#4 = (byte) chline::length#0 [phi:MakeTeeLine::@1->chline#0] -- register_copy 
    jsr chline
    // [135] phi from MakeTeeLine::@1 to MakeTeeLine::@2 [phi:MakeTeeLine::@1->MakeTeeLine::@2]
  __b2_from___b1:
    jmp __b2
    // MakeTeeLine::@2
  __b2:
    // [136] call cputc 
    // [113] phi from MakeTeeLine::@2 to cputc [phi:MakeTeeLine::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_RTEE [phi:MakeTeeLine::@2->cputc#0] -- vbuz1=vbuc1 
    lda #CH_RTEE
    sta.z cputc.c
    jsr cputc
    jmp __breturn
    // MakeTeeLine::@return
  __breturn:
    // [137] return 
    rts
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp($12) str)
strlen: {
    .label len = $14
    .label str = $12
    .label return = $35
    // [139] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
  __b1_from_strlen:
    // [139] phi (word) strlen::len#2 = (word) 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    lda #>0
    sta.z len+1
    // [139] phi (byte*) strlen::str#2 = (byte*) strlen::str#1 [phi:strlen->strlen::@1#1] -- register_copy 
    jmp __b1
    // strlen::@1
  __b1:
    // [140] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // strlen::@return
  __breturn:
    // [141] return 
    rts
    // strlen::@2
  __b2:
    // [142] (word) strlen::len#1 ← ++ (word) strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // [143] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [139] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
  __b1_from___b2:
    // [139] phi (word) strlen::len#2 = (word) strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [139] phi (byte*) strlen::str#2 = (byte*) strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // cputsxy
// Move cursor and output a NUL-terminated string
// Same as "gotoxy (x, y); puts (s);"
// cputsxy(byte zp($3e) x, byte zp($3f) y, byte* zp($3c) s)
cputsxy: {
    .label x = $3e
    .label y = $3f
    .label s = $3c
    // [144] (byte) gotoxy::x#3 ← (byte) cputsxy::x#0 -- vbuz1=vbuz2 
    lda.z x
    sta.z gotoxy.x
    // [145] (byte) gotoxy::y#3 ← (byte) cputsxy::y#0 -- vbuz1=vbuz2 
    lda.z y
    sta.z gotoxy.y
    // [146] call gotoxy 
    // [150] phi from cputsxy to gotoxy [phi:cputsxy->gotoxy]
  gotoxy_from_cputsxy:
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#3 [phi:cputsxy->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#3 [phi:cputsxy->gotoxy#1] -- register_copy 
    jsr gotoxy
    jmp __b1
    // cputsxy::@1
  __b1:
    // [147] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0 -- pbuz1=pbuz2 
    lda.z s
    sta.z cputs.s
    lda.z s+1
    sta.z cputs.s+1
    // [148] call cputs 
    // [186] phi from cputsxy::@1 to cputs [phi:cputsxy::@1->cputs]
  cputs_from___b1:
    jsr cputs
    jmp __breturn
    // cputsxy::@return
  __breturn:
    // [149] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte zp($17) x, byte zp($16) y)
gotoxy: {
    .label __5 = $49
    .label __6 = $4b
    .label __7 = $41
    .label line_offset = $47
    .label y = $16
    .label x = $17
    .label __8 = $43
    .label __9 = $45
    // [151] if((byte) gotoxy::y#6<(byte) $19+(byte) 1) goto gotoxy::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z y
    cmp #$19+1
    bcc __b3_from_gotoxy
    // [153] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [153] phi (byte) gotoxy::y#7 = (byte) 0 [phi:gotoxy->gotoxy::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z y
    jmp __b1
    // [152] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
  __b3_from_gotoxy:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [153] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
  __b1_from___b3:
    // [153] phi (byte) gotoxy::y#7 = (byte) gotoxy::y#6 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    // [154] if((byte) gotoxy::x#6<(byte) $28) goto gotoxy::@4 -- vbuz1_lt_vbuc1_then_la1 
    lda.z x
    cmp #$28
    bcc __b4_from___b1
    // [156] phi from gotoxy::@1 to gotoxy::@2 [phi:gotoxy::@1->gotoxy::@2]
  __b2_from___b1:
    // [156] phi (byte) gotoxy::x#7 = (byte) 0 [phi:gotoxy::@1->gotoxy::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta.z x
    jmp __b2
    // [155] phi from gotoxy::@1 to gotoxy::@4 [phi:gotoxy::@1->gotoxy::@4]
  __b4_from___b1:
    jmp __b4
    // gotoxy::@4
  __b4:
    // [156] phi from gotoxy::@4 to gotoxy::@2 [phi:gotoxy::@4->gotoxy::@2]
  __b2_from___b4:
    // [156] phi (byte) gotoxy::x#7 = (byte) gotoxy::x#6 [phi:gotoxy::@4->gotoxy::@2#0] -- register_copy 
    jmp __b2
    // gotoxy::@2
  __b2:
    // [157] (byte) conio_cursor_x ← (byte) gotoxy::x#7 -- vbuz1=vbuz2 
    lda.z x
    sta.z conio_cursor_x
    // [158] (byte) conio_cursor_y ← (byte) gotoxy::y#7 -- vbuz1=vbuz2 
    lda.z y
    sta.z conio_cursor_y
    // [159] (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7 -- vwuz1=_word_vbuz2 
    lda.z y
    sta.z __7
    lda #0
    sta.z __7+1
    // [160] (word~) gotoxy::$8 ← (word~) gotoxy::$7 << (byte) 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [161] (word~) gotoxy::$9 ← (word~) gotoxy::$8 + (word~) gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz3 
    lda.z __8
    clc
    adc.z __7
    sta.z __9
    lda.z __8+1
    adc.z __7+1
    sta.z __9+1
    // [162] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$9 << (byte) 3 -- vwuz1=vwuz2_rol_3 
    lda.z __9
    asl
    sta.z line_offset
    lda.z __9+1
    rol
    sta.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // [163] (byte*~) gotoxy::$5 ← (const nomodify byte*) DEFAULT_SCREEN + (word) gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // [164] (byte*) conio_line_text ← (byte*~) gotoxy::$5 -- pbuz1=pbuz2 
    lda.z __5
    sta.z conio_line_text
    lda.z __5+1
    sta.z conio_line_text+1
    // [165] (byte*~) gotoxy::$6 ← (const nomodify byte*) COLORRAM + (word) gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<COLORRAM
    sta.z __6
    lda.z line_offset+1
    adc #>COLORRAM
    sta.z __6+1
    // [166] (byte*) conio_line_color ← (byte*~) gotoxy::$6 -- pbuz1=pbuz2 
    lda.z __6
    sta.z conio_line_color
    lda.z __6+1
    sta.z conio_line_color+1
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [167] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // [168] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [169] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [170] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [171] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [172] call cscroll 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [173] return 
    rts
}
  // cvline
// Output a vertical line with the given length at the current cursor position.
cvline: {
    .const length = $17
    .label x = $4d
    .label y = $19
    .label i = $18
    // [174] (byte) cvline::x#0 ← (byte) conio_cursor_x -- vbuz1=vbuz2 
    lda.z conio_cursor_x
    sta.z x
    // [175] (byte) cvline::y#0 ← (byte) conio_cursor_y -- vbuz1=vbuz2 
    lda.z conio_cursor_y
    sta.z y
    // [176] phi from cvline to cvline::@1 [phi:cvline->cvline::@1]
  __b1_from_cvline:
    // [176] phi (byte) cvline::y#2 = (byte) cvline::y#0 [phi:cvline->cvline::@1#0] -- register_copy 
    // [176] phi (byte) cvline::i#2 = (byte) 0 [phi:cvline->cvline::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // cvline::@1
  __b1:
    // [177] if((byte) cvline::i#2<(const byte) cvline::length#0) goto cvline::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i
    cmp #length
    bcc __b2_from___b1
    jmp __breturn
    // cvline::@return
  __breturn:
    // [178] return 
    rts
    // [179] phi from cvline::@1 to cvline::@2 [phi:cvline::@1->cvline::@2]
  __b2_from___b1:
    jmp __b2
    // cvline::@2
  __b2:
    // [180] call cputc 
    // [113] phi from cvline::@2 to cputc [phi:cvline::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_VLINE [phi:cvline::@2->cputc#0] -- vbuz1=vbuc1 
    lda #CH_VLINE
    sta.z cputc.c
    jsr cputc
    jmp __b3
    // cvline::@3
  __b3:
    // [181] (byte) cvline::y#1 ← ++ (byte) cvline::y#2 -- vbuz1=_inc_vbuz1 
    inc.z y
    // [182] (byte) gotoxy::x#4 ← (byte) cvline::x#0 -- vbuz1=vbuz2 
    lda.z x
    sta.z gotoxy.x
    // [183] (byte) gotoxy::y#4 ← (byte) cvline::y#1 -- vbuz1=vbuz2 
    lda.z y
    sta.z gotoxy.y
    // [184] call gotoxy 
    // [150] phi from cvline::@3 to gotoxy [phi:cvline::@3->gotoxy]
  gotoxy_from___b3:
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#4 [phi:cvline::@3->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#4 [phi:cvline::@3->gotoxy#1] -- register_copy 
    jsr gotoxy
    jmp __b4
    // cvline::@4
  __b4:
    // [185] (byte) cvline::i#1 ← ++ (byte) cvline::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [176] phi from cvline::@4 to cvline::@1 [phi:cvline::@4->cvline::@1]
  __b1_from___b4:
    // [176] phi (byte) cvline::y#2 = (byte) cvline::y#1 [phi:cvline::@4->cvline::@1#0] -- register_copy 
    // [176] phi (byte) cvline::i#2 = (byte) cvline::i#1 [phi:cvline::@4->cvline::@1#1] -- register_copy 
    jmp __b1
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp($1a) s)
cputs: {
    .label c = $4e
    .label s = $1a
    // [187] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
  __b1_from_cputs:
  __b1_from___b2:
    // [187] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#1 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
    // cputs::@1
  __b1:
    // [188] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (s),y
    sta.z c
    // [189] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [190] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z c
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [191] return 
    rts
    // cputs::@2
  __b2:
    // [192] (byte) cputc::c#0 ← (byte) cputs::c#1 -- vbuz1=vbuz2 
    lda.z c
    sta.z cputc.c
    // [193] call cputc 
    // [113] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (byte) cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b1_from___b2
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [194] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    jmp __b1
    // cscroll::@1
  __b1:
    // [195] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z conio_scroll_enable
    bne __b3_from___b1
    // [196] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [197] call gotoxy 
    // [150] phi from cscroll::@2 to gotoxy [phi:cscroll::@2->gotoxy]
  gotoxy_from___b2:
    // [150] phi (byte) gotoxy::x#6 = (byte) 0 [phi:cscroll::@2->gotoxy#0] -- vbuz1=vbuc1 
    lda #0
    sta.z gotoxy.x
    // [150] phi (byte) gotoxy::y#6 = (byte) 0 [phi:cscroll::@2->gotoxy#1] -- vbuz1=vbuc1 
    lda #0
    sta.z gotoxy.y
    jsr gotoxy
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [198] return 
    rts
    // [199] phi from cscroll::@1 to cscroll::@3 [phi:cscroll::@1->cscroll::@3]
  __b3_from___b1:
    jmp __b3
    // cscroll::@3
  __b3:
    // [200] call memcpy 
    // [210] phi from cscroll::@3 to memcpy [phi:cscroll::@3->memcpy]
  memcpy_from___b3:
    // [210] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN [phi:cscroll::@3->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [210] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 [phi:cscroll::@3->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [201] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [202] call memcpy 
    // [210] phi from cscroll::@4 to memcpy [phi:cscroll::@4->memcpy]
  memcpy_from___b4:
    // [210] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) COLORRAM [phi:cscroll::@4->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [210] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) COLORRAM+(byte) $28 [phi:cscroll::@4->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [203] phi from cscroll::@4 to cscroll::@5 [phi:cscroll::@4->cscroll::@5]
  __b5_from___b4:
    jmp __b5
    // cscroll::@5
  __b5:
    // [204] call memset 
    // [220] phi from cscroll::@5 to memset [phi:cscroll::@5->memset]
  memset_from___b5:
    // [220] phi (byte) memset::c#4 = (byte) ' ' [phi:cscroll::@5->memset#0] -- vbuz1=vbuc1 
    lda #' '
    sta.z memset.c
    // [220] phi (void*) memset::str#3 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@5->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b6
    // cscroll::@6
  __b6:
    // [205] (byte) memset::c#1 ← (byte) conio_textcolor -- vbuz1=vbuz2 
    lda.z conio_textcolor
    sta.z memset.c
    // [206] call memset 
    // [220] phi from cscroll::@6 to memset [phi:cscroll::@6->memset]
  memset_from___b6:
    // [220] phi (byte) memset::c#4 = (byte) memset::c#1 [phi:cscroll::@6->memset#0] -- register_copy 
    // [220] phi (void*) memset::str#3 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@6->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b7
    // cscroll::@7
  __b7:
    // [207] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [208] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [209] (byte) conio_cursor_y ← -- (byte) conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($1e) destination, void* zp($1c) source)
memcpy: {
    .label src_end = $4f
    .label dst = $22
    .label src = $20
    .label source = $1c
    .label destination = $1e
    // [211] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [212] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 -- pbuz1=pbuz2 
    lda.z source
    sta.z src
    lda.z source+1
    sta.z src+1
    // [213] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 -- pbuz1=pbuz2 
    lda.z destination
    sta.z dst
    lda.z destination+1
    sta.z dst+1
    // [214] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [214] phi (byte*) memcpy::dst#2 = (byte*) memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [214] phi (byte*) memcpy::src#2 = (byte*) memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [215] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [216] return 
    rts
    // memcpy::@2
  __b2:
    // [217] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [218] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [219] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp($24) str, byte zp($26) c)
memset: {
    .label end = $51
    .label dst = $27
    .label c = $26
    .label str = $24
    jmp __b1
    // memset::@1
  __b1:
    // [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 -- pbuz1=pbuz2 
    lda.z str
    sta.z dst
    lda.z str+1
    sta.z dst+1
    // [223] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [223] phi (byte*) memset::dst#2 = (byte*) memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [225] return 
    rts
    // memset::@3
  __b3:
    // [226] *((byte*) memset::dst#2) ← (byte) memset::c#4 -- _deref_pbuz1=vbuz2 
    lda.z c
    ldy #0
    sta (dst),y
    // [227] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // File Data

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] (byte) conio_cursor_x ← (byte) 0 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [2] (byte) conio_cursor_y ← (byte) 0 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [5] (byte) conio_textcolor ← (const nomodify byte) LIGHT_BLUE [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [6] (byte) conio_scroll_enable ← (byte) 1 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [7] (volatile byte) XSize ← (byte) 0 [ XSize ] (  [ XSize ] { }  ) always clobbers reg byte a 
Statement [8] (volatile byte) YSize ← (byte) 0 [ XSize ] (  [ XSize ] { }  ) always clobbers reg byte a 
Statement [12] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17 [ XSize ] ( main:10 [ XSize ] { }  ) always clobbers reg byte a 
Statement [24] *((const byte*) screensize::x#0) ← (byte) $28 [ ] ( main:10::screensize:13 [ XSize ] { }  ) always clobbers reg byte a 
Statement [25] *((const byte*) screensize::y#0) ← (byte) $19 [ ] ( main:10::screensize:13 [ XSize ] { }  ) always clobbers reg byte a 
Statement [60] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::str#1 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::str#1 ] { { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
Statement [62] (word) strlen::return#2 ← (word) strlen::len#2 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::return#2 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::return#2 ] { { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [63] (word~) MakeNiceScreen::$22 ← (word) strlen::return#2 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$22 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$22 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [64] (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$34 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$34 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [65] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$23 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$23 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [66] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [67] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 cputsxy::s#0 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 cputsxy::s#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:59 [ MakeNiceScreen::X#1 ]
Statement [69] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3) [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputsxy::s#0 cputsxy::x#0 cputsxy::y#0 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputsxy::s#0 cputsxy::x#0 cputsxy::y#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
Removing always clobbered register reg byte a as potential for zp[1]:62 [ cputsxy::x#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:62 [ cputsxy::x#0 ]
Statement [71] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#2 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#2 ] { }  ) always clobbers reg byte a 
Statement [73] *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (byte) 0 [ ] ( main:10::kbhit:17 [ conio_textcolor ] { { kbhit::return#0 = kbhit::return#2 } }  ) always clobbers reg byte a 
Statement [74] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B) [ kbhit::return#0 ] ( main:10::kbhit:17 [ conio_textcolor kbhit::return#0 ] { { kbhit::return#0 = kbhit::return#2 } }  ) always clobbers reg byte a 
Statement [79] (byte) conio_cursor_x ← (byte) 0 [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [80] (byte) conio_cursor_y ← (byte) 0 [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [81] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [82] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [86] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 [ conio_textcolor clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:5 [ clrscr::l#2 clrscr::l#1 ]
Statement [87] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 [ conio_textcolor clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [89] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:10 [ clrscr::c#2 clrscr::c#1 ]
Statement [90] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (byte) conio_textcolor [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [92] (byte) conio_scroll_enable ← (const byte) scroll::onoff#0 [ conio_scroll_enable ] ( main:10::MakeNiceScreen:15::scroll:28 [ XSize conio_scroll_enable ] { }  ) always clobbers reg byte a 
Statement [94] (byte) conio_textcolor ← (const nomodify byte) COLOR_GRAY3 [ conio_textcolor ] ( main:10::MakeNiceScreen:15::textcolor:30 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [96] *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK [ ] ( main:10::MakeNiceScreen:15::bordercolor:32 [ conio_textcolor conio_scroll_enable XSize ] { }  ) always clobbers reg byte a 
Statement [98] *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK [ ] ( main:10::MakeNiceScreen:15::bgcolor:34 [ conio_textcolor conio_scroll_enable XSize ] { }  ) always clobbers reg byte a 
Statement [115] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:14 [ chline::i#2 chline::i#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:77 [ cvline::x#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:24 [ cvline::i#2 cvline::i#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ]
Statement [116] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:14 [ chline::i#2 chline::i#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:77 [ cvline::x#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:24 [ cvline::i#2 cvline::i#1 ]
Removing always clobbered register reg byte a as potential for zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ]
Statement [118] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [140] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 [ strlen::len#2 strlen::str#2 ] ( main:10::MakeNiceScreen:15::strlen:61 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::len#2 strlen::str#2 ] { { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [147] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#1 ] ( main:10::MakeNiceScreen:15::cputsxy:70 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#1 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } }  ) always clobbers reg byte a 
Statement [159] (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:12 [ cputcxy::c#2 ]
Statement [160] (word~) gotoxy::$8 ← (word~) gotoxy::$7 << (byte) 2 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [161] (word~) gotoxy::$9 ← (word~) gotoxy::$8 + (word~) gotoxy::$7 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [162] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$9 << (byte) 3 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [163] (byte*~) gotoxy::$5 ← (const nomodify byte*) DEFAULT_SCREEN + (word) gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [164] (byte*) conio_line_text ← (byte*~) gotoxy::$5 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [165] (byte*~) gotoxy::$6 ← (const nomodify byte*) COLORRAM + (word) gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [166] (byte*) conio_line_color ← (byte*~) gotoxy::$6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [168] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [169] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [170] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [188] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#2 cputs::c#1 ] ( main:10::MakeNiceScreen:15::cputsxy:70::cputs:148 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#2 cputs::c#1 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } }  ) always clobbers reg byte a reg byte y 
Statement [194] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [195] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [207] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [208] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [211] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [212] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [213] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [215] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [217] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:38 [ memset::c#4 memset::c#1 ]
Statement [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a 
Statement [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a 
Statement [226] *((byte*) memset::dst#2) ← (byte) memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:38 [ memset::c#4 memset::c#1 ]
Statement [1] (byte) conio_cursor_x ← (byte) 0 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [2] (byte) conio_cursor_y ← (byte) 0 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [5] (byte) conio_textcolor ← (const nomodify byte) LIGHT_BLUE [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [6] (byte) conio_scroll_enable ← (byte) 1 [ ] (  [ ] { }  ) always clobbers reg byte a 
Statement [7] (volatile byte) XSize ← (byte) 0 [ XSize ] (  [ XSize ] { }  ) always clobbers reg byte a 
Statement [8] (volatile byte) YSize ← (byte) 0 [ XSize ] (  [ XSize ] { }  ) always clobbers reg byte a 
Statement [12] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17 [ XSize ] ( main:10 [ XSize ] { }  ) always clobbers reg byte a 
Statement [24] *((const byte*) screensize::x#0) ← (byte) $28 [ ] ( main:10::screensize:13 [ XSize ] { }  ) always clobbers reg byte a 
Statement [25] *((const byte*) screensize::y#0) ← (byte) $19 [ ] ( main:10::screensize:13 [ XSize ] { }  ) always clobbers reg byte a 
Statement [60] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::str#1 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::str#1 ] { { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [62] (word) strlen::return#2 ← (word) strlen::len#2 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::return#2 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::return#2 ] { { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [63] (word~) MakeNiceScreen::$22 ← (word) strlen::return#2 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$22 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$22 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [64] (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$34 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$34 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [65] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$23 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::$23 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [66] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [67] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 cputsxy::s#0 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 MakeNiceScreen::X#1 cputsxy::s#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a 
Statement [69] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3) [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputsxy::s#0 cputsxy::x#0 cputsxy::y#0 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputsxy::s#0 cputsxy::x#0 cputsxy::y#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } }  ) always clobbers reg byte a reg byte y 
Statement [71] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#2 ] ( main:10::MakeNiceScreen:15 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#2 ] { }  ) always clobbers reg byte a 
Statement [73] *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (byte) 0 [ ] ( main:10::kbhit:17 [ conio_textcolor ] { { kbhit::return#0 = kbhit::return#2 } }  ) always clobbers reg byte a 
Statement [74] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B) [ kbhit::return#0 ] ( main:10::kbhit:17 [ conio_textcolor kbhit::return#0 ] { { kbhit::return#0 = kbhit::return#2 } }  ) always clobbers reg byte a 
Statement [79] (byte) conio_cursor_x ← (byte) 0 [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [80] (byte) conio_cursor_y ← (byte) 0 [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [81] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [82] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM [ conio_textcolor ] ( main:10::clrscr:22 [ conio_textcolor ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [86] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 [ conio_textcolor clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_cols#5 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [87] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 [ conio_textcolor clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_text#1 clrscr::line_cols#1 ] { }  ) always clobbers reg byte a 
Statement [89] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [90] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (byte) conio_textcolor [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] ( main:10::clrscr:22 [ conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  main:10::MakeNiceScreen:15::clrscr:36 [ conio_scroll_enable XSize conio_textcolor clrscr::l#2 clrscr::line_text#5 clrscr::line_cols#5 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [92] (byte) conio_scroll_enable ← (const byte) scroll::onoff#0 [ conio_scroll_enable ] ( main:10::MakeNiceScreen:15::scroll:28 [ XSize conio_scroll_enable ] { }  ) always clobbers reg byte a 
Statement [94] (byte) conio_textcolor ← (const nomodify byte) COLOR_GRAY3 [ conio_textcolor ] ( main:10::MakeNiceScreen:15::textcolor:30 [ conio_scroll_enable XSize conio_textcolor ] { }  ) always clobbers reg byte a 
Statement [96] *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK [ ] ( main:10::MakeNiceScreen:15::bordercolor:32 [ conio_textcolor conio_scroll_enable XSize ] { }  ) always clobbers reg byte a 
Statement [98] *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK [ ] ( main:10::MakeNiceScreen:15::bgcolor:34 [ conio_textcolor conio_scroll_enable XSize ] { }  ) always clobbers reg byte a 
Statement [115] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#8 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte y 
Statement [116] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [118] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [140] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 [ strlen::len#2 strlen::str#2 ] ( main:10::MakeNiceScreen:15::strlen:61 [ conio_textcolor conio_scroll_enable XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 strlen::len#2 strlen::str#2 ] { { strlen::return#2 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [147] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#1 ] ( main:10::MakeNiceScreen:15::cputsxy:70 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#1 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } }  ) always clobbers reg byte a 
Statement [159] (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7 [ conio_cursor_x conio_cursor_y gotoxy::$7 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [160] (word~) gotoxy::$8 ← (word~) gotoxy::$7 << (byte) 2 [ conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$7 gotoxy::$8 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [161] (word~) gotoxy::$9 ← (word~) gotoxy::$8 + (word~) gotoxy::$7 [ conio_cursor_x conio_cursor_y gotoxy::$9 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::$9 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [162] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$9 << (byte) 3 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [163] (byte*~) gotoxy::$5 ← (const nomodify byte*) DEFAULT_SCREEN + (word) gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y gotoxy::line_offset#0 gotoxy::$5 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [164] (byte*) conio_line_text ← (byte*~) gotoxy::$5 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::line_offset#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [165] (byte*~) gotoxy::$6 ← (const nomodify byte*) COLORRAM + (word) gotoxy::line_offset#0 [ conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text gotoxy::$6 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [166] (byte*) conio_line_color ← (byte*~) gotoxy::$6 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] ( main:10::MakeNiceScreen:15::cputcxy:38::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::gotoxy:102 [ XSize conio_textcolor conio_scroll_enable cputcxy::c#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#2 = gotoxy::y#6 cputcxy::y#2 cputcxy::y#0 MakeTeeLine::Y#2 } }  main:10::MakeNiceScreen:15::cvlinexy:44::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cvlinexy:52::gotoxy:126 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::x#5 = gotoxy::x#6 cvlinexy::x#2 cvlinexy::x#1 } }  main:10::MakeNiceScreen:15::cputsxy:70::gotoxy:146 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_textcolor conio_scroll_enable cputsxy::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#3 = gotoxy::y#6 cputsxy::y#0 } { gotoxy::x#3 = gotoxy::x#6 cputsxy::x#0 MakeNiceScreen::X#1 } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::gotoxy:184 [ XSize conio_textcolor conio_scroll_enable cvline::x#0 cvline::i#2 cvline::y#1 conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cvlinexy::x#1 = cvlinexy::x#2 } { gotoxy::y#4 = gotoxy::y#6 cvline::y#1 } { gotoxy::x#4 = gotoxy::x#6 cvline::x#0 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::gotoxy:197 [ XSize chline::length#4 chline::i#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::gotoxy:197 [ XSize conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::gotoxy:197 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::gotoxy:197 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_textcolor conio_scroll_enable conio_cursor_x conio_cursor_y conio_line_text conio_line_color ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [168] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [169] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 [ conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123 [ XSize conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [170] (byte) conio_cursor_x ← (byte) 0 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [188] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#2 cputs::c#1 ] ( main:10::MakeNiceScreen:15::cputsxy:70::cputs:148 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable cputs::s#2 cputs::c#1 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } }  ) always clobbers reg byte a reg byte y 
Statement [194] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [195] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [207] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [208] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 [ conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [211] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 [ memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::source#2 memcpy::destination#2 memcpy::src_end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [212] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2 [ memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::destination#2 memcpy::src_end#0 memcpy::src#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [213] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2 [ memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#4 memcpy::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [215] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a 
Statement [217] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) [ memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:200 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:200 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:200 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:200 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memcpy:202 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memcpy:202 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memcpy:202 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memcpy:202 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memcpy::src_end#0 memcpy::src#2 memcpy::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 [ memset::str#3 memset::c#4 memset::end#0 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::str#3 memset::c#4 memset::end#0 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a 
Statement [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3 [ memset::c#4 memset::end#0 memset::dst#4 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#4 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a 
Statement [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a 
Statement [226] *((byte*) memset::dst#2) ← (byte) memset::c#4 [ memset::c#4 memset::end#0 memset::dst#2 ] ( main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:204 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:204 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:204 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:204 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } }  main:10::MakeNiceScreen:15::cputc:42::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:120::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:120::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:120::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:120::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:42::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:46::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputc:50::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputcxy:38::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputcxy:132::cputc:104::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputcxy::y#0 = cputcxy::y#2 MakeTeeLine::Y#2 } { cputc::c#1 = cputc::c#8 cputcxy::c#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:40::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#1 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::chline:48::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#2 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::chline:134::cputc:111::cputln:123::cscroll:172::memset:206 [ XSize chline::length#4 chline::i#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { chline::length#0 = chline::length#4 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:54::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::MakeTeeLine:56::cputc:136::cputln:123::cscroll:172::memset:206 [ XSize conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:44::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cvlinexy:52::cvline:128::cputc:180::cputln:123::cscroll:172::memset:206 [ XSize cvline::x#0 cvline::i#2 cvline::y#2 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cvlinexy::x#1 = cvlinexy::x#2 } { memset::c#1 = memset::c#4 conio_textcolor } }  main:10::MakeNiceScreen:15::cputsxy:70::cputs:148::cputc:193::cputln:123::cscroll:172::memset:206 [ XSize MakeNiceScreen::I#3 MakeNiceScreen::T#3 cputs::s#0 conio_cursor_x conio_cursor_y conio_line_text conio_line_color conio_textcolor conio_scroll_enable memset::c#4 memset::end#0 memset::dst#2 ] { { cputsxy::x#0 = MakeNiceScreen::X#1 } { cputs::s#1 = cputsxy::s#0 } { cputc::c#0 = cputc::c#8 cputs::c#1 } { memset::c#1 = memset::c#4 conio_textcolor } }  ) always clobbers reg byte a reg byte y 
Potential registers zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ] : zp[1]:2 , reg byte x , 
Potential registers zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ] : zp[2]:3 , 
Potential registers zp[1]:5 [ clrscr::l#2 clrscr::l#1 ] : zp[1]:5 , reg byte x , reg byte y , 
Potential registers zp[2]:6 [ clrscr::line_text#5 clrscr::line_text#1 ] : zp[2]:6 , 
Potential registers zp[2]:8 [ clrscr::line_cols#5 clrscr::line_cols#1 ] : zp[2]:8 , 
Potential registers zp[1]:10 [ clrscr::c#2 clrscr::c#1 ] : zp[1]:10 , reg byte x , reg byte y , 
Potential registers zp[1]:11 [ cputcxy::y#2 cputcxy::y#0 ] : zp[1]:11 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:12 [ cputcxy::c#2 ] : zp[1]:12 , reg byte x , reg byte y , 
Potential registers zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ] : zp[1]:13 , reg byte x , 
Potential registers zp[1]:14 [ chline::i#2 chline::i#1 ] : zp[1]:14 , reg byte x , 
Potential registers zp[1]:15 [ cputc::c#8 cputc::c#1 cputc::c#0 ] : zp[1]:15 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:16 [ cvlinexy::x#2 cvlinexy::x#1 ] : zp[1]:16 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:17 [ MakeTeeLine::Y#2 ] : zp[1]:17 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:18 [ strlen::str#2 strlen::str#1 strlen::str#0 ] : zp[2]:18 , 
Potential registers zp[2]:20 [ strlen::len#2 strlen::len#1 ] : zp[2]:20 , 
Potential registers zp[1]:22 [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ] : zp[1]:22 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:23 [ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ] : zp[1]:23 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:24 [ cvline::i#2 cvline::i#1 ] : zp[1]:24 , reg byte x , 
Potential registers zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ] : zp[1]:25 , reg byte x , 
Potential registers zp[2]:26 [ cputs::s#2 cputs::s#1 cputs::s#0 ] : zp[2]:26 , 
Potential registers zp[2]:28 [ memcpy::source#2 ] : zp[2]:28 , 
Potential registers zp[2]:30 [ memcpy::destination#2 ] : zp[2]:30 , 
Potential registers zp[2]:32 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] : zp[2]:32 , 
Potential registers zp[2]:34 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] : zp[2]:34 , 
Potential registers zp[2]:36 [ memset::str#3 ] : zp[2]:36 , 
Potential registers zp[1]:38 [ memset::c#4 memset::c#1 ] : zp[1]:38 , reg byte x , 
Potential registers zp[2]:39 [ memset::dst#2 memset::dst#4 memset::dst#1 ] : zp[2]:39 , 
Potential registers zp[1]:41 [ conio_cursor_x ] : zp[1]:41 , 
Potential registers zp[1]:42 [ conio_cursor_y ] : zp[1]:42 , 
Potential registers zp[2]:43 [ conio_line_text ] : zp[2]:43 , 
Potential registers zp[2]:45 [ conio_line_color ] : zp[2]:45 , 
Potential registers zp[1]:47 [ conio_textcolor ] : zp[1]:47 , 
Potential registers zp[1]:48 [ conio_scroll_enable ] : zp[1]:48 , 
Potential registers zp[1]:49 [ XSize ] : zp[1]:49 , 
Potential registers zp[1]:50 [ YSize ] : zp[1]:50 , 
Potential registers zp[1]:51 [ kbhit::return#2 ] : zp[1]:51 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:52 [ main::$3 ] : zp[1]:52 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:53 [ strlen::return#2 ] : zp[2]:53 , 
Potential registers zp[2]:55 [ MakeNiceScreen::$22 ] : zp[2]:55 , 
Potential registers zp[1]:57 [ MakeNiceScreen::$34 ] : zp[1]:57 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:58 [ MakeNiceScreen::$23 ] : zp[1]:58 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:59 [ MakeNiceScreen::X#1 ] : zp[1]:59 , reg byte x , reg byte y , 
Potential registers zp[2]:60 [ cputsxy::s#0 ] : zp[2]:60 , 
Potential registers zp[1]:62 [ cputsxy::x#0 ] : zp[1]:62 , reg byte x , 
Potential registers zp[1]:63 [ cputsxy::y#0 ] : zp[1]:63 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:64 [ kbhit::return#0 ] : zp[1]:64 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:65 [ gotoxy::$7 ] : zp[2]:65 , 
Potential registers zp[2]:67 [ gotoxy::$8 ] : zp[2]:67 , 
Potential registers zp[2]:69 [ gotoxy::$9 ] : zp[2]:69 , 
Potential registers zp[2]:71 [ gotoxy::line_offset#0 ] : zp[2]:71 , 
Potential registers zp[2]:73 [ gotoxy::$5 ] : zp[2]:73 , 
Potential registers zp[2]:75 [ gotoxy::$6 ] : zp[2]:75 , 
Potential registers zp[1]:77 [ cvline::x#0 ] : zp[1]:77 , reg byte x , 
Potential registers zp[1]:78 [ cputs::c#1 ] : zp[1]:78 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:79 [ memcpy::src_end#0 ] : zp[2]:79 , 
Potential registers zp[2]:81 [ memset::end#0 ] : zp[2]:81 , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy] 300,125,000,000,004.25: zp[2]:32 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] 200,233,333,333,337.7: zp[2]:34 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] 12,512,500,000,000.25: zp[2]:79 [ memcpy::src_end#0 ] 0: zp[2]:28 [ memcpy::source#2 ] 0: zp[2]:30 [ memcpy::destination#2 ] 
Uplift Scope [memset] 333,566,666,666,672.4: zp[2]:39 [ memset::dst#2 memset::dst#4 memset::dst#1 ] 16,683,333,333,333.67: zp[2]:81 [ memset::end#0 ] 14,307,142,857,145.14: zp[1]:38 [ memset::c#4 memset::c#1 ] 0: zp[2]:36 [ memset::str#3 ] 
Uplift Scope [gotoxy] 233,333,463,840.17: zp[1]:23 [ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ] 200,000,000,002: zp[2]:67 [ gotoxy::$8 ] 200,000,000,002: zp[2]:69 [ gotoxy::$9 ] 200,000,000,002: zp[2]:73 [ gotoxy::$5 ] 200,000,000,002: zp[2]:75 [ gotoxy::$6 ] 150,000,000,001.5: zp[2]:65 [ gotoxy::$7 ] 100,000,280,008: zp[1]:22 [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ] 100,000,000,001: zp[2]:71 [ gotoxy::line_offset#0 ] 
Uplift Scope [] 1,526,250,012.61: zp[2]:45 [ conio_line_color ] 1,500,000,125.11: zp[1]:42 [ conio_cursor_y ] 1,489,024,402.55: zp[2]:43 [ conio_line_text ] 1,194,117,776.6: zp[1]:41 [ conio_cursor_x ] 75,757,583.36: zp[1]:48 [ conio_scroll_enable ] 65,585,071.47: zp[1]:47 [ conio_textcolor ] 39.1: zp[1]:49 [ XSize ] 20: zp[1]:50 [ YSize ] 
Uplift Scope [cputc] 125,025,006: zp[1]:15 [ cputc::c#8 cputc::c#1 cputc::c#0 ] 
Uplift Scope [cputs] 20,105,003.5: zp[2]:26 [ cputs::s#2 cputs::s#1 cputs::s#0 ] 10,000,001: zp[1]:78 [ cputs::c#1 ] 
Uplift Scope [strlen] 3,008,837.67: zp[2]:18 [ strlen::str#2 strlen::str#1 strlen::str#0 ] 1,500,251.75: zp[2]:20 [ strlen::len#2 strlen::len#1 ] 2,002: zp[2]:53 [ strlen::return#2 ] 
Uplift Scope [clrscr] 325,003.25: zp[1]:10 [ clrscr::c#2 clrscr::c#1 ] 25,001.38: zp[2]:8 [ clrscr::line_cols#5 clrscr::line_cols#1 ] 23,810.62: zp[2]:6 [ clrscr::line_text#5 clrscr::line_text#1 ] 23,335.67: zp[1]:5 [ clrscr::l#2 clrscr::l#1 ] 
Uplift Scope [cvline] 237,502.38: zp[1]:24 [ cvline::i#2 cvline::i#1 ] 132,503.35: zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ] 10,000.18: zp[1]:77 [ cvline::x#0 ] 
Uplift Scope [chline] 275,002.75: zp[1]:14 [ chline::i#2 chline::i#1 ] 19,273.33: zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ] 
Uplift Scope [cputcxy] 13,004: zp[1]:11 [ cputcxy::y#2 cputcxy::y#0 ] 3,333.67: zp[1]:12 [ cputcxy::c#2 ] 
Uplift Scope [cputsxy] 5,501: zp[1]:62 [ cputsxy::x#0 ] 5,501: zp[1]:63 [ cputsxy::y#0 ] 1,833.67: zp[2]:60 [ cputsxy::s#0 ] 
Uplift Scope [MakeNiceScreen] 2,216.5: zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ] 2,002: zp[1]:57 [ MakeNiceScreen::$34 ] 2,002: zp[1]:58 [ MakeNiceScreen::$23 ] 1,155: zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ] 1,001: zp[2]:55 [ MakeNiceScreen::$22 ] 1,001: zp[1]:59 [ MakeNiceScreen::X#1 ] 
Uplift Scope [cvlinexy] 1,304: zp[1]:16 [ cvlinexy::x#2 cvlinexy::x#1 ] 
Uplift Scope [MakeTeeLine] 1,001: zp[1]:17 [ MakeTeeLine::Y#2 ] 
Uplift Scope [kbhit] 367.33: zp[1]:64 [ kbhit::return#0 ] 202: zp[1]:51 [ kbhit::return#2 ] 
Uplift Scope [main] 202: zp[1]:52 [ main::$3 ] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [MOS6569_VICII] 
Uplift Scope [MOS6581_SID] 
Uplift Scope [screensize] 
Uplift Scope [cputln] 
Uplift Scope [cscroll] 
Uplift Scope [textcolor] 
Uplift Scope [scroll] 
Uplift Scope [bgcolor] 
Uplift Scope [bordercolor] 
Uplift Scope [$0] 
Uplift Scope [__start] 

Uplifting [memcpy] best 135793 combination zp[2]:32 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] zp[2]:34 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] zp[2]:79 [ memcpy::src_end#0 ] zp[2]:28 [ memcpy::source#2 ] zp[2]:30 [ memcpy::destination#2 ] 
Uplifting [memset] best 134787 combination zp[2]:39 [ memset::dst#2 memset::dst#4 memset::dst#1 ] zp[2]:81 [ memset::end#0 ] reg byte x [ memset::c#4 memset::c#1 ] zp[2]:36 [ memset::str#3 ] 
Uplifting [gotoxy] best 134682 combination reg byte x [ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ] zp[2]:67 [ gotoxy::$8 ] zp[2]:69 [ gotoxy::$9 ] zp[2]:73 [ gotoxy::$5 ] zp[2]:75 [ gotoxy::$6 ] zp[2]:65 [ gotoxy::$7 ] reg byte a [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ] zp[2]:71 [ gotoxy::line_offset#0 ] 
Uplifting [] best 134682 combination zp[2]:45 [ conio_line_color ] zp[1]:42 [ conio_cursor_y ] zp[2]:43 [ conio_line_text ] zp[1]:41 [ conio_cursor_x ] zp[1]:48 [ conio_scroll_enable ] zp[1]:47 [ conio_textcolor ] zp[1]:49 [ XSize ] zp[1]:50 [ YSize ] 
Uplifting [cputc] best 134355 combination reg byte a [ cputc::c#8 cputc::c#1 cputc::c#0 ] 
Uplifting [cputs] best 133455 combination zp[2]:26 [ cputs::s#2 cputs::s#1 cputs::s#0 ] reg byte a [ cputs::c#1 ] 
Uplifting [strlen] best 133455 combination zp[2]:18 [ strlen::str#2 strlen::str#1 strlen::str#0 ] zp[2]:20 [ strlen::len#2 strlen::len#1 ] zp[2]:53 [ strlen::return#2 ] 
Uplifting [clrscr] best 131865 combination reg byte y [ clrscr::c#2 clrscr::c#1 ] zp[2]:8 [ clrscr::line_cols#5 clrscr::line_cols#1 ] zp[2]:6 [ clrscr::line_text#5 clrscr::line_text#1 ] reg byte x [ clrscr::l#2 clrscr::l#1 ] 
Uplifting [cvline] best 131865 combination zp[1]:24 [ cvline::i#2 cvline::i#1 ] zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ] zp[1]:77 [ cvline::x#0 ] 
Uplifting [chline] best 131865 combination zp[1]:14 [ chline::i#2 chline::i#1 ] zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ] 
Uplifting [cputcxy] best 131849 combination reg byte a [ cputcxy::y#2 cputcxy::y#0 ] reg byte y [ cputcxy::c#2 ] 
Uplifting [cputsxy] best 131783 combination reg byte x [ cputsxy::x#0 ] reg byte a [ cputsxy::y#0 ] zp[2]:60 [ cputsxy::s#0 ] 
Uplifting [MakeNiceScreen] best 131643 combination zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ] reg byte a [ MakeNiceScreen::$34 ] reg byte a [ MakeNiceScreen::$23 ] zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ] zp[2]:55 [ MakeNiceScreen::$22 ] reg byte x [ MakeNiceScreen::X#1 ] 
Uplifting [cvlinexy] best 131634 combination reg byte x [ cvlinexy::x#2 cvlinexy::x#1 ] 
Uplifting [MakeTeeLine] best 131625 combination reg byte a [ MakeTeeLine::Y#2 ] 
Uplifting [kbhit] best 131532 combination reg byte a [ kbhit::return#0 ] reg byte a [ kbhit::return#2 ] 
Uplifting [main] best 131472 combination reg byte a [ main::$3 ] 
Uplifting [MOS6526_CIA] best 131472 combination 
Uplifting [MOS6569_VICII] best 131472 combination 
Uplifting [MOS6581_SID] best 131472 combination 
Uplifting [screensize] best 131472 combination 
Uplifting [cputln] best 131472 combination 
Uplifting [cscroll] best 131472 combination 
Uplifting [textcolor] best 131472 combination 
Uplifting [scroll] best 131472 combination 
Uplifting [bgcolor] best 131472 combination 
Uplifting [bordercolor] best 131472 combination 
Uplifting [$0] best 131472 combination 
Uplifting [__start] best 131472 combination 
Attempting to uplift remaining variables inzp[1]:42 [ conio_cursor_y ]
Uplifting [] best 131472 combination zp[1]:42 [ conio_cursor_y ] 
Attempting to uplift remaining variables inzp[1]:41 [ conio_cursor_x ]
Uplifting [] best 131472 combination zp[1]:41 [ conio_cursor_x ] 
Attempting to uplift remaining variables inzp[1]:48 [ conio_scroll_enable ]
Uplifting [] best 131472 combination zp[1]:48 [ conio_scroll_enable ] 
Attempting to uplift remaining variables inzp[1]:47 [ conio_textcolor ]
Uplifting [] best 131472 combination zp[1]:47 [ conio_textcolor ] 
Attempting to uplift remaining variables inzp[1]:14 [ chline::i#2 chline::i#1 ]
Uplifting [chline] best 131472 combination zp[1]:14 [ chline::i#2 chline::i#1 ] 
Attempting to uplift remaining variables inzp[1]:24 [ cvline::i#2 cvline::i#1 ]
Uplifting [cvline] best 131472 combination zp[1]:24 [ cvline::i#2 cvline::i#1 ] 
Attempting to uplift remaining variables inzp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ]
Uplifting [cvline] best 131472 combination zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ] 
Attempting to uplift remaining variables inzp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
Uplifting [chline] best 131472 combination zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ] 
Attempting to uplift remaining variables inzp[1]:77 [ cvline::x#0 ]
Uplifting [cvline] best 131472 combination zp[1]:77 [ cvline::x#0 ] 
Attempting to uplift remaining variables inzp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
Uplifting [MakeNiceScreen] best 131472 combination zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ] 
Attempting to uplift remaining variables inzp[1]:49 [ XSize ]
Uplifting [] best 131472 combination zp[1]:49 [ XSize ] 
Attempting to uplift remaining variables inzp[1]:50 [ YSize ]
Uplifting [] best 131472 combination zp[1]:50 [ YSize ] 
Coalescing zero page register [ zp[2]:20 [ strlen::len#2 strlen::len#1 ] ] with [ zp[2]:53 [ strlen::return#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:26 [ cputs::s#2 cputs::s#1 cputs::s#0 ] ] with [ zp[2]:60 [ cputsxy::s#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:28 [ memcpy::source#2 ] ] with [ zp[2]:32 [ memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:30 [ memcpy::destination#2 ] ] with [ zp[2]:34 [ memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:36 [ memset::str#3 ] ] with [ zp[2]:39 [ memset::dst#2 memset::dst#4 memset::dst#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:43 [ conio_line_text ] ] with [ zp[2]:73 [ gotoxy::$5 ] ] - score: 1
Coalescing zero page register [ zp[2]:45 [ conio_line_color ] ] with [ zp[2]:75 [ gotoxy::$6 ] ] - score: 1
Coalescing zero page register [ zp[2]:65 [ gotoxy::$7 ] ] with [ zp[2]:69 [ gotoxy::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ strlen::len#2 strlen::len#1 strlen::return#2 ] ] with [ zp[2]:55 [ MakeNiceScreen::$22 ] ] - score: 1
Coalescing zero page register [ zp[2]:45 [ conio_line_color gotoxy::$6 ] ] with [ zp[2]:71 [ gotoxy::line_offset#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:45 [ conio_line_color gotoxy::$6 gotoxy::line_offset#0 ] ] with [ zp[2]:65 [ gotoxy::$7 gotoxy::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:18 [ strlen::str#2 strlen::str#1 strlen::str#0 ] ] with [ zp[2]:6 [ clrscr::line_text#5 clrscr::line_text#1 ] ]
Coalescing zero page register [ zp[2]:20 [ strlen::len#2 strlen::len#1 strlen::return#2 MakeNiceScreen::$22 ] ] with [ zp[2]:8 [ clrscr::line_cols#5 clrscr::line_cols#1 ] ]
Coalescing zero page register [ zp[1]:24 [ cvline::i#2 cvline::i#1 ] ] with [ zp[1]:13 [ chline::length#4 chline::length#2 chline::length#1 chline::length#0 ] ]
Coalescing zero page register [ zp[1]:25 [ cvline::y#2 cvline::y#0 cvline::y#1 ] ] with [ zp[1]:14 [ chline::i#2 chline::i#1 ] ]
Coalescing zero page register [ zp[2]:36 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ] ] with [ zp[2]:28 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ] ]
Coalescing zero page register [ zp[2]:67 [ gotoxy::$8 ] ] with [ zp[2]:30 [ memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ] ]
Coalescing zero page register [ zp[2]:81 [ memset::end#0 ] ] with [ zp[2]:79 [ memcpy::src_end#0 ] ]
Coalescing zero page register [ zp[2]:26 [ cputs::s#2 cputs::s#1 cputs::s#0 cputsxy::s#0 ] ] with [ zp[2]:18 [ strlen::str#2 strlen::str#1 strlen::str#0 clrscr::line_text#5 clrscr::line_text#1 ] ]
Allocated (was zp[2]:20) zp[2]:5 [ strlen::len#2 strlen::len#1 strlen::return#2 MakeNiceScreen::$22 clrscr::line_cols#5 clrscr::line_cols#1 ]
Allocated (was zp[1]:24) zp[1]:7 [ cvline::i#2 cvline::i#1 chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
Allocated (was zp[1]:25) zp[1]:8 [ cvline::y#2 cvline::y#0 cvline::y#1 chline::i#2 chline::i#1 ]
Allocated (was zp[2]:26) zp[2]:9 [ cputs::s#2 cputs::s#1 cputs::s#0 cputsxy::s#0 strlen::str#2 strlen::str#1 strlen::str#0 clrscr::line_text#5 clrscr::line_text#1 ]
Allocated (was zp[2]:36) zp[2]:11 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
Allocated (was zp[1]:41) zp[1]:13 [ conio_cursor_x ]
Allocated (was zp[1]:42) zp[1]:14 [ conio_cursor_y ]
Allocated (was zp[2]:43) zp[2]:15 [ conio_line_text gotoxy::$5 ]
Allocated (was zp[2]:45) zp[2]:17 [ conio_line_color gotoxy::$6 gotoxy::line_offset#0 gotoxy::$7 gotoxy::$9 ]
Allocated (was zp[1]:47) zp[1]:19 [ conio_textcolor ]
Allocated (was zp[1]:48) zp[1]:20 [ conio_scroll_enable ]
Allocated (was zp[1]:49) zp[1]:21 [ XSize ]
Allocated (was zp[1]:50) zp[1]:22 [ YSize ]
Allocated (was zp[2]:67) zp[2]:23 [ gotoxy::$8 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
Allocated (was zp[1]:77) zp[1]:25 [ cvline::x#0 ]
Allocated (was zp[2]:81) zp[2]:26 [ memset::end#0 memcpy::src_end#0 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Show a nice screen using conio.h
// From CC65 sample "Eine kleine Nachtmusik" by Ullrich von Bassewitz
// https://github.com/cc65/cc65/blob/master/samples/nachtm.c
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__start)
.pc = $80d "Program"
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  // The horizontal line character
  .const CH_HLINE = $40
  // The vertical line character
  .const CH_VLINE = $5d
  // The upper left corner character
  .const CH_ULCORNER = $70
  // The upper right corner character
  .const CH_URCORNER = $6e
  // The lower left corner character
  .const CH_LLCORNER = $6d
  // The lower right corner character
  .const CH_LRCORNER = $7d
  // The left T character
  .const CH_LTEE = $6b
  // The right T character
  .const CH_RTEE = $73
  .const COLOR_GRAY3 = $f
  .const COLOR_BLACK = 0
  .label VIC_MEMORY = $d018
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $d
  // The current cursor y-position
  .label conio_cursor_y = $e
  // The current text cursor line start
  .label conio_line_text = $f
  // The current color cursor line start
  .label conio_line_color = $11
  // The current text color
  .label conio_textcolor = $13
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  .label conio_scroll_enable = $14
  .label XSize = $15
  .label YSize = $16
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [2] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // [5] (byte) conio_textcolor ← (const nomodify byte) LIGHT_BLUE -- vbuz1=vbuc1 
    lda #LIGHT_BLUE
    sta.z conio_textcolor
    // [6] (byte) conio_scroll_enable ← (byte) 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_scroll_enable
    // [7] (volatile byte) XSize ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z XSize
    // [8] (volatile byte) YSize ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z YSize
    // [9] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [10] call main 
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [11] return 
    rts
}
  // main
main: {
    // [12] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17 -- _deref_pbuc1=vbuc2 
    lda #$17
    sta VIC_MEMORY
    // [13] call screensize 
    jsr screensize
    // [14] phi from main to main::@3 [phi:main->main::@3]
  __b3_from_main:
    jmp __b3
    // main::@3
  __b3:
    // [15] call MakeNiceScreen 
    // [27] phi from main::@3 to MakeNiceScreen [phi:main::@3->MakeNiceScreen]
  MakeNiceScreen_from___b3:
    jsr MakeNiceScreen
    // [16] phi from main::@3 main::@4 to main::@1 [phi:main::@3/main::@4->main::@1]
  __b1_from___b3:
  __b1_from___b4:
    jmp __b1
    // main::@1
  __b1:
    // [17] call kbhit 
    jsr kbhit
    // [18] (byte) kbhit::return#2 ← (byte) kbhit::return#0
    jmp __b4
    // main::@4
  __b4:
    // [19] (byte~) main::$3 ← (byte) kbhit::return#2
    // [20] if((byte) 0==(byte~) main::$3) goto main::@1 -- vbuc1_eq_vbuaa_then_la1 
    cmp #0
    beq __b1_from___b4
    // [21] phi from main::@4 to main::@2 [phi:main::@4->main::@2]
  __b2_from___b4:
    jmp __b2
    // main::@2
  __b2:
    // [22] call clrscr 
    // [76] phi from main::@2 to clrscr [phi:main::@2->clrscr]
  clrscr_from___b2:
    jsr clrscr
    jmp __breturn
    // main::@return
  __breturn:
    // [23] return 
    rts
}
  // screensize
// Return the current screen size.
screensize: {
    .label x = XSize
    .label y = YSize
    // [24] *((const byte*) screensize::x#0) ← (byte) $28 -- _deref_pbuc1=vbuc2 
    lda #$28
    sta.z x
    // [25] *((const byte*) screensize::y#0) ← (byte) $19 -- _deref_pbuc1=vbuc2 
    lda #$19
    sta.z y
    jmp __breturn
    // screensize::@return
  __breturn:
    // [26] return 
    rts
}
  // MakeNiceScreen
MakeNiceScreen: {
    .label __22 = 5
    .label T = 3
    .label I = 2
    // [28] call scroll 
    // disable scrolling
    jsr scroll
    // [29] phi from MakeNiceScreen to MakeNiceScreen::@3 [phi:MakeNiceScreen->MakeNiceScreen::@3]
  __b3_from_MakeNiceScreen:
    jmp __b3
    // MakeNiceScreen::@3
  __b3:
    // [30] call textcolor 
    /* Clear the screen hide the cursor, set colors */
    jsr textcolor
    // [31] phi from MakeNiceScreen::@3 to MakeNiceScreen::@4 [phi:MakeNiceScreen::@3->MakeNiceScreen::@4]
  __b4_from___b3:
    jmp __b4
    // MakeNiceScreen::@4
  __b4:
    // [32] call bordercolor 
    jsr bordercolor
    // [33] phi from MakeNiceScreen::@4 to MakeNiceScreen::@5 [phi:MakeNiceScreen::@4->MakeNiceScreen::@5]
  __b5_from___b4:
    jmp __b5
    // MakeNiceScreen::@5
  __b5:
    // [34] call bgcolor 
    jsr bgcolor
    // [35] phi from MakeNiceScreen::@5 to MakeNiceScreen::@6 [phi:MakeNiceScreen::@5->MakeNiceScreen::@6]
  __b6_from___b5:
    jmp __b6
    // MakeNiceScreen::@6
  __b6:
    // [36] call clrscr 
    // [76] phi from MakeNiceScreen::@6 to clrscr [phi:MakeNiceScreen::@6->clrscr]
  clrscr_from___b6:
    jsr clrscr
    // [37] phi from MakeNiceScreen::@6 to MakeNiceScreen::@7 [phi:MakeNiceScreen::@6->MakeNiceScreen::@7]
  __b7_from___b6:
    jmp __b7
    // MakeNiceScreen::@7
  __b7:
    // [38] call cputcxy 
  /* Top line */
    // [100] phi from MakeNiceScreen::@7 to cputcxy [phi:MakeNiceScreen::@7->cputcxy]
  cputcxy_from___b7:
    // [100] phi (byte) cputcxy::c#2 = (const nomodify byte) CH_ULCORNER [phi:MakeNiceScreen::@7->cputcxy#0] -- vbuyy=vbuc1 
    ldy #CH_ULCORNER
    // [100] phi (byte) cputcxy::y#2 = (byte) 0 [phi:MakeNiceScreen::@7->cputcxy#1] -- vbuaa=vbuc1 
    lda #0
    jsr cputcxy
    jmp __b8
    // MakeNiceScreen::@8
  __b8:
    // [39] (byte) chline::length#1 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [40] call chline 
    // [106] phi from MakeNiceScreen::@8 to chline [phi:MakeNiceScreen::@8->chline]
  chline_from___b8:
    // [106] phi (byte) chline::length#4 = (byte) chline::length#1 [phi:MakeNiceScreen::@8->chline#0] -- register_copy 
    jsr chline
    // [41] phi from MakeNiceScreen::@8 to MakeNiceScreen::@9 [phi:MakeNiceScreen::@8->MakeNiceScreen::@9]
  __b9_from___b8:
    jmp __b9
    // MakeNiceScreen::@9
  __b9:
    // [42] call cputc 
    // [113] phi from MakeNiceScreen::@9 to cputc [phi:MakeNiceScreen::@9->cputc]
  cputc_from___b9:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_URCORNER [phi:MakeNiceScreen::@9->cputc#0] -- vbuaa=vbuc1 
    lda #CH_URCORNER
    jsr cputc
    // [43] phi from MakeNiceScreen::@9 to MakeNiceScreen::@10 [phi:MakeNiceScreen::@9->MakeNiceScreen::@10]
  __b10_from___b9:
    jmp __b10
    // MakeNiceScreen::@10
  __b10:
    // [44] call cvlinexy 
  /* Left line */
    // [124] phi from MakeNiceScreen::@10 to cvlinexy [phi:MakeNiceScreen::@10->cvlinexy]
  cvlinexy_from___b10:
    // [124] phi (byte) cvlinexy::x#2 = (byte) 0 [phi:MakeNiceScreen::@10->cvlinexy#0] -- vbuxx=vbuc1 
    ldx #0
    jsr cvlinexy
    // [45] phi from MakeNiceScreen::@10 to MakeNiceScreen::@11 [phi:MakeNiceScreen::@10->MakeNiceScreen::@11]
  __b11_from___b10:
    jmp __b11
    // MakeNiceScreen::@11
  __b11:
    // [46] call cputc 
  /* Bottom line */
    // [113] phi from MakeNiceScreen::@11 to cputc [phi:MakeNiceScreen::@11->cputc]
  cputc_from___b11:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_LLCORNER [phi:MakeNiceScreen::@11->cputc#0] -- vbuaa=vbuc1 
    lda #CH_LLCORNER
    jsr cputc
    jmp __b12
    // MakeNiceScreen::@12
  __b12:
    // [47] (byte) chline::length#2 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [48] call chline 
    // [106] phi from MakeNiceScreen::@12 to chline [phi:MakeNiceScreen::@12->chline]
  chline_from___b12:
    // [106] phi (byte) chline::length#4 = (byte) chline::length#2 [phi:MakeNiceScreen::@12->chline#0] -- register_copy 
    jsr chline
    // [49] phi from MakeNiceScreen::@12 to MakeNiceScreen::@13 [phi:MakeNiceScreen::@12->MakeNiceScreen::@13]
  __b13_from___b12:
    jmp __b13
    // MakeNiceScreen::@13
  __b13:
    // [50] call cputc 
    // [113] phi from MakeNiceScreen::@13 to cputc [phi:MakeNiceScreen::@13->cputc]
  cputc_from___b13:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_LRCORNER [phi:MakeNiceScreen::@13->cputc#0] -- vbuaa=vbuc1 
    lda #CH_LRCORNER
    jsr cputc
    jmp __b14
    // MakeNiceScreen::@14
  __b14:
    // [51] (byte) cvlinexy::x#1 ← (volatile byte) XSize - (byte) 1 -- vbuxx=vbuz1_minus_1 
    ldx.z XSize
    dex
    // [52] call cvlinexy 
  /* Right line */
    // [124] phi from MakeNiceScreen::@14 to cvlinexy [phi:MakeNiceScreen::@14->cvlinexy]
  cvlinexy_from___b14:
    // [124] phi (byte) cvlinexy::x#2 = (byte) cvlinexy::x#1 [phi:MakeNiceScreen::@14->cvlinexy#0] -- register_copy 
    jsr cvlinexy
    // [53] phi from MakeNiceScreen::@14 to MakeNiceScreen::@15 [phi:MakeNiceScreen::@14->MakeNiceScreen::@15]
  __b15_from___b14:
    jmp __b15
    // MakeNiceScreen::@15
  __b15:
    // [54] call MakeTeeLine 
  /* Several divider lines */
    // [130] phi from MakeNiceScreen::@15 to MakeTeeLine [phi:MakeNiceScreen::@15->MakeTeeLine]
  MakeTeeLine_from___b15:
    // [130] phi (byte) MakeTeeLine::Y#2 = (byte) 7 [phi:MakeNiceScreen::@15->MakeTeeLine#0] -- vbuaa=vbuc1 
    lda #7
    jsr MakeTeeLine
    // [55] phi from MakeNiceScreen::@15 to MakeNiceScreen::@16 [phi:MakeNiceScreen::@15->MakeNiceScreen::@16]
  __b16_from___b15:
    jmp __b16
    // MakeNiceScreen::@16
  __b16:
    // [56] call MakeTeeLine 
    // [130] phi from MakeNiceScreen::@16 to MakeTeeLine [phi:MakeNiceScreen::@16->MakeTeeLine]
  MakeTeeLine_from___b16:
    // [130] phi (byte) MakeTeeLine::Y#2 = (byte) $16 [phi:MakeNiceScreen::@16->MakeTeeLine#0] -- vbuaa=vbuc1 
    lda #$16
    jsr MakeTeeLine
    // [57] phi from MakeNiceScreen::@16 to MakeNiceScreen::@1 [phi:MakeNiceScreen::@16->MakeNiceScreen::@1]
  __b1_from___b16:
    // [57] phi (to_nomodify struct $0*) MakeNiceScreen::T#3 = (const struct $0*) MakeNiceScreen::Text [phi:MakeNiceScreen::@16->MakeNiceScreen::@1#0] -- pssz1=pssc1 
    lda #<Text
    sta.z T
    lda #>Text
    sta.z T+1
    // [57] phi (byte) MakeNiceScreen::I#3 = (byte) 0 [phi:MakeNiceScreen::@16->MakeNiceScreen::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z I
    jmp __b1
  /* Write something into the frame */
    // MakeNiceScreen::@1
  __b1:
    // [58] if((byte) MakeNiceScreen::I#3<(byte) $c*(byte) $29/(byte) $29) goto MakeNiceScreen::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z I
    cmp #$c*$29/$29
    bcc __b2
    jmp __breturn
    // MakeNiceScreen::@return
  __breturn:
    // [59] return 
    rts
    // MakeNiceScreen::@2
  __b2:
    // [60] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 -- pbuz1=pbuz2_plus_1 
    lda.z T
    clc
    adc #1
    sta.z strlen.str
    lda.z T+1
    adc #0
    sta.z strlen.str+1
    // [61] call strlen 
    // [138] phi from MakeNiceScreen::@2 to strlen [phi:MakeNiceScreen::@2->strlen]
  strlen_from___b2:
    jsr strlen
    // [62] (word) strlen::return#2 ← (word) strlen::len#2
    jmp __b17
    // MakeNiceScreen::@17
  __b17:
    // [63] (word~) MakeNiceScreen::$22 ← (word) strlen::return#2
    // [64] (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22 -- vbuaa=_byte_vwuz1 
    lda.z __22
    // [65] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34 -- vbuaa=vbuz1_minus_vbuaa 
    eor #$ff
    sec
    adc.z XSize
    // [66] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1 -- vbuxx=vbuaa_ror_1 
    lsr
    tax
    // [67] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 -- pbuz1=pbuz2_plus_1 
    lda.z T
    clc
    adc #1
    sta.z cputsxy.s
    lda.z T+1
    adc #0
    sta.z cputsxy.s+1
    // [68] (byte) cputsxy::x#0 ← (byte) MakeNiceScreen::X#1
    // [69] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (T),y
    // [70] call cputsxy 
    jsr cputsxy
    jmp __b18
    // MakeNiceScreen::@18
  __b18:
    // [71] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29 -- pssz1=pssz1_plus_vbuc1 
    lda #$29
    clc
    adc.z T
    sta.z T
    bcc !+
    inc.z T+1
  !:
    // [72] (byte) MakeNiceScreen::I#2 ← ++ (byte) MakeNiceScreen::I#3 -- vbuz1=_inc_vbuz1 
    inc.z I
    // [57] phi from MakeNiceScreen::@18 to MakeNiceScreen::@1 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1]
  __b1_from___b18:
    // [57] phi (to_nomodify struct $0*) MakeNiceScreen::T#3 = (to_nomodify struct $0*) MakeNiceScreen::T#2 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1#0] -- register_copy 
    // [57] phi (byte) MakeNiceScreen::I#3 = (byte) MakeNiceScreen::I#2 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1#1] -- register_copy 
    jmp __b1
    Text: .byte 2
    .text "Wolfgang Amadeus Mozart"
    .byte 0
    .fill $10, 0
    .byte 4
    .text @"\"Eine kleine Nachtmusik\""
    .byte 0
    .fill $f, 0
    .byte 5
    .text "(KV 525)"
    .byte 0
    .fill $1f, 0
    .byte 9
    .text "Ported to the SID in 1987 by"
    .byte 0
    .fill $b, 0
    .byte $b
    .text "Joachim von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $c
    .text "(joachim@von-bassewitz.de)"
    .byte 0
    .fill $d, 0
    .byte $d
    .text "and"
    .byte 0
    .fill $24, 0
    .byte $e
    .text "Ullrich von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $f
    .text "(ullrich@von-bassewitz.de)"
    .byte 0
    .fill $d, 0
    .byte $12
    .text "C Implementation by"
    .byte 0
    .fill $14, 0
    .byte $13
    .text "Ullrich von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $17
    .text "Press any key to quit..."
    .byte 0
    .fill $f, 0
}
  // kbhit
// Return true if there's a key waiting, return false if not
kbhit: {
    // CIA#1 Port A: keyboard matrix columns and joystick #2
    .label CIA1_PORT_A = $dc00
    // CIA#1 Port B: keyboard matrix rows and joystick #1.
    .label CIA1_PORT_B = $dc01
    // [73] *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta CIA1_PORT_A
    // [74] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    jmp __breturn
    // kbhit::@return
  __breturn:
    // [75] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label line_text = 9
    .label line_cols = 5
    // [77] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
  __b1_from_clrscr:
    // [77] phi (byte*) clrscr::line_cols#5 = (const nomodify byte*) COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [77] phi (byte*) clrscr::line_text#5 = (const nomodify byte*) DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [77] phi (byte) clrscr::l#2 = (byte) 0 [phi:clrscr->clrscr::@1#2] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // clrscr::@1
  __b1:
    // [78] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b3_from___b1
    jmp __b2
    // clrscr::@2
  __b2:
    // [79] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [80] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_y
    // [81] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // [82] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [83] return 
    rts
    // [84] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b3_from___b1:
    // [84] phi (byte) clrscr::c#2 = (byte) 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuyy=vbuc1 
    ldy #0
    jmp __b3
    // clrscr::@3
  __b3:
    // [85] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4 -- vbuyy_lt_vbuc1_then_la1 
    cpy #$28
    bcc __b4
    jmp __b5
    // clrscr::@5
  __b5:
    // [86] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // [87] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // [88] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [77] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
  __b1_from___b5:
    // [77] phi (byte*) clrscr::line_cols#5 = (byte*) clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [77] phi (byte*) clrscr::line_text#5 = (byte*) clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [77] phi (byte) clrscr::l#2 = (byte) clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // [89] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #' '
    sta (line_text),y
    // [90] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (byte) conio_textcolor -- pbuz1_derefidx_vbuyy=vbuz2 
    lda.z conio_textcolor
    sta (line_cols),y
    // [91] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [84] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
  __b3_from___b4:
    // [84] phi (byte) clrscr::c#2 = (byte) clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // scroll
// If onoff is 1, scrolling is enabled when outputting past the end of the screen
// If onoff is 1, scrolling is disabled and the cursor instead moves to (0,0)
// The function returns the old scroll setting.
scroll: {
    .const onoff = 0
    // [92] (byte) conio_scroll_enable ← (const byte) scroll::onoff#0 -- vbuz1=vbuc1 
    lda #onoff
    sta.z conio_scroll_enable
    jmp __breturn
    // scroll::@return
  __breturn:
    // [93] return 
    rts
}
  // textcolor
// Set the color for text output. The old color setting is returned.
textcolor: {
    // [94] (byte) conio_textcolor ← (const nomodify byte) COLOR_GRAY3 -- vbuz1=vbuc1 
    lda #COLOR_GRAY3
    sta.z conio_textcolor
    jmp __breturn
    // textcolor::@return
  __breturn:
    // [95] return 
    rts
}
  // bordercolor
// Set the color for the border. The old color setting is returned.
bordercolor: {
    // The border color register address
    .label CONIO_BORDERCOLOR = $d020
    // [96] *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK -- _deref_pbuc1=vbuc2 
    lda #COLOR_BLACK
    sta CONIO_BORDERCOLOR
    jmp __breturn
    // bordercolor::@return
  __breturn:
    // [97] return 
    rts
}
  // bgcolor
// Set the color for the background. The old color setting is returned.
bgcolor: {
    // The background color register address
    .label CONIO_BGCOLOR = $d021
    // [98] *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK -- _deref_pbuc1=vbuc2 
    lda #COLOR_BLACK
    sta CONIO_BGCOLOR
    jmp __breturn
    // bgcolor::@return
  __breturn:
    // [99] return 
    rts
}
  // cputcxy
// Move cursor and output one character
// Same as "gotoxy (x, y); cputc (c);"
// cputcxy(byte register(A) y, byte register(Y) c)
cputcxy: {
    // [101] (byte) gotoxy::y#2 ← (byte) cputcxy::y#2
    // [102] call gotoxy 
    // [150] phi from cputcxy to gotoxy [phi:cputcxy->gotoxy]
  gotoxy_from_cputcxy:
    // [150] phi (byte) gotoxy::x#6 = (byte) 0 [phi:cputcxy->gotoxy#0] -- vbuxx=vbuc1 
    ldx #0
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#2 [phi:cputcxy->gotoxy#1] -- register_copy 
    jsr gotoxy
    jmp __b1
    // cputcxy::@1
  __b1:
    // [103] (byte) cputc::c#1 ← (byte) cputcxy::c#2 -- vbuaa=vbuyy 
    tya
    // [104] call cputc 
    // [113] phi from cputcxy::@1 to cputc [phi:cputcxy::@1->cputc]
  cputc_from___b1:
    // [113] phi (byte) cputc::c#8 = (byte) cputc::c#1 [phi:cputcxy::@1->cputc#0] -- register_copy 
    jsr cputc
    jmp __breturn
    // cputcxy::@return
  __breturn:
    // [105] return 
    rts
}
  // chline
// Output a horizontal line with the given length starting at the current cursor position.
// chline(byte zp(7) length)
chline: {
    .label i = 8
    .label length = 7
    // [107] phi from chline to chline::@1 [phi:chline->chline::@1]
  __b1_from_chline:
    // [107] phi (byte) chline::i#2 = (byte) 0 [phi:chline->chline::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // chline::@1
  __b1:
    // [108] if((byte) chline::i#2<(byte) chline::length#4) goto chline::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2_from___b1
    jmp __breturn
    // chline::@return
  __breturn:
    // [109] return 
    rts
    // [110] phi from chline::@1 to chline::@2 [phi:chline::@1->chline::@2]
  __b2_from___b1:
    jmp __b2
    // chline::@2
  __b2:
    // [111] call cputc 
    // [113] phi from chline::@2 to cputc [phi:chline::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_HLINE [phi:chline::@2->cputc#0] -- vbuaa=vbuc1 
    lda #CH_HLINE
    jsr cputc
    jmp __b3
    // chline::@3
  __b3:
    // [112] (byte) chline::i#1 ← ++ (byte) chline::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [107] phi from chline::@3 to chline::@1 [phi:chline::@3->chline::@1]
  __b1_from___b3:
    // [107] phi (byte) chline::i#2 = (byte) chline::i#1 [phi:chline::@3->chline::@1#0] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte register(A) c)
cputc: {
    // [114] if((byte) cputc::c#8==(byte) ' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1_from_cputc
    jmp __b2
    // cputc::@2
  __b2:
    // [115] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#8 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // [116] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z conio_textcolor
    ldy.z conio_cursor_x
    sta (conio_line_color),y
    // [117] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [118] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [119] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
  __b3_from___b2:
    jmp __b3
    // cputc::@3
  __b3:
    // [120] call cputln 
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [121] return 
    rts
    // [122] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
  __b1_from_cputc:
    jmp __b1
    // cputc::@1
  __b1:
    // [123] call cputln 
    jsr cputln
    jmp __breturn
}
  // cvlinexy
// Move cursor and output a vertical line with the given length
// Same as "gotoxy (x, y); cvline (length);"
// cvlinexy(byte register(X) x)
cvlinexy: {
    // [125] (byte) gotoxy::x#5 ← (byte) cvlinexy::x#2
    // [126] call gotoxy 
    // [150] phi from cvlinexy to gotoxy [phi:cvlinexy->gotoxy]
  gotoxy_from_cvlinexy:
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#5 [phi:cvlinexy->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) 1 [phi:cvlinexy->gotoxy#1] -- vbuaa=vbuc1 
    lda #1
    jsr gotoxy
    // [127] phi from cvlinexy to cvlinexy::@1 [phi:cvlinexy->cvlinexy::@1]
  __b1_from_cvlinexy:
    jmp __b1
    // cvlinexy::@1
  __b1:
    // [128] call cvline 
    jsr cvline
    jmp __breturn
    // cvlinexy::@return
  __breturn:
    // [129] return 
    rts
}
  // MakeTeeLine
// MakeTeeLine(byte register(A) Y)
MakeTeeLine: {
    // [131] (byte) cputcxy::y#0 ← (byte) MakeTeeLine::Y#2
    // [132] call cputcxy 
    // [100] phi from MakeTeeLine to cputcxy [phi:MakeTeeLine->cputcxy]
  cputcxy_from_MakeTeeLine:
    // [100] phi (byte) cputcxy::c#2 = (const nomodify byte) CH_LTEE [phi:MakeTeeLine->cputcxy#0] -- vbuyy=vbuc1 
    ldy #CH_LTEE
    // [100] phi (byte) cputcxy::y#2 = (byte) cputcxy::y#0 [phi:MakeTeeLine->cputcxy#1] -- register_copy 
    jsr cputcxy
    jmp __b1
    // MakeTeeLine::@1
  __b1:
    // [133] (byte) chline::length#0 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [134] call chline 
    // [106] phi from MakeTeeLine::@1 to chline [phi:MakeTeeLine::@1->chline]
  chline_from___b1:
    // [106] phi (byte) chline::length#4 = (byte) chline::length#0 [phi:MakeTeeLine::@1->chline#0] -- register_copy 
    jsr chline
    // [135] phi from MakeTeeLine::@1 to MakeTeeLine::@2 [phi:MakeTeeLine::@1->MakeTeeLine::@2]
  __b2_from___b1:
    jmp __b2
    // MakeTeeLine::@2
  __b2:
    // [136] call cputc 
    // [113] phi from MakeTeeLine::@2 to cputc [phi:MakeTeeLine::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_RTEE [phi:MakeTeeLine::@2->cputc#0] -- vbuaa=vbuc1 
    lda #CH_RTEE
    jsr cputc
    jmp __breturn
    // MakeTeeLine::@return
  __breturn:
    // [137] return 
    rts
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp(9) str)
strlen: {
    .label len = 5
    .label str = 9
    .label return = 5
    // [139] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
  __b1_from_strlen:
    // [139] phi (word) strlen::len#2 = (word) 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    lda #>0
    sta.z len+1
    // [139] phi (byte*) strlen::str#2 = (byte*) strlen::str#1 [phi:strlen->strlen::@1#1] -- register_copy 
    jmp __b1
    // strlen::@1
  __b1:
    // [140] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // strlen::@return
  __breturn:
    // [141] return 
    rts
    // strlen::@2
  __b2:
    // [142] (word) strlen::len#1 ← ++ (word) strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // [143] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [139] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
  __b1_from___b2:
    // [139] phi (word) strlen::len#2 = (word) strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [139] phi (byte*) strlen::str#2 = (byte*) strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // cputsxy
// Move cursor and output a NUL-terminated string
// Same as "gotoxy (x, y); puts (s);"
// cputsxy(byte register(X) x, byte register(A) y, byte* zp(9) s)
cputsxy: {
    .label s = 9
    // [144] (byte) gotoxy::x#3 ← (byte) cputsxy::x#0
    // [145] (byte) gotoxy::y#3 ← (byte) cputsxy::y#0
    // [146] call gotoxy 
    // [150] phi from cputsxy to gotoxy [phi:cputsxy->gotoxy]
  gotoxy_from_cputsxy:
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#3 [phi:cputsxy->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#3 [phi:cputsxy->gotoxy#1] -- register_copy 
    jsr gotoxy
    jmp __b1
    // cputsxy::@1
  __b1:
    // [147] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0
    // [148] call cputs 
    // [186] phi from cputsxy::@1 to cputs [phi:cputsxy::@1->cputs]
  cputs_from___b1:
    jsr cputs
    jmp __breturn
    // cputsxy::@return
  __breturn:
    // [149] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte register(X) x, byte register(A) y)
gotoxy: {
    .label __5 = $f
    .label __6 = $11
    .label __7 = $11
    .label line_offset = $11
    .label __8 = $17
    .label __9 = $11
    // [151] if((byte) gotoxy::y#6<(byte) $19+(byte) 1) goto gotoxy::@3 -- vbuaa_lt_vbuc1_then_la1 
    cmp #$19+1
    bcc __b3_from_gotoxy
    // [153] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [153] phi (byte) gotoxy::y#7 = (byte) 0 [phi:gotoxy->gotoxy::@1#0] -- vbuaa=vbuc1 
    lda #0
    jmp __b1
    // [152] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
  __b3_from_gotoxy:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [153] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
  __b1_from___b3:
    // [153] phi (byte) gotoxy::y#7 = (byte) gotoxy::y#6 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    // [154] if((byte) gotoxy::x#6<(byte) $28) goto gotoxy::@4 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$28
    bcc __b4_from___b1
    // [156] phi from gotoxy::@1 to gotoxy::@2 [phi:gotoxy::@1->gotoxy::@2]
  __b2_from___b1:
    // [156] phi (byte) gotoxy::x#7 = (byte) 0 [phi:gotoxy::@1->gotoxy::@2#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b2
    // [155] phi from gotoxy::@1 to gotoxy::@4 [phi:gotoxy::@1->gotoxy::@4]
  __b4_from___b1:
    jmp __b4
    // gotoxy::@4
  __b4:
    // [156] phi from gotoxy::@4 to gotoxy::@2 [phi:gotoxy::@4->gotoxy::@2]
  __b2_from___b4:
    // [156] phi (byte) gotoxy::x#7 = (byte) gotoxy::x#6 [phi:gotoxy::@4->gotoxy::@2#0] -- register_copy 
    jmp __b2
    // gotoxy::@2
  __b2:
    // [157] (byte) conio_cursor_x ← (byte) gotoxy::x#7 -- vbuz1=vbuxx 
    stx.z conio_cursor_x
    // [158] (byte) conio_cursor_y ← (byte) gotoxy::y#7 -- vbuz1=vbuaa 
    sta.z conio_cursor_y
    // [159] (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7 -- vwuz1=_word_vbuaa 
    sta.z __7
    lda #0
    sta.z __7+1
    // [160] (word~) gotoxy::$8 ← (word~) gotoxy::$7 << (byte) 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [161] (word~) gotoxy::$9 ← (word~) gotoxy::$8 + (word~) gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __9
    clc
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [162] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$9 << (byte) 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // [163] (byte*~) gotoxy::$5 ← (const nomodify byte*) DEFAULT_SCREEN + (word) gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // [164] (byte*) conio_line_text ← (byte*~) gotoxy::$5
    // [165] (byte*~) gotoxy::$6 ← (const nomodify byte*) COLORRAM + (word) gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z __6
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // [166] (byte*) conio_line_color ← (byte*~) gotoxy::$6
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [167] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // [168] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // [169] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // [170] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [171] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [172] call cscroll 
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [173] return 
    rts
}
  // cvline
// Output a vertical line with the given length at the current cursor position.
cvline: {
    .const length = $17
    .label x = $19
    .label y = 8
    .label i = 7
    // [174] (byte) cvline::x#0 ← (byte) conio_cursor_x -- vbuz1=vbuz2 
    lda.z conio_cursor_x
    sta.z x
    // [175] (byte) cvline::y#0 ← (byte) conio_cursor_y -- vbuz1=vbuz2 
    lda.z conio_cursor_y
    sta.z y
    // [176] phi from cvline to cvline::@1 [phi:cvline->cvline::@1]
  __b1_from_cvline:
    // [176] phi (byte) cvline::y#2 = (byte) cvline::y#0 [phi:cvline->cvline::@1#0] -- register_copy 
    // [176] phi (byte) cvline::i#2 = (byte) 0 [phi:cvline->cvline::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    jmp __b1
    // cvline::@1
  __b1:
    // [177] if((byte) cvline::i#2<(const byte) cvline::length#0) goto cvline::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i
    cmp #length
    bcc __b2_from___b1
    jmp __breturn
    // cvline::@return
  __breturn:
    // [178] return 
    rts
    // [179] phi from cvline::@1 to cvline::@2 [phi:cvline::@1->cvline::@2]
  __b2_from___b1:
    jmp __b2
    // cvline::@2
  __b2:
    // [180] call cputc 
    // [113] phi from cvline::@2 to cputc [phi:cvline::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_VLINE [phi:cvline::@2->cputc#0] -- vbuaa=vbuc1 
    lda #CH_VLINE
    jsr cputc
    jmp __b3
    // cvline::@3
  __b3:
    // [181] (byte) cvline::y#1 ← ++ (byte) cvline::y#2 -- vbuz1=_inc_vbuz1 
    inc.z y
    // [182] (byte) gotoxy::x#4 ← (byte) cvline::x#0 -- vbuxx=vbuz1 
    ldx.z x
    // [183] (byte) gotoxy::y#4 ← (byte) cvline::y#1 -- vbuaa=vbuz1 
    lda.z y
    // [184] call gotoxy 
    // [150] phi from cvline::@3 to gotoxy [phi:cvline::@3->gotoxy]
  gotoxy_from___b3:
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#4 [phi:cvline::@3->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#4 [phi:cvline::@3->gotoxy#1] -- register_copy 
    jsr gotoxy
    jmp __b4
    // cvline::@4
  __b4:
    // [185] (byte) cvline::i#1 ← ++ (byte) cvline::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [176] phi from cvline::@4 to cvline::@1 [phi:cvline::@4->cvline::@1]
  __b1_from___b4:
    // [176] phi (byte) cvline::y#2 = (byte) cvline::y#1 [phi:cvline::@4->cvline::@1#0] -- register_copy 
    // [176] phi (byte) cvline::i#2 = (byte) cvline::i#1 [phi:cvline::@4->cvline::@1#1] -- register_copy 
    jmp __b1
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp(9) s)
cputs: {
    .label s = 9
    // [187] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
  __b1_from_cputs:
  __b1_from___b2:
    // [187] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#1 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    jmp __b1
    // cputs::@1
  __b1:
    // [188] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [189] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [190] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [191] return 
    rts
    // cputs::@2
  __b2:
    // [192] (byte) cputc::c#0 ← (byte) cputs::c#1
    // [193] call cputc 
    // [113] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
  cputc_from___b2:
    // [113] phi (byte) cputc::c#8 = (byte) cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b1_from___b2
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [194] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    jmp __b1
    // cscroll::@1
  __b1:
    // [195] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z conio_scroll_enable
    bne __b3_from___b1
    // [196] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
  __b2_from___b1:
    jmp __b2
    // cscroll::@2
  __b2:
    // [197] call gotoxy 
    // [150] phi from cscroll::@2 to gotoxy [phi:cscroll::@2->gotoxy]
  gotoxy_from___b2:
    // [150] phi (byte) gotoxy::x#6 = (byte) 0 [phi:cscroll::@2->gotoxy#0] -- vbuxx=vbuc1 
    ldx #0
    // [150] phi (byte) gotoxy::y#6 = (byte) 0 [phi:cscroll::@2->gotoxy#1] -- vbuaa=vbuc1 
    lda #0
    jsr gotoxy
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [198] return 
    rts
    // [199] phi from cscroll::@1 to cscroll::@3 [phi:cscroll::@1->cscroll::@3]
  __b3_from___b1:
    jmp __b3
    // cscroll::@3
  __b3:
    // [200] call memcpy 
    // [210] phi from cscroll::@3 to memcpy [phi:cscroll::@3->memcpy]
  memcpy_from___b3:
    // [210] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN [phi:cscroll::@3->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [210] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 [phi:cscroll::@3->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [201] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
  __b4_from___b3:
    jmp __b4
    // cscroll::@4
  __b4:
    // [202] call memcpy 
    // [210] phi from cscroll::@4 to memcpy [phi:cscroll::@4->memcpy]
  memcpy_from___b4:
    // [210] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) COLORRAM [phi:cscroll::@4->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [210] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) COLORRAM+(byte) $28 [phi:cscroll::@4->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [203] phi from cscroll::@4 to cscroll::@5 [phi:cscroll::@4->cscroll::@5]
  __b5_from___b4:
    jmp __b5
    // cscroll::@5
  __b5:
    // [204] call memset 
    // [220] phi from cscroll::@5 to memset [phi:cscroll::@5->memset]
  memset_from___b5:
    // [220] phi (byte) memset::c#4 = (byte) ' ' [phi:cscroll::@5->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [220] phi (void*) memset::str#3 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@5->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b6
    // cscroll::@6
  __b6:
    // [205] (byte) memset::c#1 ← (byte) conio_textcolor -- vbuxx=vbuz1 
    ldx.z conio_textcolor
    // [206] call memset 
    // [220] phi from cscroll::@6 to memset [phi:cscroll::@6->memset]
  memset_from___b6:
    // [220] phi (byte) memset::c#4 = (byte) memset::c#1 [phi:cscroll::@6->memset#0] -- register_copy 
    // [220] phi (void*) memset::str#3 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@6->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    jmp __b7
    // cscroll::@7
  __b7:
    // [207] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // [208] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // [209] (byte) conio_cursor_y ← -- (byte) conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    jmp __breturn
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($17) destination, void* zp($b) source)
memcpy: {
    .label src_end = $1a
    .label dst = $17
    .label src = $b
    .label source = $b
    .label destination = $17
    // [211] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [212] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
    // [213] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
    // [214] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
  __b1_from_memcpy:
  __b1_from___b2:
    // [214] phi (byte*) memcpy::dst#2 = (byte*) memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [214] phi (byte*) memcpy::src#2 = (byte*) memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    jmp __b1
    // memcpy::@1
  __b1:
    // [215] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    jmp __breturn
    // memcpy::@return
  __breturn:
    // [216] return 
    rts
    // memcpy::@2
  __b2:
    // [217] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    ldy #0
    sta (dst),y
    // [218] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [219] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1_from___b2
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp($b) str, byte register(X) c)
memset: {
    .label end = $1a
    .label dst = $b
    .label str = $b
    jmp __b1
    // memset::@1
  __b1:
    // [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
    // [223] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
  __b2_from___b1:
  __b2_from___b3:
    // [223] phi (byte*) memset::dst#2 = (byte*) memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    jmp __b2
    // memset::@2
  __b2:
    // [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    jmp __breturn
    // memset::@return
  __breturn:
    // [225] return 
    rts
    // memset::@3
  __b3:
    // [226] *((byte*) memset::dst#2) ← (byte) memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // [227] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2_from___b3
}
  // File Data

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __b16
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __b4
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda #0
Removing instruction lda #0
Removing instruction ldy.z conio_cursor_x
Removing instruction lda #>0
Replacing instruction lda #0 with TXA
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b1_from___b4 with __b1
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from_cputc with __b1
Replacing label __b3_from_gotoxy with __b1
Replacing label __b4_from___b1 with __b2
Replacing label __b2_from___b1 with __b2
Replacing label __b1_from___b2 with __b1
Replacing label __b3_from___b1 with __b3
Replacing label __b1_from___b2 with __b1
Replacing label __b2_from___b3 with __b2
Removing instruction __b1_from___init1:
Removing instruction __b3_from_main:
Removing instruction MakeNiceScreen_from___b3:
Removing instruction __b1_from___b3:
Removing instruction __b1_from___b4:
Removing instruction __b2_from___b4:
Removing instruction clrscr_from___b2:
Removing instruction __b3_from_MakeNiceScreen:
Removing instruction __b4_from___b3:
Removing instruction __b5_from___b4:
Removing instruction __b6_from___b5:
Removing instruction clrscr_from___b6:
Removing instruction __b7_from___b6:
Removing instruction __b9_from___b8:
Removing instruction cputc_from___b9:
Removing instruction __b10_from___b9:
Removing instruction __b11_from___b10:
Removing instruction __b13_from___b12:
Removing instruction cputc_from___b13:
Removing instruction __b15_from___b14:
Removing instruction __b16_from___b15:
Removing instruction MakeTeeLine_from___b16:
Removing instruction __b2_from___b1:
Removing instruction cputc_from___b2:
Removing instruction __b3_from___b2:
Removing instruction __b1_from_cputc:
Removing instruction __b1_from_cvlinexy:
Removing instruction __b2_from___b1:
Removing instruction cputc_from___b2:
Removing instruction cputs_from___b1:
Removing instruction __b3_from_gotoxy:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b4_from___b1:
Removing instruction __b4:
Removing instruction __b2_from___b4:
Removing instruction __b2_from___b1:
Removing instruction cputc_from___b2:
Removing instruction __b1_from_cputs:
Removing instruction __b1_from___b2:
Removing instruction cputc_from___b2:
Removing instruction __b2_from___b1:
Removing instruction gotoxy_from___b2:
Removing instruction __b3_from___b1:
Removing instruction memcpy_from___b3:
Removing instruction __b4_from___b3:
Removing instruction memcpy_from___b4:
Removing instruction __b5_from___b4:
Removing instruction memset_from___b5:
Removing instruction __b1_from_memcpy:
Removing instruction __b1_from___b2:
Removing instruction __b2_from___b1:
Removing instruction __b2_from___b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction cputcxy_from___b7:
Removing instruction __b8:
Removing instruction chline_from___b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction cvlinexy_from___b10:
Removing instruction __b11:
Removing instruction cputc_from___b11:
Removing instruction __b12:
Removing instruction chline_from___b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction cvlinexy_from___b14:
Removing instruction __b15:
Removing instruction MakeTeeLine_from___b15:
Removing instruction __b16:
Removing instruction __b1_from___b16:
Removing instruction __breturn:
Removing instruction strlen_from___b2:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b1_from___b18:
Removing instruction __breturn:
Removing instruction __b1_from_clrscr:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b5:
Removing instruction __b1_from___b5:
Removing instruction __b3_from___b4:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction gotoxy_from_cputcxy:
Removing instruction __b1:
Removing instruction cputc_from___b1:
Removing instruction __breturn:
Removing instruction __b1_from_chline:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b1_from___b3:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction gotoxy_from_cvlinexy:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction cputcxy_from_MakeTeeLine:
Removing instruction __b1:
Removing instruction chline_from___b1:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b1_from_strlen:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction gotoxy_from_cputsxy:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b1_from_gotoxy:
Removing instruction __b2_from___b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_cvline:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction gotoxy_from___b3:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction memset_from___b6:
Removing instruction __b7:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b3_from___b1 to __b2
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Removing instruction jmp __b2
Succesful ASM optimization Pass5NextJumpElimination
Replacing instruction ldx #0 with TAX

FINAL SYMBOL TABLE
(const byte*) $0::Msg[(number) $28]  = { fill( $28, 0) }
(byte) $0::Y
(const nomodify byte) CH_HLINE = (byte) $40
(const nomodify byte) CH_LLCORNER = (byte) $6d
(const nomodify byte) CH_LRCORNER = (byte) $7d
(const nomodify byte) CH_LTEE = (byte) $6b
(const nomodify byte) CH_RTEE = (byte) $73
(const nomodify byte) CH_ULCORNER = (byte) $70
(const nomodify byte) CH_URCORNER = (byte) $6e
(const nomodify byte) CH_VLINE = (byte) $5d
(const nomodify byte*) COLORRAM = (byte*) 55296
(const nomodify byte) COLOR_BLACK = (byte) 0
(const nomodify byte) COLOR_GRAY3 = (byte) $f
(const nomodify byte*) DEFAULT_SCREEN = (byte*) 1024
(const nomodify byte) LIGHT_BLUE = (byte) $e
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(void()) MakeNiceScreen()
(word~) MakeNiceScreen::$22 zp[2]:5 1001.0
(byte~) MakeNiceScreen::$23 reg byte a 2002.0
(byte~) MakeNiceScreen::$34 reg byte a 2002.0
(label) MakeNiceScreen::@1
(label) MakeNiceScreen::@10
(label) MakeNiceScreen::@11
(label) MakeNiceScreen::@12
(label) MakeNiceScreen::@13
(label) MakeNiceScreen::@14
(label) MakeNiceScreen::@15
(label) MakeNiceScreen::@16
(label) MakeNiceScreen::@17
(label) MakeNiceScreen::@18
(label) MakeNiceScreen::@2
(label) MakeNiceScreen::@3
(label) MakeNiceScreen::@4
(label) MakeNiceScreen::@5
(label) MakeNiceScreen::@6
(label) MakeNiceScreen::@7
(label) MakeNiceScreen::@8
(label) MakeNiceScreen::@9
(label) MakeNiceScreen::@return
(byte) MakeNiceScreen::I
(byte) MakeNiceScreen::I#2 I zp[1]:2 2002.0
(byte) MakeNiceScreen::I#3 I zp[1]:2 214.5
(to_nomodify struct $0*) MakeNiceScreen::T
(to_nomodify struct $0*) MakeNiceScreen::T#2 T zp[2]:3 1001.0
(to_nomodify struct $0*) MakeNiceScreen::T#3 T zp[2]:3 154.0
(const struct $0*) MakeNiceScreen::Text[]  = { { Y: (byte) 2, Msg: (byte*) "Wolfgang Amadeus Mozart" }, { Y: (byte) 4, Msg: (byte*) ""Eine kleine Nachtmusik"" }, { Y: (byte) 5, Msg: (byte*) "(KV 525)" }, { Y: (byte) 9, Msg: (byte*) "Ported to the SID in 1987 by" }, { Y: (byte) $b, Msg: (byte*) "Joachim von Bassewitz" }, { Y: (byte) $c, Msg: (byte*) "(joachim@von-bassewitz.de)" }, { Y: (byte) $d, Msg: (byte*) "and" }, { Y: (byte) $e, Msg: (byte*) "Ullrich von Bassewitz" }, { Y: (byte) $f, Msg: (byte*) "(ullrich@von-bassewitz.de)" }, { Y: (byte) $12, Msg: (byte*) "C Implementation by" }, { Y: (byte) $13, Msg: (byte*) "Ullrich von Bassewitz" }, { Y: (byte) $17, Msg: (byte*) "Press any key to quit..." } }
(byte) MakeNiceScreen::X
(byte) MakeNiceScreen::X#1 reg byte x 1001.0
(void()) MakeTeeLine((byte) MakeTeeLine::Y)
(label) MakeTeeLine::@1
(label) MakeTeeLine::@2
(label) MakeTeeLine::@return
(byte) MakeTeeLine::Y
(byte) MakeTeeLine::Y#2 reg byte a 1001.0
(const nomodify byte*) VIC_MEMORY = (byte*) 53272
(volatile byte) XSize loadstore zp[1]:21 39.101694915254235
(volatile byte) YSize loadstore zp[1]:22 20.0
(void()) __start()
(label) __start::@1
(label) __start::@return
(label) __start::__init1
(byte()) bgcolor((byte) bgcolor::color)
(label) bgcolor::@return
(const nomodify byte*) bgcolor::CONIO_BGCOLOR = (byte*) 53281
(byte) bgcolor::color
(byte) bgcolor::old
(byte) bgcolor::return
(byte()) bordercolor((byte) bordercolor::color)
(label) bordercolor::@return
(const nomodify byte*) bordercolor::CONIO_BORDERCOLOR = (byte*) 53280
(byte) bordercolor::color
(byte) bordercolor::old
(byte) bordercolor::return
(void()) chline((byte) chline::length)
(label) chline::@1
(label) chline::@2
(label) chline::@3
(label) chline::@return
(byte) chline::i
(byte) chline::i#1 i zp[1]:8 200002.0
(byte) chline::i#2 i zp[1]:8 75000.75
(byte) chline::length
(byte) chline::length#0 length zp[1]:7 2002.0
(byte) chline::length#1 length zp[1]:7 202.0
(byte) chline::length#2 length zp[1]:7 202.0
(byte) chline::length#4 length zp[1]:7 16867.333333333332
(void()) clrscr()
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@5
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#1 reg byte y 200002.0
(byte) clrscr::c#2 reg byte y 125001.25
(byte) clrscr::l
(byte) clrscr::l#1 reg byte x 20002.0
(byte) clrscr::l#2 reg byte x 3333.6666666666665
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 line_cols zp[2]:5 10001.0
(byte*) clrscr::line_cols#5 line_cols zp[2]:5 15000.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 line_text zp[2]:9 6667.333333333333
(byte*) clrscr::line_text#5 line_text zp[2]:9 17143.285714285714
(byte) conio_cursor_x loadstore zp[1]:13 1.1941177766E9
(byte) conio_cursor_y loadstore zp[1]:14 1.5000001251136363E9
(byte*) conio_line_color loadstore zp[2]:17 1.5262500126125002E9
(byte*) conio_line_text loadstore zp[2]:15 1.4890244025487807E9
(byte) conio_scroll_enable loadstore zp[1]:20 7.575758336363636E7
(byte) conio_textcolor loadstore zp[1]:19 6.558507146753247E7
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 2.0000002E7
(byte) cputc::c#1 reg byte a 20002.0
(byte) cputc::c#8 reg byte a 1.05005002E8
(void()) cputcxy((byte) cputcxy::x , (byte) cputcxy::y , (byte) cputcxy::c)
(label) cputcxy::@1
(label) cputcxy::@return
(byte) cputcxy::c
(byte) cputcxy::c#2 reg byte y 3333.6666666666665
(byte) cputcxy::x
(byte) cputcxy::y
(byte) cputcxy::y#0 reg byte a 2002.0
(byte) cputcxy::y#2 reg byte a 11002.0
(void()) cputln()
(label) cputln::@return
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 1.0000001E7
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:9 5000000.5
(to_nomodify byte*) cputs::s#1 s zp[2]:9 55001.0
(to_nomodify byte*) cputs::s#2 s zp[2]:9 1.5050002E7
(void()) cputsxy((byte) cputsxy::x , (byte) cputsxy::y , (to_nomodify byte*) cputsxy::s)
(label) cputsxy::@1
(label) cputsxy::@return
(to_nomodify byte*) cputsxy::s
(to_nomodify byte*) cputsxy::s#0 s zp[2]:9 1833.6666666666665
(byte) cputsxy::x
(byte) cputsxy::x#0 reg byte x 5501.0
(byte) cputsxy::y
(byte) cputsxy::y#0 reg byte a 5501.0
(void()) cscroll()
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@6
(label) cscroll::@7
(label) cscroll::@return
(void()) cvline((byte) cvline::length)
(label) cvline::@1
(label) cvline::@2
(label) cvline::@3
(label) cvline::@4
(label) cvline::@return
(byte) cvline::i
(byte) cvline::i#1 i zp[1]:7 200002.0
(byte) cvline::i#2 i zp[1]:7 37500.375
(byte) cvline::length
(const byte) cvline::length#0 length = (byte) $17
(byte) cvline::x
(byte) cvline::x#0 x zp[1]:25 10000.181818181818
(byte) cvline::y
(byte) cvline::y#0 y zp[1]:8 20002.0
(byte) cvline::y#1 y zp[1]:8 60000.600000000006
(byte) cvline::y#2 y zp[1]:8 52500.75
(void()) cvlinexy((byte) cvlinexy::x , (byte) cvlinexy::y , (byte) cvlinexy::length)
(label) cvlinexy::@1
(label) cvlinexy::@return
(byte) cvlinexy::length
(byte) cvlinexy::x
(byte) cvlinexy::x#1 reg byte x 202.0
(byte) cvlinexy::x#2 reg byte x 1102.0
(byte) cvlinexy::y
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(byte*~) gotoxy::$5 zp[2]:15 2.00000000002E11
(byte*~) gotoxy::$6 zp[2]:17 2.00000000002E11
(word~) gotoxy::$7 zp[2]:17 1.500000000015E11
(word~) gotoxy::$8 zp[2]:23 2.00000000002E11
(word~) gotoxy::$9 zp[2]:17 2.00000000002E11
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@4
(label) gotoxy::@return
(word) gotoxy::line_offset
(word) gotoxy::line_offset#0 line_offset zp[2]:17 1.00000000001E11
(byte) gotoxy::x
(byte) gotoxy::x#3 reg byte x 10001.0
(byte) gotoxy::x#4 reg byte x 100001.0
(byte) gotoxy::x#5 reg byte x 2002.0
(byte) gotoxy::x#6 reg byte x 3.3333351834166668E10
(byte) gotoxy::x#7 reg byte x 2.00000000002E11
(byte) gotoxy::y
(byte) gotoxy::y#2 reg byte a 20002.0
(byte) gotoxy::y#3 reg byte a 20002.0
(byte) gotoxy::y#4 reg byte a 200002.0
(byte) gotoxy::y#6 reg byte a 6.6666706668333336E10
(byte) gotoxy::y#7 reg byte a 3.3333333333666668E10
(byte()) kbhit()
(label) kbhit::@return
(const nomodify byte*) kbhit::CIA1_PORT_A = (byte*) 56320
(const nomodify byte*) kbhit::CIA1_PORT_B = (byte*) 56321
(byte) kbhit::return
(byte) kbhit::return#0 reg byte a 367.33333333333337
(byte) kbhit::return#2 reg byte a 202.0
(void()) main()
(byte~) main::$3 reg byte a 202.0
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@return
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#2 destination zp[2]:23
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:23 1.00000000000001E14
(byte*) memcpy::dst#2 dst zp[2]:23 1.0003333333333467E14
(byte*) memcpy::dst#4 dst zp[2]:23 2.00000000002E11
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2 source zp[2]:11
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:11 2.00000000000002E14
(byte*) memcpy::src#2 src zp[2]:11 1.0002500000000125E14
(byte*) memcpy::src#4 src zp[2]:11 1.00000000001E11
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 src_end zp[2]:26 1.251250000000025E13
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#1 reg byte x 2.0000000002E10
(byte) memset::c#4 reg byte x 1.4287142857143143E13
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:11 2.00000000000002E14
(byte*) memset::dst#2 dst zp[2]:11 1.3336666666666834E14
(byte*) memset::dst#4 dst zp[2]:11 2.00000000002E11
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:26 1.6683333333333668E13
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:11
(void()) screensize((byte*) screensize::x , (byte*) screensize::y)
(label) screensize::@return
(byte*) screensize::x
(const byte*) screensize::x#0 x = &(volatile byte) XSize
(byte*) screensize::y
(const byte*) screensize::y#0 y = &(volatile byte) YSize
(byte()) scroll((byte) scroll::onoff)
(label) scroll::@return
(byte) scroll::old
(byte) scroll::onoff
(const byte) scroll::onoff#0 onoff = (byte) 0
(byte) scroll::return
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:5 1000001.0
(word) strlen::len#2 len zp[2]:5 500250.75
(word) strlen::return
(word) strlen::return#2 return zp[2]:5 2002.0
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:9 2000002.0
(byte*) strlen::str#1 str zp[2]:9 5501.0
(byte*) strlen::str#2 str zp[2]:9 1003334.6666666667
(byte()) textcolor((byte) textcolor::color)
(label) textcolor::@return
(byte) textcolor::color
(byte) textcolor::old
(byte) textcolor::return

zp[1]:2 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
zp[2]:3 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte a [ cputcxy::y#2 cputcxy::y#0 ]
reg byte y [ cputcxy::c#2 ]
reg byte a [ cputc::c#8 cputc::c#1 cputc::c#0 ]
reg byte x [ cvlinexy::x#2 cvlinexy::x#1 ]
reg byte a [ MakeTeeLine::Y#2 ]
zp[2]:5 [ strlen::len#2 strlen::len#1 strlen::return#2 MakeNiceScreen::$22 clrscr::line_cols#5 clrscr::line_cols#1 ]
reg byte a [ gotoxy::y#7 gotoxy::y#6 gotoxy::y#2 gotoxy::y#3 gotoxy::y#4 ]
reg byte x [ gotoxy::x#7 gotoxy::x#6 gotoxy::x#3 gotoxy::x#4 gotoxy::x#5 ]
zp[1]:7 [ cvline::i#2 cvline::i#1 chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
zp[1]:8 [ cvline::y#2 cvline::y#0 cvline::y#1 chline::i#2 chline::i#1 ]
zp[2]:9 [ cputs::s#2 cputs::s#1 cputs::s#0 cputsxy::s#0 strlen::str#2 strlen::str#1 strlen::str#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[2]:11 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 memset::c#1 ]
zp[1]:13 [ conio_cursor_x ]
zp[1]:14 [ conio_cursor_y ]
zp[2]:15 [ conio_line_text gotoxy::$5 ]
zp[2]:17 [ conio_line_color gotoxy::$6 gotoxy::line_offset#0 gotoxy::$7 gotoxy::$9 ]
zp[1]:19 [ conio_textcolor ]
zp[1]:20 [ conio_scroll_enable ]
zp[1]:21 [ XSize ]
zp[1]:22 [ YSize ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$3 ]
reg byte a [ MakeNiceScreen::$34 ]
reg byte a [ MakeNiceScreen::$23 ]
reg byte x [ MakeNiceScreen::X#1 ]
reg byte x [ cputsxy::x#0 ]
reg byte a [ cputsxy::y#0 ]
reg byte a [ kbhit::return#0 ]
zp[2]:23 [ gotoxy::$8 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
zp[1]:25 [ cvline::x#0 ]
reg byte a [ cputs::c#1 ]
zp[2]:26 [ memset::end#0 memcpy::src_end#0 ]


FINAL ASSEMBLER
Score: 114497

  // File Comments
// Show a nice screen using conio.h
// From CC65 sample "Eine kleine Nachtmusik" by Ullrich von Bassewitz
// https://github.com/cc65/cc65/blob/master/samples/nachtm.c
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__start)
.pc = $80d "Program"
  // Global Constants & labels
  .const LIGHT_BLUE = $e
  // The horizontal line character
  .const CH_HLINE = $40
  // The vertical line character
  .const CH_VLINE = $5d
  // The upper left corner character
  .const CH_ULCORNER = $70
  // The upper right corner character
  .const CH_URCORNER = $6e
  // The lower left corner character
  .const CH_LLCORNER = $6d
  // The lower right corner character
  .const CH_LRCORNER = $7d
  // The left T character
  .const CH_LTEE = $6b
  // The right T character
  .const CH_RTEE = $73
  .const COLOR_GRAY3 = $f
  .const COLOR_BLACK = 0
  .label VIC_MEMORY = $d018
  // Color Ram
  .label COLORRAM = $d800
  // Default address of screen character matrix
  .label DEFAULT_SCREEN = $400
  // The number of bytes on the screen
  // The current cursor x-position
  .label conio_cursor_x = $d
  // The current cursor y-position
  .label conio_cursor_y = $e
  // The current text cursor line start
  .label conio_line_text = $f
  // The current color cursor line start
  .label conio_line_color = $11
  // The current text color
  .label conio_textcolor = $13
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  .label conio_scroll_enable = $14
  .label XSize = $15
  .label YSize = $16
  // __start
__start: {
    // __start::__init1
    // conio_cursor_x = 0
    // [1] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = 0
    // [2] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // conio_line_text = CONIO_SCREEN_TEXT
    // [3] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // conio_line_color = CONIO_SCREEN_COLORS
    // [4] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // conio_textcolor = CONIO_TEXTCOLOR_DEFAULT
    // [5] (byte) conio_textcolor ← (const nomodify byte) LIGHT_BLUE -- vbuz1=vbuc1 
    lda #LIGHT_BLUE
    sta.z conio_textcolor
    // conio_scroll_enable = 1
    // [6] (byte) conio_scroll_enable ← (byte) 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_scroll_enable
    // XSize
    // [7] (volatile byte) XSize ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z XSize
    // YSize
    // [8] (volatile byte) YSize ← (byte) 0 -- vbuz1=vbuc1 
    sta.z YSize
    // [9] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
    // __start::@1
    // [10] call main 
    jsr main
    // __start::@return
    // [11] return 
    rts
}
  // main
main: {
    // *VIC_MEMORY = 0x17
    // [12] *((const nomodify byte*) VIC_MEMORY) ← (byte) $17 -- _deref_pbuc1=vbuc2 
    lda #$17
    sta VIC_MEMORY
    // screensize(&XSize, &YSize)
    // [13] call screensize 
    jsr screensize
    // [14] phi from main to main::@3 [phi:main->main::@3]
    // main::@3
    // MakeNiceScreen()
    // [15] call MakeNiceScreen 
    // [27] phi from main::@3 to MakeNiceScreen [phi:main::@3->MakeNiceScreen]
    jsr MakeNiceScreen
    // [16] phi from main::@3 main::@4 to main::@1 [phi:main::@3/main::@4->main::@1]
    // main::@1
  __b1:
    // kbhit()
    // [17] call kbhit 
    jsr kbhit
    // [18] (byte) kbhit::return#2 ← (byte) kbhit::return#0
    // main::@4
    // [19] (byte~) main::$3 ← (byte) kbhit::return#2
    // while(!kbhit())
    // [20] if((byte) 0==(byte~) main::$3) goto main::@1 -- vbuc1_eq_vbuaa_then_la1 
    cmp #0
    beq __b1
    // [21] phi from main::@4 to main::@2 [phi:main::@4->main::@2]
    // main::@2
    // clrscr ()
    // [22] call clrscr 
    // [76] phi from main::@2 to clrscr [phi:main::@2->clrscr]
    jsr clrscr
    // main::@return
    // }
    // [23] return 
    rts
}
  // screensize
// Return the current screen size.
screensize: {
    .label x = XSize
    .label y = YSize
    // *x = CONIO_WIDTH
    // [24] *((const byte*) screensize::x#0) ← (byte) $28 -- _deref_pbuc1=vbuc2 
    lda #$28
    sta.z x
    // *y = CONIO_HEIGHT
    // [25] *((const byte*) screensize::y#0) ← (byte) $19 -- _deref_pbuc1=vbuc2 
    lda #$19
    sta.z y
    // screensize::@return
    // }
    // [26] return 
    rts
}
  // MakeNiceScreen
MakeNiceScreen: {
    .label __22 = 5
    .label T = 3
    .label I = 2
    // scroll(0)
    // [28] call scroll 
    // disable scrolling
    jsr scroll
    // [29] phi from MakeNiceScreen to MakeNiceScreen::@3 [phi:MakeNiceScreen->MakeNiceScreen::@3]
    // MakeNiceScreen::@3
    // textcolor (COLOR_GRAY3)
    // [30] call textcolor 
    /* Clear the screen hide the cursor, set colors */
    jsr textcolor
    // [31] phi from MakeNiceScreen::@3 to MakeNiceScreen::@4 [phi:MakeNiceScreen::@3->MakeNiceScreen::@4]
    // MakeNiceScreen::@4
    // bordercolor (COLOR_BLACK)
    // [32] call bordercolor 
    jsr bordercolor
    // [33] phi from MakeNiceScreen::@4 to MakeNiceScreen::@5 [phi:MakeNiceScreen::@4->MakeNiceScreen::@5]
    // MakeNiceScreen::@5
    // bgcolor (COLOR_BLACK)
    // [34] call bgcolor 
    jsr bgcolor
    // [35] phi from MakeNiceScreen::@5 to MakeNiceScreen::@6 [phi:MakeNiceScreen::@5->MakeNiceScreen::@6]
    // MakeNiceScreen::@6
    // clrscr ()
    // [36] call clrscr 
    // [76] phi from MakeNiceScreen::@6 to clrscr [phi:MakeNiceScreen::@6->clrscr]
    jsr clrscr
    // [37] phi from MakeNiceScreen::@6 to MakeNiceScreen::@7 [phi:MakeNiceScreen::@6->MakeNiceScreen::@7]
    // MakeNiceScreen::@7
    // cputcxy (0, 0, CH_ULCORNER)
    // [38] call cputcxy 
  /* Top line */
    // [100] phi from MakeNiceScreen::@7 to cputcxy [phi:MakeNiceScreen::@7->cputcxy]
    // [100] phi (byte) cputcxy::c#2 = (const nomodify byte) CH_ULCORNER [phi:MakeNiceScreen::@7->cputcxy#0] -- vbuyy=vbuc1 
    ldy #CH_ULCORNER
    // [100] phi (byte) cputcxy::y#2 = (byte) 0 [phi:MakeNiceScreen::@7->cputcxy#1] -- vbuaa=vbuc1 
    lda #0
    jsr cputcxy
    // MakeNiceScreen::@8
    // chline (XSize - 2)
    // [39] (byte) chline::length#1 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [40] call chline 
    // [106] phi from MakeNiceScreen::@8 to chline [phi:MakeNiceScreen::@8->chline]
    // [106] phi (byte) chline::length#4 = (byte) chline::length#1 [phi:MakeNiceScreen::@8->chline#0] -- register_copy 
    jsr chline
    // [41] phi from MakeNiceScreen::@8 to MakeNiceScreen::@9 [phi:MakeNiceScreen::@8->MakeNiceScreen::@9]
    // MakeNiceScreen::@9
    // cputc (CH_URCORNER)
    // [42] call cputc 
    // [113] phi from MakeNiceScreen::@9 to cputc [phi:MakeNiceScreen::@9->cputc]
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_URCORNER [phi:MakeNiceScreen::@9->cputc#0] -- vbuaa=vbuc1 
    lda #CH_URCORNER
    jsr cputc
    // [43] phi from MakeNiceScreen::@9 to MakeNiceScreen::@10 [phi:MakeNiceScreen::@9->MakeNiceScreen::@10]
    // MakeNiceScreen::@10
    // cvlinexy (0, 1, 23)
    // [44] call cvlinexy 
  /* Left line */
    // [124] phi from MakeNiceScreen::@10 to cvlinexy [phi:MakeNiceScreen::@10->cvlinexy]
    // [124] phi (byte) cvlinexy::x#2 = (byte) 0 [phi:MakeNiceScreen::@10->cvlinexy#0] -- vbuxx=vbuc1 
    ldx #0
    jsr cvlinexy
    // [45] phi from MakeNiceScreen::@10 to MakeNiceScreen::@11 [phi:MakeNiceScreen::@10->MakeNiceScreen::@11]
    // MakeNiceScreen::@11
    // cputc (CH_LLCORNER)
    // [46] call cputc 
  /* Bottom line */
    // [113] phi from MakeNiceScreen::@11 to cputc [phi:MakeNiceScreen::@11->cputc]
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_LLCORNER [phi:MakeNiceScreen::@11->cputc#0] -- vbuaa=vbuc1 
    lda #CH_LLCORNER
    jsr cputc
    // MakeNiceScreen::@12
    // chline (XSize - 2)
    // [47] (byte) chline::length#2 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [48] call chline 
    // [106] phi from MakeNiceScreen::@12 to chline [phi:MakeNiceScreen::@12->chline]
    // [106] phi (byte) chline::length#4 = (byte) chline::length#2 [phi:MakeNiceScreen::@12->chline#0] -- register_copy 
    jsr chline
    // [49] phi from MakeNiceScreen::@12 to MakeNiceScreen::@13 [phi:MakeNiceScreen::@12->MakeNiceScreen::@13]
    // MakeNiceScreen::@13
    // cputc (CH_LRCORNER)
    // [50] call cputc 
    // [113] phi from MakeNiceScreen::@13 to cputc [phi:MakeNiceScreen::@13->cputc]
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_LRCORNER [phi:MakeNiceScreen::@13->cputc#0] -- vbuaa=vbuc1 
    lda #CH_LRCORNER
    jsr cputc
    // MakeNiceScreen::@14
    // cvlinexy (XSize - 1, 1, 23)
    // [51] (byte) cvlinexy::x#1 ← (volatile byte) XSize - (byte) 1 -- vbuxx=vbuz1_minus_1 
    ldx.z XSize
    dex
    // [52] call cvlinexy 
  /* Right line */
    // [124] phi from MakeNiceScreen::@14 to cvlinexy [phi:MakeNiceScreen::@14->cvlinexy]
    // [124] phi (byte) cvlinexy::x#2 = (byte) cvlinexy::x#1 [phi:MakeNiceScreen::@14->cvlinexy#0] -- register_copy 
    jsr cvlinexy
    // [53] phi from MakeNiceScreen::@14 to MakeNiceScreen::@15 [phi:MakeNiceScreen::@14->MakeNiceScreen::@15]
    // MakeNiceScreen::@15
    // MakeTeeLine (7)
    // [54] call MakeTeeLine 
  /* Several divider lines */
    // [130] phi from MakeNiceScreen::@15 to MakeTeeLine [phi:MakeNiceScreen::@15->MakeTeeLine]
    // [130] phi (byte) MakeTeeLine::Y#2 = (byte) 7 [phi:MakeNiceScreen::@15->MakeTeeLine#0] -- vbuaa=vbuc1 
    lda #7
    jsr MakeTeeLine
    // [55] phi from MakeNiceScreen::@15 to MakeNiceScreen::@16 [phi:MakeNiceScreen::@15->MakeNiceScreen::@16]
    // MakeNiceScreen::@16
    // MakeTeeLine (22)
    // [56] call MakeTeeLine 
    // [130] phi from MakeNiceScreen::@16 to MakeTeeLine [phi:MakeNiceScreen::@16->MakeTeeLine]
    // [130] phi (byte) MakeTeeLine::Y#2 = (byte) $16 [phi:MakeNiceScreen::@16->MakeTeeLine#0] -- vbuaa=vbuc1 
    lda #$16
    jsr MakeTeeLine
    // [57] phi from MakeNiceScreen::@16 to MakeNiceScreen::@1 [phi:MakeNiceScreen::@16->MakeNiceScreen::@1]
    // [57] phi (to_nomodify struct $0*) MakeNiceScreen::T#3 = (const struct $0*) MakeNiceScreen::Text [phi:MakeNiceScreen::@16->MakeNiceScreen::@1#0] -- pssz1=pssc1 
    lda #<Text
    sta.z T
    lda #>Text
    sta.z T+1
    // [57] phi (byte) MakeNiceScreen::I#3 = (byte) 0 [phi:MakeNiceScreen::@16->MakeNiceScreen::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z I
  /* Write something into the frame */
    // MakeNiceScreen::@1
  __b1:
    // for (I = 0, T = Text; I < sizeof (Text) / sizeof (TextDesc); ++I)
    // [58] if((byte) MakeNiceScreen::I#3<(byte) $c*(byte) $29/(byte) $29) goto MakeNiceScreen::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z I
    cmp #$c*$29/$29
    bcc __b2
    // MakeNiceScreen::@return
    // }
    // [59] return 
    rts
    // MakeNiceScreen::@2
  __b2:
    // strlen (T->Msg)
    // [60] (byte*) strlen::str#1 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 -- pbuz1=pbuz2_plus_1 
    lda.z T
    clc
    adc #1
    sta.z strlen.str
    lda.z T+1
    adc #0
    sta.z strlen.str+1
    // [61] call strlen 
    // [138] phi from MakeNiceScreen::@2 to strlen [phi:MakeNiceScreen::@2->strlen]
    jsr strlen
    // strlen (T->Msg)
    // [62] (word) strlen::return#2 ← (word) strlen::len#2
    // MakeNiceScreen::@17
    // [63] (word~) MakeNiceScreen::$22 ← (word) strlen::return#2
    // XSize - (char)strlen (T->Msg)
    // [64] (byte~) MakeNiceScreen::$34 ← (byte)(word~) MakeNiceScreen::$22 -- vbuaa=_byte_vwuz1 
    lda.z __22
    // [65] (byte~) MakeNiceScreen::$23 ← (volatile byte) XSize - (byte~) MakeNiceScreen::$34 -- vbuaa=vbuz1_minus_vbuaa 
    eor #$ff
    sec
    adc.z XSize
    // X = (XSize - (char)strlen (T->Msg)) >> 1
    // [66] (byte) MakeNiceScreen::X#1 ← (byte~) MakeNiceScreen::$23 >> (byte) 1 -- vbuxx=vbuaa_ror_1 
    lsr
    tax
    // cputsxy (X, T->Y, T->Msg)
    // [67] (to_nomodify byte*) cputsxy::s#0 ← (byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) 1 -- pbuz1=pbuz2_plus_1 
    lda.z T
    clc
    adc #1
    sta.z cputsxy.s
    lda.z T+1
    adc #0
    sta.z cputsxy.s+1
    // [68] (byte) cputsxy::x#0 ← (byte) MakeNiceScreen::X#1
    // [69] (byte) cputsxy::y#0 ← *((byte*)(to_nomodify struct $0*) MakeNiceScreen::T#3) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (T),y
    // [70] call cputsxy 
    jsr cputsxy
    // MakeNiceScreen::@18
    // ++T;
    // [71] (to_nomodify struct $0*) MakeNiceScreen::T#2 ← (to_nomodify struct $0*) MakeNiceScreen::T#3 + (byte) $29 -- pssz1=pssz1_plus_vbuc1 
    lda #$29
    clc
    adc.z T
    sta.z T
    bcc !+
    inc.z T+1
  !:
    // for (I = 0, T = Text; I < sizeof (Text) / sizeof (TextDesc); ++I)
    // [72] (byte) MakeNiceScreen::I#2 ← ++ (byte) MakeNiceScreen::I#3 -- vbuz1=_inc_vbuz1 
    inc.z I
    // [57] phi from MakeNiceScreen::@18 to MakeNiceScreen::@1 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1]
    // [57] phi (to_nomodify struct $0*) MakeNiceScreen::T#3 = (to_nomodify struct $0*) MakeNiceScreen::T#2 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1#0] -- register_copy 
    // [57] phi (byte) MakeNiceScreen::I#3 = (byte) MakeNiceScreen::I#2 [phi:MakeNiceScreen::@18->MakeNiceScreen::@1#1] -- register_copy 
    jmp __b1
    Text: .byte 2
    .text "Wolfgang Amadeus Mozart"
    .byte 0
    .fill $10, 0
    .byte 4
    .text @"\"Eine kleine Nachtmusik\""
    .byte 0
    .fill $f, 0
    .byte 5
    .text "(KV 525)"
    .byte 0
    .fill $1f, 0
    .byte 9
    .text "Ported to the SID in 1987 by"
    .byte 0
    .fill $b, 0
    .byte $b
    .text "Joachim von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $c
    .text "(joachim@von-bassewitz.de)"
    .byte 0
    .fill $d, 0
    .byte $d
    .text "and"
    .byte 0
    .fill $24, 0
    .byte $e
    .text "Ullrich von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $f
    .text "(ullrich@von-bassewitz.de)"
    .byte 0
    .fill $d, 0
    .byte $12
    .text "C Implementation by"
    .byte 0
    .fill $14, 0
    .byte $13
    .text "Ullrich von Bassewitz"
    .byte 0
    .fill $12, 0
    .byte $17
    .text "Press any key to quit..."
    .byte 0
    .fill $f, 0
}
  // kbhit
// Return true if there's a key waiting, return false if not
kbhit: {
    // CIA#1 Port A: keyboard matrix columns and joystick #2
    .label CIA1_PORT_A = $dc00
    // CIA#1 Port B: keyboard matrix rows and joystick #1.
    .label CIA1_PORT_B = $dc01
    // *CIA1_PORT_A = 0
    // [73] *((const nomodify byte*) kbhit::CIA1_PORT_A) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta CIA1_PORT_A
    // ~*CIA1_PORT_B
    // [74] (byte) kbhit::return#0 ← ~ *((const nomodify byte*) kbhit::CIA1_PORT_B) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    // kbhit::@return
    // }
    // [75] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label line_text = 9
    .label line_cols = 5
    // [77] phi from clrscr to clrscr::@1 [phi:clrscr->clrscr::@1]
    // [77] phi (byte*) clrscr::line_cols#5 = (const nomodify byte*) COLORRAM [phi:clrscr->clrscr::@1#0] -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z line_cols
    lda #>COLORRAM
    sta.z line_cols+1
    // [77] phi (byte*) clrscr::line_text#5 = (const nomodify byte*) DEFAULT_SCREEN [phi:clrscr->clrscr::@1#1] -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z line_text
    lda #>DEFAULT_SCREEN
    sta.z line_text+1
    // [77] phi (byte) clrscr::l#2 = (byte) 0 [phi:clrscr->clrscr::@1#2] -- vbuxx=vbuc1 
    ldx #0
    // clrscr::@1
  __b1:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [78] if((byte) clrscr::l#2<(byte) $19) goto clrscr::@3 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$19
    bcc __b2
    // clrscr::@2
    // conio_cursor_x = 0
    // [79] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y = 0
    // [80] (byte) conio_cursor_y ← (byte) 0 -- vbuz1=vbuc1 
    sta.z conio_cursor_y
    // conio_line_text = CONIO_SCREEN_TEXT
    // [81] (byte*) conio_line_text ← (const nomodify byte*) DEFAULT_SCREEN -- pbuz1=pbuc1 
    lda #<DEFAULT_SCREEN
    sta.z conio_line_text
    lda #>DEFAULT_SCREEN
    sta.z conio_line_text+1
    // conio_line_color = CONIO_SCREEN_COLORS
    // [82] (byte*) conio_line_color ← (const nomodify byte*) COLORRAM -- pbuz1=pbuc1 
    lda #<COLORRAM
    sta.z conio_line_color
    lda #>COLORRAM
    sta.z conio_line_color+1
    // clrscr::@return
    // }
    // [83] return 
    rts
    // [84] phi from clrscr::@1 to clrscr::@3 [phi:clrscr::@1->clrscr::@3]
  __b2:
    // [84] phi (byte) clrscr::c#2 = (byte) 0 [phi:clrscr::@1->clrscr::@3#0] -- vbuyy=vbuc1 
    ldy #0
    // clrscr::@3
  __b3:
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [85] if((byte) clrscr::c#2<(byte) $28) goto clrscr::@4 -- vbuyy_lt_vbuc1_then_la1 
    cpy #$28
    bcc __b4
    // clrscr::@5
    // line_text += CONIO_WIDTH
    // [86] (byte*) clrscr::line_text#1 ← (byte*) clrscr::line_text#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_text
    sta.z line_text
    bcc !+
    inc.z line_text+1
  !:
    // line_cols += CONIO_WIDTH
    // [87] (byte*) clrscr::line_cols#1 ← (byte*) clrscr::line_cols#5 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z line_cols
    sta.z line_cols
    bcc !+
    inc.z line_cols+1
  !:
    // for( char l=0;l<CONIO_HEIGHT; l++ )
    // [88] (byte) clrscr::l#1 ← ++ (byte) clrscr::l#2 -- vbuxx=_inc_vbuxx 
    inx
    // [77] phi from clrscr::@5 to clrscr::@1 [phi:clrscr::@5->clrscr::@1]
    // [77] phi (byte*) clrscr::line_cols#5 = (byte*) clrscr::line_cols#1 [phi:clrscr::@5->clrscr::@1#0] -- register_copy 
    // [77] phi (byte*) clrscr::line_text#5 = (byte*) clrscr::line_text#1 [phi:clrscr::@5->clrscr::@1#1] -- register_copy 
    // [77] phi (byte) clrscr::l#2 = (byte) clrscr::l#1 [phi:clrscr::@5->clrscr::@1#2] -- register_copy 
    jmp __b1
    // clrscr::@4
  __b4:
    // line_text[c] = ' '
    // [89] *((byte*) clrscr::line_text#5 + (byte) clrscr::c#2) ← (byte) ' ' -- pbuz1_derefidx_vbuyy=vbuc1 
    lda #' '
    sta (line_text),y
    // line_cols[c] = conio_textcolor
    // [90] *((byte*) clrscr::line_cols#5 + (byte) clrscr::c#2) ← (byte) conio_textcolor -- pbuz1_derefidx_vbuyy=vbuz2 
    lda.z conio_textcolor
    sta (line_cols),y
    // for( char c=0;c<CONIO_WIDTH; c++ )
    // [91] (byte) clrscr::c#1 ← ++ (byte) clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [84] phi from clrscr::@4 to clrscr::@3 [phi:clrscr::@4->clrscr::@3]
    // [84] phi (byte) clrscr::c#2 = (byte) clrscr::c#1 [phi:clrscr::@4->clrscr::@3#0] -- register_copy 
    jmp __b3
}
  // scroll
// If onoff is 1, scrolling is enabled when outputting past the end of the screen
// If onoff is 1, scrolling is disabled and the cursor instead moves to (0,0)
// The function returns the old scroll setting.
scroll: {
    .const onoff = 0
    // conio_scroll_enable = onoff
    // [92] (byte) conio_scroll_enable ← (const byte) scroll::onoff#0 -- vbuz1=vbuc1 
    lda #onoff
    sta.z conio_scroll_enable
    // scroll::@return
    // }
    // [93] return 
    rts
}
  // textcolor
// Set the color for text output. The old color setting is returned.
textcolor: {
    // conio_textcolor = color
    // [94] (byte) conio_textcolor ← (const nomodify byte) COLOR_GRAY3 -- vbuz1=vbuc1 
    lda #COLOR_GRAY3
    sta.z conio_textcolor
    // textcolor::@return
    // }
    // [95] return 
    rts
}
  // bordercolor
// Set the color for the border. The old color setting is returned.
bordercolor: {
    // The border color register address
    .label CONIO_BORDERCOLOR = $d020
    // *CONIO_BORDERCOLOR = color
    // [96] *((const nomodify byte*) bordercolor::CONIO_BORDERCOLOR) ← (const nomodify byte) COLOR_BLACK -- _deref_pbuc1=vbuc2 
    lda #COLOR_BLACK
    sta CONIO_BORDERCOLOR
    // bordercolor::@return
    // }
    // [97] return 
    rts
}
  // bgcolor
// Set the color for the background. The old color setting is returned.
bgcolor: {
    // The background color register address
    .label CONIO_BGCOLOR = $d021
    // *CONIO_BGCOLOR = color
    // [98] *((const nomodify byte*) bgcolor::CONIO_BGCOLOR) ← (const nomodify byte) COLOR_BLACK -- _deref_pbuc1=vbuc2 
    lda #COLOR_BLACK
    sta CONIO_BGCOLOR
    // bgcolor::@return
    // }
    // [99] return 
    rts
}
  // cputcxy
// Move cursor and output one character
// Same as "gotoxy (x, y); cputc (c);"
// cputcxy(byte register(A) y, byte register(Y) c)
cputcxy: {
    // gotoxy(x, y)
    // [101] (byte) gotoxy::y#2 ← (byte) cputcxy::y#2
    // [102] call gotoxy 
    // [150] phi from cputcxy to gotoxy [phi:cputcxy->gotoxy]
    // [150] phi (byte) gotoxy::x#6 = (byte) 0 [phi:cputcxy->gotoxy#0] -- vbuxx=vbuc1 
    ldx #0
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#2 [phi:cputcxy->gotoxy#1] -- register_copy 
    jsr gotoxy
    // cputcxy::@1
    // cputc(c)
    // [103] (byte) cputc::c#1 ← (byte) cputcxy::c#2 -- vbuaa=vbuyy 
    tya
    // [104] call cputc 
    // [113] phi from cputcxy::@1 to cputc [phi:cputcxy::@1->cputc]
    // [113] phi (byte) cputc::c#8 = (byte) cputc::c#1 [phi:cputcxy::@1->cputc#0] -- register_copy 
    jsr cputc
    // cputcxy::@return
    // }
    // [105] return 
    rts
}
  // chline
// Output a horizontal line with the given length starting at the current cursor position.
// chline(byte zp(7) length)
chline: {
    .label i = 8
    .label length = 7
    // [107] phi from chline to chline::@1 [phi:chline->chline::@1]
    // [107] phi (byte) chline::i#2 = (byte) 0 [phi:chline->chline::@1#0] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // chline::@1
  __b1:
    // for(char i=0;i<length;i++)
    // [108] if((byte) chline::i#2<(byte) chline::length#4) goto chline::@2 -- vbuz1_lt_vbuz2_then_la1 
    lda.z i
    cmp.z length
    bcc __b2
    // chline::@return
    // }
    // [109] return 
    rts
    // [110] phi from chline::@1 to chline::@2 [phi:chline::@1->chline::@2]
    // chline::@2
  __b2:
    // cputc(CH_HLINE)
    // [111] call cputc 
    // [113] phi from chline::@2 to cputc [phi:chline::@2->cputc]
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_HLINE [phi:chline::@2->cputc#0] -- vbuaa=vbuc1 
    lda #CH_HLINE
    jsr cputc
    // chline::@3
    // for(char i=0;i<length;i++)
    // [112] (byte) chline::i#1 ← ++ (byte) chline::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [107] phi from chline::@3 to chline::@1 [phi:chline::@3->chline::@1]
    // [107] phi (byte) chline::i#2 = (byte) chline::i#1 [phi:chline::@3->chline::@1#0] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// cputc(byte register(A) c)
cputc: {
    // if(c=='\n')
    // [114] if((byte) cputc::c#8==(byte) ' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1
    // cputc::@2
    // conio_line_text[conio_cursor_x] = c
    // [115] *((byte*) conio_line_text + (byte) conio_cursor_x) ← (byte) cputc::c#8 -- pbuz1_derefidx_vbuz2=vbuaa 
    ldy.z conio_cursor_x
    sta (conio_line_text),y
    // conio_line_color[conio_cursor_x] = conio_textcolor
    // [116] *((byte*) conio_line_color + (byte) conio_cursor_x) ← (byte) conio_textcolor -- pbuz1_derefidx_vbuz2=vbuz3 
    lda.z conio_textcolor
    sta (conio_line_color),y
    // if(++conio_cursor_x==CONIO_WIDTH)
    // [117] (byte) conio_cursor_x ← ++ (byte) conio_cursor_x -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [118] if((byte) conio_cursor_x!=(byte) $28) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$28
    cmp.z conio_cursor_x
    bne __breturn
    // [119] phi from cputc::@2 to cputc::@3 [phi:cputc::@2->cputc::@3]
    // cputc::@3
    // cputln()
    // [120] call cputln 
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [121] return 
    rts
    // [122] phi from cputc to cputc::@1 [phi:cputc->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [123] call cputln 
    jsr cputln
    rts
}
  // cvlinexy
// Move cursor and output a vertical line with the given length
// Same as "gotoxy (x, y); cvline (length);"
// cvlinexy(byte register(X) x)
cvlinexy: {
    // gotoxy(x,y)
    // [125] (byte) gotoxy::x#5 ← (byte) cvlinexy::x#2
    // [126] call gotoxy 
    // [150] phi from cvlinexy to gotoxy [phi:cvlinexy->gotoxy]
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#5 [phi:cvlinexy->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) 1 [phi:cvlinexy->gotoxy#1] -- vbuaa=vbuc1 
    lda #1
    jsr gotoxy
    // [127] phi from cvlinexy to cvlinexy::@1 [phi:cvlinexy->cvlinexy::@1]
    // cvlinexy::@1
    // cvline(length)
    // [128] call cvline 
    jsr cvline
    // cvlinexy::@return
    // }
    // [129] return 
    rts
}
  // MakeTeeLine
// MakeTeeLine(byte register(A) Y)
MakeTeeLine: {
    // cputcxy (0, Y, CH_LTEE)
    // [131] (byte) cputcxy::y#0 ← (byte) MakeTeeLine::Y#2
    // [132] call cputcxy 
    // [100] phi from MakeTeeLine to cputcxy [phi:MakeTeeLine->cputcxy]
    // [100] phi (byte) cputcxy::c#2 = (const nomodify byte) CH_LTEE [phi:MakeTeeLine->cputcxy#0] -- vbuyy=vbuc1 
    ldy #CH_LTEE
    // [100] phi (byte) cputcxy::y#2 = (byte) cputcxy::y#0 [phi:MakeTeeLine->cputcxy#1] -- register_copy 
    jsr cputcxy
    // MakeTeeLine::@1
    // chline (XSize - 2)
    // [133] (byte) chline::length#0 ← (volatile byte) XSize - (byte) 2 -- vbuz1=vbuz2_minus_2 
    lda.z XSize
    sec
    sbc #2
    sta.z chline.length
    // [134] call chline 
    // [106] phi from MakeTeeLine::@1 to chline [phi:MakeTeeLine::@1->chline]
    // [106] phi (byte) chline::length#4 = (byte) chline::length#0 [phi:MakeTeeLine::@1->chline#0] -- register_copy 
    jsr chline
    // [135] phi from MakeTeeLine::@1 to MakeTeeLine::@2 [phi:MakeTeeLine::@1->MakeTeeLine::@2]
    // MakeTeeLine::@2
    // cputc (CH_RTEE)
    // [136] call cputc 
    // [113] phi from MakeTeeLine::@2 to cputc [phi:MakeTeeLine::@2->cputc]
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_RTEE [phi:MakeTeeLine::@2->cputc#0] -- vbuaa=vbuc1 
    lda #CH_RTEE
    jsr cputc
    // MakeTeeLine::@return
    // }
    // [137] return 
    rts
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// strlen(byte* zp(9) str)
strlen: {
    .label len = 5
    .label str = 9
    .label return = 5
    // [139] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
    // [139] phi (word) strlen::len#2 = (word) 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    sta.z len+1
    // [139] phi (byte*) strlen::str#2 = (byte*) strlen::str#1 [phi:strlen->strlen::@1#1] -- register_copy 
    // strlen::@1
  __b1:
    // while(*str)
    // [140] if((byte) 0!=*((byte*) strlen::str#2)) goto strlen::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // strlen::@return
    // }
    // [141] return 
    rts
    // strlen::@2
  __b2:
    // len++;
    // [142] (word) strlen::len#1 ← ++ (word) strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // str++;
    // [143] (byte*) strlen::str#0 ← ++ (byte*) strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [139] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
    // [139] phi (word) strlen::len#2 = (word) strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [139] phi (byte*) strlen::str#2 = (byte*) strlen::str#0 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // cputsxy
// Move cursor and output a NUL-terminated string
// Same as "gotoxy (x, y); puts (s);"
// cputsxy(byte register(X) x, byte register(A) y, byte* zp(9) s)
cputsxy: {
    .label s = 9
    // gotoxy(x, y)
    // [144] (byte) gotoxy::x#3 ← (byte) cputsxy::x#0
    // [145] (byte) gotoxy::y#3 ← (byte) cputsxy::y#0
    // [146] call gotoxy 
    // [150] phi from cputsxy to gotoxy [phi:cputsxy->gotoxy]
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#3 [phi:cputsxy->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#3 [phi:cputsxy->gotoxy#1] -- register_copy 
    jsr gotoxy
    // cputsxy::@1
    // cputs(s)
    // [147] (to_nomodify byte*) cputs::s#1 ← (to_nomodify byte*) cputsxy::s#0
    // [148] call cputs 
    // [186] phi from cputsxy::@1 to cputs [phi:cputsxy::@1->cputs]
    jsr cputs
    // cputsxy::@return
    // }
    // [149] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte register(X) x, byte register(A) y)
gotoxy: {
    .label __5 = $f
    .label __6 = $11
    .label __7 = $11
    .label line_offset = $11
    .label __8 = $17
    .label __9 = $11
    // if(y>CONIO_HEIGHT)
    // [151] if((byte) gotoxy::y#6<(byte) $19+(byte) 1) goto gotoxy::@3 -- vbuaa_lt_vbuc1_then_la1 
    cmp #$19+1
    bcc __b1
    // [153] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
    // [153] phi (byte) gotoxy::y#7 = (byte) 0 [phi:gotoxy->gotoxy::@1#0] -- vbuaa=vbuc1 
    lda #0
    // [152] phi from gotoxy to gotoxy::@3 [phi:gotoxy->gotoxy::@3]
    // gotoxy::@3
    // [153] phi from gotoxy::@3 to gotoxy::@1 [phi:gotoxy::@3->gotoxy::@1]
    // [153] phi (byte) gotoxy::y#7 = (byte) gotoxy::y#6 [phi:gotoxy::@3->gotoxy::@1#0] -- register_copy 
    // gotoxy::@1
  __b1:
    // if(x>=CONIO_WIDTH)
    // [154] if((byte) gotoxy::x#6<(byte) $28) goto gotoxy::@4 -- vbuxx_lt_vbuc1_then_la1 
    cpx #$28
    bcc __b2
    // [156] phi from gotoxy::@1 to gotoxy::@2 [phi:gotoxy::@1->gotoxy::@2]
    // [156] phi (byte) gotoxy::x#7 = (byte) 0 [phi:gotoxy::@1->gotoxy::@2#0] -- vbuxx=vbuc1 
    ldx #0
    // [155] phi from gotoxy::@1 to gotoxy::@4 [phi:gotoxy::@1->gotoxy::@4]
    // gotoxy::@4
    // [156] phi from gotoxy::@4 to gotoxy::@2 [phi:gotoxy::@4->gotoxy::@2]
    // [156] phi (byte) gotoxy::x#7 = (byte) gotoxy::x#6 [phi:gotoxy::@4->gotoxy::@2#0] -- register_copy 
    // gotoxy::@2
  __b2:
    // conio_cursor_x = x
    // [157] (byte) conio_cursor_x ← (byte) gotoxy::x#7 -- vbuz1=vbuxx 
    stx.z conio_cursor_x
    // conio_cursor_y = y
    // [158] (byte) conio_cursor_y ← (byte) gotoxy::y#7 -- vbuz1=vbuaa 
    sta.z conio_cursor_y
    // (unsigned int)y*CONIO_WIDTH
    // [159] (word~) gotoxy::$7 ← (word)(byte) gotoxy::y#7 -- vwuz1=_word_vbuaa 
    sta.z __7
    lda #0
    sta.z __7+1
    // line_offset = (unsigned int)y*CONIO_WIDTH
    // [160] (word~) gotoxy::$8 ← (word~) gotoxy::$7 << (byte) 2 -- vwuz1=vwuz2_rol_2 
    lda.z __7
    asl
    sta.z __8
    lda.z __7+1
    rol
    sta.z __8+1
    asl.z __8
    rol.z __8+1
    // [161] (word~) gotoxy::$9 ← (word~) gotoxy::$8 + (word~) gotoxy::$7 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __9
    clc
    adc.z __8
    sta.z __9
    lda.z __9+1
    adc.z __8+1
    sta.z __9+1
    // [162] (word) gotoxy::line_offset#0 ← (word~) gotoxy::$9 << (byte) 3 -- vwuz1=vwuz1_rol_3 
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    asl.z line_offset
    rol.z line_offset+1
    // CONIO_SCREEN_TEXT + line_offset
    // [163] (byte*~) gotoxy::$5 ← (const nomodify byte*) DEFAULT_SCREEN + (word) gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z line_offset
    clc
    adc #<DEFAULT_SCREEN
    sta.z __5
    lda.z line_offset+1
    adc #>DEFAULT_SCREEN
    sta.z __5+1
    // conio_line_text = CONIO_SCREEN_TEXT + line_offset
    // [164] (byte*) conio_line_text ← (byte*~) gotoxy::$5
    // CONIO_SCREEN_COLORS + line_offset
    // [165] (byte*~) gotoxy::$6 ← (const nomodify byte*) COLORRAM + (word) gotoxy::line_offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z __6
    adc #<COLORRAM
    sta.z __6
    lda.z __6+1
    adc #>COLORRAM
    sta.z __6+1
    // conio_line_color = CONIO_SCREEN_COLORS + line_offset
    // [166] (byte*) conio_line_color ← (byte*~) gotoxy::$6
    // gotoxy::@return
    // }
    // [167] return 
    rts
}
  // cputln
// Print a newline
cputln: {
    // conio_line_text +=  CONIO_WIDTH
    // [168] (byte*) conio_line_text ← (byte*) conio_line_text + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_text
    sta.z conio_line_text
    bcc !+
    inc.z conio_line_text+1
  !:
    // conio_line_color += CONIO_WIDTH
    // [169] (byte*) conio_line_color ← (byte*) conio_line_color + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z conio_line_color
    sta.z conio_line_color
    bcc !+
    inc.z conio_line_color+1
  !:
    // conio_cursor_x = 0
    // [170] (byte) conio_cursor_x ← (byte) 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // conio_cursor_y++;
    // [171] (byte) conio_cursor_y ← ++ (byte) conio_cursor_y -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // cscroll()
    // [172] call cscroll 
    jsr cscroll
    // cputln::@return
    // }
    // [173] return 
    rts
}
  // cvline
// Output a vertical line with the given length at the current cursor position.
cvline: {
    .const length = $17
    .label x = $19
    .label y = 8
    .label i = 7
    // x = conio_cursor_x
    // [174] (byte) cvline::x#0 ← (byte) conio_cursor_x -- vbuz1=vbuz2 
    lda.z conio_cursor_x
    sta.z x
    // y = conio_cursor_y
    // [175] (byte) cvline::y#0 ← (byte) conio_cursor_y -- vbuz1=vbuz2 
    lda.z conio_cursor_y
    sta.z y
    // [176] phi from cvline to cvline::@1 [phi:cvline->cvline::@1]
    // [176] phi (byte) cvline::y#2 = (byte) cvline::y#0 [phi:cvline->cvline::@1#0] -- register_copy 
    // [176] phi (byte) cvline::i#2 = (byte) 0 [phi:cvline->cvline::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z i
    // cvline::@1
  __b1:
    // for(char i=0;i<length;i++)
    // [177] if((byte) cvline::i#2<(const byte) cvline::length#0) goto cvline::@2 -- vbuz1_lt_vbuc1_then_la1 
    lda.z i
    cmp #length
    bcc __b2
    // cvline::@return
    // }
    // [178] return 
    rts
    // [179] phi from cvline::@1 to cvline::@2 [phi:cvline::@1->cvline::@2]
    // cvline::@2
  __b2:
    // cputc(CH_VLINE)
    // [180] call cputc 
    // [113] phi from cvline::@2 to cputc [phi:cvline::@2->cputc]
    // [113] phi (byte) cputc::c#8 = (const nomodify byte) CH_VLINE [phi:cvline::@2->cputc#0] -- vbuaa=vbuc1 
    lda #CH_VLINE
    jsr cputc
    // cvline::@3
    // gotoxy(x, ++y);
    // [181] (byte) cvline::y#1 ← ++ (byte) cvline::y#2 -- vbuz1=_inc_vbuz1 
    inc.z y
    // gotoxy(x, ++y)
    // [182] (byte) gotoxy::x#4 ← (byte) cvline::x#0 -- vbuxx=vbuz1 
    ldx.z x
    // [183] (byte) gotoxy::y#4 ← (byte) cvline::y#1 -- vbuaa=vbuz1 
    lda.z y
    // [184] call gotoxy 
    // [150] phi from cvline::@3 to gotoxy [phi:cvline::@3->gotoxy]
    // [150] phi (byte) gotoxy::x#6 = (byte) gotoxy::x#4 [phi:cvline::@3->gotoxy#0] -- register_copy 
    // [150] phi (byte) gotoxy::y#6 = (byte) gotoxy::y#4 [phi:cvline::@3->gotoxy#1] -- register_copy 
    jsr gotoxy
    // cvline::@4
    // for(char i=0;i<length;i++)
    // [185] (byte) cvline::i#1 ← ++ (byte) cvline::i#2 -- vbuz1=_inc_vbuz1 
    inc.z i
    // [176] phi from cvline::@4 to cvline::@1 [phi:cvline::@4->cvline::@1]
    // [176] phi (byte) cvline::y#2 = (byte) cvline::y#1 [phi:cvline::@4->cvline::@1#0] -- register_copy 
    // [176] phi (byte) cvline::i#2 = (byte) cvline::i#1 [phi:cvline::@4->cvline::@1#1] -- register_copy 
    jmp __b1
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp(9) s)
cputs: {
    .label s = 9
    // [187] phi from cputs cputs::@2 to cputs::@1 [phi:cputs/cputs::@2->cputs::@1]
    // [187] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#1 [phi:cputs/cputs::@2->cputs::@1#0] -- register_copy 
    // cputs::@1
  __b1:
    // while(c=*s++)
    // [188] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [189] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [190] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // cputs::@return
    // }
    // [191] return 
    rts
    // cputs::@2
  __b2:
    // cputc(c)
    // [192] (byte) cputc::c#0 ← (byte) cputs::c#1
    // [193] call cputc 
    // [113] phi from cputs::@2 to cputc [phi:cputs::@2->cputc]
    // [113] phi (byte) cputc::c#8 = (byte) cputc::c#0 [phi:cputs::@2->cputc#0] -- register_copy 
    jsr cputc
    jmp __b1
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y==CONIO_HEIGHT)
    // [194] if((byte) conio_cursor_y!=(byte) $19) goto cscroll::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #$19
    cmp.z conio_cursor_y
    bne __breturn
    // cscroll::@1
    // if(conio_scroll_enable)
    // [195] if((byte) 0!=(byte) conio_scroll_enable) goto cscroll::@3 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z conio_scroll_enable
    bne __b3
    // [196] phi from cscroll::@1 to cscroll::@2 [phi:cscroll::@1->cscroll::@2]
    // cscroll::@2
    // gotoxy(0,0)
    // [197] call gotoxy 
    // [150] phi from cscroll::@2 to gotoxy [phi:cscroll::@2->gotoxy]
    // [150] phi (byte) gotoxy::x#6 = (byte) 0 [phi:cscroll::@2->gotoxy#0] -- vbuxx=vbuc1 
    tax
    // [150] phi (byte) gotoxy::y#6 = (byte) 0 [phi:cscroll::@2->gotoxy#1] -- vbuaa=vbuc1 
    txa
    jsr gotoxy
    // cscroll::@return
  __breturn:
    // }
    // [198] return 
    rts
    // [199] phi from cscroll::@1 to cscroll::@3 [phi:cscroll::@1->cscroll::@3]
    // cscroll::@3
  __b3:
    // memcpy(CONIO_SCREEN_TEXT, CONIO_SCREEN_TEXT+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [200] call memcpy 
    // [210] phi from cscroll::@3 to memcpy [phi:cscroll::@3->memcpy]
    // [210] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN [phi:cscroll::@3->memcpy#0] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN
    sta.z memcpy.destination
    lda #>DEFAULT_SCREEN
    sta.z memcpy.destination+1
    // [210] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(byte) $28 [phi:cscroll::@3->memcpy#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$28
    sta.z memcpy.source
    lda #>DEFAULT_SCREEN+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [201] phi from cscroll::@3 to cscroll::@4 [phi:cscroll::@3->cscroll::@4]
    // cscroll::@4
    // memcpy(CONIO_SCREEN_COLORS, CONIO_SCREEN_COLORS+CONIO_WIDTH, CONIO_BYTES-CONIO_WIDTH)
    // [202] call memcpy 
    // [210] phi from cscroll::@4 to memcpy [phi:cscroll::@4->memcpy]
    // [210] phi (void*) memcpy::destination#2 = (void*)(const nomodify byte*) COLORRAM [phi:cscroll::@4->memcpy#0] -- pvoz1=pvoc1 
    lda #<COLORRAM
    sta.z memcpy.destination
    lda #>COLORRAM
    sta.z memcpy.destination+1
    // [210] phi (void*) memcpy::source#2 = (void*)(const nomodify byte*) COLORRAM+(byte) $28 [phi:cscroll::@4->memcpy#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$28
    sta.z memcpy.source
    lda #>COLORRAM+$28
    sta.z memcpy.source+1
    jsr memcpy
    // [203] phi from cscroll::@4 to cscroll::@5 [phi:cscroll::@4->cscroll::@5]
    // cscroll::@5
    // memset(CONIO_SCREEN_TEXT+CONIO_BYTES-CONIO_WIDTH, ' ', CONIO_WIDTH)
    // [204] call memset 
    // [220] phi from cscroll::@5 to memset [phi:cscroll::@5->memset]
    // [220] phi (byte) memset::c#4 = (byte) ' ' [phi:cscroll::@5->memset#0] -- vbuxx=vbuc1 
    ldx #' '
    // [220] phi (void*) memset::str#3 = (void*)(const nomodify byte*) DEFAULT_SCREEN+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@5->memset#1] -- pvoz1=pvoc1 
    lda #<DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str
    lda #>DEFAULT_SCREEN+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // cscroll::@6
    // memset(CONIO_SCREEN_COLORS+CONIO_BYTES-CONIO_WIDTH, conio_textcolor, CONIO_WIDTH)
    // [205] (byte) memset::c#1 ← (byte) conio_textcolor -- vbuxx=vbuz1 
    ldx.z conio_textcolor
    // [206] call memset 
    // [220] phi from cscroll::@6 to memset [phi:cscroll::@6->memset]
    // [220] phi (byte) memset::c#4 = (byte) memset::c#1 [phi:cscroll::@6->memset#0] -- register_copy 
    // [220] phi (void*) memset::str#3 = (void*)(const nomodify byte*) COLORRAM+(word)(number) $19*(number) $28-(byte) $28 [phi:cscroll::@6->memset#1] -- pvoz1=pvoc1 
    lda #<COLORRAM+$19*$28-$28
    sta.z memset.str
    lda #>COLORRAM+$19*$28-$28
    sta.z memset.str+1
    jsr memset
    // cscroll::@7
    // conio_line_text -= CONIO_WIDTH
    // [207] (byte*) conio_line_text ← (byte*) conio_line_text - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_text
    sbc #$28
    sta.z conio_line_text
    lda.z conio_line_text+1
    sbc #0
    sta.z conio_line_text+1
    // conio_line_color -= CONIO_WIDTH
    // [208] (byte*) conio_line_color ← (byte*) conio_line_color - (byte) $28 -- pbuz1=pbuz1_minus_vbuc1 
    sec
    lda.z conio_line_color
    sbc #$28
    sta.z conio_line_color
    lda.z conio_line_color+1
    sbc #0
    sta.z conio_line_color+1
    // conio_cursor_y--;
    // [209] (byte) conio_cursor_y ← -- (byte) conio_cursor_y -- vbuz1=_dec_vbuz1 
    dec.z conio_cursor_y
    rts
}
  // memcpy
// Copy block of memory (forwards)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination.
// memcpy(void* zp($17) destination, void* zp($b) source)
memcpy: {
    .label src_end = $1a
    .label dst = $17
    .label src = $b
    .label source = $b
    .label destination = $17
    // src_end = (char*)source+num
    // [211] (byte*) memcpy::src_end#0 ← (byte*)(void*) memcpy::source#2 + (word)(number) $19*(number) $28-(number) $28 -- pbuz1=pbuz2_plus_vwuc1 
    lda.z source
    clc
    adc #<$19*$28-$28
    sta.z src_end
    lda.z source+1
    adc #>$19*$28-$28
    sta.z src_end+1
    // [212] (byte*) memcpy::src#4 ← (byte*)(void*) memcpy::source#2
    // [213] (byte*) memcpy::dst#4 ← (byte*)(void*) memcpy::destination#2
    // [214] phi from memcpy memcpy::@2 to memcpy::@1 [phi:memcpy/memcpy::@2->memcpy::@1]
    // [214] phi (byte*) memcpy::dst#2 = (byte*) memcpy::dst#4 [phi:memcpy/memcpy::@2->memcpy::@1#0] -- register_copy 
    // [214] phi (byte*) memcpy::src#2 = (byte*) memcpy::src#4 [phi:memcpy/memcpy::@2->memcpy::@1#1] -- register_copy 
    // memcpy::@1
  __b1:
    // while(src!=src_end)
    // [215] if((byte*) memcpy::src#2!=(byte*) memcpy::src_end#0) goto memcpy::@2 -- pbuz1_neq_pbuz2_then_la1 
    lda.z src+1
    cmp.z src_end+1
    bne __b2
    lda.z src
    cmp.z src_end
    bne __b2
    // memcpy::@return
    // }
    // [216] return 
    rts
    // memcpy::@2
  __b2:
    // *dst++ = *src++
    // [217] *((byte*) memcpy::dst#2) ← *((byte*) memcpy::src#2) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (src),y
    sta (dst),y
    // *dst++ = *src++;
    // [218] (byte*) memcpy::dst#1 ← ++ (byte*) memcpy::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [219] (byte*) memcpy::src#1 ← ++ (byte*) memcpy::src#2 -- pbuz1=_inc_pbuz1 
    inc.z src
    bne !+
    inc.z src+1
  !:
    jmp __b1
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
// memset(void* zp($b) str, byte register(X) c)
memset: {
    .label end = $1a
    .label dst = $b
    .label str = $b
    // memset::@1
    // end = (char*)str + num
    // [221] (byte*) memset::end#0 ← (byte*)(void*) memset::str#3 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z str
    sta.z end
    lda #0
    adc.z str+1
    sta.z end+1
    // [222] (byte*) memset::dst#4 ← (byte*)(void*) memset::str#3
    // [223] phi from memset::@1 memset::@3 to memset::@2 [phi:memset::@1/memset::@3->memset::@2]
    // [223] phi (byte*) memset::dst#2 = (byte*) memset::dst#4 [phi:memset::@1/memset::@3->memset::@2#0] -- register_copy 
    // memset::@2
  __b2:
    // for(char* dst = str; dst!=end; dst++)
    // [224] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@3 -- pbuz1_neq_pbuz2_then_la1 
    lda.z dst+1
    cmp.z end+1
    bne __b3
    lda.z dst
    cmp.z end
    bne __b3
    // memset::@return
    // }
    // [225] return 
    rts
    // memset::@3
  __b3:
    // *dst = c
    // [226] *((byte*) memset::dst#2) ← (byte) memset::c#4 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [227] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    jmp __b2
}
  // File Data

