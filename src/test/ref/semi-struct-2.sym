const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*) 56320
const nomodify byte KEY_SPACE = $3c
const nomodify byte MAX_FILES = $90
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const nomodify byte SIZEOF_ENTRY = $12
const byte* files[(word)MAX_FILES*SIZEOF_ENTRY]  = { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
void initEntry(byte* initEntry::entry , byte initEntry::n)
word~ initEntry::$1 zp[2]:8 11.0
byte~ initEntry::$11 reg byte a 22.0
byte~ initEntry::$13 reg byte a 22.0
byte~ initEntry::$15 reg byte a 22.0
word~ initEntry::$17 zp[2]:14 22.0
byte~ initEntry::$19 reg byte a 22.0
byte~ initEntry::$21 reg byte a 22.0
byte~ initEntry::$23 reg byte a 22.0
byte~ initEntry::$25 reg byte a 22.0
word~ initEntry::$3 zp[2]:16 11.0
word~ initEntry::$5 zp[2]:10 22.0
word~ initEntry::$7 zp[2]:12 11.0
byte~ initEntry::$9 reg byte a 22.0
byte* initEntry::entry
byte* initEntry::entry#0 entry zp[2]:4 4.0
byte* initEntry::entry#1 entry zp[2]:4 4.0
byte* initEntry::entry#10 entry zp[2]:4 2.3589743589743586
byte* initEntry::entryBAddrHi1_entry
byte* initEntry::entryBAddrHi1_return
byte* initEntry::entryBAddrLo1_entry
byte* initEntry::entryBAddrLo1_return
byte* initEntry::entryBError1_entry
byte* initEntry::entryBError1_return
byte* initEntry::entryBFlag1_entry
byte* initEntry::entryBFlag1_return
byte* initEntry::entryBufDisk1_entry
byte** initEntry::entryBufDisk1_return
byte* initEntry::entryBufEdit1_entry
byte** initEntry::entryBufEdit1_return
byte* initEntry::entrySLastLink1_entry
byte* initEntry::entrySLastLink1_return
byte* initEntry::entryTHi1_entry
byte* initEntry::entryTHi1_return
byte* initEntry::entryTLastLink1_entry
byte* initEntry::entryTLastLink1_return
byte* initEntry::entryTLo1_entry
byte* initEntry::entryTLo1_return
byte* initEntry::entryTsLen1_entry
word* initEntry::entryTsLen1_return
byte* initEntry::entryTsOrder1_entry
word** initEntry::entryTsOrder1_return
byte* initEntry::entryUCross1_entry
word* initEntry::entryUCross1_return
byte initEntry::n
byte initEntry::n#10 reg byte x 3.7631578947368434
void keyboard_init()
byte keyboard_key_pressed(byte keyboard_key_pressed::key)
byte~ keyboard_key_pressed::$2 reg byte a 202.0
byte keyboard_key_pressed::colidx
const byte keyboard_key_pressed::colidx#0 colidx = KEY_SPACE&7
byte keyboard_key_pressed::key
byte keyboard_key_pressed::return
byte keyboard_key_pressed::return#0 reg byte a 30.75
byte keyboard_key_pressed::return#2 reg byte a 22.0
byte keyboard_key_pressed::return#3 reg byte a 22.0
byte keyboard_key_pressed::rowidx
const byte keyboard_key_pressed::rowidx#0 rowidx = KEY_SPACE>>3
const byte* keyboard_matrix_col_bitmask[8]  = { 1, 2, 4, 8, $10, $20, $40, $80 }
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0 reg byte a 367.33333333333337
byte keyboard_matrix_read::return#2 reg byte a 202.0
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::rowid
const byte* keyboard_matrix_row_bitmask[8]  = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
void main()
byte~ main::$20 reg byte a 22.0
byte~ main::$22 reg byte a 22.0
byte* main::entry1
byte* main::entry1#0 entry1 zp[2]:6 0.3157894736842105
byte* main::entry2
byte* main::entry2#0 entry2 zp[2]:2 0.17142857142857143
word~ main::fileEntry1_$0 zp[2]:2 4.0
byte main::fileEntry1_idx
const byte main::fileEntry1_idx#0 fileEntry1_idx = 1
byte* main::fileEntry1_return
word~ main::fileEntry2_$0 zp[2]:2 4.0
byte main::fileEntry2_idx
const byte main::fileEntry2_idx#0 fileEntry2_idx = 2
byte* main::fileEntry2_return
const byte* main::str[$e]  = "** entry 1 **"
const byte* main::str1[$10]  = "- press space -"
const byte* main::str2[$e]  = "** entry 2 **"
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
const byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:10 2002.0
byte* memset::dst#2 dst zp[2]:10 1334.6666666666667
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)print_screen#0
word mul8u(byte mul8u::a , byte mul8u::b)
byte~ mul8u::$1 reg byte a 202.0
byte mul8u::a
byte mul8u::a#0 reg byte x 101.0
byte mul8u::a#3 reg byte x 69.16666666666666
byte mul8u::a#6 reg byte x 11.0
byte mul8u::b
word mul8u::mb
word mul8u::mb#1 mb zp[2]:4 202.0
word mul8u::mb#2 mb zp[2]:4 43.285714285714285
word mul8u::res
word mul8u::res#1 res zp[2]:2 202.0
word mul8u::res#2 res zp[2]:2 43.85714285714286
word mul8u::res#6 res zp[2]:2 101.0
word mul8u::return
word mul8u::return#2 return zp[2]:2 4.0
word mul8u::return#3 return zp[2]:2 4.0
void printEntry(byte* printEntry::entry)
byte* printEntry::entry
byte* printEntry::entry#0 entry zp[2]:6 4.0
byte* printEntry::entry#1 entry zp[2]:6 4.0
byte* printEntry::entry#10 entry zp[2]:6 1.0454545454545454
byte* printEntry::entryBAddrHi1_entry
byte* printEntry::entryBAddrHi1_return
byte* printEntry::entryBAddrLo1_entry
byte* printEntry::entryBAddrLo1_return
byte* printEntry::entryBError1_entry
byte* printEntry::entryBError1_return
byte* printEntry::entryBFlag1_entry
byte* printEntry::entryBFlag1_return
byte* printEntry::entryBufDisk1_entry
byte** printEntry::entryBufDisk1_return
byte* printEntry::entryBufEdit1_entry
byte** printEntry::entryBufEdit1_return
byte* printEntry::entrySLastLink1_entry
byte* printEntry::entrySLastLink1_return
byte* printEntry::entryTHi1_entry
byte* printEntry::entryTHi1_return
byte* printEntry::entryTLastLink1_entry
byte* printEntry::entryTLastLink1_return
byte* printEntry::entryTLo1_entry
byte* printEntry::entryTLo1_return
byte* printEntry::entryTsLen1_entry
word* printEntry::entryTsLen1_return
byte* printEntry::entryTsOrder1_entry
word** printEntry::entryTsOrder1_return
byte* printEntry::entryUCross1_entry
word* printEntry::entryUCross1_return
const byte* printEntry::str[$b]  = "bufdisk   "
const byte* printEntry::str1[$b]  = "bufedit   "
const byte* printEntry::str10[$d]  = "baddrhi     "
const byte* printEntry::str11[$d]  = "thi         "
const byte* printEntry::str12[$d]  = "tlo         "
const byte* printEntry::str2[$b]  = "tslen     "
const byte* printEntry::str3[$b]  = "tsorder   "
const byte* printEntry::str4[$d]  = "tlastlink   "
const byte* printEntry::str5[$d]  = "slastlink   "
const byte* printEntry::str6[$d]  = "bflag       "
const byte* printEntry::str7[$d]  = "berror      "
const byte* printEntry::str8[$b]  = "ucross    "
const byte* printEntry::str9[$d]  = "baddrlo     "
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 2002.0
byte print_char::ch#1 reg byte a 2002.0
byte print_char::ch#2 reg byte a 2002.0
byte print_char::ch#3 reg byte a 13004.0
byte* print_char_cursor
byte* print_char_cursor#1 print_char_cursor zp[2]:10 46.85714285714285
byte* print_char_cursor#10 print_char_cursor zp[2]:10 314.02564102564105
byte* print_char_cursor#146 print_char_cursor zp[2]:10 231.2
byte* print_char_cursor#148 print_char_cursor zp[2]:10 430.33333333333354
byte* print_char_cursor#167 print_char_cursor zp[2]:10 248.0
byte* print_char_cursor#209 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#210 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#211 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#212 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#213 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#214 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#215 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#216 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#217 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#218 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#219 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#220 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#221 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#222 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#223 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#227 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#228 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#230 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#231 print_char_cursor zp[2]:10 4.0
byte* print_char_cursor#83 print_char_cursor zp[2]:10 11502.5
void print_cls()
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:16 34.11340206185572
byte* print_line_cursor#155 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#156 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#157 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#158 print_line_cursor_1 zp[2]:4 2.0
byte* print_line_cursor#159 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#160 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#161 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#162 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#163 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#164 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#165 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#166 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#167 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#168 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#169 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#170 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#171 print_line_cursor_1 zp[2]:4 22.0
byte* print_line_cursor#173 print_line_cursor_1 zp[2]:4 2002.0
byte* print_line_cursor#33 print_line_cursor_1 zp[2]:4 2103.0
byte* print_line_cursor#65 print_line_cursor_1 zp[2]:4 252.0
void print_ln()
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:4 2002.0
byte* print_str::str#18 str zp[2]:4 1026.25
byte* print_str::str#21 str zp[2]:4 101.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 2002.0
byte~ print_uchar::$2 reg byte x 2002.0
byte print_uchar::b
byte print_uchar::b#0 reg byte x 202.0
byte print_uchar::b#1 reg byte x 202.0
byte print_uchar::b#10 reg byte x 573.0
byte print_uchar::b#2 reg byte x 22.0
byte print_uchar::b#3 reg byte x 22.0
byte print_uchar::b#4 reg byte x 22.0
byte print_uchar::b#5 reg byte x 22.0
byte print_uchar::b#6 reg byte x 22.0
byte print_uchar::b#7 reg byte x 22.0
byte print_uchar::b#8 reg byte x 22.0
byte print_uchar::b#9 reg byte x 22.0
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#10 w zp[2]:8 22.0
word print_uint::w#2 w zp[2]:8 22.0
word print_uint::w#4 w zp[2]:8 22.0
word print_uint::w#5 w zp[2]:8 85.66666666666666
word print_uint::w#7 w zp[2]:8 22.0
word print_uint::w#8 w zp[2]:8 22.0

reg byte x [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
zp[2]:2 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 main::fileEntry1_$0 main::fileEntry2_$0 main::entry2#0 ]
reg byte x [ initEntry::n#10 ]
zp[2]:4 [ print_line_cursor#33 print_line_cursor#65 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#171 print_line_cursor#173 print_str::str#18 print_str::str#21 print_str::str#0 initEntry::entry#10 initEntry::entry#1 initEntry::entry#0 mul8u::mb#2 mul8u::mb#1 ]
zp[2]:6 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 main::entry1#0 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
reg byte x [ print_uchar::b#10 print_uchar::b#6 print_uchar::b#7 print_uchar::b#8 print_uchar::b#9 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 print_uchar::b#5 print_uchar::b#0 print_uchar::b#1 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$20 ]
reg byte a [ keyboard_key_pressed::return#3 ]
reg byte a [ main::$22 ]
reg byte a [ mul8u::$1 ]
zp[2]:8 [ initEntry::$1 print_uint::w#5 print_uint::w#7 print_uint::w#8 print_uint::w#2 print_uint::w#10 print_uint::w#4 ]
zp[2]:10 [ initEntry::$5 print_char_cursor#83 print_char_cursor#146 print_char_cursor#1 print_char_cursor#167 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#222 print_char_cursor#223 print_char_cursor#10 print_char_cursor#227 print_char_cursor#228 print_char_cursor#230 print_char_cursor#231 print_char_cursor#148 memset::dst#2 memset::dst#1 ]
zp[2]:12 [ initEntry::$7 ]
reg byte a [ initEntry::$9 ]
reg byte a [ initEntry::$11 ]
reg byte a [ initEntry::$13 ]
reg byte a [ initEntry::$15 ]
zp[2]:14 [ initEntry::$17 ]
reg byte a [ initEntry::$19 ]
reg byte a [ initEntry::$21 ]
reg byte a [ initEntry::$23 ]
reg byte a [ initEntry::$25 ]
zp[2]:16 [ print_line_cursor#0 initEntry::$3 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
reg byte a [ keyboard_matrix_read::return#0 ]
