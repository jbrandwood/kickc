__constant unsigned int *COLCRS = (unsigned int *) 85
__constant char * const CRSINH = (char *) 752
__constant char DIGITS[] = "0123456789abcdef"atz
__constant char OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = 1
__constant char ** const OLDADR = (char **) 94
__constant char * const OLDCHR = (char *) 93
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant unsigned int RADIX_DECIMAL_VALUES[] = { $2710, $3e8, $64, $a }
__constant unsigned long RADIX_DECIMAL_VALUES_LONG[] = { $3b9aca00, $5f5e100, $989680, $f4240, $186a0, $2710, $3e8, $64, $a }
__constant char *ROWCRS = (char *) 84
__constant char ** const SAVMSC = (char **) 88
__constant char SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = $c
__constant char SIZEOF_UNSIGNED_INT = 2
__constant unsigned int STACK_BASE = $103
void clrscr()
__stackcall void cputc(volatile char c)
__constant char cputc::OFFSET_STACK_C = 0
__loadstore volatile char cputc::c // zp[1]:161 1.3333333333466667E11
char cputc::convertToScreenCode1_return
char cputc::convertToScreenCode1_return#0 // reg byte x 1.833333333336667E11
char *cputc::convertToScreenCode1_v
__constant char *cputc::convertToScreenCode1_v#0 = &cputc::c // convertToScreenCode1_v
char * cursorLocation()
unsigned int cursorLocation::$0 // zp[2]:162 2.00000000000002E14
char *cursorLocation::$1 // zp[2]:162 2.00000000000002E14
unsigned int cursorLocation::$3 // zp[2]:162 1.500000000000015E14
unsigned int cursorLocation::$4 // zp[2]:168 2.00000000000002E14
unsigned int cursorLocation::$5 // zp[2]:162 2.00000000000002E14
char *cursorLocation::return
char *cursorLocation::return#0 // return zp[2]:162 2.000000000002E12
char *cursorLocation::return#1 // return zp[2]:162 2.775000000000075E13
char *cursorLocation::return#3 // return zp[2]:162 2.0000000000002E13
__constant unsigned int entries[] = { $78f, $7a4, $7c7, $591, $687, $601, $7c0, $621, $751, $730, $6b8, $791, $71f, $659, $6bf, $714, $6b2, $76c, $793, $78b, $79f, $6dc, $796, $64b, $7bb, $78a, $7cc, $7d0, $608, $6f4, $697, $6e0, $72c, $716, $69b, $719, $7ac, $76b, $629, $60b, $362, $618, $7c4, $641, $7b2, $6ca, $5e3, $683, $73b, $78d, $5eb, $740, $7b1, $744, $709, $7d7, $74a, $708, $6d5, $733, $6af, $5d7, $771, $2fb, $688, $742, $7c3, $5d4, $739, $7c9, $6c9, $752, $67a, $712, $681, $6e8, $79e, $757, $718, $74c, $7cb, $6e3, $6f7, $729, $7b0, $737, $6d4, $6bd, $763, $6db, $11e, $7b8, $7b9, $677, $710, $7c2, $6f3, $745, $7a1, $760, $700, $713, $750, $6fe, $72f, $7c1, $723, $732, $785, $6c7, $663, $71d, $71c, $7b5, $5fb, $6ea, $3b, $736, $78c, $773, $6c2, $3a5, $573, $6d9, $6d7, $169, $5fa, $6f6, $43f, $635, $789, $703, $717, $6c4, $6e5, $755, $6ba, $20e, $6ad, $6fd, $764, $779, $67e, $711, $686, $79b, $72b, $633, $6de, $7be, $7d9, $6dd, $29e, $7bf, $5f4, $756, $704, $7a0, $236, $782, $75a, $74e, $707, $6c3, $6bc, $70d, $7d3, $63c, $61e, $73d, $777, $741, $6cb, $6d0, $65b, $6c1, $6d1, $735, $62e, $75c, $75b, $795, $6e4, $695, $6ff, $72d, $6a1, $6ce, $6f5, $79c, $754, $7c5, $66b, $74f, $772, $6be, $7a6, $5de, $787, $79a }
void gotoxy(char x , char y)
char gotoxy::x
__constant char gotoxy::x#0 = 0 // x
char gotoxy::y
__constant char gotoxy::y#0 = 0 // y
void main()
unsigned int main::$21 // zp[2]:151 667.3333333333334
unsigned int main::$22 // zp[2]:155 2002.0
unsigned int main::$34 // zp[2]:142 14.428571428571429
unsigned int main::$35 // zp[2]:140 13.931034482758621
unsigned int main::$41 // zp[2]:142 100.1
unsigned int main::$42 // zp[2]:149 85.19148936170212
unsigned int main::$43 // zp[2]:140 108.21621621621621
unsigned int *main::$47 // zp[2]:157 101.0
unsigned int *main::$48 // zp[2]:159 202.0
unsigned int *main::$49 // zp[2]:138 202.0
unsigned int *main::$50 // zp[2]:138 202.0
unsigned int *main::$51 // zp[2]:142 202.0
unsigned int *main::$52 // zp[2]:140 202.0
unsigned int *main::$53 // zp[2]:151 1001.0
unsigned int *main::$54 // zp[2]:153 2002.0
unsigned int *main::$55 // zp[2]:155 2002.0
unsigned int *main::$56 // zp[2]:138 2002.0
unsigned int *main::$57 // zp[2]:138 2002.0
unsigned int *main::$58 // zp[2]:138 2002.0
unsigned int *main::$59 // zp[2]:142 2002.0
unsigned int *main::$60 // zp[2]:140 2002.0
unsigned int *main::$61 // zp[2]:140 2002.0
unsigned int main::$8 // zp[2]:157 202.0
unsigned int main::i
unsigned int main::i#1 // i zp[2]:128 22.0
unsigned int main::i#2 // i zp[2]:128 5.125
unsigned int main::i1
unsigned int main::i1#1 // i1 zp[2]:130 22.0
unsigned int main::i1#2 // i1 zp[2]:130 29.228571428571428
unsigned int main::j
unsigned int main::j#0 // j zp[2]:136 22.0
unsigned int main::j#1 // j zp[2]:136 202.0
unsigned int main::j#10 // j zp[2]:136 12.285714285714286
unsigned int main::j1
unsigned int main::j1#0 // j1 zp[2]:132 22.0
unsigned int main::j1#1 // j1 zp[2]:132 202.0
unsigned int main::j1#2 // j1 zp[2]:132 37.765625
unsigned int main::k
unsigned int main::k#0 // k zp[2]:134 202.0
unsigned int main::k#1 // k zp[2]:134 2002.0
unsigned int main::k#10 // k zp[2]:134 85.10000000000001
unsigned long main::mul
unsigned long main::mul#0 // mul zp[4]:144 101.0
unsigned long main::mul1
unsigned long main::mul1#0 // mul1 zp[4]:144 2002.0
unsigned long main::mul2
unsigned long main::mul2#0 // mul2 zp[4]:144 1001.0
unsigned int main::num_entries
__constant unsigned int main::num_entries#0 = $c8*SIZEOF_UNSIGNED_INT/SIZEOF_UNSIGNED_INT // num_entries
__constant char main::s[$19] = "looking a+b=2020 within "at
__constant char main::s1[$a] = " entries
"at
__constant char main::s10[7] = "=2020
"at
__constant char main::s11[$c] = "multiplied "at
__constant char main::s2[$1c] = "
looking a+b+c=2020 within "at
__constant char main::s4[2] = "."at
__constant char main::s5[2] = "
"at
__constant char main::s6[$e] = "match found ["at
__constant char main::s7[2] = "]"at
__constant char main::s8[3] = "+["at
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#0 // destination zp[2]:153 3.333333333336667E11
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:153 1.0E18
char *memcpy::dst#2 // dst zp[2]:153 1.00000333333333325E18
char *memcpy::dst#4 // dst zp[2]:153 2.0000000000002E13
unsigned int memcpy::num
__constant unsigned int memcpy::num#0 = (unsigned int)$28*$17 // num
void *memcpy::return
void *memcpy::source
char *memcpy::source#0 // source zp[2]:151 3.333333333336667E11
char *memcpy::src
char *memcpy::src#1 // src zp[2]:151 2.0E18
char *memcpy::src#2 // src zp[2]:151 1.0000025E18
char *memcpy::src#4 // src zp[2]:151 1.0000000000001E13
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:168 1.2500125E17
void * memset(void *str , char c , unsigned int num)
char memset::c
char *memset::dst
char *memset::dst#1 // dst zp[2]:155 2.0E18
char *memset::dst#2 // dst zp[2]:155 1.3333366666666665E18
char *memset::dst#4 // dst zp[2]:155 2.0000000000002E13
char *memset::end
char *memset::end#0 // end zp[2]:151 1.66668333333333312E17
unsigned int memset::num
unsigned int memset::num#2 // num zp[2]:151 1.0000000000001E13
void *memset::return
void *memset::str
char *memset::str#1 // str zp[2]:155 1.000000000001E12
void *memset::str#3 // str zp[2]:155 3.333333333373334E11
void *memset::str#7 // str zp[2]:155 22.0
void *memset::str#8 // str zp[2]:155 2.000000000002E12
unsigned long mul16u(unsigned int a , unsigned int b)
char mul16u::$1 // reg byte a 2.00000002E8
unsigned int mul16u::a
unsigned int mul16u::a#0 // a zp[2]:142 1.00000001E8
unsigned int mul16u::a#1 // a zp[2]:142 67.33333333333333
unsigned int mul16u::a#2 // a zp[2]:142 667.3333333333334
unsigned int mul16u::a#3 // a zp[2]:142 667.3333333333334
unsigned int mul16u::a#4 // a zp[2]:142 6.666833416666667E7
unsigned int mul16u::a#7 // a zp[2]:142 6052.0
unsigned int mul16u::b
unsigned int mul16u::b#0 // b zp[2]:140 202.0
unsigned int mul16u::b#1 // b zp[2]:140 2002.0
unsigned int mul16u::b#2 // b zp[2]:140 2002.0
unsigned int mul16u::b#3 // b zp[2]:140 2103.0
unsigned long mul16u::mb
unsigned long mul16u::mb#0 // mb zp[4]:164 20002.0
unsigned long mul16u::mb#1 // mb zp[4]:164 2.00000002E8
unsigned long mul16u::mb#2 // mb zp[4]:164 4.2858572E7
unsigned long mul16u::res
unsigned long mul16u::res#1 // res zp[4]:144 2.00000002E8
unsigned long mul16u::res#2 // res zp[4]:144 3.750026325E7
unsigned long mul16u::res#6 // res zp[4]:144 1.00000001E8
unsigned long mul16u::return
unsigned long mul16u::return#2 // return zp[4]:144 202.0
unsigned long mul16u::return#3 // return zp[4]:144 2002.0
unsigned long mul16u::return#4 // return zp[4]:144 2002.0
void newline()
char *newline::start
char *newline::start#0 // start zp[2]:155 7.5000000000075E11
__loadstore struct printf_buffer_number printf_buffer = {} // mem[12]
void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_buffer_number printf_number_buffer::buffer
char *printf_number_buffer::buffer_digits
char printf_number_buffer::buffer_sign
char printf_number_buffer::buffer_sign#0 // reg byte a 20002.0
char printf_number_buffer::buffer_sign#1 // reg byte a 20002.0
char printf_number_buffer::buffer_sign#10 // reg byte a 110002.0
struct printf_format_number printf_number_buffer::format
char printf_number_buffer::format_justify_left
char printf_number_buffer::format_min_length
char printf_number_buffer::format_radix
char printf_number_buffer::format_sign_always
char printf_number_buffer::format_upper_case
char printf_number_buffer::format_zero_padding
signed char printf_number_buffer::len
signed char printf_number_buffer::padding
void (*printf_number_buffer::putc)(char)
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1.0000000001E10
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:138 4.0000000004E9
const char *printf_str::s#26 // s zp[2]:138 1.5000500002E10
const char *printf_str::s#27 // s zp[2]:138 1000001.0
void printf_uint(void (*putc)(char) , unsigned int uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_uint::format
char printf_uint::format_justify_left
char printf_uint::format_min_length
char printf_uint::format_radix
char printf_uint::format_sign_always
char printf_uint::format_upper_case
char printf_uint::format_zero_padding
void (*printf_uint::putc)(char)
unsigned int printf_uint::uvalue
unsigned int printf_uint::uvalue#10 // uvalue zp[2]:138 2002.0
unsigned int printf_uint::uvalue#11 // uvalue zp[2]:138 2002.0
unsigned int printf_uint::uvalue#12 // uvalue zp[2]:138 8205.5
unsigned int printf_uint::uvalue#2 // uvalue zp[2]:138 202.0
unsigned int printf_uint::uvalue#3 // uvalue zp[2]:138 202.0
unsigned int printf_uint::uvalue#4 // uvalue zp[2]:138 202.0
unsigned int printf_uint::uvalue#5 // uvalue zp[2]:138 202.0
unsigned int printf_uint::uvalue#6 // uvalue zp[2]:138 2002.0
unsigned int printf_uint::uvalue#7 // uvalue zp[2]:138 2002.0
unsigned int printf_uint::uvalue#8 // uvalue zp[2]:138 2002.0
unsigned int printf_uint::uvalue#9 // uvalue zp[2]:138 2002.0
void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
struct printf_format_number printf_ulong::format
char printf_ulong::format_justify_left
char printf_ulong::format_min_length
char printf_ulong::format_radix
char printf_ulong::format_sign_always
char printf_ulong::format_upper_case
char printf_ulong::format_zero_padding
void (*printf_ulong::putc)(char)
unsigned long printf_ulong::uvalue
unsigned long printf_ulong::uvalue#0 // uvalue zp[4]:144 202.0
unsigned long printf_ulong::uvalue#1 // uvalue zp[4]:144 2002.0
unsigned long printf_ulong::uvalue#2 // uvalue zp[4]:144 5551.5
void putchar(char code)
char putchar::code
char *putchar::loc
char *putchar::loc#0 // loc zp[2]:162 1.000000000001E12
char putchar::newChar
char putchar::newChar#0 // reg byte a 1.5000000000015E12
__constant char rawmap[$100] = kickasm {{ .var ht = Hashtable().put(0,64, 1,0, 2,32, 3,96) // the table for converting bit 6,7 into ora value
	.for(var i=0; i<256; i++) {
		.var idx = (i & $60) / 32
		.var mask = i & $9f
		.byte mask | ht.get(idx)
	}
 }}
void setcursor()
char setcursor::c
char setcursor::c#0 // reg byte x 7.50000000000075E12
char setcursor::c#1 // reg byte a 2.0000000000002E13
char *setcursor::loc
char *setcursor::loc#0 // loc zp[2]:162 1.0000000000001E13
void ultoa(unsigned long value , char *buffer , char radix)
char ultoa::$10 // reg byte a 2.000000002E9
char ultoa::$11 // reg byte a 200002.0
char *ultoa::buffer
char *ultoa::buffer#11 // buffer zp[2]:155 2.8572857185714287E8
char *ultoa::buffer#14 // buffer zp[2]:155 1.5000000015E9
char *ultoa::buffer#3 // buffer zp[2]:155 200002.0
char *ultoa::buffer#4 // buffer zp[2]:155 2.000000002E9
char ultoa::digit
char ultoa::digit#1 // digit zp[1]:148 2.000000002E9
char ultoa::digit#2 // digit zp[1]:148 2.85714286E8
unsigned long ultoa::digit_value
unsigned long ultoa::digit_value#0 // digit_value zp[4]:164 6.000000005999999E8
unsigned long *ultoa::digit_values
char ultoa::max_digits
char ultoa::radix
char ultoa::started
char ultoa::started#2 // reg byte x 5.000000005E8
char ultoa::started#4 // reg byte x 1.000000001E9
unsigned long ultoa::value
unsigned long ultoa::value#0 // value zp[4]:144 1.000000001E9
unsigned long ultoa::value#1 // value zp[4]:144 55001.0
unsigned long ultoa::value#2 // value zp[4]:144 5.714428578571429E8
unsigned long ultoa::value#6 // value zp[4]:144 1.5000000015E9
unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
char *ultoa_append::buffer
char *ultoa_append::buffer#0 // buffer zp[2]:155 1.37500000025E9
char ultoa_append::digit
char ultoa_append::digit#1 // reg byte x 1.000000000000001E15
char ultoa_append::digit#2 // reg byte x 1.0000050000000015E15
unsigned long ultoa_append::return
unsigned long ultoa_append::return#0 // return zp[4]:144 2.000000002E9
unsigned long ultoa_append::sub
unsigned long ultoa_append::sub#0 // sub zp[4]:164 3.333335000000005E14
unsigned long ultoa_append::value
unsigned long ultoa_append::value#0 // value zp[4]:144 3.666666667333333E9
unsigned long ultoa_append::value#1 // value zp[4]:144 2.000000000000002E15
unsigned long ultoa_append::value#2 // value zp[4]:144 5.0000183333333425E14
void utoa(unsigned int value , char *buffer , char radix)
char utoa::$10 // reg byte a 2.000000002E9
char utoa::$11 // reg byte x 200002.0
char *utoa::buffer
char *utoa::buffer#11 // buffer zp[2]:151 2.8572857185714287E8
char *utoa::buffer#14 // buffer zp[2]:151 1.5000000015E9
char *utoa::buffer#3 // buffer zp[2]:151 200002.0
char *utoa::buffer#4 // buffer zp[2]:151 2.000000002E9
char utoa::digit
char utoa::digit#1 // digit zp[1]:148 2.000000002E9
char utoa::digit#2 // digit zp[1]:148 2.85714286E8
unsigned int utoa::digit_value
unsigned int utoa::digit_value#0 // digit_value zp[2]:162 6.000000005999999E8
unsigned int *utoa::digit_values
char utoa::max_digits
char utoa::radix
char utoa::started
char utoa::started#2 // reg byte x 5.000000005E8
char utoa::started#4 // reg byte x 1.000000001E9
unsigned int utoa::value
unsigned int utoa::value#0 // value zp[2]:138 1.000000001E9
unsigned int utoa::value#1 // value zp[2]:138 55001.0
unsigned int utoa::value#2 // value zp[2]:138 5.714428578571429E8
unsigned int utoa::value#6 // value zp[2]:138 1.5000000015E9
unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
char *utoa_append::buffer
char *utoa_append::buffer#0 // buffer zp[2]:151 1.37500000025E9
char utoa_append::digit
char utoa_append::digit#1 // reg byte x 1.000000000000001E15
char utoa_append::digit#2 // reg byte x 1.0000050000000015E15
unsigned int utoa_append::return
unsigned int utoa_append::return#0 // return zp[2]:138 2.000000002E9
unsigned int utoa_append::sub
unsigned int utoa_append::sub#0 // sub zp[2]:162 3.333335000000005E14
unsigned int utoa_append::value
unsigned int utoa_append::value#0 // value zp[2]:138 3.666666667333333E9
unsigned int utoa_append::value#1 // value zp[2]:138 2.000000000000002E15
unsigned int utoa_append::value#2 // value zp[2]:138 5.0000183333333425E14

zp[2]:128 [ main::i#2 main::i#1 ]
zp[2]:130 [ main::i1#2 main::i1#1 ]
zp[2]:132 [ main::j1#2 main::j1#0 main::j1#1 ]
zp[2]:134 [ main::k#10 main::k#0 main::k#1 ]
zp[2]:136 [ main::j#10 main::j#0 main::j#1 ]
zp[2]:138 [ printf_uint::uvalue#12 printf_uint::uvalue#2 printf_uint::uvalue#3 printf_uint::uvalue#4 printf_uint::uvalue#5 printf_uint::uvalue#6 printf_uint::uvalue#7 printf_uint::uvalue#8 printf_uint::uvalue#9 printf_uint::uvalue#10 printf_uint::uvalue#11 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 main::$56 main::$57 main::$58 main::$49 main::$50 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 printf_str::s#26 printf_str::s#27 printf_str::s#0 ]
zp[2]:140 [ mul16u::b#3 mul16u::b#0 mul16u::b#1 mul16u::b#2 main::$60 main::$61 main::$52 main::$43 main::$35 ]
zp[2]:142 [ mul16u::a#4 mul16u::a#7 mul16u::a#1 mul16u::a#2 mul16u::a#3 mul16u::a#0 main::$59 main::$51 main::$41 main::$34 ]
zp[4]:144 [ mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16u::return#3 mul16u::return#4 mul16u::return#2 printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 main::mul2#0 main::mul#0 main::mul1#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte a [ printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
zp[1]:148 [ ultoa::digit#2 ultoa::digit#1 utoa::digit#2 utoa::digit#1 ]
reg byte x [ ultoa::started#2 ultoa::started#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
reg byte x [ ultoa_append::digit#2 ultoa_append::digit#1 ]
zp[2]:149 [ main::$42 ]
zp[2]:151 [ main::$53 main::$21 memcpy::src#2 memcpy::src#4 memcpy::src#1 memcpy::source#0 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 memset::num#2 memset::end#0 ]
zp[2]:153 [ main::$54 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 memcpy::destination#0 ]
zp[2]:155 [ main::$55 main::$22 ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 memset::str#3 memset::str#7 memset::str#8 memset::dst#2 memset::dst#4 memset::dst#1 memset::str#1 newline::start#0 ]
zp[2]:157 [ main::$47 main::$8 ]
zp[2]:159 [ main::$48 ]
zp[1]:161 [ cputc::c ]
reg byte x [ cputc::convertToScreenCode1_return#0 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ mul16u::$1 ]
reg byte a [ putchar::newChar#0 ]
reg byte x [ setcursor::c#0 ]
reg byte a [ setcursor::c#1 ]
reg byte x [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:162 [ utoa::digit_value#0 utoa_append::sub#0 cursorLocation::return#0 putchar::loc#0 cursorLocation::return#1 cursorLocation::return#3 setcursor::loc#0 cursorLocation::$0 cursorLocation::$1 cursorLocation::$3 cursorLocation::$5 ]
reg byte a [ ultoa::$11 ]
reg byte a [ ultoa::$10 ]
zp[4]:164 [ ultoa::digit_value#0 ultoa_append::sub#0 mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
zp[2]:168 [ memcpy::src_end#0 cursorLocation::$4 ]
mem[12] [ printf_buffer ]
