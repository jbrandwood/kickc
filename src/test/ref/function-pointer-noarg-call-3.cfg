
void fn2()
fn2: scope:[fn2]  from
  [0] *fn2::BG_COLOR = ++ *fn2::BG_COLOR
  to:fn2::@return
fn2::@return: scope:[fn2]  from fn2
  [1] return 
  to:@return

void fn1()
fn1: scope:[fn1]  from
  [2] *fn1::BORDER_COLOR = ++ *fn1::BORDER_COLOR
  to:fn1::@return
fn1::@return: scope:[fn1]  from fn1
  [3] return 
  to:@return

void main()
main: scope:[main]  from
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] main::i#2 = phi( main/0, main::@3/main::i#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [6] main::i#1 = ++ main::i#2
  [7] getfn::b#0 = main::i#1
  [8] call getfn
  [9] getfn::return#0 = getfn::return#3
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] main::$0 = getfn::return#0
  [11] callexecute *main::$0 
  to:main::@1

void (*)() getfn(char b)
getfn: scope:[getfn]  from main::@2
  [12] getfn::$0 = getfn::b#0 & 1
  [13] if(getfn::$0==0) goto getfn::@1
  to:getfn::@return
getfn::@1: scope:[getfn]  from getfn
  [14] phi()
  to:getfn::@return
getfn::@return: scope:[getfn]  from getfn getfn::@1
  [15] getfn::return#3 = phi( getfn::@1/&fn1, getfn/&fn2 )
  [16] return 
  to:@return
