Fixing pointer addition (word*~) bsearch16u::$7 ← (word*) bsearch16u::items + (byte~) bsearch16u::$6
Fixing pointer addition (word*~) bsearch16u::$15 ← (word*) bsearch16u::pivot + (number) 1
Fixing pointer addition (word*~) bsearch16u::$1 ← (word*) bsearch16u::items - (number) 1
Fixing pointer array-indexing *((word*) utoa::digit_values + (byte) utoa::digit)
Fixing pointer array-indexing *((dword*) ultoa::digit_values + (byte) ultoa::digit)
Warning! Adding boolean cast to non-boolean condition *((byte*) strcpy::src)
Warning! Adding boolean cast to non-boolean condition *((byte*) print_str_lines::str)
Warning! Adding boolean cast to non-boolean condition (byte) print_str_lines::ch
Warning! Adding boolean cast to non-boolean condition *((byte*) print_str::str)
Warning! Adding boolean cast to non-boolean condition *((byte*) print_str_at::str)
Warning! Adding boolean cast to non-boolean sub-expression (byte) print_str_lines::ch
Identified constant variable (byte*) HEAP_TOP
Inlined call (byte~) vicSelectGfxBank::$0 ← call toDd00 (byte*) vicSelectGfxBank::gfx 
Inlined call (byte*~) main::$1 ← call fileEntry (number) 1 
Inlined call (byte*~) main::$2 ← call fileEntry (number) 2 
Inlined call (byte**~) initEntry::$0 ← call entryBufDisk (byte*) initEntry::entry 
Inlined call (byte**~) initEntry::$2 ← call entryBufEdit (byte*) initEntry::entry 
Inlined call (word*~) initEntry::$4 ← call entryTsLen (byte*) initEntry::entry 
Inlined call (word**~) initEntry::$6 ← call entryTsOrder (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$8 ← call entryTLastLink (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$10 ← call entrySLastLink (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$12 ← call entryBFlag (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$14 ← call entryBError (byte*) initEntry::entry 
Inlined call (word*~) initEntry::$16 ← call entryUCross (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$18 ← call entryBAddrLo (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$20 ← call entryBAddrHi (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$22 ← call entryTHi (byte*) initEntry::entry 
Inlined call (byte*~) initEntry::$24 ← call entryTLo (byte*) initEntry::entry 
Inlined call (byte**~) printEntry::$1 ← call entryBufDisk (byte*) printEntry::entry 
Inlined call (byte**~) printEntry::$6 ← call entryBufEdit (byte*) printEntry::entry 
Inlined call (word*~) printEntry::$11 ← call entryTsLen (byte*) printEntry::entry 
Inlined call (word**~) printEntry::$15 ← call entryTsOrder (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$20 ← call entryTLastLink (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$24 ← call entrySLastLink (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$28 ← call entryBFlag (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$32 ← call entryBError (byte*) printEntry::entry 
Inlined call (word*~) printEntry::$36 ← call entryUCross (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$40 ← call entryBAddrLo (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$44 ← call entryBAddrHi (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$48 ← call entryTHi (byte*) printEntry::entry 
Inlined call (byte*~) printEntry::$52 ← call entryTLo (byte*) printEntry::entry 
Culled Empty Block (label) mul8u::@5
Culled Empty Block (label) mul8u::@6
Culled Empty Block (label) mul8u::@8
Culled Empty Block (label) mul8u::@9
Culled Empty Block (label) @1
Culled Empty Block (label) @2
Culled Empty Block (label) @3
Culled Empty Block (label) @4
Culled Empty Block (label) @5
Culled Empty Block (label) @6
Culled Empty Block (label) @7
Culled Empty Block (label) memset::@7
Culled Empty Block (label) memset::@6
Culled Empty Block (label) memset::@8
Culled Empty Block (label) memset::@9
Culled Empty Block (label) memset::@3
Culled Empty Block (label) @8
Culled Empty Block (label) @9
Culled Empty Block (label) @10
Culled Empty Block (label) @11
Culled Empty Block (label) @12
Culled Empty Block (label) @13
Culled Empty Block (label) @14
Culled Empty Block (label) @15
Culled Empty Block (label) @16
Culled Empty Block (label) @18
Culled Empty Block (label) @19
Culled Empty Block (label) print_str::@4
Culled Empty Block (label) print_str::@3
Culled Empty Block (label) print_str::@5
Culled Empty Block (label) print_str::@6
Culled Empty Block (label) @20
Culled Empty Block (label) @21
Culled Empty Block (label) @22
Culled Empty Block (label) @23
Culled Empty Block (label) @24
Culled Empty Block (label) @25
Culled Empty Block (label) @26
Culled Empty Block (label) @27
Culled Empty Block (label) @28
Culled Empty Block (label) @29
Culled Empty Block (label) @30
Culled Empty Block (label) @31
Culled Empty Block (label) @32
Culled Empty Block (label) @33
Culled Empty Block (label) @34
Culled Empty Block (label) @35
Culled Empty Block (label) @36
Culled Empty Block (label) @37
Culled Empty Block (label) @38
Culled Empty Block (label) @39
Culled Empty Block (label) @40
Culled Empty Block (label) @41
Culled Empty Block (label) @42
Culled Empty Block (label) @43
Culled Empty Block (label) @44
Culled Empty Block (label) @45
Culled Empty Block (label) @46
Culled Empty Block (label) keyboard_matrix_read::@1
Culled Empty Block (label) @47
Culled Empty Block (label) keyboard_key_pressed::@1
Culled Empty Block (label) @48
Culled Empty Block (label) @49
Culled Empty Block (label) @50
Culled Empty Block (label) @51
Culled Empty Block (label) @53
Culled Empty Block (label) @54
Culled Empty Block (label) @55
Culled Empty Block (label) @56
Culled Empty Block (label) @57
Culled Empty Block (label) @58
Culled Empty Block (label) @59
Culled Empty Block (label) @60
Culled Empty Block (label) @61
Culled Empty Block (label) @62
Culled Empty Block (label) @63
Culled Empty Block (label) @64
Culled Empty Block (label) @65
Culled Empty Block (label) @66
Culled Empty Block (label) main::fileEntry1_@1
Culled Empty Block (label) main::fileEntry2_@1
Culled Empty Block (label) main::@2
Culled Empty Block (label) main::@4
Culled Empty Block (label) main::@5
Culled Empty Block (label) main::@6
Culled Empty Block (label) main::@8
Culled Empty Block (label) main::@10
Culled Empty Block (label) main::@11
Culled Empty Block (label) main::@12
Culled Empty Block (label) @67
Culled Empty Block (label) initEntry::entryBufDisk1_@1
Culled Empty Block (label) initEntry::entryBufEdit1_@1
Culled Empty Block (label) initEntry::entryTsLen1_@1
Culled Empty Block (label) initEntry::entryTsOrder1_@1
Culled Empty Block (label) initEntry::entryTLastLink1_@1
Culled Empty Block (label) initEntry::entrySLastLink1_@1
Culled Empty Block (label) initEntry::entryBFlag1_@1
Culled Empty Block (label) initEntry::entryBError1_@1
Culled Empty Block (label) initEntry::entryUCross1_@1
Culled Empty Block (label) initEntry::entryBAddrLo1_@1
Culled Empty Block (label) initEntry::entryBAddrHi1_@1
Culled Empty Block (label) initEntry::entryTHi1_@1
Culled Empty Block (label) initEntry::entryTLo1_@1
Culled Empty Block (label) @68
Culled Empty Block (label) printEntry::entryBufDisk1_@1
Culled Empty Block (label) printEntry::entryBufEdit1_@1
Culled Empty Block (label) printEntry::entryTsLen1_@1
Culled Empty Block (label) printEntry::entryTsOrder1_@1
Culled Empty Block (label) printEntry::entryTLastLink1_@1
Culled Empty Block (label) printEntry::entrySLastLink1_@1
Culled Empty Block (label) printEntry::entryBFlag1_@1
Culled Empty Block (label) printEntry::entryBError1_@1
Culled Empty Block (label) printEntry::entryUCross1_@1
Culled Empty Block (label) printEntry::entryBAddrLo1_@1
Culled Empty Block (label) printEntry::entryBAddrHi1_@1
Culled Empty Block (label) printEntry::entryTHi1_@1
Culled Empty Block (label) printEntry::entryTLo1_@1

CONTROL FLOW GRAPH SSA
@begin: scope:[]  from
  to:@17

(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
mul8u: scope:[mul8u]  from main::fileEntry1 main::fileEntry2
  (byte) mul8u::a#6 ← phi( main::fileEntry1/(byte) mul8u::a#1 main::fileEntry2/(byte) mul8u::a#2 )
  (byte) mul8u::b#2 ← phi( main::fileEntry1/(byte) mul8u::b#0 main::fileEntry2/(byte) mul8u::b#1 )
  (word) mul8u::res#0 ← (number) 0
  (word) mul8u::mb#0 ← (byte) mul8u::b#2
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@4
  (word) mul8u::mb#5 ← phi( mul8u/(word) mul8u::mb#0 mul8u::@4/(word) mul8u::mb#1 )
  (word) mul8u::res#4 ← phi( mul8u/(word) mul8u::res#0 mul8u::@4/(word) mul8u::res#6 )
  (byte) mul8u::a#3 ← phi( mul8u/(byte) mul8u::a#6 mul8u::@4/(byte) mul8u::a#0 )
  (bool~) mul8u::$0 ← (byte) mul8u::a#3 != (number) 0
  if((bool~) mul8u::$0) goto mul8u::@2
  to:mul8u::@3
mul8u::@2: scope:[mul8u]  from mul8u::@1
  (word) mul8u::res#5 ← phi( mul8u::@1/(word) mul8u::res#4 )
  (word) mul8u::mb#4 ← phi( mul8u::@1/(word) mul8u::mb#5 )
  (byte) mul8u::a#4 ← phi( mul8u::@1/(byte) mul8u::a#3 )
  (number~) mul8u::$1 ← (byte) mul8u::a#4 & (number) 1
  (bool~) mul8u::$2 ← (number~) mul8u::$1 != (number) 0
  (bool~) mul8u::$3 ← ! (bool~) mul8u::$2
  if((bool~) mul8u::$3) goto mul8u::@4
  to:mul8u::@7
mul8u::@3: scope:[mul8u]  from mul8u::@1
  (word) mul8u::res#2 ← phi( mul8u::@1/(word) mul8u::res#4 )
  (word) mul8u::return#0 ← (word) mul8u::res#2
  to:mul8u::@return
mul8u::@4: scope:[mul8u]  from mul8u::@2 mul8u::@7
  (word) mul8u::res#6 ← phi( mul8u::@2/(word) mul8u::res#5 mul8u::@7/(word) mul8u::res#1 )
  (word) mul8u::mb#2 ← phi( mul8u::@2/(word) mul8u::mb#4 mul8u::@7/(word) mul8u::mb#3 )
  (byte) mul8u::a#5 ← phi( mul8u::@2/(byte) mul8u::a#4 mul8u::@7/(byte) mul8u::a#7 )
  (byte~) mul8u::$5 ← (byte) mul8u::a#5 >> (number) 1
  (byte) mul8u::a#0 ← (byte~) mul8u::$5
  (word~) mul8u::$6 ← (word) mul8u::mb#2 << (number) 1
  (word) mul8u::mb#1 ← (word~) mul8u::$6
  to:mul8u::@1
mul8u::@7: scope:[mul8u]  from mul8u::@2
  (byte) mul8u::a#7 ← phi( mul8u::@2/(byte) mul8u::a#4 )
  (word) mul8u::mb#3 ← phi( mul8u::@2/(word) mul8u::mb#4 )
  (word) mul8u::res#3 ← phi( mul8u::@2/(word) mul8u::res#5 )
  (word~) mul8u::$4 ← (word) mul8u::res#3 + (word) mul8u::mb#3
  (word) mul8u::res#1 ← (word~) mul8u::$4
  to:mul8u::@4
mul8u::@return: scope:[mul8u]  from mul8u::@3
  (word) mul8u::return#4 ← phi( mul8u::@3/(word) mul8u::return#0 )
  (word) mul8u::return#1 ← (word) mul8u::return#4
  return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  (byte) memset::c#4 ← phi( print_cls/(byte) memset::c#0 )
  (void*) memset::str#3 ← phi( print_cls/(void*) memset::str#0 )
  (word) memset::num#1 ← phi( print_cls/(word) memset::num#0 )
  (bool~) memset::$0 ← (word) memset::num#1 > (number) 0
  (bool~) memset::$1 ← ! (bool~) memset::$0
  if((bool~) memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@4
  (void*) memset::str#1 ← phi( memset/(void*) memset::str#3 memset::@4/(void*) memset::str#4 )
  (void*) memset::return#0 ← (void*) memset::str#1
  to:memset::@return
memset::@2: scope:[memset]  from memset
  (byte) memset::c#3 ← phi( memset/(byte) memset::c#4 )
  (word) memset::num#2 ← phi( memset/(word) memset::num#1 )
  (void*) memset::str#2 ← phi( memset/(void*) memset::str#3 )
  (byte*~) memset::$2 ← ((byte*)) (void*) memset::str#2
  (byte*~) memset::$3 ← (byte*~) memset::$2 + (word) memset::num#2
  (byte*) memset::end#0 ← (byte*~) memset::$3
  (byte*) memset::dst#0 ← ((byte*)) (void*) memset::str#2
  to:memset::@4
memset::@4: scope:[memset]  from memset::@2 memset::@5
  (byte) memset::c#2 ← phi( memset::@2/(byte) memset::c#3 memset::@5/(byte) memset::c#1 )
  (void*) memset::str#4 ← phi( memset::@2/(void*) memset::str#2 memset::@5/(void*) memset::str#5 )
  (byte*) memset::end#1 ← phi( memset::@2/(byte*) memset::end#0 memset::@5/(byte*) memset::end#2 )
  (byte*) memset::dst#2 ← phi( memset::@2/(byte*) memset::dst#0 memset::@5/(byte*) memset::dst#1 )
  (bool~) memset::$4 ← (byte*) memset::dst#2 != (byte*) memset::end#1
  if((bool~) memset::$4) goto memset::@5
  to:memset::@1
memset::@5: scope:[memset]  from memset::@4
  (void*) memset::str#5 ← phi( memset::@4/(void*) memset::str#4 )
  (byte*) memset::end#2 ← phi( memset::@4/(byte*) memset::end#1 )
  (byte*) memset::dst#3 ← phi( memset::@4/(byte*) memset::dst#2 )
  (byte) memset::c#1 ← phi( memset::@4/(byte) memset::c#2 )
  *((byte*) memset::dst#3) ← (byte) memset::c#1
  (byte*) memset::dst#1 ← ++ (byte*) memset::dst#3
  to:memset::@4
memset::@return: scope:[memset]  from memset::@1
  (void*) memset::return#3 ← phi( memset::@1/(void*) memset::return#0 )
  (void*) memset::return#1 ← (void*) memset::return#3
  return 
  to:@return
@17: scope:[]  from @begin
  (byte*) print_screen#0 ← ((byte*)) (number) $400
  (byte*) print_line_cursor#0 ← (byte*) print_screen#0
  (byte*) print_char_cursor#0 ← (byte*) print_line_cursor#0
  to:@52

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from main::@20 main::@25 main::@28 main::@33 printEntry printEntry::@16 printEntry::@19 printEntry::@22 printEntry::@25 printEntry::@28 printEntry::@31 printEntry::@34 printEntry::@37 printEntry::@40 printEntry::@43 printEntry::@46 printEntry::@49
  (byte*) print_char_cursor#164 ← phi( main::@20/(byte*) print_char_cursor#15 main::@25/(byte*) print_char_cursor#20 main::@28/(byte*) print_char_cursor#22 main::@33/(byte*) print_char_cursor#27 printEntry/(byte*) print_char_cursor#149 printEntry::@16/(byte*) print_char_cursor#33 printEntry::@19/(byte*) print_char_cursor#36 printEntry::@22/(byte*) print_char_cursor#39 printEntry::@25/(byte*) print_char_cursor#42 printEntry::@28/(byte*) print_char_cursor#45 printEntry::@31/(byte*) print_char_cursor#48 printEntry::@34/(byte*) print_char_cursor#51 printEntry::@37/(byte*) print_char_cursor#54 printEntry::@40/(byte*) print_char_cursor#57 printEntry::@43/(byte*) print_char_cursor#60 printEntry::@46/(byte*) print_char_cursor#63 printEntry::@49/(byte*) print_char_cursor#66 )
  (byte*) print_str::str#20 ← phi( main::@20/(byte*) print_str::str#1 main::@25/(byte*) print_str::str#2 main::@28/(byte*) print_str::str#3 main::@33/(byte*) print_str::str#4 printEntry/(byte*) print_str::str#5 printEntry::@16/(byte*) print_str::str#6 printEntry::@19/(byte*) print_str::str#7 printEntry::@22/(byte*) print_str::str#8 printEntry::@25/(byte*) print_str::str#9 printEntry::@28/(byte*) print_str::str#10 printEntry::@31/(byte*) print_str::str#11 printEntry::@34/(byte*) print_str::str#12 printEntry::@37/(byte*) print_str::str#13 printEntry::@40/(byte*) print_str::str#14 printEntry::@43/(byte*) print_str::str#15 printEntry::@46/(byte*) print_str::str#16 printEntry::@49/(byte*) print_str::str#17 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (byte*) print_char_cursor#142 ← phi( print_str/(byte*) print_char_cursor#164 print_str::@2/(byte*) print_char_cursor#1 )
  (byte*) print_str::str#18 ← phi( print_str/(byte*) print_str::str#20 print_str::@2/(byte*) print_str::str#0 )
  (bool~) print_str::$0 ← (number) 0 != *((byte*) print_str::str#18)
  if((bool~) print_str::$0) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  (byte*) print_char_cursor#72 ← phi( print_str::@1/(byte*) print_char_cursor#142 )
  (byte*) print_str::str#19 ← phi( print_str::@1/(byte*) print_str::str#18 )
  *((byte*) print_char_cursor#72) ← *((byte*) print_str::str#19)
  (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#72
  (byte*) print_str::str#0 ← ++ (byte*) print_str::str#19
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  (byte*) print_char_cursor#73 ← phi( print_str::@1/(byte*) print_char_cursor#142 )
  (byte*) print_char_cursor#2 ← (byte*) print_char_cursor#73
  return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from main::@21 main::@22 main::@24 main::@29 main::@30 main::@32 printEntry::@15 printEntry::@18 printEntry::@21 printEntry::@24 printEntry::@27 printEntry::@30 printEntry::@33 printEntry::@36 printEntry::@39 printEntry::@42 printEntry::@45 printEntry::@48 printEntry::@51
  (byte*) print_char_cursor#143 ← phi( main::@21/(byte*) print_char_cursor#16 main::@22/(byte*) print_char_cursor#17 main::@24/(byte*) print_char_cursor#19 main::@29/(byte*) print_char_cursor#23 main::@30/(byte*) print_char_cursor#24 main::@32/(byte*) print_char_cursor#26 printEntry::@15/(byte*) print_char_cursor#32 printEntry::@18/(byte*) print_char_cursor#35 printEntry::@21/(byte*) print_char_cursor#38 printEntry::@24/(byte*) print_char_cursor#41 printEntry::@27/(byte*) print_char_cursor#44 printEntry::@30/(byte*) print_char_cursor#47 printEntry::@33/(byte*) print_char_cursor#50 printEntry::@36/(byte*) print_char_cursor#53 printEntry::@39/(byte*) print_char_cursor#56 printEntry::@42/(byte*) print_char_cursor#59 printEntry::@45/(byte*) print_char_cursor#62 printEntry::@48/(byte*) print_char_cursor#65 printEntry::@51/(byte*) print_char_cursor#68 )
  (byte*) print_line_cursor#63 ← phi( main::@21/(byte*) print_line_cursor#65 main::@22/(byte*) print_line_cursor#6 main::@24/(byte*) print_line_cursor#8 main::@29/(byte*) print_line_cursor#67 main::@30/(byte*) print_line_cursor#11 main::@32/(byte*) print_line_cursor#13 printEntry::@15/(byte*) print_line_cursor#69 printEntry::@18/(byte*) print_line_cursor#70 printEntry::@21/(byte*) print_line_cursor#71 printEntry::@24/(byte*) print_line_cursor#72 printEntry::@27/(byte*) print_line_cursor#73 printEntry::@30/(byte*) print_line_cursor#74 printEntry::@33/(byte*) print_line_cursor#75 printEntry::@36/(byte*) print_line_cursor#76 printEntry::@39/(byte*) print_line_cursor#77 printEntry::@42/(byte*) print_line_cursor#78 printEntry::@45/(byte*) print_line_cursor#79 printEntry::@48/(byte*) print_line_cursor#80 printEntry::@51/(byte*) print_line_cursor#81 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*) print_char_cursor#74 ← phi( print_ln/(byte*) print_char_cursor#143 print_ln::@1/(byte*) print_char_cursor#74 )
  (byte*) print_line_cursor#32 ← phi( print_ln/(byte*) print_line_cursor#63 print_ln::@1/(byte*) print_line_cursor#1 )
  (byte*~) print_ln::$0 ← (byte*) print_line_cursor#32 + (number) $28
  (byte*) print_line_cursor#1 ← (byte*~) print_ln::$0
  (bool~) print_ln::$1 ← (byte*) print_line_cursor#1 < (byte*) print_char_cursor#74
  if((bool~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) print_line_cursor#33 ← phi( print_ln::@1/(byte*) print_line_cursor#1 )
  (byte*) print_char_cursor#3 ← (byte*) print_line_cursor#33
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  (byte*) print_char_cursor#75 ← phi( print_ln::@2/(byte*) print_char_cursor#3 )
  (byte*) print_line_cursor#34 ← phi( print_ln::@2/(byte*) print_line_cursor#33 )
  (byte*) print_line_cursor#2 ← (byte*) print_line_cursor#34
  (byte*) print_char_cursor#4 ← (byte*) print_char_cursor#75
  return 
  to:@return

(void()) print_word((word) print_word::w)
print_word: scope:[print_word]  from printEntry::@1 printEntry::@2 printEntry::@3 printEntry::@4 printEntry::@9
  (byte*) print_char_cursor#144 ← phi( printEntry::@1/(byte*) print_char_cursor#150 printEntry::@2/(byte*) print_char_cursor#151 printEntry::@3/(byte*) print_char_cursor#152 printEntry::@4/(byte*) print_char_cursor#153 printEntry::@9/(byte*) print_char_cursor#158 )
  (word) print_word::w#5 ← phi( printEntry::@1/(word) print_word::w#0 printEntry::@2/(word) print_word::w#1 printEntry::@3/(word) print_word::w#2 printEntry::@4/(word) print_word::w#3 printEntry::@9/(word) print_word::w#4 )
  (byte~) print_word::$0 ← > (word) print_word::w#5
  (byte) print_byte::b#0 ← (byte~) print_word::$0
  call print_byte 
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  (word) print_word::w#6 ← phi( print_word/(word) print_word::w#5 )
  (byte*) print_char_cursor#76 ← phi( print_word/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#5 ← (byte*) print_char_cursor#76
  (byte~) print_word::$2 ← < (word) print_word::w#6
  (byte) print_byte::b#1 ← (byte~) print_word::$2
  call print_byte 
  to:print_word::@2
print_word::@2: scope:[print_word]  from print_word::@1
  (byte*) print_char_cursor#77 ← phi( print_word::@1/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#6 ← (byte*) print_char_cursor#77
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@2
  (byte*) print_char_cursor#78 ← phi( print_word::@2/(byte*) print_char_cursor#6 )
  (byte*) print_char_cursor#7 ← (byte*) print_char_cursor#78
  return 
  to:@return

(void()) print_byte((byte) print_byte::b)
print_byte: scope:[print_byte]  from printEntry::@10 printEntry::@11 printEntry::@12 printEntry::@13 printEntry::@5 printEntry::@6 printEntry::@7 printEntry::@8 print_word print_word::@1
  (byte*) print_char_cursor#145 ← phi( printEntry::@10/(byte*) print_char_cursor#159 printEntry::@11/(byte*) print_char_cursor#160 printEntry::@12/(byte*) print_char_cursor#161 printEntry::@13/(byte*) print_char_cursor#162 printEntry::@5/(byte*) print_char_cursor#154 printEntry::@6/(byte*) print_char_cursor#155 printEntry::@7/(byte*) print_char_cursor#156 printEntry::@8/(byte*) print_char_cursor#157 print_word/(byte*) print_char_cursor#144 print_word::@1/(byte*) print_char_cursor#5 )
  (byte) print_byte::b#10 ← phi( printEntry::@10/(byte) print_byte::b#6 printEntry::@11/(byte) print_byte::b#7 printEntry::@12/(byte) print_byte::b#8 printEntry::@13/(byte) print_byte::b#9 printEntry::@5/(byte) print_byte::b#2 printEntry::@6/(byte) print_byte::b#3 printEntry::@7/(byte) print_byte::b#4 printEntry::@8/(byte) print_byte::b#5 print_word/(byte) print_byte::b#0 print_word::@1/(byte) print_byte::b#1 )
  (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (number) 4
  (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0)
  call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  (byte) print_byte::b#11 ← phi( print_byte/(byte) print_byte::b#10 )
  (byte*) print_char_cursor#79 ← phi( print_byte/(byte*) print_char_cursor#12 )
  (byte*) print_char_cursor#8 ← (byte*) print_char_cursor#79
  (number~) print_byte::$2 ← (byte) print_byte::b#11 & (number) $f
  (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (number~) print_byte::$2)
  call print_char 
  to:print_byte::@2
print_byte::@2: scope:[print_byte]  from print_byte::@1
  (byte*) print_char_cursor#80 ← phi( print_byte::@1/(byte*) print_char_cursor#12 )
  (byte*) print_char_cursor#9 ← (byte*) print_char_cursor#80
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@2
  (byte*) print_char_cursor#81 ← phi( print_byte::@2/(byte*) print_char_cursor#9 )
  (byte*) print_char_cursor#10 ← (byte*) print_char_cursor#81
  return 
  to:@return

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_byte print_byte::@1
  (byte*) print_char_cursor#82 ← phi( print_byte/(byte*) print_char_cursor#145 print_byte::@1/(byte*) print_char_cursor#8 )
  (byte) print_char::ch#2 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 )
  *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2
  (byte*) print_char_cursor#11 ← ++ (byte*) print_char_cursor#82
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  (byte*) print_char_cursor#83 ← phi( print_char/(byte*) print_char_cursor#11 )
  (byte*) print_char_cursor#12 ← (byte*) print_char_cursor#83
  return 
  to:@return

(void()) print_cls()
print_cls: scope:[print_cls]  from main::@19 main::@3 main::@9
  (byte*) print_screen#1 ← phi( main::@19/(byte*) print_screen#3 main::@3/(byte*) print_screen#4 main::@9/(byte*) print_screen#5 )
  (void*) memset::str#0 ← (void*)(byte*) print_screen#1
  (byte) memset::c#0 ← (byte) ' '
  (word) memset::num#0 ← (number) $3e8
  call memset 
  (void*) memset::return#2 ← (void*) memset::return#1
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls
  (byte*) print_screen#2 ← phi( print_cls/(byte*) print_screen#1 )
  (byte*) print_line_cursor#3 ← (byte*) print_screen#2
  (byte*) print_char_cursor#13 ← (byte*) print_line_cursor#3
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  (byte*) print_char_cursor#84 ← phi( print_cls::@1/(byte*) print_char_cursor#13 )
  (byte*) print_line_cursor#35 ← phi( print_cls::@1/(byte*) print_line_cursor#3 )
  (byte*) print_line_cursor#4 ← (byte*) print_line_cursor#35
  (byte*) print_char_cursor#14 ← (byte*) print_char_cursor#84
  return 
  to:@return

(void()) keyboard_init()
keyboard_init: scope:[keyboard_init]  from main
  *((const byte*) CIA1_PORT_A_DDR) ← (number) $ff
  *((const byte*) CIA1_PORT_B_DDR) ← (number) 0
  to:keyboard_init::@return
keyboard_init::@return: scope:[keyboard_init]  from keyboard_init
  return 
  to:@return

(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  (byte) keyboard_matrix_read::rowid#1 ← phi( keyboard_key_pressed/(byte) keyboard_matrix_read::rowid#0 )
  *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask + (byte) keyboard_matrix_read::rowid#1)
  (byte~) keyboard_matrix_read::$0 ← ~ *((const byte*) CIA1_PORT_B)
  (byte) keyboard_matrix_read::row_pressed_bits#0 ← (byte~) keyboard_matrix_read::$0
  (byte) keyboard_matrix_read::return#0 ← (byte) keyboard_matrix_read::row_pressed_bits#0
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  (byte) keyboard_matrix_read::return#3 ← phi( keyboard_matrix_read/(byte) keyboard_matrix_read::return#0 )
  (byte) keyboard_matrix_read::return#1 ← (byte) keyboard_matrix_read::return#3
  return 
  to:@return

(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from main::@1 main::@7
  (byte) keyboard_key_pressed::key#2 ← phi( main::@1/(byte) keyboard_key_pressed::key#0 main::@7/(byte) keyboard_key_pressed::key#1 )
  (number~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key#2 & (number) 7
  (byte) keyboard_key_pressed::colidx#0 ← (number~) keyboard_key_pressed::$0
  (byte~) keyboard_key_pressed::$1 ← (byte) keyboard_key_pressed::key#2 >> (number) 3
  (byte) keyboard_key_pressed::rowidx#0 ← (byte~) keyboard_key_pressed::$1
  (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0
  call keyboard_matrix_read 
  (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#1
  to:keyboard_key_pressed::@2
keyboard_key_pressed::@2: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  (byte) keyboard_key_pressed::colidx#1 ← phi( keyboard_key_pressed/(byte) keyboard_key_pressed::colidx#0 )
  (byte) keyboard_matrix_read::return#4 ← phi( keyboard_key_pressed/(byte) keyboard_matrix_read::return#2 )
  (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#4
  (byte~) keyboard_key_pressed::$3 ← (byte~) keyboard_key_pressed::$2 & *((const byte[8]) keyboard_matrix_col_bitmask + (byte) keyboard_key_pressed::colidx#1)
  (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$3
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@2
  (byte) keyboard_key_pressed::return#4 ← phi( keyboard_key_pressed::@2/(byte) keyboard_key_pressed::return#0 )
  (byte) keyboard_key_pressed::return#1 ← (byte) keyboard_key_pressed::return#4
  return 
  to:@return
@52: scope:[]  from @17
  (byte*) print_screen#36 ← phi( @17/(byte*) print_screen#0 )
  (byte*) print_char_cursor#181 ← phi( @17/(byte*) print_char_cursor#0 )
  (byte*) print_line_cursor#99 ← phi( @17/(byte*) print_line_cursor#0 )
  (byte[(word)MAX_FILES*SIZEOF_ENTRY]) files ← { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
  to:@69

(void()) main()
main: scope:[main]  from @69
  (byte*) print_char_cursor#206 ← phi( @69/(byte*) print_char_cursor#163 )
  (byte*) print_line_cursor#153 ← phi( @69/(byte*) print_line_cursor#82 )
  (byte*) print_screen#34 ← phi( @69/(byte*) print_screen#35 )
  call keyboard_init 
  to:main::@15
main::@15: scope:[main]  from main
  (byte*) print_char_cursor#205 ← phi( main/(byte*) print_char_cursor#206 )
  (byte*) print_line_cursor#152 ← phi( main/(byte*) print_line_cursor#153 )
  (byte*) print_screen#33 ← phi( main/(byte*) print_screen#34 )
  (byte) main::fileEntry1_idx#0 ← (number) 1
  to:main::fileEntry1
main::fileEntry1: scope:[main]  from main::@15
  (byte*) print_char_cursor#204 ← phi( main::@15/(byte*) print_char_cursor#205 )
  (byte*) print_line_cursor#151 ← phi( main::@15/(byte*) print_line_cursor#152 )
  (byte*) print_screen#30 ← phi( main::@15/(byte*) print_screen#33 )
  (byte) main::fileEntry1_idx#1 ← phi( main::@15/(byte) main::fileEntry1_idx#0 )
  (byte) mul8u::a#1 ← (byte) main::fileEntry1_idx#1
  (byte) mul8u::b#0 ← (const byte) SIZEOF_ENTRY
  call mul8u 
  (word) mul8u::return#2 ← (word) mul8u::return#1
  to:main::@16
main::@16: scope:[main]  from main::fileEntry1
  (byte*) print_char_cursor#203 ← phi( main::fileEntry1/(byte*) print_char_cursor#204 )
  (byte*) print_line_cursor#150 ← phi( main::fileEntry1/(byte*) print_line_cursor#151 )
  (byte*) print_screen#27 ← phi( main::fileEntry1/(byte*) print_screen#30 )
  (word) mul8u::return#5 ← phi( main::fileEntry1/(word) mul8u::return#2 )
  (word~) main::fileEntry1_$0 ← (word) mul8u::return#5
  (byte*~) main::fileEntry1_$1 ← (byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0
  (byte*) main::fileEntry1_return#0 ← (byte*~) main::fileEntry1_$1
  to:main::fileEntry1_@return
main::fileEntry1_@return: scope:[main]  from main::@16
  (byte*) print_char_cursor#202 ← phi( main::@16/(byte*) print_char_cursor#203 )
  (byte*) print_line_cursor#149 ← phi( main::@16/(byte*) print_line_cursor#150 )
  (byte*) print_screen#24 ← phi( main::@16/(byte*) print_screen#27 )
  (byte*) main::fileEntry1_return#2 ← phi( main::@16/(byte*) main::fileEntry1_return#0 )
  (byte*) main::fileEntry1_return#1 ← (byte*) main::fileEntry1_return#2
  to:main::@13
main::@13: scope:[main]  from main::fileEntry1_@return
  (byte*) print_char_cursor#201 ← phi( main::fileEntry1_@return/(byte*) print_char_cursor#202 )
  (byte*) print_line_cursor#148 ← phi( main::fileEntry1_@return/(byte*) print_line_cursor#149 )
  (byte*) print_screen#21 ← phi( main::fileEntry1_@return/(byte*) print_screen#24 )
  (byte*) main::fileEntry1_return#3 ← phi( main::fileEntry1_@return/(byte*) main::fileEntry1_return#1 )
  (byte*~) main::$1 ← (byte*) main::fileEntry1_return#3
  (byte*) main::entry1#0 ← (byte*~) main::$1
  (byte) main::fileEntry2_idx#0 ← (number) 2
  to:main::fileEntry2
main::fileEntry2: scope:[main]  from main::@13
  (byte*) print_char_cursor#200 ← phi( main::@13/(byte*) print_char_cursor#201 )
  (byte*) print_line_cursor#146 ← phi( main::@13/(byte*) print_line_cursor#148 )
  (byte*) print_screen#18 ← phi( main::@13/(byte*) print_screen#21 )
  (byte*) main::entry1#7 ← phi( main::@13/(byte*) main::entry1#0 )
  (byte) main::fileEntry2_idx#1 ← phi( main::@13/(byte) main::fileEntry2_idx#0 )
  (byte) mul8u::a#2 ← (byte) main::fileEntry2_idx#1
  (byte) mul8u::b#1 ← (const byte) SIZEOF_ENTRY
  call mul8u 
  (word) mul8u::return#3 ← (word) mul8u::return#1
  to:main::@17
main::@17: scope:[main]  from main::fileEntry2
  (byte*) print_char_cursor#199 ← phi( main::fileEntry2/(byte*) print_char_cursor#200 )
  (byte*) print_line_cursor#132 ← phi( main::fileEntry2/(byte*) print_line_cursor#146 )
  (byte*) print_screen#15 ← phi( main::fileEntry2/(byte*) print_screen#18 )
  (byte*) main::entry1#5 ← phi( main::fileEntry2/(byte*) main::entry1#7 )
  (word) mul8u::return#6 ← phi( main::fileEntry2/(word) mul8u::return#3 )
  (word~) main::fileEntry2_$0 ← (word) mul8u::return#6
  (byte*~) main::fileEntry2_$1 ← (byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0
  (byte*) main::fileEntry2_return#0 ← (byte*~) main::fileEntry2_$1
  to:main::fileEntry2_@return
main::fileEntry2_@return: scope:[main]  from main::@17
  (byte*) print_char_cursor#198 ← phi( main::@17/(byte*) print_char_cursor#199 )
  (byte*) print_line_cursor#116 ← phi( main::@17/(byte*) print_line_cursor#132 )
  (byte*) print_screen#12 ← phi( main::@17/(byte*) print_screen#15 )
  (byte*) main::entry1#3 ← phi( main::@17/(byte*) main::entry1#5 )
  (byte*) main::fileEntry2_return#2 ← phi( main::@17/(byte*) main::fileEntry2_return#0 )
  (byte*) main::fileEntry2_return#1 ← (byte*) main::fileEntry2_return#2
  to:main::@14
main::@14: scope:[main]  from main::fileEntry2_@return
  (byte*) print_char_cursor#182 ← phi( main::fileEntry2_@return/(byte*) print_char_cursor#198 )
  (byte*) print_line_cursor#100 ← phi( main::fileEntry2_@return/(byte*) print_line_cursor#116 )
  (byte*) print_screen#9 ← phi( main::fileEntry2_@return/(byte*) print_screen#12 )
  (byte*) main::entry1#1 ← phi( main::fileEntry2_@return/(byte*) main::entry1#3 )
  (byte*) main::fileEntry2_return#3 ← phi( main::fileEntry2_@return/(byte*) main::fileEntry2_return#1 )
  (byte*~) main::$2 ← (byte*) main::fileEntry2_return#3
  (byte*) main::entry2#0 ← (byte*~) main::$2
  (byte*) initEntry::entry#0 ← (byte*) main::entry1#1
  (byte) initEntry::n#0 ← (number) 0
  call initEntry 
  to:main::@18
main::@18: scope:[main]  from main::@14
  (byte*) main::entry1#10 ← phi( main::@14/(byte*) main::entry1#1 )
  (byte*) print_char_cursor#165 ← phi( main::@14/(byte*) print_char_cursor#182 )
  (byte*) print_line_cursor#83 ← phi( main::@14/(byte*) print_line_cursor#100 )
  (byte*) print_screen#6 ← phi( main::@14/(byte*) print_screen#9 )
  (byte*) main::entry2#1 ← phi( main::@14/(byte*) main::entry2#0 )
  (byte*) initEntry::entry#1 ← (byte*) main::entry2#1
  (byte) initEntry::n#1 ← (number) $11
  call initEntry 
  to:main::@19
main::@19: scope:[main]  from main::@18
  (byte*) main::entry2#16 ← phi( main::@18/(byte*) main::entry2#1 )
  (byte*) main::entry1#9 ← phi( main::@18/(byte*) main::entry1#10 )
  (byte*) print_char_cursor#146 ← phi( main::@18/(byte*) print_char_cursor#165 )
  (byte*) print_line_cursor#64 ← phi( main::@18/(byte*) print_line_cursor#83 )
  (byte*) print_screen#3 ← phi( main::@18/(byte*) print_screen#6 )
  call print_cls 
  to:main::@20
main::@20: scope:[main]  from main::@19
  (byte*) main::entry2#15 ← phi( main::@19/(byte*) main::entry2#16 )
  (byte*) print_screen#31 ← phi( main::@19/(byte*) print_screen#3 )
  (byte*) main::entry1#8 ← phi( main::@19/(byte*) main::entry1#9 )
  (byte*) print_char_cursor#85 ← phi( main::@19/(byte*) print_char_cursor#14 )
  (byte*) print_line_cursor#36 ← phi( main::@19/(byte*) print_line_cursor#4 )
  (byte*) print_line_cursor#5 ← (byte*) print_line_cursor#36
  (byte*) print_char_cursor#15 ← (byte*) print_char_cursor#85
  (byte*) print_str::str#1 ← (const string) main::str
  call print_str 
  to:main::@21
main::@21: scope:[main]  from main::@20
  (byte*) main::entry2#14 ← phi( main::@20/(byte*) main::entry2#15 )
  (byte*) print_screen#28 ← phi( main::@20/(byte*) print_screen#31 )
  (byte*) main::entry1#6 ← phi( main::@20/(byte*) main::entry1#8 )
  (byte*) print_line_cursor#65 ← phi( main::@20/(byte*) print_line_cursor#5 )
  (byte*) print_char_cursor#86 ← phi( main::@20/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#16 ← (byte*) print_char_cursor#86
  call print_ln 
  to:main::@22
main::@22: scope:[main]  from main::@21
  (byte*) main::entry2#13 ← phi( main::@21/(byte*) main::entry2#14 )
  (byte*) print_screen#25 ← phi( main::@21/(byte*) print_screen#28 )
  (byte*) main::entry1#4 ← phi( main::@21/(byte*) main::entry1#6 )
  (byte*) print_char_cursor#87 ← phi( main::@21/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#37 ← phi( main::@21/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#6 ← (byte*) print_line_cursor#37
  (byte*) print_char_cursor#17 ← (byte*) print_char_cursor#87
  call print_ln 
  to:main::@23
main::@23: scope:[main]  from main::@22
  (byte*) main::entry2#12 ← phi( main::@22/(byte*) main::entry2#13 )
  (byte*) print_screen#22 ← phi( main::@22/(byte*) print_screen#25 )
  (byte*) main::entry1#2 ← phi( main::@22/(byte*) main::entry1#4 )
  (byte*) print_char_cursor#88 ← phi( main::@22/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#38 ← phi( main::@22/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#7 ← (byte*) print_line_cursor#38
  (byte*) print_char_cursor#18 ← (byte*) print_char_cursor#88
  (byte*) printEntry::entry#0 ← (byte*) main::entry1#2
  call printEntry 
  to:main::@24
main::@24: scope:[main]  from main::@23
  (byte*) main::entry2#11 ← phi( main::@23/(byte*) main::entry2#12 )
  (byte*) print_screen#19 ← phi( main::@23/(byte*) print_screen#22 )
  (byte*) print_line_cursor#39 ← phi( main::@23/(byte*) print_line_cursor#30 )
  (byte*) print_char_cursor#89 ← phi( main::@23/(byte*) print_char_cursor#70 )
  (byte*) print_char_cursor#19 ← (byte*) print_char_cursor#89
  (byte*) print_line_cursor#8 ← (byte*) print_line_cursor#39
  call print_ln 
  to:main::@25
main::@25: scope:[main]  from main::@24
  (byte*) main::entry2#10 ← phi( main::@24/(byte*) main::entry2#11 )
  (byte*) print_screen#16 ← phi( main::@24/(byte*) print_screen#19 )
  (byte*) print_char_cursor#90 ← phi( main::@24/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#40 ← phi( main::@24/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#9 ← (byte*) print_line_cursor#40
  (byte*) print_char_cursor#20 ← (byte*) print_char_cursor#90
  (byte*) print_str::str#2 ← (const string) main::str1
  call print_str 
  to:main::@26
main::@26: scope:[main]  from main::@25
  (byte*) main::entry2#9 ← phi( main::@25/(byte*) main::entry2#10 )
  (byte*) print_line_cursor#117 ← phi( main::@25/(byte*) print_line_cursor#9 )
  (byte*) print_screen#13 ← phi( main::@25/(byte*) print_screen#16 )
  (byte*) print_char_cursor#91 ← phi( main::@25/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#21 ← (byte*) print_char_cursor#91
  to:main::@1
main::@1: scope:[main]  from main::@26 main::@27
  (byte*) main::entry2#8 ← phi( main::@26/(byte*) main::entry2#9 main::@27/(byte*) main::entry2#7 )
  (byte*) print_char_cursor#183 ← phi( main::@26/(byte*) print_char_cursor#21 main::@27/(byte*) print_char_cursor#166 )
  (byte*) print_line_cursor#101 ← phi( main::@26/(byte*) print_line_cursor#117 main::@27/(byte*) print_line_cursor#84 )
  (byte*) print_screen#10 ← phi( main::@26/(byte*) print_screen#13 main::@27/(byte*) print_screen#7 )
  (byte) keyboard_key_pressed::key#0 ← (const byte) KEY_SPACE
  call keyboard_key_pressed 
  (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#1
  to:main::@27
main::@27: scope:[main]  from main::@1
  (byte*) main::entry2#7 ← phi( main::@1/(byte*) main::entry2#8 )
  (byte*) print_char_cursor#166 ← phi( main::@1/(byte*) print_char_cursor#183 )
  (byte*) print_line_cursor#84 ← phi( main::@1/(byte*) print_line_cursor#101 )
  (byte*) print_screen#7 ← phi( main::@1/(byte*) print_screen#10 )
  (byte) keyboard_key_pressed::return#5 ← phi( main::@1/(byte) keyboard_key_pressed::return#2 )
  (byte~) main::$20 ← (byte) keyboard_key_pressed::return#5
  (bool~) main::$21 ← (byte~) main::$20 == (number) 0
  if((bool~) main::$21) goto main::@1
  to:main::@3
main::@3: scope:[main]  from main::@27
  (byte*) main::entry2#6 ← phi( main::@27/(byte*) main::entry2#7 )
  (byte*) print_char_cursor#147 ← phi( main::@27/(byte*) print_char_cursor#166 )
  (byte*) print_line_cursor#66 ← phi( main::@27/(byte*) print_line_cursor#84 )
  (byte*) print_screen#4 ← phi( main::@27/(byte*) print_screen#7 )
  call print_cls 
  to:main::@28
main::@28: scope:[main]  from main::@3
  (byte*) print_screen#32 ← phi( main::@3/(byte*) print_screen#4 )
  (byte*) main::entry2#5 ← phi( main::@3/(byte*) main::entry2#6 )
  (byte*) print_char_cursor#92 ← phi( main::@3/(byte*) print_char_cursor#14 )
  (byte*) print_line_cursor#41 ← phi( main::@3/(byte*) print_line_cursor#4 )
  (byte*) print_line_cursor#10 ← (byte*) print_line_cursor#41
  (byte*) print_char_cursor#22 ← (byte*) print_char_cursor#92
  (byte*) print_str::str#3 ← (const string) main::str2
  call print_str 
  to:main::@29
main::@29: scope:[main]  from main::@28
  (byte*) print_screen#29 ← phi( main::@28/(byte*) print_screen#32 )
  (byte*) main::entry2#4 ← phi( main::@28/(byte*) main::entry2#5 )
  (byte*) print_line_cursor#67 ← phi( main::@28/(byte*) print_line_cursor#10 )
  (byte*) print_char_cursor#93 ← phi( main::@28/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#23 ← (byte*) print_char_cursor#93
  call print_ln 
  to:main::@30
main::@30: scope:[main]  from main::@29
  (byte*) print_screen#26 ← phi( main::@29/(byte*) print_screen#29 )
  (byte*) main::entry2#3 ← phi( main::@29/(byte*) main::entry2#4 )
  (byte*) print_char_cursor#94 ← phi( main::@29/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#42 ← phi( main::@29/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#11 ← (byte*) print_line_cursor#42
  (byte*) print_char_cursor#24 ← (byte*) print_char_cursor#94
  call print_ln 
  to:main::@31
main::@31: scope:[main]  from main::@30
  (byte*) print_screen#23 ← phi( main::@30/(byte*) print_screen#26 )
  (byte*) main::entry2#2 ← phi( main::@30/(byte*) main::entry2#3 )
  (byte*) print_char_cursor#95 ← phi( main::@30/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#43 ← phi( main::@30/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#12 ← (byte*) print_line_cursor#43
  (byte*) print_char_cursor#25 ← (byte*) print_char_cursor#95
  (byte*) printEntry::entry#1 ← (byte*) main::entry2#2
  call printEntry 
  to:main::@32
main::@32: scope:[main]  from main::@31
  (byte*) print_screen#20 ← phi( main::@31/(byte*) print_screen#23 )
  (byte*) print_line_cursor#44 ← phi( main::@31/(byte*) print_line_cursor#30 )
  (byte*) print_char_cursor#96 ← phi( main::@31/(byte*) print_char_cursor#70 )
  (byte*) print_char_cursor#26 ← (byte*) print_char_cursor#96
  (byte*) print_line_cursor#13 ← (byte*) print_line_cursor#44
  call print_ln 
  to:main::@33
main::@33: scope:[main]  from main::@32
  (byte*) print_screen#17 ← phi( main::@32/(byte*) print_screen#20 )
  (byte*) print_char_cursor#97 ← phi( main::@32/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#45 ← phi( main::@32/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#14 ← (byte*) print_line_cursor#45
  (byte*) print_char_cursor#27 ← (byte*) print_char_cursor#97
  (byte*) print_str::str#4 ← (const string) main::str3
  call print_str 
  to:main::@34
main::@34: scope:[main]  from main::@33
  (byte*) print_line_cursor#118 ← phi( main::@33/(byte*) print_line_cursor#14 )
  (byte*) print_screen#14 ← phi( main::@33/(byte*) print_screen#17 )
  (byte*) print_char_cursor#98 ← phi( main::@33/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#28 ← (byte*) print_char_cursor#98
  to:main::@7
main::@7: scope:[main]  from main::@34 main::@35
  (byte*) print_char_cursor#184 ← phi( main::@34/(byte*) print_char_cursor#28 main::@35/(byte*) print_char_cursor#167 )
  (byte*) print_line_cursor#102 ← phi( main::@34/(byte*) print_line_cursor#118 main::@35/(byte*) print_line_cursor#85 )
  (byte*) print_screen#11 ← phi( main::@34/(byte*) print_screen#14 main::@35/(byte*) print_screen#8 )
  (byte) keyboard_key_pressed::key#1 ← (const byte) KEY_SPACE
  call keyboard_key_pressed 
  (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#1
  to:main::@35
main::@35: scope:[main]  from main::@7
  (byte*) print_char_cursor#167 ← phi( main::@7/(byte*) print_char_cursor#184 )
  (byte*) print_line_cursor#85 ← phi( main::@7/(byte*) print_line_cursor#102 )
  (byte*) print_screen#8 ← phi( main::@7/(byte*) print_screen#11 )
  (byte) keyboard_key_pressed::return#6 ← phi( main::@7/(byte) keyboard_key_pressed::return#3 )
  (byte~) main::$22 ← (byte) keyboard_key_pressed::return#6
  (bool~) main::$23 ← (byte~) main::$22 == (number) 0
  if((bool~) main::$23) goto main::@7
  to:main::@9
main::@9: scope:[main]  from main::@35
  (byte*) print_char_cursor#148 ← phi( main::@35/(byte*) print_char_cursor#167 )
  (byte*) print_line_cursor#68 ← phi( main::@35/(byte*) print_line_cursor#85 )
  (byte*) print_screen#5 ← phi( main::@35/(byte*) print_screen#8 )
  call print_cls 
  to:main::@36
main::@36: scope:[main]  from main::@9
  (byte*) print_char_cursor#99 ← phi( main::@9/(byte*) print_char_cursor#14 )
  (byte*) print_line_cursor#46 ← phi( main::@9/(byte*) print_line_cursor#4 )
  (byte*) print_line_cursor#15 ← (byte*) print_line_cursor#46
  (byte*) print_char_cursor#29 ← (byte*) print_char_cursor#99
  to:main::@return
main::@return: scope:[main]  from main::@36
  (byte*) print_char_cursor#100 ← phi( main::@36/(byte*) print_char_cursor#29 )
  (byte*) print_line_cursor#47 ← phi( main::@36/(byte*) print_line_cursor#15 )
  (byte*) print_line_cursor#16 ← (byte*) print_line_cursor#47
  (byte*) print_char_cursor#30 ← (byte*) print_char_cursor#100
  return 
  to:@return

(void()) initEntry((byte*) initEntry::entry , (byte) initEntry::n)
initEntry: scope:[initEntry]  from main::@14 main::@18
  (byte) initEntry::n#41 ← phi( main::@14/(byte) initEntry::n#0 main::@18/(byte) initEntry::n#1 )
  (byte*) initEntry::entry#2 ← phi( main::@14/(byte*) initEntry::entry#0 main::@18/(byte*) initEntry::entry#1 )
  (byte*) initEntry::entryBufDisk1_entry#0 ← (byte*) initEntry::entry#2
  to:initEntry::entryBufDisk1
initEntry::entryBufDisk1: scope:[initEntry]  from initEntry
  (byte*) initEntry::entry#27 ← phi( initEntry/(byte*) initEntry::entry#2 )
  (byte) initEntry::n#28 ← phi( initEntry/(byte) initEntry::n#41 )
  (byte*) initEntry::entryBufDisk1_entry#1 ← phi( initEntry/(byte*) initEntry::entryBufDisk1_entry#0 )
  (byte*~) initEntry::entryBufDisk1_$0 ← (byte*) initEntry::entryBufDisk1_entry#1 + (number) 0
  (byte**~) initEntry::entryBufDisk1_$1 ← ((byte**)) (byte*~) initEntry::entryBufDisk1_$0
  (byte**) initEntry::entryBufDisk1_return#0 ← (byte**~) initEntry::entryBufDisk1_$1
  to:initEntry::entryBufDisk1_@return
initEntry::entryBufDisk1_@return: scope:[initEntry]  from initEntry::entryBufDisk1
  (byte*) initEntry::entry#15 ← phi( initEntry::entryBufDisk1/(byte*) initEntry::entry#27 )
  (byte) initEntry::n#15 ← phi( initEntry::entryBufDisk1/(byte) initEntry::n#28 )
  (byte**) initEntry::entryBufDisk1_return#2 ← phi( initEntry::entryBufDisk1/(byte**) initEntry::entryBufDisk1_return#0 )
  (byte**) initEntry::entryBufDisk1_return#1 ← (byte**) initEntry::entryBufDisk1_return#2
  to:initEntry::@1
initEntry::@1: scope:[initEntry]  from initEntry::entryBufDisk1_@return
  (byte*) initEntry::entry#3 ← phi( initEntry::entryBufDisk1_@return/(byte*) initEntry::entry#15 )
  (byte) initEntry::n#2 ← phi( initEntry::entryBufDisk1_@return/(byte) initEntry::n#15 )
  (byte**) initEntry::entryBufDisk1_return#3 ← phi( initEntry::entryBufDisk1_@return/(byte**) initEntry::entryBufDisk1_return#1 )
  (byte**~) initEntry::$0 ← (byte**) initEntry::entryBufDisk1_return#3
  (number~) initEntry::$1 ← (number) $1111 + (byte) initEntry::n#2
  *((byte**~) initEntry::$0) ← ((byte*)) (number~) initEntry::$1
  (byte*) initEntry::entryBufEdit1_entry#0 ← (byte*) initEntry::entry#3
  to:initEntry::entryBufEdit1
initEntry::entryBufEdit1: scope:[initEntry]  from initEntry::@1
  (byte*) initEntry::entry#28 ← phi( initEntry::@1/(byte*) initEntry::entry#3 )
  (byte) initEntry::n#29 ← phi( initEntry::@1/(byte) initEntry::n#2 )
  (byte*) initEntry::entryBufEdit1_entry#1 ← phi( initEntry::@1/(byte*) initEntry::entryBufEdit1_entry#0 )
  (byte*~) initEntry::entryBufEdit1_$0 ← (byte*) initEntry::entryBufEdit1_entry#1 + (number) 2
  (byte**~) initEntry::entryBufEdit1_$1 ← ((byte**)) (byte*~) initEntry::entryBufEdit1_$0
  (byte**) initEntry::entryBufEdit1_return#0 ← (byte**~) initEntry::entryBufEdit1_$1
  to:initEntry::entryBufEdit1_@return
initEntry::entryBufEdit1_@return: scope:[initEntry]  from initEntry::entryBufEdit1
  (byte*) initEntry::entry#16 ← phi( initEntry::entryBufEdit1/(byte*) initEntry::entry#28 )
  (byte) initEntry::n#16 ← phi( initEntry::entryBufEdit1/(byte) initEntry::n#29 )
  (byte**) initEntry::entryBufEdit1_return#2 ← phi( initEntry::entryBufEdit1/(byte**) initEntry::entryBufEdit1_return#0 )
  (byte**) initEntry::entryBufEdit1_return#1 ← (byte**) initEntry::entryBufEdit1_return#2
  to:initEntry::@2
initEntry::@2: scope:[initEntry]  from initEntry::entryBufEdit1_@return
  (byte*) initEntry::entry#4 ← phi( initEntry::entryBufEdit1_@return/(byte*) initEntry::entry#16 )
  (byte) initEntry::n#3 ← phi( initEntry::entryBufEdit1_@return/(byte) initEntry::n#16 )
  (byte**) initEntry::entryBufEdit1_return#3 ← phi( initEntry::entryBufEdit1_@return/(byte**) initEntry::entryBufEdit1_return#1 )
  (byte**~) initEntry::$2 ← (byte**) initEntry::entryBufEdit1_return#3
  (number~) initEntry::$3 ← (number) $2222 + (byte) initEntry::n#3
  *((byte**~) initEntry::$2) ← ((byte*)) (number~) initEntry::$3
  (byte*) initEntry::entryTsLen1_entry#0 ← (byte*) initEntry::entry#4
  to:initEntry::entryTsLen1
initEntry::entryTsLen1: scope:[initEntry]  from initEntry::@2
  (byte*) initEntry::entry#29 ← phi( initEntry::@2/(byte*) initEntry::entry#4 )
  (byte) initEntry::n#30 ← phi( initEntry::@2/(byte) initEntry::n#3 )
  (byte*) initEntry::entryTsLen1_entry#1 ← phi( initEntry::@2/(byte*) initEntry::entryTsLen1_entry#0 )
  (byte*~) initEntry::entryTsLen1_$0 ← (byte*) initEntry::entryTsLen1_entry#1 + (number) 4
  (word*~) initEntry::entryTsLen1_$1 ← ((word*)) (byte*~) initEntry::entryTsLen1_$0
  (word*) initEntry::entryTsLen1_return#0 ← (word*~) initEntry::entryTsLen1_$1
  to:initEntry::entryTsLen1_@return
initEntry::entryTsLen1_@return: scope:[initEntry]  from initEntry::entryTsLen1
  (byte*) initEntry::entry#17 ← phi( initEntry::entryTsLen1/(byte*) initEntry::entry#29 )
  (byte) initEntry::n#17 ← phi( initEntry::entryTsLen1/(byte) initEntry::n#30 )
  (word*) initEntry::entryTsLen1_return#2 ← phi( initEntry::entryTsLen1/(word*) initEntry::entryTsLen1_return#0 )
  (word*) initEntry::entryTsLen1_return#1 ← (word*) initEntry::entryTsLen1_return#2
  to:initEntry::@3
initEntry::@3: scope:[initEntry]  from initEntry::entryTsLen1_@return
  (byte*) initEntry::entry#5 ← phi( initEntry::entryTsLen1_@return/(byte*) initEntry::entry#17 )
  (byte) initEntry::n#4 ← phi( initEntry::entryTsLen1_@return/(byte) initEntry::n#17 )
  (word*) initEntry::entryTsLen1_return#3 ← phi( initEntry::entryTsLen1_@return/(word*) initEntry::entryTsLen1_return#1 )
  (word*~) initEntry::$4 ← (word*) initEntry::entryTsLen1_return#3
  (number~) initEntry::$5 ← (number) $3333 + (byte) initEntry::n#4
  *((word*~) initEntry::$4) ← (number~) initEntry::$5
  (byte*) initEntry::entryTsOrder1_entry#0 ← (byte*) initEntry::entry#5
  to:initEntry::entryTsOrder1
initEntry::entryTsOrder1: scope:[initEntry]  from initEntry::@3
  (byte*) initEntry::entry#30 ← phi( initEntry::@3/(byte*) initEntry::entry#5 )
  (byte) initEntry::n#31 ← phi( initEntry::@3/(byte) initEntry::n#4 )
  (byte*) initEntry::entryTsOrder1_entry#1 ← phi( initEntry::@3/(byte*) initEntry::entryTsOrder1_entry#0 )
  (byte*~) initEntry::entryTsOrder1_$0 ← (byte*) initEntry::entryTsOrder1_entry#1 + (number) 6
  (word**~) initEntry::entryTsOrder1_$1 ← ((word**)) (byte*~) initEntry::entryTsOrder1_$0
  (word**) initEntry::entryTsOrder1_return#0 ← (word**~) initEntry::entryTsOrder1_$1
  to:initEntry::entryTsOrder1_@return
initEntry::entryTsOrder1_@return: scope:[initEntry]  from initEntry::entryTsOrder1
  (byte*) initEntry::entry#18 ← phi( initEntry::entryTsOrder1/(byte*) initEntry::entry#30 )
  (byte) initEntry::n#18 ← phi( initEntry::entryTsOrder1/(byte) initEntry::n#31 )
  (word**) initEntry::entryTsOrder1_return#2 ← phi( initEntry::entryTsOrder1/(word**) initEntry::entryTsOrder1_return#0 )
  (word**) initEntry::entryTsOrder1_return#1 ← (word**) initEntry::entryTsOrder1_return#2
  to:initEntry::@4
initEntry::@4: scope:[initEntry]  from initEntry::entryTsOrder1_@return
  (byte*) initEntry::entry#6 ← phi( initEntry::entryTsOrder1_@return/(byte*) initEntry::entry#18 )
  (byte) initEntry::n#5 ← phi( initEntry::entryTsOrder1_@return/(byte) initEntry::n#18 )
  (word**) initEntry::entryTsOrder1_return#3 ← phi( initEntry::entryTsOrder1_@return/(word**) initEntry::entryTsOrder1_return#1 )
  (word**~) initEntry::$6 ← (word**) initEntry::entryTsOrder1_return#3
  (number~) initEntry::$7 ← (number) $4444 + (byte) initEntry::n#5
  *((word**~) initEntry::$6) ← ((word*)) (number~) initEntry::$7
  (byte*) initEntry::entryTLastLink1_entry#0 ← (byte*) initEntry::entry#6
  to:initEntry::entryTLastLink1
initEntry::entryTLastLink1: scope:[initEntry]  from initEntry::@4
  (byte*) initEntry::entry#31 ← phi( initEntry::@4/(byte*) initEntry::entry#6 )
  (byte) initEntry::n#32 ← phi( initEntry::@4/(byte) initEntry::n#5 )
  (byte*) initEntry::entryTLastLink1_entry#1 ← phi( initEntry::@4/(byte*) initEntry::entryTLastLink1_entry#0 )
  (byte*~) initEntry::entryTLastLink1_$0 ← (byte*) initEntry::entryTLastLink1_entry#1 + (number) 8
  (byte*~) initEntry::entryTLastLink1_$1 ← ((byte*)) (byte*~) initEntry::entryTLastLink1_$0
  (byte*) initEntry::entryTLastLink1_return#0 ← (byte*~) initEntry::entryTLastLink1_$1
  to:initEntry::entryTLastLink1_@return
initEntry::entryTLastLink1_@return: scope:[initEntry]  from initEntry::entryTLastLink1
  (byte*) initEntry::entry#19 ← phi( initEntry::entryTLastLink1/(byte*) initEntry::entry#31 )
  (byte) initEntry::n#19 ← phi( initEntry::entryTLastLink1/(byte) initEntry::n#32 )
  (byte*) initEntry::entryTLastLink1_return#2 ← phi( initEntry::entryTLastLink1/(byte*) initEntry::entryTLastLink1_return#0 )
  (byte*) initEntry::entryTLastLink1_return#1 ← (byte*) initEntry::entryTLastLink1_return#2
  to:initEntry::@5
initEntry::@5: scope:[initEntry]  from initEntry::entryTLastLink1_@return
  (byte*) initEntry::entry#7 ← phi( initEntry::entryTLastLink1_@return/(byte*) initEntry::entry#19 )
  (byte) initEntry::n#6 ← phi( initEntry::entryTLastLink1_@return/(byte) initEntry::n#19 )
  (byte*) initEntry::entryTLastLink1_return#3 ← phi( initEntry::entryTLastLink1_@return/(byte*) initEntry::entryTLastLink1_return#1 )
  (byte*~) initEntry::$8 ← (byte*) initEntry::entryTLastLink1_return#3
  (number~) initEntry::$9 ← (number) $55 + (byte) initEntry::n#6
  *((byte*~) initEntry::$8) ← (number~) initEntry::$9
  (byte*) initEntry::entrySLastLink1_entry#0 ← (byte*) initEntry::entry#7
  to:initEntry::entrySLastLink1
initEntry::entrySLastLink1: scope:[initEntry]  from initEntry::@5
  (byte*) initEntry::entry#32 ← phi( initEntry::@5/(byte*) initEntry::entry#7 )
  (byte) initEntry::n#33 ← phi( initEntry::@5/(byte) initEntry::n#6 )
  (byte*) initEntry::entrySLastLink1_entry#1 ← phi( initEntry::@5/(byte*) initEntry::entrySLastLink1_entry#0 )
  (byte*~) initEntry::entrySLastLink1_$0 ← (byte*) initEntry::entrySLastLink1_entry#1 + (number) 9
  (byte*~) initEntry::entrySLastLink1_$1 ← ((byte*)) (byte*~) initEntry::entrySLastLink1_$0
  (byte*) initEntry::entrySLastLink1_return#0 ← (byte*~) initEntry::entrySLastLink1_$1
  to:initEntry::entrySLastLink1_@return
initEntry::entrySLastLink1_@return: scope:[initEntry]  from initEntry::entrySLastLink1
  (byte*) initEntry::entry#20 ← phi( initEntry::entrySLastLink1/(byte*) initEntry::entry#32 )
  (byte) initEntry::n#20 ← phi( initEntry::entrySLastLink1/(byte) initEntry::n#33 )
  (byte*) initEntry::entrySLastLink1_return#2 ← phi( initEntry::entrySLastLink1/(byte*) initEntry::entrySLastLink1_return#0 )
  (byte*) initEntry::entrySLastLink1_return#1 ← (byte*) initEntry::entrySLastLink1_return#2
  to:initEntry::@6
initEntry::@6: scope:[initEntry]  from initEntry::entrySLastLink1_@return
  (byte*) initEntry::entry#8 ← phi( initEntry::entrySLastLink1_@return/(byte*) initEntry::entry#20 )
  (byte) initEntry::n#7 ← phi( initEntry::entrySLastLink1_@return/(byte) initEntry::n#20 )
  (byte*) initEntry::entrySLastLink1_return#3 ← phi( initEntry::entrySLastLink1_@return/(byte*) initEntry::entrySLastLink1_return#1 )
  (byte*~) initEntry::$10 ← (byte*) initEntry::entrySLastLink1_return#3
  (number~) initEntry::$11 ← (number) $66 + (byte) initEntry::n#7
  *((byte*~) initEntry::$10) ← (number~) initEntry::$11
  (byte*) initEntry::entryBFlag1_entry#0 ← (byte*) initEntry::entry#8
  to:initEntry::entryBFlag1
initEntry::entryBFlag1: scope:[initEntry]  from initEntry::@6
  (byte*) initEntry::entry#33 ← phi( initEntry::@6/(byte*) initEntry::entry#8 )
  (byte) initEntry::n#34 ← phi( initEntry::@6/(byte) initEntry::n#7 )
  (byte*) initEntry::entryBFlag1_entry#1 ← phi( initEntry::@6/(byte*) initEntry::entryBFlag1_entry#0 )
  (byte*~) initEntry::entryBFlag1_$0 ← (byte*) initEntry::entryBFlag1_entry#1 + (number) $a
  (byte*~) initEntry::entryBFlag1_$1 ← ((byte*)) (byte*~) initEntry::entryBFlag1_$0
  (byte*) initEntry::entryBFlag1_return#0 ← (byte*~) initEntry::entryBFlag1_$1
  to:initEntry::entryBFlag1_@return
initEntry::entryBFlag1_@return: scope:[initEntry]  from initEntry::entryBFlag1
  (byte*) initEntry::entry#21 ← phi( initEntry::entryBFlag1/(byte*) initEntry::entry#33 )
  (byte) initEntry::n#21 ← phi( initEntry::entryBFlag1/(byte) initEntry::n#34 )
  (byte*) initEntry::entryBFlag1_return#2 ← phi( initEntry::entryBFlag1/(byte*) initEntry::entryBFlag1_return#0 )
  (byte*) initEntry::entryBFlag1_return#1 ← (byte*) initEntry::entryBFlag1_return#2
  to:initEntry::@7
initEntry::@7: scope:[initEntry]  from initEntry::entryBFlag1_@return
  (byte*) initEntry::entry#9 ← phi( initEntry::entryBFlag1_@return/(byte*) initEntry::entry#21 )
  (byte) initEntry::n#8 ← phi( initEntry::entryBFlag1_@return/(byte) initEntry::n#21 )
  (byte*) initEntry::entryBFlag1_return#3 ← phi( initEntry::entryBFlag1_@return/(byte*) initEntry::entryBFlag1_return#1 )
  (byte*~) initEntry::$12 ← (byte*) initEntry::entryBFlag1_return#3
  (number~) initEntry::$13 ← (number) $77 + (byte) initEntry::n#8
  *((byte*~) initEntry::$12) ← (number~) initEntry::$13
  (byte*) initEntry::entryBError1_entry#0 ← (byte*) initEntry::entry#9
  to:initEntry::entryBError1
initEntry::entryBError1: scope:[initEntry]  from initEntry::@7
  (byte*) initEntry::entry#34 ← phi( initEntry::@7/(byte*) initEntry::entry#9 )
  (byte) initEntry::n#35 ← phi( initEntry::@7/(byte) initEntry::n#8 )
  (byte*) initEntry::entryBError1_entry#1 ← phi( initEntry::@7/(byte*) initEntry::entryBError1_entry#0 )
  (byte*~) initEntry::entryBError1_$0 ← (byte*) initEntry::entryBError1_entry#1 + (number) $b
  (byte*) initEntry::entryBError1_return#0 ← (byte*~) initEntry::entryBError1_$0
  to:initEntry::entryBError1_@return
initEntry::entryBError1_@return: scope:[initEntry]  from initEntry::entryBError1
  (byte*) initEntry::entry#22 ← phi( initEntry::entryBError1/(byte*) initEntry::entry#34 )
  (byte) initEntry::n#22 ← phi( initEntry::entryBError1/(byte) initEntry::n#35 )
  (byte*) initEntry::entryBError1_return#2 ← phi( initEntry::entryBError1/(byte*) initEntry::entryBError1_return#0 )
  (byte*) initEntry::entryBError1_return#1 ← (byte*) initEntry::entryBError1_return#2
  to:initEntry::@8
initEntry::@8: scope:[initEntry]  from initEntry::entryBError1_@return
  (byte*) initEntry::entry#10 ← phi( initEntry::entryBError1_@return/(byte*) initEntry::entry#22 )
  (byte) initEntry::n#9 ← phi( initEntry::entryBError1_@return/(byte) initEntry::n#22 )
  (byte*) initEntry::entryBError1_return#3 ← phi( initEntry::entryBError1_@return/(byte*) initEntry::entryBError1_return#1 )
  (byte*~) initEntry::$14 ← (byte*) initEntry::entryBError1_return#3
  (number~) initEntry::$15 ← (number) $88 + (byte) initEntry::n#9
  *((byte*~) initEntry::$14) ← (number~) initEntry::$15
  (byte*) initEntry::entryUCross1_entry#0 ← (byte*) initEntry::entry#10
  to:initEntry::entryUCross1
initEntry::entryUCross1: scope:[initEntry]  from initEntry::@8
  (byte*) initEntry::entry#35 ← phi( initEntry::@8/(byte*) initEntry::entry#10 )
  (byte) initEntry::n#36 ← phi( initEntry::@8/(byte) initEntry::n#9 )
  (byte*) initEntry::entryUCross1_entry#1 ← phi( initEntry::@8/(byte*) initEntry::entryUCross1_entry#0 )
  (byte*~) initEntry::entryUCross1_$0 ← (byte*) initEntry::entryUCross1_entry#1 + (number) $c
  (word*~) initEntry::entryUCross1_$1 ← ((word*)) (byte*~) initEntry::entryUCross1_$0
  (word*) initEntry::entryUCross1_return#0 ← (word*~) initEntry::entryUCross1_$1
  to:initEntry::entryUCross1_@return
initEntry::entryUCross1_@return: scope:[initEntry]  from initEntry::entryUCross1
  (byte*) initEntry::entry#23 ← phi( initEntry::entryUCross1/(byte*) initEntry::entry#35 )
  (byte) initEntry::n#23 ← phi( initEntry::entryUCross1/(byte) initEntry::n#36 )
  (word*) initEntry::entryUCross1_return#2 ← phi( initEntry::entryUCross1/(word*) initEntry::entryUCross1_return#0 )
  (word*) initEntry::entryUCross1_return#1 ← (word*) initEntry::entryUCross1_return#2
  to:initEntry::@9
initEntry::@9: scope:[initEntry]  from initEntry::entryUCross1_@return
  (byte*) initEntry::entry#11 ← phi( initEntry::entryUCross1_@return/(byte*) initEntry::entry#23 )
  (byte) initEntry::n#10 ← phi( initEntry::entryUCross1_@return/(byte) initEntry::n#23 )
  (word*) initEntry::entryUCross1_return#3 ← phi( initEntry::entryUCross1_@return/(word*) initEntry::entryUCross1_return#1 )
  (word*~) initEntry::$16 ← (word*) initEntry::entryUCross1_return#3
  (number~) initEntry::$17 ← (number) $9999 + (byte) initEntry::n#10
  *((word*~) initEntry::$16) ← (number~) initEntry::$17
  (byte*) initEntry::entryBAddrLo1_entry#0 ← (byte*) initEntry::entry#11
  to:initEntry::entryBAddrLo1
initEntry::entryBAddrLo1: scope:[initEntry]  from initEntry::@9
  (byte*) initEntry::entry#36 ← phi( initEntry::@9/(byte*) initEntry::entry#11 )
  (byte) initEntry::n#37 ← phi( initEntry::@9/(byte) initEntry::n#10 )
  (byte*) initEntry::entryBAddrLo1_entry#1 ← phi( initEntry::@9/(byte*) initEntry::entryBAddrLo1_entry#0 )
  (byte*~) initEntry::entryBAddrLo1_$0 ← (byte*) initEntry::entryBAddrLo1_entry#1 + (number) $e
  (byte*~) initEntry::entryBAddrLo1_$1 ← ((byte*)) (byte*~) initEntry::entryBAddrLo1_$0
  (byte*) initEntry::entryBAddrLo1_return#0 ← (byte*~) initEntry::entryBAddrLo1_$1
  to:initEntry::entryBAddrLo1_@return
initEntry::entryBAddrLo1_@return: scope:[initEntry]  from initEntry::entryBAddrLo1
  (byte*) initEntry::entry#24 ← phi( initEntry::entryBAddrLo1/(byte*) initEntry::entry#36 )
  (byte) initEntry::n#24 ← phi( initEntry::entryBAddrLo1/(byte) initEntry::n#37 )
  (byte*) initEntry::entryBAddrLo1_return#2 ← phi( initEntry::entryBAddrLo1/(byte*) initEntry::entryBAddrLo1_return#0 )
  (byte*) initEntry::entryBAddrLo1_return#1 ← (byte*) initEntry::entryBAddrLo1_return#2
  to:initEntry::@10
initEntry::@10: scope:[initEntry]  from initEntry::entryBAddrLo1_@return
  (byte*) initEntry::entry#12 ← phi( initEntry::entryBAddrLo1_@return/(byte*) initEntry::entry#24 )
  (byte) initEntry::n#11 ← phi( initEntry::entryBAddrLo1_@return/(byte) initEntry::n#24 )
  (byte*) initEntry::entryBAddrLo1_return#3 ← phi( initEntry::entryBAddrLo1_@return/(byte*) initEntry::entryBAddrLo1_return#1 )
  (byte*~) initEntry::$18 ← (byte*) initEntry::entryBAddrLo1_return#3
  (number~) initEntry::$19 ← (number) $aa + (byte) initEntry::n#11
  *((byte*~) initEntry::$18) ← (number~) initEntry::$19
  (byte*) initEntry::entryBAddrHi1_entry#0 ← (byte*) initEntry::entry#12
  to:initEntry::entryBAddrHi1
initEntry::entryBAddrHi1: scope:[initEntry]  from initEntry::@10
  (byte*) initEntry::entry#37 ← phi( initEntry::@10/(byte*) initEntry::entry#12 )
  (byte) initEntry::n#38 ← phi( initEntry::@10/(byte) initEntry::n#11 )
  (byte*) initEntry::entryBAddrHi1_entry#1 ← phi( initEntry::@10/(byte*) initEntry::entryBAddrHi1_entry#0 )
  (byte*~) initEntry::entryBAddrHi1_$0 ← (byte*) initEntry::entryBAddrHi1_entry#1 + (number) $f
  (byte*~) initEntry::entryBAddrHi1_$1 ← ((byte*)) (byte*~) initEntry::entryBAddrHi1_$0
  (byte*) initEntry::entryBAddrHi1_return#0 ← (byte*~) initEntry::entryBAddrHi1_$1
  to:initEntry::entryBAddrHi1_@return
initEntry::entryBAddrHi1_@return: scope:[initEntry]  from initEntry::entryBAddrHi1
  (byte*) initEntry::entry#25 ← phi( initEntry::entryBAddrHi1/(byte*) initEntry::entry#37 )
  (byte) initEntry::n#25 ← phi( initEntry::entryBAddrHi1/(byte) initEntry::n#38 )
  (byte*) initEntry::entryBAddrHi1_return#2 ← phi( initEntry::entryBAddrHi1/(byte*) initEntry::entryBAddrHi1_return#0 )
  (byte*) initEntry::entryBAddrHi1_return#1 ← (byte*) initEntry::entryBAddrHi1_return#2
  to:initEntry::@11
initEntry::@11: scope:[initEntry]  from initEntry::entryBAddrHi1_@return
  (byte*) initEntry::entry#13 ← phi( initEntry::entryBAddrHi1_@return/(byte*) initEntry::entry#25 )
  (byte) initEntry::n#12 ← phi( initEntry::entryBAddrHi1_@return/(byte) initEntry::n#25 )
  (byte*) initEntry::entryBAddrHi1_return#3 ← phi( initEntry::entryBAddrHi1_@return/(byte*) initEntry::entryBAddrHi1_return#1 )
  (byte*~) initEntry::$20 ← (byte*) initEntry::entryBAddrHi1_return#3
  (number~) initEntry::$21 ← (number) $bb + (byte) initEntry::n#12
  *((byte*~) initEntry::$20) ← (number~) initEntry::$21
  (byte*) initEntry::entryTHi1_entry#0 ← (byte*) initEntry::entry#13
  to:initEntry::entryTHi1
initEntry::entryTHi1: scope:[initEntry]  from initEntry::@11
  (byte*) initEntry::entry#38 ← phi( initEntry::@11/(byte*) initEntry::entry#13 )
  (byte) initEntry::n#39 ← phi( initEntry::@11/(byte) initEntry::n#12 )
  (byte*) initEntry::entryTHi1_entry#1 ← phi( initEntry::@11/(byte*) initEntry::entryTHi1_entry#0 )
  (byte*~) initEntry::entryTHi1_$0 ← (byte*) initEntry::entryTHi1_entry#1 + (number) $10
  (byte*~) initEntry::entryTHi1_$1 ← ((byte*)) (byte*~) initEntry::entryTHi1_$0
  (byte*) initEntry::entryTHi1_return#0 ← (byte*~) initEntry::entryTHi1_$1
  to:initEntry::entryTHi1_@return
initEntry::entryTHi1_@return: scope:[initEntry]  from initEntry::entryTHi1
  (byte*) initEntry::entry#26 ← phi( initEntry::entryTHi1/(byte*) initEntry::entry#38 )
  (byte) initEntry::n#26 ← phi( initEntry::entryTHi1/(byte) initEntry::n#39 )
  (byte*) initEntry::entryTHi1_return#2 ← phi( initEntry::entryTHi1/(byte*) initEntry::entryTHi1_return#0 )
  (byte*) initEntry::entryTHi1_return#1 ← (byte*) initEntry::entryTHi1_return#2
  to:initEntry::@12
initEntry::@12: scope:[initEntry]  from initEntry::entryTHi1_@return
  (byte*) initEntry::entry#14 ← phi( initEntry::entryTHi1_@return/(byte*) initEntry::entry#26 )
  (byte) initEntry::n#13 ← phi( initEntry::entryTHi1_@return/(byte) initEntry::n#26 )
  (byte*) initEntry::entryTHi1_return#3 ← phi( initEntry::entryTHi1_@return/(byte*) initEntry::entryTHi1_return#1 )
  (byte*~) initEntry::$22 ← (byte*) initEntry::entryTHi1_return#3
  (number~) initEntry::$23 ← (number) $cc + (byte) initEntry::n#13
  *((byte*~) initEntry::$22) ← (number~) initEntry::$23
  (byte*) initEntry::entryTLo1_entry#0 ← (byte*) initEntry::entry#14
  to:initEntry::entryTLo1
initEntry::entryTLo1: scope:[initEntry]  from initEntry::@12
  (byte) initEntry::n#40 ← phi( initEntry::@12/(byte) initEntry::n#13 )
  (byte*) initEntry::entryTLo1_entry#1 ← phi( initEntry::@12/(byte*) initEntry::entryTLo1_entry#0 )
  (byte*~) initEntry::entryTLo1_$0 ← (byte*) initEntry::entryTLo1_entry#1 + (number) $11
  (byte*~) initEntry::entryTLo1_$1 ← ((byte*)) (byte*~) initEntry::entryTLo1_$0
  (byte*) initEntry::entryTLo1_return#0 ← (byte*~) initEntry::entryTLo1_$1
  to:initEntry::entryTLo1_@return
initEntry::entryTLo1_@return: scope:[initEntry]  from initEntry::entryTLo1
  (byte) initEntry::n#27 ← phi( initEntry::entryTLo1/(byte) initEntry::n#40 )
  (byte*) initEntry::entryTLo1_return#2 ← phi( initEntry::entryTLo1/(byte*) initEntry::entryTLo1_return#0 )
  (byte*) initEntry::entryTLo1_return#1 ← (byte*) initEntry::entryTLo1_return#2
  to:initEntry::@13
initEntry::@13: scope:[initEntry]  from initEntry::entryTLo1_@return
  (byte) initEntry::n#14 ← phi( initEntry::entryTLo1_@return/(byte) initEntry::n#27 )
  (byte*) initEntry::entryTLo1_return#3 ← phi( initEntry::entryTLo1_@return/(byte*) initEntry::entryTLo1_return#1 )
  (byte*~) initEntry::$24 ← (byte*) initEntry::entryTLo1_return#3
  (number~) initEntry::$25 ← (number) $dd + (byte) initEntry::n#14
  *((byte*~) initEntry::$24) ← (number~) initEntry::$25
  to:initEntry::@return
initEntry::@return: scope:[initEntry]  from initEntry::@13
  return 
  to:@return

(void()) printEntry((byte*) printEntry::entry)
printEntry: scope:[printEntry]  from main::@23 main::@31
  (byte*) print_line_cursor#147 ← phi( main::@23/(byte*) print_line_cursor#7 main::@31/(byte*) print_line_cursor#12 )
  (byte*) printEntry::entry#15 ← phi( main::@23/(byte*) printEntry::entry#0 main::@31/(byte*) printEntry::entry#1 )
  (byte*) print_char_cursor#149 ← phi( main::@23/(byte*) print_char_cursor#18 main::@31/(byte*) print_char_cursor#25 )
  (byte*) print_str::str#5 ← (const string) printEntry::str
  call print_str 
  to:printEntry::@14
printEntry::@14: scope:[printEntry]  from printEntry
  (byte*) print_line_cursor#133 ← phi( printEntry/(byte*) print_line_cursor#147 )
  (byte*) printEntry::entry#2 ← phi( printEntry/(byte*) printEntry::entry#15 )
  (byte*) print_char_cursor#101 ← phi( printEntry/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#31 ← (byte*) print_char_cursor#101
  (byte*) printEntry::entryBufDisk1_entry#0 ← (byte*) printEntry::entry#2
  to:printEntry::entryBufDisk1
printEntry::entryBufDisk1: scope:[printEntry]  from printEntry::@14
  (byte*) printEntry::entry#64 ← phi( printEntry::@14/(byte*) printEntry::entry#2 )
  (byte*) print_line_cursor#119 ← phi( printEntry::@14/(byte*) print_line_cursor#133 )
  (byte*) print_char_cursor#185 ← phi( printEntry::@14/(byte*) print_char_cursor#31 )
  (byte*) printEntry::entryBufDisk1_entry#1 ← phi( printEntry::@14/(byte*) printEntry::entryBufDisk1_entry#0 )
  (byte*~) printEntry::entryBufDisk1_$0 ← (byte*) printEntry::entryBufDisk1_entry#1 + (number) 0
  (byte**~) printEntry::entryBufDisk1_$1 ← ((byte**)) (byte*~) printEntry::entryBufDisk1_$0
  (byte**) printEntry::entryBufDisk1_return#0 ← (byte**~) printEntry::entryBufDisk1_$1
  to:printEntry::entryBufDisk1_@return
printEntry::entryBufDisk1_@return: scope:[printEntry]  from printEntry::entryBufDisk1
  (byte*) printEntry::entry#52 ← phi( printEntry::entryBufDisk1/(byte*) printEntry::entry#64 )
  (byte*) print_line_cursor#103 ← phi( printEntry::entryBufDisk1/(byte*) print_line_cursor#119 )
  (byte*) print_char_cursor#168 ← phi( printEntry::entryBufDisk1/(byte*) print_char_cursor#185 )
  (byte**) printEntry::entryBufDisk1_return#2 ← phi( printEntry::entryBufDisk1/(byte**) printEntry::entryBufDisk1_return#0 )
  (byte**) printEntry::entryBufDisk1_return#1 ← (byte**) printEntry::entryBufDisk1_return#2
  to:printEntry::@1
printEntry::@1: scope:[printEntry]  from printEntry::entryBufDisk1_@return
  (byte*) printEntry::entry#40 ← phi( printEntry::entryBufDisk1_@return/(byte*) printEntry::entry#52 )
  (byte*) print_line_cursor#86 ← phi( printEntry::entryBufDisk1_@return/(byte*) print_line_cursor#103 )
  (byte*) print_char_cursor#150 ← phi( printEntry::entryBufDisk1_@return/(byte*) print_char_cursor#168 )
  (byte**) printEntry::entryBufDisk1_return#3 ← phi( printEntry::entryBufDisk1_@return/(byte**) printEntry::entryBufDisk1_return#1 )
  (byte**~) printEntry::$1 ← (byte**) printEntry::entryBufDisk1_return#3
  (word~) printEntry::$2 ← ((word)) *((byte**~) printEntry::$1)
  (word) print_word::w#0 ← (word~) printEntry::$2
  call print_word 
  to:printEntry::@15
printEntry::@15: scope:[printEntry]  from printEntry::@1
  (byte*) printEntry::entry#28 ← phi( printEntry::@1/(byte*) printEntry::entry#40 )
  (byte*) print_line_cursor#69 ← phi( printEntry::@1/(byte*) print_line_cursor#86 )
  (byte*) print_char_cursor#102 ← phi( printEntry::@1/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#32 ← (byte*) print_char_cursor#102
  call print_ln 
  to:printEntry::@16
printEntry::@16: scope:[printEntry]  from printEntry::@15
  (byte*) printEntry::entry#16 ← phi( printEntry::@15/(byte*) printEntry::entry#28 )
  (byte*) print_char_cursor#103 ← phi( printEntry::@15/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#48 ← phi( printEntry::@15/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#17 ← (byte*) print_line_cursor#48
  (byte*) print_char_cursor#33 ← (byte*) print_char_cursor#103
  (byte*) print_str::str#6 ← (const string) printEntry::str1
  call print_str 
  to:printEntry::@17
printEntry::@17: scope:[printEntry]  from printEntry::@16
  (byte*) print_line_cursor#134 ← phi( printEntry::@16/(byte*) print_line_cursor#17 )
  (byte*) printEntry::entry#3 ← phi( printEntry::@16/(byte*) printEntry::entry#16 )
  (byte*) print_char_cursor#104 ← phi( printEntry::@16/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#34 ← (byte*) print_char_cursor#104
  (byte*) printEntry::entryBufEdit1_entry#0 ← (byte*) printEntry::entry#3
  to:printEntry::entryBufEdit1
printEntry::entryBufEdit1: scope:[printEntry]  from printEntry::@17
  (byte*) printEntry::entry#65 ← phi( printEntry::@17/(byte*) printEntry::entry#3 )
  (byte*) print_line_cursor#120 ← phi( printEntry::@17/(byte*) print_line_cursor#134 )
  (byte*) print_char_cursor#186 ← phi( printEntry::@17/(byte*) print_char_cursor#34 )
  (byte*) printEntry::entryBufEdit1_entry#1 ← phi( printEntry::@17/(byte*) printEntry::entryBufEdit1_entry#0 )
  (byte*~) printEntry::entryBufEdit1_$0 ← (byte*) printEntry::entryBufEdit1_entry#1 + (number) 2
  (byte**~) printEntry::entryBufEdit1_$1 ← ((byte**)) (byte*~) printEntry::entryBufEdit1_$0
  (byte**) printEntry::entryBufEdit1_return#0 ← (byte**~) printEntry::entryBufEdit1_$1
  to:printEntry::entryBufEdit1_@return
printEntry::entryBufEdit1_@return: scope:[printEntry]  from printEntry::entryBufEdit1
  (byte*) printEntry::entry#53 ← phi( printEntry::entryBufEdit1/(byte*) printEntry::entry#65 )
  (byte*) print_line_cursor#104 ← phi( printEntry::entryBufEdit1/(byte*) print_line_cursor#120 )
  (byte*) print_char_cursor#169 ← phi( printEntry::entryBufEdit1/(byte*) print_char_cursor#186 )
  (byte**) printEntry::entryBufEdit1_return#2 ← phi( printEntry::entryBufEdit1/(byte**) printEntry::entryBufEdit1_return#0 )
  (byte**) printEntry::entryBufEdit1_return#1 ← (byte**) printEntry::entryBufEdit1_return#2
  to:printEntry::@2
printEntry::@2: scope:[printEntry]  from printEntry::entryBufEdit1_@return
  (byte*) printEntry::entry#41 ← phi( printEntry::entryBufEdit1_@return/(byte*) printEntry::entry#53 )
  (byte*) print_line_cursor#87 ← phi( printEntry::entryBufEdit1_@return/(byte*) print_line_cursor#104 )
  (byte*) print_char_cursor#151 ← phi( printEntry::entryBufEdit1_@return/(byte*) print_char_cursor#169 )
  (byte**) printEntry::entryBufEdit1_return#3 ← phi( printEntry::entryBufEdit1_@return/(byte**) printEntry::entryBufEdit1_return#1 )
  (byte**~) printEntry::$6 ← (byte**) printEntry::entryBufEdit1_return#3
  (word~) printEntry::$7 ← ((word)) *((byte**~) printEntry::$6)
  (word) print_word::w#1 ← (word~) printEntry::$7
  call print_word 
  to:printEntry::@18
printEntry::@18: scope:[printEntry]  from printEntry::@2
  (byte*) printEntry::entry#29 ← phi( printEntry::@2/(byte*) printEntry::entry#41 )
  (byte*) print_line_cursor#70 ← phi( printEntry::@2/(byte*) print_line_cursor#87 )
  (byte*) print_char_cursor#105 ← phi( printEntry::@2/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#35 ← (byte*) print_char_cursor#105
  call print_ln 
  to:printEntry::@19
printEntry::@19: scope:[printEntry]  from printEntry::@18
  (byte*) printEntry::entry#17 ← phi( printEntry::@18/(byte*) printEntry::entry#29 )
  (byte*) print_char_cursor#106 ← phi( printEntry::@18/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#49 ← phi( printEntry::@18/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#18 ← (byte*) print_line_cursor#49
  (byte*) print_char_cursor#36 ← (byte*) print_char_cursor#106
  (byte*) print_str::str#7 ← (const string) printEntry::str2
  call print_str 
  to:printEntry::@20
printEntry::@20: scope:[printEntry]  from printEntry::@19
  (byte*) print_line_cursor#135 ← phi( printEntry::@19/(byte*) print_line_cursor#18 )
  (byte*) printEntry::entry#4 ← phi( printEntry::@19/(byte*) printEntry::entry#17 )
  (byte*) print_char_cursor#107 ← phi( printEntry::@19/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#37 ← (byte*) print_char_cursor#107
  (byte*) printEntry::entryTsLen1_entry#0 ← (byte*) printEntry::entry#4
  to:printEntry::entryTsLen1
printEntry::entryTsLen1: scope:[printEntry]  from printEntry::@20
  (byte*) printEntry::entry#66 ← phi( printEntry::@20/(byte*) printEntry::entry#4 )
  (byte*) print_line_cursor#121 ← phi( printEntry::@20/(byte*) print_line_cursor#135 )
  (byte*) print_char_cursor#187 ← phi( printEntry::@20/(byte*) print_char_cursor#37 )
  (byte*) printEntry::entryTsLen1_entry#1 ← phi( printEntry::@20/(byte*) printEntry::entryTsLen1_entry#0 )
  (byte*~) printEntry::entryTsLen1_$0 ← (byte*) printEntry::entryTsLen1_entry#1 + (number) 4
  (word*~) printEntry::entryTsLen1_$1 ← ((word*)) (byte*~) printEntry::entryTsLen1_$0
  (word*) printEntry::entryTsLen1_return#0 ← (word*~) printEntry::entryTsLen1_$1
  to:printEntry::entryTsLen1_@return
printEntry::entryTsLen1_@return: scope:[printEntry]  from printEntry::entryTsLen1
  (byte*) printEntry::entry#54 ← phi( printEntry::entryTsLen1/(byte*) printEntry::entry#66 )
  (byte*) print_line_cursor#105 ← phi( printEntry::entryTsLen1/(byte*) print_line_cursor#121 )
  (byte*) print_char_cursor#170 ← phi( printEntry::entryTsLen1/(byte*) print_char_cursor#187 )
  (word*) printEntry::entryTsLen1_return#2 ← phi( printEntry::entryTsLen1/(word*) printEntry::entryTsLen1_return#0 )
  (word*) printEntry::entryTsLen1_return#1 ← (word*) printEntry::entryTsLen1_return#2
  to:printEntry::@3
printEntry::@3: scope:[printEntry]  from printEntry::entryTsLen1_@return
  (byte*) printEntry::entry#42 ← phi( printEntry::entryTsLen1_@return/(byte*) printEntry::entry#54 )
  (byte*) print_line_cursor#88 ← phi( printEntry::entryTsLen1_@return/(byte*) print_line_cursor#105 )
  (byte*) print_char_cursor#152 ← phi( printEntry::entryTsLen1_@return/(byte*) print_char_cursor#170 )
  (word*) printEntry::entryTsLen1_return#3 ← phi( printEntry::entryTsLen1_@return/(word*) printEntry::entryTsLen1_return#1 )
  (word*~) printEntry::$11 ← (word*) printEntry::entryTsLen1_return#3
  (word) print_word::w#2 ← *((word*~) printEntry::$11)
  call print_word 
  to:printEntry::@21
printEntry::@21: scope:[printEntry]  from printEntry::@3
  (byte*) printEntry::entry#30 ← phi( printEntry::@3/(byte*) printEntry::entry#42 )
  (byte*) print_line_cursor#71 ← phi( printEntry::@3/(byte*) print_line_cursor#88 )
  (byte*) print_char_cursor#108 ← phi( printEntry::@3/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#38 ← (byte*) print_char_cursor#108
  call print_ln 
  to:printEntry::@22
printEntry::@22: scope:[printEntry]  from printEntry::@21
  (byte*) printEntry::entry#18 ← phi( printEntry::@21/(byte*) printEntry::entry#30 )
  (byte*) print_char_cursor#109 ← phi( printEntry::@21/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#50 ← phi( printEntry::@21/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#50
  (byte*) print_char_cursor#39 ← (byte*) print_char_cursor#109
  (byte*) print_str::str#8 ← (const string) printEntry::str3
  call print_str 
  to:printEntry::@23
printEntry::@23: scope:[printEntry]  from printEntry::@22
  (byte*) print_line_cursor#136 ← phi( printEntry::@22/(byte*) print_line_cursor#19 )
  (byte*) printEntry::entry#5 ← phi( printEntry::@22/(byte*) printEntry::entry#18 )
  (byte*) print_char_cursor#110 ← phi( printEntry::@22/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#40 ← (byte*) print_char_cursor#110
  (byte*) printEntry::entryTsOrder1_entry#0 ← (byte*) printEntry::entry#5
  to:printEntry::entryTsOrder1
printEntry::entryTsOrder1: scope:[printEntry]  from printEntry::@23
  (byte*) printEntry::entry#67 ← phi( printEntry::@23/(byte*) printEntry::entry#5 )
  (byte*) print_line_cursor#122 ← phi( printEntry::@23/(byte*) print_line_cursor#136 )
  (byte*) print_char_cursor#188 ← phi( printEntry::@23/(byte*) print_char_cursor#40 )
  (byte*) printEntry::entryTsOrder1_entry#1 ← phi( printEntry::@23/(byte*) printEntry::entryTsOrder1_entry#0 )
  (byte*~) printEntry::entryTsOrder1_$0 ← (byte*) printEntry::entryTsOrder1_entry#1 + (number) 6
  (word**~) printEntry::entryTsOrder1_$1 ← ((word**)) (byte*~) printEntry::entryTsOrder1_$0
  (word**) printEntry::entryTsOrder1_return#0 ← (word**~) printEntry::entryTsOrder1_$1
  to:printEntry::entryTsOrder1_@return
printEntry::entryTsOrder1_@return: scope:[printEntry]  from printEntry::entryTsOrder1
  (byte*) printEntry::entry#55 ← phi( printEntry::entryTsOrder1/(byte*) printEntry::entry#67 )
  (byte*) print_line_cursor#106 ← phi( printEntry::entryTsOrder1/(byte*) print_line_cursor#122 )
  (byte*) print_char_cursor#171 ← phi( printEntry::entryTsOrder1/(byte*) print_char_cursor#188 )
  (word**) printEntry::entryTsOrder1_return#2 ← phi( printEntry::entryTsOrder1/(word**) printEntry::entryTsOrder1_return#0 )
  (word**) printEntry::entryTsOrder1_return#1 ← (word**) printEntry::entryTsOrder1_return#2
  to:printEntry::@4
printEntry::@4: scope:[printEntry]  from printEntry::entryTsOrder1_@return
  (byte*) printEntry::entry#43 ← phi( printEntry::entryTsOrder1_@return/(byte*) printEntry::entry#55 )
  (byte*) print_line_cursor#89 ← phi( printEntry::entryTsOrder1_@return/(byte*) print_line_cursor#106 )
  (byte*) print_char_cursor#153 ← phi( printEntry::entryTsOrder1_@return/(byte*) print_char_cursor#171 )
  (word**) printEntry::entryTsOrder1_return#3 ← phi( printEntry::entryTsOrder1_@return/(word**) printEntry::entryTsOrder1_return#1 )
  (word**~) printEntry::$15 ← (word**) printEntry::entryTsOrder1_return#3
  (word~) printEntry::$16 ← ((word)) *((word**~) printEntry::$15)
  (word) print_word::w#3 ← (word~) printEntry::$16
  call print_word 
  to:printEntry::@24
printEntry::@24: scope:[printEntry]  from printEntry::@4
  (byte*) printEntry::entry#31 ← phi( printEntry::@4/(byte*) printEntry::entry#43 )
  (byte*) print_line_cursor#72 ← phi( printEntry::@4/(byte*) print_line_cursor#89 )
  (byte*) print_char_cursor#111 ← phi( printEntry::@4/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#41 ← (byte*) print_char_cursor#111
  call print_ln 
  to:printEntry::@25
printEntry::@25: scope:[printEntry]  from printEntry::@24
  (byte*) printEntry::entry#19 ← phi( printEntry::@24/(byte*) printEntry::entry#31 )
  (byte*) print_char_cursor#112 ← phi( printEntry::@24/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#51 ← phi( printEntry::@24/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#20 ← (byte*) print_line_cursor#51
  (byte*) print_char_cursor#42 ← (byte*) print_char_cursor#112
  (byte*) print_str::str#9 ← (const string) printEntry::str4
  call print_str 
  to:printEntry::@26
printEntry::@26: scope:[printEntry]  from printEntry::@25
  (byte*) print_line_cursor#137 ← phi( printEntry::@25/(byte*) print_line_cursor#20 )
  (byte*) printEntry::entry#6 ← phi( printEntry::@25/(byte*) printEntry::entry#19 )
  (byte*) print_char_cursor#113 ← phi( printEntry::@25/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#43 ← (byte*) print_char_cursor#113
  (byte*) printEntry::entryTLastLink1_entry#0 ← (byte*) printEntry::entry#6
  to:printEntry::entryTLastLink1
printEntry::entryTLastLink1: scope:[printEntry]  from printEntry::@26
  (byte*) printEntry::entry#68 ← phi( printEntry::@26/(byte*) printEntry::entry#6 )
  (byte*) print_line_cursor#123 ← phi( printEntry::@26/(byte*) print_line_cursor#137 )
  (byte*) print_char_cursor#189 ← phi( printEntry::@26/(byte*) print_char_cursor#43 )
  (byte*) printEntry::entryTLastLink1_entry#1 ← phi( printEntry::@26/(byte*) printEntry::entryTLastLink1_entry#0 )
  (byte*~) printEntry::entryTLastLink1_$0 ← (byte*) printEntry::entryTLastLink1_entry#1 + (number) 8
  (byte*~) printEntry::entryTLastLink1_$1 ← ((byte*)) (byte*~) printEntry::entryTLastLink1_$0
  (byte*) printEntry::entryTLastLink1_return#0 ← (byte*~) printEntry::entryTLastLink1_$1
  to:printEntry::entryTLastLink1_@return
printEntry::entryTLastLink1_@return: scope:[printEntry]  from printEntry::entryTLastLink1
  (byte*) printEntry::entry#56 ← phi( printEntry::entryTLastLink1/(byte*) printEntry::entry#68 )
  (byte*) print_line_cursor#107 ← phi( printEntry::entryTLastLink1/(byte*) print_line_cursor#123 )
  (byte*) print_char_cursor#172 ← phi( printEntry::entryTLastLink1/(byte*) print_char_cursor#189 )
  (byte*) printEntry::entryTLastLink1_return#2 ← phi( printEntry::entryTLastLink1/(byte*) printEntry::entryTLastLink1_return#0 )
  (byte*) printEntry::entryTLastLink1_return#1 ← (byte*) printEntry::entryTLastLink1_return#2
  to:printEntry::@5
printEntry::@5: scope:[printEntry]  from printEntry::entryTLastLink1_@return
  (byte*) printEntry::entry#44 ← phi( printEntry::entryTLastLink1_@return/(byte*) printEntry::entry#56 )
  (byte*) print_line_cursor#90 ← phi( printEntry::entryTLastLink1_@return/(byte*) print_line_cursor#107 )
  (byte*) print_char_cursor#154 ← phi( printEntry::entryTLastLink1_@return/(byte*) print_char_cursor#172 )
  (byte*) printEntry::entryTLastLink1_return#3 ← phi( printEntry::entryTLastLink1_@return/(byte*) printEntry::entryTLastLink1_return#1 )
  (byte*~) printEntry::$20 ← (byte*) printEntry::entryTLastLink1_return#3
  (byte) print_byte::b#2 ← *((byte*~) printEntry::$20)
  call print_byte 
  to:printEntry::@27
printEntry::@27: scope:[printEntry]  from printEntry::@5
  (byte*) printEntry::entry#32 ← phi( printEntry::@5/(byte*) printEntry::entry#44 )
  (byte*) print_line_cursor#73 ← phi( printEntry::@5/(byte*) print_line_cursor#90 )
  (byte*) print_char_cursor#114 ← phi( printEntry::@5/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#44 ← (byte*) print_char_cursor#114
  call print_ln 
  to:printEntry::@28
printEntry::@28: scope:[printEntry]  from printEntry::@27
  (byte*) printEntry::entry#20 ← phi( printEntry::@27/(byte*) printEntry::entry#32 )
  (byte*) print_char_cursor#115 ← phi( printEntry::@27/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#52 ← phi( printEntry::@27/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#21 ← (byte*) print_line_cursor#52
  (byte*) print_char_cursor#45 ← (byte*) print_char_cursor#115
  (byte*) print_str::str#10 ← (const string) printEntry::str5
  call print_str 
  to:printEntry::@29
printEntry::@29: scope:[printEntry]  from printEntry::@28
  (byte*) print_line_cursor#138 ← phi( printEntry::@28/(byte*) print_line_cursor#21 )
  (byte*) printEntry::entry#7 ← phi( printEntry::@28/(byte*) printEntry::entry#20 )
  (byte*) print_char_cursor#116 ← phi( printEntry::@28/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#46 ← (byte*) print_char_cursor#116
  (byte*) printEntry::entrySLastLink1_entry#0 ← (byte*) printEntry::entry#7
  to:printEntry::entrySLastLink1
printEntry::entrySLastLink1: scope:[printEntry]  from printEntry::@29
  (byte*) printEntry::entry#69 ← phi( printEntry::@29/(byte*) printEntry::entry#7 )
  (byte*) print_line_cursor#124 ← phi( printEntry::@29/(byte*) print_line_cursor#138 )
  (byte*) print_char_cursor#190 ← phi( printEntry::@29/(byte*) print_char_cursor#46 )
  (byte*) printEntry::entrySLastLink1_entry#1 ← phi( printEntry::@29/(byte*) printEntry::entrySLastLink1_entry#0 )
  (byte*~) printEntry::entrySLastLink1_$0 ← (byte*) printEntry::entrySLastLink1_entry#1 + (number) 9
  (byte*~) printEntry::entrySLastLink1_$1 ← ((byte*)) (byte*~) printEntry::entrySLastLink1_$0
  (byte*) printEntry::entrySLastLink1_return#0 ← (byte*~) printEntry::entrySLastLink1_$1
  to:printEntry::entrySLastLink1_@return
printEntry::entrySLastLink1_@return: scope:[printEntry]  from printEntry::entrySLastLink1
  (byte*) printEntry::entry#57 ← phi( printEntry::entrySLastLink1/(byte*) printEntry::entry#69 )
  (byte*) print_line_cursor#108 ← phi( printEntry::entrySLastLink1/(byte*) print_line_cursor#124 )
  (byte*) print_char_cursor#173 ← phi( printEntry::entrySLastLink1/(byte*) print_char_cursor#190 )
  (byte*) printEntry::entrySLastLink1_return#2 ← phi( printEntry::entrySLastLink1/(byte*) printEntry::entrySLastLink1_return#0 )
  (byte*) printEntry::entrySLastLink1_return#1 ← (byte*) printEntry::entrySLastLink1_return#2
  to:printEntry::@6
printEntry::@6: scope:[printEntry]  from printEntry::entrySLastLink1_@return
  (byte*) printEntry::entry#45 ← phi( printEntry::entrySLastLink1_@return/(byte*) printEntry::entry#57 )
  (byte*) print_line_cursor#91 ← phi( printEntry::entrySLastLink1_@return/(byte*) print_line_cursor#108 )
  (byte*) print_char_cursor#155 ← phi( printEntry::entrySLastLink1_@return/(byte*) print_char_cursor#173 )
  (byte*) printEntry::entrySLastLink1_return#3 ← phi( printEntry::entrySLastLink1_@return/(byte*) printEntry::entrySLastLink1_return#1 )
  (byte*~) printEntry::$24 ← (byte*) printEntry::entrySLastLink1_return#3
  (byte) print_byte::b#3 ← *((byte*~) printEntry::$24)
  call print_byte 
  to:printEntry::@30
printEntry::@30: scope:[printEntry]  from printEntry::@6
  (byte*) printEntry::entry#33 ← phi( printEntry::@6/(byte*) printEntry::entry#45 )
  (byte*) print_line_cursor#74 ← phi( printEntry::@6/(byte*) print_line_cursor#91 )
  (byte*) print_char_cursor#117 ← phi( printEntry::@6/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#47 ← (byte*) print_char_cursor#117
  call print_ln 
  to:printEntry::@31
printEntry::@31: scope:[printEntry]  from printEntry::@30
  (byte*) printEntry::entry#21 ← phi( printEntry::@30/(byte*) printEntry::entry#33 )
  (byte*) print_char_cursor#118 ← phi( printEntry::@30/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#53 ← phi( printEntry::@30/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#22 ← (byte*) print_line_cursor#53
  (byte*) print_char_cursor#48 ← (byte*) print_char_cursor#118
  (byte*) print_str::str#11 ← (const string) printEntry::str6
  call print_str 
  to:printEntry::@32
printEntry::@32: scope:[printEntry]  from printEntry::@31
  (byte*) print_line_cursor#139 ← phi( printEntry::@31/(byte*) print_line_cursor#22 )
  (byte*) printEntry::entry#8 ← phi( printEntry::@31/(byte*) printEntry::entry#21 )
  (byte*) print_char_cursor#119 ← phi( printEntry::@31/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#49 ← (byte*) print_char_cursor#119
  (byte*) printEntry::entryBFlag1_entry#0 ← (byte*) printEntry::entry#8
  to:printEntry::entryBFlag1
printEntry::entryBFlag1: scope:[printEntry]  from printEntry::@32
  (byte*) printEntry::entry#70 ← phi( printEntry::@32/(byte*) printEntry::entry#8 )
  (byte*) print_line_cursor#125 ← phi( printEntry::@32/(byte*) print_line_cursor#139 )
  (byte*) print_char_cursor#191 ← phi( printEntry::@32/(byte*) print_char_cursor#49 )
  (byte*) printEntry::entryBFlag1_entry#1 ← phi( printEntry::@32/(byte*) printEntry::entryBFlag1_entry#0 )
  (byte*~) printEntry::entryBFlag1_$0 ← (byte*) printEntry::entryBFlag1_entry#1 + (number) $a
  (byte*~) printEntry::entryBFlag1_$1 ← ((byte*)) (byte*~) printEntry::entryBFlag1_$0
  (byte*) printEntry::entryBFlag1_return#0 ← (byte*~) printEntry::entryBFlag1_$1
  to:printEntry::entryBFlag1_@return
printEntry::entryBFlag1_@return: scope:[printEntry]  from printEntry::entryBFlag1
  (byte*) printEntry::entry#58 ← phi( printEntry::entryBFlag1/(byte*) printEntry::entry#70 )
  (byte*) print_line_cursor#109 ← phi( printEntry::entryBFlag1/(byte*) print_line_cursor#125 )
  (byte*) print_char_cursor#174 ← phi( printEntry::entryBFlag1/(byte*) print_char_cursor#191 )
  (byte*) printEntry::entryBFlag1_return#2 ← phi( printEntry::entryBFlag1/(byte*) printEntry::entryBFlag1_return#0 )
  (byte*) printEntry::entryBFlag1_return#1 ← (byte*) printEntry::entryBFlag1_return#2
  to:printEntry::@7
printEntry::@7: scope:[printEntry]  from printEntry::entryBFlag1_@return
  (byte*) printEntry::entry#46 ← phi( printEntry::entryBFlag1_@return/(byte*) printEntry::entry#58 )
  (byte*) print_line_cursor#92 ← phi( printEntry::entryBFlag1_@return/(byte*) print_line_cursor#109 )
  (byte*) print_char_cursor#156 ← phi( printEntry::entryBFlag1_@return/(byte*) print_char_cursor#174 )
  (byte*) printEntry::entryBFlag1_return#3 ← phi( printEntry::entryBFlag1_@return/(byte*) printEntry::entryBFlag1_return#1 )
  (byte*~) printEntry::$28 ← (byte*) printEntry::entryBFlag1_return#3
  (byte) print_byte::b#4 ← *((byte*~) printEntry::$28)
  call print_byte 
  to:printEntry::@33
printEntry::@33: scope:[printEntry]  from printEntry::@7
  (byte*) printEntry::entry#34 ← phi( printEntry::@7/(byte*) printEntry::entry#46 )
  (byte*) print_line_cursor#75 ← phi( printEntry::@7/(byte*) print_line_cursor#92 )
  (byte*) print_char_cursor#120 ← phi( printEntry::@7/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#50 ← (byte*) print_char_cursor#120
  call print_ln 
  to:printEntry::@34
printEntry::@34: scope:[printEntry]  from printEntry::@33
  (byte*) printEntry::entry#22 ← phi( printEntry::@33/(byte*) printEntry::entry#34 )
  (byte*) print_char_cursor#121 ← phi( printEntry::@33/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#54 ← phi( printEntry::@33/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#23 ← (byte*) print_line_cursor#54
  (byte*) print_char_cursor#51 ← (byte*) print_char_cursor#121
  (byte*) print_str::str#12 ← (const string) printEntry::str7
  call print_str 
  to:printEntry::@35
printEntry::@35: scope:[printEntry]  from printEntry::@34
  (byte*) print_line_cursor#140 ← phi( printEntry::@34/(byte*) print_line_cursor#23 )
  (byte*) printEntry::entry#9 ← phi( printEntry::@34/(byte*) printEntry::entry#22 )
  (byte*) print_char_cursor#122 ← phi( printEntry::@34/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#52 ← (byte*) print_char_cursor#122
  (byte*) printEntry::entryBError1_entry#0 ← (byte*) printEntry::entry#9
  to:printEntry::entryBError1
printEntry::entryBError1: scope:[printEntry]  from printEntry::@35
  (byte*) printEntry::entry#71 ← phi( printEntry::@35/(byte*) printEntry::entry#9 )
  (byte*) print_line_cursor#126 ← phi( printEntry::@35/(byte*) print_line_cursor#140 )
  (byte*) print_char_cursor#192 ← phi( printEntry::@35/(byte*) print_char_cursor#52 )
  (byte*) printEntry::entryBError1_entry#1 ← phi( printEntry::@35/(byte*) printEntry::entryBError1_entry#0 )
  (byte*~) printEntry::entryBError1_$0 ← (byte*) printEntry::entryBError1_entry#1 + (number) $b
  (byte*) printEntry::entryBError1_return#0 ← (byte*~) printEntry::entryBError1_$0
  to:printEntry::entryBError1_@return
printEntry::entryBError1_@return: scope:[printEntry]  from printEntry::entryBError1
  (byte*) printEntry::entry#59 ← phi( printEntry::entryBError1/(byte*) printEntry::entry#71 )
  (byte*) print_line_cursor#110 ← phi( printEntry::entryBError1/(byte*) print_line_cursor#126 )
  (byte*) print_char_cursor#175 ← phi( printEntry::entryBError1/(byte*) print_char_cursor#192 )
  (byte*) printEntry::entryBError1_return#2 ← phi( printEntry::entryBError1/(byte*) printEntry::entryBError1_return#0 )
  (byte*) printEntry::entryBError1_return#1 ← (byte*) printEntry::entryBError1_return#2
  to:printEntry::@8
printEntry::@8: scope:[printEntry]  from printEntry::entryBError1_@return
  (byte*) printEntry::entry#47 ← phi( printEntry::entryBError1_@return/(byte*) printEntry::entry#59 )
  (byte*) print_line_cursor#93 ← phi( printEntry::entryBError1_@return/(byte*) print_line_cursor#110 )
  (byte*) print_char_cursor#157 ← phi( printEntry::entryBError1_@return/(byte*) print_char_cursor#175 )
  (byte*) printEntry::entryBError1_return#3 ← phi( printEntry::entryBError1_@return/(byte*) printEntry::entryBError1_return#1 )
  (byte*~) printEntry::$32 ← (byte*) printEntry::entryBError1_return#3
  (byte) print_byte::b#5 ← *((byte*~) printEntry::$32)
  call print_byte 
  to:printEntry::@36
printEntry::@36: scope:[printEntry]  from printEntry::@8
  (byte*) printEntry::entry#35 ← phi( printEntry::@8/(byte*) printEntry::entry#47 )
  (byte*) print_line_cursor#76 ← phi( printEntry::@8/(byte*) print_line_cursor#93 )
  (byte*) print_char_cursor#123 ← phi( printEntry::@8/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#53 ← (byte*) print_char_cursor#123
  call print_ln 
  to:printEntry::@37
printEntry::@37: scope:[printEntry]  from printEntry::@36
  (byte*) printEntry::entry#23 ← phi( printEntry::@36/(byte*) printEntry::entry#35 )
  (byte*) print_char_cursor#124 ← phi( printEntry::@36/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#55 ← phi( printEntry::@36/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#24 ← (byte*) print_line_cursor#55
  (byte*) print_char_cursor#54 ← (byte*) print_char_cursor#124
  (byte*) print_str::str#13 ← (const string) printEntry::str8
  call print_str 
  to:printEntry::@38
printEntry::@38: scope:[printEntry]  from printEntry::@37
  (byte*) print_line_cursor#141 ← phi( printEntry::@37/(byte*) print_line_cursor#24 )
  (byte*) printEntry::entry#10 ← phi( printEntry::@37/(byte*) printEntry::entry#23 )
  (byte*) print_char_cursor#125 ← phi( printEntry::@37/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#55 ← (byte*) print_char_cursor#125
  (byte*) printEntry::entryUCross1_entry#0 ← (byte*) printEntry::entry#10
  to:printEntry::entryUCross1
printEntry::entryUCross1: scope:[printEntry]  from printEntry::@38
  (byte*) printEntry::entry#72 ← phi( printEntry::@38/(byte*) printEntry::entry#10 )
  (byte*) print_line_cursor#127 ← phi( printEntry::@38/(byte*) print_line_cursor#141 )
  (byte*) print_char_cursor#193 ← phi( printEntry::@38/(byte*) print_char_cursor#55 )
  (byte*) printEntry::entryUCross1_entry#1 ← phi( printEntry::@38/(byte*) printEntry::entryUCross1_entry#0 )
  (byte*~) printEntry::entryUCross1_$0 ← (byte*) printEntry::entryUCross1_entry#1 + (number) $c
  (word*~) printEntry::entryUCross1_$1 ← ((word*)) (byte*~) printEntry::entryUCross1_$0
  (word*) printEntry::entryUCross1_return#0 ← (word*~) printEntry::entryUCross1_$1
  to:printEntry::entryUCross1_@return
printEntry::entryUCross1_@return: scope:[printEntry]  from printEntry::entryUCross1
  (byte*) printEntry::entry#60 ← phi( printEntry::entryUCross1/(byte*) printEntry::entry#72 )
  (byte*) print_line_cursor#111 ← phi( printEntry::entryUCross1/(byte*) print_line_cursor#127 )
  (byte*) print_char_cursor#176 ← phi( printEntry::entryUCross1/(byte*) print_char_cursor#193 )
  (word*) printEntry::entryUCross1_return#2 ← phi( printEntry::entryUCross1/(word*) printEntry::entryUCross1_return#0 )
  (word*) printEntry::entryUCross1_return#1 ← (word*) printEntry::entryUCross1_return#2
  to:printEntry::@9
printEntry::@9: scope:[printEntry]  from printEntry::entryUCross1_@return
  (byte*) printEntry::entry#48 ← phi( printEntry::entryUCross1_@return/(byte*) printEntry::entry#60 )
  (byte*) print_line_cursor#94 ← phi( printEntry::entryUCross1_@return/(byte*) print_line_cursor#111 )
  (byte*) print_char_cursor#158 ← phi( printEntry::entryUCross1_@return/(byte*) print_char_cursor#176 )
  (word*) printEntry::entryUCross1_return#3 ← phi( printEntry::entryUCross1_@return/(word*) printEntry::entryUCross1_return#1 )
  (word*~) printEntry::$36 ← (word*) printEntry::entryUCross1_return#3
  (word) print_word::w#4 ← *((word*~) printEntry::$36)
  call print_word 
  to:printEntry::@39
printEntry::@39: scope:[printEntry]  from printEntry::@9
  (byte*) printEntry::entry#36 ← phi( printEntry::@9/(byte*) printEntry::entry#48 )
  (byte*) print_line_cursor#77 ← phi( printEntry::@9/(byte*) print_line_cursor#94 )
  (byte*) print_char_cursor#126 ← phi( printEntry::@9/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#56 ← (byte*) print_char_cursor#126
  call print_ln 
  to:printEntry::@40
printEntry::@40: scope:[printEntry]  from printEntry::@39
  (byte*) printEntry::entry#24 ← phi( printEntry::@39/(byte*) printEntry::entry#36 )
  (byte*) print_char_cursor#127 ← phi( printEntry::@39/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#56 ← phi( printEntry::@39/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#25 ← (byte*) print_line_cursor#56
  (byte*) print_char_cursor#57 ← (byte*) print_char_cursor#127
  (byte*) print_str::str#14 ← (const string) printEntry::str9
  call print_str 
  to:printEntry::@41
printEntry::@41: scope:[printEntry]  from printEntry::@40
  (byte*) print_line_cursor#142 ← phi( printEntry::@40/(byte*) print_line_cursor#25 )
  (byte*) printEntry::entry#11 ← phi( printEntry::@40/(byte*) printEntry::entry#24 )
  (byte*) print_char_cursor#128 ← phi( printEntry::@40/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#58 ← (byte*) print_char_cursor#128
  (byte*) printEntry::entryBAddrLo1_entry#0 ← (byte*) printEntry::entry#11
  to:printEntry::entryBAddrLo1
printEntry::entryBAddrLo1: scope:[printEntry]  from printEntry::@41
  (byte*) printEntry::entry#73 ← phi( printEntry::@41/(byte*) printEntry::entry#11 )
  (byte*) print_line_cursor#128 ← phi( printEntry::@41/(byte*) print_line_cursor#142 )
  (byte*) print_char_cursor#194 ← phi( printEntry::@41/(byte*) print_char_cursor#58 )
  (byte*) printEntry::entryBAddrLo1_entry#1 ← phi( printEntry::@41/(byte*) printEntry::entryBAddrLo1_entry#0 )
  (byte*~) printEntry::entryBAddrLo1_$0 ← (byte*) printEntry::entryBAddrLo1_entry#1 + (number) $e
  (byte*~) printEntry::entryBAddrLo1_$1 ← ((byte*)) (byte*~) printEntry::entryBAddrLo1_$0
  (byte*) printEntry::entryBAddrLo1_return#0 ← (byte*~) printEntry::entryBAddrLo1_$1
  to:printEntry::entryBAddrLo1_@return
printEntry::entryBAddrLo1_@return: scope:[printEntry]  from printEntry::entryBAddrLo1
  (byte*) printEntry::entry#61 ← phi( printEntry::entryBAddrLo1/(byte*) printEntry::entry#73 )
  (byte*) print_line_cursor#112 ← phi( printEntry::entryBAddrLo1/(byte*) print_line_cursor#128 )
  (byte*) print_char_cursor#177 ← phi( printEntry::entryBAddrLo1/(byte*) print_char_cursor#194 )
  (byte*) printEntry::entryBAddrLo1_return#2 ← phi( printEntry::entryBAddrLo1/(byte*) printEntry::entryBAddrLo1_return#0 )
  (byte*) printEntry::entryBAddrLo1_return#1 ← (byte*) printEntry::entryBAddrLo1_return#2
  to:printEntry::@10
printEntry::@10: scope:[printEntry]  from printEntry::entryBAddrLo1_@return
  (byte*) printEntry::entry#49 ← phi( printEntry::entryBAddrLo1_@return/(byte*) printEntry::entry#61 )
  (byte*) print_line_cursor#95 ← phi( printEntry::entryBAddrLo1_@return/(byte*) print_line_cursor#112 )
  (byte*) print_char_cursor#159 ← phi( printEntry::entryBAddrLo1_@return/(byte*) print_char_cursor#177 )
  (byte*) printEntry::entryBAddrLo1_return#3 ← phi( printEntry::entryBAddrLo1_@return/(byte*) printEntry::entryBAddrLo1_return#1 )
  (byte*~) printEntry::$40 ← (byte*) printEntry::entryBAddrLo1_return#3
  (byte) print_byte::b#6 ← *((byte*~) printEntry::$40)
  call print_byte 
  to:printEntry::@42
printEntry::@42: scope:[printEntry]  from printEntry::@10
  (byte*) printEntry::entry#37 ← phi( printEntry::@10/(byte*) printEntry::entry#49 )
  (byte*) print_line_cursor#78 ← phi( printEntry::@10/(byte*) print_line_cursor#95 )
  (byte*) print_char_cursor#129 ← phi( printEntry::@10/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#59 ← (byte*) print_char_cursor#129
  call print_ln 
  to:printEntry::@43
printEntry::@43: scope:[printEntry]  from printEntry::@42
  (byte*) printEntry::entry#25 ← phi( printEntry::@42/(byte*) printEntry::entry#37 )
  (byte*) print_char_cursor#130 ← phi( printEntry::@42/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#57 ← phi( printEntry::@42/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#26 ← (byte*) print_line_cursor#57
  (byte*) print_char_cursor#60 ← (byte*) print_char_cursor#130
  (byte*) print_str::str#15 ← (const string) printEntry::str10
  call print_str 
  to:printEntry::@44
printEntry::@44: scope:[printEntry]  from printEntry::@43
  (byte*) print_line_cursor#143 ← phi( printEntry::@43/(byte*) print_line_cursor#26 )
  (byte*) printEntry::entry#12 ← phi( printEntry::@43/(byte*) printEntry::entry#25 )
  (byte*) print_char_cursor#131 ← phi( printEntry::@43/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#61 ← (byte*) print_char_cursor#131
  (byte*) printEntry::entryBAddrHi1_entry#0 ← (byte*) printEntry::entry#12
  to:printEntry::entryBAddrHi1
printEntry::entryBAddrHi1: scope:[printEntry]  from printEntry::@44
  (byte*) printEntry::entry#74 ← phi( printEntry::@44/(byte*) printEntry::entry#12 )
  (byte*) print_line_cursor#129 ← phi( printEntry::@44/(byte*) print_line_cursor#143 )
  (byte*) print_char_cursor#195 ← phi( printEntry::@44/(byte*) print_char_cursor#61 )
  (byte*) printEntry::entryBAddrHi1_entry#1 ← phi( printEntry::@44/(byte*) printEntry::entryBAddrHi1_entry#0 )
  (byte*~) printEntry::entryBAddrHi1_$0 ← (byte*) printEntry::entryBAddrHi1_entry#1 + (number) $f
  (byte*~) printEntry::entryBAddrHi1_$1 ← ((byte*)) (byte*~) printEntry::entryBAddrHi1_$0
  (byte*) printEntry::entryBAddrHi1_return#0 ← (byte*~) printEntry::entryBAddrHi1_$1
  to:printEntry::entryBAddrHi1_@return
printEntry::entryBAddrHi1_@return: scope:[printEntry]  from printEntry::entryBAddrHi1
  (byte*) printEntry::entry#62 ← phi( printEntry::entryBAddrHi1/(byte*) printEntry::entry#74 )
  (byte*) print_line_cursor#113 ← phi( printEntry::entryBAddrHi1/(byte*) print_line_cursor#129 )
  (byte*) print_char_cursor#178 ← phi( printEntry::entryBAddrHi1/(byte*) print_char_cursor#195 )
  (byte*) printEntry::entryBAddrHi1_return#2 ← phi( printEntry::entryBAddrHi1/(byte*) printEntry::entryBAddrHi1_return#0 )
  (byte*) printEntry::entryBAddrHi1_return#1 ← (byte*) printEntry::entryBAddrHi1_return#2
  to:printEntry::@11
printEntry::@11: scope:[printEntry]  from printEntry::entryBAddrHi1_@return
  (byte*) printEntry::entry#50 ← phi( printEntry::entryBAddrHi1_@return/(byte*) printEntry::entry#62 )
  (byte*) print_line_cursor#96 ← phi( printEntry::entryBAddrHi1_@return/(byte*) print_line_cursor#113 )
  (byte*) print_char_cursor#160 ← phi( printEntry::entryBAddrHi1_@return/(byte*) print_char_cursor#178 )
  (byte*) printEntry::entryBAddrHi1_return#3 ← phi( printEntry::entryBAddrHi1_@return/(byte*) printEntry::entryBAddrHi1_return#1 )
  (byte*~) printEntry::$44 ← (byte*) printEntry::entryBAddrHi1_return#3
  (byte) print_byte::b#7 ← *((byte*~) printEntry::$44)
  call print_byte 
  to:printEntry::@45
printEntry::@45: scope:[printEntry]  from printEntry::@11
  (byte*) printEntry::entry#38 ← phi( printEntry::@11/(byte*) printEntry::entry#50 )
  (byte*) print_line_cursor#79 ← phi( printEntry::@11/(byte*) print_line_cursor#96 )
  (byte*) print_char_cursor#132 ← phi( printEntry::@11/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#62 ← (byte*) print_char_cursor#132
  call print_ln 
  to:printEntry::@46
printEntry::@46: scope:[printEntry]  from printEntry::@45
  (byte*) printEntry::entry#26 ← phi( printEntry::@45/(byte*) printEntry::entry#38 )
  (byte*) print_char_cursor#133 ← phi( printEntry::@45/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#58 ← phi( printEntry::@45/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#27 ← (byte*) print_line_cursor#58
  (byte*) print_char_cursor#63 ← (byte*) print_char_cursor#133
  (byte*) print_str::str#16 ← (const string) printEntry::str11
  call print_str 
  to:printEntry::@47
printEntry::@47: scope:[printEntry]  from printEntry::@46
  (byte*) print_line_cursor#144 ← phi( printEntry::@46/(byte*) print_line_cursor#27 )
  (byte*) printEntry::entry#13 ← phi( printEntry::@46/(byte*) printEntry::entry#26 )
  (byte*) print_char_cursor#134 ← phi( printEntry::@46/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#64 ← (byte*) print_char_cursor#134
  (byte*) printEntry::entryTHi1_entry#0 ← (byte*) printEntry::entry#13
  to:printEntry::entryTHi1
printEntry::entryTHi1: scope:[printEntry]  from printEntry::@47
  (byte*) printEntry::entry#75 ← phi( printEntry::@47/(byte*) printEntry::entry#13 )
  (byte*) print_line_cursor#130 ← phi( printEntry::@47/(byte*) print_line_cursor#144 )
  (byte*) print_char_cursor#196 ← phi( printEntry::@47/(byte*) print_char_cursor#64 )
  (byte*) printEntry::entryTHi1_entry#1 ← phi( printEntry::@47/(byte*) printEntry::entryTHi1_entry#0 )
  (byte*~) printEntry::entryTHi1_$0 ← (byte*) printEntry::entryTHi1_entry#1 + (number) $10
  (byte*~) printEntry::entryTHi1_$1 ← ((byte*)) (byte*~) printEntry::entryTHi1_$0
  (byte*) printEntry::entryTHi1_return#0 ← (byte*~) printEntry::entryTHi1_$1
  to:printEntry::entryTHi1_@return
printEntry::entryTHi1_@return: scope:[printEntry]  from printEntry::entryTHi1
  (byte*) printEntry::entry#63 ← phi( printEntry::entryTHi1/(byte*) printEntry::entry#75 )
  (byte*) print_line_cursor#114 ← phi( printEntry::entryTHi1/(byte*) print_line_cursor#130 )
  (byte*) print_char_cursor#179 ← phi( printEntry::entryTHi1/(byte*) print_char_cursor#196 )
  (byte*) printEntry::entryTHi1_return#2 ← phi( printEntry::entryTHi1/(byte*) printEntry::entryTHi1_return#0 )
  (byte*) printEntry::entryTHi1_return#1 ← (byte*) printEntry::entryTHi1_return#2
  to:printEntry::@12
printEntry::@12: scope:[printEntry]  from printEntry::entryTHi1_@return
  (byte*) printEntry::entry#51 ← phi( printEntry::entryTHi1_@return/(byte*) printEntry::entry#63 )
  (byte*) print_line_cursor#97 ← phi( printEntry::entryTHi1_@return/(byte*) print_line_cursor#114 )
  (byte*) print_char_cursor#161 ← phi( printEntry::entryTHi1_@return/(byte*) print_char_cursor#179 )
  (byte*) printEntry::entryTHi1_return#3 ← phi( printEntry::entryTHi1_@return/(byte*) printEntry::entryTHi1_return#1 )
  (byte*~) printEntry::$48 ← (byte*) printEntry::entryTHi1_return#3
  (byte) print_byte::b#8 ← *((byte*~) printEntry::$48)
  call print_byte 
  to:printEntry::@48
printEntry::@48: scope:[printEntry]  from printEntry::@12
  (byte*) printEntry::entry#39 ← phi( printEntry::@12/(byte*) printEntry::entry#51 )
  (byte*) print_line_cursor#80 ← phi( printEntry::@12/(byte*) print_line_cursor#97 )
  (byte*) print_char_cursor#135 ← phi( printEntry::@12/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#65 ← (byte*) print_char_cursor#135
  call print_ln 
  to:printEntry::@49
printEntry::@49: scope:[printEntry]  from printEntry::@48
  (byte*) printEntry::entry#27 ← phi( printEntry::@48/(byte*) printEntry::entry#39 )
  (byte*) print_char_cursor#136 ← phi( printEntry::@48/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#59 ← phi( printEntry::@48/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#28 ← (byte*) print_line_cursor#59
  (byte*) print_char_cursor#66 ← (byte*) print_char_cursor#136
  (byte*) print_str::str#17 ← (const string) printEntry::str12
  call print_str 
  to:printEntry::@50
printEntry::@50: scope:[printEntry]  from printEntry::@49
  (byte*) print_line_cursor#145 ← phi( printEntry::@49/(byte*) print_line_cursor#28 )
  (byte*) printEntry::entry#14 ← phi( printEntry::@49/(byte*) printEntry::entry#27 )
  (byte*) print_char_cursor#137 ← phi( printEntry::@49/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#67 ← (byte*) print_char_cursor#137
  (byte*) printEntry::entryTLo1_entry#0 ← (byte*) printEntry::entry#14
  to:printEntry::entryTLo1
printEntry::entryTLo1: scope:[printEntry]  from printEntry::@50
  (byte*) print_line_cursor#131 ← phi( printEntry::@50/(byte*) print_line_cursor#145 )
  (byte*) print_char_cursor#197 ← phi( printEntry::@50/(byte*) print_char_cursor#67 )
  (byte*) printEntry::entryTLo1_entry#1 ← phi( printEntry::@50/(byte*) printEntry::entryTLo1_entry#0 )
  (byte*~) printEntry::entryTLo1_$0 ← (byte*) printEntry::entryTLo1_entry#1 + (number) $11
  (byte*~) printEntry::entryTLo1_$1 ← ((byte*)) (byte*~) printEntry::entryTLo1_$0
  (byte*) printEntry::entryTLo1_return#0 ← (byte*~) printEntry::entryTLo1_$1
  to:printEntry::entryTLo1_@return
printEntry::entryTLo1_@return: scope:[printEntry]  from printEntry::entryTLo1
  (byte*) print_line_cursor#115 ← phi( printEntry::entryTLo1/(byte*) print_line_cursor#131 )
  (byte*) print_char_cursor#180 ← phi( printEntry::entryTLo1/(byte*) print_char_cursor#197 )
  (byte*) printEntry::entryTLo1_return#2 ← phi( printEntry::entryTLo1/(byte*) printEntry::entryTLo1_return#0 )
  (byte*) printEntry::entryTLo1_return#1 ← (byte*) printEntry::entryTLo1_return#2
  to:printEntry::@13
printEntry::@13: scope:[printEntry]  from printEntry::entryTLo1_@return
  (byte*) print_line_cursor#98 ← phi( printEntry::entryTLo1_@return/(byte*) print_line_cursor#115 )
  (byte*) print_char_cursor#162 ← phi( printEntry::entryTLo1_@return/(byte*) print_char_cursor#180 )
  (byte*) printEntry::entryTLo1_return#3 ← phi( printEntry::entryTLo1_@return/(byte*) printEntry::entryTLo1_return#1 )
  (byte*~) printEntry::$52 ← (byte*) printEntry::entryTLo1_return#3
  (byte) print_byte::b#9 ← *((byte*~) printEntry::$52)
  call print_byte 
  to:printEntry::@51
printEntry::@51: scope:[printEntry]  from printEntry::@13
  (byte*) print_line_cursor#81 ← phi( printEntry::@13/(byte*) print_line_cursor#98 )
  (byte*) print_char_cursor#138 ← phi( printEntry::@13/(byte*) print_char_cursor#10 )
  (byte*) print_char_cursor#68 ← (byte*) print_char_cursor#138
  call print_ln 
  to:printEntry::@52
printEntry::@52: scope:[printEntry]  from printEntry::@51
  (byte*) print_char_cursor#139 ← phi( printEntry::@51/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#60 ← phi( printEntry::@51/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#29 ← (byte*) print_line_cursor#60
  (byte*) print_char_cursor#69 ← (byte*) print_char_cursor#139
  to:printEntry::@return
printEntry::@return: scope:[printEntry]  from printEntry::@52
  (byte*) print_line_cursor#61 ← phi( printEntry::@52/(byte*) print_line_cursor#29 )
  (byte*) print_char_cursor#140 ← phi( printEntry::@52/(byte*) print_char_cursor#69 )
  (byte*) print_char_cursor#70 ← (byte*) print_char_cursor#140
  (byte*) print_line_cursor#30 ← (byte*) print_line_cursor#61
  return 
  to:@return
@69: scope:[]  from @52
  (byte*) print_screen#35 ← phi( @52/(byte*) print_screen#36 )
  (byte*) print_char_cursor#163 ← phi( @52/(byte*) print_char_cursor#181 )
  (byte*) print_line_cursor#82 ← phi( @52/(byte*) print_line_cursor#99 )
  call main 
  to:@70
@70: scope:[]  from @69
  (byte*) print_char_cursor#141 ← phi( @69/(byte*) print_char_cursor#30 )
  (byte*) print_line_cursor#62 ← phi( @69/(byte*) print_line_cursor#16 )
  (byte*) print_line_cursor#31 ← (byte*) print_line_cursor#62
  (byte*) print_char_cursor#71 ← (byte*) print_char_cursor#141
  to:@end
@end: scope:[]  from @70

SYMBOL TABLE SSA
(label) @17
(label) @52
(label) @69
(label) @70
(label) @begin
(label) @end
(const byte*) CIA1_PORT_A = (byte*)(number) $dc00
(const byte*) CIA1_PORT_A_DDR = (byte*)(number) $dc02
(const byte*) CIA1_PORT_B = (byte*)(number) $dc01
(const byte*) CIA1_PORT_B_DDR = (byte*)(number) $dc03
(const byte) KEY_SPACE = (number) $3c
(const byte) MAX_FILES = (number) $90
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte) SIZEOF_ENTRY = (number) $12
(byte[(word)MAX_FILES*SIZEOF_ENTRY]) files
(void()) initEntry((byte*) initEntry::entry , (byte) initEntry::n)
(byte**~) initEntry::$0
(number~) initEntry::$1
(byte*~) initEntry::$10
(number~) initEntry::$11
(byte*~) initEntry::$12
(number~) initEntry::$13
(byte*~) initEntry::$14
(number~) initEntry::$15
(word*~) initEntry::$16
(number~) initEntry::$17
(byte*~) initEntry::$18
(number~) initEntry::$19
(byte**~) initEntry::$2
(byte*~) initEntry::$20
(number~) initEntry::$21
(byte*~) initEntry::$22
(number~) initEntry::$23
(byte*~) initEntry::$24
(number~) initEntry::$25
(number~) initEntry::$3
(word*~) initEntry::$4
(number~) initEntry::$5
(word**~) initEntry::$6
(number~) initEntry::$7
(byte*~) initEntry::$8
(number~) initEntry::$9
(label) initEntry::@1
(label) initEntry::@10
(label) initEntry::@11
(label) initEntry::@12
(label) initEntry::@13
(label) initEntry::@2
(label) initEntry::@3
(label) initEntry::@4
(label) initEntry::@5
(label) initEntry::@6
(label) initEntry::@7
(label) initEntry::@8
(label) initEntry::@9
(label) initEntry::@return
(byte*) initEntry::entry
(byte*) initEntry::entry#0
(byte*) initEntry::entry#1
(byte*) initEntry::entry#10
(byte*) initEntry::entry#11
(byte*) initEntry::entry#12
(byte*) initEntry::entry#13
(byte*) initEntry::entry#14
(byte*) initEntry::entry#15
(byte*) initEntry::entry#16
(byte*) initEntry::entry#17
(byte*) initEntry::entry#18
(byte*) initEntry::entry#19
(byte*) initEntry::entry#2
(byte*) initEntry::entry#20
(byte*) initEntry::entry#21
(byte*) initEntry::entry#22
(byte*) initEntry::entry#23
(byte*) initEntry::entry#24
(byte*) initEntry::entry#25
(byte*) initEntry::entry#26
(byte*) initEntry::entry#27
(byte*) initEntry::entry#28
(byte*) initEntry::entry#29
(byte*) initEntry::entry#3
(byte*) initEntry::entry#30
(byte*) initEntry::entry#31
(byte*) initEntry::entry#32
(byte*) initEntry::entry#33
(byte*) initEntry::entry#34
(byte*) initEntry::entry#35
(byte*) initEntry::entry#36
(byte*) initEntry::entry#37
(byte*) initEntry::entry#38
(byte*) initEntry::entry#4
(byte*) initEntry::entry#5
(byte*) initEntry::entry#6
(byte*) initEntry::entry#7
(byte*) initEntry::entry#8
(byte*) initEntry::entry#9
(label) initEntry::entryBAddrHi1
(byte*~) initEntry::entryBAddrHi1_$0
(byte*~) initEntry::entryBAddrHi1_$1
(label) initEntry::entryBAddrHi1_@return
(byte*) initEntry::entryBAddrHi1_entry
(byte*) initEntry::entryBAddrHi1_entry#0
(byte*) initEntry::entryBAddrHi1_entry#1
(byte*) initEntry::entryBAddrHi1_return
(byte*) initEntry::entryBAddrHi1_return#0
(byte*) initEntry::entryBAddrHi1_return#1
(byte*) initEntry::entryBAddrHi1_return#2
(byte*) initEntry::entryBAddrHi1_return#3
(label) initEntry::entryBAddrLo1
(byte*~) initEntry::entryBAddrLo1_$0
(byte*~) initEntry::entryBAddrLo1_$1
(label) initEntry::entryBAddrLo1_@return
(byte*) initEntry::entryBAddrLo1_entry
(byte*) initEntry::entryBAddrLo1_entry#0
(byte*) initEntry::entryBAddrLo1_entry#1
(byte*) initEntry::entryBAddrLo1_return
(byte*) initEntry::entryBAddrLo1_return#0
(byte*) initEntry::entryBAddrLo1_return#1
(byte*) initEntry::entryBAddrLo1_return#2
(byte*) initEntry::entryBAddrLo1_return#3
(label) initEntry::entryBError1
(byte*~) initEntry::entryBError1_$0
(label) initEntry::entryBError1_@return
(byte*) initEntry::entryBError1_entry
(byte*) initEntry::entryBError1_entry#0
(byte*) initEntry::entryBError1_entry#1
(byte*) initEntry::entryBError1_return
(byte*) initEntry::entryBError1_return#0
(byte*) initEntry::entryBError1_return#1
(byte*) initEntry::entryBError1_return#2
(byte*) initEntry::entryBError1_return#3
(label) initEntry::entryBFlag1
(byte*~) initEntry::entryBFlag1_$0
(byte*~) initEntry::entryBFlag1_$1
(label) initEntry::entryBFlag1_@return
(byte*) initEntry::entryBFlag1_entry
(byte*) initEntry::entryBFlag1_entry#0
(byte*) initEntry::entryBFlag1_entry#1
(byte*) initEntry::entryBFlag1_return
(byte*) initEntry::entryBFlag1_return#0
(byte*) initEntry::entryBFlag1_return#1
(byte*) initEntry::entryBFlag1_return#2
(byte*) initEntry::entryBFlag1_return#3
(label) initEntry::entryBufDisk1
(byte*~) initEntry::entryBufDisk1_$0
(byte**~) initEntry::entryBufDisk1_$1
(label) initEntry::entryBufDisk1_@return
(byte*) initEntry::entryBufDisk1_entry
(byte*) initEntry::entryBufDisk1_entry#0
(byte*) initEntry::entryBufDisk1_entry#1
(byte**) initEntry::entryBufDisk1_return
(byte**) initEntry::entryBufDisk1_return#0
(byte**) initEntry::entryBufDisk1_return#1
(byte**) initEntry::entryBufDisk1_return#2
(byte**) initEntry::entryBufDisk1_return#3
(label) initEntry::entryBufEdit1
(byte*~) initEntry::entryBufEdit1_$0
(byte**~) initEntry::entryBufEdit1_$1
(label) initEntry::entryBufEdit1_@return
(byte*) initEntry::entryBufEdit1_entry
(byte*) initEntry::entryBufEdit1_entry#0
(byte*) initEntry::entryBufEdit1_entry#1
(byte**) initEntry::entryBufEdit1_return
(byte**) initEntry::entryBufEdit1_return#0
(byte**) initEntry::entryBufEdit1_return#1
(byte**) initEntry::entryBufEdit1_return#2
(byte**) initEntry::entryBufEdit1_return#3
(label) initEntry::entrySLastLink1
(byte*~) initEntry::entrySLastLink1_$0
(byte*~) initEntry::entrySLastLink1_$1
(label) initEntry::entrySLastLink1_@return
(byte*) initEntry::entrySLastLink1_entry
(byte*) initEntry::entrySLastLink1_entry#0
(byte*) initEntry::entrySLastLink1_entry#1
(byte*) initEntry::entrySLastLink1_return
(byte*) initEntry::entrySLastLink1_return#0
(byte*) initEntry::entrySLastLink1_return#1
(byte*) initEntry::entrySLastLink1_return#2
(byte*) initEntry::entrySLastLink1_return#3
(label) initEntry::entryTHi1
(byte*~) initEntry::entryTHi1_$0
(byte*~) initEntry::entryTHi1_$1
(label) initEntry::entryTHi1_@return
(byte*) initEntry::entryTHi1_entry
(byte*) initEntry::entryTHi1_entry#0
(byte*) initEntry::entryTHi1_entry#1
(byte*) initEntry::entryTHi1_return
(byte*) initEntry::entryTHi1_return#0
(byte*) initEntry::entryTHi1_return#1
(byte*) initEntry::entryTHi1_return#2
(byte*) initEntry::entryTHi1_return#3
(label) initEntry::entryTLastLink1
(byte*~) initEntry::entryTLastLink1_$0
(byte*~) initEntry::entryTLastLink1_$1
(label) initEntry::entryTLastLink1_@return
(byte*) initEntry::entryTLastLink1_entry
(byte*) initEntry::entryTLastLink1_entry#0
(byte*) initEntry::entryTLastLink1_entry#1
(byte*) initEntry::entryTLastLink1_return
(byte*) initEntry::entryTLastLink1_return#0
(byte*) initEntry::entryTLastLink1_return#1
(byte*) initEntry::entryTLastLink1_return#2
(byte*) initEntry::entryTLastLink1_return#3
(label) initEntry::entryTLo1
(byte*~) initEntry::entryTLo1_$0
(byte*~) initEntry::entryTLo1_$1
(label) initEntry::entryTLo1_@return
(byte*) initEntry::entryTLo1_entry
(byte*) initEntry::entryTLo1_entry#0
(byte*) initEntry::entryTLo1_entry#1
(byte*) initEntry::entryTLo1_return
(byte*) initEntry::entryTLo1_return#0
(byte*) initEntry::entryTLo1_return#1
(byte*) initEntry::entryTLo1_return#2
(byte*) initEntry::entryTLo1_return#3
(label) initEntry::entryTsLen1
(byte*~) initEntry::entryTsLen1_$0
(word*~) initEntry::entryTsLen1_$1
(label) initEntry::entryTsLen1_@return
(byte*) initEntry::entryTsLen1_entry
(byte*) initEntry::entryTsLen1_entry#0
(byte*) initEntry::entryTsLen1_entry#1
(word*) initEntry::entryTsLen1_return
(word*) initEntry::entryTsLen1_return#0
(word*) initEntry::entryTsLen1_return#1
(word*) initEntry::entryTsLen1_return#2
(word*) initEntry::entryTsLen1_return#3
(label) initEntry::entryTsOrder1
(byte*~) initEntry::entryTsOrder1_$0
(word**~) initEntry::entryTsOrder1_$1
(label) initEntry::entryTsOrder1_@return
(byte*) initEntry::entryTsOrder1_entry
(byte*) initEntry::entryTsOrder1_entry#0
(byte*) initEntry::entryTsOrder1_entry#1
(word**) initEntry::entryTsOrder1_return
(word**) initEntry::entryTsOrder1_return#0
(word**) initEntry::entryTsOrder1_return#1
(word**) initEntry::entryTsOrder1_return#2
(word**) initEntry::entryTsOrder1_return#3
(label) initEntry::entryUCross1
(byte*~) initEntry::entryUCross1_$0
(word*~) initEntry::entryUCross1_$1
(label) initEntry::entryUCross1_@return
(byte*) initEntry::entryUCross1_entry
(byte*) initEntry::entryUCross1_entry#0
(byte*) initEntry::entryUCross1_entry#1
(word*) initEntry::entryUCross1_return
(word*) initEntry::entryUCross1_return#0
(word*) initEntry::entryUCross1_return#1
(word*) initEntry::entryUCross1_return#2
(word*) initEntry::entryUCross1_return#3
(byte) initEntry::n
(byte) initEntry::n#0
(byte) initEntry::n#1
(byte) initEntry::n#10
(byte) initEntry::n#11
(byte) initEntry::n#12
(byte) initEntry::n#13
(byte) initEntry::n#14
(byte) initEntry::n#15
(byte) initEntry::n#16
(byte) initEntry::n#17
(byte) initEntry::n#18
(byte) initEntry::n#19
(byte) initEntry::n#2
(byte) initEntry::n#20
(byte) initEntry::n#21
(byte) initEntry::n#22
(byte) initEntry::n#23
(byte) initEntry::n#24
(byte) initEntry::n#25
(byte) initEntry::n#26
(byte) initEntry::n#27
(byte) initEntry::n#28
(byte) initEntry::n#29
(byte) initEntry::n#3
(byte) initEntry::n#30
(byte) initEntry::n#31
(byte) initEntry::n#32
(byte) initEntry::n#33
(byte) initEntry::n#34
(byte) initEntry::n#35
(byte) initEntry::n#36
(byte) initEntry::n#37
(byte) initEntry::n#38
(byte) initEntry::n#39
(byte) initEntry::n#4
(byte) initEntry::n#40
(byte) initEntry::n#41
(byte) initEntry::n#5
(byte) initEntry::n#6
(byte) initEntry::n#7
(byte) initEntry::n#8
(byte) initEntry::n#9
(void()) keyboard_init()
(label) keyboard_init::@return
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(number~) keyboard_key_pressed::$0
(byte~) keyboard_key_pressed::$1
(byte~) keyboard_key_pressed::$2
(byte~) keyboard_key_pressed::$3
(label) keyboard_key_pressed::@2
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::colidx#0
(byte) keyboard_key_pressed::colidx#1
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::key#0
(byte) keyboard_key_pressed::key#1
(byte) keyboard_key_pressed::key#2
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0
(byte) keyboard_key_pressed::return#1
(byte) keyboard_key_pressed::return#2
(byte) keyboard_key_pressed::return#3
(byte) keyboard_key_pressed::return#4
(byte) keyboard_key_pressed::return#5
(byte) keyboard_key_pressed::return#6
(byte) keyboard_key_pressed::rowidx
(byte) keyboard_key_pressed::rowidx#0
(const byte[8]) keyboard_matrix_col_bitmask = { (byte)(number) 1, (byte)(number) 2, (byte)(number) 4, (byte)(number) 8, (byte)(number) $10, (byte)(number) $20, (byte)(number) $40, (byte)(number) $80 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(byte~) keyboard_matrix_read::$0
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0
(byte) keyboard_matrix_read::return#1
(byte) keyboard_matrix_read::return#2
(byte) keyboard_matrix_read::return#3
(byte) keyboard_matrix_read::return#4
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::row_pressed_bits#0
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0
(byte) keyboard_matrix_read::rowid#1
(const byte[8]) keyboard_matrix_row_bitmask = { (byte)(number) $fe, (byte)(number) $fd, (byte)(number) $fb, (byte)(number) $f7, (byte)(number) $ef, (byte)(number) $df, (byte)(number) $bf, (byte)(number) $7f }
(void()) main()
(byte*~) main::$1
(byte*~) main::$2
(byte~) main::$20
(bool~) main::$21
(byte~) main::$22
(bool~) main::$23
(label) main::@1
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@3
(label) main::@30
(label) main::@31
(label) main::@32
(label) main::@33
(label) main::@34
(label) main::@35
(label) main::@36
(label) main::@7
(label) main::@9
(label) main::@return
(byte*) main::entry1
(byte*) main::entry1#0
(byte*) main::entry1#1
(byte*) main::entry1#10
(byte*) main::entry1#2
(byte*) main::entry1#3
(byte*) main::entry1#4
(byte*) main::entry1#5
(byte*) main::entry1#6
(byte*) main::entry1#7
(byte*) main::entry1#8
(byte*) main::entry1#9
(byte*) main::entry2
(byte*) main::entry2#0
(byte*) main::entry2#1
(byte*) main::entry2#10
(byte*) main::entry2#11
(byte*) main::entry2#12
(byte*) main::entry2#13
(byte*) main::entry2#14
(byte*) main::entry2#15
(byte*) main::entry2#16
(byte*) main::entry2#2
(byte*) main::entry2#3
(byte*) main::entry2#4
(byte*) main::entry2#5
(byte*) main::entry2#6
(byte*) main::entry2#7
(byte*) main::entry2#8
(byte*) main::entry2#9
(label) main::fileEntry1
(word~) main::fileEntry1_$0
(byte*~) main::fileEntry1_$1
(label) main::fileEntry1_@return
(byte) main::fileEntry1_idx
(byte) main::fileEntry1_idx#0
(byte) main::fileEntry1_idx#1
(byte*) main::fileEntry1_return
(byte*) main::fileEntry1_return#0
(byte*) main::fileEntry1_return#1
(byte*) main::fileEntry1_return#2
(byte*) main::fileEntry1_return#3
(label) main::fileEntry2
(word~) main::fileEntry2_$0
(byte*~) main::fileEntry2_$1
(label) main::fileEntry2_@return
(byte) main::fileEntry2_idx
(byte) main::fileEntry2_idx#0
(byte) main::fileEntry2_idx#1
(byte*) main::fileEntry2_return
(byte*) main::fileEntry2_return#0
(byte*) main::fileEntry2_return#1
(byte*) main::fileEntry2_return#2
(byte*) main::fileEntry2_return#3
(const string) main::str = (string) "** entry 1 **"
(const string) main::str1 = (string) "- press space -"
(const string) main::str2 = (string) "** entry 2 **"
(const string) main::str3 = (string) "- press space -"
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(bool~) memset::$0
(bool~) memset::$1
(byte*~) memset::$2
(byte*~) memset::$3
(bool~) memset::$4
(label) memset::@1
(label) memset::@2
(label) memset::@4
(label) memset::@5
(label) memset::@return
(byte) memset::c
(byte) memset::c#0
(byte) memset::c#1
(byte) memset::c#2
(byte) memset::c#3
(byte) memset::c#4
(byte*) memset::dst
(byte*) memset::dst#0
(byte*) memset::dst#1
(byte*) memset::dst#2
(byte*) memset::dst#3
(byte*) memset::end
(byte*) memset::end#0
(byte*) memset::end#1
(byte*) memset::end#2
(word) memset::num
(word) memset::num#0
(word) memset::num#1
(word) memset::num#2
(void*) memset::return
(void*) memset::return#0
(void*) memset::return#1
(void*) memset::return#2
(void*) memset::return#3
(void*) memset::str
(void*) memset::str#0
(void*) memset::str#1
(void*) memset::str#2
(void*) memset::str#3
(void*) memset::str#4
(void*) memset::str#5
(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
(bool~) mul8u::$0
(number~) mul8u::$1
(bool~) mul8u::$2
(bool~) mul8u::$3
(word~) mul8u::$4
(byte~) mul8u::$5
(word~) mul8u::$6
(label) mul8u::@1
(label) mul8u::@2
(label) mul8u::@3
(label) mul8u::@4
(label) mul8u::@7
(label) mul8u::@return
(byte) mul8u::a
(byte) mul8u::a#0
(byte) mul8u::a#1
(byte) mul8u::a#2
(byte) mul8u::a#3
(byte) mul8u::a#4
(byte) mul8u::a#5
(byte) mul8u::a#6
(byte) mul8u::a#7
(byte) mul8u::b
(byte) mul8u::b#0
(byte) mul8u::b#1
(byte) mul8u::b#2
(word) mul8u::mb
(word) mul8u::mb#0
(word) mul8u::mb#1
(word) mul8u::mb#2
(word) mul8u::mb#3
(word) mul8u::mb#4
(word) mul8u::mb#5
(word) mul8u::res
(word) mul8u::res#0
(word) mul8u::res#1
(word) mul8u::res#2
(word) mul8u::res#3
(word) mul8u::res#4
(word) mul8u::res#5
(word) mul8u::res#6
(word) mul8u::return
(word) mul8u::return#0
(word) mul8u::return#1
(word) mul8u::return#2
(word) mul8u::return#3
(word) mul8u::return#4
(word) mul8u::return#5
(word) mul8u::return#6
(void()) printEntry((byte*) printEntry::entry)
(byte**~) printEntry::$1
(word*~) printEntry::$11
(word**~) printEntry::$15
(word~) printEntry::$16
(word~) printEntry::$2
(byte*~) printEntry::$20
(byte*~) printEntry::$24
(byte*~) printEntry::$28
(byte*~) printEntry::$32
(word*~) printEntry::$36
(byte*~) printEntry::$40
(byte*~) printEntry::$44
(byte*~) printEntry::$48
(byte*~) printEntry::$52
(byte**~) printEntry::$6
(word~) printEntry::$7
(label) printEntry::@1
(label) printEntry::@10
(label) printEntry::@11
(label) printEntry::@12
(label) printEntry::@13
(label) printEntry::@14
(label) printEntry::@15
(label) printEntry::@16
(label) printEntry::@17
(label) printEntry::@18
(label) printEntry::@19
(label) printEntry::@2
(label) printEntry::@20
(label) printEntry::@21
(label) printEntry::@22
(label) printEntry::@23
(label) printEntry::@24
(label) printEntry::@25
(label) printEntry::@26
(label) printEntry::@27
(label) printEntry::@28
(label) printEntry::@29
(label) printEntry::@3
(label) printEntry::@30
(label) printEntry::@31
(label) printEntry::@32
(label) printEntry::@33
(label) printEntry::@34
(label) printEntry::@35
(label) printEntry::@36
(label) printEntry::@37
(label) printEntry::@38
(label) printEntry::@39
(label) printEntry::@4
(label) printEntry::@40
(label) printEntry::@41
(label) printEntry::@42
(label) printEntry::@43
(label) printEntry::@44
(label) printEntry::@45
(label) printEntry::@46
(label) printEntry::@47
(label) printEntry::@48
(label) printEntry::@49
(label) printEntry::@5
(label) printEntry::@50
(label) printEntry::@51
(label) printEntry::@52
(label) printEntry::@6
(label) printEntry::@7
(label) printEntry::@8
(label) printEntry::@9
(label) printEntry::@return
(byte*) printEntry::entry
(byte*) printEntry::entry#0
(byte*) printEntry::entry#1
(byte*) printEntry::entry#10
(byte*) printEntry::entry#11
(byte*) printEntry::entry#12
(byte*) printEntry::entry#13
(byte*) printEntry::entry#14
(byte*) printEntry::entry#15
(byte*) printEntry::entry#16
(byte*) printEntry::entry#17
(byte*) printEntry::entry#18
(byte*) printEntry::entry#19
(byte*) printEntry::entry#2
(byte*) printEntry::entry#20
(byte*) printEntry::entry#21
(byte*) printEntry::entry#22
(byte*) printEntry::entry#23
(byte*) printEntry::entry#24
(byte*) printEntry::entry#25
(byte*) printEntry::entry#26
(byte*) printEntry::entry#27
(byte*) printEntry::entry#28
(byte*) printEntry::entry#29
(byte*) printEntry::entry#3
(byte*) printEntry::entry#30
(byte*) printEntry::entry#31
(byte*) printEntry::entry#32
(byte*) printEntry::entry#33
(byte*) printEntry::entry#34
(byte*) printEntry::entry#35
(byte*) printEntry::entry#36
(byte*) printEntry::entry#37
(byte*) printEntry::entry#38
(byte*) printEntry::entry#39
(byte*) printEntry::entry#4
(byte*) printEntry::entry#40
(byte*) printEntry::entry#41
(byte*) printEntry::entry#42
(byte*) printEntry::entry#43
(byte*) printEntry::entry#44
(byte*) printEntry::entry#45
(byte*) printEntry::entry#46
(byte*) printEntry::entry#47
(byte*) printEntry::entry#48
(byte*) printEntry::entry#49
(byte*) printEntry::entry#5
(byte*) printEntry::entry#50
(byte*) printEntry::entry#51
(byte*) printEntry::entry#52
(byte*) printEntry::entry#53
(byte*) printEntry::entry#54
(byte*) printEntry::entry#55
(byte*) printEntry::entry#56
(byte*) printEntry::entry#57
(byte*) printEntry::entry#58
(byte*) printEntry::entry#59
(byte*) printEntry::entry#6
(byte*) printEntry::entry#60
(byte*) printEntry::entry#61
(byte*) printEntry::entry#62
(byte*) printEntry::entry#63
(byte*) printEntry::entry#64
(byte*) printEntry::entry#65
(byte*) printEntry::entry#66
(byte*) printEntry::entry#67
(byte*) printEntry::entry#68
(byte*) printEntry::entry#69
(byte*) printEntry::entry#7
(byte*) printEntry::entry#70
(byte*) printEntry::entry#71
(byte*) printEntry::entry#72
(byte*) printEntry::entry#73
(byte*) printEntry::entry#74
(byte*) printEntry::entry#75
(byte*) printEntry::entry#8
(byte*) printEntry::entry#9
(label) printEntry::entryBAddrHi1
(byte*~) printEntry::entryBAddrHi1_$0
(byte*~) printEntry::entryBAddrHi1_$1
(label) printEntry::entryBAddrHi1_@return
(byte*) printEntry::entryBAddrHi1_entry
(byte*) printEntry::entryBAddrHi1_entry#0
(byte*) printEntry::entryBAddrHi1_entry#1
(byte*) printEntry::entryBAddrHi1_return
(byte*) printEntry::entryBAddrHi1_return#0
(byte*) printEntry::entryBAddrHi1_return#1
(byte*) printEntry::entryBAddrHi1_return#2
(byte*) printEntry::entryBAddrHi1_return#3
(label) printEntry::entryBAddrLo1
(byte*~) printEntry::entryBAddrLo1_$0
(byte*~) printEntry::entryBAddrLo1_$1
(label) printEntry::entryBAddrLo1_@return
(byte*) printEntry::entryBAddrLo1_entry
(byte*) printEntry::entryBAddrLo1_entry#0
(byte*) printEntry::entryBAddrLo1_entry#1
(byte*) printEntry::entryBAddrLo1_return
(byte*) printEntry::entryBAddrLo1_return#0
(byte*) printEntry::entryBAddrLo1_return#1
(byte*) printEntry::entryBAddrLo1_return#2
(byte*) printEntry::entryBAddrLo1_return#3
(label) printEntry::entryBError1
(byte*~) printEntry::entryBError1_$0
(label) printEntry::entryBError1_@return
(byte*) printEntry::entryBError1_entry
(byte*) printEntry::entryBError1_entry#0
(byte*) printEntry::entryBError1_entry#1
(byte*) printEntry::entryBError1_return
(byte*) printEntry::entryBError1_return#0
(byte*) printEntry::entryBError1_return#1
(byte*) printEntry::entryBError1_return#2
(byte*) printEntry::entryBError1_return#3
(label) printEntry::entryBFlag1
(byte*~) printEntry::entryBFlag1_$0
(byte*~) printEntry::entryBFlag1_$1
(label) printEntry::entryBFlag1_@return
(byte*) printEntry::entryBFlag1_entry
(byte*) printEntry::entryBFlag1_entry#0
(byte*) printEntry::entryBFlag1_entry#1
(byte*) printEntry::entryBFlag1_return
(byte*) printEntry::entryBFlag1_return#0
(byte*) printEntry::entryBFlag1_return#1
(byte*) printEntry::entryBFlag1_return#2
(byte*) printEntry::entryBFlag1_return#3
(label) printEntry::entryBufDisk1
(byte*~) printEntry::entryBufDisk1_$0
(byte**~) printEntry::entryBufDisk1_$1
(label) printEntry::entryBufDisk1_@return
(byte*) printEntry::entryBufDisk1_entry
(byte*) printEntry::entryBufDisk1_entry#0
(byte*) printEntry::entryBufDisk1_entry#1
(byte**) printEntry::entryBufDisk1_return
(byte**) printEntry::entryBufDisk1_return#0
(byte**) printEntry::entryBufDisk1_return#1
(byte**) printEntry::entryBufDisk1_return#2
(byte**) printEntry::entryBufDisk1_return#3
(label) printEntry::entryBufEdit1
(byte*~) printEntry::entryBufEdit1_$0
(byte**~) printEntry::entryBufEdit1_$1
(label) printEntry::entryBufEdit1_@return
(byte*) printEntry::entryBufEdit1_entry
(byte*) printEntry::entryBufEdit1_entry#0
(byte*) printEntry::entryBufEdit1_entry#1
(byte**) printEntry::entryBufEdit1_return
(byte**) printEntry::entryBufEdit1_return#0
(byte**) printEntry::entryBufEdit1_return#1
(byte**) printEntry::entryBufEdit1_return#2
(byte**) printEntry::entryBufEdit1_return#3
(label) printEntry::entrySLastLink1
(byte*~) printEntry::entrySLastLink1_$0
(byte*~) printEntry::entrySLastLink1_$1
(label) printEntry::entrySLastLink1_@return
(byte*) printEntry::entrySLastLink1_entry
(byte*) printEntry::entrySLastLink1_entry#0
(byte*) printEntry::entrySLastLink1_entry#1
(byte*) printEntry::entrySLastLink1_return
(byte*) printEntry::entrySLastLink1_return#0
(byte*) printEntry::entrySLastLink1_return#1
(byte*) printEntry::entrySLastLink1_return#2
(byte*) printEntry::entrySLastLink1_return#3
(label) printEntry::entryTHi1
(byte*~) printEntry::entryTHi1_$0
(byte*~) printEntry::entryTHi1_$1
(label) printEntry::entryTHi1_@return
(byte*) printEntry::entryTHi1_entry
(byte*) printEntry::entryTHi1_entry#0
(byte*) printEntry::entryTHi1_entry#1
(byte*) printEntry::entryTHi1_return
(byte*) printEntry::entryTHi1_return#0
(byte*) printEntry::entryTHi1_return#1
(byte*) printEntry::entryTHi1_return#2
(byte*) printEntry::entryTHi1_return#3
(label) printEntry::entryTLastLink1
(byte*~) printEntry::entryTLastLink1_$0
(byte*~) printEntry::entryTLastLink1_$1
(label) printEntry::entryTLastLink1_@return
(byte*) printEntry::entryTLastLink1_entry
(byte*) printEntry::entryTLastLink1_entry#0
(byte*) printEntry::entryTLastLink1_entry#1
(byte*) printEntry::entryTLastLink1_return
(byte*) printEntry::entryTLastLink1_return#0
(byte*) printEntry::entryTLastLink1_return#1
(byte*) printEntry::entryTLastLink1_return#2
(byte*) printEntry::entryTLastLink1_return#3
(label) printEntry::entryTLo1
(byte*~) printEntry::entryTLo1_$0
(byte*~) printEntry::entryTLo1_$1
(label) printEntry::entryTLo1_@return
(byte*) printEntry::entryTLo1_entry
(byte*) printEntry::entryTLo1_entry#0
(byte*) printEntry::entryTLo1_entry#1
(byte*) printEntry::entryTLo1_return
(byte*) printEntry::entryTLo1_return#0
(byte*) printEntry::entryTLo1_return#1
(byte*) printEntry::entryTLo1_return#2
(byte*) printEntry::entryTLo1_return#3
(label) printEntry::entryTsLen1
(byte*~) printEntry::entryTsLen1_$0
(word*~) printEntry::entryTsLen1_$1
(label) printEntry::entryTsLen1_@return
(byte*) printEntry::entryTsLen1_entry
(byte*) printEntry::entryTsLen1_entry#0
(byte*) printEntry::entryTsLen1_entry#1
(word*) printEntry::entryTsLen1_return
(word*) printEntry::entryTsLen1_return#0
(word*) printEntry::entryTsLen1_return#1
(word*) printEntry::entryTsLen1_return#2
(word*) printEntry::entryTsLen1_return#3
(label) printEntry::entryTsOrder1
(byte*~) printEntry::entryTsOrder1_$0
(word**~) printEntry::entryTsOrder1_$1
(label) printEntry::entryTsOrder1_@return
(byte*) printEntry::entryTsOrder1_entry
(byte*) printEntry::entryTsOrder1_entry#0
(byte*) printEntry::entryTsOrder1_entry#1
(word**) printEntry::entryTsOrder1_return
(word**) printEntry::entryTsOrder1_return#0
(word**) printEntry::entryTsOrder1_return#1
(word**) printEntry::entryTsOrder1_return#2
(word**) printEntry::entryTsOrder1_return#3
(label) printEntry::entryUCross1
(byte*~) printEntry::entryUCross1_$0
(word*~) printEntry::entryUCross1_$1
(label) printEntry::entryUCross1_@return
(byte*) printEntry::entryUCross1_entry
(byte*) printEntry::entryUCross1_entry#0
(byte*) printEntry::entryUCross1_entry#1
(word*) printEntry::entryUCross1_return
(word*) printEntry::entryUCross1_return#0
(word*) printEntry::entryUCross1_return#1
(word*) printEntry::entryUCross1_return#2
(word*) printEntry::entryUCross1_return#3
(const string) printEntry::str = (string) "bufdisk   "
(const string) printEntry::str1 = (string) "bufedit   "
(const string) printEntry::str10 = (string) "baddrhi     "
(const string) printEntry::str11 = (string) "thi         "
(const string) printEntry::str12 = (string) "tlo         "
(const string) printEntry::str2 = (string) "tslen     "
(const string) printEntry::str3 = (string) "tsorder   "
(const string) printEntry::str4 = (string) "tlastlink   "
(const string) printEntry::str5 = (string) "slastlink   "
(const string) printEntry::str6 = (string) "bflag       "
(const string) printEntry::str7 = (string) "berror      "
(const string) printEntry::str8 = (string) "ucross    "
(const string) printEntry::str9 = (string) "baddrlo     "
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(number~) print_byte::$2
(label) print_byte::@1
(label) print_byte::@2
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0
(byte) print_byte::b#1
(byte) print_byte::b#10
(byte) print_byte::b#11
(byte) print_byte::b#2
(byte) print_byte::b#3
(byte) print_byte::b#4
(byte) print_byte::b#5
(byte) print_byte::b#6
(byte) print_byte::b#7
(byte) print_byte::b#8
(byte) print_byte::b#9
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0
(byte) print_char::ch#1
(byte) print_char::ch#2
(byte*) print_char_cursor
(byte*) print_char_cursor#0
(byte*) print_char_cursor#1
(byte*) print_char_cursor#10
(byte*) print_char_cursor#100
(byte*) print_char_cursor#101
(byte*) print_char_cursor#102
(byte*) print_char_cursor#103
(byte*) print_char_cursor#104
(byte*) print_char_cursor#105
(byte*) print_char_cursor#106
(byte*) print_char_cursor#107
(byte*) print_char_cursor#108
(byte*) print_char_cursor#109
(byte*) print_char_cursor#11
(byte*) print_char_cursor#110
(byte*) print_char_cursor#111
(byte*) print_char_cursor#112
(byte*) print_char_cursor#113
(byte*) print_char_cursor#114
(byte*) print_char_cursor#115
(byte*) print_char_cursor#116
(byte*) print_char_cursor#117
(byte*) print_char_cursor#118
(byte*) print_char_cursor#119
(byte*) print_char_cursor#12
(byte*) print_char_cursor#120
(byte*) print_char_cursor#121
(byte*) print_char_cursor#122
(byte*) print_char_cursor#123
(byte*) print_char_cursor#124
(byte*) print_char_cursor#125
(byte*) print_char_cursor#126
(byte*) print_char_cursor#127
(byte*) print_char_cursor#128
(byte*) print_char_cursor#129
(byte*) print_char_cursor#13
(byte*) print_char_cursor#130
(byte*) print_char_cursor#131
(byte*) print_char_cursor#132
(byte*) print_char_cursor#133
(byte*) print_char_cursor#134
(byte*) print_char_cursor#135
(byte*) print_char_cursor#136
(byte*) print_char_cursor#137
(byte*) print_char_cursor#138
(byte*) print_char_cursor#139
(byte*) print_char_cursor#14
(byte*) print_char_cursor#140
(byte*) print_char_cursor#141
(byte*) print_char_cursor#142
(byte*) print_char_cursor#143
(byte*) print_char_cursor#144
(byte*) print_char_cursor#145
(byte*) print_char_cursor#146
(byte*) print_char_cursor#147
(byte*) print_char_cursor#148
(byte*) print_char_cursor#149
(byte*) print_char_cursor#15
(byte*) print_char_cursor#150
(byte*) print_char_cursor#151
(byte*) print_char_cursor#152
(byte*) print_char_cursor#153
(byte*) print_char_cursor#154
(byte*) print_char_cursor#155
(byte*) print_char_cursor#156
(byte*) print_char_cursor#157
(byte*) print_char_cursor#158
(byte*) print_char_cursor#159
(byte*) print_char_cursor#16
(byte*) print_char_cursor#160
(byte*) print_char_cursor#161
(byte*) print_char_cursor#162
(byte*) print_char_cursor#163
(byte*) print_char_cursor#164
(byte*) print_char_cursor#165
(byte*) print_char_cursor#166
(byte*) print_char_cursor#167
(byte*) print_char_cursor#168
(byte*) print_char_cursor#169
(byte*) print_char_cursor#17
(byte*) print_char_cursor#170
(byte*) print_char_cursor#171
(byte*) print_char_cursor#172
(byte*) print_char_cursor#173
(byte*) print_char_cursor#174
(byte*) print_char_cursor#175
(byte*) print_char_cursor#176
(byte*) print_char_cursor#177
(byte*) print_char_cursor#178
(byte*) print_char_cursor#179
(byte*) print_char_cursor#18
(byte*) print_char_cursor#180
(byte*) print_char_cursor#181
(byte*) print_char_cursor#182
(byte*) print_char_cursor#183
(byte*) print_char_cursor#184
(byte*) print_char_cursor#185
(byte*) print_char_cursor#186
(byte*) print_char_cursor#187
(byte*) print_char_cursor#188
(byte*) print_char_cursor#189
(byte*) print_char_cursor#19
(byte*) print_char_cursor#190
(byte*) print_char_cursor#191
(byte*) print_char_cursor#192
(byte*) print_char_cursor#193
(byte*) print_char_cursor#194
(byte*) print_char_cursor#195
(byte*) print_char_cursor#196
(byte*) print_char_cursor#197
(byte*) print_char_cursor#198
(byte*) print_char_cursor#199
(byte*) print_char_cursor#2
(byte*) print_char_cursor#20
(byte*) print_char_cursor#200
(byte*) print_char_cursor#201
(byte*) print_char_cursor#202
(byte*) print_char_cursor#203
(byte*) print_char_cursor#204
(byte*) print_char_cursor#205
(byte*) print_char_cursor#206
(byte*) print_char_cursor#21
(byte*) print_char_cursor#22
(byte*) print_char_cursor#23
(byte*) print_char_cursor#24
(byte*) print_char_cursor#25
(byte*) print_char_cursor#26
(byte*) print_char_cursor#27
(byte*) print_char_cursor#28
(byte*) print_char_cursor#29
(byte*) print_char_cursor#3
(byte*) print_char_cursor#30
(byte*) print_char_cursor#31
(byte*) print_char_cursor#32
(byte*) print_char_cursor#33
(byte*) print_char_cursor#34
(byte*) print_char_cursor#35
(byte*) print_char_cursor#36
(byte*) print_char_cursor#37
(byte*) print_char_cursor#38
(byte*) print_char_cursor#39
(byte*) print_char_cursor#4
(byte*) print_char_cursor#40
(byte*) print_char_cursor#41
(byte*) print_char_cursor#42
(byte*) print_char_cursor#43
(byte*) print_char_cursor#44
(byte*) print_char_cursor#45
(byte*) print_char_cursor#46
(byte*) print_char_cursor#47
(byte*) print_char_cursor#48
(byte*) print_char_cursor#49
(byte*) print_char_cursor#5
(byte*) print_char_cursor#50
(byte*) print_char_cursor#51
(byte*) print_char_cursor#52
(byte*) print_char_cursor#53
(byte*) print_char_cursor#54
(byte*) print_char_cursor#55
(byte*) print_char_cursor#56
(byte*) print_char_cursor#57
(byte*) print_char_cursor#58
(byte*) print_char_cursor#59
(byte*) print_char_cursor#6
(byte*) print_char_cursor#60
(byte*) print_char_cursor#61
(byte*) print_char_cursor#62
(byte*) print_char_cursor#63
(byte*) print_char_cursor#64
(byte*) print_char_cursor#65
(byte*) print_char_cursor#66
(byte*) print_char_cursor#67
(byte*) print_char_cursor#68
(byte*) print_char_cursor#69
(byte*) print_char_cursor#7
(byte*) print_char_cursor#70
(byte*) print_char_cursor#71
(byte*) print_char_cursor#72
(byte*) print_char_cursor#73
(byte*) print_char_cursor#74
(byte*) print_char_cursor#75
(byte*) print_char_cursor#76
(byte*) print_char_cursor#77
(byte*) print_char_cursor#78
(byte*) print_char_cursor#79
(byte*) print_char_cursor#8
(byte*) print_char_cursor#80
(byte*) print_char_cursor#81
(byte*) print_char_cursor#82
(byte*) print_char_cursor#83
(byte*) print_char_cursor#84
(byte*) print_char_cursor#85
(byte*) print_char_cursor#86
(byte*) print_char_cursor#87
(byte*) print_char_cursor#88
(byte*) print_char_cursor#89
(byte*) print_char_cursor#9
(byte*) print_char_cursor#90
(byte*) print_char_cursor#91
(byte*) print_char_cursor#92
(byte*) print_char_cursor#93
(byte*) print_char_cursor#94
(byte*) print_char_cursor#95
(byte*) print_char_cursor#96
(byte*) print_char_cursor#97
(byte*) print_char_cursor#98
(byte*) print_char_cursor#99
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(const byte[]) print_hextab = (string) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#0
(byte*) print_line_cursor#1
(byte*) print_line_cursor#10
(byte*) print_line_cursor#100
(byte*) print_line_cursor#101
(byte*) print_line_cursor#102
(byte*) print_line_cursor#103
(byte*) print_line_cursor#104
(byte*) print_line_cursor#105
(byte*) print_line_cursor#106
(byte*) print_line_cursor#107
(byte*) print_line_cursor#108
(byte*) print_line_cursor#109
(byte*) print_line_cursor#11
(byte*) print_line_cursor#110
(byte*) print_line_cursor#111
(byte*) print_line_cursor#112
(byte*) print_line_cursor#113
(byte*) print_line_cursor#114
(byte*) print_line_cursor#115
(byte*) print_line_cursor#116
(byte*) print_line_cursor#117
(byte*) print_line_cursor#118
(byte*) print_line_cursor#119
(byte*) print_line_cursor#12
(byte*) print_line_cursor#120
(byte*) print_line_cursor#121
(byte*) print_line_cursor#122
(byte*) print_line_cursor#123
(byte*) print_line_cursor#124
(byte*) print_line_cursor#125
(byte*) print_line_cursor#126
(byte*) print_line_cursor#127
(byte*) print_line_cursor#128
(byte*) print_line_cursor#129
(byte*) print_line_cursor#13
(byte*) print_line_cursor#130
(byte*) print_line_cursor#131
(byte*) print_line_cursor#132
(byte*) print_line_cursor#133
(byte*) print_line_cursor#134
(byte*) print_line_cursor#135
(byte*) print_line_cursor#136
(byte*) print_line_cursor#137
(byte*) print_line_cursor#138
(byte*) print_line_cursor#139
(byte*) print_line_cursor#14
(byte*) print_line_cursor#140
(byte*) print_line_cursor#141
(byte*) print_line_cursor#142
(byte*) print_line_cursor#143
(byte*) print_line_cursor#144
(byte*) print_line_cursor#145
(byte*) print_line_cursor#146
(byte*) print_line_cursor#147
(byte*) print_line_cursor#148
(byte*) print_line_cursor#149
(byte*) print_line_cursor#15
(byte*) print_line_cursor#150
(byte*) print_line_cursor#151
(byte*) print_line_cursor#152
(byte*) print_line_cursor#153
(byte*) print_line_cursor#16
(byte*) print_line_cursor#17
(byte*) print_line_cursor#18
(byte*) print_line_cursor#19
(byte*) print_line_cursor#2
(byte*) print_line_cursor#20
(byte*) print_line_cursor#21
(byte*) print_line_cursor#22
(byte*) print_line_cursor#23
(byte*) print_line_cursor#24
(byte*) print_line_cursor#25
(byte*) print_line_cursor#26
(byte*) print_line_cursor#27
(byte*) print_line_cursor#28
(byte*) print_line_cursor#29
(byte*) print_line_cursor#3
(byte*) print_line_cursor#30
(byte*) print_line_cursor#31
(byte*) print_line_cursor#32
(byte*) print_line_cursor#33
(byte*) print_line_cursor#34
(byte*) print_line_cursor#35
(byte*) print_line_cursor#36
(byte*) print_line_cursor#37
(byte*) print_line_cursor#38
(byte*) print_line_cursor#39
(byte*) print_line_cursor#4
(byte*) print_line_cursor#40
(byte*) print_line_cursor#41
(byte*) print_line_cursor#42
(byte*) print_line_cursor#43
(byte*) print_line_cursor#44
(byte*) print_line_cursor#45
(byte*) print_line_cursor#46
(byte*) print_line_cursor#47
(byte*) print_line_cursor#48
(byte*) print_line_cursor#49
(byte*) print_line_cursor#5
(byte*) print_line_cursor#50
(byte*) print_line_cursor#51
(byte*) print_line_cursor#52
(byte*) print_line_cursor#53
(byte*) print_line_cursor#54
(byte*) print_line_cursor#55
(byte*) print_line_cursor#56
(byte*) print_line_cursor#57
(byte*) print_line_cursor#58
(byte*) print_line_cursor#59
(byte*) print_line_cursor#6
(byte*) print_line_cursor#60
(byte*) print_line_cursor#61
(byte*) print_line_cursor#62
(byte*) print_line_cursor#63
(byte*) print_line_cursor#64
(byte*) print_line_cursor#65
(byte*) print_line_cursor#66
(byte*) print_line_cursor#67
(byte*) print_line_cursor#68
(byte*) print_line_cursor#69
(byte*) print_line_cursor#7
(byte*) print_line_cursor#70
(byte*) print_line_cursor#71
(byte*) print_line_cursor#72
(byte*) print_line_cursor#73
(byte*) print_line_cursor#74
(byte*) print_line_cursor#75
(byte*) print_line_cursor#76
(byte*) print_line_cursor#77
(byte*) print_line_cursor#78
(byte*) print_line_cursor#79
(byte*) print_line_cursor#8
(byte*) print_line_cursor#80
(byte*) print_line_cursor#81
(byte*) print_line_cursor#82
(byte*) print_line_cursor#83
(byte*) print_line_cursor#84
(byte*) print_line_cursor#85
(byte*) print_line_cursor#86
(byte*) print_line_cursor#87
(byte*) print_line_cursor#88
(byte*) print_line_cursor#89
(byte*) print_line_cursor#9
(byte*) print_line_cursor#90
(byte*) print_line_cursor#91
(byte*) print_line_cursor#92
(byte*) print_line_cursor#93
(byte*) print_line_cursor#94
(byte*) print_line_cursor#95
(byte*) print_line_cursor#96
(byte*) print_line_cursor#97
(byte*) print_line_cursor#98
(byte*) print_line_cursor#99
(void()) print_ln()
(byte*~) print_ln::$0
(bool~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(byte*) print_screen
(byte*) print_screen#0
(byte*) print_screen#1
(byte*) print_screen#10
(byte*) print_screen#11
(byte*) print_screen#12
(byte*) print_screen#13
(byte*) print_screen#14
(byte*) print_screen#15
(byte*) print_screen#16
(byte*) print_screen#17
(byte*) print_screen#18
(byte*) print_screen#19
(byte*) print_screen#2
(byte*) print_screen#20
(byte*) print_screen#21
(byte*) print_screen#22
(byte*) print_screen#23
(byte*) print_screen#24
(byte*) print_screen#25
(byte*) print_screen#26
(byte*) print_screen#27
(byte*) print_screen#28
(byte*) print_screen#29
(byte*) print_screen#3
(byte*) print_screen#30
(byte*) print_screen#31
(byte*) print_screen#32
(byte*) print_screen#33
(byte*) print_screen#34
(byte*) print_screen#35
(byte*) print_screen#36
(byte*) print_screen#4
(byte*) print_screen#5
(byte*) print_screen#6
(byte*) print_screen#7
(byte*) print_screen#8
(byte*) print_screen#9
(void()) print_str((byte*) print_str::str)
(bool~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0
(byte*) print_str::str#1
(byte*) print_str::str#10
(byte*) print_str::str#11
(byte*) print_str::str#12
(byte*) print_str::str#13
(byte*) print_str::str#14
(byte*) print_str::str#15
(byte*) print_str::str#16
(byte*) print_str::str#17
(byte*) print_str::str#18
(byte*) print_str::str#19
(byte*) print_str::str#2
(byte*) print_str::str#20
(byte*) print_str::str#3
(byte*) print_str::str#4
(byte*) print_str::str#5
(byte*) print_str::str#6
(byte*) print_str::str#7
(byte*) print_str::str#8
(byte*) print_str::str#9
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(byte~) print_word::$2
(label) print_word::@1
(label) print_word::@2
(label) print_word::@return
(word) print_word::w
(word) print_word::w#0
(word) print_word::w#1
(word) print_word::w#2
(word) print_word::w#3
(word) print_word::w#4
(word) print_word::w#5
(word) print_word::w#6

Adding number conversion cast (unumber) 0 in (word) mul8u::res#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (bool~) mul8u::$0 ← (byte) mul8u::a#3 != (number) 0
Adding number conversion cast (unumber) 1 in (number~) mul8u::$1 ← (byte) mul8u::a#4 & (number) 1
Adding number conversion cast (unumber) mul8u::$1 in (number~) mul8u::$1 ← (byte) mul8u::a#4 & (unumber)(number) 1
Adding number conversion cast (unumber) 0 in (bool~) mul8u::$2 ← (unumber~) mul8u::$1 != (number) 0
Adding number conversion cast (unumber) 1 in (byte~) mul8u::$5 ← (byte) mul8u::a#5 >> (number) 1
Adding number conversion cast (unumber) 1 in (word~) mul8u::$6 ← (word) mul8u::mb#2 << (number) 1
Adding number conversion cast (unumber) 0 in (bool~) memset::$0 ← (word) memset::num#1 > (number) 0
Adding number conversion cast (unumber) 0 in (bool~) print_str::$0 ← (number) 0 != *((byte*) print_str::str#18)
Adding number conversion cast (unumber) $28 in (byte*~) print_ln::$0 ← (byte*) print_line_cursor#32 + (number) $28
Adding number conversion cast (unumber) 4 in (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (number) 4
Adding number conversion cast (unumber) $f in (number~) print_byte::$2 ← (byte) print_byte::b#11 & (number) $f
Adding number conversion cast (unumber) print_byte::$2 in (number~) print_byte::$2 ← (byte) print_byte::b#11 & (unumber)(number) $f
Adding number conversion cast (unumber) $3e8 in (word) memset::num#0 ← (number) $3e8
Adding number conversion cast (unumber) $ff in *((const byte*) CIA1_PORT_A_DDR) ← (number) $ff
Adding number conversion cast (unumber) 0 in *((const byte*) CIA1_PORT_B_DDR) ← (number) 0
Adding number conversion cast (unumber) 7 in (number~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key#2 & (number) 7
Adding number conversion cast (unumber) keyboard_key_pressed::$0 in (number~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key#2 & (unumber)(number) 7
Adding number conversion cast (unumber) 3 in (byte~) keyboard_key_pressed::$1 ← (byte) keyboard_key_pressed::key#2 >> (number) 3
Adding number conversion cast (unumber) 1 in (byte) main::fileEntry1_idx#0 ← (number) 1
Adding number conversion cast (unumber) 2 in (byte) main::fileEntry2_idx#0 ← (number) 2
Adding number conversion cast (unumber) 0 in (byte) initEntry::n#0 ← (number) 0
Adding number conversion cast (unumber) $11 in (byte) initEntry::n#1 ← (number) $11
Adding number conversion cast (unumber) 0 in (bool~) main::$21 ← (byte~) main::$20 == (number) 0
Adding number conversion cast (unumber) 0 in (bool~) main::$23 ← (byte~) main::$22 == (number) 0
Adding number conversion cast (unumber) 0 in (byte*~) initEntry::entryBufDisk1_$0 ← (byte*) initEntry::entryBufDisk1_entry#1 + (number) 0
Adding number conversion cast (unumber) $1111 in (number~) initEntry::$1 ← (number) $1111 + (byte) initEntry::n#2
Adding number conversion cast (unumber) initEntry::$1 in (number~) initEntry::$1 ← (unumber)(number) $1111 + (byte) initEntry::n#2
Adding number conversion cast (unumber) 2 in (byte*~) initEntry::entryBufEdit1_$0 ← (byte*) initEntry::entryBufEdit1_entry#1 + (number) 2
Adding number conversion cast (unumber) $2222 in (number~) initEntry::$3 ← (number) $2222 + (byte) initEntry::n#3
Adding number conversion cast (unumber) initEntry::$3 in (number~) initEntry::$3 ← (unumber)(number) $2222 + (byte) initEntry::n#3
Adding number conversion cast (unumber) 4 in (byte*~) initEntry::entryTsLen1_$0 ← (byte*) initEntry::entryTsLen1_entry#1 + (number) 4
Adding number conversion cast (unumber) $3333 in (number~) initEntry::$5 ← (number) $3333 + (byte) initEntry::n#4
Adding number conversion cast (unumber) initEntry::$5 in (number~) initEntry::$5 ← (unumber)(number) $3333 + (byte) initEntry::n#4
Adding number conversion cast (unumber) 6 in (byte*~) initEntry::entryTsOrder1_$0 ← (byte*) initEntry::entryTsOrder1_entry#1 + (number) 6
Adding number conversion cast (unumber) $4444 in (number~) initEntry::$7 ← (number) $4444 + (byte) initEntry::n#5
Adding number conversion cast (unumber) initEntry::$7 in (number~) initEntry::$7 ← (unumber)(number) $4444 + (byte) initEntry::n#5
Adding number conversion cast (unumber) 8 in (byte*~) initEntry::entryTLastLink1_$0 ← (byte*) initEntry::entryTLastLink1_entry#1 + (number) 8
Adding number conversion cast (unumber) $55 in (number~) initEntry::$9 ← (number) $55 + (byte) initEntry::n#6
Adding number conversion cast (unumber) initEntry::$9 in (number~) initEntry::$9 ← (unumber)(number) $55 + (byte) initEntry::n#6
Adding number conversion cast (unumber) 9 in (byte*~) initEntry::entrySLastLink1_$0 ← (byte*) initEntry::entrySLastLink1_entry#1 + (number) 9
Adding number conversion cast (unumber) $66 in (number~) initEntry::$11 ← (number) $66 + (byte) initEntry::n#7
Adding number conversion cast (unumber) initEntry::$11 in (number~) initEntry::$11 ← (unumber)(number) $66 + (byte) initEntry::n#7
Adding number conversion cast (unumber) $a in (byte*~) initEntry::entryBFlag1_$0 ← (byte*) initEntry::entryBFlag1_entry#1 + (number) $a
Adding number conversion cast (unumber) $77 in (number~) initEntry::$13 ← (number) $77 + (byte) initEntry::n#8
Adding number conversion cast (unumber) initEntry::$13 in (number~) initEntry::$13 ← (unumber)(number) $77 + (byte) initEntry::n#8
Adding number conversion cast (unumber) $b in (byte*~) initEntry::entryBError1_$0 ← (byte*) initEntry::entryBError1_entry#1 + (number) $b
Adding number conversion cast (unumber) $88 in (number~) initEntry::$15 ← (number) $88 + (byte) initEntry::n#9
Adding number conversion cast (unumber) initEntry::$15 in (number~) initEntry::$15 ← (unumber)(number) $88 + (byte) initEntry::n#9
Adding number conversion cast (unumber) $c in (byte*~) initEntry::entryUCross1_$0 ← (byte*) initEntry::entryUCross1_entry#1 + (number) $c
Adding number conversion cast (unumber) $9999 in (number~) initEntry::$17 ← (number) $9999 + (byte) initEntry::n#10
Adding number conversion cast (unumber) initEntry::$17 in (number~) initEntry::$17 ← (unumber)(number) $9999 + (byte) initEntry::n#10
Adding number conversion cast (unumber) $e in (byte*~) initEntry::entryBAddrLo1_$0 ← (byte*) initEntry::entryBAddrLo1_entry#1 + (number) $e
Adding number conversion cast (unumber) $aa in (number~) initEntry::$19 ← (number) $aa + (byte) initEntry::n#11
Adding number conversion cast (unumber) initEntry::$19 in (number~) initEntry::$19 ← (unumber)(number) $aa + (byte) initEntry::n#11
Adding number conversion cast (unumber) $f in (byte*~) initEntry::entryBAddrHi1_$0 ← (byte*) initEntry::entryBAddrHi1_entry#1 + (number) $f
Adding number conversion cast (unumber) $bb in (number~) initEntry::$21 ← (number) $bb + (byte) initEntry::n#12
Adding number conversion cast (unumber) initEntry::$21 in (number~) initEntry::$21 ← (unumber)(number) $bb + (byte) initEntry::n#12
Adding number conversion cast (unumber) $10 in (byte*~) initEntry::entryTHi1_$0 ← (byte*) initEntry::entryTHi1_entry#1 + (number) $10
Adding number conversion cast (unumber) $cc in (number~) initEntry::$23 ← (number) $cc + (byte) initEntry::n#13
Adding number conversion cast (unumber) initEntry::$23 in (number~) initEntry::$23 ← (unumber)(number) $cc + (byte) initEntry::n#13
Adding number conversion cast (unumber) $11 in (byte*~) initEntry::entryTLo1_$0 ← (byte*) initEntry::entryTLo1_entry#1 + (number) $11
Adding number conversion cast (unumber) $dd in (number~) initEntry::$25 ← (number) $dd + (byte) initEntry::n#14
Adding number conversion cast (unumber) initEntry::$25 in (number~) initEntry::$25 ← (unumber)(number) $dd + (byte) initEntry::n#14
Adding number conversion cast (unumber) 0 in (byte*~) printEntry::entryBufDisk1_$0 ← (byte*) printEntry::entryBufDisk1_entry#1 + (number) 0
Adding number conversion cast (unumber) 2 in (byte*~) printEntry::entryBufEdit1_$0 ← (byte*) printEntry::entryBufEdit1_entry#1 + (number) 2
Adding number conversion cast (unumber) 4 in (byte*~) printEntry::entryTsLen1_$0 ← (byte*) printEntry::entryTsLen1_entry#1 + (number) 4
Adding number conversion cast (unumber) 6 in (byte*~) printEntry::entryTsOrder1_$0 ← (byte*) printEntry::entryTsOrder1_entry#1 + (number) 6
Adding number conversion cast (unumber) 8 in (byte*~) printEntry::entryTLastLink1_$0 ← (byte*) printEntry::entryTLastLink1_entry#1 + (number) 8
Adding number conversion cast (unumber) 9 in (byte*~) printEntry::entrySLastLink1_$0 ← (byte*) printEntry::entrySLastLink1_entry#1 + (number) 9
Adding number conversion cast (unumber) $a in (byte*~) printEntry::entryBFlag1_$0 ← (byte*) printEntry::entryBFlag1_entry#1 + (number) $a
Adding number conversion cast (unumber) $b in (byte*~) printEntry::entryBError1_$0 ← (byte*) printEntry::entryBError1_entry#1 + (number) $b
Adding number conversion cast (unumber) $c in (byte*~) printEntry::entryUCross1_$0 ← (byte*) printEntry::entryUCross1_entry#1 + (number) $c
Adding number conversion cast (unumber) $e in (byte*~) printEntry::entryBAddrLo1_$0 ← (byte*) printEntry::entryBAddrLo1_entry#1 + (number) $e
Adding number conversion cast (unumber) $f in (byte*~) printEntry::entryBAddrHi1_$0 ← (byte*) printEntry::entryBAddrHi1_entry#1 + (number) $f
Adding number conversion cast (unumber) $10 in (byte*~) printEntry::entryTHi1_$0 ← (byte*) printEntry::entryTHi1_entry#1 + (number) $10
Adding number conversion cast (unumber) $11 in (byte*~) printEntry::entryTLo1_$0 ← (byte*) printEntry::entryTLo1_entry#1 + (number) $11
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast (word) mul8u::res#0 ← (unumber)(number) 0
Inlining cast (byte*~) memset::$2 ← (byte*)(void*) memset::str#2
Inlining cast (byte*) memset::dst#0 ← (byte*)(void*) memset::str#2
Inlining cast (byte*) print_screen#0 ← (byte*)(number) $400
Inlining cast (word) memset::num#0 ← (unumber)(number) $3e8
Inlining cast *((const byte*) CIA1_PORT_A_DDR) ← (unumber)(number) $ff
Inlining cast *((const byte*) CIA1_PORT_B_DDR) ← (unumber)(number) 0
Inlining cast (byte) main::fileEntry1_idx#0 ← (unumber)(number) 1
Inlining cast (byte) main::fileEntry2_idx#0 ← (unumber)(number) 2
Inlining cast (byte) initEntry::n#0 ← (unumber)(number) 0
Inlining cast (byte) initEntry::n#1 ← (unumber)(number) $11
Inlining cast (byte**~) initEntry::entryBufDisk1_$1 ← (byte**)(byte*~) initEntry::entryBufDisk1_$0
Inlining cast *((byte**~) initEntry::$0) ← (byte*)(unumber~) initEntry::$1
Inlining cast (byte**~) initEntry::entryBufEdit1_$1 ← (byte**)(byte*~) initEntry::entryBufEdit1_$0
Inlining cast *((byte**~) initEntry::$2) ← (byte*)(unumber~) initEntry::$3
Inlining cast (word*~) initEntry::entryTsLen1_$1 ← (word*)(byte*~) initEntry::entryTsLen1_$0
Inlining cast (word**~) initEntry::entryTsOrder1_$1 ← (word**)(byte*~) initEntry::entryTsOrder1_$0
Inlining cast *((word**~) initEntry::$6) ← (word*)(unumber~) initEntry::$7
Inlining cast (byte*~) initEntry::entryTLastLink1_$1 ← (byte*)(byte*~) initEntry::entryTLastLink1_$0
Inlining cast (byte*~) initEntry::entrySLastLink1_$1 ← (byte*)(byte*~) initEntry::entrySLastLink1_$0
Inlining cast (byte*~) initEntry::entryBFlag1_$1 ← (byte*)(byte*~) initEntry::entryBFlag1_$0
Inlining cast (word*~) initEntry::entryUCross1_$1 ← (word*)(byte*~) initEntry::entryUCross1_$0
Inlining cast (byte*~) initEntry::entryBAddrLo1_$1 ← (byte*)(byte*~) initEntry::entryBAddrLo1_$0
Inlining cast (byte*~) initEntry::entryBAddrHi1_$1 ← (byte*)(byte*~) initEntry::entryBAddrHi1_$0
Inlining cast (byte*~) initEntry::entryTHi1_$1 ← (byte*)(byte*~) initEntry::entryTHi1_$0
Inlining cast (byte*~) initEntry::entryTLo1_$1 ← (byte*)(byte*~) initEntry::entryTLo1_$0
Inlining cast (byte**~) printEntry::entryBufDisk1_$1 ← (byte**)(byte*~) printEntry::entryBufDisk1_$0
Inlining cast (word~) printEntry::$2 ← (word)*((byte**~) printEntry::$1)
Inlining cast (byte**~) printEntry::entryBufEdit1_$1 ← (byte**)(byte*~) printEntry::entryBufEdit1_$0
Inlining cast (word~) printEntry::$7 ← (word)*((byte**~) printEntry::$6)
Inlining cast (word*~) printEntry::entryTsLen1_$1 ← (word*)(byte*~) printEntry::entryTsLen1_$0
Inlining cast (word**~) printEntry::entryTsOrder1_$1 ← (word**)(byte*~) printEntry::entryTsOrder1_$0
Inlining cast (word~) printEntry::$16 ← (word)*((word**~) printEntry::$15)
Inlining cast (byte*~) printEntry::entryTLastLink1_$1 ← (byte*)(byte*~) printEntry::entryTLastLink1_$0
Inlining cast (byte*~) printEntry::entrySLastLink1_$1 ← (byte*)(byte*~) printEntry::entrySLastLink1_$0
Inlining cast (byte*~) printEntry::entryBFlag1_$1 ← (byte*)(byte*~) printEntry::entryBFlag1_$0
Inlining cast (word*~) printEntry::entryUCross1_$1 ← (word*)(byte*~) printEntry::entryUCross1_$0
Inlining cast (byte*~) printEntry::entryBAddrLo1_$1 ← (byte*)(byte*~) printEntry::entryBAddrLo1_$0
Inlining cast (byte*~) printEntry::entryBAddrHi1_$1 ← (byte*)(byte*~) printEntry::entryBAddrHi1_$0
Inlining cast (byte*~) printEntry::entryTHi1_$1 ← (byte*)(byte*~) printEntry::entryTHi1_$0
Inlining cast (byte*~) printEntry::entryTLo1_$1 ← (byte*)(byte*~) printEntry::entryTLo1_$0
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 56320
Simplifying constant pointer cast (byte*) 56321
Simplifying constant pointer cast (byte*) 56322
Simplifying constant pointer cast (byte*) 56323
Simplifying constant integer cast $fe
Simplifying constant integer cast $fd
Simplifying constant integer cast $fb
Simplifying constant integer cast $f7
Simplifying constant integer cast $ef
Simplifying constant integer cast $df
Simplifying constant integer cast $bf
Simplifying constant integer cast $7f
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 4
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast $20
Simplifying constant integer cast $40
Simplifying constant integer cast $80
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant pointer cast (byte*) 1024
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 4
Simplifying constant integer cast $f
Simplifying constant integer cast $3e8
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast 3
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 0
Simplifying constant integer cast $11
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $1111
Simplifying constant integer cast 2
Simplifying constant integer cast $2222
Simplifying constant integer cast 4
Simplifying constant integer cast $3333
Simplifying constant integer cast 6
Simplifying constant integer cast $4444
Simplifying constant integer cast 8
Simplifying constant integer cast (byte*~) initEntry::entryTLastLink1_$0
Simplifying constant integer cast $55
Simplifying constant integer cast 9
Simplifying constant integer cast (byte*~) initEntry::entrySLastLink1_$0
Simplifying constant integer cast $66
Simplifying constant integer cast $a
Simplifying constant integer cast (byte*~) initEntry::entryBFlag1_$0
Simplifying constant integer cast $77
Simplifying constant integer cast $b
Simplifying constant integer cast $88
Simplifying constant integer cast $c
Simplifying constant integer cast $9999
Simplifying constant integer cast $e
Simplifying constant integer cast (byte*~) initEntry::entryBAddrLo1_$0
Simplifying constant integer cast $aa
Simplifying constant integer cast $f
Simplifying constant integer cast (byte*~) initEntry::entryBAddrHi1_$0
Simplifying constant integer cast $bb
Simplifying constant integer cast $10
Simplifying constant integer cast (byte*~) initEntry::entryTHi1_$0
Simplifying constant integer cast $cc
Simplifying constant integer cast $11
Simplifying constant integer cast (byte*~) initEntry::entryTLo1_$0
Simplifying constant integer cast $dd
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast 8
Simplifying constant integer cast (byte*~) printEntry::entryTLastLink1_$0
Simplifying constant integer cast 9
Simplifying constant integer cast (byte*~) printEntry::entrySLastLink1_$0
Simplifying constant integer cast $a
Simplifying constant integer cast (byte*~) printEntry::entryBFlag1_$0
Simplifying constant integer cast $b
Simplifying constant integer cast $c
Simplifying constant integer cast $e
Simplifying constant integer cast (byte*~) printEntry::entryBAddrLo1_$0
Simplifying constant integer cast $f
Simplifying constant integer cast (byte*~) printEntry::entryBAddrHi1_$0
Simplifying constant integer cast $10
Simplifying constant integer cast (byte*~) printEntry::entryTHi1_$0
Simplifying constant integer cast $11
Simplifying constant integer cast (byte*~) printEntry::entryTLo1_$0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) $f
Finalized unsigned number type (word) $3e8
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $11
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (word) $1111
Finalized unsigned number type (byte) 2
Finalized unsigned number type (word) $2222
Finalized unsigned number type (byte) 4
Finalized unsigned number type (word) $3333
Finalized unsigned number type (byte) 6
Finalized unsigned number type (word) $4444
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) 9
Finalized unsigned number type (byte) $66
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $77
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $88
Finalized unsigned number type (byte) $c
Finalized unsigned number type (word) $9999
Finalized unsigned number type (byte) $e
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $f
Finalized unsigned number type (byte) $bb
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) $cc
Finalized unsigned number type (byte) $11
Finalized unsigned number type (byte) $dd
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 2
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) 8
Finalized unsigned number type (byte) 9
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) $b
Finalized unsigned number type (byte) $c
Finalized unsigned number type (byte) $e
Finalized unsigned number type (byte) $f
Finalized unsigned number type (byte) $10
Finalized unsigned number type (byte) $11
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in (unumber~) mul8u::$1 ← (byte) mul8u::a#4 & (byte) 1
Inferred type updated to byte in (unumber~) print_byte::$2 ← (byte) print_byte::b#11 & (byte) $f
Inferred type updated to byte in (unumber~) keyboard_key_pressed::$0 ← (byte) keyboard_key_pressed::key#2 & (byte) 7
Inferred type updated to word in (unumber~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#2
Inferred type updated to word in (unumber~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#3
Inferred type updated to word in (unumber~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#4
Inferred type updated to word in (unumber~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#5
Inferred type updated to byte in (unumber~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#6
Inferred type updated to byte in (unumber~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#7
Inferred type updated to byte in (unumber~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#8
Inferred type updated to byte in (unumber~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#9
Inferred type updated to word in (unumber~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10
Inferred type updated to byte in (unumber~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#11
Inferred type updated to byte in (unumber~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#12
Inferred type updated to byte in (unumber~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#13
Inferred type updated to byte in (unumber~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#14
Inversing boolean not [9] (bool~) mul8u::$3 ← (byte~) mul8u::$1 == (byte) 0 from [8] (bool~) mul8u::$2 ← (byte~) mul8u::$1 != (byte) 0
Inversing boolean not [26] (bool~) memset::$1 ← (word) memset::num#1 <= (byte) 0 from [25] (bool~) memset::$0 ← (word) memset::num#1 > (byte) 0
Successful SSA optimization Pass2UnaryNotSimplification
Alias (word) mul8u::mb#0 = (byte) mul8u::b#2 
Alias (byte) mul8u::a#3 = (byte) mul8u::a#4 (byte) mul8u::a#7 
Alias (word) mul8u::mb#3 = (word) mul8u::mb#4 (word) mul8u::mb#5 
Alias (word) mul8u::res#2 = (word) mul8u::res#5 (word) mul8u::res#4 (word) mul8u::return#0 (word) mul8u::res#3 (word) mul8u::return#4 (word) mul8u::return#1 
Alias (byte) mul8u::a#0 = (byte~) mul8u::$5 
Alias (word) mul8u::mb#1 = (word~) mul8u::$6 
Alias (word) mul8u::res#1 = (word~) mul8u::$4 
Alias (void*) memset::return#0 = (void*) memset::str#1 (void*) memset::return#3 (void*) memset::return#1 
Alias (void*) memset::str#2 = (void*) memset::str#3 
Alias (word) memset::num#1 = (word) memset::num#2 
Alias (byte) memset::c#3 = (byte) memset::c#4 
Alias (byte*) memset::end#0 = (byte*~) memset::$3 
Alias (byte) memset::c#1 = (byte) memset::c#2 
Alias (byte*) memset::dst#2 = (byte*) memset::dst#3 
Alias (byte*) memset::end#1 = (byte*) memset::end#2 
Alias (void*) memset::str#4 = (void*) memset::str#5 
Alias (byte*) print_line_cursor#0 = (byte*) print_screen#0 (byte*) print_char_cursor#0 (byte*) print_line_cursor#99 (byte*) print_char_cursor#181 (byte*) print_screen#36 (byte*) print_line_cursor#82 (byte*) print_char_cursor#163 (byte*) print_screen#35 
Alias (byte*) print_str::str#18 = (byte*) print_str::str#19 
Alias (byte*) print_char_cursor#142 = (byte*) print_char_cursor#72 (byte*) print_char_cursor#73 (byte*) print_char_cursor#2 
Alias (byte*) print_line_cursor#1 = (byte*~) print_ln::$0 (byte*) print_line_cursor#33 (byte*) print_char_cursor#3 (byte*) print_line_cursor#34 (byte*) print_char_cursor#75 (byte*) print_line_cursor#2 (byte*) print_char_cursor#4 
Alias (byte) print_byte::b#0 = (byte~) print_word::$0 
Alias (word) print_word::w#5 = (word) print_word::w#6 
Alias (byte*) print_char_cursor#5 = (byte*) print_char_cursor#76 
Alias (byte) print_byte::b#1 = (byte~) print_word::$2 
Alias (byte*) print_char_cursor#6 = (byte*) print_char_cursor#77 (byte*) print_char_cursor#78 (byte*) print_char_cursor#7 
Alias (byte) print_byte::b#10 = (byte) print_byte::b#11 
Alias (byte*) print_char_cursor#79 = (byte*) print_char_cursor#8 
Alias (byte*) print_char_cursor#10 = (byte*) print_char_cursor#9 (byte*) print_char_cursor#80 (byte*) print_char_cursor#81 
Alias (byte*) print_char_cursor#11 = (byte*) print_char_cursor#83 (byte*) print_char_cursor#12 
Alias (byte*) print_line_cursor#3 = (byte*) print_screen#2 (byte*) print_screen#1 (byte*) print_char_cursor#13 (byte*) print_line_cursor#35 (byte*) print_char_cursor#84 (byte*) print_line_cursor#4 (byte*) print_char_cursor#14 
Alias (byte) keyboard_matrix_read::return#0 = (byte) keyboard_matrix_read::row_pressed_bits#0 (byte~) keyboard_matrix_read::$0 (byte) keyboard_matrix_read::return#3 (byte) keyboard_matrix_read::return#1 
Alias (byte) keyboard_key_pressed::colidx#0 = (byte~) keyboard_key_pressed::$0 (byte) keyboard_key_pressed::colidx#1 
Alias (byte) keyboard_key_pressed::rowidx#0 = (byte~) keyboard_key_pressed::$1 
Alias (byte) keyboard_matrix_read::return#2 = (byte) keyboard_matrix_read::return#4 
Alias (byte) keyboard_key_pressed::return#0 = (byte~) keyboard_key_pressed::$3 (byte) keyboard_key_pressed::return#4 (byte) keyboard_key_pressed::return#1 
Alias (byte*) print_screen#12 = (byte*) print_screen#33 (byte*) print_screen#34 (byte*) print_screen#30 (byte*) print_screen#27 (byte*) print_screen#24 (byte*) print_screen#21 (byte*) print_screen#18 (byte*) print_screen#15 (byte*) print_screen#9 (byte*) print_screen#6 (byte*) print_screen#3 (byte*) print_screen#31 (byte*) print_screen#28 (byte*) print_screen#25 (byte*) print_screen#22 (byte*) print_screen#19 (byte*) print_screen#16 (byte*) print_screen#13 
Alias (byte*) print_line_cursor#100 = (byte*) print_line_cursor#152 (byte*) print_line_cursor#153 (byte*) print_line_cursor#151 (byte*) print_line_cursor#150 (byte*) print_line_cursor#149 (byte*) print_line_cursor#148 (byte*) print_line_cursor#146 (byte*) print_line_cursor#132 (byte*) print_line_cursor#116 (byte*) print_line_cursor#83 (byte*) print_line_cursor#64 
Alias (byte*) print_char_cursor#146 = (byte*) print_char_cursor#205 (byte*) print_char_cursor#206 (byte*) print_char_cursor#204 (byte*) print_char_cursor#203 (byte*) print_char_cursor#202 (byte*) print_char_cursor#201 (byte*) print_char_cursor#200 (byte*) print_char_cursor#199 (byte*) print_char_cursor#198 (byte*) print_char_cursor#182 (byte*) print_char_cursor#165 
Alias (byte) main::fileEntry1_idx#0 = (byte) main::fileEntry1_idx#1 
Alias (word) mul8u::return#2 = (word) mul8u::return#5 
Alias (byte*) main::entry1#0 = (byte*) main::fileEntry1_return#0 (byte*~) main::fileEntry1_$1 (byte*) main::fileEntry1_return#2 (byte*) main::fileEntry1_return#1 (byte*) main::fileEntry1_return#3 (byte*~) main::$1 (byte*) main::entry1#7 (byte*) main::entry1#5 (byte*) main::entry1#3 (byte*) main::entry1#1 (byte*) main::entry1#10 (byte*) main::entry1#9 (byte*) main::entry1#8 (byte*) main::entry1#6 (byte*) main::entry1#4 (byte*) main::entry1#2 
Alias (byte) main::fileEntry2_idx#0 = (byte) main::fileEntry2_idx#1 
Alias (word) mul8u::return#3 = (word) mul8u::return#6 
Alias (byte*) main::entry2#0 = (byte*) main::fileEntry2_return#0 (byte*~) main::fileEntry2_$1 (byte*) main::fileEntry2_return#2 (byte*) main::fileEntry2_return#1 (byte*) main::fileEntry2_return#3 (byte*~) main::$2 (byte*) main::entry2#1 (byte*) main::entry2#16 (byte*) main::entry2#15 (byte*) main::entry2#14 (byte*) main::entry2#13 (byte*) main::entry2#12 (byte*) main::entry2#11 (byte*) main::entry2#10 (byte*) main::entry2#9 
Alias (byte*) print_line_cursor#36 = (byte*) print_line_cursor#5 (byte*) print_line_cursor#65 
Alias (byte*) print_char_cursor#15 = (byte*) print_char_cursor#85 
Alias (byte*) print_char_cursor#16 = (byte*) print_char_cursor#86 
Alias (byte*) print_line_cursor#37 = (byte*) print_line_cursor#6 
Alias (byte*) print_char_cursor#17 = (byte*) print_char_cursor#87 
Alias (byte*) print_line_cursor#38 = (byte*) print_line_cursor#7 
Alias (byte*) print_char_cursor#18 = (byte*) print_char_cursor#88 
Alias (byte*) print_char_cursor#19 = (byte*) print_char_cursor#89 
Alias (byte*) print_line_cursor#39 = (byte*) print_line_cursor#8 
Alias (byte*) print_line_cursor#117 = (byte*) print_line_cursor#9 (byte*) print_line_cursor#40 
Alias (byte*) print_char_cursor#20 = (byte*) print_char_cursor#90 
Alias (byte*) print_char_cursor#21 = (byte*) print_char_cursor#91 
Alias (byte) keyboard_key_pressed::return#2 = (byte) keyboard_key_pressed::return#5 
Alias (byte*) print_screen#10 = (byte*) print_screen#7 (byte*) print_screen#4 (byte*) print_screen#32 (byte*) print_screen#29 (byte*) print_screen#26 (byte*) print_screen#23 (byte*) print_screen#20 (byte*) print_screen#17 (byte*) print_screen#14 
Alias (byte*) print_line_cursor#101 = (byte*) print_line_cursor#84 (byte*) print_line_cursor#66 
Alias (byte*) print_char_cursor#147 = (byte*) print_char_cursor#166 (byte*) print_char_cursor#183 
Alias (byte*) main::entry2#2 = (byte*) main::entry2#7 (byte*) main::entry2#8 (byte*) main::entry2#6 (byte*) main::entry2#5 (byte*) main::entry2#4 (byte*) main::entry2#3 
Alias (byte*) print_line_cursor#10 = (byte*) print_line_cursor#41 (byte*) print_line_cursor#67 
Alias (byte*) print_char_cursor#22 = (byte*) print_char_cursor#92 
Alias (byte*) print_char_cursor#23 = (byte*) print_char_cursor#93 
Alias (byte*) print_line_cursor#11 = (byte*) print_line_cursor#42 
Alias (byte*) print_char_cursor#24 = (byte*) print_char_cursor#94 
Alias (byte*) print_line_cursor#12 = (byte*) print_line_cursor#43 
Alias (byte*) print_char_cursor#25 = (byte*) print_char_cursor#95 
Alias (byte*) print_char_cursor#26 = (byte*) print_char_cursor#96 
Alias (byte*) print_line_cursor#13 = (byte*) print_line_cursor#44 
Alias (byte*) print_line_cursor#118 = (byte*) print_line_cursor#14 (byte*) print_line_cursor#45 
Alias (byte*) print_char_cursor#27 = (byte*) print_char_cursor#97 
Alias (byte*) print_char_cursor#28 = (byte*) print_char_cursor#98 
Alias (byte) keyboard_key_pressed::return#3 = (byte) keyboard_key_pressed::return#6 
Alias (byte*) print_screen#11 = (byte*) print_screen#8 (byte*) print_screen#5 
Alias (byte*) print_line_cursor#102 = (byte*) print_line_cursor#85 (byte*) print_line_cursor#68 
Alias (byte*) print_char_cursor#148 = (byte*) print_char_cursor#167 (byte*) print_char_cursor#184 
Alias (byte*) print_line_cursor#15 = (byte*) print_line_cursor#46 (byte*) print_line_cursor#47 (byte*) print_line_cursor#16 
Alias (byte*) print_char_cursor#100 = (byte*) print_char_cursor#29 (byte*) print_char_cursor#99 (byte*) print_char_cursor#30 
Alias (byte*) initEntry::entry#10 = (byte*) initEntry::entryBufDisk1_entry#0 (byte*) initEntry::entry#2 (byte*) initEntry::entryBufDisk1_entry#1 (byte*) initEntry::entry#27 (byte*) initEntry::entry#15 (byte*) initEntry::entry#3 (byte*) initEntry::entryBufEdit1_entry#0 (byte*) initEntry::entryBufEdit1_entry#1 (byte*) initEntry::entry#28 (byte*) initEntry::entry#16 (byte*) initEntry::entry#4 (byte*) initEntry::entryTsLen1_entry#0 (byte*) initEntry::entryTsLen1_entry#1 (byte*) initEntry::entry#29 (byte*) initEntry::entry#17 (byte*) initEntry::entry#5 (byte*) initEntry::entryTsOrder1_entry#0 (byte*) initEntry::entryTsOrder1_entry#1 (byte*) initEntry::entry#30 (byte*) initEntry::entry#18 (byte*) initEntry::entry#6 (byte*) initEntry::entryTLastLink1_entry#0 (byte*) initEntry::entryTLastLink1_entry#1 (byte*) initEntry::entry#31 (byte*) initEntry::entry#19 (byte*) initEntry::entry#7 (byte*) initEntry::entrySLastLink1_entry#0 (byte*) initEntry::entrySLastLink1_entry#1 (byte*) initEntry::entry#32 (byte*) initEntry::entry#20 (byte*) initEntry::entry#8 (byte*) initEntry::entryBFlag1_entry#0 (byte*) initEntry::entryBFlag1_entry#1 (byte*) initEntry::entry#33 (byte*) initEntry::entry#21 (byte*) initEntry::entry#9 (byte*) initEntry::entryBError1_entry#0 (byte*) initEntry::entryBError1_entry#1 (byte*) initEntry::entry#34 (byte*) initEntry::entry#22 (byte*) initEntry::entryUCross1_entry#0 (byte*) initEntry::entryUCross1_entry#1 (byte*) initEntry::entry#35 (byte*) initEntry::entry#23 (byte*) initEntry::entry#11 (byte*) initEntry::entryBAddrLo1_entry#0 (byte*) initEntry::entryBAddrLo1_entry#1 (byte*) initEntry::entry#36 (byte*) initEntry::entry#24 (byte*) initEntry::entry#12 (byte*) initEntry::entryBAddrHi1_entry#0 (byte*) initEntry::entryBAddrHi1_entry#1 (byte*) initEntry::entry#37 (byte*) initEntry::entry#25 (byte*) initEntry::entry#13 (byte*) initEntry::entryTHi1_entry#0 (byte*) initEntry::entryTHi1_entry#1 (byte*) initEntry::entry#38 (byte*) initEntry::entry#26 (byte*) initEntry::entry#14 (byte*) initEntry::entryTLo1_entry#0 (byte*) initEntry::entryTLo1_entry#1 
Alias (byte) initEntry::n#10 = (byte) initEntry::n#28 (byte) initEntry::n#41 (byte) initEntry::n#15 (byte) initEntry::n#2 (byte) initEntry::n#29 (byte) initEntry::n#16 (byte) initEntry::n#3 (byte) initEntry::n#30 (byte) initEntry::n#17 (byte) initEntry::n#4 (byte) initEntry::n#31 (byte) initEntry::n#18 (byte) initEntry::n#5 (byte) initEntry::n#32 (byte) initEntry::n#19 (byte) initEntry::n#6 (byte) initEntry::n#33 (byte) initEntry::n#20 (byte) initEntry::n#7 (byte) initEntry::n#34 (byte) initEntry::n#21 (byte) initEntry::n#8 (byte) initEntry::n#35 (byte) initEntry::n#22 (byte) initEntry::n#9 (byte) initEntry::n#36 (byte) initEntry::n#23 (byte) initEntry::n#37 (byte) initEntry::n#24 (byte) initEntry::n#11 (byte) initEntry::n#38 (byte) initEntry::n#25 (byte) initEntry::n#12 (byte) initEntry::n#39 (byte) initEntry::n#26 (byte) initEntry::n#13 (byte) initEntry::n#40 (byte) initEntry::n#27 (byte) initEntry::n#14 
Alias (byte**) initEntry::entryBufDisk1_return#0 = (byte**~) initEntry::entryBufDisk1_$1 (byte**) initEntry::entryBufDisk1_return#2 (byte**) initEntry::entryBufDisk1_return#1 (byte**) initEntry::entryBufDisk1_return#3 (byte**~) initEntry::$0 
Alias (byte**) initEntry::entryBufEdit1_return#0 = (byte**~) initEntry::entryBufEdit1_$1 (byte**) initEntry::entryBufEdit1_return#2 (byte**) initEntry::entryBufEdit1_return#1 (byte**) initEntry::entryBufEdit1_return#3 (byte**~) initEntry::$2 
Alias (word*) initEntry::entryTsLen1_return#0 = (word*~) initEntry::entryTsLen1_$1 (word*) initEntry::entryTsLen1_return#2 (word*) initEntry::entryTsLen1_return#1 (word*) initEntry::entryTsLen1_return#3 (word*~) initEntry::$4 
Alias (word**) initEntry::entryTsOrder1_return#0 = (word**~) initEntry::entryTsOrder1_$1 (word**) initEntry::entryTsOrder1_return#2 (word**) initEntry::entryTsOrder1_return#1 (word**) initEntry::entryTsOrder1_return#3 (word**~) initEntry::$6 
Alias (byte*) initEntry::entryTLastLink1_return#0 = (byte*~) initEntry::entryTLastLink1_$1 (byte*~) initEntry::entryTLastLink1_$0 (byte*) initEntry::entryTLastLink1_return#2 (byte*) initEntry::entryTLastLink1_return#1 (byte*) initEntry::entryTLastLink1_return#3 (byte*~) initEntry::$8 
Alias (byte*) initEntry::entrySLastLink1_return#0 = (byte*~) initEntry::entrySLastLink1_$1 (byte*~) initEntry::entrySLastLink1_$0 (byte*) initEntry::entrySLastLink1_return#2 (byte*) initEntry::entrySLastLink1_return#1 (byte*) initEntry::entrySLastLink1_return#3 (byte*~) initEntry::$10 
Alias (byte*) initEntry::entryBFlag1_return#0 = (byte*~) initEntry::entryBFlag1_$1 (byte*~) initEntry::entryBFlag1_$0 (byte*) initEntry::entryBFlag1_return#2 (byte*) initEntry::entryBFlag1_return#1 (byte*) initEntry::entryBFlag1_return#3 (byte*~) initEntry::$12 
Alias (byte*) initEntry::entryBError1_return#0 = (byte*~) initEntry::entryBError1_$0 (byte*) initEntry::entryBError1_return#2 (byte*) initEntry::entryBError1_return#1 (byte*) initEntry::entryBError1_return#3 (byte*~) initEntry::$14 
Alias (word*) initEntry::entryUCross1_return#0 = (word*~) initEntry::entryUCross1_$1 (word*) initEntry::entryUCross1_return#2 (word*) initEntry::entryUCross1_return#1 (word*) initEntry::entryUCross1_return#3 (word*~) initEntry::$16 
Alias (byte*) initEntry::entryBAddrLo1_return#0 = (byte*~) initEntry::entryBAddrLo1_$1 (byte*~) initEntry::entryBAddrLo1_$0 (byte*) initEntry::entryBAddrLo1_return#2 (byte*) initEntry::entryBAddrLo1_return#1 (byte*) initEntry::entryBAddrLo1_return#3 (byte*~) initEntry::$18 
Alias (byte*) initEntry::entryBAddrHi1_return#0 = (byte*~) initEntry::entryBAddrHi1_$1 (byte*~) initEntry::entryBAddrHi1_$0 (byte*) initEntry::entryBAddrHi1_return#2 (byte*) initEntry::entryBAddrHi1_return#1 (byte*) initEntry::entryBAddrHi1_return#3 (byte*~) initEntry::$20 
Alias (byte*) initEntry::entryTHi1_return#0 = (byte*~) initEntry::entryTHi1_$1 (byte*~) initEntry::entryTHi1_$0 (byte*) initEntry::entryTHi1_return#2 (byte*) initEntry::entryTHi1_return#1 (byte*) initEntry::entryTHi1_return#3 (byte*~) initEntry::$22 
Alias (byte*) initEntry::entryTLo1_return#0 = (byte*~) initEntry::entryTLo1_$1 (byte*~) initEntry::entryTLo1_$0 (byte*) initEntry::entryTLo1_return#2 (byte*) initEntry::entryTLo1_return#1 (byte*) initEntry::entryTLo1_return#3 (byte*~) initEntry::$24 
Alias (byte*) printEntry::entry#10 = (byte*) printEntry::entry#2 (byte*) printEntry::entry#15 (byte*) printEntry::entryBufDisk1_entry#0 (byte*) printEntry::entryBufDisk1_entry#1 (byte*) printEntry::entry#64 (byte*) printEntry::entry#52 (byte*) printEntry::entry#40 (byte*) printEntry::entry#28 (byte*) printEntry::entry#16 (byte*) printEntry::entry#3 (byte*) printEntry::entryBufEdit1_entry#0 (byte*) printEntry::entryBufEdit1_entry#1 (byte*) printEntry::entry#65 (byte*) printEntry::entry#53 (byte*) printEntry::entry#41 (byte*) printEntry::entry#29 (byte*) printEntry::entry#17 (byte*) printEntry::entry#4 (byte*) printEntry::entryTsLen1_entry#0 (byte*) printEntry::entryTsLen1_entry#1 (byte*) printEntry::entry#66 (byte*) printEntry::entry#54 (byte*) printEntry::entry#42 (byte*) printEntry::entry#30 (byte*) printEntry::entry#18 (byte*) printEntry::entry#5 (byte*) printEntry::entryTsOrder1_entry#0 (byte*) printEntry::entryTsOrder1_entry#1 (byte*) printEntry::entry#67 (byte*) printEntry::entry#55 (byte*) printEntry::entry#43 (byte*) printEntry::entry#31 (byte*) printEntry::entry#19 (byte*) printEntry::entry#6 (byte*) printEntry::entryTLastLink1_entry#0 (byte*) printEntry::entryTLastLink1_entry#1 (byte*) printEntry::entry#68 (byte*) printEntry::entry#56 (byte*) printEntry::entry#44 (byte*) printEntry::entry#32 (byte*) printEntry::entry#20 (byte*) printEntry::entry#7 (byte*) printEntry::entrySLastLink1_entry#0 (byte*) printEntry::entrySLastLink1_entry#1 (byte*) printEntry::entry#69 (byte*) printEntry::entry#57 (byte*) printEntry::entry#45 (byte*) printEntry::entry#33 (byte*) printEntry::entry#21 (byte*) printEntry::entry#8 (byte*) printEntry::entryBFlag1_entry#0 (byte*) printEntry::entryBFlag1_entry#1 (byte*) printEntry::entry#70 (byte*) printEntry::entry#58 (byte*) printEntry::entry#46 (byte*) printEntry::entry#34 (byte*) printEntry::entry#22 (byte*) printEntry::entry#9 (byte*) printEntry::entryBError1_entry#0 (byte*) printEntry::entryBError1_entry#1 (byte*) printEntry::entry#71 (byte*) printEntry::entry#59 (byte*) printEntry::entry#47 (byte*) printEntry::entry#35 (byte*) printEntry::entry#23 (byte*) printEntry::entryUCross1_entry#0 (byte*) printEntry::entryUCross1_entry#1 (byte*) printEntry::entry#72 (byte*) printEntry::entry#60 (byte*) printEntry::entry#48 (byte*) printEntry::entry#36 (byte*) printEntry::entry#24 (byte*) printEntry::entry#11 (byte*) printEntry::entryBAddrLo1_entry#0 (byte*) printEntry::entryBAddrLo1_entry#1 (byte*) printEntry::entry#73 (byte*) printEntry::entry#61 (byte*) printEntry::entry#49 (byte*) printEntry::entry#37 (byte*) printEntry::entry#25 (byte*) printEntry::entry#12 (byte*) printEntry::entryBAddrHi1_entry#0 (byte*) printEntry::entryBAddrHi1_entry#1 (byte*) printEntry::entry#74 (byte*) printEntry::entry#62 (byte*) printEntry::entry#50 (byte*) printEntry::entry#38 (byte*) printEntry::entry#26 (byte*) printEntry::entry#13 (byte*) printEntry::entryTHi1_entry#0 (byte*) printEntry::entryTHi1_entry#1 (byte*) printEntry::entry#75 (byte*) printEntry::entry#63 (byte*) printEntry::entry#51 (byte*) printEntry::entry#39 (byte*) printEntry::entry#27 (byte*) printEntry::entry#14 (byte*) printEntry::entryTLo1_entry#0 (byte*) printEntry::entryTLo1_entry#1 
Alias (byte*) print_line_cursor#103 = (byte*) print_line_cursor#133 (byte*) print_line_cursor#147 (byte*) print_line_cursor#119 (byte*) print_line_cursor#86 (byte*) print_line_cursor#69 
Alias (byte*) print_char_cursor#101 = (byte*) print_char_cursor#31 (byte*) print_char_cursor#185 (byte*) print_char_cursor#168 (byte*) print_char_cursor#150 
Alias (byte**) printEntry::entryBufDisk1_return#0 = (byte**~) printEntry::entryBufDisk1_$1 (byte**) printEntry::entryBufDisk1_return#2 (byte**) printEntry::entryBufDisk1_return#1 (byte**) printEntry::entryBufDisk1_return#3 (byte**~) printEntry::$1 
Alias (word) print_word::w#0 = (word~) printEntry::$2 
Alias (byte*) print_char_cursor#102 = (byte*) print_char_cursor#32 
Alias (byte*) print_line_cursor#104 = (byte*) print_line_cursor#17 (byte*) print_line_cursor#48 (byte*) print_line_cursor#134 (byte*) print_line_cursor#120 (byte*) print_line_cursor#87 (byte*) print_line_cursor#70 
Alias (byte*) print_char_cursor#103 = (byte*) print_char_cursor#33 
Alias (byte*) print_char_cursor#104 = (byte*) print_char_cursor#34 (byte*) print_char_cursor#186 (byte*) print_char_cursor#169 (byte*) print_char_cursor#151 
Alias (byte**) printEntry::entryBufEdit1_return#0 = (byte**~) printEntry::entryBufEdit1_$1 (byte**) printEntry::entryBufEdit1_return#2 (byte**) printEntry::entryBufEdit1_return#1 (byte**) printEntry::entryBufEdit1_return#3 (byte**~) printEntry::$6 
Alias (word) print_word::w#1 = (word~) printEntry::$7 
Alias (byte*) print_char_cursor#105 = (byte*) print_char_cursor#35 
Alias (byte*) print_line_cursor#105 = (byte*) print_line_cursor#18 (byte*) print_line_cursor#49 (byte*) print_line_cursor#135 (byte*) print_line_cursor#121 (byte*) print_line_cursor#88 (byte*) print_line_cursor#71 
Alias (byte*) print_char_cursor#106 = (byte*) print_char_cursor#36 
Alias (byte*) print_char_cursor#107 = (byte*) print_char_cursor#37 (byte*) print_char_cursor#187 (byte*) print_char_cursor#170 (byte*) print_char_cursor#152 
Alias (word*) printEntry::entryTsLen1_return#0 = (word*~) printEntry::entryTsLen1_$1 (word*) printEntry::entryTsLen1_return#2 (word*) printEntry::entryTsLen1_return#1 (word*) printEntry::entryTsLen1_return#3 (word*~) printEntry::$11 
Alias (byte*) print_char_cursor#108 = (byte*) print_char_cursor#38 
Alias (byte*) print_line_cursor#106 = (byte*) print_line_cursor#19 (byte*) print_line_cursor#50 (byte*) print_line_cursor#136 (byte*) print_line_cursor#122 (byte*) print_line_cursor#89 (byte*) print_line_cursor#72 
Alias (byte*) print_char_cursor#109 = (byte*) print_char_cursor#39 
Alias (byte*) print_char_cursor#110 = (byte*) print_char_cursor#40 (byte*) print_char_cursor#188 (byte*) print_char_cursor#171 (byte*) print_char_cursor#153 
Alias (word**) printEntry::entryTsOrder1_return#0 = (word**~) printEntry::entryTsOrder1_$1 (word**) printEntry::entryTsOrder1_return#2 (word**) printEntry::entryTsOrder1_return#1 (word**) printEntry::entryTsOrder1_return#3 (word**~) printEntry::$15 
Alias (word) print_word::w#3 = (word~) printEntry::$16 
Alias (byte*) print_char_cursor#111 = (byte*) print_char_cursor#41 
Alias (byte*) print_line_cursor#107 = (byte*) print_line_cursor#20 (byte*) print_line_cursor#51 (byte*) print_line_cursor#137 (byte*) print_line_cursor#123 (byte*) print_line_cursor#90 (byte*) print_line_cursor#73 
Alias (byte*) print_char_cursor#112 = (byte*) print_char_cursor#42 
Alias (byte*) print_char_cursor#113 = (byte*) print_char_cursor#43 (byte*) print_char_cursor#189 (byte*) print_char_cursor#172 (byte*) print_char_cursor#154 
Alias (byte*) printEntry::entryTLastLink1_return#0 = (byte*~) printEntry::entryTLastLink1_$1 (byte*~) printEntry::entryTLastLink1_$0 (byte*) printEntry::entryTLastLink1_return#2 (byte*) printEntry::entryTLastLink1_return#1 (byte*) printEntry::entryTLastLink1_return#3 (byte*~) printEntry::$20 
Alias (byte*) print_char_cursor#114 = (byte*) print_char_cursor#44 
Alias (byte*) print_line_cursor#108 = (byte*) print_line_cursor#21 (byte*) print_line_cursor#52 (byte*) print_line_cursor#138 (byte*) print_line_cursor#124 (byte*) print_line_cursor#91 (byte*) print_line_cursor#74 
Alias (byte*) print_char_cursor#115 = (byte*) print_char_cursor#45 
Alias (byte*) print_char_cursor#116 = (byte*) print_char_cursor#46 (byte*) print_char_cursor#190 (byte*) print_char_cursor#173 (byte*) print_char_cursor#155 
Alias (byte*) printEntry::entrySLastLink1_return#0 = (byte*~) printEntry::entrySLastLink1_$1 (byte*~) printEntry::entrySLastLink1_$0 (byte*) printEntry::entrySLastLink1_return#2 (byte*) printEntry::entrySLastLink1_return#1 (byte*) printEntry::entrySLastLink1_return#3 (byte*~) printEntry::$24 
Alias (byte*) print_char_cursor#117 = (byte*) print_char_cursor#47 
Alias (byte*) print_line_cursor#109 = (byte*) print_line_cursor#22 (byte*) print_line_cursor#53 (byte*) print_line_cursor#139 (byte*) print_line_cursor#125 (byte*) print_line_cursor#92 (byte*) print_line_cursor#75 
Alias (byte*) print_char_cursor#118 = (byte*) print_char_cursor#48 
Alias (byte*) print_char_cursor#119 = (byte*) print_char_cursor#49 (byte*) print_char_cursor#191 (byte*) print_char_cursor#174 (byte*) print_char_cursor#156 
Alias (byte*) printEntry::entryBFlag1_return#0 = (byte*~) printEntry::entryBFlag1_$1 (byte*~) printEntry::entryBFlag1_$0 (byte*) printEntry::entryBFlag1_return#2 (byte*) printEntry::entryBFlag1_return#1 (byte*) printEntry::entryBFlag1_return#3 (byte*~) printEntry::$28 
Alias (byte*) print_char_cursor#120 = (byte*) print_char_cursor#50 
Alias (byte*) print_line_cursor#110 = (byte*) print_line_cursor#23 (byte*) print_line_cursor#54 (byte*) print_line_cursor#140 (byte*) print_line_cursor#126 (byte*) print_line_cursor#93 (byte*) print_line_cursor#76 
Alias (byte*) print_char_cursor#121 = (byte*) print_char_cursor#51 
Alias (byte*) print_char_cursor#122 = (byte*) print_char_cursor#52 (byte*) print_char_cursor#192 (byte*) print_char_cursor#175 (byte*) print_char_cursor#157 
Alias (byte*) printEntry::entryBError1_return#0 = (byte*~) printEntry::entryBError1_$0 (byte*) printEntry::entryBError1_return#2 (byte*) printEntry::entryBError1_return#1 (byte*) printEntry::entryBError1_return#3 (byte*~) printEntry::$32 
Alias (byte*) print_char_cursor#123 = (byte*) print_char_cursor#53 
Alias (byte*) print_line_cursor#111 = (byte*) print_line_cursor#24 (byte*) print_line_cursor#55 (byte*) print_line_cursor#141 (byte*) print_line_cursor#127 (byte*) print_line_cursor#94 (byte*) print_line_cursor#77 
Alias (byte*) print_char_cursor#124 = (byte*) print_char_cursor#54 
Alias (byte*) print_char_cursor#125 = (byte*) print_char_cursor#55 (byte*) print_char_cursor#193 (byte*) print_char_cursor#176 (byte*) print_char_cursor#158 
Alias (word*) printEntry::entryUCross1_return#0 = (word*~) printEntry::entryUCross1_$1 (word*) printEntry::entryUCross1_return#2 (word*) printEntry::entryUCross1_return#1 (word*) printEntry::entryUCross1_return#3 (word*~) printEntry::$36 
Alias (byte*) print_char_cursor#126 = (byte*) print_char_cursor#56 
Alias (byte*) print_line_cursor#112 = (byte*) print_line_cursor#25 (byte*) print_line_cursor#56 (byte*) print_line_cursor#142 (byte*) print_line_cursor#128 (byte*) print_line_cursor#95 (byte*) print_line_cursor#78 
Alias (byte*) print_char_cursor#127 = (byte*) print_char_cursor#57 
Alias (byte*) print_char_cursor#128 = (byte*) print_char_cursor#58 (byte*) print_char_cursor#194 (byte*) print_char_cursor#177 (byte*) print_char_cursor#159 
Alias (byte*) printEntry::entryBAddrLo1_return#0 = (byte*~) printEntry::entryBAddrLo1_$1 (byte*~) printEntry::entryBAddrLo1_$0 (byte*) printEntry::entryBAddrLo1_return#2 (byte*) printEntry::entryBAddrLo1_return#1 (byte*) printEntry::entryBAddrLo1_return#3 (byte*~) printEntry::$40 
Alias (byte*) print_char_cursor#129 = (byte*) print_char_cursor#59 
Alias (byte*) print_line_cursor#113 = (byte*) print_line_cursor#26 (byte*) print_line_cursor#57 (byte*) print_line_cursor#143 (byte*) print_line_cursor#129 (byte*) print_line_cursor#96 (byte*) print_line_cursor#79 
Alias (byte*) print_char_cursor#130 = (byte*) print_char_cursor#60 
Alias (byte*) print_char_cursor#131 = (byte*) print_char_cursor#61 (byte*) print_char_cursor#195 (byte*) print_char_cursor#178 (byte*) print_char_cursor#160 
Alias (byte*) printEntry::entryBAddrHi1_return#0 = (byte*~) printEntry::entryBAddrHi1_$1 (byte*~) printEntry::entryBAddrHi1_$0 (byte*) printEntry::entryBAddrHi1_return#2 (byte*) printEntry::entryBAddrHi1_return#1 (byte*) printEntry::entryBAddrHi1_return#3 (byte*~) printEntry::$44 
Alias (byte*) print_char_cursor#132 = (byte*) print_char_cursor#62 
Alias (byte*) print_line_cursor#114 = (byte*) print_line_cursor#27 (byte*) print_line_cursor#58 (byte*) print_line_cursor#144 (byte*) print_line_cursor#130 (byte*) print_line_cursor#97 (byte*) print_line_cursor#80 
Alias (byte*) print_char_cursor#133 = (byte*) print_char_cursor#63 
Alias (byte*) print_char_cursor#134 = (byte*) print_char_cursor#64 (byte*) print_char_cursor#196 (byte*) print_char_cursor#179 (byte*) print_char_cursor#161 
Alias (byte*) printEntry::entryTHi1_return#0 = (byte*~) printEntry::entryTHi1_$1 (byte*~) printEntry::entryTHi1_$0 (byte*) printEntry::entryTHi1_return#2 (byte*) printEntry::entryTHi1_return#1 (byte*) printEntry::entryTHi1_return#3 (byte*~) printEntry::$48 
Alias (byte*) print_char_cursor#135 = (byte*) print_char_cursor#65 
Alias (byte*) print_line_cursor#115 = (byte*) print_line_cursor#28 (byte*) print_line_cursor#59 (byte*) print_line_cursor#145 (byte*) print_line_cursor#131 (byte*) print_line_cursor#98 (byte*) print_line_cursor#81 
Alias (byte*) print_char_cursor#136 = (byte*) print_char_cursor#66 
Alias (byte*) print_char_cursor#137 = (byte*) print_char_cursor#67 (byte*) print_char_cursor#197 (byte*) print_char_cursor#180 (byte*) print_char_cursor#162 
Alias (byte*) printEntry::entryTLo1_return#0 = (byte*~) printEntry::entryTLo1_$1 (byte*~) printEntry::entryTLo1_$0 (byte*) printEntry::entryTLo1_return#2 (byte*) printEntry::entryTLo1_return#1 (byte*) printEntry::entryTLo1_return#3 (byte*~) printEntry::$52 
Alias (byte*) print_char_cursor#138 = (byte*) print_char_cursor#68 
Alias (byte*) print_line_cursor#29 = (byte*) print_line_cursor#60 (byte*) print_line_cursor#61 (byte*) print_line_cursor#30 
Alias (byte*) print_char_cursor#139 = (byte*) print_char_cursor#69 (byte*) print_char_cursor#140 (byte*) print_char_cursor#70 
Alias (byte*) print_line_cursor#31 = (byte*) print_line_cursor#62 
Alias (byte*) print_char_cursor#141 = (byte*) print_char_cursor#71 
Successful SSA optimization Pass2AliasElimination
Alias (byte) mul8u::a#3 = (byte) mul8u::a#5 
Alias (word) mul8u::mb#2 = (word) mul8u::mb#3 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values (word) memset::num#1 (word) memset::num#0
Identical Phi Values (void*) memset::str#2 (void*) memset::str#0
Identical Phi Values (byte) memset::c#3 (byte) memset::c#0
Identical Phi Values (byte*) memset::end#1 (byte*) memset::end#0
Identical Phi Values (void*) memset::str#4 (void*) memset::str#2
Identical Phi Values (byte) memset::c#1 (byte) memset::c#3
Identical Phi Values (byte*) print_char_cursor#74 (byte*) print_char_cursor#143
Identical Phi Values (byte*) print_char_cursor#5 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_char_cursor#6 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_char_cursor#79 (byte*) print_char_cursor#11
Identical Phi Values (byte*) print_char_cursor#10 (byte*) print_char_cursor#11
Identical Phi Values (byte) keyboard_matrix_read::rowid#1 (byte) keyboard_matrix_read::rowid#0
Identical Phi Values (byte*) print_screen#12 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_line_cursor#100 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_char_cursor#146 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_line_cursor#36 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#15 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#16 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_line_cursor#37 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#17 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_line_cursor#38 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#18 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#19 (byte*) print_char_cursor#139
Identical Phi Values (byte*) print_line_cursor#39 (byte*) print_line_cursor#29
Identical Phi Values (byte*) print_line_cursor#117 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#20 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#21 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_screen#10 (byte*) print_screen#12
Identical Phi Values (byte*) print_line_cursor#101 (byte*) print_line_cursor#117
Identical Phi Values (byte*) print_char_cursor#147 (byte*) print_char_cursor#21
Identical Phi Values (byte*) main::entry2#2 (byte*) main::entry2#0
Identical Phi Values (byte*) print_line_cursor#10 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#22 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#23 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_line_cursor#11 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#24 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_line_cursor#12 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#25 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#26 (byte*) print_char_cursor#139
Identical Phi Values (byte*) print_line_cursor#13 (byte*) print_line_cursor#29
Identical Phi Values (byte*) print_line_cursor#118 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#27 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#28 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_screen#11 (byte*) print_screen#10
Identical Phi Values (byte*) print_line_cursor#102 (byte*) print_line_cursor#118
Identical Phi Values (byte*) print_char_cursor#148 (byte*) print_char_cursor#28
Identical Phi Values (byte*) print_line_cursor#15 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#100 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#101 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#102 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_line_cursor#104 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#103 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#104 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#105 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_line_cursor#105 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#106 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#107 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#108 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_line_cursor#106 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#109 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#110 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#111 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_line_cursor#107 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#112 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#113 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#114 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#108 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#115 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#116 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#117 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#109 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#118 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#119 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#120 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#110 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#121 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#122 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#123 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#111 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#124 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#125 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#126 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_line_cursor#112 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#127 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#128 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#129 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#113 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#130 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#131 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#132 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#114 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#133 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#134 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#135 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#115 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#136 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#137 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_char_cursor#138 (byte*) print_char_cursor#10
Identical Phi Values (byte*) print_line_cursor#29 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#139 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_line_cursor#31 (byte*) print_line_cursor#15
Identical Phi Values (byte*) print_char_cursor#141 (byte*) print_char_cursor#100
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values (void*) memset::return#0 (void*) memset::str#0
Identical Phi Values (byte*) print_char_cursor#144 (byte*) print_char_cursor#142
Identical Phi Values (byte*) print_line_cursor#3 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_char_cursor#149 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_line_cursor#103 (byte*) print_line_cursor#1
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition (bool~) mul8u::$0 [5] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2
Simple Condition (bool~) mul8u::$3 [10] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@4
Simple Condition (bool~) memset::$1 [27] if((word) memset::num#0<=(byte) 0) goto memset::@1
Simple Condition (bool~) memset::$4 [37] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@5
Simple Condition (bool~) print_str::$0 [50] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2
Simple Condition (bool~) print_ln::$1 [63] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@1
Simple Condition (bool~) main::$21 [222] if((byte~) main::$20==(byte) 0) goto main::@1
Simple Condition (bool~) main::$23 [260] if((byte~) main::$22==(byte) 0) goto main::@7
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant right-side identified [144] (byte[(word)MAX_FILES*SIZEOF_ENTRY]) files ← { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const word) mul8u::res#0 = 0
Constant (const byte*) print_line_cursor#0 = (byte*) 1024
Constant (const byte) memset::c#0 = ' '
Constant (const word) memset::num#0 = $3e8
Constant (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files = { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
Constant (const byte) main::fileEntry1_idx#0 = 1
Constant (const byte) mul8u::b#0 = SIZEOF_ENTRY
Constant (const byte) main::fileEntry2_idx#0 = 2
Constant (const byte) mul8u::b#1 = SIZEOF_ENTRY
Constant (const byte) initEntry::n#0 = 0
Constant (const byte) initEntry::n#1 = $11
Constant (const byte*) print_str::str#1 = main::str
Constant (const byte*) print_str::str#2 = main::str1
Constant (const byte) keyboard_key_pressed::key#0 = KEY_SPACE
Constant (const byte*) print_str::str#3 = main::str2
Constant (const byte*) print_str::str#4 = main::str3
Constant (const byte) keyboard_key_pressed::key#1 = KEY_SPACE
Constant (const byte*) print_str::str#5 = printEntry::str
Constant (const byte*) print_str::str#6 = printEntry::str1
Constant (const byte*) print_str::str#7 = printEntry::str2
Constant (const byte*) print_str::str#8 = printEntry::str3
Constant (const byte*) print_str::str#9 = printEntry::str4
Constant (const byte*) print_str::str#10 = printEntry::str5
Constant (const byte*) print_str::str#11 = printEntry::str6
Constant (const byte*) print_str::str#12 = printEntry::str7
Constant (const byte*) print_str::str#13 = printEntry::str8
Constant (const byte*) print_str::str#14 = printEntry::str9
Constant (const byte*) print_str::str#15 = printEntry::str10
Constant (const byte*) print_str::str#16 = printEntry::str11
Constant (const byte*) print_str::str#17 = printEntry::str12
Successful SSA optimization Pass2ConstantIdentification
Constant (const void*) memset::str#0 = (void*)print_line_cursor#0
Constant (const byte) mul8u::a#1 = main::fileEntry1_idx#0
Constant (const byte) mul8u::a#2 = main::fileEntry2_idx#0
Successful SSA optimization Pass2ConstantIdentification
Constant (const byte*) memset::$2 = (byte*)memset::str#0
Constant (const byte*) memset::dst#0 = (byte*)memset::str#0
Constant (const void*) memset::return#2 = memset::str#0
Successful SSA optimization Pass2ConstantIdentification
if() condition always false - eliminating [27] if((const word) memset::num#0<=(byte) 0) goto memset::@1
Successful SSA optimization Pass2ConstantIfs
Successful SSA optimization Pass2ConstantStringConsolidation
Converting *(pointer+n) to pointer[n] [281] *((byte**) initEntry::entryBufDisk1_return#0) ← (byte*)(word~) initEntry::$1  -- *((byte**)initEntry::entry#10 + 0)
Converting *(pointer+n) to pointer[n] [292] *((byte**) initEntry::entryBufEdit1_return#0) ← (byte*)(word~) initEntry::$3  -- *((byte**)initEntry::entry#10 + 2)
Converting *(pointer+n) to pointer[n] [303] *((word*) initEntry::entryTsLen1_return#0) ← (word~) initEntry::$5  -- *((word*)initEntry::entry#10 + 4)
Converting *(pointer+n) to pointer[n] [314] *((word**) initEntry::entryTsOrder1_return#0) ← (word*)(word~) initEntry::$7  -- *((word**)initEntry::entry#10 + 6)
Converting *(pointer+n) to pointer[n] [325] *((byte*) initEntry::entryTLastLink1_return#0) ← (byte~) initEntry::$9  -- *(initEntry::entry#10 + 8)
Converting *(pointer+n) to pointer[n] [336] *((byte*) initEntry::entrySLastLink1_return#0) ← (byte~) initEntry::$11  -- *(initEntry::entry#10 + 9)
Converting *(pointer+n) to pointer[n] [347] *((byte*) initEntry::entryBFlag1_return#0) ← (byte~) initEntry::$13  -- *(initEntry::entry#10 + $a)
Converting *(pointer+n) to pointer[n] [357] *((byte*) initEntry::entryBError1_return#0) ← (byte~) initEntry::$15  -- *(initEntry::entry#10 + $b)
Converting *(pointer+n) to pointer[n] [368] *((word*) initEntry::entryUCross1_return#0) ← (word~) initEntry::$17  -- *((word*)initEntry::entry#10 + $c)
Converting *(pointer+n) to pointer[n] [379] *((byte*) initEntry::entryBAddrLo1_return#0) ← (byte~) initEntry::$19  -- *(initEntry::entry#10 + $e)
Converting *(pointer+n) to pointer[n] [390] *((byte*) initEntry::entryBAddrHi1_return#0) ← (byte~) initEntry::$21  -- *(initEntry::entry#10 + $f)
Converting *(pointer+n) to pointer[n] [401] *((byte*) initEntry::entryTHi1_return#0) ← (byte~) initEntry::$23  -- *(initEntry::entry#10 + $10)
Converting *(pointer+n) to pointer[n] [412] *((byte*) initEntry::entryTLo1_return#0) ← (byte~) initEntry::$25  -- *(initEntry::entry#10 + $11)
Converting *(pointer+n) to pointer[n] [428] (word) print_word::w#0 ← (word)*((byte**) printEntry::entryBufDisk1_return#0)  -- *((byte**)printEntry::entry#10 + 0)
Converting *(pointer+n) to pointer[n] [450] (word) print_word::w#1 ← (word)*((byte**) printEntry::entryBufEdit1_return#0)  -- *((byte**)printEntry::entry#10 + 2)
Converting *(pointer+n) to pointer[n] [472] (word) print_word::w#2 ← *((word*) printEntry::entryTsLen1_return#0)  -- *((word*)printEntry::entry#10 + 4)
Converting *(pointer+n) to pointer[n] [493] (word) print_word::w#3 ← (word)*((word**) printEntry::entryTsOrder1_return#0)  -- *((word**)printEntry::entry#10 + 6)
Converting *(pointer+n) to pointer[n] [515] (byte) print_byte::b#2 ← *((byte*) printEntry::entryTLastLink1_return#0)  -- *(printEntry::entry#10 + 8)
Converting *(pointer+n) to pointer[n] [536] (byte) print_byte::b#3 ← *((byte*) printEntry::entrySLastLink1_return#0)  -- *(printEntry::entry#10 + 9)
Converting *(pointer+n) to pointer[n] [557] (byte) print_byte::b#4 ← *((byte*) printEntry::entryBFlag1_return#0)  -- *(printEntry::entry#10 + $a)
Converting *(pointer+n) to pointer[n] [577] (byte) print_byte::b#5 ← *((byte*) printEntry::entryBError1_return#0)  -- *(printEntry::entry#10 + $b)
Converting *(pointer+n) to pointer[n] [598] (word) print_word::w#4 ← *((word*) printEntry::entryUCross1_return#0)  -- *((word*)printEntry::entry#10 + $c)
Converting *(pointer+n) to pointer[n] [619] (byte) print_byte::b#6 ← *((byte*) printEntry::entryBAddrLo1_return#0)  -- *(printEntry::entry#10 + $e)
Converting *(pointer+n) to pointer[n] [640] (byte) print_byte::b#7 ← *((byte*) printEntry::entryBAddrHi1_return#0)  -- *(printEntry::entry#10 + $f)
Converting *(pointer+n) to pointer[n] [661] (byte) print_byte::b#8 ← *((byte*) printEntry::entryTHi1_return#0)  -- *(printEntry::entry#10 + $10)
Converting *(pointer+n) to pointer[n] [682] (byte) print_byte::b#9 ← *((byte*) printEntry::entryTLo1_return#0)  -- *(printEntry::entry#10 + $11)
Successful SSA optimization Pass2InlineDerefIdx
Simplifying expression containing zero initEntry::entry#10 in [273] (byte*~) initEntry::entryBufDisk1_$0 ← (byte*) initEntry::entry#10 + (byte) 0
Simplifying expression containing zero (byte**)initEntry::entry#10 in [281] *((byte**)(byte*) initEntry::entry#10 + (byte) 0) ← (byte*)(word~) initEntry::$1
Simplifying expression containing zero printEntry::entry#10 in [421] (byte*~) printEntry::entryBufDisk1_$0 ← (byte*) printEntry::entry#10 + (byte) 0
Simplifying expression containing zero (byte**)printEntry::entry#10 in [428] (word) print_word::w#0 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 0)
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused variable (byte**) initEntry::entryBufDisk1_return#0 and assignment [104] (byte**) initEntry::entryBufDisk1_return#0 ← (byte**)(byte*~) initEntry::entryBufDisk1_$0
Eliminating unused variable (byte**) initEntry::entryBufEdit1_return#0 and assignment [108] (byte**) initEntry::entryBufEdit1_return#0 ← (byte**)(byte*~) initEntry::entryBufEdit1_$0
Eliminating unused variable (word*) initEntry::entryTsLen1_return#0 and assignment [112] (word*) initEntry::entryTsLen1_return#0 ← (word*)(byte*~) initEntry::entryTsLen1_$0
Eliminating unused variable (word**) initEntry::entryTsOrder1_return#0 and assignment [116] (word**) initEntry::entryTsOrder1_return#0 ← (word**)(byte*~) initEntry::entryTsOrder1_$0
Eliminating unused variable (byte*) initEntry::entryTLastLink1_return#0 and assignment [119] (byte*) initEntry::entryTLastLink1_return#0 ← (byte*) initEntry::entry#10 + (byte) 8
Eliminating unused variable (byte*) initEntry::entrySLastLink1_return#0 and assignment [122] (byte*) initEntry::entrySLastLink1_return#0 ← (byte*) initEntry::entry#10 + (byte) 9
Eliminating unused variable (byte*) initEntry::entryBFlag1_return#0 and assignment [125] (byte*) initEntry::entryBFlag1_return#0 ← (byte*) initEntry::entry#10 + (byte) $a
Eliminating unused variable (byte*) initEntry::entryBError1_return#0 and assignment [128] (byte*) initEntry::entryBError1_return#0 ← (byte*) initEntry::entry#10 + (byte) $b
Eliminating unused variable (word*) initEntry::entryUCross1_return#0 and assignment [132] (word*) initEntry::entryUCross1_return#0 ← (word*)(byte*~) initEntry::entryUCross1_$0
Eliminating unused variable (byte*) initEntry::entryBAddrLo1_return#0 and assignment [135] (byte*) initEntry::entryBAddrLo1_return#0 ← (byte*) initEntry::entry#10 + (byte) $e
Eliminating unused variable (byte*) initEntry::entryBAddrHi1_return#0 and assignment [138] (byte*) initEntry::entryBAddrHi1_return#0 ← (byte*) initEntry::entry#10 + (byte) $f
Eliminating unused variable (byte*) initEntry::entryTHi1_return#0 and assignment [141] (byte*) initEntry::entryTHi1_return#0 ← (byte*) initEntry::entry#10 + (byte) $10
Eliminating unused variable (byte*) initEntry::entryTLo1_return#0 and assignment [144] (byte*) initEntry::entryTLo1_return#0 ← (byte*) initEntry::entry#10 + (byte) $11
Eliminating unused variable (byte**) printEntry::entryBufDisk1_return#0 and assignment [151] (byte**) printEntry::entryBufDisk1_return#0 ← (byte**)(byte*~) printEntry::entryBufDisk1_$0
Eliminating unused variable (byte**) printEntry::entryBufEdit1_return#0 and assignment [157] (byte**) printEntry::entryBufEdit1_return#0 ← (byte**)(byte*~) printEntry::entryBufEdit1_$0
Eliminating unused variable (word*) printEntry::entryTsLen1_return#0 and assignment [163] (word*) printEntry::entryTsLen1_return#0 ← (word*)(byte*~) printEntry::entryTsLen1_$0
Eliminating unused variable (word**) printEntry::entryTsOrder1_return#0 and assignment [169] (word**) printEntry::entryTsOrder1_return#0 ← (word**)(byte*~) printEntry::entryTsOrder1_$0
Eliminating unused variable (byte*) printEntry::entryTLastLink1_return#0 and assignment [174] (byte*) printEntry::entryTLastLink1_return#0 ← (byte*) printEntry::entry#10 + (byte) 8
Eliminating unused variable (byte*) printEntry::entrySLastLink1_return#0 and assignment [179] (byte*) printEntry::entrySLastLink1_return#0 ← (byte*) printEntry::entry#10 + (byte) 9
Eliminating unused variable (byte*) printEntry::entryBFlag1_return#0 and assignment [184] (byte*) printEntry::entryBFlag1_return#0 ← (byte*) printEntry::entry#10 + (byte) $a
Eliminating unused variable (byte*) printEntry::entryBError1_return#0 and assignment [189] (byte*) printEntry::entryBError1_return#0 ← (byte*) printEntry::entry#10 + (byte) $b
Eliminating unused variable (word*) printEntry::entryUCross1_return#0 and assignment [195] (word*) printEntry::entryUCross1_return#0 ← (word*)(byte*~) printEntry::entryUCross1_$0
Eliminating unused variable (byte*) printEntry::entryBAddrLo1_return#0 and assignment [200] (byte*) printEntry::entryBAddrLo1_return#0 ← (byte*) printEntry::entry#10 + (byte) $e
Eliminating unused variable (byte*) printEntry::entryBAddrHi1_return#0 and assignment [205] (byte*) printEntry::entryBAddrHi1_return#0 ← (byte*) printEntry::entry#10 + (byte) $f
Eliminating unused variable (byte*) printEntry::entryTHi1_return#0 and assignment [210] (byte*) printEntry::entryTHi1_return#0 ← (byte*) printEntry::entry#10 + (byte) $10
Eliminating unused variable (byte*) printEntry::entryTLo1_return#0 and assignment [215] (byte*) printEntry::entryTLo1_return#0 ← (byte*) printEntry::entry#10 + (byte) $11
Eliminating unused constant (const void*) memset::return#2
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable (byte*~) initEntry::entryBufDisk1_$0 and assignment [103] (byte*~) initEntry::entryBufDisk1_$0 ← (byte*) initEntry::entry#10
Eliminating unused variable (byte*~) initEntry::entryBufEdit1_$0 and assignment [106] (byte*~) initEntry::entryBufEdit1_$0 ← (byte*) initEntry::entry#10 + (byte) 2
Eliminating unused variable (byte*~) initEntry::entryTsLen1_$0 and assignment [109] (byte*~) initEntry::entryTsLen1_$0 ← (byte*) initEntry::entry#10 + (byte) 4
Eliminating unused variable (byte*~) initEntry::entryTsOrder1_$0 and assignment [112] (byte*~) initEntry::entryTsOrder1_$0 ← (byte*) initEntry::entry#10 + (byte) 6
Eliminating unused variable (byte*~) initEntry::entryUCross1_$0 and assignment [123] (byte*~) initEntry::entryUCross1_$0 ← (byte*) initEntry::entry#10 + (byte) $c
Eliminating unused variable (byte*~) printEntry::entryBufDisk1_$0 and assignment [137] (byte*~) printEntry::entryBufDisk1_$0 ← (byte*) printEntry::entry#10
Eliminating unused variable (byte*~) printEntry::entryBufEdit1_$0 and assignment [142] (byte*~) printEntry::entryBufEdit1_$0 ← (byte*) printEntry::entry#10 + (byte) 2
Eliminating unused variable (byte*~) printEntry::entryTsLen1_$0 and assignment [147] (byte*~) printEntry::entryTsLen1_$0 ← (byte*) printEntry::entry#10 + (byte) 4
Eliminating unused variable (byte*~) printEntry::entryTsOrder1_$0 and assignment [152] (byte*~) printEntry::entryTsOrder1_$0 ← (byte*) printEntry::entry#10 + (byte) 6
Eliminating unused variable (byte*~) printEntry::entryUCross1_$0 and assignment [173] (byte*~) printEntry::entryUCross1_$0 ← (byte*) printEntry::entry#10 + (byte) $c
Successful SSA optimization PassNEliminateUnusedVars
Constant right-side identified [10] (byte*) memset::end#0 ← (const byte*) memset::$2 + (const word) memset::num#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte*) memset::end#0 = memset::$2+memset::num#0
Successful SSA optimization Pass2ConstantIdentification
Inlining Noop Cast [131] (word) print_word::w#0 ← (word)*((byte**)(byte*) printEntry::entry#10) keeping *((byte**)printEntry::entry#10)
Inlining Noop Cast [135] (word) print_word::w#1 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2) keeping *((byte**)printEntry::entry#10 + 2)
Inlining Noop Cast [143] (word) print_word::w#3 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6) keeping *((word**)printEntry::entry#10 + 6)
Successful SSA optimization Pass2NopCastInlining
Inlining constant with var siblings (const word) mul8u::res#0
Inlining constant with var siblings (const byte) mul8u::a#1
Inlining constant with var siblings (const byte) mul8u::a#2
Inlining constant with var siblings (const byte*) memset::dst#0
Inlining constant with var siblings (const byte*) print_str::str#1
Inlining constant with var siblings (const byte*) print_str::str#2
Inlining constant with var siblings (const byte*) print_str::str#3
Inlining constant with var siblings (const byte*) print_str::str#4
Inlining constant with var siblings (const byte*) print_str::str#5
Inlining constant with var siblings (const byte*) print_str::str#6
Inlining constant with var siblings (const byte*) print_str::str#7
Inlining constant with var siblings (const byte*) print_str::str#8
Inlining constant with var siblings (const byte*) print_str::str#9
Inlining constant with var siblings (const byte*) print_str::str#10
Inlining constant with var siblings (const byte*) print_str::str#11
Inlining constant with var siblings (const byte*) print_str::str#12
Inlining constant with var siblings (const byte*) print_str::str#13
Inlining constant with var siblings (const byte*) print_str::str#14
Inlining constant with var siblings (const byte*) print_str::str#15
Inlining constant with var siblings (const byte*) print_str::str#16
Inlining constant with var siblings (const byte*) print_str::str#17
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#0
Inlining constant with var siblings (const byte) keyboard_key_pressed::key#1
Inlining constant with var siblings (const byte) initEntry::n#0
Inlining constant with var siblings (const byte) initEntry::n#1
Inlining constant with var siblings (const byte*) print_line_cursor#0
Constant inlined main::str3 = (const string) main::str1
Constant inlined print_str::str#13 = (const string) printEntry::str8
Constant inlined print_str::str#12 = (const string) printEntry::str7
Constant inlined print_str::str#11 = (const string) printEntry::str6
Constant inlined print_str::str#10 = (const string) printEntry::str5
Constant inlined print_str::str#17 = (const string) printEntry::str12
Constant inlined print_str::str#16 = (const string) printEntry::str11
Constant inlined print_str::str#15 = (const string) printEntry::str10
Constant inlined print_str::str#14 = (const string) printEntry::str9
Constant inlined initEntry::n#1 = (byte) $11
Constant inlined memset::$2 = (byte*)(const void*) memset::str#0
Constant inlined initEntry::n#0 = (byte) 0
Constant inlined keyboard_key_pressed::key#0 = (const byte) KEY_SPACE
Constant inlined keyboard_key_pressed::key#1 = (const byte) KEY_SPACE
Constant inlined print_line_cursor#0 = (byte*) 1024
Constant inlined print_str::str#9 = (const string) printEntry::str4
Constant inlined mul8u::res#0 = (byte) 0
Constant inlined mul8u::b#1 = (const byte) SIZEOF_ENTRY
Constant inlined mul8u::a#2 = (const byte) main::fileEntry2_idx#0
Constant inlined mul8u::b#0 = (const byte) SIZEOF_ENTRY
Constant inlined mul8u::a#1 = (const byte) main::fileEntry1_idx#0
Constant inlined print_str::str#4 = (const string) main::str1
Constant inlined print_str::str#3 = (const string) main::str2
Constant inlined print_str::str#2 = (const string) main::str1
Constant inlined memset::dst#0 = (byte*)(const void*) memset::str#0
Constant inlined print_str::str#1 = (const string) main::str
Constant inlined print_str::str#8 = (const string) printEntry::str3
Constant inlined print_str::str#7 = (const string) printEntry::str2
Constant inlined print_str::str#6 = (const string) printEntry::str1
Constant inlined print_str::str#5 = (const string) printEntry::str
Successful SSA optimization Pass2ConstantInlining
Identical Phi Values (word) mul8u::mb#0 (const byte) SIZEOF_ENTRY
Identical Phi Values (byte) keyboard_key_pressed::key#2 (const byte) KEY_SPACE
Successful SSA optimization Pass2IdenticalPhiElimination
Constant right-side identified [54] (byte) keyboard_key_pressed::colidx#0 ← (const byte) KEY_SPACE & (byte) 7
Constant right-side identified [55] (byte) keyboard_key_pressed::rowidx#0 ← (const byte) KEY_SPACE >> (byte) 3
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte) keyboard_key_pressed::colidx#0 = KEY_SPACE&7
Constant (const byte) keyboard_key_pressed::rowidx#0 = KEY_SPACE>>3
Successful SSA optimization Pass2ConstantIdentification
Constant (const byte) keyboard_matrix_read::rowid#0 = keyboard_key_pressed::rowidx#0
Successful SSA optimization Pass2ConstantIdentification
Constant inlined keyboard_matrix_read::rowid#0 = (const byte) keyboard_key_pressed::rowidx#0
Successful SSA optimization Pass2ConstantInlining
Consolidated array index constant in *(keyboard_matrix_row_bitmask+keyboard_key_pressed::rowidx#0)
Consolidated array index constant in *(keyboard_matrix_col_bitmask+keyboard_key_pressed::colidx#0)
Successful SSA optimization Pass2ConstantAdditionElimination
Added new block during phi lifting mul8u::@10(between mul8u::@2 and mul8u::@4)
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @17
Adding NOP phi() at start of @52
Adding NOP phi() at start of @69
Adding NOP phi() at start of @70
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::fileEntry1
Adding NOP phi() at start of main::fileEntry1_@return
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::fileEntry2
Adding NOP phi() at start of main::fileEntry2_@return
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@36
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_cls::@1
Adding NOP phi() at start of memset
Adding NOP phi() at start of memset::@2
Adding NOP phi() at start of memset::@1
Adding NOP phi() at start of keyboard_key_pressed
Adding NOP phi() at start of print_ln::@2
Adding NOP phi() at start of printEntry::@14
Adding NOP phi() at start of printEntry::entryBufDisk1
Adding NOP phi() at start of printEntry::entryBufDisk1_@return
Adding NOP phi() at start of printEntry::@17
Adding NOP phi() at start of printEntry::entryBufEdit1
Adding NOP phi() at start of printEntry::entryBufEdit1_@return
Adding NOP phi() at start of printEntry::@20
Adding NOP phi() at start of printEntry::entryTsLen1
Adding NOP phi() at start of printEntry::entryTsLen1_@return
Adding NOP phi() at start of printEntry::@23
Adding NOP phi() at start of printEntry::entryTsOrder1
Adding NOP phi() at start of printEntry::entryTsOrder1_@return
Adding NOP phi() at start of printEntry::@26
Adding NOP phi() at start of printEntry::entryTLastLink1
Adding NOP phi() at start of printEntry::entryTLastLink1_@return
Adding NOP phi() at start of printEntry::@29
Adding NOP phi() at start of printEntry::entrySLastLink1
Adding NOP phi() at start of printEntry::entrySLastLink1_@return
Adding NOP phi() at start of printEntry::@32
Adding NOP phi() at start of printEntry::entryBFlag1
Adding NOP phi() at start of printEntry::entryBFlag1_@return
Adding NOP phi() at start of printEntry::@35
Adding NOP phi() at start of printEntry::entryBError1
Adding NOP phi() at start of printEntry::entryBError1_@return
Adding NOP phi() at start of printEntry::@38
Adding NOP phi() at start of printEntry::entryUCross1
Adding NOP phi() at start of printEntry::entryUCross1_@return
Adding NOP phi() at start of printEntry::@41
Adding NOP phi() at start of printEntry::entryBAddrLo1
Adding NOP phi() at start of printEntry::entryBAddrLo1_@return
Adding NOP phi() at start of printEntry::@44
Adding NOP phi() at start of printEntry::entryBAddrHi1
Adding NOP phi() at start of printEntry::entryBAddrHi1_@return
Adding NOP phi() at start of printEntry::@47
Adding NOP phi() at start of printEntry::entryTHi1
Adding NOP phi() at start of printEntry::entryTHi1_@return
Adding NOP phi() at start of printEntry::@50
Adding NOP phi() at start of printEntry::entryTLo1
Adding NOP phi() at start of printEntry::entryTLo1_@return
Adding NOP phi() at start of printEntry::@52
Adding NOP phi() at start of print_byte::@2
Adding NOP phi() at start of print_word::@2
Adding NOP phi() at start of initEntry::entryBufDisk1
Adding NOP phi() at start of initEntry::entryBufDisk1_@return
Adding NOP phi() at start of initEntry::entryBufEdit1
Adding NOP phi() at start of initEntry::entryBufEdit1_@return
Adding NOP phi() at start of initEntry::entryTsLen1
Adding NOP phi() at start of initEntry::entryTsLen1_@return
Adding NOP phi() at start of initEntry::entryTsOrder1
Adding NOP phi() at start of initEntry::entryTsOrder1_@return
Adding NOP phi() at start of initEntry::entryTLastLink1
Adding NOP phi() at start of initEntry::entryTLastLink1_@return
Adding NOP phi() at start of initEntry::entrySLastLink1
Adding NOP phi() at start of initEntry::entrySLastLink1_@return
Adding NOP phi() at start of initEntry::entryBFlag1
Adding NOP phi() at start of initEntry::entryBFlag1_@return
Adding NOP phi() at start of initEntry::entryBError1
Adding NOP phi() at start of initEntry::entryBError1_@return
Adding NOP phi() at start of initEntry::entryUCross1
Adding NOP phi() at start of initEntry::entryUCross1_@return
Adding NOP phi() at start of initEntry::entryBAddrLo1
Adding NOP phi() at start of initEntry::entryBAddrLo1_@return
Adding NOP phi() at start of initEntry::entryBAddrHi1
Adding NOP phi() at start of initEntry::entryBAddrHi1_@return
Adding NOP phi() at start of initEntry::entryTHi1
Adding NOP phi() at start of initEntry::entryTHi1_@return
Adding NOP phi() at start of initEntry::entryTLo1
Adding NOP phi() at start of initEntry::entryTLo1_@return
Adding NOP phi() at start of mul8u::@3
CALL GRAPH
Calls in [] to main:4 
Calls in [main] to keyboard_init:8 mul8u:11 mul8u:18 initEntry:25 initEntry:28 print_cls:30 print_str:32 print_ln:34 print_ln:37 printEntry:40 print_ln:43 print_str:45 keyboard_key_pressed:48 print_cls:53 print_str:55 print_ln:57 print_ln:60 printEntry:63 print_ln:66 print_str:68 keyboard_key_pressed:71 print_cls:76 
Calls in [print_cls] to memset:80 
Calls in [keyboard_key_pressed] to keyboard_matrix_read:93 
Calls in [printEntry] to print_str:122 print_word:127 print_ln:130 print_str:132 print_word:137 print_ln:140 print_str:142 print_word:148 print_ln:151 print_str:153 print_word:158 print_ln:161 print_str:163 print_byte:170 print_ln:173 print_str:175 print_byte:182 print_ln:185 print_str:187 print_byte:194 print_ln:197 print_str:199 print_byte:206 print_ln:209 print_str:211 print_word:217 print_ln:220 print_str:222 print_byte:229 print_ln:232 print_str:234 print_byte:241 print_ln:244 print_str:246 print_byte:253 print_ln:256 print_str:258 print_byte:265 print_ln:268 
Calls in [print_byte] to print_char:276 print_char:281 
Calls in [print_word] to print_byte:292 print_byte:296 

Created 21 initial phi equivalence classes
Coalesced [24] initEntry::entry#39 ← initEntry::entry#0
Coalesced [27] initEntry::entry#40 ← initEntry::entry#1
Coalesced [33] print_char_cursor#224 ← print_char_cursor#142
Not coalescing [35] print_line_cursor#154 ← print_line_cursor#1
Not coalescing [36] print_char_cursor#225 ← print_line_cursor#1
Coalesced [39] printEntry::entry#76 ← printEntry::entry#0
Not coalescing [41] print_line_cursor#155 ← print_line_cursor#1
Not coalescing [42] print_char_cursor#226 ← print_line_cursor#1
Not coalescing [44] print_char_cursor#207 ← print_line_cursor#1
Coalesced (already) [56] print_char_cursor#227 ← print_char_cursor#142
Not coalescing [58] print_line_cursor#156 ← print_line_cursor#1
Not coalescing [59] print_char_cursor#228 ← print_line_cursor#1
Coalesced [62] printEntry::entry#77 ← printEntry::entry#1
Not coalescing [64] print_line_cursor#157 ← print_line_cursor#1
Not coalescing [65] print_char_cursor#229 ← print_line_cursor#1
Not coalescing [67] print_char_cursor#208 ← print_line_cursor#1
Coalesced [91] memset::dst#4 ← memset::dst#1
Coalesced [102] print_str::str#21 ← print_str::str#20
Coalesced [103] print_char_cursor#222 ← print_char_cursor#164
Coalesced [110] print_str::str#22 ← print_str::str#0
Coalesced [111] print_char_cursor#223 ← print_char_cursor#1
Coalesced [113] print_line_cursor#171 ← print_line_cursor#63
Not coalescing [119] print_line_cursor#172 ← print_line_cursor#1
Not coalescing [121] print_char_cursor#209 ← print_line_cursor#1
Not coalescing [128] print_line_cursor#158 ← print_line_cursor#1
Coalesced [129] print_char_cursor#230 ← print_char_cursor#11
Not coalescing [131] print_char_cursor#210 ← print_line_cursor#1
Not coalescing [138] print_line_cursor#159 ← print_line_cursor#1
Coalesced (already) [139] print_char_cursor#231 ← print_char_cursor#11
Not coalescing [141] print_char_cursor#211 ← print_line_cursor#1
Coalesced [147] print_word::w#9 ← print_word::w#2
Not coalescing [149] print_line_cursor#160 ← print_line_cursor#1
Coalesced (already) [150] print_char_cursor#232 ← print_char_cursor#11
Not coalescing [152] print_char_cursor#212 ← print_line_cursor#1
Not coalescing [159] print_line_cursor#161 ← print_line_cursor#1
Coalesced (already) [160] print_char_cursor#233 ← print_char_cursor#11
Not coalescing [162] print_char_cursor#213 ← print_line_cursor#1
Coalesced [168] print_byte::b#16 ← print_byte::b#2
Coalesced [169] print_char_cursor#247 ← print_char_cursor#142
Not coalescing [171] print_line_cursor#162 ← print_line_cursor#1
Coalesced (already) [172] print_char_cursor#234 ← print_char_cursor#11
Not coalescing [174] print_char_cursor#214 ← print_line_cursor#1
Coalesced [180] print_byte::b#17 ← print_byte::b#3
Coalesced (already) [181] print_char_cursor#248 ← print_char_cursor#142
Not coalescing [183] print_line_cursor#163 ← print_line_cursor#1
Coalesced (already) [184] print_char_cursor#235 ← print_char_cursor#11
Not coalescing [186] print_char_cursor#215 ← print_line_cursor#1
Coalesced [192] print_byte::b#18 ← print_byte::b#4
Coalesced (already) [193] print_char_cursor#249 ← print_char_cursor#142
Not coalescing [195] print_line_cursor#164 ← print_line_cursor#1
Coalesced (already) [196] print_char_cursor#236 ← print_char_cursor#11
Not coalescing [198] print_char_cursor#216 ← print_line_cursor#1
Coalesced [204] print_byte::b#19 ← print_byte::b#5
Coalesced (already) [205] print_char_cursor#250 ← print_char_cursor#142
Not coalescing [207] print_line_cursor#165 ← print_line_cursor#1
Coalesced (already) [208] print_char_cursor#237 ← print_char_cursor#11
Not coalescing [210] print_char_cursor#217 ← print_line_cursor#1
Coalesced [216] print_word::w#11 ← print_word::w#4
Not coalescing [218] print_line_cursor#166 ← print_line_cursor#1
Coalesced (already) [219] print_char_cursor#238 ← print_char_cursor#11
Not coalescing [221] print_char_cursor#218 ← print_line_cursor#1
Coalesced [227] print_byte::b#12 ← print_byte::b#6
Coalesced (already) [228] print_char_cursor#243 ← print_char_cursor#142
Not coalescing [230] print_line_cursor#167 ← print_line_cursor#1
Coalesced (already) [231] print_char_cursor#239 ← print_char_cursor#11
Not coalescing [233] print_char_cursor#219 ← print_line_cursor#1
Coalesced [239] print_byte::b#13 ← print_byte::b#7
Coalesced (already) [240] print_char_cursor#244 ← print_char_cursor#142
Not coalescing [242] print_line_cursor#168 ← print_line_cursor#1
Coalesced (already) [243] print_char_cursor#240 ← print_char_cursor#11
Not coalescing [245] print_char_cursor#220 ← print_line_cursor#1
Coalesced [251] print_byte::b#14 ← print_byte::b#8
Coalesced (already) [252] print_char_cursor#245 ← print_char_cursor#142
Not coalescing [254] print_line_cursor#169 ← print_line_cursor#1
Coalesced (already) [255] print_char_cursor#241 ← print_char_cursor#11
Not coalescing [257] print_char_cursor#221 ← print_line_cursor#1
Coalesced [263] print_byte::b#15 ← print_byte::b#9
Coalesced (already) [264] print_char_cursor#246 ← print_char_cursor#142
Not coalescing [266] print_line_cursor#170 ← print_line_cursor#1
Coalesced (already) [267] print_char_cursor#242 ← print_char_cursor#11
Coalesced [274] print_char::ch#3 ← print_char::ch#0
Coalesced [275] print_char_cursor#253 ← print_char_cursor#145
Coalesced [279] print_char::ch#4 ← print_char::ch#1
Coalesced (already) [280] print_char_cursor#254 ← print_char_cursor#11
Coalesced [290] print_byte::b#20 ← print_byte::b#0
Coalesced (already) [291] print_char_cursor#251 ← print_char_cursor#142
Coalesced [294] print_byte::b#21 ← print_byte::b#1
Coalesced (already) [295] print_char_cursor#252 ← print_char_cursor#11
Coalesced [354] mul8u::a#8 ← mul8u::a#6
Coalesced [362] mul8u::res#9 ← mul8u::res#1
Coalesced [366] mul8u::a#9 ← mul8u::a#0
Coalesced [367] mul8u::res#7 ← mul8u::res#6
Coalesced [368] mul8u::mb#6 ← mul8u::mb#1
Coalesced (already) [369] mul8u::res#8 ← mul8u::res#2
Coalesced down to 14 phi equivalence classes
Culled Empty Block (label) @17
Culled Empty Block (label) @52
Culled Empty Block (label) @70
Culled Empty Block (label) main::@15
Culled Empty Block (label) main::fileEntry1_@return
Culled Empty Block (label) main::@13
Culled Empty Block (label) main::fileEntry2_@return
Culled Empty Block (label) main::@26
Culled Empty Block (label) main::@34
Culled Empty Block (label) main::@36
Culled Empty Block (label) print_cls::@1
Culled Empty Block (label) memset::@2
Culled Empty Block (label) memset::@1
Culled Empty Block (label) print_ln::@2
Culled Empty Block (label) printEntry::@14
Culled Empty Block (label) printEntry::entryBufDisk1_@return
Culled Empty Block (label) printEntry::@17
Culled Empty Block (label) printEntry::entryBufEdit1_@return
Culled Empty Block (label) printEntry::@20
Culled Empty Block (label) printEntry::entryTsLen1_@return
Culled Empty Block (label) printEntry::@23
Culled Empty Block (label) printEntry::entryTsOrder1_@return
Culled Empty Block (label) printEntry::@26
Culled Empty Block (label) printEntry::entryTLastLink1_@return
Culled Empty Block (label) printEntry::@29
Culled Empty Block (label) printEntry::entrySLastLink1_@return
Culled Empty Block (label) printEntry::@32
Culled Empty Block (label) printEntry::entryBFlag1_@return
Culled Empty Block (label) printEntry::@35
Culled Empty Block (label) printEntry::entryBError1_@return
Culled Empty Block (label) printEntry::@38
Culled Empty Block (label) printEntry::entryUCross1_@return
Culled Empty Block (label) printEntry::@41
Culled Empty Block (label) printEntry::entryBAddrLo1_@return
Culled Empty Block (label) printEntry::@44
Culled Empty Block (label) printEntry::entryBAddrHi1_@return
Culled Empty Block (label) printEntry::@47
Culled Empty Block (label) printEntry::entryTHi1_@return
Culled Empty Block (label) printEntry::@50
Culled Empty Block (label) printEntry::entryTLo1_@return
Culled Empty Block (label) printEntry::@52
Culled Empty Block (label) print_byte::@2
Culled Empty Block (label) print_word::@2
Culled Empty Block (label) initEntry::entryBufDisk1_@return
Culled Empty Block (label) initEntry::entryBufEdit1_@return
Culled Empty Block (label) initEntry::entryTsLen1_@return
Culled Empty Block (label) initEntry::entryTsOrder1_@return
Culled Empty Block (label) initEntry::entryTLastLink1_@return
Culled Empty Block (label) initEntry::entrySLastLink1_@return
Culled Empty Block (label) initEntry::entryBFlag1_@return
Culled Empty Block (label) initEntry::entryBError1_@return
Culled Empty Block (label) initEntry::entryUCross1_@return
Culled Empty Block (label) initEntry::entryBAddrLo1_@return
Culled Empty Block (label) initEntry::entryBAddrHi1_@return
Culled Empty Block (label) initEntry::entryTHi1_@return
Culled Empty Block (label) initEntry::entryTLo1_@return
Culled Empty Block (label) mul8u::@3
Culled Empty Block (label) mul8u::@10
Renumbering block @69 to @1
Renumbering block mul8u::@4 to mul8u::@3
Renumbering block mul8u::@7 to mul8u::@4
Renumbering block memset::@4 to memset::@1
Renumbering block memset::@5 to memset::@2
Renumbering block print_ln::@3 to print_ln::@2
Renumbering block keyboard_key_pressed::@2 to keyboard_key_pressed::@1
Renumbering block main::@3 to main::@2
Renumbering block main::@7 to main::@3
Renumbering block main::@9 to main::@4
Renumbering block main::@14 to main::@5
Renumbering block main::@16 to main::@6
Renumbering block main::@17 to main::@7
Renumbering block main::@18 to main::@8
Renumbering block main::@19 to main::@9
Renumbering block main::@20 to main::@10
Renumbering block main::@21 to main::@11
Renumbering block main::@22 to main::@12
Renumbering block main::@23 to main::@13
Renumbering block main::@24 to main::@14
Renumbering block main::@25 to main::@15
Renumbering block main::@27 to main::@16
Renumbering block main::@28 to main::@17
Renumbering block main::@29 to main::@18
Renumbering block main::@30 to main::@19
Renumbering block main::@31 to main::@20
Renumbering block main::@32 to main::@21
Renumbering block main::@33 to main::@22
Renumbering block main::@35 to main::@23
Renumbering block printEntry::@15 to printEntry::@14
Renumbering block printEntry::@16 to printEntry::@15
Renumbering block printEntry::@18 to printEntry::@16
Renumbering block printEntry::@19 to printEntry::@17
Renumbering block printEntry::@21 to printEntry::@18
Renumbering block printEntry::@22 to printEntry::@19
Renumbering block printEntry::@24 to printEntry::@20
Renumbering block printEntry::@25 to printEntry::@21
Renumbering block printEntry::@27 to printEntry::@22
Renumbering block printEntry::@28 to printEntry::@23
Renumbering block printEntry::@30 to printEntry::@24
Renumbering block printEntry::@31 to printEntry::@25
Renumbering block printEntry::@33 to printEntry::@26
Renumbering block printEntry::@34 to printEntry::@27
Renumbering block printEntry::@36 to printEntry::@28
Renumbering block printEntry::@37 to printEntry::@29
Renumbering block printEntry::@39 to printEntry::@30
Renumbering block printEntry::@40 to printEntry::@31
Renumbering block printEntry::@42 to printEntry::@32
Renumbering block printEntry::@43 to printEntry::@33
Renumbering block printEntry::@45 to printEntry::@34
Renumbering block printEntry::@46 to printEntry::@35
Renumbering block printEntry::@48 to printEntry::@36
Renumbering block printEntry::@49 to printEntry::@37
Renumbering block printEntry::@51 to printEntry::@38
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @1
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::fileEntry1
Adding NOP phi() at start of main::fileEntry2
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of memset
Adding NOP phi() at start of keyboard_key_pressed
Adding NOP phi() at start of printEntry::entryBufDisk1
Adding NOP phi() at start of printEntry::entryBufEdit1
Adding NOP phi() at start of printEntry::entryTsLen1
Adding NOP phi() at start of printEntry::entryTsOrder1
Adding NOP phi() at start of printEntry::entryTLastLink1
Adding NOP phi() at start of printEntry::entrySLastLink1
Adding NOP phi() at start of printEntry::entryBFlag1
Adding NOP phi() at start of printEntry::entryBError1
Adding NOP phi() at start of printEntry::entryUCross1
Adding NOP phi() at start of printEntry::entryBAddrLo1
Adding NOP phi() at start of printEntry::entryBAddrHi1
Adding NOP phi() at start of printEntry::entryTHi1
Adding NOP phi() at start of printEntry::entryTLo1
Adding NOP phi() at start of initEntry::entryBufDisk1
Adding NOP phi() at start of initEntry::entryBufEdit1
Adding NOP phi() at start of initEntry::entryTsLen1
Adding NOP phi() at start of initEntry::entryTsOrder1
Adding NOP phi() at start of initEntry::entryTLastLink1
Adding NOP phi() at start of initEntry::entrySLastLink1
Adding NOP phi() at start of initEntry::entryBFlag1
Adding NOP phi() at start of initEntry::entryBError1
Adding NOP phi() at start of initEntry::entryUCross1
Adding NOP phi() at start of initEntry::entryBAddrLo1
Adding NOP phi() at start of initEntry::entryBAddrHi1
Adding NOP phi() at start of initEntry::entryTHi1
Adding NOP phi() at start of initEntry::entryTLo1

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  [5] call keyboard_init 
  to:main::fileEntry1
main::fileEntry1: scope:[main]  from main
  [6] phi()
  [7] call mul8u 
  [8] (word) mul8u::return#2 ← (word) mul8u::res#2
  to:main::@6
main::@6: scope:[main]  from main::fileEntry1
  [9] (word~) main::fileEntry1_$0 ← (word) mul8u::return#2
  [10] (byte*) main::entry1#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0
  to:main::fileEntry2
main::fileEntry2: scope:[main]  from main::@6
  [11] phi()
  [12] call mul8u 
  [13] (word) mul8u::return#3 ← (word) mul8u::res#2
  to:main::@7
main::@7: scope:[main]  from main::fileEntry2
  [14] (word~) main::fileEntry2_$0 ← (word) mul8u::return#3
  [15] (byte*) main::entry2#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0
  to:main::@5
main::@5: scope:[main]  from main::@7
  [16] (byte*) initEntry::entry#0 ← (byte*) main::entry1#0
  [17] call initEntry 
  to:main::@8
main::@8: scope:[main]  from main::@5
  [18] (byte*) initEntry::entry#1 ← (byte*) main::entry2#0
  [19] call initEntry 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [20] phi()
  [21] call print_cls 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [22] phi()
  [23] call print_str 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [24] phi()
  [25] call print_ln 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [26] (byte*) print_line_cursor#154 ← (byte*) print_line_cursor#1
  [27] (byte*) print_char_cursor#225 ← (byte*) print_line_cursor#1
  [28] call print_ln 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [29] (byte*) printEntry::entry#0 ← (byte*) main::entry1#0
  [30] call printEntry 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [31] (byte*) print_line_cursor#155 ← (byte*) print_line_cursor#1
  [32] (byte*) print_char_cursor#226 ← (byte*) print_line_cursor#1
  [33] call print_ln 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [34] (byte*) print_char_cursor#207 ← (byte*) print_line_cursor#1
  [35] call print_str 
  to:main::@1
main::@1: scope:[main]  from main::@15 main::@16
  [36] phi()
  [37] call keyboard_key_pressed 
  [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0
  to:main::@16
main::@16: scope:[main]  from main::@1
  [39] (byte~) main::$20 ← (byte) keyboard_key_pressed::return#2
  [40] if((byte~) main::$20==(byte) 0) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@16
  [41] phi()
  [42] call print_cls 
  to:main::@17
main::@17: scope:[main]  from main::@2
  [43] phi()
  [44] call print_str 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [45] phi()
  [46] call print_ln 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [47] (byte*) print_line_cursor#156 ← (byte*) print_line_cursor#1
  [48] (byte*) print_char_cursor#228 ← (byte*) print_line_cursor#1
  [49] call print_ln 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [50] (byte*) printEntry::entry#1 ← (byte*) main::entry2#0
  [51] call printEntry 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [52] (byte*) print_line_cursor#157 ← (byte*) print_line_cursor#1
  [53] (byte*) print_char_cursor#229 ← (byte*) print_line_cursor#1
  [54] call print_ln 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [55] (byte*) print_char_cursor#208 ← (byte*) print_line_cursor#1
  [56] call print_str 
  to:main::@3
main::@3: scope:[main]  from main::@22 main::@23
  [57] phi()
  [58] call keyboard_key_pressed 
  [59] (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#0
  to:main::@23
main::@23: scope:[main]  from main::@3
  [60] (byte~) main::$22 ← (byte) keyboard_key_pressed::return#3
  [61] if((byte~) main::$22==(byte) 0) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@23
  [62] phi()
  [63] call print_cls 
  to:main::@return
main::@return: scope:[main]  from main::@4
  [64] return 
  to:@return

(void()) print_cls()
print_cls: scope:[print_cls]  from main::@2 main::@4 main::@9
  [65] phi()
  [66] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [67] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  [68] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [69] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@2/(byte*) memset::dst#1 )
  [70] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [71] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [72] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [73] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@1

(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from main::@1 main::@3
  [74] phi()
  [75] call keyboard_matrix_read 
  [76] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
  to:keyboard_key_pressed::@1
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  [77] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2
  [78] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[8]) keyboard_matrix_col_bitmask+(const byte) keyboard_key_pressed::colidx#0)
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@1
  [79] return 
  to:@return

(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  [80] *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask+(const byte) keyboard_key_pressed::rowidx#0)
  [81] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [82] return 
  to:@return

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from main::@10 main::@15 main::@17 main::@22 printEntry printEntry::@15 printEntry::@17 printEntry::@19 printEntry::@21 printEntry::@23 printEntry::@25 printEntry::@27 printEntry::@29 printEntry::@31 printEntry::@33 printEntry::@35 printEntry::@37
  [83] (byte*) print_char_cursor#164 ← phi( main::@10/(byte*) 1024 main::@15/(byte*) print_char_cursor#207 main::@17/(byte*) 1024 main::@22/(byte*) print_char_cursor#208 printEntry/(byte*) print_char_cursor#209 printEntry::@15/(byte*) print_char_cursor#210 printEntry::@17/(byte*) print_char_cursor#211 printEntry::@19/(byte*) print_char_cursor#212 printEntry::@21/(byte*) print_char_cursor#213 printEntry::@23/(byte*) print_char_cursor#214 printEntry::@25/(byte*) print_char_cursor#215 printEntry::@27/(byte*) print_char_cursor#216 printEntry::@29/(byte*) print_char_cursor#217 printEntry::@31/(byte*) print_char_cursor#218 printEntry::@33/(byte*) print_char_cursor#219 printEntry::@35/(byte*) print_char_cursor#220 printEntry::@37/(byte*) print_char_cursor#221 )
  [83] (byte*) print_str::str#20 ← phi( main::@10/(const string) main::str main::@15/(const string) main::str1 main::@17/(const string) main::str2 main::@22/(const string) main::str1 printEntry/(const string) printEntry::str printEntry::@15/(const string) printEntry::str1 printEntry::@17/(const string) printEntry::str2 printEntry::@19/(const string) printEntry::str3 printEntry::@21/(const string) printEntry::str4 printEntry::@23/(const string) printEntry::str5 printEntry::@25/(const string) printEntry::str6 printEntry::@27/(const string) printEntry::str7 printEntry::@29/(const string) printEntry::str8 printEntry::@31/(const string) printEntry::str9 printEntry::@33/(const string) printEntry::str10 printEntry::@35/(const string) printEntry::str11 printEntry::@37/(const string) printEntry::str12 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [84] (byte*) print_char_cursor#142 ← phi( print_str/(byte*) print_char_cursor#164 print_str::@2/(byte*) print_char_cursor#1 )
  [84] (byte*) print_str::str#18 ← phi( print_str/(byte*) print_str::str#20 print_str::@2/(byte*) print_str::str#0 )
  [85] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [86] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [87] *((byte*) print_char_cursor#142) ← *((byte*) print_str::str#18)
  [88] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#142
  [89] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#18
  to:print_str::@1

(void()) print_ln()
print_ln: scope:[print_ln]  from main::@11 main::@12 main::@14 main::@18 main::@19 main::@21 printEntry::@14 printEntry::@16 printEntry::@18 printEntry::@20 printEntry::@22 printEntry::@24 printEntry::@26 printEntry::@28 printEntry::@30 printEntry::@32 printEntry::@34 printEntry::@36 printEntry::@38
  [90] (byte*) print_char_cursor#143 ← phi( main::@11/(byte*) print_char_cursor#142 main::@12/(byte*) print_char_cursor#225 main::@14/(byte*) print_char_cursor#226 main::@18/(byte*) print_char_cursor#142 main::@19/(byte*) print_char_cursor#228 main::@21/(byte*) print_char_cursor#229 printEntry::@14/(byte*) print_char_cursor#11 printEntry::@16/(byte*) print_char_cursor#11 printEntry::@18/(byte*) print_char_cursor#11 printEntry::@20/(byte*) print_char_cursor#11 printEntry::@22/(byte*) print_char_cursor#11 printEntry::@24/(byte*) print_char_cursor#11 printEntry::@26/(byte*) print_char_cursor#11 printEntry::@28/(byte*) print_char_cursor#11 printEntry::@30/(byte*) print_char_cursor#11 printEntry::@32/(byte*) print_char_cursor#11 printEntry::@34/(byte*) print_char_cursor#11 printEntry::@36/(byte*) print_char_cursor#11 printEntry::@38/(byte*) print_char_cursor#11 )
  [90] (byte*) print_line_cursor#63 ← phi( main::@11/(byte*) 1024 main::@12/(byte*) print_line_cursor#154 main::@14/(byte*) print_line_cursor#155 main::@18/(byte*) 1024 main::@19/(byte*) print_line_cursor#156 main::@21/(byte*) print_line_cursor#157 printEntry::@14/(byte*) print_line_cursor#158 printEntry::@16/(byte*) print_line_cursor#159 printEntry::@18/(byte*) print_line_cursor#160 printEntry::@20/(byte*) print_line_cursor#161 printEntry::@22/(byte*) print_line_cursor#162 printEntry::@24/(byte*) print_line_cursor#163 printEntry::@26/(byte*) print_line_cursor#164 printEntry::@28/(byte*) print_line_cursor#165 printEntry::@30/(byte*) print_line_cursor#166 printEntry::@32/(byte*) print_line_cursor#167 printEntry::@34/(byte*) print_line_cursor#168 printEntry::@36/(byte*) print_line_cursor#169 printEntry::@38/(byte*) print_line_cursor#170 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@2
  [91] (byte*) print_line_cursor#32 ← phi( print_ln/(byte*) print_line_cursor#63 print_ln::@2/(byte*) print_line_cursor#172 )
  [92] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#32 + (byte) $28
  [93] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@2
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [94] return 
  to:@return
print_ln::@2: scope:[print_ln]  from print_ln::@1
  [95] (byte*) print_line_cursor#172 ← (byte*) print_line_cursor#1
  to:print_ln::@1

(void()) printEntry((byte*) printEntry::entry)
printEntry: scope:[printEntry]  from main::@13 main::@20
  [96] (byte*) printEntry::entry#10 ← phi( main::@13/(byte*) printEntry::entry#0 main::@20/(byte*) printEntry::entry#1 )
  [97] (byte*) print_char_cursor#209 ← (byte*) print_line_cursor#1
  [98] call print_str 
  to:printEntry::entryBufDisk1
printEntry::entryBufDisk1: scope:[printEntry]  from printEntry
  [99] phi()
  to:printEntry::@1
printEntry::@1: scope:[printEntry]  from printEntry::entryBufDisk1
  [100] (word) print_word::w#7 ← (word)*((byte**)(byte*) printEntry::entry#10)
  [101] call print_word 
  to:printEntry::@14
printEntry::@14: scope:[printEntry]  from printEntry::@1
  [102] (byte*) print_line_cursor#158 ← (byte*) print_line_cursor#1
  [103] call print_ln 
  to:printEntry::@15
printEntry::@15: scope:[printEntry]  from printEntry::@14
  [104] (byte*) print_char_cursor#210 ← (byte*) print_line_cursor#1
  [105] call print_str 
  to:printEntry::entryBufEdit1
printEntry::entryBufEdit1: scope:[printEntry]  from printEntry::@15
  [106] phi()
  to:printEntry::@2
printEntry::@2: scope:[printEntry]  from printEntry::entryBufEdit1
  [107] (word) print_word::w#8 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2)
  [108] call print_word 
  to:printEntry::@16
printEntry::@16: scope:[printEntry]  from printEntry::@2
  [109] (byte*) print_line_cursor#159 ← (byte*) print_line_cursor#1
  [110] call print_ln 
  to:printEntry::@17
printEntry::@17: scope:[printEntry]  from printEntry::@16
  [111] (byte*) print_char_cursor#211 ← (byte*) print_line_cursor#1
  [112] call print_str 
  to:printEntry::entryTsLen1
printEntry::entryTsLen1: scope:[printEntry]  from printEntry::@17
  [113] phi()
  to:printEntry::@3
printEntry::@3: scope:[printEntry]  from printEntry::entryTsLen1
  [114] (word) print_word::w#2 ← *((word*)(byte*) printEntry::entry#10 + (byte) 4)
  [115] call print_word 
  to:printEntry::@18
printEntry::@18: scope:[printEntry]  from printEntry::@3
  [116] (byte*) print_line_cursor#160 ← (byte*) print_line_cursor#1
  [117] call print_ln 
  to:printEntry::@19
printEntry::@19: scope:[printEntry]  from printEntry::@18
  [118] (byte*) print_char_cursor#212 ← (byte*) print_line_cursor#1
  [119] call print_str 
  to:printEntry::entryTsOrder1
printEntry::entryTsOrder1: scope:[printEntry]  from printEntry::@19
  [120] phi()
  to:printEntry::@4
printEntry::@4: scope:[printEntry]  from printEntry::entryTsOrder1
  [121] (word) print_word::w#10 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6)
  [122] call print_word 
  to:printEntry::@20
printEntry::@20: scope:[printEntry]  from printEntry::@4
  [123] (byte*) print_line_cursor#161 ← (byte*) print_line_cursor#1
  [124] call print_ln 
  to:printEntry::@21
printEntry::@21: scope:[printEntry]  from printEntry::@20
  [125] (byte*) print_char_cursor#213 ← (byte*) print_line_cursor#1
  [126] call print_str 
  to:printEntry::entryTLastLink1
printEntry::entryTLastLink1: scope:[printEntry]  from printEntry::@21
  [127] phi()
  to:printEntry::@5
printEntry::@5: scope:[printEntry]  from printEntry::entryTLastLink1
  [128] (byte) print_byte::b#2 ← *((byte*) printEntry::entry#10 + (byte) 8)
  [129] call print_byte 
  to:printEntry::@22
printEntry::@22: scope:[printEntry]  from printEntry::@5
  [130] (byte*) print_line_cursor#162 ← (byte*) print_line_cursor#1
  [131] call print_ln 
  to:printEntry::@23
printEntry::@23: scope:[printEntry]  from printEntry::@22
  [132] (byte*) print_char_cursor#214 ← (byte*) print_line_cursor#1
  [133] call print_str 
  to:printEntry::entrySLastLink1
printEntry::entrySLastLink1: scope:[printEntry]  from printEntry::@23
  [134] phi()
  to:printEntry::@6
printEntry::@6: scope:[printEntry]  from printEntry::entrySLastLink1
  [135] (byte) print_byte::b#3 ← *((byte*) printEntry::entry#10 + (byte) 9)
  [136] call print_byte 
  to:printEntry::@24
printEntry::@24: scope:[printEntry]  from printEntry::@6
  [137] (byte*) print_line_cursor#163 ← (byte*) print_line_cursor#1
  [138] call print_ln 
  to:printEntry::@25
printEntry::@25: scope:[printEntry]  from printEntry::@24
  [139] (byte*) print_char_cursor#215 ← (byte*) print_line_cursor#1
  [140] call print_str 
  to:printEntry::entryBFlag1
printEntry::entryBFlag1: scope:[printEntry]  from printEntry::@25
  [141] phi()
  to:printEntry::@7
printEntry::@7: scope:[printEntry]  from printEntry::entryBFlag1
  [142] (byte) print_byte::b#4 ← *((byte*) printEntry::entry#10 + (byte) $a)
  [143] call print_byte 
  to:printEntry::@26
printEntry::@26: scope:[printEntry]  from printEntry::@7
  [144] (byte*) print_line_cursor#164 ← (byte*) print_line_cursor#1
  [145] call print_ln 
  to:printEntry::@27
printEntry::@27: scope:[printEntry]  from printEntry::@26
  [146] (byte*) print_char_cursor#216 ← (byte*) print_line_cursor#1
  [147] call print_str 
  to:printEntry::entryBError1
printEntry::entryBError1: scope:[printEntry]  from printEntry::@27
  [148] phi()
  to:printEntry::@8
printEntry::@8: scope:[printEntry]  from printEntry::entryBError1
  [149] (byte) print_byte::b#5 ← *((byte*) printEntry::entry#10 + (byte) $b)
  [150] call print_byte 
  to:printEntry::@28
printEntry::@28: scope:[printEntry]  from printEntry::@8
  [151] (byte*) print_line_cursor#165 ← (byte*) print_line_cursor#1
  [152] call print_ln 
  to:printEntry::@29
printEntry::@29: scope:[printEntry]  from printEntry::@28
  [153] (byte*) print_char_cursor#217 ← (byte*) print_line_cursor#1
  [154] call print_str 
  to:printEntry::entryUCross1
printEntry::entryUCross1: scope:[printEntry]  from printEntry::@29
  [155] phi()
  to:printEntry::@9
printEntry::@9: scope:[printEntry]  from printEntry::entryUCross1
  [156] (word) print_word::w#4 ← *((word*)(byte*) printEntry::entry#10 + (byte) $c)
  [157] call print_word 
  to:printEntry::@30
printEntry::@30: scope:[printEntry]  from printEntry::@9
  [158] (byte*) print_line_cursor#166 ← (byte*) print_line_cursor#1
  [159] call print_ln 
  to:printEntry::@31
printEntry::@31: scope:[printEntry]  from printEntry::@30
  [160] (byte*) print_char_cursor#218 ← (byte*) print_line_cursor#1
  [161] call print_str 
  to:printEntry::entryBAddrLo1
printEntry::entryBAddrLo1: scope:[printEntry]  from printEntry::@31
  [162] phi()
  to:printEntry::@10
printEntry::@10: scope:[printEntry]  from printEntry::entryBAddrLo1
  [163] (byte) print_byte::b#6 ← *((byte*) printEntry::entry#10 + (byte) $e)
  [164] call print_byte 
  to:printEntry::@32
printEntry::@32: scope:[printEntry]  from printEntry::@10
  [165] (byte*) print_line_cursor#167 ← (byte*) print_line_cursor#1
  [166] call print_ln 
  to:printEntry::@33
printEntry::@33: scope:[printEntry]  from printEntry::@32
  [167] (byte*) print_char_cursor#219 ← (byte*) print_line_cursor#1
  [168] call print_str 
  to:printEntry::entryBAddrHi1
printEntry::entryBAddrHi1: scope:[printEntry]  from printEntry::@33
  [169] phi()
  to:printEntry::@11
printEntry::@11: scope:[printEntry]  from printEntry::entryBAddrHi1
  [170] (byte) print_byte::b#7 ← *((byte*) printEntry::entry#10 + (byte) $f)
  [171] call print_byte 
  to:printEntry::@34
printEntry::@34: scope:[printEntry]  from printEntry::@11
  [172] (byte*) print_line_cursor#168 ← (byte*) print_line_cursor#1
  [173] call print_ln 
  to:printEntry::@35
printEntry::@35: scope:[printEntry]  from printEntry::@34
  [174] (byte*) print_char_cursor#220 ← (byte*) print_line_cursor#1
  [175] call print_str 
  to:printEntry::entryTHi1
printEntry::entryTHi1: scope:[printEntry]  from printEntry::@35
  [176] phi()
  to:printEntry::@12
printEntry::@12: scope:[printEntry]  from printEntry::entryTHi1
  [177] (byte) print_byte::b#8 ← *((byte*) printEntry::entry#10 + (byte) $10)
  [178] call print_byte 
  to:printEntry::@36
printEntry::@36: scope:[printEntry]  from printEntry::@12
  [179] (byte*) print_line_cursor#169 ← (byte*) print_line_cursor#1
  [180] call print_ln 
  to:printEntry::@37
printEntry::@37: scope:[printEntry]  from printEntry::@36
  [181] (byte*) print_char_cursor#221 ← (byte*) print_line_cursor#1
  [182] call print_str 
  to:printEntry::entryTLo1
printEntry::entryTLo1: scope:[printEntry]  from printEntry::@37
  [183] phi()
  to:printEntry::@13
printEntry::@13: scope:[printEntry]  from printEntry::entryTLo1
  [184] (byte) print_byte::b#9 ← *((byte*) printEntry::entry#10 + (byte) $11)
  [185] call print_byte 
  to:printEntry::@38
printEntry::@38: scope:[printEntry]  from printEntry::@13
  [186] (byte*) print_line_cursor#170 ← (byte*) print_line_cursor#1
  [187] call print_ln 
  to:printEntry::@return
printEntry::@return: scope:[printEntry]  from printEntry::@38
  [188] return 
  to:@return

(void()) print_byte((byte) print_byte::b)
print_byte: scope:[print_byte]  from printEntry::@10 printEntry::@11 printEntry::@12 printEntry::@13 printEntry::@5 printEntry::@6 printEntry::@7 printEntry::@8 print_word print_word::@1
  [189] (byte*) print_char_cursor#145 ← phi( printEntry::@10/(byte*) print_char_cursor#142 printEntry::@11/(byte*) print_char_cursor#142 printEntry::@12/(byte*) print_char_cursor#142 printEntry::@13/(byte*) print_char_cursor#142 printEntry::@5/(byte*) print_char_cursor#142 printEntry::@6/(byte*) print_char_cursor#142 printEntry::@7/(byte*) print_char_cursor#142 printEntry::@8/(byte*) print_char_cursor#142 print_word/(byte*) print_char_cursor#142 print_word::@1/(byte*) print_char_cursor#11 )
  [189] (byte) print_byte::b#10 ← phi( printEntry::@10/(byte) print_byte::b#6 printEntry::@11/(byte) print_byte::b#7 printEntry::@12/(byte) print_byte::b#8 printEntry::@13/(byte) print_byte::b#9 printEntry::@5/(byte) print_byte::b#2 printEntry::@6/(byte) print_byte::b#3 printEntry::@7/(byte) print_byte::b#4 printEntry::@8/(byte) print_byte::b#5 print_word/(byte) print_byte::b#0 print_word::@1/(byte) print_byte::b#1 )
  [190] (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (byte) 4
  [191] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0)
  [192] call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [193] (byte~) print_byte::$2 ← (byte) print_byte::b#10 & (byte) $f
  [194] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2)
  [195] call print_char 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [196] return 
  to:@return

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_byte print_byte::@1
  [197] (byte*) print_char_cursor#82 ← phi( print_byte/(byte*) print_char_cursor#145 print_byte::@1/(byte*) print_char_cursor#11 )
  [197] (byte) print_char::ch#2 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 )
  [198] *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2
  [199] (byte*) print_char_cursor#11 ← ++ (byte*) print_char_cursor#82
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [200] return 
  to:@return

(void()) print_word((word) print_word::w)
print_word: scope:[print_word]  from printEntry::@1 printEntry::@2 printEntry::@3 printEntry::@4 printEntry::@9
  [201] (word) print_word::w#5 ← phi( printEntry::@1/(word) print_word::w#7 printEntry::@2/(word) print_word::w#8 printEntry::@3/(word) print_word::w#2 printEntry::@4/(word) print_word::w#10 printEntry::@9/(word) print_word::w#4 )
  [202] (byte) print_byte::b#0 ← > (word) print_word::w#5
  [203] call print_byte 
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [204] (byte) print_byte::b#1 ← < (word) print_word::w#5
  [205] call print_byte 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [206] return 
  to:@return

(void()) initEntry((byte*) initEntry::entry , (byte) initEntry::n)
initEntry: scope:[initEntry]  from main::@5 main::@8
  [207] (byte) initEntry::n#10 ← phi( main::@5/(byte) 0 main::@8/(byte) $11 )
  [207] (byte*) initEntry::entry#10 ← phi( main::@5/(byte*) initEntry::entry#0 main::@8/(byte*) initEntry::entry#1 )
  to:initEntry::entryBufDisk1
initEntry::entryBufDisk1: scope:[initEntry]  from initEntry
  [208] phi()
  to:initEntry::@1
initEntry::@1: scope:[initEntry]  from initEntry::entryBufDisk1
  [209] (word~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#10
  [210] *((byte**)(byte*) initEntry::entry#10) ← (byte*)(word~) initEntry::$1
  to:initEntry::entryBufEdit1
initEntry::entryBufEdit1: scope:[initEntry]  from initEntry::@1
  [211] phi()
  to:initEntry::@2
initEntry::@2: scope:[initEntry]  from initEntry::entryBufEdit1
  [212] (word~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#10
  [213] *((byte**)(byte*) initEntry::entry#10 + (byte) 2) ← (byte*)(word~) initEntry::$3
  to:initEntry::entryTsLen1
initEntry::entryTsLen1: scope:[initEntry]  from initEntry::@2
  [214] phi()
  to:initEntry::@3
initEntry::@3: scope:[initEntry]  from initEntry::entryTsLen1
  [215] (word~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#10
  [216] *((word*)(byte*) initEntry::entry#10 + (byte) 4) ← (word~) initEntry::$5
  to:initEntry::entryTsOrder1
initEntry::entryTsOrder1: scope:[initEntry]  from initEntry::@3
  [217] phi()
  to:initEntry::@4
initEntry::@4: scope:[initEntry]  from initEntry::entryTsOrder1
  [218] (word~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#10
  [219] *((word**)(byte*) initEntry::entry#10 + (byte) 6) ← (word*)(word~) initEntry::$7
  to:initEntry::entryTLastLink1
initEntry::entryTLastLink1: scope:[initEntry]  from initEntry::@4
  [220] phi()
  to:initEntry::@5
initEntry::@5: scope:[initEntry]  from initEntry::entryTLastLink1
  [221] (byte~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#10
  [222] *((byte*) initEntry::entry#10 + (byte) 8) ← (byte~) initEntry::$9
  to:initEntry::entrySLastLink1
initEntry::entrySLastLink1: scope:[initEntry]  from initEntry::@5
  [223] phi()
  to:initEntry::@6
initEntry::@6: scope:[initEntry]  from initEntry::entrySLastLink1
  [224] (byte~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#10
  [225] *((byte*) initEntry::entry#10 + (byte) 9) ← (byte~) initEntry::$11
  to:initEntry::entryBFlag1
initEntry::entryBFlag1: scope:[initEntry]  from initEntry::@6
  [226] phi()
  to:initEntry::@7
initEntry::@7: scope:[initEntry]  from initEntry::entryBFlag1
  [227] (byte~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#10
  [228] *((byte*) initEntry::entry#10 + (byte) $a) ← (byte~) initEntry::$13
  to:initEntry::entryBError1
initEntry::entryBError1: scope:[initEntry]  from initEntry::@7
  [229] phi()
  to:initEntry::@8
initEntry::@8: scope:[initEntry]  from initEntry::entryBError1
  [230] (byte~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#10
  [231] *((byte*) initEntry::entry#10 + (byte) $b) ← (byte~) initEntry::$15
  to:initEntry::entryUCross1
initEntry::entryUCross1: scope:[initEntry]  from initEntry::@8
  [232] phi()
  to:initEntry::@9
initEntry::@9: scope:[initEntry]  from initEntry::entryUCross1
  [233] (word~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10
  [234] *((word*)(byte*) initEntry::entry#10 + (byte) $c) ← (word~) initEntry::$17
  to:initEntry::entryBAddrLo1
initEntry::entryBAddrLo1: scope:[initEntry]  from initEntry::@9
  [235] phi()
  to:initEntry::@10
initEntry::@10: scope:[initEntry]  from initEntry::entryBAddrLo1
  [236] (byte~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#10
  [237] *((byte*) initEntry::entry#10 + (byte) $e) ← (byte~) initEntry::$19
  to:initEntry::entryBAddrHi1
initEntry::entryBAddrHi1: scope:[initEntry]  from initEntry::@10
  [238] phi()
  to:initEntry::@11
initEntry::@11: scope:[initEntry]  from initEntry::entryBAddrHi1
  [239] (byte~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#10
  [240] *((byte*) initEntry::entry#10 + (byte) $f) ← (byte~) initEntry::$21
  to:initEntry::entryTHi1
initEntry::entryTHi1: scope:[initEntry]  from initEntry::@11
  [241] phi()
  to:initEntry::@12
initEntry::@12: scope:[initEntry]  from initEntry::entryTHi1
  [242] (byte~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#10
  [243] *((byte*) initEntry::entry#10 + (byte) $10) ← (byte~) initEntry::$23
  to:initEntry::entryTLo1
initEntry::entryTLo1: scope:[initEntry]  from initEntry::@12
  [244] phi()
  to:initEntry::@13
initEntry::@13: scope:[initEntry]  from initEntry::entryTLo1
  [245] (byte~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#10
  [246] *((byte*) initEntry::entry#10 + (byte) $11) ← (byte~) initEntry::$25
  to:initEntry::@return
initEntry::@return: scope:[initEntry]  from initEntry::@13
  [247] return 
  to:@return

(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
mul8u: scope:[mul8u]  from main::fileEntry1 main::fileEntry2
  [248] (byte) mul8u::a#6 ← phi( main::fileEntry1/(const byte) main::fileEntry1_idx#0 main::fileEntry2/(const byte) main::fileEntry2_idx#0 )
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@3
  [249] (word) mul8u::mb#2 ← phi( mul8u/(const byte) SIZEOF_ENTRY mul8u::@3/(word) mul8u::mb#1 )
  [249] (word) mul8u::res#2 ← phi( mul8u/(byte) 0 mul8u::@3/(word) mul8u::res#6 )
  [249] (byte) mul8u::a#3 ← phi( mul8u/(byte) mul8u::a#6 mul8u::@3/(byte) mul8u::a#0 )
  [250] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2
  to:mul8u::@return
mul8u::@return: scope:[mul8u]  from mul8u::@1
  [251] return 
  to:@return
mul8u::@2: scope:[mul8u]  from mul8u::@1
  [252] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1
  [253] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3
  to:mul8u::@4
mul8u::@4: scope:[mul8u]  from mul8u::@2
  [254] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2
  to:mul8u::@3
mul8u::@3: scope:[mul8u]  from mul8u::@2 mul8u::@4
  [255] (word) mul8u::res#6 ← phi( mul8u::@2/(word) mul8u::res#2 mul8u::@4/(word) mul8u::res#1 )
  [256] (byte) mul8u::a#0 ← (byte) mul8u::a#3 >> (byte) 1
  [257] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1
  to:mul8u::@1

(void()) keyboard_init()
keyboard_init: scope:[keyboard_init]  from main
  [258] *((const byte*) CIA1_PORT_A_DDR) ← (byte) $ff
  [259] *((const byte*) CIA1_PORT_B_DDR) ← (byte) 0
  to:keyboard_init::@return
keyboard_init::@return: scope:[keyboard_init]  from keyboard_init
  [260] return 
  to:@return


VARIABLE REGISTER WEIGHTS
(void()) initEntry((byte*) initEntry::entry , (byte) initEntry::n)
(word~) initEntry::$1 2.0
(byte~) initEntry::$11 4.0
(byte~) initEntry::$13 4.0
(byte~) initEntry::$15 4.0
(word~) initEntry::$17 4.0
(byte~) initEntry::$19 4.0
(byte~) initEntry::$21 4.0
(byte~) initEntry::$23 4.0
(byte~) initEntry::$25 4.0
(word~) initEntry::$3 2.0
(word~) initEntry::$5 4.0
(word~) initEntry::$7 2.0
(byte~) initEntry::$9 4.0
(byte*) initEntry::entry
(byte*) initEntry::entry#0 4.0
(byte*) initEntry::entry#1 4.0
(byte*) initEntry::entry#10 0.5128205128205128
(byte*) initEntry::entryBAddrHi1_entry
(byte*) initEntry::entryBAddrHi1_return
(byte*) initEntry::entryBAddrLo1_entry
(byte*) initEntry::entryBAddrLo1_return
(byte*) initEntry::entryBError1_entry
(byte*) initEntry::entryBError1_return
(byte*) initEntry::entryBFlag1_entry
(byte*) initEntry::entryBFlag1_return
(byte*) initEntry::entryBufDisk1_entry
(byte**) initEntry::entryBufDisk1_return
(byte*) initEntry::entryBufEdit1_entry
(byte**) initEntry::entryBufEdit1_return
(byte*) initEntry::entrySLastLink1_entry
(byte*) initEntry::entrySLastLink1_return
(byte*) initEntry::entryTHi1_entry
(byte*) initEntry::entryTHi1_return
(byte*) initEntry::entryTLastLink1_entry
(byte*) initEntry::entryTLastLink1_return
(byte*) initEntry::entryTLo1_entry
(byte*) initEntry::entryTLo1_return
(byte*) initEntry::entryTsLen1_entry
(word*) initEntry::entryTsLen1_return
(byte*) initEntry::entryTsOrder1_entry
(word**) initEntry::entryTsOrder1_return
(byte*) initEntry::entryUCross1_entry
(word*) initEntry::entryUCross1_return
(byte) initEntry::n
(byte) initEntry::n#10 0.6842105263157894
(void()) keyboard_init()
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 4.0
(byte) keyboard_key_pressed::colidx
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 6.0
(byte) keyboard_key_pressed::return#2 22.0
(byte) keyboard_key_pressed::return#3 22.0
(byte) keyboard_key_pressed::rowidx
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 1.3333333333333333
(byte) keyboard_matrix_read::return#2 4.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(void()) main()
(byte~) main::$20 22.0
(byte~) main::$22 22.0
(byte*) main::entry1
(byte*) main::entry1#0 0.3157894736842105
(byte*) main::entry2
(byte*) main::entry2#0 0.17142857142857143
(word~) main::fileEntry1_$0 4.0
(byte) main::fileEntry1_idx
(byte*) main::fileEntry1_return
(word~) main::fileEntry2_$0 4.0
(byte) main::fileEntry2_idx
(byte*) main::fileEntry2_return
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(byte) memset::c
(byte*) memset::dst
(byte*) memset::dst#1 22.0
(byte*) memset::dst#2 14.666666666666666
(byte*) memset::end
(word) memset::num
(void*) memset::return
(void*) memset::str
(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
(byte~) mul8u::$1 22.0
(byte) mul8u::a
(byte) mul8u::a#0 11.0
(byte) mul8u::a#3 7.666666666666666
(byte) mul8u::a#6 2.0
(byte) mul8u::b
(word) mul8u::mb
(word) mul8u::mb#1 22.0
(word) mul8u::mb#2 4.714285714285714
(word) mul8u::res
(word) mul8u::res#1 22.0
(word) mul8u::res#2 5.285714285714286
(word) mul8u::res#6 11.0
(word) mul8u::return
(word) mul8u::return#2 4.0
(word) mul8u::return#3 4.0
(void()) printEntry((byte*) printEntry::entry)
(byte*) printEntry::entry
(byte*) printEntry::entry#0 4.0
(byte*) printEntry::entry#1 4.0
(byte*) printEntry::entry#10 0.22727272727272732
(byte*) printEntry::entryBAddrHi1_entry
(byte*) printEntry::entryBAddrHi1_return
(byte*) printEntry::entryBAddrLo1_entry
(byte*) printEntry::entryBAddrLo1_return
(byte*) printEntry::entryBError1_entry
(byte*) printEntry::entryBError1_return
(byte*) printEntry::entryBFlag1_entry
(byte*) printEntry::entryBFlag1_return
(byte*) printEntry::entryBufDisk1_entry
(byte**) printEntry::entryBufDisk1_return
(byte*) printEntry::entryBufEdit1_entry
(byte**) printEntry::entryBufEdit1_return
(byte*) printEntry::entrySLastLink1_entry
(byte*) printEntry::entrySLastLink1_return
(byte*) printEntry::entryTHi1_entry
(byte*) printEntry::entryTHi1_return
(byte*) printEntry::entryTLastLink1_entry
(byte*) printEntry::entryTLastLink1_return
(byte*) printEntry::entryTLo1_entry
(byte*) printEntry::entryTLo1_return
(byte*) printEntry::entryTsLen1_entry
(word*) printEntry::entryTsLen1_return
(byte*) printEntry::entryTsOrder1_entry
(word**) printEntry::entryTsOrder1_return
(byte*) printEntry::entryUCross1_entry
(word*) printEntry::entryUCross1_return
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 4.0
(byte~) print_byte::$2 4.0
(byte) print_byte::b
(byte) print_byte::b#0 4.0
(byte) print_byte::b#1 4.0
(byte) print_byte::b#10 6.0
(byte) print_byte::b#2 4.0
(byte) print_byte::b#3 4.0
(byte) print_byte::b#4 4.0
(byte) print_byte::b#5 4.0
(byte) print_byte::b#6 4.0
(byte) print_byte::b#7 4.0
(byte) print_byte::b#8 4.0
(byte) print_byte::b#9 4.0
(void()) print_char((byte) print_char::ch)
(byte) print_char::ch
(byte) print_char::ch#0 4.0
(byte) print_char::ch#1 4.0
(byte) print_char::ch#2 6.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 11.0
(byte*) print_char_cursor#11 0.8648648648648649
(byte*) print_char_cursor#142 1.1632653061224494
(byte*) print_char_cursor#143 9.800000000000002
(byte*) print_char_cursor#145 7.333333333333334
(byte*) print_char_cursor#164 32.0
(byte*) print_char_cursor#207 4.0
(byte*) print_char_cursor#208 4.0
(byte*) print_char_cursor#209 4.0
(byte*) print_char_cursor#210 4.0
(byte*) print_char_cursor#211 4.0
(byte*) print_char_cursor#212 4.0
(byte*) print_char_cursor#213 4.0
(byte*) print_char_cursor#214 4.0
(byte*) print_char_cursor#215 4.0
(byte*) print_char_cursor#216 4.0
(byte*) print_char_cursor#217 4.0
(byte*) print_char_cursor#218 4.0
(byte*) print_char_cursor#219 4.0
(byte*) print_char_cursor#220 4.0
(byte*) print_char_cursor#221 4.0
(byte*) print_char_cursor#225 4.0
(byte*) print_char_cursor#226 4.0
(byte*) print_char_cursor#228 4.0
(byte*) print_char_cursor#229 4.0
(byte*) print_char_cursor#82 4.0
(void()) print_cls()
(byte*) print_line_cursor
(byte*) print_line_cursor#1 1.0824742268041243
(byte*) print_line_cursor#154 2.0
(byte*) print_line_cursor#155 2.0
(byte*) print_line_cursor#156 2.0
(byte*) print_line_cursor#157 2.0
(byte*) print_line_cursor#158 4.0
(byte*) print_line_cursor#159 4.0
(byte*) print_line_cursor#160 4.0
(byte*) print_line_cursor#161 4.0
(byte*) print_line_cursor#162 4.0
(byte*) print_line_cursor#163 4.0
(byte*) print_line_cursor#164 4.0
(byte*) print_line_cursor#165 4.0
(byte*) print_line_cursor#166 4.0
(byte*) print_line_cursor#167 4.0
(byte*) print_line_cursor#168 4.0
(byte*) print_line_cursor#169 4.0
(byte*) print_line_cursor#170 4.0
(byte*) print_line_cursor#172 22.0
(byte*) print_line_cursor#32 24.0
(byte*) print_line_cursor#63 36.0
(void()) print_ln()
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(byte*) print_str::str
(byte*) print_str::str#0 22.0
(byte*) print_str::str#18 11.5
(byte*) print_str::str#20 2.0
(void()) print_word((word) print_word::w)
(word) print_word::w
(word) print_word::w#10 4.0
(word) print_word::w#2 4.0
(word) print_word::w#4 4.0
(word) print_word::w#5 4.666666666666666
(word) print_word::w#7 4.0
(word) print_word::w#8 4.0

Initial phi equivalence classes
[ memset::dst#2 memset::dst#1 ]
[ print_str::str#18 print_str::str#20 print_str::str#0 ]
[ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ]
[ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ]
[ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ]
[ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
[ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ]
[ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ]
[ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ]
[ initEntry::n#10 ]
[ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
[ mul8u::res#2 mul8u::res#6 mul8u::res#1 ]
[ mul8u::mb#2 mul8u::mb#1 ]
Added variable mul8u::return#2 to zero page equivalence class [ mul8u::return#2 ]
Added variable main::fileEntry1_$0 to zero page equivalence class [ main::fileEntry1_$0 ]
Added variable main::entry1#0 to zero page equivalence class [ main::entry1#0 ]
Added variable mul8u::return#3 to zero page equivalence class [ mul8u::return#3 ]
Added variable main::fileEntry2_$0 to zero page equivalence class [ main::fileEntry2_$0 ]
Added variable main::entry2#0 to zero page equivalence class [ main::entry2#0 ]
Added variable keyboard_key_pressed::return#2 to zero page equivalence class [ keyboard_key_pressed::return#2 ]
Added variable main::$20 to zero page equivalence class [ main::$20 ]
Added variable keyboard_key_pressed::return#3 to zero page equivalence class [ keyboard_key_pressed::return#3 ]
Added variable main::$22 to zero page equivalence class [ main::$22 ]
Added variable keyboard_matrix_read::return#2 to zero page equivalence class [ keyboard_matrix_read::return#2 ]
Added variable keyboard_key_pressed::$2 to zero page equivalence class [ keyboard_key_pressed::$2 ]
Added variable keyboard_key_pressed::return#0 to zero page equivalence class [ keyboard_key_pressed::return#0 ]
Added variable keyboard_matrix_read::return#0 to zero page equivalence class [ keyboard_matrix_read::return#0 ]
Added variable print_line_cursor#1 to zero page equivalence class [ print_line_cursor#1 ]
Added variable print_byte::$0 to zero page equivalence class [ print_byte::$0 ]
Added variable print_byte::$2 to zero page equivalence class [ print_byte::$2 ]
Added variable initEntry::$1 to zero page equivalence class [ initEntry::$1 ]
Added variable initEntry::$3 to zero page equivalence class [ initEntry::$3 ]
Added variable initEntry::$5 to zero page equivalence class [ initEntry::$5 ]
Added variable initEntry::$7 to zero page equivalence class [ initEntry::$7 ]
Added variable initEntry::$9 to zero page equivalence class [ initEntry::$9 ]
Added variable initEntry::$11 to zero page equivalence class [ initEntry::$11 ]
Added variable initEntry::$13 to zero page equivalence class [ initEntry::$13 ]
Added variable initEntry::$15 to zero page equivalence class [ initEntry::$15 ]
Added variable initEntry::$17 to zero page equivalence class [ initEntry::$17 ]
Added variable initEntry::$19 to zero page equivalence class [ initEntry::$19 ]
Added variable initEntry::$21 to zero page equivalence class [ initEntry::$21 ]
Added variable initEntry::$23 to zero page equivalence class [ initEntry::$23 ]
Added variable initEntry::$25 to zero page equivalence class [ initEntry::$25 ]
Added variable mul8u::$1 to zero page equivalence class [ mul8u::$1 ]
Complete equivalence classes
[ memset::dst#2 memset::dst#1 ]
[ print_str::str#18 print_str::str#20 print_str::str#0 ]
[ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ]
[ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ]
[ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ]
[ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
[ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ]
[ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ]
[ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ]
[ initEntry::n#10 ]
[ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
[ mul8u::res#2 mul8u::res#6 mul8u::res#1 ]
[ mul8u::mb#2 mul8u::mb#1 ]
[ mul8u::return#2 ]
[ main::fileEntry1_$0 ]
[ main::entry1#0 ]
[ mul8u::return#3 ]
[ main::fileEntry2_$0 ]
[ main::entry2#0 ]
[ keyboard_key_pressed::return#2 ]
[ main::$20 ]
[ keyboard_key_pressed::return#3 ]
[ main::$22 ]
[ keyboard_matrix_read::return#2 ]
[ keyboard_key_pressed::$2 ]
[ keyboard_key_pressed::return#0 ]
[ keyboard_matrix_read::return#0 ]
[ print_line_cursor#1 ]
[ print_byte::$0 ]
[ print_byte::$2 ]
[ initEntry::$1 ]
[ initEntry::$3 ]
[ initEntry::$5 ]
[ initEntry::$7 ]
[ initEntry::$9 ]
[ initEntry::$11 ]
[ initEntry::$13 ]
[ initEntry::$15 ]
[ initEntry::$17 ]
[ initEntry::$19 ]
[ initEntry::$21 ]
[ initEntry::$23 ]
[ initEntry::$25 ]
[ mul8u::$1 ]
Allocated zp[2]:2 [ memset::dst#2 memset::dst#1 ]
Allocated zp[2]:4 [ print_str::str#18 print_str::str#20 print_str::str#0 ]
Allocated zp[2]:6 [ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ]
Allocated zp[2]:8 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ]
Allocated zp[1]:10 [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ]
Allocated zp[1]:11 [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
Allocated zp[2]:12 [ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ]
Allocated zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ]
Allocated zp[2]:16 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ]
Allocated zp[1]:18 [ initEntry::n#10 ]
Allocated zp[1]:19 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
Allocated zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ]
Allocated zp[2]:22 [ mul8u::mb#2 mul8u::mb#1 ]
Allocated zp[2]:24 [ mul8u::return#2 ]
Allocated zp[2]:26 [ main::fileEntry1_$0 ]
Allocated zp[2]:28 [ main::entry1#0 ]
Allocated zp[2]:30 [ mul8u::return#3 ]
Allocated zp[2]:32 [ main::fileEntry2_$0 ]
Allocated zp[2]:34 [ main::entry2#0 ]
Allocated zp[1]:36 [ keyboard_key_pressed::return#2 ]
Allocated zp[1]:37 [ main::$20 ]
Allocated zp[1]:38 [ keyboard_key_pressed::return#3 ]
Allocated zp[1]:39 [ main::$22 ]
Allocated zp[1]:40 [ keyboard_matrix_read::return#2 ]
Allocated zp[1]:41 [ keyboard_key_pressed::$2 ]
Allocated zp[1]:42 [ keyboard_key_pressed::return#0 ]
Allocated zp[1]:43 [ keyboard_matrix_read::return#0 ]
Allocated zp[2]:44 [ print_line_cursor#1 ]
Allocated zp[1]:46 [ print_byte::$0 ]
Allocated zp[1]:47 [ print_byte::$2 ]
Allocated zp[2]:48 [ initEntry::$1 ]
Allocated zp[2]:50 [ initEntry::$3 ]
Allocated zp[2]:52 [ initEntry::$5 ]
Allocated zp[2]:54 [ initEntry::$7 ]
Allocated zp[1]:56 [ initEntry::$9 ]
Allocated zp[1]:57 [ initEntry::$11 ]
Allocated zp[1]:58 [ initEntry::$13 ]
Allocated zp[1]:59 [ initEntry::$15 ]
Allocated zp[2]:60 [ initEntry::$17 ]
Allocated zp[1]:62 [ initEntry::$19 ]
Allocated zp[1]:63 [ initEntry::$21 ]
Allocated zp[1]:64 [ initEntry::$23 ]
Allocated zp[1]:65 [ initEntry::$25 ]
Allocated zp[1]:66 [ mul8u::$1 ]

INITIAL ASM
Target platform is c64basic / MOS6502X
  // File Comments
// Implementing a semi-struct without the struct keyword by using pointer math and inline functions
//
// struct fileentry {
//    BYTE *bufDisk; // file position in disk buffer.
//    BYTE *bufEdit; // file edits
//    WORD tsLen; // num of sectors
//    TS *tsOrder;
//    BYTE tLastLink;
//    BYTE sLastLink;
//    BYTE bFlag;
//    BYTE bError;
//    WORD uCross; // num of crosslinked sectors
//    BYTE bAddrLo; // start address
//    BYTE bAddrHi;
//    BYTE tHi; // highest track
//    BYTE tLo; // lowest track
//    };
//    typedef struct fileentry ENTRY;
//    ENTRY files[MAX_FILES];
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__bbegin)
.pc = $80d "Program"
  // Global Constants & labels
  // CIA#1 Port A: keyboard matrix columns and joystick #2
  .label CIA1_PORT_A = $dc00
  // CIA#1 Port B: keyboard matrix rows and joystick #1.
  .label CIA1_PORT_B = $dc01
  // CIA #1 Port A data direction register.
  .label CIA1_PORT_A_DDR = $dc02
  // CIA #1 Port B data direction register.
  .label CIA1_PORT_B_DDR = $dc03
  .const KEY_SPACE = $3c
  // The size of a file ENTRY
  .const SIZEOF_ENTRY = $12
  // The maximal number of files
  .const MAX_FILES = $90
  .label print_char_cursor = $c
  .label print_line_cursor = $2c
  .label print_line_cursor_1 = 6
  // @begin
__bbegin:
  // [1] phi from @begin to @1 [phi:@begin->@1]
__b1_from___bbegin:
  jmp __b1
  // @1
__b1:
  // [2] call main 
  // [4] phi from @1 to main [phi:@1->main]
main_from___b1:
  jsr main
  // [3] phi from @1 to @end [phi:@1->@end]
__bend_from___b1:
  jmp __bend
  // @end
__bend:
  // main
// Initialize 2 file entries and print them
main: {
    .const fileEntry1_idx = 1
    .const fileEntry2_idx = 2
    .label __20 = $25
    .label __22 = $27
    .label fileEntry1___0 = $1a
    .label fileEntry2___0 = $20
    .label entry1 = $1c
    .label entry2 = $22
    // [5] call keyboard_init 
    jsr keyboard_init
    // [6] phi from main to main::fileEntry1 [phi:main->main::fileEntry1]
  fileEntry1_from_main:
    jmp fileEntry1
    // main::fileEntry1
  fileEntry1:
    // [7] call mul8u 
    // [248] phi from main::fileEntry1 to mul8u [phi:main::fileEntry1->mul8u]
  mul8u_from_fileEntry1:
    // [248] phi (byte) mul8u::a#6 = (const byte) main::fileEntry1_idx#0 [phi:main::fileEntry1->mul8u#0] -- vbuz1=vbuc1 
    lda #fileEntry1_idx
    sta.z mul8u.a
    jsr mul8u
    // [8] (word) mul8u::return#2 ← (word) mul8u::res#2 -- vwuz1=vwuz2 
    lda.z mul8u.res
    sta.z mul8u.return
    lda.z mul8u.res+1
    sta.z mul8u.return+1
    jmp __b6
    // main::@6
  __b6:
    // [9] (word~) main::fileEntry1_$0 ← (word) mul8u::return#2 -- vwuz1=vwuz2 
    lda.z mul8u.return
    sta.z fileEntry1___0
    lda.z mul8u.return+1
    sta.z fileEntry1___0+1
    // [10] (byte*) main::entry1#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z fileEntry1___0
    clc
    adc #<files
    sta.z entry1
    lda.z fileEntry1___0+1
    adc #>files
    sta.z entry1+1
    // [11] phi from main::@6 to main::fileEntry2 [phi:main::@6->main::fileEntry2]
  fileEntry2_from___b6:
    jmp fileEntry2
    // main::fileEntry2
  fileEntry2:
    // [12] call mul8u 
    // [248] phi from main::fileEntry2 to mul8u [phi:main::fileEntry2->mul8u]
  mul8u_from_fileEntry2:
    // [248] phi (byte) mul8u::a#6 = (const byte) main::fileEntry2_idx#0 [phi:main::fileEntry2->mul8u#0] -- vbuz1=vbuc1 
    lda #fileEntry2_idx
    sta.z mul8u.a
    jsr mul8u
    // [13] (word) mul8u::return#3 ← (word) mul8u::res#2 -- vwuz1=vwuz2 
    lda.z mul8u.res
    sta.z mul8u.return_1
    lda.z mul8u.res+1
    sta.z mul8u.return_1+1
    jmp __b7
    // main::@7
  __b7:
    // [14] (word~) main::fileEntry2_$0 ← (word) mul8u::return#3 -- vwuz1=vwuz2 
    lda.z mul8u.return_1
    sta.z fileEntry2___0
    lda.z mul8u.return_1+1
    sta.z fileEntry2___0+1
    // [15] (byte*) main::entry2#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z fileEntry2___0
    clc
    adc #<files
    sta.z entry2
    lda.z fileEntry2___0+1
    adc #>files
    sta.z entry2+1
    jmp __b5
    // main::@5
  __b5:
    // [16] (byte*) initEntry::entry#0 ← (byte*) main::entry1#0 -- pbuz1=pbuz2 
    lda.z entry1
    sta.z initEntry.entry
    lda.z entry1+1
    sta.z initEntry.entry+1
    // [17] call initEntry 
    // [207] phi from main::@5 to initEntry [phi:main::@5->initEntry]
  initEntry_from___b5:
    // [207] phi (byte) initEntry::n#10 = (byte) 0 [phi:main::@5->initEntry#0] -- vbuz1=vbuc1 
    lda #0
    sta.z initEntry.n
    // [207] phi (byte*) initEntry::entry#10 = (byte*) initEntry::entry#0 [phi:main::@5->initEntry#1] -- register_copy 
    jsr initEntry
    jmp __b8
    // main::@8
  __b8:
    // [18] (byte*) initEntry::entry#1 ← (byte*) main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z initEntry.entry
    lda.z entry2+1
    sta.z initEntry.entry+1
    // [19] call initEntry 
    // [207] phi from main::@8 to initEntry [phi:main::@8->initEntry]
  initEntry_from___b8:
    // [207] phi (byte) initEntry::n#10 = (byte) $11 [phi:main::@8->initEntry#0] -- vbuz1=vbuc1 
    lda #$11
    sta.z initEntry.n
    // [207] phi (byte*) initEntry::entry#10 = (byte*) initEntry::entry#1 [phi:main::@8->initEntry#1] -- register_copy 
    jsr initEntry
    // [20] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
  __b9_from___b8:
    jmp __b9
    // main::@9
  __b9:
    // [21] call print_cls 
    // [65] phi from main::@9 to print_cls [phi:main::@9->print_cls]
  print_cls_from___b9:
    jsr print_cls
    // [22] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
  __b10_from___b9:
    jmp __b10
    // main::@10
  __b10:
    // [23] call print_str 
    // [83] phi from main::@10 to print_str [phi:main::@10->print_str]
  print_str_from___b10:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) 1024 [phi:main::@10->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [83] phi (byte*) print_str::str#20 = (const string) main::str [phi:main::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [24] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
  __b11_from___b10:
    jmp __b11
    // main::@11
  __b11:
    // [25] call print_ln 
    // [90] phi from main::@11 to print_ln [phi:main::@11->print_ln]
  print_ln_from___b11:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#142 [phi:main::@11->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) 1024 [phi:main::@11->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor_1
    lda #>$400
    sta.z print_line_cursor_1+1
    jsr print_ln
    jmp __b12
    // main::@12
  __b12:
    // [26] (byte*) print_line_cursor#154 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [27] (byte*) print_char_cursor#225 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [28] call print_ln 
    // [90] phi from main::@12 to print_ln [phi:main::@12->print_ln]
  print_ln_from___b12:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#225 [phi:main::@12->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#154 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b13
    // main::@13
  __b13:
    // [29] (byte*) printEntry::entry#0 ← (byte*) main::entry1#0 -- pbuz1=pbuz2 
    lda.z entry1
    sta.z printEntry.entry
    lda.z entry1+1
    sta.z printEntry.entry+1
    // [30] call printEntry 
    // [96] phi from main::@13 to printEntry [phi:main::@13->printEntry]
  printEntry_from___b13:
    // [96] phi (byte*) printEntry::entry#10 = (byte*) printEntry::entry#0 [phi:main::@13->printEntry#0] -- register_copy 
    jsr printEntry
    jmp __b14
    // main::@14
  __b14:
    // [31] (byte*) print_line_cursor#155 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [32] (byte*) print_char_cursor#226 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [33] call print_ln 
    // [90] phi from main::@14 to print_ln [phi:main::@14->print_ln]
  print_ln_from___b14:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#226 [phi:main::@14->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#155 [phi:main::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b15
    // main::@15
  __b15:
    // [34] (byte*) print_char_cursor#207 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [35] call print_str 
    // [83] phi from main::@15 to print_str [phi:main::@15->print_str]
  print_str_from___b15:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#207 [phi:main::@15->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) main::str1 [phi:main::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [36] phi from main::@15 main::@16 to main::@1 [phi:main::@15/main::@16->main::@1]
  __b1_from___b15:
  __b1_from___b16:
    jmp __b1
    // main::@1
  __b1:
    // [37] call keyboard_key_pressed 
    // [74] phi from main::@1 to keyboard_key_pressed [phi:main::@1->keyboard_key_pressed]
  keyboard_key_pressed_from___b1:
    jsr keyboard_key_pressed
    // [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0 -- vbuz1=vbuz2 
    lda.z keyboard_key_pressed.return
    sta.z keyboard_key_pressed.return_1
    jmp __b16
    // main::@16
  __b16:
    // [39] (byte~) main::$20 ← (byte) keyboard_key_pressed::return#2 -- vbuz1=vbuz2 
    lda.z keyboard_key_pressed.return_1
    sta.z __20
    // [40] if((byte~) main::$20==(byte) 0) goto main::@1 -- vbuz1_eq_0_then_la1 
    lda.z __20
    cmp #0
    beq __b1_from___b16
    // [41] phi from main::@16 to main::@2 [phi:main::@16->main::@2]
  __b2_from___b16:
    jmp __b2
    // main::@2
  __b2:
    // [42] call print_cls 
    // [65] phi from main::@2 to print_cls [phi:main::@2->print_cls]
  print_cls_from___b2:
    jsr print_cls
    // [43] phi from main::@2 to main::@17 [phi:main::@2->main::@17]
  __b17_from___b2:
    jmp __b17
    // main::@17
  __b17:
    // [44] call print_str 
    // [83] phi from main::@17 to print_str [phi:main::@17->print_str]
  print_str_from___b17:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) 1024 [phi:main::@17->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [83] phi (byte*) print_str::str#20 = (const string) main::str2 [phi:main::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [45] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [46] call print_ln 
    // [90] phi from main::@18 to print_ln [phi:main::@18->print_ln]
  print_ln_from___b18:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#142 [phi:main::@18->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) 1024 [phi:main::@18->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor_1
    lda #>$400
    sta.z print_line_cursor_1+1
    jsr print_ln
    jmp __b19
    // main::@19
  __b19:
    // [47] (byte*) print_line_cursor#156 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [48] (byte*) print_char_cursor#228 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [49] call print_ln 
    // [90] phi from main::@19 to print_ln [phi:main::@19->print_ln]
  print_ln_from___b19:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#228 [phi:main::@19->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#156 [phi:main::@19->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b20
    // main::@20
  __b20:
    // [50] (byte*) printEntry::entry#1 ← (byte*) main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z printEntry.entry
    lda.z entry2+1
    sta.z printEntry.entry+1
    // [51] call printEntry 
    // [96] phi from main::@20 to printEntry [phi:main::@20->printEntry]
  printEntry_from___b20:
    // [96] phi (byte*) printEntry::entry#10 = (byte*) printEntry::entry#1 [phi:main::@20->printEntry#0] -- register_copy 
    jsr printEntry
    jmp __b21
    // main::@21
  __b21:
    // [52] (byte*) print_line_cursor#157 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [53] (byte*) print_char_cursor#229 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [54] call print_ln 
    // [90] phi from main::@21 to print_ln [phi:main::@21->print_ln]
  print_ln_from___b21:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#229 [phi:main::@21->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#157 [phi:main::@21->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b22
    // main::@22
  __b22:
    // [55] (byte*) print_char_cursor#208 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [56] call print_str 
    // [83] phi from main::@22 to print_str [phi:main::@22->print_str]
  print_str_from___b22:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#208 [phi:main::@22->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) main::str1 [phi:main::@22->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [57] phi from main::@22 main::@23 to main::@3 [phi:main::@22/main::@23->main::@3]
  __b3_from___b22:
  __b3_from___b23:
    jmp __b3
    // main::@3
  __b3:
    // [58] call keyboard_key_pressed 
    // [74] phi from main::@3 to keyboard_key_pressed [phi:main::@3->keyboard_key_pressed]
  keyboard_key_pressed_from___b3:
    jsr keyboard_key_pressed
    // [59] (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#0 -- vbuz1=vbuz2 
    lda.z keyboard_key_pressed.return
    sta.z keyboard_key_pressed.return_2
    jmp __b23
    // main::@23
  __b23:
    // [60] (byte~) main::$22 ← (byte) keyboard_key_pressed::return#3 -- vbuz1=vbuz2 
    lda.z keyboard_key_pressed.return_2
    sta.z __22
    // [61] if((byte~) main::$22==(byte) 0) goto main::@3 -- vbuz1_eq_0_then_la1 
    lda.z __22
    cmp #0
    beq __b3_from___b23
    // [62] phi from main::@23 to main::@4 [phi:main::@23->main::@4]
  __b4_from___b23:
    jmp __b4
    // main::@4
  __b4:
    // [63] call print_cls 
    // [65] phi from main::@4 to print_cls [phi:main::@4->print_cls]
  print_cls_from___b4:
    jsr print_cls
    jmp __breturn
    // main::@return
  __breturn:
    // [64] return 
    rts
    str: .text "** entry 1 **"
    .byte 0
    str1: .text "- press space -"
    .byte 0
    str2: .text "** entry 2 **"
    .byte 0
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [66] call memset 
    // [68] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [67] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = $400
    .label end = str+num
    .label dst = 2
    // [69] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [69] phi (byte*) memset::dst#2 = (byte*)(const void*) memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [70] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [71] return 
    rts
    // memset::@2
  __b2:
    // [72] *((byte*) memset::dst#2) ← (const byte) memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [73] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [69] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [69] phi (byte*) memset::dst#2 = (byte*) memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // keyboard_key_pressed
// Determines whether a specific key is currently pressed by accessing the matrix directly
// The key is a keyboard code defined from the keyboard matrix by %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// All keys exist as as KEY_XXX constants.
// Returns zero if the key is not pressed and a non-zero value if the key is currently pressed
keyboard_key_pressed: {
    .const colidx = KEY_SPACE&7
    .label rowidx = KEY_SPACE>>3
    .label __2 = $29
    .label return = $2a
    .label return_1 = $24
    .label return_2 = $26
    // [75] call keyboard_matrix_read 
    jsr keyboard_matrix_read
    // [76] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0 -- vbuz1=vbuz2 
    lda.z keyboard_matrix_read.return
    sta.z keyboard_matrix_read.return_1
    jmp __b1
    // keyboard_key_pressed::@1
  __b1:
    // [77] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2 -- vbuz1=vbuz2 
    lda.z keyboard_matrix_read.return_1
    sta.z __2
    // [78] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[8]) keyboard_matrix_col_bitmask+(const byte) keyboard_key_pressed::colidx#0) -- vbuz1=vbuz2_band__deref_pbuc1 
    lda keyboard_matrix_col_bitmask+colidx
    and.z __2
    sta.z return
    jmp __breturn
    // keyboard_key_pressed::@return
  __breturn:
    // [79] return 
    rts
}
  // keyboard_matrix_read
// Read a single row of the keyboard matrix
// The row ID (0-7) of the keyboard matrix row to read. See the C64 key matrix for row IDs.
// Returns the keys pressed on the row as bits according to the C64 key matrix.
// Notice: If the C64 normal interrupt is still running it will occasionally interrupt right between the read & write
// leading to erroneous readings. You must disable kill the normal interrupt or sei/cli around calls to the keyboard matrix reader.
keyboard_matrix_read: {
    .label return = $2b
    .label return_1 = $28
    // [80] *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask+(const byte) keyboard_key_pressed::rowidx#0) -- _deref_pbuc1=_deref_pbuc2 
    lda keyboard_matrix_row_bitmask+keyboard_key_pressed.rowidx
    sta CIA1_PORT_A
    // [81] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B) -- vbuz1=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    sta.z return
    jmp __breturn
    // keyboard_matrix_read::@return
  __breturn:
    // [82] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zeropage(4) str)
print_str: {
    .label str = 4
    // [84] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  __b1_from_print_str:
  __b1_from___b2:
    // [84] phi (byte*) print_char_cursor#142 = (byte*) print_char_cursor#164 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
    // [84] phi (byte*) print_str::str#18 = (byte*) print_str::str#20 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [85] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [86] return 
    rts
    // print_str::@2
  __b2:
    // [87] *((byte*) print_char_cursor#142) ← *((byte*) print_str::str#18) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (print_char_cursor),y
    // [88] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#142 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // [89] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#18 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b2
}
  // print_ln
// Print a newline
print_ln: {
    // [91] phi from print_ln print_ln::@2 to print_ln::@1 [phi:print_ln/print_ln::@2->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b2:
    // [91] phi (byte*) print_line_cursor#32 = (byte*) print_line_cursor#63 [phi:print_ln/print_ln::@2->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [92] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#32 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor_1
    sta.z print_line_cursor
    lda #0
    adc.z print_line_cursor_1+1
    sta.z print_line_cursor+1
    // [93] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@2 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b2
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b2
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [94] return 
    rts
    // print_ln::@2
  __b2:
    // [95] (byte*) print_line_cursor#172 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    jmp __b1_from___b2
}
  // printEntry
// Print the contents of a file entry
// printEntry(byte* zeropage(8) entry)
printEntry: {
    .label entry = 8
    // [97] (byte*) print_char_cursor#209 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [98] call print_str 
    // [83] phi from printEntry to print_str [phi:printEntry->print_str]
  print_str_from_printEntry:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#209 [phi:printEntry->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str [phi:printEntry->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [99] phi from printEntry to printEntry::entryBufDisk1 [phi:printEntry->printEntry::entryBufDisk1]
  entryBufDisk1_from_printEntry:
    jmp entryBufDisk1
    // printEntry::entryBufDisk1
  entryBufDisk1:
    jmp __b1
    // printEntry::@1
  __b1:
    // [100] (word) print_word::w#7 ← (word)*((byte**)(byte*) printEntry::entry#10) -- vwuz1=_deref_pwuz2 
    ldy #0
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [101] call print_word 
    // [201] phi from printEntry::@1 to print_word [phi:printEntry::@1->print_word]
  print_word_from___b1:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#7 [phi:printEntry::@1->print_word#0] -- register_copy 
    jsr print_word
    jmp __b14
    // printEntry::@14
  __b14:
    // [102] (byte*) print_line_cursor#158 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [103] call print_ln 
    // [90] phi from printEntry::@14 to print_ln [phi:printEntry::@14->print_ln]
  print_ln_from___b14:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@14->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#158 [phi:printEntry::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b15
    // printEntry::@15
  __b15:
    // [104] (byte*) print_char_cursor#210 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [105] call print_str 
    // [83] phi from printEntry::@15 to print_str [phi:printEntry::@15->print_str]
  print_str_from___b15:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#210 [phi:printEntry::@15->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str1 [phi:printEntry::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [106] phi from printEntry::@15 to printEntry::entryBufEdit1 [phi:printEntry::@15->printEntry::entryBufEdit1]
  entryBufEdit1_from___b15:
    jmp entryBufEdit1
    // printEntry::entryBufEdit1
  entryBufEdit1:
    jmp __b2
    // printEntry::@2
  __b2:
    // [107] (word) print_word::w#8 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #2
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [108] call print_word 
    // [201] phi from printEntry::@2 to print_word [phi:printEntry::@2->print_word]
  print_word_from___b2:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#8 [phi:printEntry::@2->print_word#0] -- register_copy 
    jsr print_word
    jmp __b16
    // printEntry::@16
  __b16:
    // [109] (byte*) print_line_cursor#159 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [110] call print_ln 
    // [90] phi from printEntry::@16 to print_ln [phi:printEntry::@16->print_ln]
  print_ln_from___b16:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@16->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#159 [phi:printEntry::@16->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b17
    // printEntry::@17
  __b17:
    // [111] (byte*) print_char_cursor#211 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [112] call print_str 
    // [83] phi from printEntry::@17 to print_str [phi:printEntry::@17->print_str]
  print_str_from___b17:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#211 [phi:printEntry::@17->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str2 [phi:printEntry::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [113] phi from printEntry::@17 to printEntry::entryTsLen1 [phi:printEntry::@17->printEntry::entryTsLen1]
  entryTsLen1_from___b17:
    jmp entryTsLen1
    // printEntry::entryTsLen1
  entryTsLen1:
    jmp __b3
    // printEntry::@3
  __b3:
    // [114] (word) print_word::w#2 ← *((word*)(byte*) printEntry::entry#10 + (byte) 4) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #4
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [115] call print_word 
    // [201] phi from printEntry::@3 to print_word [phi:printEntry::@3->print_word]
  print_word_from___b3:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#2 [phi:printEntry::@3->print_word#0] -- register_copy 
    jsr print_word
    jmp __b18
    // printEntry::@18
  __b18:
    // [116] (byte*) print_line_cursor#160 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [117] call print_ln 
    // [90] phi from printEntry::@18 to print_ln [phi:printEntry::@18->print_ln]
  print_ln_from___b18:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@18->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#160 [phi:printEntry::@18->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b19
    // printEntry::@19
  __b19:
    // [118] (byte*) print_char_cursor#212 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [119] call print_str 
    // [83] phi from printEntry::@19 to print_str [phi:printEntry::@19->print_str]
  print_str_from___b19:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#212 [phi:printEntry::@19->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str3 [phi:printEntry::@19->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // [120] phi from printEntry::@19 to printEntry::entryTsOrder1 [phi:printEntry::@19->printEntry::entryTsOrder1]
  entryTsOrder1_from___b19:
    jmp entryTsOrder1
    // printEntry::entryTsOrder1
  entryTsOrder1:
    jmp __b4
    // printEntry::@4
  __b4:
    // [121] (word) print_word::w#10 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #6
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [122] call print_word 
    // [201] phi from printEntry::@4 to print_word [phi:printEntry::@4->print_word]
  print_word_from___b4:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#10 [phi:printEntry::@4->print_word#0] -- register_copy 
    jsr print_word
    jmp __b20
    // printEntry::@20
  __b20:
    // [123] (byte*) print_line_cursor#161 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [124] call print_ln 
    // [90] phi from printEntry::@20 to print_ln [phi:printEntry::@20->print_ln]
  print_ln_from___b20:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@20->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#161 [phi:printEntry::@20->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b21
    // printEntry::@21
  __b21:
    // [125] (byte*) print_char_cursor#213 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [126] call print_str 
    // [83] phi from printEntry::@21 to print_str [phi:printEntry::@21->print_str]
  print_str_from___b21:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#213 [phi:printEntry::@21->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str4 [phi:printEntry::@21->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // [127] phi from printEntry::@21 to printEntry::entryTLastLink1 [phi:printEntry::@21->printEntry::entryTLastLink1]
  entryTLastLink1_from___b21:
    jmp entryTLastLink1
    // printEntry::entryTLastLink1
  entryTLastLink1:
    jmp __b5
    // printEntry::@5
  __b5:
    // [128] (byte) print_byte::b#2 ← *((byte*) printEntry::entry#10 + (byte) 8) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #8
    lda (entry),y
    sta.z print_byte.b
    // [129] call print_byte 
    // [189] phi from printEntry::@5 to print_byte [phi:printEntry::@5->print_byte]
  print_byte_from___b5:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@5->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#2 [phi:printEntry::@5->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b22
    // printEntry::@22
  __b22:
    // [130] (byte*) print_line_cursor#162 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [131] call print_ln 
    // [90] phi from printEntry::@22 to print_ln [phi:printEntry::@22->print_ln]
  print_ln_from___b22:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@22->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#162 [phi:printEntry::@22->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b23
    // printEntry::@23
  __b23:
    // [132] (byte*) print_char_cursor#214 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [133] call print_str 
    // [83] phi from printEntry::@23 to print_str [phi:printEntry::@23->print_str]
  print_str_from___b23:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#214 [phi:printEntry::@23->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str5 [phi:printEntry::@23->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // [134] phi from printEntry::@23 to printEntry::entrySLastLink1 [phi:printEntry::@23->printEntry::entrySLastLink1]
  entrySLastLink1_from___b23:
    jmp entrySLastLink1
    // printEntry::entrySLastLink1
  entrySLastLink1:
    jmp __b6
    // printEntry::@6
  __b6:
    // [135] (byte) print_byte::b#3 ← *((byte*) printEntry::entry#10 + (byte) 9) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #9
    lda (entry),y
    sta.z print_byte.b
    // [136] call print_byte 
    // [189] phi from printEntry::@6 to print_byte [phi:printEntry::@6->print_byte]
  print_byte_from___b6:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@6->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#3 [phi:printEntry::@6->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b24
    // printEntry::@24
  __b24:
    // [137] (byte*) print_line_cursor#163 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [138] call print_ln 
    // [90] phi from printEntry::@24 to print_ln [phi:printEntry::@24->print_ln]
  print_ln_from___b24:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@24->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#163 [phi:printEntry::@24->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b25
    // printEntry::@25
  __b25:
    // [139] (byte*) print_char_cursor#215 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [140] call print_str 
    // [83] phi from printEntry::@25 to print_str [phi:printEntry::@25->print_str]
  print_str_from___b25:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#215 [phi:printEntry::@25->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str6 [phi:printEntry::@25->print_str#1] -- pbuz1=pbuc1 
    lda #<str6
    sta.z print_str.str
    lda #>str6
    sta.z print_str.str+1
    jsr print_str
    // [141] phi from printEntry::@25 to printEntry::entryBFlag1 [phi:printEntry::@25->printEntry::entryBFlag1]
  entryBFlag1_from___b25:
    jmp entryBFlag1
    // printEntry::entryBFlag1
  entryBFlag1:
    jmp __b7
    // printEntry::@7
  __b7:
    // [142] (byte) print_byte::b#4 ← *((byte*) printEntry::entry#10 + (byte) $a) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #$a
    lda (entry),y
    sta.z print_byte.b
    // [143] call print_byte 
    // [189] phi from printEntry::@7 to print_byte [phi:printEntry::@7->print_byte]
  print_byte_from___b7:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@7->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#4 [phi:printEntry::@7->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b26
    // printEntry::@26
  __b26:
    // [144] (byte*) print_line_cursor#164 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [145] call print_ln 
    // [90] phi from printEntry::@26 to print_ln [phi:printEntry::@26->print_ln]
  print_ln_from___b26:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@26->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#164 [phi:printEntry::@26->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b27
    // printEntry::@27
  __b27:
    // [146] (byte*) print_char_cursor#216 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [147] call print_str 
    // [83] phi from printEntry::@27 to print_str [phi:printEntry::@27->print_str]
  print_str_from___b27:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#216 [phi:printEntry::@27->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str7 [phi:printEntry::@27->print_str#1] -- pbuz1=pbuc1 
    lda #<str7
    sta.z print_str.str
    lda #>str7
    sta.z print_str.str+1
    jsr print_str
    // [148] phi from printEntry::@27 to printEntry::entryBError1 [phi:printEntry::@27->printEntry::entryBError1]
  entryBError1_from___b27:
    jmp entryBError1
    // printEntry::entryBError1
  entryBError1:
    jmp __b8
    // printEntry::@8
  __b8:
    // [149] (byte) print_byte::b#5 ← *((byte*) printEntry::entry#10 + (byte) $b) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #$b
    lda (entry),y
    sta.z print_byte.b
    // [150] call print_byte 
    // [189] phi from printEntry::@8 to print_byte [phi:printEntry::@8->print_byte]
  print_byte_from___b8:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@8->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#5 [phi:printEntry::@8->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b28
    // printEntry::@28
  __b28:
    // [151] (byte*) print_line_cursor#165 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [152] call print_ln 
    // [90] phi from printEntry::@28 to print_ln [phi:printEntry::@28->print_ln]
  print_ln_from___b28:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@28->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#165 [phi:printEntry::@28->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b29
    // printEntry::@29
  __b29:
    // [153] (byte*) print_char_cursor#217 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [154] call print_str 
    // [83] phi from printEntry::@29 to print_str [phi:printEntry::@29->print_str]
  print_str_from___b29:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#217 [phi:printEntry::@29->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str8 [phi:printEntry::@29->print_str#1] -- pbuz1=pbuc1 
    lda #<str8
    sta.z print_str.str
    lda #>str8
    sta.z print_str.str+1
    jsr print_str
    // [155] phi from printEntry::@29 to printEntry::entryUCross1 [phi:printEntry::@29->printEntry::entryUCross1]
  entryUCross1_from___b29:
    jmp entryUCross1
    // printEntry::entryUCross1
  entryUCross1:
    jmp __b9
    // printEntry::@9
  __b9:
    // [156] (word) print_word::w#4 ← *((word*)(byte*) printEntry::entry#10 + (byte) $c) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #$c
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [157] call print_word 
    // [201] phi from printEntry::@9 to print_word [phi:printEntry::@9->print_word]
  print_word_from___b9:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#4 [phi:printEntry::@9->print_word#0] -- register_copy 
    jsr print_word
    jmp __b30
    // printEntry::@30
  __b30:
    // [158] (byte*) print_line_cursor#166 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [159] call print_ln 
    // [90] phi from printEntry::@30 to print_ln [phi:printEntry::@30->print_ln]
  print_ln_from___b30:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@30->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#166 [phi:printEntry::@30->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b31
    // printEntry::@31
  __b31:
    // [160] (byte*) print_char_cursor#218 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [161] call print_str 
    // [83] phi from printEntry::@31 to print_str [phi:printEntry::@31->print_str]
  print_str_from___b31:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#218 [phi:printEntry::@31->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str9 [phi:printEntry::@31->print_str#1] -- pbuz1=pbuc1 
    lda #<str9
    sta.z print_str.str
    lda #>str9
    sta.z print_str.str+1
    jsr print_str
    // [162] phi from printEntry::@31 to printEntry::entryBAddrLo1 [phi:printEntry::@31->printEntry::entryBAddrLo1]
  entryBAddrLo1_from___b31:
    jmp entryBAddrLo1
    // printEntry::entryBAddrLo1
  entryBAddrLo1:
    jmp __b10
    // printEntry::@10
  __b10:
    // [163] (byte) print_byte::b#6 ← *((byte*) printEntry::entry#10 + (byte) $e) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #$e
    lda (entry),y
    sta.z print_byte.b
    // [164] call print_byte 
    // [189] phi from printEntry::@10 to print_byte [phi:printEntry::@10->print_byte]
  print_byte_from___b10:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@10->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#6 [phi:printEntry::@10->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b32
    // printEntry::@32
  __b32:
    // [165] (byte*) print_line_cursor#167 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [166] call print_ln 
    // [90] phi from printEntry::@32 to print_ln [phi:printEntry::@32->print_ln]
  print_ln_from___b32:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@32->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#167 [phi:printEntry::@32->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b33
    // printEntry::@33
  __b33:
    // [167] (byte*) print_char_cursor#219 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [168] call print_str 
    // [83] phi from printEntry::@33 to print_str [phi:printEntry::@33->print_str]
  print_str_from___b33:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#219 [phi:printEntry::@33->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str10 [phi:printEntry::@33->print_str#1] -- pbuz1=pbuc1 
    lda #<str10
    sta.z print_str.str
    lda #>str10
    sta.z print_str.str+1
    jsr print_str
    // [169] phi from printEntry::@33 to printEntry::entryBAddrHi1 [phi:printEntry::@33->printEntry::entryBAddrHi1]
  entryBAddrHi1_from___b33:
    jmp entryBAddrHi1
    // printEntry::entryBAddrHi1
  entryBAddrHi1:
    jmp __b11
    // printEntry::@11
  __b11:
    // [170] (byte) print_byte::b#7 ← *((byte*) printEntry::entry#10 + (byte) $f) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #$f
    lda (entry),y
    sta.z print_byte.b
    // [171] call print_byte 
    // [189] phi from printEntry::@11 to print_byte [phi:printEntry::@11->print_byte]
  print_byte_from___b11:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@11->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#7 [phi:printEntry::@11->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b34
    // printEntry::@34
  __b34:
    // [172] (byte*) print_line_cursor#168 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [173] call print_ln 
    // [90] phi from printEntry::@34 to print_ln [phi:printEntry::@34->print_ln]
  print_ln_from___b34:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@34->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#168 [phi:printEntry::@34->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b35
    // printEntry::@35
  __b35:
    // [174] (byte*) print_char_cursor#220 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [175] call print_str 
    // [83] phi from printEntry::@35 to print_str [phi:printEntry::@35->print_str]
  print_str_from___b35:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#220 [phi:printEntry::@35->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str11 [phi:printEntry::@35->print_str#1] -- pbuz1=pbuc1 
    lda #<str11
    sta.z print_str.str
    lda #>str11
    sta.z print_str.str+1
    jsr print_str
    // [176] phi from printEntry::@35 to printEntry::entryTHi1 [phi:printEntry::@35->printEntry::entryTHi1]
  entryTHi1_from___b35:
    jmp entryTHi1
    // printEntry::entryTHi1
  entryTHi1:
    jmp __b12
    // printEntry::@12
  __b12:
    // [177] (byte) print_byte::b#8 ← *((byte*) printEntry::entry#10 + (byte) $10) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #$10
    lda (entry),y
    sta.z print_byte.b
    // [178] call print_byte 
    // [189] phi from printEntry::@12 to print_byte [phi:printEntry::@12->print_byte]
  print_byte_from___b12:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@12->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#8 [phi:printEntry::@12->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b36
    // printEntry::@36
  __b36:
    // [179] (byte*) print_line_cursor#169 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [180] call print_ln 
    // [90] phi from printEntry::@36 to print_ln [phi:printEntry::@36->print_ln]
  print_ln_from___b36:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@36->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#169 [phi:printEntry::@36->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b37
    // printEntry::@37
  __b37:
    // [181] (byte*) print_char_cursor#221 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [182] call print_str 
    // [83] phi from printEntry::@37 to print_str [phi:printEntry::@37->print_str]
  print_str_from___b37:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#221 [phi:printEntry::@37->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str12 [phi:printEntry::@37->print_str#1] -- pbuz1=pbuc1 
    lda #<str12
    sta.z print_str.str
    lda #>str12
    sta.z print_str.str+1
    jsr print_str
    // [183] phi from printEntry::@37 to printEntry::entryTLo1 [phi:printEntry::@37->printEntry::entryTLo1]
  entryTLo1_from___b37:
    jmp entryTLo1
    // printEntry::entryTLo1
  entryTLo1:
    jmp __b13
    // printEntry::@13
  __b13:
    // [184] (byte) print_byte::b#9 ← *((byte*) printEntry::entry#10 + (byte) $11) -- vbuz1=pbuz2_derefidx_vbuc1 
    ldy #$11
    lda (entry),y
    sta.z print_byte.b
    // [185] call print_byte 
    // [189] phi from printEntry::@13 to print_byte [phi:printEntry::@13->print_byte]
  print_byte_from___b13:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@13->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#9 [phi:printEntry::@13->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b38
    // printEntry::@38
  __b38:
    // [186] (byte*) print_line_cursor#170 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [187] call print_ln 
    // [90] phi from printEntry::@38 to print_ln [phi:printEntry::@38->print_ln]
  print_ln_from___b38:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@38->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#170 [phi:printEntry::@38->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // printEntry::@return
  __breturn:
    // [188] return 
    rts
    str: .text "bufdisk   "
    .byte 0
    str1: .text "bufedit   "
    .byte 0
    str2: .text "tslen     "
    .byte 0
    str3: .text "tsorder   "
    .byte 0
    str4: .text "tlastlink   "
    .byte 0
    str5: .text "slastlink   "
    .byte 0
    str6: .text "bflag       "
    .byte 0
    str7: .text "berror      "
    .byte 0
    str8: .text "ucross    "
    .byte 0
    str9: .text "baddrlo     "
    .byte 0
    str10: .text "baddrhi     "
    .byte 0
    str11: .text "thi         "
    .byte 0
    str12: .text "tlo         "
    .byte 0
}
  // print_byte
// Print a byte as HEX
// print_byte(byte zeropage($a) b)
print_byte: {
    .label __0 = $2e
    .label __2 = $2f
    .label b = $a
    // [190] (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (byte) 4 -- vbuz1=vbuz2_ror_4 
    lda.z b
    lsr
    lsr
    lsr
    lsr
    sta.z __0
    // [191] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __0
    lda print_hextab,y
    sta.z print_char.ch
    // [192] call print_char 
    // [197] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
    // [197] phi (byte*) print_char_cursor#82 = (byte*) print_char_cursor#145 [phi:print_byte->print_char#0] -- register_copy 
    // [197] phi (byte) print_char::ch#2 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_byte::@1
  __b1:
    // [193] (byte~) print_byte::$2 ← (byte) print_byte::b#10 & (byte) $f -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and.z b
    sta.z __2
    // [194] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __2
    lda print_hextab,y
    sta.z print_char.ch
    // [195] call print_char 
    // [197] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from___b1:
    // [197] phi (byte*) print_char_cursor#82 = (byte*) print_char_cursor#11 [phi:print_byte::@1->print_char#0] -- register_copy 
    // [197] phi (byte) print_char::ch#2 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_byte::@return
  __breturn:
    // [196] return 
    rts
}
  // print_char
// Print a single char
// print_char(byte zeropage($b) ch)
print_char: {
    .label ch = $b
    // [198] *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2 -- _deref_pbuz1=vbuz2 
    lda.z ch
    ldy #0
    sta (print_char_cursor),y
    // [199] (byte*) print_char_cursor#11 ← ++ (byte*) print_char_cursor#82 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [200] return 
    rts
}
  // print_word
// Print a word as HEX
// print_word(word zeropage($e) w)
print_word: {
    .label w = $e
    // [202] (byte) print_byte::b#0 ← > (word) print_word::w#5 -- vbuz1=_hi_vwuz2 
    lda.z w+1
    sta.z print_byte.b
    // [203] call print_byte 
    // [189] phi from print_word to print_byte [phi:print_word->print_byte]
  print_byte_from_print_word:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:print_word->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#0 [phi:print_word->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b1
    // print_word::@1
  __b1:
    // [204] (byte) print_byte::b#1 ← < (word) print_word::w#5 -- vbuz1=_lo_vwuz2 
    lda.z w
    sta.z print_byte.b
    // [205] call print_byte 
    // [189] phi from print_word::@1 to print_byte [phi:print_word::@1->print_byte]
  print_byte_from___b1:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#11 [phi:print_word::@1->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#1 [phi:print_word::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __breturn
    // print_word::@return
  __breturn:
    // [206] return 
    rts
}
  // initEntry
// Set all values in the passed struct
// Sets the values to n, n+1, n... to help test that everything works as intended
// initEntry(byte* zeropage($10) entry, byte zeropage($12) n)
initEntry: {
    .label __1 = $30
    .label __3 = $32
    .label __5 = $34
    .label __7 = $36
    .label __9 = $38
    .label __11 = $39
    .label __13 = $3a
    .label __15 = $3b
    .label __17 = $3c
    .label __19 = $3e
    .label __21 = $3f
    .label __23 = $40
    .label __25 = $41
    .label entry = $10
    .label n = $12
    // [208] phi from initEntry to initEntry::entryBufDisk1 [phi:initEntry->initEntry::entryBufDisk1]
  entryBufDisk1_from_initEntry:
    jmp entryBufDisk1
    // initEntry::entryBufDisk1
  entryBufDisk1:
    jmp __b1
    // initEntry::@1
  __b1:
    // [209] (word~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuz2 
    lda.z n
    clc
    adc #<$1111
    sta.z __1
    lda #>$1111
    adc #0
    sta.z __1+1
    // [210] *((byte**)(byte*) initEntry::entry#10) ← (byte*)(word~) initEntry::$1 -- _deref_pptz1=pbuz2 
    ldy #0
    lda.z __1
    sta (entry),y
    iny
    lda.z __1+1
    sta (entry),y
    // [211] phi from initEntry::@1 to initEntry::entryBufEdit1 [phi:initEntry::@1->initEntry::entryBufEdit1]
  entryBufEdit1_from___b1:
    jmp entryBufEdit1
    // initEntry::entryBufEdit1
  entryBufEdit1:
    jmp __b2
    // initEntry::@2
  __b2:
    // [212] (word~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuz2 
    lda.z n
    clc
    adc #<$2222
    sta.z __3
    lda #>$2222
    adc #0
    sta.z __3+1
    // [213] *((byte**)(byte*) initEntry::entry#10 + (byte) 2) ← (byte*)(word~) initEntry::$3 -- pptz1_derefidx_vbuc1=pbuz2 
    ldy #2
    lda.z __3
    sta (entry),y
    iny
    lda.z __3+1
    sta (entry),y
    // [214] phi from initEntry::@2 to initEntry::entryTsLen1 [phi:initEntry::@2->initEntry::entryTsLen1]
  entryTsLen1_from___b2:
    jmp entryTsLen1
    // initEntry::entryTsLen1
  entryTsLen1:
    jmp __b3
    // initEntry::@3
  __b3:
    // [215] (word~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuz2 
    lda.z n
    clc
    adc #<$3333
    sta.z __5
    lda #>$3333
    adc #0
    sta.z __5+1
    // [216] *((word*)(byte*) initEntry::entry#10 + (byte) 4) ← (word~) initEntry::$5 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #4
    lda.z __5
    sta (entry),y
    iny
    lda.z __5+1
    sta (entry),y
    // [217] phi from initEntry::@3 to initEntry::entryTsOrder1 [phi:initEntry::@3->initEntry::entryTsOrder1]
  entryTsOrder1_from___b3:
    jmp entryTsOrder1
    // initEntry::entryTsOrder1
  entryTsOrder1:
    jmp __b4
    // initEntry::@4
  __b4:
    // [218] (word~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuz2 
    lda.z n
    clc
    adc #<$4444
    sta.z __7
    lda #>$4444
    adc #0
    sta.z __7+1
    // [219] *((word**)(byte*) initEntry::entry#10 + (byte) 6) ← (word*)(word~) initEntry::$7 -- pptz1_derefidx_vbuc1=pwuz2 
    ldy #6
    lda.z __7
    sta (entry),y
    iny
    lda.z __7+1
    sta (entry),y
    // [220] phi from initEntry::@4 to initEntry::entryTLastLink1 [phi:initEntry::@4->initEntry::entryTLastLink1]
  entryTLastLink1_from___b4:
    jmp entryTLastLink1
    // initEntry::entryTLastLink1
  entryTLastLink1:
    jmp __b5
    // initEntry::@5
  __b5:
    // [221] (byte~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$55]
    stx.z __9
    // [222] *((byte*) initEntry::entry#10 + (byte) 8) ← (byte~) initEntry::$9 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __9
    ldy #8
    sta (entry),y
    // [223] phi from initEntry::@5 to initEntry::entrySLastLink1 [phi:initEntry::@5->initEntry::entrySLastLink1]
  entrySLastLink1_from___b5:
    jmp entrySLastLink1
    // initEntry::entrySLastLink1
  entrySLastLink1:
    jmp __b6
    // initEntry::@6
  __b6:
    // [224] (byte~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$66]
    stx.z __11
    // [225] *((byte*) initEntry::entry#10 + (byte) 9) ← (byte~) initEntry::$11 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __11
    ldy #9
    sta (entry),y
    // [226] phi from initEntry::@6 to initEntry::entryBFlag1 [phi:initEntry::@6->initEntry::entryBFlag1]
  entryBFlag1_from___b6:
    jmp entryBFlag1
    // initEntry::entryBFlag1
  entryBFlag1:
    jmp __b7
    // initEntry::@7
  __b7:
    // [227] (byte~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$77]
    stx.z __13
    // [228] *((byte*) initEntry::entry#10 + (byte) $a) ← (byte~) initEntry::$13 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __13
    ldy #$a
    sta (entry),y
    // [229] phi from initEntry::@7 to initEntry::entryBError1 [phi:initEntry::@7->initEntry::entryBError1]
  entryBError1_from___b7:
    jmp entryBError1
    // initEntry::entryBError1
  entryBError1:
    jmp __b8
    // initEntry::@8
  __b8:
    // [230] (byte~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$88]
    stx.z __15
    // [231] *((byte*) initEntry::entry#10 + (byte) $b) ← (byte~) initEntry::$15 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __15
    ldy #$b
    sta (entry),y
    // [232] phi from initEntry::@8 to initEntry::entryUCross1 [phi:initEntry::@8->initEntry::entryUCross1]
  entryUCross1_from___b8:
    jmp entryUCross1
    // initEntry::entryUCross1
  entryUCross1:
    jmp __b9
    // initEntry::@9
  __b9:
    // [233] (word~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuz2 
    lda.z n
    clc
    adc #<$9999
    sta.z __17
    lda #>$9999
    adc #0
    sta.z __17+1
    // [234] *((word*)(byte*) initEntry::entry#10 + (byte) $c) ← (word~) initEntry::$17 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #$c
    lda.z __17
    sta (entry),y
    iny
    lda.z __17+1
    sta (entry),y
    // [235] phi from initEntry::@9 to initEntry::entryBAddrLo1 [phi:initEntry::@9->initEntry::entryBAddrLo1]
  entryBAddrLo1_from___b9:
    jmp entryBAddrLo1
    // initEntry::entryBAddrLo1
  entryBAddrLo1:
    jmp __b10
    // initEntry::@10
  __b10:
    // [236] (byte~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$aa]
    stx.z __19
    // [237] *((byte*) initEntry::entry#10 + (byte) $e) ← (byte~) initEntry::$19 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __19
    ldy #$e
    sta (entry),y
    // [238] phi from initEntry::@10 to initEntry::entryBAddrHi1 [phi:initEntry::@10->initEntry::entryBAddrHi1]
  entryBAddrHi1_from___b10:
    jmp entryBAddrHi1
    // initEntry::entryBAddrHi1
  entryBAddrHi1:
    jmp __b11
    // initEntry::@11
  __b11:
    // [239] (byte~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$bb]
    stx.z __21
    // [240] *((byte*) initEntry::entry#10 + (byte) $f) ← (byte~) initEntry::$21 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __21
    ldy #$f
    sta (entry),y
    // [241] phi from initEntry::@11 to initEntry::entryTHi1 [phi:initEntry::@11->initEntry::entryTHi1]
  entryTHi1_from___b11:
    jmp entryTHi1
    // initEntry::entryTHi1
  entryTHi1:
    jmp __b12
    // initEntry::@12
  __b12:
    // [242] (byte~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$cc]
    stx.z __23
    // [243] *((byte*) initEntry::entry#10 + (byte) $10) ← (byte~) initEntry::$23 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __23
    ldy #$10
    sta (entry),y
    // [244] phi from initEntry::@12 to initEntry::entryTLo1 [phi:initEntry::@12->initEntry::entryTLo1]
  entryTLo1_from___b12:
    jmp entryTLo1
    // initEntry::entryTLo1
  entryTLo1:
    jmp __b13
    // initEntry::@13
  __b13:
    // [245] (byte~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z n
    axs #-[$dd]
    stx.z __25
    // [246] *((byte*) initEntry::entry#10 + (byte) $11) ← (byte~) initEntry::$25 -- pbuz1_derefidx_vbuc1=vbuz2 
    lda.z __25
    ldy #$11
    sta (entry),y
    jmp __breturn
    // initEntry::@return
  __breturn:
    // [247] return 
    rts
}
  // mul8u
// Perform binary multiplication of two unsigned 8-bit bytes into a 16-bit unsigned word
// mul8u(byte zeropage($13) a)
mul8u: {
    .label __1 = $42
    .label a = $13
    .label mb = $16
    .label res = $14
    .label return = $18
    .label return_1 = $1e
    // [249] phi from mul8u to mul8u::@1 [phi:mul8u->mul8u::@1]
  __b1_from_mul8u:
    // [249] phi (word) mul8u::mb#2 = (const byte) SIZEOF_ENTRY [phi:mul8u->mul8u::@1#0] -- vwuz1=vbuc1 
    lda #<SIZEOF_ENTRY
    sta.z mb
    lda #>SIZEOF_ENTRY
    sta.z mb+1
    // [249] phi (word) mul8u::res#2 = (byte) 0 [phi:mul8u->mul8u::@1#1] -- vwuz1=vbuc1 
    lda #<0
    sta.z res
    lda #>0
    sta.z res+1
    // [249] phi (byte) mul8u::a#3 = (byte) mul8u::a#6 [phi:mul8u->mul8u::@1#2] -- register_copy 
    jmp __b1
    // mul8u::@1
  __b1:
    // [250] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2 -- vbuz1_neq_0_then_la1 
    lda.z a
    cmp #0
    bne __b2
    jmp __breturn
    // mul8u::@return
  __breturn:
    // [251] return 
    rts
    // mul8u::@2
  __b2:
    // [252] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1 -- vbuz1=vbuz2_band_vbuc1 
    lda #1
    and.z a
    sta.z __1
    // [253] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3 -- vbuz1_eq_0_then_la1 
    lda.z __1
    cmp #0
    beq __b3_from___b2
    jmp __b4
    // mul8u::@4
  __b4:
    // [254] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    // [255] phi from mul8u::@2 mul8u::@4 to mul8u::@3 [phi:mul8u::@2/mul8u::@4->mul8u::@3]
  __b3_from___b2:
  __b3_from___b4:
    // [255] phi (word) mul8u::res#6 = (word) mul8u::res#2 [phi:mul8u::@2/mul8u::@4->mul8u::@3#0] -- register_copy 
    jmp __b3
    // mul8u::@3
  __b3:
    // [256] (byte) mul8u::a#0 ← (byte) mul8u::a#3 >> (byte) 1 -- vbuz1=vbuz1_ror_1 
    lsr.z a
    // [257] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1 -- vwuz1=vwuz1_rol_1 
    asl.z mb
    rol.z mb+1
    // [249] phi from mul8u::@3 to mul8u::@1 [phi:mul8u::@3->mul8u::@1]
  __b1_from___b3:
    // [249] phi (word) mul8u::mb#2 = (word) mul8u::mb#1 [phi:mul8u::@3->mul8u::@1#0] -- register_copy 
    // [249] phi (word) mul8u::res#2 = (word) mul8u::res#6 [phi:mul8u::@3->mul8u::@1#1] -- register_copy 
    // [249] phi (byte) mul8u::a#3 = (byte) mul8u::a#0 [phi:mul8u::@3->mul8u::@1#2] -- register_copy 
    jmp __b1
}
  // keyboard_init
// Initialize keyboard reading by setting CIA#$ Data Direction Registers
keyboard_init: {
    // [258] *((const byte*) CIA1_PORT_A_DDR) ← (byte) $ff -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Write Mode
    lda #$ff
    sta CIA1_PORT_A_DDR
    // [259] *((const byte*) CIA1_PORT_B_DDR) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Read Mode
    lda #0
    sta CIA1_PORT_B_DDR
    jmp __breturn
    // keyboard_init::@return
  __breturn:
    // [260] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // Keyboard row bitmask as expected by CIA#1 Port A when reading a specific keyboard matrix row (rows are numbered 0-7)
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  // Keyboard matrix column bitmasks for a specific keybooard matrix column when reading the keyboard. (columns are numbered 0-7)
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  // All files
  files: .fill MAX_FILES*SIZEOF_ENTRY, 0

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [8] (word) mul8u::return#2 ← (word) mul8u::res#2 [ mul8u::return#2 ] ( main:2 [ mul8u::return#2 ] ) always clobbers reg byte a 
Statement [9] (word~) main::fileEntry1_$0 ← (word) mul8u::return#2 [ main::fileEntry1_$0 ] ( main:2 [ main::fileEntry1_$0 ] ) always clobbers reg byte a 
Statement [10] (byte*) main::entry1#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0 [ main::entry1#0 ] ( main:2 [ main::entry1#0 ] ) always clobbers reg byte a 
Statement [13] (word) mul8u::return#3 ← (word) mul8u::res#2 [ main::entry1#0 mul8u::return#3 ] ( main:2 [ main::entry1#0 mul8u::return#3 ] ) always clobbers reg byte a 
Statement [14] (word~) main::fileEntry2_$0 ← (word) mul8u::return#3 [ main::entry1#0 main::fileEntry2_$0 ] ( main:2 [ main::entry1#0 main::fileEntry2_$0 ] ) always clobbers reg byte a 
Statement [15] (byte*) main::entry2#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0 [ main::entry1#0 main::entry2#0 ] ( main:2 [ main::entry1#0 main::entry2#0 ] ) always clobbers reg byte a 
Statement [16] (byte*) initEntry::entry#0 ← (byte*) main::entry1#0 [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] ( main:2 [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] ) always clobbers reg byte a 
Statement [18] (byte*) initEntry::entry#1 ← (byte*) main::entry2#0 [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] ( main:2 [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] ) always clobbers reg byte a 
Statement [26] (byte*) print_line_cursor#154 ← (byte*) print_line_cursor#1 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_line_cursor#1 ] ( main:2 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [27] (byte*) print_char_cursor#225 ← (byte*) print_line_cursor#1 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_char_cursor#225 ] ( main:2 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_char_cursor#225 ] ) always clobbers reg byte a 
Statement [29] (byte*) printEntry::entry#0 ← (byte*) main::entry1#0 [ main::entry2#0 print_line_cursor#1 printEntry::entry#0 ] ( main:2 [ main::entry2#0 print_line_cursor#1 printEntry::entry#0 ] ) always clobbers reg byte a 
Statement [31] (byte*) print_line_cursor#155 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#1 print_line_cursor#155 ] ( main:2 [ main::entry2#0 print_line_cursor#1 print_line_cursor#155 ] ) always clobbers reg byte a 
Statement [32] (byte*) print_char_cursor#226 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#155 print_char_cursor#226 ] ( main:2 [ main::entry2#0 print_line_cursor#155 print_char_cursor#226 ] ) always clobbers reg byte a 
Statement [34] (byte*) print_char_cursor#207 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_char_cursor#207 ] ( main:2 [ main::entry2#0 print_char_cursor#207 ] ) always clobbers reg byte a 
Statement [47] (byte*) print_line_cursor#156 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#1 print_line_cursor#156 ] ( main:2 [ main::entry2#0 print_line_cursor#1 print_line_cursor#156 ] ) always clobbers reg byte a 
Statement [48] (byte*) print_char_cursor#228 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] ( main:2 [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] ) always clobbers reg byte a 
Statement [50] (byte*) printEntry::entry#1 ← (byte*) main::entry2#0 [ print_line_cursor#1 printEntry::entry#1 ] ( main:2 [ print_line_cursor#1 printEntry::entry#1 ] ) always clobbers reg byte a 
Statement [52] (byte*) print_line_cursor#157 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_line_cursor#157 ] ( main:2 [ print_line_cursor#1 print_line_cursor#157 ] ) always clobbers reg byte a 
Statement [53] (byte*) print_char_cursor#229 ← (byte*) print_line_cursor#1 [ print_line_cursor#157 print_char_cursor#229 ] ( main:2 [ print_line_cursor#157 print_char_cursor#229 ] ) always clobbers reg byte a 
Statement [55] (byte*) print_char_cursor#208 ← (byte*) print_line_cursor#1 [ print_char_cursor#208 ] ( main:2 [ print_char_cursor#208 ] ) always clobbers reg byte a 
Statement [70] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 [ memset::dst#2 ] ( main:2::print_cls:21::memset:66 [ main::entry1#0 main::entry2#0 memset::dst#2 ] main:2::print_cls:42::memset:66 [ main::entry2#0 memset::dst#2 ] main:2::print_cls:63::memset:66 [ memset::dst#2 ] ) always clobbers reg byte a 
Statement [72] *((byte*) memset::dst#2) ← (const byte) memset::c#0 [ memset::dst#2 ] ( main:2::print_cls:21::memset:66 [ main::entry1#0 main::entry2#0 memset::dst#2 ] main:2::print_cls:42::memset:66 [ main::entry2#0 memset::dst#2 ] main:2::print_cls:63::memset:66 [ memset::dst#2 ] ) always clobbers reg byte a reg byte y 
Statement [80] *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask+(const byte) keyboard_key_pressed::rowidx#0) [ ] ( main:2::keyboard_key_pressed:37::keyboard_matrix_read:75 [ main::entry2#0 ] main:2::keyboard_key_pressed:58::keyboard_matrix_read:75 [ ] ) always clobbers reg byte a 
Statement [81] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B) [ keyboard_matrix_read::return#0 ] ( main:2::keyboard_key_pressed:37::keyboard_matrix_read:75 [ main::entry2#0 keyboard_matrix_read::return#0 ] main:2::keyboard_key_pressed:58::keyboard_matrix_read:75 [ keyboard_matrix_read::return#0 ] ) always clobbers reg byte a 
Statement [85] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2 [ print_str::str#18 print_char_cursor#142 ] ( main:2::print_str:23 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:35 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:44 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:56 [ print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:98 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:98 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:105 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:105 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:112 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:112 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:119 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:119 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:126 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:126 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:133 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:133 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:140 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:140 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:147 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:147 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:154 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:154 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:161 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:161 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:168 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:168 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:175 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:175 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:182 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:182 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] ) always clobbers reg byte a reg byte y 
Statement [87] *((byte*) print_char_cursor#142) ← *((byte*) print_str::str#18) [ print_str::str#18 print_char_cursor#142 ] ( main:2::print_str:23 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:35 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:44 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:56 [ print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:98 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:98 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:105 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:105 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:112 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:112 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:119 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:119 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:126 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:126 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:133 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:133 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:140 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:140 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:147 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:147 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:154 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:154 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:161 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:161 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:168 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:168 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:175 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:175 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:182 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:182 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] ) always clobbers reg byte a reg byte y 
Statement [92] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#32 + (byte) $28 [ print_line_cursor#1 print_char_cursor#143 ] ( main:2::print_ln:25 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:28 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:33 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:46 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:49 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:54 [ print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:103 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:103 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:110 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:110 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:117 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:117 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:124 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:124 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:131 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:131 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:138 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:145 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:152 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:159 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:166 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:173 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:180 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:187 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:187 [ print_line_cursor#1 print_char_cursor#143 ] ) always clobbers reg byte a 
Statement [93] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@2 [ print_line_cursor#1 print_char_cursor#143 ] ( main:2::print_ln:25 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:28 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:33 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:46 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:49 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:54 [ print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:103 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:103 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:110 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:110 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:117 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:117 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:124 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:124 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:131 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:131 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:138 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:145 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:152 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:159 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:166 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:173 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:180 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:187 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:187 [ print_line_cursor#1 print_char_cursor#143 ] ) always clobbers reg byte a 
Statement [95] (byte*) print_line_cursor#172 ← (byte*) print_line_cursor#1 [ print_char_cursor#143 print_line_cursor#172 ] ( main:2::print_ln:25 [ main::entry1#0 main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:28 [ main::entry1#0 main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:33 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:46 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:49 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:54 [ print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:103 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:103 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:110 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:110 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:117 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:117 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:124 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:124 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:131 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:131 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:138 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:145 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:152 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:159 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:166 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:173 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:180 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:187 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:187 [ print_char_cursor#143 print_line_cursor#172 ] ) always clobbers reg byte a 
Statement [97] (byte*) print_char_cursor#209 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#209 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#209 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#209 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [100] (word) print_word::w#7 ← (word)*((byte**)(byte*) printEntry::entry#10) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#7 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#7 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#7 ] ) always clobbers reg byte a reg byte y 
Statement [102] (byte*) print_line_cursor#158 ← (byte*) print_line_cursor#1 [ print_line_cursor#158 print_char_cursor#11 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#158 print_char_cursor#11 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#158 print_char_cursor#11 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [104] (byte*) print_char_cursor#210 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#210 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#210 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#210 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [107] (word) print_word::w#8 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#8 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#8 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#8 ] ) always clobbers reg byte a reg byte y 
Statement [109] (byte*) print_line_cursor#159 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#159 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#159 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#159 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [111] (byte*) print_char_cursor#211 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#211 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#211 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#211 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [114] (word) print_word::w#2 ← *((word*)(byte*) printEntry::entry#10 + (byte) 4) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#2 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#2 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#2 ] ) always clobbers reg byte a reg byte y 
Statement [116] (byte*) print_line_cursor#160 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#160 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#160 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#160 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [118] (byte*) print_char_cursor#212 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#212 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#212 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#212 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [121] (word) print_word::w#10 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#10 ] ) always clobbers reg byte a reg byte y 
Statement [123] (byte*) print_line_cursor#161 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#161 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#161 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#161 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [125] (byte*) print_char_cursor#213 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#213 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#213 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#213 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [128] (byte) print_byte::b#2 ← *((byte*) printEntry::entry#10 + (byte) 8) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#2 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#2 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#2 ] ) always clobbers reg byte a reg byte y 
Statement [130] (byte*) print_line_cursor#162 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#162 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#162 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#162 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [132] (byte*) print_char_cursor#214 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#214 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#214 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#214 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [135] (byte) print_byte::b#3 ← *((byte*) printEntry::entry#10 + (byte) 9) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#3 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#3 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#3 ] ) always clobbers reg byte a reg byte y 
Statement [137] (byte*) print_line_cursor#163 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#163 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#163 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#163 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [139] (byte*) print_char_cursor#215 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#215 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#215 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#215 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [142] (byte) print_byte::b#4 ← *((byte*) printEntry::entry#10 + (byte) $a) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#4 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#4 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#4 ] ) always clobbers reg byte a reg byte y 
Statement [144] (byte*) print_line_cursor#164 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#164 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#164 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#164 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [146] (byte*) print_char_cursor#216 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#216 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#216 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#216 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [149] (byte) print_byte::b#5 ← *((byte*) printEntry::entry#10 + (byte) $b) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#5 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#5 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#5 ] ) always clobbers reg byte a reg byte y 
Statement [151] (byte*) print_line_cursor#165 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#165 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#165 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#165 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [153] (byte*) print_char_cursor#217 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#217 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#217 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#217 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [156] (word) print_word::w#4 ← *((word*)(byte*) printEntry::entry#10 + (byte) $c) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#4 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#4 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#4 ] ) always clobbers reg byte a reg byte y 
Statement [158] (byte*) print_line_cursor#166 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#166 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#166 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#166 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [160] (byte*) print_char_cursor#218 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#218 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#218 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#218 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [163] (byte) print_byte::b#6 ← *((byte*) printEntry::entry#10 + (byte) $e) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#6 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#6 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#6 ] ) always clobbers reg byte a reg byte y 
Statement [165] (byte*) print_line_cursor#167 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#167 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#167 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#167 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [167] (byte*) print_char_cursor#219 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#219 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#219 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#219 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [170] (byte) print_byte::b#7 ← *((byte*) printEntry::entry#10 + (byte) $f) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#7 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#7 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#7 ] ) always clobbers reg byte a reg byte y 
Statement [172] (byte*) print_line_cursor#168 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#168 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#168 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#168 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [174] (byte*) print_char_cursor#220 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#220 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#220 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#220 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [177] (byte) print_byte::b#8 ← *((byte*) printEntry::entry#10 + (byte) $10) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#8 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#8 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#8 ] ) always clobbers reg byte a reg byte y 
Statement [179] (byte*) print_line_cursor#169 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#169 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#169 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#169 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [181] (byte*) print_char_cursor#221 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#221 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#221 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#221 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [184] (byte) print_byte::b#9 ← *((byte*) printEntry::entry#10 + (byte) $11) [ print_line_cursor#1 print_char_cursor#142 print_byte::b#9 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 print_byte::b#9 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 print_byte::b#9 ] ) always clobbers reg byte a reg byte y 
Statement [186] (byte*) print_line_cursor#170 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#170 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#170 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#170 ] ) always clobbers reg byte a 
Statement [190] (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (byte) 4 [ print_byte::b#10 print_char_cursor#145 print_byte::$0 ] ( main:2::printEntry:30::print_byte:129 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:129 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:136 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:136 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:143 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:143 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:150 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:150 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:164 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:164 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:171 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:171 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:178 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:178 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:185 [ main::entry2#0 print_line_cursor#1 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:185 [ print_line_cursor#1 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:101::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:101::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:108::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:108::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:115::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:115::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:122::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:122::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:157::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:157::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:101::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:101::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:108::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:108::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:115::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:115::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:122::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:122::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:157::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:157::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:10 [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ]
Statement [193] (byte~) print_byte::$2 ← (byte) print_byte::b#10 & (byte) $f [ print_char_cursor#11 print_byte::$2 ] ( main:2::printEntry:30::print_byte:129 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:129 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:136 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:136 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:143 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:143 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:150 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:150 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:164 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:164 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:171 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:171 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:178 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:178 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:185 [ main::entry2#0 print_line_cursor#1 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:185 [ print_line_cursor#1 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:101::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:101::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:108::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:108::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:115::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:115::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:122::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:122::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:157::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:157::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:101::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:101::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:108::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:108::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:115::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:115::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:122::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:122::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:157::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:157::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] ) always clobbers reg byte a 
Statement [198] *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2 [ print_char_cursor#82 ] ( main:2::printEntry:30::print_byte:129::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:129::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:136::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:136::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:143::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:143::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:150::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:150::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:164::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:164::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:171::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:171::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:178::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:178::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:185::print_char:192 [ main::entry2#0 print_line_cursor#1 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:185::print_char:192 [ print_line_cursor#1 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:129::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:129::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:136::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:136::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:143::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:143::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:150::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:150::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:164::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:164::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:171::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:171::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:178::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:178::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:185::print_char:195 [ main::entry2#0 print_line_cursor#1 print_char_cursor#82 ] main:2::printEntry:51::print_byte:185::print_char:195 [ print_line_cursor#1 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:10 [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ]
Statement [202] (byte) print_byte::b#0 ← > (word) print_word::w#5 [ print_char_cursor#142 print_byte::b#0 print_word::w#5 ] ( main:2::printEntry:30::print_word:101 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:101 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:108 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:108 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:115 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:115 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:122 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:122 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:157 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:157 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] ) always clobbers reg byte a 
Statement [204] (byte) print_byte::b#1 ← < (word) print_word::w#5 [ print_char_cursor#11 print_byte::b#1 ] ( main:2::printEntry:30::print_word:101 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:101 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:108 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:108 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:115 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:115 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:122 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:122 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:157 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:157 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] ) always clobbers reg byte a 
Statement [209] (word~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$1 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:18 [ initEntry::n#10 ]
Statement [210] *((byte**)(byte*) initEntry::entry#10) ← (byte*)(word~) initEntry::$1 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:18 [ initEntry::n#10 ]
Statement [212] (word~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$3 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] ) always clobbers reg byte a 
Statement [213] *((byte**)(byte*) initEntry::entry#10 + (byte) 2) ← (byte*)(word~) initEntry::$3 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [215] (word~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$5 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] ) always clobbers reg byte a 
Statement [216] *((word*)(byte*) initEntry::entry#10 + (byte) 4) ← (word~) initEntry::$5 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [218] (word~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$7 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] ) always clobbers reg byte a 
Statement [219] *((word**)(byte*) initEntry::entry#10 + (byte) 6) ← (word*)(word~) initEntry::$7 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [221] (byte~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$9 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] ) always clobbers reg byte a 
Statement [222] *((byte*) initEntry::entry#10 + (byte) 8) ← (byte~) initEntry::$9 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [224] (byte~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$11 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] ) always clobbers reg byte a 
Statement [225] *((byte*) initEntry::entry#10 + (byte) 9) ← (byte~) initEntry::$11 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [227] (byte~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$13 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] ) always clobbers reg byte a 
Statement [228] *((byte*) initEntry::entry#10 + (byte) $a) ← (byte~) initEntry::$13 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [230] (byte~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$15 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] ) always clobbers reg byte a 
Statement [231] *((byte*) initEntry::entry#10 + (byte) $b) ← (byte~) initEntry::$15 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [233] (word~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$17 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] ) always clobbers reg byte a 
Statement [234] *((word*)(byte*) initEntry::entry#10 + (byte) $c) ← (word~) initEntry::$17 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [236] (byte~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$19 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] ) always clobbers reg byte a 
Statement [237] *((byte*) initEntry::entry#10 + (byte) $e) ← (byte~) initEntry::$19 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [239] (byte~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$21 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] ) always clobbers reg byte a 
Statement [240] *((byte*) initEntry::entry#10 + (byte) $f) ← (byte~) initEntry::$21 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [242] (byte~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$23 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] ) always clobbers reg byte a 
Statement [243] *((byte*) initEntry::entry#10 + (byte) $10) ← (byte~) initEntry::$23 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [245] (byte~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::$25 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] ) always clobbers reg byte a 
Statement [246] *((byte*) initEntry::entry#10 + (byte) $11) ← (byte~) initEntry::$25 [ ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 ] ) always clobbers reg byte y 
Statement [254] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] ( main:2::mul8u:7 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] main:2::mul8u:12 [ main::entry1#0 mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:19 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
Statement [258] *((const byte*) CIA1_PORT_A_DDR) ← (byte) $ff [ ] ( main:2::keyboard_init:5 [ ] ) always clobbers reg byte a 
Statement [259] *((const byte*) CIA1_PORT_B_DDR) ← (byte) 0 [ ] ( main:2::keyboard_init:5 [ ] ) always clobbers reg byte a 
Statement [8] (word) mul8u::return#2 ← (word) mul8u::res#2 [ mul8u::return#2 ] ( main:2 [ mul8u::return#2 ] ) always clobbers reg byte a 
Statement [9] (word~) main::fileEntry1_$0 ← (word) mul8u::return#2 [ main::fileEntry1_$0 ] ( main:2 [ main::fileEntry1_$0 ] ) always clobbers reg byte a 
Statement [10] (byte*) main::entry1#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0 [ main::entry1#0 ] ( main:2 [ main::entry1#0 ] ) always clobbers reg byte a 
Statement [13] (word) mul8u::return#3 ← (word) mul8u::res#2 [ main::entry1#0 mul8u::return#3 ] ( main:2 [ main::entry1#0 mul8u::return#3 ] ) always clobbers reg byte a 
Statement [14] (word~) main::fileEntry2_$0 ← (word) mul8u::return#3 [ main::entry1#0 main::fileEntry2_$0 ] ( main:2 [ main::entry1#0 main::fileEntry2_$0 ] ) always clobbers reg byte a 
Statement [15] (byte*) main::entry2#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0 [ main::entry1#0 main::entry2#0 ] ( main:2 [ main::entry1#0 main::entry2#0 ] ) always clobbers reg byte a 
Statement [16] (byte*) initEntry::entry#0 ← (byte*) main::entry1#0 [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] ( main:2 [ main::entry1#0 main::entry2#0 initEntry::entry#0 ] ) always clobbers reg byte a 
Statement [18] (byte*) initEntry::entry#1 ← (byte*) main::entry2#0 [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] ( main:2 [ main::entry1#0 main::entry2#0 initEntry::entry#1 ] ) always clobbers reg byte a 
Statement [26] (byte*) print_line_cursor#154 ← (byte*) print_line_cursor#1 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_line_cursor#1 ] ( main:2 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [27] (byte*) print_char_cursor#225 ← (byte*) print_line_cursor#1 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_char_cursor#225 ] ( main:2 [ main::entry1#0 main::entry2#0 print_line_cursor#154 print_char_cursor#225 ] ) always clobbers reg byte a 
Statement [29] (byte*) printEntry::entry#0 ← (byte*) main::entry1#0 [ main::entry2#0 print_line_cursor#1 printEntry::entry#0 ] ( main:2 [ main::entry2#0 print_line_cursor#1 printEntry::entry#0 ] ) always clobbers reg byte a 
Statement [31] (byte*) print_line_cursor#155 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#1 print_line_cursor#155 ] ( main:2 [ main::entry2#0 print_line_cursor#1 print_line_cursor#155 ] ) always clobbers reg byte a 
Statement [32] (byte*) print_char_cursor#226 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#155 print_char_cursor#226 ] ( main:2 [ main::entry2#0 print_line_cursor#155 print_char_cursor#226 ] ) always clobbers reg byte a 
Statement [34] (byte*) print_char_cursor#207 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_char_cursor#207 ] ( main:2 [ main::entry2#0 print_char_cursor#207 ] ) always clobbers reg byte a 
Statement [47] (byte*) print_line_cursor#156 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#1 print_line_cursor#156 ] ( main:2 [ main::entry2#0 print_line_cursor#1 print_line_cursor#156 ] ) always clobbers reg byte a 
Statement [48] (byte*) print_char_cursor#228 ← (byte*) print_line_cursor#1 [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] ( main:2 [ main::entry2#0 print_line_cursor#156 print_char_cursor#228 ] ) always clobbers reg byte a 
Statement [50] (byte*) printEntry::entry#1 ← (byte*) main::entry2#0 [ print_line_cursor#1 printEntry::entry#1 ] ( main:2 [ print_line_cursor#1 printEntry::entry#1 ] ) always clobbers reg byte a 
Statement [52] (byte*) print_line_cursor#157 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_line_cursor#157 ] ( main:2 [ print_line_cursor#1 print_line_cursor#157 ] ) always clobbers reg byte a 
Statement [53] (byte*) print_char_cursor#229 ← (byte*) print_line_cursor#1 [ print_line_cursor#157 print_char_cursor#229 ] ( main:2 [ print_line_cursor#157 print_char_cursor#229 ] ) always clobbers reg byte a 
Statement [55] (byte*) print_char_cursor#208 ← (byte*) print_line_cursor#1 [ print_char_cursor#208 ] ( main:2 [ print_char_cursor#208 ] ) always clobbers reg byte a 
Statement [70] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 [ memset::dst#2 ] ( main:2::print_cls:21::memset:66 [ main::entry1#0 main::entry2#0 memset::dst#2 ] main:2::print_cls:42::memset:66 [ main::entry2#0 memset::dst#2 ] main:2::print_cls:63::memset:66 [ memset::dst#2 ] ) always clobbers reg byte a 
Statement [72] *((byte*) memset::dst#2) ← (const byte) memset::c#0 [ memset::dst#2 ] ( main:2::print_cls:21::memset:66 [ main::entry1#0 main::entry2#0 memset::dst#2 ] main:2::print_cls:42::memset:66 [ main::entry2#0 memset::dst#2 ] main:2::print_cls:63::memset:66 [ memset::dst#2 ] ) always clobbers reg byte a reg byte y 
Statement [80] *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask+(const byte) keyboard_key_pressed::rowidx#0) [ ] ( main:2::keyboard_key_pressed:37::keyboard_matrix_read:75 [ main::entry2#0 ] main:2::keyboard_key_pressed:58::keyboard_matrix_read:75 [ ] ) always clobbers reg byte a 
Statement [81] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B) [ keyboard_matrix_read::return#0 ] ( main:2::keyboard_key_pressed:37::keyboard_matrix_read:75 [ main::entry2#0 keyboard_matrix_read::return#0 ] main:2::keyboard_key_pressed:58::keyboard_matrix_read:75 [ keyboard_matrix_read::return#0 ] ) always clobbers reg byte a 
Statement [85] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2 [ print_str::str#18 print_char_cursor#142 ] ( main:2::print_str:23 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:35 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:44 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:56 [ print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:98 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:98 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:105 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:105 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:112 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:112 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:119 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:119 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:126 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:126 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:133 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:133 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:140 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:140 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:147 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:147 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:154 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:154 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:161 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:161 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:168 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:168 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:175 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:175 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:182 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:182 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] ) always clobbers reg byte a reg byte y 
Statement [87] *((byte*) print_char_cursor#142) ← *((byte*) print_str::str#18) [ print_str::str#18 print_char_cursor#142 ] ( main:2::print_str:23 [ main::entry1#0 main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:35 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:44 [ main::entry2#0 print_str::str#18 print_char_cursor#142 ] main:2::print_str:56 [ print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:98 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:98 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:105 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:105 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:112 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:112 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:119 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:119 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:126 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:126 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:133 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:133 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:140 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:140 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:147 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:147 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:154 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:154 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:161 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:161 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:168 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:168 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:175 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:175 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:30::print_str:182 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] main:2::printEntry:51::print_str:182 [ print_line_cursor#1 printEntry::entry#10 print_str::str#18 print_char_cursor#142 ] ) always clobbers reg byte a reg byte y 
Statement [92] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#32 + (byte) $28 [ print_line_cursor#1 print_char_cursor#143 ] ( main:2::print_ln:25 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:28 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:33 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:46 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:49 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:54 [ print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:103 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:103 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:110 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:110 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:117 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:117 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:124 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:124 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:131 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:131 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:138 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:145 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:152 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:159 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:166 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:173 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:180 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:187 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:187 [ print_line_cursor#1 print_char_cursor#143 ] ) always clobbers reg byte a 
Statement [93] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@2 [ print_line_cursor#1 print_char_cursor#143 ] ( main:2::print_ln:25 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:28 [ main::entry1#0 main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:33 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:46 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:49 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::print_ln:54 [ print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:103 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:103 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:110 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:110 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:117 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:117 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:124 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:124 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:131 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:131 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:138 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:145 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:152 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:159 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:166 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:173 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:180 [ printEntry::entry#10 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:30::print_ln:187 [ main::entry2#0 print_line_cursor#1 print_char_cursor#143 ] main:2::printEntry:51::print_ln:187 [ print_line_cursor#1 print_char_cursor#143 ] ) always clobbers reg byte a 
Statement [95] (byte*) print_line_cursor#172 ← (byte*) print_line_cursor#1 [ print_char_cursor#143 print_line_cursor#172 ] ( main:2::print_ln:25 [ main::entry1#0 main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:28 [ main::entry1#0 main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:33 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:46 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:49 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::print_ln:54 [ print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:103 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:103 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:110 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:110 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:117 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:117 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:124 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:124 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:131 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:131 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:138 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:138 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:145 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:145 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:152 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:152 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:159 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:159 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:166 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:166 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:173 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:173 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:180 [ main::entry2#0 printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:180 [ printEntry::entry#10 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:30::print_ln:187 [ main::entry2#0 print_char_cursor#143 print_line_cursor#172 ] main:2::printEntry:51::print_ln:187 [ print_char_cursor#143 print_line_cursor#172 ] ) always clobbers reg byte a 
Statement [97] (byte*) print_char_cursor#209 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#209 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#209 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#209 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [100] (word) print_word::w#7 ← (word)*((byte**)(byte*) printEntry::entry#10) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#7 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#7 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#7 ] ) always clobbers reg byte a reg byte y 
Statement [102] (byte*) print_line_cursor#158 ← (byte*) print_line_cursor#1 [ print_line_cursor#158 print_char_cursor#11 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#158 print_char_cursor#11 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#158 print_char_cursor#11 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [104] (byte*) print_char_cursor#210 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#210 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#210 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#210 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [107] (word) print_word::w#8 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#8 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#8 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#8 ] ) always clobbers reg byte a reg byte y 
Statement [109] (byte*) print_line_cursor#159 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#159 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#159 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#159 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [111] (byte*) print_char_cursor#211 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#211 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#211 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#211 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [114] (word) print_word::w#2 ← *((word*)(byte*) printEntry::entry#10 + (byte) 4) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#2 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#2 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#2 ] ) always clobbers reg byte a reg byte y 
Statement [116] (byte*) print_line_cursor#160 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#160 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#160 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#160 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [118] (byte*) print_char_cursor#212 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#212 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#212 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#212 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [121] (word) print_word::w#10 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#10 ] ) always clobbers reg byte a reg byte y 
Statement [123] (byte*) print_line_cursor#161 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#161 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#161 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#161 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [125] (byte*) print_char_cursor#213 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#213 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#213 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#213 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [128] (byte) print_byte::b#2 ← *((byte*) printEntry::entry#10 + (byte) 8) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#2 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#2 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#2 ] ) always clobbers reg byte a reg byte y 
Statement [130] (byte*) print_line_cursor#162 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#162 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#162 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#162 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [132] (byte*) print_char_cursor#214 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#214 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#214 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#214 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [135] (byte) print_byte::b#3 ← *((byte*) printEntry::entry#10 + (byte) 9) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#3 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#3 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#3 ] ) always clobbers reg byte a reg byte y 
Statement [137] (byte*) print_line_cursor#163 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#163 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#163 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#163 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [139] (byte*) print_char_cursor#215 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#215 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#215 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#215 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [142] (byte) print_byte::b#4 ← *((byte*) printEntry::entry#10 + (byte) $a) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#4 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#4 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#4 ] ) always clobbers reg byte a reg byte y 
Statement [144] (byte*) print_line_cursor#164 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#164 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#164 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#164 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [146] (byte*) print_char_cursor#216 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#216 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#216 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#216 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [149] (byte) print_byte::b#5 ← *((byte*) printEntry::entry#10 + (byte) $b) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#5 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#5 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#5 ] ) always clobbers reg byte a reg byte y 
Statement [151] (byte*) print_line_cursor#165 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#165 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#165 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#165 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [153] (byte*) print_char_cursor#217 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#217 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#217 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#217 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [156] (word) print_word::w#4 ← *((word*)(byte*) printEntry::entry#10 + (byte) $c) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#4 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#4 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_word::w#4 ] ) always clobbers reg byte a reg byte y 
Statement [158] (byte*) print_line_cursor#166 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#166 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#166 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#166 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [160] (byte*) print_char_cursor#218 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#218 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#218 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#218 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [163] (byte) print_byte::b#6 ← *((byte*) printEntry::entry#10 + (byte) $e) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#6 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#6 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#6 ] ) always clobbers reg byte a reg byte y 
Statement [165] (byte*) print_line_cursor#167 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#167 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#167 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#167 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [167] (byte*) print_char_cursor#219 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#219 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#219 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#219 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [170] (byte) print_byte::b#7 ← *((byte*) printEntry::entry#10 + (byte) $f) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#7 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#7 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#7 ] ) always clobbers reg byte a reg byte y 
Statement [172] (byte*) print_line_cursor#168 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#168 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#168 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#168 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [174] (byte*) print_char_cursor#220 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#220 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#220 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#220 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [177] (byte) print_byte::b#8 ← *((byte*) printEntry::entry#10 + (byte) $10) [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#8 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#8 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 printEntry::entry#10 print_byte::b#8 ] ) always clobbers reg byte a reg byte y 
Statement [179] (byte*) print_line_cursor#169 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#169 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#169 printEntry::entry#10 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#169 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [181] (byte*) print_char_cursor#221 ← (byte*) print_line_cursor#1 [ print_line_cursor#1 print_char_cursor#221 printEntry::entry#10 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#221 printEntry::entry#10 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#221 printEntry::entry#10 ] ) always clobbers reg byte a 
Statement [184] (byte) print_byte::b#9 ← *((byte*) printEntry::entry#10 + (byte) $11) [ print_line_cursor#1 print_char_cursor#142 print_byte::b#9 ] ( main:2::printEntry:30 [ main::entry2#0 print_line_cursor#1 print_char_cursor#142 print_byte::b#9 ] main:2::printEntry:51 [ print_line_cursor#1 print_char_cursor#142 print_byte::b#9 ] ) always clobbers reg byte a reg byte y 
Statement [186] (byte*) print_line_cursor#170 ← (byte*) print_line_cursor#1 [ print_char_cursor#11 print_line_cursor#170 ] ( main:2::printEntry:30 [ main::entry2#0 print_char_cursor#11 print_line_cursor#170 ] main:2::printEntry:51 [ print_char_cursor#11 print_line_cursor#170 ] ) always clobbers reg byte a 
Statement [190] (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (byte) 4 [ print_byte::b#10 print_char_cursor#145 print_byte::$0 ] ( main:2::printEntry:30::print_byte:129 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:129 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:136 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:136 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:143 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:143 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:150 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:150 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:164 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:164 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:171 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:171 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:178 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:178 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_byte:185 [ main::entry2#0 print_line_cursor#1 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_byte:185 [ print_line_cursor#1 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:101::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:101::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:108::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:108::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:115::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:115::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:122::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:122::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:157::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:157::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:101::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:101::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:108::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:108::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:115::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:115::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:122::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:122::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:30::print_word:157::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] main:2::printEntry:51::print_word:157::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#145 print_byte::$0 ] ) always clobbers reg byte a 
Statement [193] (byte~) print_byte::$2 ← (byte) print_byte::b#10 & (byte) $f [ print_char_cursor#11 print_byte::$2 ] ( main:2::printEntry:30::print_byte:129 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:129 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:136 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:136 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:143 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:143 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:150 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:150 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:164 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:164 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:171 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:171 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:178 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:178 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_byte:185 [ main::entry2#0 print_line_cursor#1 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_byte:185 [ print_line_cursor#1 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:101::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:101::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:108::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:108::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:115::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:115::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:122::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:122::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:157::print_byte:203 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:157::print_byte:203 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:101::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:101::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:108::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:108::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:115::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:115::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:122::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:122::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:30::print_word:157::print_byte:205 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] main:2::printEntry:51::print_word:157::print_byte:205 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::$2 ] ) always clobbers reg byte a 
Statement [198] *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2 [ print_char_cursor#82 ] ( main:2::printEntry:30::print_byte:129::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:129::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:136::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:136::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:143::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:143::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:150::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:150::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:164::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:164::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:171::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:171::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:178::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:178::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:185::print_char:192 [ main::entry2#0 print_line_cursor#1 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:185::print_char:192 [ print_line_cursor#1 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:203::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:203::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:205::print_char:192 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:205::print_char:192 [ print_line_cursor#1 printEntry::entry#10 print_byte::b#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:129::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:129::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:136::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:136::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:143::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:143::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:150::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:150::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:164::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:164::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:171::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:171::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:178::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_byte:178::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_byte:185::print_char:195 [ main::entry2#0 print_line_cursor#1 print_char_cursor#82 ] main:2::printEntry:51::print_byte:185::print_char:195 [ print_line_cursor#1 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:203::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:203::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_word::w#5 print_char_cursor#82 ] main:2::printEntry:30::print_word:101::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:101::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:108::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:108::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:115::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:115::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:122::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:122::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:30::print_word:157::print_byte:205::print_char:195 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] main:2::printEntry:51::print_word:157::print_byte:205::print_char:195 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#82 ] ) always clobbers reg byte y 
Statement [202] (byte) print_byte::b#0 ← > (word) print_word::w#5 [ print_char_cursor#142 print_byte::b#0 print_word::w#5 ] ( main:2::printEntry:30::print_word:101 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:101 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:108 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:108 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:115 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:115 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:122 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:122 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:30::print_word:157 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] main:2::printEntry:51::print_word:157 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#142 print_byte::b#0 print_word::w#5 ] ) always clobbers reg byte a 
Statement [204] (byte) print_byte::b#1 ← < (word) print_word::w#5 [ print_char_cursor#11 print_byte::b#1 ] ( main:2::printEntry:30::print_word:101 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:101 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:108 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:108 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:115 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:115 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:122 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:122 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:30::print_word:157 [ main::entry2#0 print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] main:2::printEntry:51::print_word:157 [ print_line_cursor#1 printEntry::entry#10 print_char_cursor#11 print_byte::b#1 ] ) always clobbers reg byte a 
Statement [209] (word~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$1 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$1 ] ) always clobbers reg byte a 
Statement [210] *((byte**)(byte*) initEntry::entry#10) ← (byte*)(word~) initEntry::$1 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [212] (word~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$3 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$3 ] ) always clobbers reg byte a 
Statement [213] *((byte**)(byte*) initEntry::entry#10 + (byte) 2) ← (byte*)(word~) initEntry::$3 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [215] (word~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$5 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$5 ] ) always clobbers reg byte a 
Statement [216] *((word*)(byte*) initEntry::entry#10 + (byte) 4) ← (word~) initEntry::$5 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [218] (word~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$7 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$7 ] ) always clobbers reg byte a 
Statement [219] *((word**)(byte*) initEntry::entry#10 + (byte) 6) ← (word*)(word~) initEntry::$7 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [221] (byte~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$9 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$9 ] ) always clobbers reg byte a 
Statement [222] *((byte*) initEntry::entry#10 + (byte) 8) ← (byte~) initEntry::$9 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [224] (byte~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$11 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$11 ] ) always clobbers reg byte a 
Statement [225] *((byte*) initEntry::entry#10 + (byte) 9) ← (byte~) initEntry::$11 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [227] (byte~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$13 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$13 ] ) always clobbers reg byte a 
Statement [228] *((byte*) initEntry::entry#10 + (byte) $a) ← (byte~) initEntry::$13 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [230] (byte~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$15 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$15 ] ) always clobbers reg byte a 
Statement [231] *((byte*) initEntry::entry#10 + (byte) $b) ← (byte~) initEntry::$15 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [233] (word~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$17 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$17 ] ) always clobbers reg byte a 
Statement [234] *((word*)(byte*) initEntry::entry#10 + (byte) $c) ← (word~) initEntry::$17 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte a reg byte y 
Statement [236] (byte~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$19 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$19 ] ) always clobbers reg byte a 
Statement [237] *((byte*) initEntry::entry#10 + (byte) $e) ← (byte~) initEntry::$19 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [239] (byte~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$21 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$21 ] ) always clobbers reg byte a 
Statement [240] *((byte*) initEntry::entry#10 + (byte) $f) ← (byte~) initEntry::$21 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [242] (byte~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::n#10 initEntry::$23 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 initEntry::$23 ] ) always clobbers reg byte a 
Statement [243] *((byte*) initEntry::entry#10 + (byte) $10) ← (byte~) initEntry::$23 [ initEntry::entry#10 initEntry::n#10 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::n#10 ] ) always clobbers reg byte y 
Statement [245] (byte~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#10 [ initEntry::entry#10 initEntry::$25 ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 initEntry::entry#10 initEntry::$25 ] ) always clobbers reg byte a 
Statement [246] *((byte*) initEntry::entry#10 + (byte) $11) ← (byte~) initEntry::$25 [ ] ( main:2::initEntry:17 [ main::entry1#0 main::entry2#0 ] main:2::initEntry:19 [ main::entry1#0 main::entry2#0 ] ) always clobbers reg byte y 
Statement [252] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1 [ mul8u::res#2 mul8u::a#3 mul8u::mb#2 mul8u::$1 ] ( main:2::mul8u:7 [ mul8u::res#2 mul8u::a#3 mul8u::mb#2 mul8u::$1 ] main:2::mul8u:12 [ main::entry1#0 mul8u::res#2 mul8u::a#3 mul8u::mb#2 mul8u::$1 ] ) always clobbers reg byte a 
Statement [254] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] ( main:2::mul8u:7 [ mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] main:2::mul8u:12 [ main::entry1#0 mul8u::a#3 mul8u::mb#2 mul8u::res#1 ] ) always clobbers reg byte a 
Statement [258] *((const byte*) CIA1_PORT_A_DDR) ← (byte) $ff [ ] ( main:2::keyboard_init:5 [ ] ) always clobbers reg byte a 
Statement [259] *((const byte*) CIA1_PORT_B_DDR) ← (byte) 0 [ ] ( main:2::keyboard_init:5 [ ] ) always clobbers reg byte a 
Potential registers zp[2]:2 [ memset::dst#2 memset::dst#1 ] : zp[2]:2 , 
Potential registers zp[2]:4 [ print_str::str#18 print_str::str#20 print_str::str#0 ] : zp[2]:4 , 
Potential registers zp[2]:6 [ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ] : zp[2]:6 , 
Potential registers zp[2]:8 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] : zp[2]:8 , 
Potential registers zp[1]:10 [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ] : zp[1]:10 , reg byte x , 
Potential registers zp[1]:11 [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ] : zp[1]:11 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:12 [ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ] : zp[2]:12 , 
Potential registers zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ] : zp[2]:14 , 
Potential registers zp[2]:16 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ] : zp[2]:16 , 
Potential registers zp[1]:18 [ initEntry::n#10 ] : zp[1]:18 , reg byte x , 
Potential registers zp[1]:19 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ] : zp[1]:19 , reg byte x , reg byte y , 
Potential registers zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] : zp[2]:20 , 
Potential registers zp[2]:22 [ mul8u::mb#2 mul8u::mb#1 ] : zp[2]:22 , 
Potential registers zp[2]:24 [ mul8u::return#2 ] : zp[2]:24 , 
Potential registers zp[2]:26 [ main::fileEntry1_$0 ] : zp[2]:26 , 
Potential registers zp[2]:28 [ main::entry1#0 ] : zp[2]:28 , 
Potential registers zp[2]:30 [ mul8u::return#3 ] : zp[2]:30 , 
Potential registers zp[2]:32 [ main::fileEntry2_$0 ] : zp[2]:32 , 
Potential registers zp[2]:34 [ main::entry2#0 ] : zp[2]:34 , 
Potential registers zp[1]:36 [ keyboard_key_pressed::return#2 ] : zp[1]:36 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:37 [ main::$20 ] : zp[1]:37 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:38 [ keyboard_key_pressed::return#3 ] : zp[1]:38 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:39 [ main::$22 ] : zp[1]:39 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:40 [ keyboard_matrix_read::return#2 ] : zp[1]:40 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:41 [ keyboard_key_pressed::$2 ] : zp[1]:41 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:42 [ keyboard_key_pressed::return#0 ] : zp[1]:42 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:43 [ keyboard_matrix_read::return#0 ] : zp[1]:43 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:44 [ print_line_cursor#1 ] : zp[2]:44 , 
Potential registers zp[1]:46 [ print_byte::$0 ] : zp[1]:46 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:47 [ print_byte::$2 ] : zp[1]:47 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:48 [ initEntry::$1 ] : zp[2]:48 , 
Potential registers zp[2]:50 [ initEntry::$3 ] : zp[2]:50 , 
Potential registers zp[2]:52 [ initEntry::$5 ] : zp[2]:52 , 
Potential registers zp[2]:54 [ initEntry::$7 ] : zp[2]:54 , 
Potential registers zp[1]:56 [ initEntry::$9 ] : zp[1]:56 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:57 [ initEntry::$11 ] : zp[1]:57 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:58 [ initEntry::$13 ] : zp[1]:58 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:59 [ initEntry::$15 ] : zp[1]:59 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:60 [ initEntry::$17 ] : zp[2]:60 , 
Potential registers zp[1]:62 [ initEntry::$19 ] : zp[1]:62 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:63 [ initEntry::$21 ] : zp[1]:63 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:64 [ initEntry::$23 ] : zp[1]:64 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:65 [ initEntry::$25 ] : zp[1]:65 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:66 [ mul8u::$1 ] : zp[1]:66 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [] 142.16: zp[2]:12 [ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ] 142: zp[2]:6 [ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ] 1.08: zp[2]:44 [ print_line_cursor#1 ] 
Uplift Scope [mul8u] 38.29: zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] 26.71: zp[2]:22 [ mul8u::mb#2 mul8u::mb#1 ] 22: zp[1]:66 [ mul8u::$1 ] 20.67: zp[1]:19 [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ] 4: zp[2]:24 [ mul8u::return#2 ] 4: zp[2]:30 [ mul8u::return#3 ] 
Uplift Scope [initEntry] 8.51: zp[2]:16 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ] 4: zp[2]:52 [ initEntry::$5 ] 4: zp[1]:56 [ initEntry::$9 ] 4: zp[1]:57 [ initEntry::$11 ] 4: zp[1]:58 [ initEntry::$13 ] 4: zp[1]:59 [ initEntry::$15 ] 4: zp[2]:60 [ initEntry::$17 ] 4: zp[1]:62 [ initEntry::$19 ] 4: zp[1]:63 [ initEntry::$21 ] 4: zp[1]:64 [ initEntry::$23 ] 4: zp[1]:65 [ initEntry::$25 ] 2: zp[2]:48 [ initEntry::$1 ] 2: zp[2]:50 [ initEntry::$3 ] 2: zp[2]:54 [ initEntry::$7 ] 0.68: zp[1]:18 [ initEntry::n#10 ] 
Uplift Scope [print_byte] 46: zp[1]:10 [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ] 4: zp[1]:46 [ print_byte::$0 ] 4: zp[1]:47 [ print_byte::$2 ] 
Uplift Scope [keyboard_key_pressed] 22: zp[1]:36 [ keyboard_key_pressed::return#2 ] 22: zp[1]:38 [ keyboard_key_pressed::return#3 ] 6: zp[1]:42 [ keyboard_key_pressed::return#0 ] 4: zp[1]:41 [ keyboard_key_pressed::$2 ] 
Uplift Scope [main] 22: zp[1]:37 [ main::$20 ] 22: zp[1]:39 [ main::$22 ] 4: zp[2]:26 [ main::fileEntry1_$0 ] 4: zp[2]:32 [ main::fileEntry2_$0 ] 0.32: zp[2]:28 [ main::entry1#0 ] 0.17: zp[2]:34 [ main::entry2#0 ] 
Uplift Scope [memset] 36.67: zp[2]:2 [ memset::dst#2 memset::dst#1 ] 
Uplift Scope [print_str] 35.5: zp[2]:4 [ print_str::str#18 print_str::str#20 print_str::str#0 ] 
Uplift Scope [print_word] 24.67: zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ] 
Uplift Scope [print_char] 14: zp[1]:11 [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ] 
Uplift Scope [printEntry] 8.23: zp[2]:8 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] 
Uplift Scope [keyboard_matrix_read] 4: zp[1]:40 [ keyboard_matrix_read::return#2 ] 1.33: zp[1]:43 [ keyboard_matrix_read::return#0 ] 
Uplift Scope [RADIX] 
Uplift Scope [print_ln] 
Uplift Scope [print_cls] 
Uplift Scope [keyboard_init] 

Uplifting [] best 6192 combination zp[2]:12 [ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ] zp[2]:6 [ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ] zp[2]:44 [ print_line_cursor#1 ] 
Uplifting [mul8u] best 6096 combination zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] zp[2]:22 [ mul8u::mb#2 mul8u::mb#1 ] reg byte a [ mul8u::$1 ] reg byte x [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ] zp[2]:24 [ mul8u::return#2 ] zp[2]:30 [ mul8u::return#3 ] 
Uplifting [initEntry] best 6080 combination zp[2]:16 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ] zp[2]:52 [ initEntry::$5 ] reg byte a [ initEntry::$9 ] reg byte a [ initEntry::$11 ] reg byte a [ initEntry::$13 ] reg byte a [ initEntry::$15 ] zp[2]:60 [ initEntry::$17 ] zp[1]:62 [ initEntry::$19 ] zp[1]:63 [ initEntry::$21 ] zp[1]:64 [ initEntry::$23 ] zp[1]:65 [ initEntry::$25 ] zp[2]:48 [ initEntry::$1 ] zp[2]:50 [ initEntry::$3 ] zp[2]:54 [ initEntry::$7 ] zp[1]:18 [ initEntry::n#10 ] 
Limited combination testing to 100 combinations of 131072 possible.
Uplifting [print_byte] best 6058 combination reg byte x [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ] reg byte a [ print_byte::$0 ] reg byte x [ print_byte::$2 ] 
Uplifting [keyboard_key_pressed] best 5869 combination reg byte a [ keyboard_key_pressed::return#2 ] reg byte a [ keyboard_key_pressed::return#3 ] reg byte a [ keyboard_key_pressed::return#0 ] reg byte a [ keyboard_key_pressed::$2 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [main] best 5749 combination reg byte a [ main::$20 ] reg byte a [ main::$22 ] zp[2]:26 [ main::fileEntry1_$0 ] zp[2]:32 [ main::fileEntry2_$0 ] zp[2]:28 [ main::entry1#0 ] zp[2]:34 [ main::entry2#0 ] 
Uplifting [memset] best 5749 combination zp[2]:2 [ memset::dst#2 memset::dst#1 ] 
Uplifting [print_str] best 5749 combination zp[2]:4 [ print_str::str#18 print_str::str#20 print_str::str#0 ] 
Uplifting [print_word] best 5749 combination zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ] 
Uplifting [print_char] best 5740 combination reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ] 
Uplifting [printEntry] best 5740 combination zp[2]:8 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] 
Uplifting [keyboard_matrix_read] best 5728 combination reg byte a [ keyboard_matrix_read::return#2 ] reg byte a [ keyboard_matrix_read::return#0 ] 
Uplifting [RADIX] best 5728 combination 
Uplifting [print_ln] best 5728 combination 
Uplifting [print_cls] best 5728 combination 
Uplifting [keyboard_init] best 5728 combination 
Attempting to uplift remaining variables inzp[1]:62 [ initEntry::$19 ]
Uplifting [initEntry] best 5724 combination reg byte a [ initEntry::$19 ] 
Attempting to uplift remaining variables inzp[1]:63 [ initEntry::$21 ]
Uplifting [initEntry] best 5720 combination reg byte a [ initEntry::$21 ] 
Attempting to uplift remaining variables inzp[1]:64 [ initEntry::$23 ]
Uplifting [initEntry] best 5716 combination reg byte a [ initEntry::$23 ] 
Attempting to uplift remaining variables inzp[1]:65 [ initEntry::$25 ]
Uplifting [initEntry] best 5712 combination reg byte a [ initEntry::$25 ] 
Attempting to uplift remaining variables inzp[1]:18 [ initEntry::n#10 ]
Uplifting [initEntry] best 5693 combination reg byte x [ initEntry::n#10 ] 
Coalescing zero page register [ zp[2]:8 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 ] ] with [ zp[2]:28 [ main::entry1#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 ] ] with [ zp[2]:24 [ mul8u::return#2 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 ] ] with [ zp[2]:30 [ mul8u::return#3 ] ] - score: 1
Coalescing zero page register [ zp[2]:32 [ main::fileEntry2_$0 ] ] with [ zp[2]:34 [ main::entry2#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:8 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 main::entry1#0 ] ] with [ zp[2]:26 [ main::fileEntry1_$0 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 ] ] with [ zp[2]:32 [ main::fileEntry2_$0 main::entry2#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:4 [ print_str::str#18 print_str::str#20 print_str::str#0 ] ] with [ zp[2]:2 [ memset::dst#2 memset::dst#1 ] ]
Coalescing zero page register [ zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 ] ] with [ zp[2]:6 [ print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ] ]
Coalescing zero page register [ zp[2]:16 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 ] ] with [ zp[2]:12 [ print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ] ]
Coalescing zero page register [ zp[2]:44 [ print_line_cursor#1 ] ] with [ zp[2]:22 [ mul8u::mb#2 mul8u::mb#1 ] ]
Coalescing zero page register [ zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 ] ] with [ zp[2]:4 [ print_str::str#18 print_str::str#20 print_str::str#0 memset::dst#2 memset::dst#1 ] ]
Coalescing zero page register [ zp[2]:48 [ initEntry::$1 ] ] with [ zp[2]:44 [ print_line_cursor#1 mul8u::mb#2 mul8u::mb#1 ] ]
Coalescing zero page register [ zp[2]:50 [ initEntry::$3 ] ] with [ zp[2]:14 [ print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 print_str::str#18 print_str::str#20 print_str::str#0 memset::dst#2 memset::dst#1 ] ]
Allocated (was zp[2]:8) zp[2]:2 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 main::entry1#0 main::fileEntry1_$0 ]
Allocated (was zp[2]:16) zp[2]:4 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ]
Allocated (was zp[2]:20) zp[2]:6 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 main::fileEntry2_$0 main::entry2#0 ]
Allocated (was zp[2]:48) zp[2]:8 [ initEntry::$1 print_line_cursor#1 mul8u::mb#2 mul8u::mb#1 ]
Allocated (was zp[2]:50) zp[2]:10 [ initEntry::$3 print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 print_str::str#18 print_str::str#20 print_str::str#0 memset::dst#2 memset::dst#1 ]
Allocated (was zp[2]:52) zp[2]:12 [ initEntry::$5 ]
Allocated (was zp[2]:54) zp[2]:14 [ initEntry::$7 ]
Allocated (was zp[2]:60) zp[2]:16 [ initEntry::$17 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Implementing a semi-struct without the struct keyword by using pointer math and inline functions
//
// struct fileentry {
//    BYTE *bufDisk; // file position in disk buffer.
//    BYTE *bufEdit; // file edits
//    WORD tsLen; // num of sectors
//    TS *tsOrder;
//    BYTE tLastLink;
//    BYTE sLastLink;
//    BYTE bFlag;
//    BYTE bError;
//    WORD uCross; // num of crosslinked sectors
//    BYTE bAddrLo; // start address
//    BYTE bAddrHi;
//    BYTE tHi; // highest track
//    BYTE tLo; // lowest track
//    };
//    typedef struct fileentry ENTRY;
//    ENTRY files[MAX_FILES];
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__bbegin)
.pc = $80d "Program"
  // Global Constants & labels
  // CIA#1 Port A: keyboard matrix columns and joystick #2
  .label CIA1_PORT_A = $dc00
  // CIA#1 Port B: keyboard matrix rows and joystick #1.
  .label CIA1_PORT_B = $dc01
  // CIA #1 Port A data direction register.
  .label CIA1_PORT_A_DDR = $dc02
  // CIA #1 Port B data direction register.
  .label CIA1_PORT_B_DDR = $dc03
  .const KEY_SPACE = $3c
  // The size of a file ENTRY
  .const SIZEOF_ENTRY = $12
  // The maximal number of files
  .const MAX_FILES = $90
  .label print_char_cursor = 4
  .label print_line_cursor = 8
  .label print_line_cursor_1 = $a
  // @begin
__bbegin:
  // [1] phi from @begin to @1 [phi:@begin->@1]
__b1_from___bbegin:
  jmp __b1
  // @1
__b1:
  // [2] call main 
  // [4] phi from @1 to main [phi:@1->main]
main_from___b1:
  jsr main
  // [3] phi from @1 to @end [phi:@1->@end]
__bend_from___b1:
  jmp __bend
  // @end
__bend:
  // main
// Initialize 2 file entries and print them
main: {
    .const fileEntry1_idx = 1
    .const fileEntry2_idx = 2
    .label fileEntry1___0 = 2
    .label fileEntry2___0 = 6
    .label entry1 = 2
    .label entry2 = 6
    // [5] call keyboard_init 
    jsr keyboard_init
    // [6] phi from main to main::fileEntry1 [phi:main->main::fileEntry1]
  fileEntry1_from_main:
    jmp fileEntry1
    // main::fileEntry1
  fileEntry1:
    // [7] call mul8u 
    // [248] phi from main::fileEntry1 to mul8u [phi:main::fileEntry1->mul8u]
  mul8u_from_fileEntry1:
    // [248] phi (byte) mul8u::a#6 = (const byte) main::fileEntry1_idx#0 [phi:main::fileEntry1->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry1_idx
    jsr mul8u
    // [8] (word) mul8u::return#2 ← (word) mul8u::res#2
    jmp __b6
    // main::@6
  __b6:
    // [9] (word~) main::fileEntry1_$0 ← (word) mul8u::return#2 -- vwuz1=vwuz2 
    lda.z mul8u.return
    sta.z fileEntry1___0
    lda.z mul8u.return+1
    sta.z fileEntry1___0+1
    // [10] (byte*) main::entry1#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z entry1
    adc #<files
    sta.z entry1
    lda.z entry1+1
    adc #>files
    sta.z entry1+1
    // [11] phi from main::@6 to main::fileEntry2 [phi:main::@6->main::fileEntry2]
  fileEntry2_from___b6:
    jmp fileEntry2
    // main::fileEntry2
  fileEntry2:
    // [12] call mul8u 
    // [248] phi from main::fileEntry2 to mul8u [phi:main::fileEntry2->mul8u]
  mul8u_from_fileEntry2:
    // [248] phi (byte) mul8u::a#6 = (const byte) main::fileEntry2_idx#0 [phi:main::fileEntry2->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry2_idx
    jsr mul8u
    // [13] (word) mul8u::return#3 ← (word) mul8u::res#2
    jmp __b7
    // main::@7
  __b7:
    // [14] (word~) main::fileEntry2_$0 ← (word) mul8u::return#3
    // [15] (byte*) main::entry2#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z entry2
    adc #<files
    sta.z entry2
    lda.z entry2+1
    adc #>files
    sta.z entry2+1
    jmp __b5
    // main::@5
  __b5:
    // [16] (byte*) initEntry::entry#0 ← (byte*) main::entry1#0 -- pbuz1=pbuz2 
    lda.z entry1
    sta.z initEntry.entry
    lda.z entry1+1
    sta.z initEntry.entry+1
    // [17] call initEntry 
    // [207] phi from main::@5 to initEntry [phi:main::@5->initEntry]
  initEntry_from___b5:
    // [207] phi (byte) initEntry::n#10 = (byte) 0 [phi:main::@5->initEntry#0] -- vbuxx=vbuc1 
    ldx #0
    // [207] phi (byte*) initEntry::entry#10 = (byte*) initEntry::entry#0 [phi:main::@5->initEntry#1] -- register_copy 
    jsr initEntry
    jmp __b8
    // main::@8
  __b8:
    // [18] (byte*) initEntry::entry#1 ← (byte*) main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z initEntry.entry
    lda.z entry2+1
    sta.z initEntry.entry+1
    // [19] call initEntry 
    // [207] phi from main::@8 to initEntry [phi:main::@8->initEntry]
  initEntry_from___b8:
    // [207] phi (byte) initEntry::n#10 = (byte) $11 [phi:main::@8->initEntry#0] -- vbuxx=vbuc1 
    ldx #$11
    // [207] phi (byte*) initEntry::entry#10 = (byte*) initEntry::entry#1 [phi:main::@8->initEntry#1] -- register_copy 
    jsr initEntry
    // [20] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
  __b9_from___b8:
    jmp __b9
    // main::@9
  __b9:
    // [21] call print_cls 
    // [65] phi from main::@9 to print_cls [phi:main::@9->print_cls]
  print_cls_from___b9:
    jsr print_cls
    // [22] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
  __b10_from___b9:
    jmp __b10
    // main::@10
  __b10:
    // [23] call print_str 
    // [83] phi from main::@10 to print_str [phi:main::@10->print_str]
  print_str_from___b10:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) 1024 [phi:main::@10->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [83] phi (byte*) print_str::str#20 = (const string) main::str [phi:main::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [24] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
  __b11_from___b10:
    jmp __b11
    // main::@11
  __b11:
    // [25] call print_ln 
    // [90] phi from main::@11 to print_ln [phi:main::@11->print_ln]
  print_ln_from___b11:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#142 [phi:main::@11->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) 1024 [phi:main::@11->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor_1
    lda #>$400
    sta.z print_line_cursor_1+1
    jsr print_ln
    jmp __b12
    // main::@12
  __b12:
    // [26] (byte*) print_line_cursor#154 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [27] (byte*) print_char_cursor#225 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [28] call print_ln 
    // [90] phi from main::@12 to print_ln [phi:main::@12->print_ln]
  print_ln_from___b12:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#225 [phi:main::@12->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#154 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b13
    // main::@13
  __b13:
    // [29] (byte*) printEntry::entry#0 ← (byte*) main::entry1#0
    // [30] call printEntry 
    // [96] phi from main::@13 to printEntry [phi:main::@13->printEntry]
  printEntry_from___b13:
    // [96] phi (byte*) printEntry::entry#10 = (byte*) printEntry::entry#0 [phi:main::@13->printEntry#0] -- register_copy 
    jsr printEntry
    jmp __b14
    // main::@14
  __b14:
    // [31] (byte*) print_line_cursor#155 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [32] (byte*) print_char_cursor#226 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [33] call print_ln 
    // [90] phi from main::@14 to print_ln [phi:main::@14->print_ln]
  print_ln_from___b14:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#226 [phi:main::@14->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#155 [phi:main::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b15
    // main::@15
  __b15:
    // [34] (byte*) print_char_cursor#207 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [35] call print_str 
    // [83] phi from main::@15 to print_str [phi:main::@15->print_str]
  print_str_from___b15:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#207 [phi:main::@15->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) main::str1 [phi:main::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [36] phi from main::@15 main::@16 to main::@1 [phi:main::@15/main::@16->main::@1]
  __b1_from___b15:
  __b1_from___b16:
    jmp __b1
    // main::@1
  __b1:
    // [37] call keyboard_key_pressed 
    // [74] phi from main::@1 to keyboard_key_pressed [phi:main::@1->keyboard_key_pressed]
  keyboard_key_pressed_from___b1:
    jsr keyboard_key_pressed
    // [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0
    jmp __b16
    // main::@16
  __b16:
    // [39] (byte~) main::$20 ← (byte) keyboard_key_pressed::return#2
    // [40] if((byte~) main::$20==(byte) 0) goto main::@1 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b1_from___b16
    // [41] phi from main::@16 to main::@2 [phi:main::@16->main::@2]
  __b2_from___b16:
    jmp __b2
    // main::@2
  __b2:
    // [42] call print_cls 
    // [65] phi from main::@2 to print_cls [phi:main::@2->print_cls]
  print_cls_from___b2:
    jsr print_cls
    // [43] phi from main::@2 to main::@17 [phi:main::@2->main::@17]
  __b17_from___b2:
    jmp __b17
    // main::@17
  __b17:
    // [44] call print_str 
    // [83] phi from main::@17 to print_str [phi:main::@17->print_str]
  print_str_from___b17:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) 1024 [phi:main::@17->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [83] phi (byte*) print_str::str#20 = (const string) main::str2 [phi:main::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [45] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [46] call print_ln 
    // [90] phi from main::@18 to print_ln [phi:main::@18->print_ln]
  print_ln_from___b18:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#142 [phi:main::@18->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) 1024 [phi:main::@18->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor_1
    lda #>$400
    sta.z print_line_cursor_1+1
    jsr print_ln
    jmp __b19
    // main::@19
  __b19:
    // [47] (byte*) print_line_cursor#156 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [48] (byte*) print_char_cursor#228 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [49] call print_ln 
    // [90] phi from main::@19 to print_ln [phi:main::@19->print_ln]
  print_ln_from___b19:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#228 [phi:main::@19->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#156 [phi:main::@19->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b20
    // main::@20
  __b20:
    // [50] (byte*) printEntry::entry#1 ← (byte*) main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z printEntry.entry
    lda.z entry2+1
    sta.z printEntry.entry+1
    // [51] call printEntry 
    // [96] phi from main::@20 to printEntry [phi:main::@20->printEntry]
  printEntry_from___b20:
    // [96] phi (byte*) printEntry::entry#10 = (byte*) printEntry::entry#1 [phi:main::@20->printEntry#0] -- register_copy 
    jsr printEntry
    jmp __b21
    // main::@21
  __b21:
    // [52] (byte*) print_line_cursor#157 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [53] (byte*) print_char_cursor#229 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [54] call print_ln 
    // [90] phi from main::@21 to print_ln [phi:main::@21->print_ln]
  print_ln_from___b21:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#229 [phi:main::@21->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#157 [phi:main::@21->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b22
    // main::@22
  __b22:
    // [55] (byte*) print_char_cursor#208 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [56] call print_str 
    // [83] phi from main::@22 to print_str [phi:main::@22->print_str]
  print_str_from___b22:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#208 [phi:main::@22->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) main::str1 [phi:main::@22->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [57] phi from main::@22 main::@23 to main::@3 [phi:main::@22/main::@23->main::@3]
  __b3_from___b22:
  __b3_from___b23:
    jmp __b3
    // main::@3
  __b3:
    // [58] call keyboard_key_pressed 
    // [74] phi from main::@3 to keyboard_key_pressed [phi:main::@3->keyboard_key_pressed]
  keyboard_key_pressed_from___b3:
    jsr keyboard_key_pressed
    // [59] (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#0
    jmp __b23
    // main::@23
  __b23:
    // [60] (byte~) main::$22 ← (byte) keyboard_key_pressed::return#3
    // [61] if((byte~) main::$22==(byte) 0) goto main::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3_from___b23
    // [62] phi from main::@23 to main::@4 [phi:main::@23->main::@4]
  __b4_from___b23:
    jmp __b4
    // main::@4
  __b4:
    // [63] call print_cls 
    // [65] phi from main::@4 to print_cls [phi:main::@4->print_cls]
  print_cls_from___b4:
    jsr print_cls
    jmp __breturn
    // main::@return
  __breturn:
    // [64] return 
    rts
    str: .text "** entry 1 **"
    .byte 0
    str1: .text "- press space -"
    .byte 0
    str2: .text "** entry 2 **"
    .byte 0
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [66] call memset 
    // [68] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [67] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = $400
    .label end = str+num
    .label dst = $a
    // [69] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [69] phi (byte*) memset::dst#2 = (byte*)(const void*) memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [70] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [71] return 
    rts
    // memset::@2
  __b2:
    // [72] *((byte*) memset::dst#2) ← (const byte) memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [73] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [69] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [69] phi (byte*) memset::dst#2 = (byte*) memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // keyboard_key_pressed
// Determines whether a specific key is currently pressed by accessing the matrix directly
// The key is a keyboard code defined from the keyboard matrix by %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// All keys exist as as KEY_XXX constants.
// Returns zero if the key is not pressed and a non-zero value if the key is currently pressed
keyboard_key_pressed: {
    .const colidx = KEY_SPACE&7
    .label rowidx = KEY_SPACE>>3
    // [75] call keyboard_matrix_read 
    jsr keyboard_matrix_read
    // [76] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
    jmp __b1
    // keyboard_key_pressed::@1
  __b1:
    // [77] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2
    // [78] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[8]) keyboard_matrix_col_bitmask+(const byte) keyboard_key_pressed::colidx#0) -- vbuaa=vbuaa_band__deref_pbuc1 
    and keyboard_matrix_col_bitmask+colidx
    jmp __breturn
    // keyboard_key_pressed::@return
  __breturn:
    // [79] return 
    rts
}
  // keyboard_matrix_read
// Read a single row of the keyboard matrix
// The row ID (0-7) of the keyboard matrix row to read. See the C64 key matrix for row IDs.
// Returns the keys pressed on the row as bits according to the C64 key matrix.
// Notice: If the C64 normal interrupt is still running it will occasionally interrupt right between the read & write
// leading to erroneous readings. You must disable kill the normal interrupt or sei/cli around calls to the keyboard matrix reader.
keyboard_matrix_read: {
    // [80] *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask+(const byte) keyboard_key_pressed::rowidx#0) -- _deref_pbuc1=_deref_pbuc2 
    lda keyboard_matrix_row_bitmask+keyboard_key_pressed.rowidx
    sta CIA1_PORT_A
    // [81] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    jmp __breturn
    // keyboard_matrix_read::@return
  __breturn:
    // [82] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zeropage($a) str)
print_str: {
    .label str = $a
    // [84] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  __b1_from_print_str:
  __b1_from___b2:
    // [84] phi (byte*) print_char_cursor#142 = (byte*) print_char_cursor#164 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
    // [84] phi (byte*) print_str::str#18 = (byte*) print_str::str#20 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [85] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [86] return 
    rts
    // print_str::@2
  __b2:
    // [87] *((byte*) print_char_cursor#142) ← *((byte*) print_str::str#18) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (print_char_cursor),y
    // [88] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#142 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // [89] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#18 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b2
}
  // print_ln
// Print a newline
print_ln: {
    // [91] phi from print_ln print_ln::@2 to print_ln::@1 [phi:print_ln/print_ln::@2->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b2:
    // [91] phi (byte*) print_line_cursor#32 = (byte*) print_line_cursor#63 [phi:print_ln/print_ln::@2->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [92] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#32 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor_1
    sta.z print_line_cursor
    lda #0
    adc.z print_line_cursor_1+1
    sta.z print_line_cursor+1
    // [93] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@2 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b2
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b2
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [94] return 
    rts
    // print_ln::@2
  __b2:
    // [95] (byte*) print_line_cursor#172 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    jmp __b1_from___b2
}
  // printEntry
// Print the contents of a file entry
// printEntry(byte* zeropage(2) entry)
printEntry: {
    .label entry = 2
    // [97] (byte*) print_char_cursor#209 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [98] call print_str 
    // [83] phi from printEntry to print_str [phi:printEntry->print_str]
  print_str_from_printEntry:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#209 [phi:printEntry->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str [phi:printEntry->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [99] phi from printEntry to printEntry::entryBufDisk1 [phi:printEntry->printEntry::entryBufDisk1]
  entryBufDisk1_from_printEntry:
    jmp entryBufDisk1
    // printEntry::entryBufDisk1
  entryBufDisk1:
    jmp __b1
    // printEntry::@1
  __b1:
    // [100] (word) print_word::w#7 ← (word)*((byte**)(byte*) printEntry::entry#10) -- vwuz1=_deref_pwuz2 
    ldy #0
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [101] call print_word 
    // [201] phi from printEntry::@1 to print_word [phi:printEntry::@1->print_word]
  print_word_from___b1:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#7 [phi:printEntry::@1->print_word#0] -- register_copy 
    jsr print_word
    jmp __b14
    // printEntry::@14
  __b14:
    // [102] (byte*) print_line_cursor#158 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [103] call print_ln 
    // [90] phi from printEntry::@14 to print_ln [phi:printEntry::@14->print_ln]
  print_ln_from___b14:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@14->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#158 [phi:printEntry::@14->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b15
    // printEntry::@15
  __b15:
    // [104] (byte*) print_char_cursor#210 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [105] call print_str 
    // [83] phi from printEntry::@15 to print_str [phi:printEntry::@15->print_str]
  print_str_from___b15:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#210 [phi:printEntry::@15->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str1 [phi:printEntry::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [106] phi from printEntry::@15 to printEntry::entryBufEdit1 [phi:printEntry::@15->printEntry::entryBufEdit1]
  entryBufEdit1_from___b15:
    jmp entryBufEdit1
    // printEntry::entryBufEdit1
  entryBufEdit1:
    jmp __b2
    // printEntry::@2
  __b2:
    // [107] (word) print_word::w#8 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #2
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [108] call print_word 
    // [201] phi from printEntry::@2 to print_word [phi:printEntry::@2->print_word]
  print_word_from___b2:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#8 [phi:printEntry::@2->print_word#0] -- register_copy 
    jsr print_word
    jmp __b16
    // printEntry::@16
  __b16:
    // [109] (byte*) print_line_cursor#159 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [110] call print_ln 
    // [90] phi from printEntry::@16 to print_ln [phi:printEntry::@16->print_ln]
  print_ln_from___b16:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@16->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#159 [phi:printEntry::@16->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b17
    // printEntry::@17
  __b17:
    // [111] (byte*) print_char_cursor#211 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [112] call print_str 
    // [83] phi from printEntry::@17 to print_str [phi:printEntry::@17->print_str]
  print_str_from___b17:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#211 [phi:printEntry::@17->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str2 [phi:printEntry::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [113] phi from printEntry::@17 to printEntry::entryTsLen1 [phi:printEntry::@17->printEntry::entryTsLen1]
  entryTsLen1_from___b17:
    jmp entryTsLen1
    // printEntry::entryTsLen1
  entryTsLen1:
    jmp __b3
    // printEntry::@3
  __b3:
    // [114] (word) print_word::w#2 ← *((word*)(byte*) printEntry::entry#10 + (byte) 4) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #4
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [115] call print_word 
    // [201] phi from printEntry::@3 to print_word [phi:printEntry::@3->print_word]
  print_word_from___b3:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#2 [phi:printEntry::@3->print_word#0] -- register_copy 
    jsr print_word
    jmp __b18
    // printEntry::@18
  __b18:
    // [116] (byte*) print_line_cursor#160 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [117] call print_ln 
    // [90] phi from printEntry::@18 to print_ln [phi:printEntry::@18->print_ln]
  print_ln_from___b18:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@18->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#160 [phi:printEntry::@18->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b19
    // printEntry::@19
  __b19:
    // [118] (byte*) print_char_cursor#212 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [119] call print_str 
    // [83] phi from printEntry::@19 to print_str [phi:printEntry::@19->print_str]
  print_str_from___b19:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#212 [phi:printEntry::@19->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str3 [phi:printEntry::@19->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // [120] phi from printEntry::@19 to printEntry::entryTsOrder1 [phi:printEntry::@19->printEntry::entryTsOrder1]
  entryTsOrder1_from___b19:
    jmp entryTsOrder1
    // printEntry::entryTsOrder1
  entryTsOrder1:
    jmp __b4
    // printEntry::@4
  __b4:
    // [121] (word) print_word::w#10 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #6
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [122] call print_word 
    // [201] phi from printEntry::@4 to print_word [phi:printEntry::@4->print_word]
  print_word_from___b4:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#10 [phi:printEntry::@4->print_word#0] -- register_copy 
    jsr print_word
    jmp __b20
    // printEntry::@20
  __b20:
    // [123] (byte*) print_line_cursor#161 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [124] call print_ln 
    // [90] phi from printEntry::@20 to print_ln [phi:printEntry::@20->print_ln]
  print_ln_from___b20:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@20->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#161 [phi:printEntry::@20->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b21
    // printEntry::@21
  __b21:
    // [125] (byte*) print_char_cursor#213 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [126] call print_str 
    // [83] phi from printEntry::@21 to print_str [phi:printEntry::@21->print_str]
  print_str_from___b21:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#213 [phi:printEntry::@21->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str4 [phi:printEntry::@21->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // [127] phi from printEntry::@21 to printEntry::entryTLastLink1 [phi:printEntry::@21->printEntry::entryTLastLink1]
  entryTLastLink1_from___b21:
    jmp entryTLastLink1
    // printEntry::entryTLastLink1
  entryTLastLink1:
    jmp __b5
    // printEntry::@5
  __b5:
    // [128] (byte) print_byte::b#2 ← *((byte*) printEntry::entry#10 + (byte) 8) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #8
    lda (entry),y
    tax
    // [129] call print_byte 
    // [189] phi from printEntry::@5 to print_byte [phi:printEntry::@5->print_byte]
  print_byte_from___b5:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@5->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#2 [phi:printEntry::@5->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b22
    // printEntry::@22
  __b22:
    // [130] (byte*) print_line_cursor#162 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [131] call print_ln 
    // [90] phi from printEntry::@22 to print_ln [phi:printEntry::@22->print_ln]
  print_ln_from___b22:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@22->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#162 [phi:printEntry::@22->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b23
    // printEntry::@23
  __b23:
    // [132] (byte*) print_char_cursor#214 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [133] call print_str 
    // [83] phi from printEntry::@23 to print_str [phi:printEntry::@23->print_str]
  print_str_from___b23:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#214 [phi:printEntry::@23->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str5 [phi:printEntry::@23->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // [134] phi from printEntry::@23 to printEntry::entrySLastLink1 [phi:printEntry::@23->printEntry::entrySLastLink1]
  entrySLastLink1_from___b23:
    jmp entrySLastLink1
    // printEntry::entrySLastLink1
  entrySLastLink1:
    jmp __b6
    // printEntry::@6
  __b6:
    // [135] (byte) print_byte::b#3 ← *((byte*) printEntry::entry#10 + (byte) 9) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #9
    lda (entry),y
    tax
    // [136] call print_byte 
    // [189] phi from printEntry::@6 to print_byte [phi:printEntry::@6->print_byte]
  print_byte_from___b6:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@6->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#3 [phi:printEntry::@6->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b24
    // printEntry::@24
  __b24:
    // [137] (byte*) print_line_cursor#163 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [138] call print_ln 
    // [90] phi from printEntry::@24 to print_ln [phi:printEntry::@24->print_ln]
  print_ln_from___b24:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@24->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#163 [phi:printEntry::@24->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b25
    // printEntry::@25
  __b25:
    // [139] (byte*) print_char_cursor#215 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [140] call print_str 
    // [83] phi from printEntry::@25 to print_str [phi:printEntry::@25->print_str]
  print_str_from___b25:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#215 [phi:printEntry::@25->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str6 [phi:printEntry::@25->print_str#1] -- pbuz1=pbuc1 
    lda #<str6
    sta.z print_str.str
    lda #>str6
    sta.z print_str.str+1
    jsr print_str
    // [141] phi from printEntry::@25 to printEntry::entryBFlag1 [phi:printEntry::@25->printEntry::entryBFlag1]
  entryBFlag1_from___b25:
    jmp entryBFlag1
    // printEntry::entryBFlag1
  entryBFlag1:
    jmp __b7
    // printEntry::@7
  __b7:
    // [142] (byte) print_byte::b#4 ← *((byte*) printEntry::entry#10 + (byte) $a) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$a
    lda (entry),y
    tax
    // [143] call print_byte 
    // [189] phi from printEntry::@7 to print_byte [phi:printEntry::@7->print_byte]
  print_byte_from___b7:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@7->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#4 [phi:printEntry::@7->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b26
    // printEntry::@26
  __b26:
    // [144] (byte*) print_line_cursor#164 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [145] call print_ln 
    // [90] phi from printEntry::@26 to print_ln [phi:printEntry::@26->print_ln]
  print_ln_from___b26:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@26->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#164 [phi:printEntry::@26->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b27
    // printEntry::@27
  __b27:
    // [146] (byte*) print_char_cursor#216 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [147] call print_str 
    // [83] phi from printEntry::@27 to print_str [phi:printEntry::@27->print_str]
  print_str_from___b27:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#216 [phi:printEntry::@27->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str7 [phi:printEntry::@27->print_str#1] -- pbuz1=pbuc1 
    lda #<str7
    sta.z print_str.str
    lda #>str7
    sta.z print_str.str+1
    jsr print_str
    // [148] phi from printEntry::@27 to printEntry::entryBError1 [phi:printEntry::@27->printEntry::entryBError1]
  entryBError1_from___b27:
    jmp entryBError1
    // printEntry::entryBError1
  entryBError1:
    jmp __b8
    // printEntry::@8
  __b8:
    // [149] (byte) print_byte::b#5 ← *((byte*) printEntry::entry#10 + (byte) $b) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$b
    lda (entry),y
    tax
    // [150] call print_byte 
    // [189] phi from printEntry::@8 to print_byte [phi:printEntry::@8->print_byte]
  print_byte_from___b8:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@8->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#5 [phi:printEntry::@8->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b28
    // printEntry::@28
  __b28:
    // [151] (byte*) print_line_cursor#165 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [152] call print_ln 
    // [90] phi from printEntry::@28 to print_ln [phi:printEntry::@28->print_ln]
  print_ln_from___b28:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@28->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#165 [phi:printEntry::@28->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b29
    // printEntry::@29
  __b29:
    // [153] (byte*) print_char_cursor#217 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [154] call print_str 
    // [83] phi from printEntry::@29 to print_str [phi:printEntry::@29->print_str]
  print_str_from___b29:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#217 [phi:printEntry::@29->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str8 [phi:printEntry::@29->print_str#1] -- pbuz1=pbuc1 
    lda #<str8
    sta.z print_str.str
    lda #>str8
    sta.z print_str.str+1
    jsr print_str
    // [155] phi from printEntry::@29 to printEntry::entryUCross1 [phi:printEntry::@29->printEntry::entryUCross1]
  entryUCross1_from___b29:
    jmp entryUCross1
    // printEntry::entryUCross1
  entryUCross1:
    jmp __b9
    // printEntry::@9
  __b9:
    // [156] (word) print_word::w#4 ← *((word*)(byte*) printEntry::entry#10 + (byte) $c) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #$c
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [157] call print_word 
    // [201] phi from printEntry::@9 to print_word [phi:printEntry::@9->print_word]
  print_word_from___b9:
    // [201] phi (word) print_word::w#5 = (word) print_word::w#4 [phi:printEntry::@9->print_word#0] -- register_copy 
    jsr print_word
    jmp __b30
    // printEntry::@30
  __b30:
    // [158] (byte*) print_line_cursor#166 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [159] call print_ln 
    // [90] phi from printEntry::@30 to print_ln [phi:printEntry::@30->print_ln]
  print_ln_from___b30:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@30->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#166 [phi:printEntry::@30->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b31
    // printEntry::@31
  __b31:
    // [160] (byte*) print_char_cursor#218 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [161] call print_str 
    // [83] phi from printEntry::@31 to print_str [phi:printEntry::@31->print_str]
  print_str_from___b31:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#218 [phi:printEntry::@31->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str9 [phi:printEntry::@31->print_str#1] -- pbuz1=pbuc1 
    lda #<str9
    sta.z print_str.str
    lda #>str9
    sta.z print_str.str+1
    jsr print_str
    // [162] phi from printEntry::@31 to printEntry::entryBAddrLo1 [phi:printEntry::@31->printEntry::entryBAddrLo1]
  entryBAddrLo1_from___b31:
    jmp entryBAddrLo1
    // printEntry::entryBAddrLo1
  entryBAddrLo1:
    jmp __b10
    // printEntry::@10
  __b10:
    // [163] (byte) print_byte::b#6 ← *((byte*) printEntry::entry#10 + (byte) $e) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$e
    lda (entry),y
    tax
    // [164] call print_byte 
    // [189] phi from printEntry::@10 to print_byte [phi:printEntry::@10->print_byte]
  print_byte_from___b10:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@10->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#6 [phi:printEntry::@10->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b32
    // printEntry::@32
  __b32:
    // [165] (byte*) print_line_cursor#167 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [166] call print_ln 
    // [90] phi from printEntry::@32 to print_ln [phi:printEntry::@32->print_ln]
  print_ln_from___b32:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@32->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#167 [phi:printEntry::@32->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b33
    // printEntry::@33
  __b33:
    // [167] (byte*) print_char_cursor#219 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [168] call print_str 
    // [83] phi from printEntry::@33 to print_str [phi:printEntry::@33->print_str]
  print_str_from___b33:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#219 [phi:printEntry::@33->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str10 [phi:printEntry::@33->print_str#1] -- pbuz1=pbuc1 
    lda #<str10
    sta.z print_str.str
    lda #>str10
    sta.z print_str.str+1
    jsr print_str
    // [169] phi from printEntry::@33 to printEntry::entryBAddrHi1 [phi:printEntry::@33->printEntry::entryBAddrHi1]
  entryBAddrHi1_from___b33:
    jmp entryBAddrHi1
    // printEntry::entryBAddrHi1
  entryBAddrHi1:
    jmp __b11
    // printEntry::@11
  __b11:
    // [170] (byte) print_byte::b#7 ← *((byte*) printEntry::entry#10 + (byte) $f) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$f
    lda (entry),y
    tax
    // [171] call print_byte 
    // [189] phi from printEntry::@11 to print_byte [phi:printEntry::@11->print_byte]
  print_byte_from___b11:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@11->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#7 [phi:printEntry::@11->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b34
    // printEntry::@34
  __b34:
    // [172] (byte*) print_line_cursor#168 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [173] call print_ln 
    // [90] phi from printEntry::@34 to print_ln [phi:printEntry::@34->print_ln]
  print_ln_from___b34:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@34->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#168 [phi:printEntry::@34->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b35
    // printEntry::@35
  __b35:
    // [174] (byte*) print_char_cursor#220 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [175] call print_str 
    // [83] phi from printEntry::@35 to print_str [phi:printEntry::@35->print_str]
  print_str_from___b35:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#220 [phi:printEntry::@35->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str11 [phi:printEntry::@35->print_str#1] -- pbuz1=pbuc1 
    lda #<str11
    sta.z print_str.str
    lda #>str11
    sta.z print_str.str+1
    jsr print_str
    // [176] phi from printEntry::@35 to printEntry::entryTHi1 [phi:printEntry::@35->printEntry::entryTHi1]
  entryTHi1_from___b35:
    jmp entryTHi1
    // printEntry::entryTHi1
  entryTHi1:
    jmp __b12
    // printEntry::@12
  __b12:
    // [177] (byte) print_byte::b#8 ← *((byte*) printEntry::entry#10 + (byte) $10) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$10
    lda (entry),y
    tax
    // [178] call print_byte 
    // [189] phi from printEntry::@12 to print_byte [phi:printEntry::@12->print_byte]
  print_byte_from___b12:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@12->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#8 [phi:printEntry::@12->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b36
    // printEntry::@36
  __b36:
    // [179] (byte*) print_line_cursor#169 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [180] call print_ln 
    // [90] phi from printEntry::@36 to print_ln [phi:printEntry::@36->print_ln]
  print_ln_from___b36:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@36->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#169 [phi:printEntry::@36->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __b37
    // printEntry::@37
  __b37:
    // [181] (byte*) print_char_cursor#221 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [182] call print_str 
    // [83] phi from printEntry::@37 to print_str [phi:printEntry::@37->print_str]
  print_str_from___b37:
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#221 [phi:printEntry::@37->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str12 [phi:printEntry::@37->print_str#1] -- pbuz1=pbuc1 
    lda #<str12
    sta.z print_str.str
    lda #>str12
    sta.z print_str.str+1
    jsr print_str
    // [183] phi from printEntry::@37 to printEntry::entryTLo1 [phi:printEntry::@37->printEntry::entryTLo1]
  entryTLo1_from___b37:
    jmp entryTLo1
    // printEntry::entryTLo1
  entryTLo1:
    jmp __b13
    // printEntry::@13
  __b13:
    // [184] (byte) print_byte::b#9 ← *((byte*) printEntry::entry#10 + (byte) $11) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$11
    lda (entry),y
    tax
    // [185] call print_byte 
    // [189] phi from printEntry::@13 to print_byte [phi:printEntry::@13->print_byte]
  print_byte_from___b13:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@13->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#9 [phi:printEntry::@13->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b38
    // printEntry::@38
  __b38:
    // [186] (byte*) print_line_cursor#170 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [187] call print_ln 
    // [90] phi from printEntry::@38 to print_ln [phi:printEntry::@38->print_ln]
  print_ln_from___b38:
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@38->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#170 [phi:printEntry::@38->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // printEntry::@return
  __breturn:
    // [188] return 
    rts
    str: .text "bufdisk   "
    .byte 0
    str1: .text "bufedit   "
    .byte 0
    str2: .text "tslen     "
    .byte 0
    str3: .text "tsorder   "
    .byte 0
    str4: .text "tlastlink   "
    .byte 0
    str5: .text "slastlink   "
    .byte 0
    str6: .text "bflag       "
    .byte 0
    str7: .text "berror      "
    .byte 0
    str8: .text "ucross    "
    .byte 0
    str9: .text "baddrlo     "
    .byte 0
    str10: .text "baddrhi     "
    .byte 0
    str11: .text "thi         "
    .byte 0
    str12: .text "tlo         "
    .byte 0
}
  // print_byte
// Print a byte as HEX
// print_byte(byte register(X) b)
print_byte: {
    // [190] (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (byte) 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [191] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [192] call print_char 
    // [197] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
    // [197] phi (byte*) print_char_cursor#82 = (byte*) print_char_cursor#145 [phi:print_byte->print_char#0] -- register_copy 
    // [197] phi (byte) print_char::ch#2 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_byte::@1
  __b1:
    // [193] (byte~) print_byte::$2 ← (byte) print_byte::b#10 & (byte) $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // [194] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2) -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [195] call print_char 
    // [197] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from___b1:
    // [197] phi (byte*) print_char_cursor#82 = (byte*) print_char_cursor#11 [phi:print_byte::@1->print_char#0] -- register_copy 
    // [197] phi (byte) print_char::ch#2 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_byte::@return
  __breturn:
    // [196] return 
    rts
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // [198] *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // [199] (byte*) print_char_cursor#11 ← ++ (byte*) print_char_cursor#82 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [200] return 
    rts
}
  // print_word
// Print a word as HEX
// print_word(word zeropage($a) w)
print_word: {
    .label w = $a
    // [202] (byte) print_byte::b#0 ← > (word) print_word::w#5 -- vbuxx=_hi_vwuz1 
    lda.z w+1
    tax
    // [203] call print_byte 
    // [189] phi from print_word to print_byte [phi:print_word->print_byte]
  print_byte_from_print_word:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:print_word->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#0 [phi:print_word->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __b1
    // print_word::@1
  __b1:
    // [204] (byte) print_byte::b#1 ← < (word) print_word::w#5 -- vbuxx=_lo_vwuz1 
    lda.z w
    tax
    // [205] call print_byte 
    // [189] phi from print_word::@1 to print_byte [phi:print_word::@1->print_byte]
  print_byte_from___b1:
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#11 [phi:print_word::@1->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#1 [phi:print_word::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp __breturn
    // print_word::@return
  __breturn:
    // [206] return 
    rts
}
  // initEntry
// Set all values in the passed struct
// Sets the values to n, n+1, n... to help test that everything works as intended
// initEntry(byte* zeropage(4) entry, byte register(X) n)
initEntry: {
    .label __1 = 8
    .label __3 = $a
    .label __5 = $c
    .label __7 = $e
    .label __17 = $10
    .label entry = 4
    // [208] phi from initEntry to initEntry::entryBufDisk1 [phi:initEntry->initEntry::entryBufDisk1]
  entryBufDisk1_from_initEntry:
    jmp entryBufDisk1
    // initEntry::entryBufDisk1
  entryBufDisk1:
    jmp __b1
    // initEntry::@1
  __b1:
    // [209] (word~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$1111
    sta.z __1
    lda #>$1111
    adc #0
    sta.z __1+1
    // [210] *((byte**)(byte*) initEntry::entry#10) ← (byte*)(word~) initEntry::$1 -- _deref_pptz1=pbuz2 
    ldy #0
    lda.z __1
    sta (entry),y
    iny
    lda.z __1+1
    sta (entry),y
    // [211] phi from initEntry::@1 to initEntry::entryBufEdit1 [phi:initEntry::@1->initEntry::entryBufEdit1]
  entryBufEdit1_from___b1:
    jmp entryBufEdit1
    // initEntry::entryBufEdit1
  entryBufEdit1:
    jmp __b2
    // initEntry::@2
  __b2:
    // [212] (word~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$2222
    sta.z __3
    lda #>$2222
    adc #0
    sta.z __3+1
    // [213] *((byte**)(byte*) initEntry::entry#10 + (byte) 2) ← (byte*)(word~) initEntry::$3 -- pptz1_derefidx_vbuc1=pbuz2 
    ldy #2
    lda.z __3
    sta (entry),y
    iny
    lda.z __3+1
    sta (entry),y
    // [214] phi from initEntry::@2 to initEntry::entryTsLen1 [phi:initEntry::@2->initEntry::entryTsLen1]
  entryTsLen1_from___b2:
    jmp entryTsLen1
    // initEntry::entryTsLen1
  entryTsLen1:
    jmp __b3
    // initEntry::@3
  __b3:
    // [215] (word~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$3333
    sta.z __5
    lda #>$3333
    adc #0
    sta.z __5+1
    // [216] *((word*)(byte*) initEntry::entry#10 + (byte) 4) ← (word~) initEntry::$5 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #4
    lda.z __5
    sta (entry),y
    iny
    lda.z __5+1
    sta (entry),y
    // [217] phi from initEntry::@3 to initEntry::entryTsOrder1 [phi:initEntry::@3->initEntry::entryTsOrder1]
  entryTsOrder1_from___b3:
    jmp entryTsOrder1
    // initEntry::entryTsOrder1
  entryTsOrder1:
    jmp __b4
    // initEntry::@4
  __b4:
    // [218] (word~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$4444
    sta.z __7
    lda #>$4444
    adc #0
    sta.z __7+1
    // [219] *((word**)(byte*) initEntry::entry#10 + (byte) 6) ← (word*)(word~) initEntry::$7 -- pptz1_derefidx_vbuc1=pwuz2 
    ldy #6
    lda.z __7
    sta (entry),y
    iny
    lda.z __7+1
    sta (entry),y
    // [220] phi from initEntry::@4 to initEntry::entryTLastLink1 [phi:initEntry::@4->initEntry::entryTLastLink1]
  entryTLastLink1_from___b4:
    jmp entryTLastLink1
    // initEntry::entryTLastLink1
  entryTLastLink1:
    jmp __b5
    // initEntry::@5
  __b5:
    // [221] (byte~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$55
    // [222] *((byte*) initEntry::entry#10 + (byte) 8) ← (byte~) initEntry::$9 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #8
    sta (entry),y
    // [223] phi from initEntry::@5 to initEntry::entrySLastLink1 [phi:initEntry::@5->initEntry::entrySLastLink1]
  entrySLastLink1_from___b5:
    jmp entrySLastLink1
    // initEntry::entrySLastLink1
  entrySLastLink1:
    jmp __b6
    // initEntry::@6
  __b6:
    // [224] (byte~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$66
    // [225] *((byte*) initEntry::entry#10 + (byte) 9) ← (byte~) initEntry::$11 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #9
    sta (entry),y
    // [226] phi from initEntry::@6 to initEntry::entryBFlag1 [phi:initEntry::@6->initEntry::entryBFlag1]
  entryBFlag1_from___b6:
    jmp entryBFlag1
    // initEntry::entryBFlag1
  entryBFlag1:
    jmp __b7
    // initEntry::@7
  __b7:
    // [227] (byte~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$77
    // [228] *((byte*) initEntry::entry#10 + (byte) $a) ← (byte~) initEntry::$13 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$a
    sta (entry),y
    // [229] phi from initEntry::@7 to initEntry::entryBError1 [phi:initEntry::@7->initEntry::entryBError1]
  entryBError1_from___b7:
    jmp entryBError1
    // initEntry::entryBError1
  entryBError1:
    jmp __b8
    // initEntry::@8
  __b8:
    // [230] (byte~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$88
    // [231] *((byte*) initEntry::entry#10 + (byte) $b) ← (byte~) initEntry::$15 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$b
    sta (entry),y
    // [232] phi from initEntry::@8 to initEntry::entryUCross1 [phi:initEntry::@8->initEntry::entryUCross1]
  entryUCross1_from___b8:
    jmp entryUCross1
    // initEntry::entryUCross1
  entryUCross1:
    jmp __b9
    // initEntry::@9
  __b9:
    // [233] (word~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$9999
    sta.z __17
    lda #>$9999
    adc #0
    sta.z __17+1
    // [234] *((word*)(byte*) initEntry::entry#10 + (byte) $c) ← (word~) initEntry::$17 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #$c
    lda.z __17
    sta (entry),y
    iny
    lda.z __17+1
    sta (entry),y
    // [235] phi from initEntry::@9 to initEntry::entryBAddrLo1 [phi:initEntry::@9->initEntry::entryBAddrLo1]
  entryBAddrLo1_from___b9:
    jmp entryBAddrLo1
    // initEntry::entryBAddrLo1
  entryBAddrLo1:
    jmp __b10
    // initEntry::@10
  __b10:
    // [236] (byte~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$aa
    // [237] *((byte*) initEntry::entry#10 + (byte) $e) ← (byte~) initEntry::$19 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$e
    sta (entry),y
    // [238] phi from initEntry::@10 to initEntry::entryBAddrHi1 [phi:initEntry::@10->initEntry::entryBAddrHi1]
  entryBAddrHi1_from___b10:
    jmp entryBAddrHi1
    // initEntry::entryBAddrHi1
  entryBAddrHi1:
    jmp __b11
    // initEntry::@11
  __b11:
    // [239] (byte~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$bb
    // [240] *((byte*) initEntry::entry#10 + (byte) $f) ← (byte~) initEntry::$21 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$f
    sta (entry),y
    // [241] phi from initEntry::@11 to initEntry::entryTHi1 [phi:initEntry::@11->initEntry::entryTHi1]
  entryTHi1_from___b11:
    jmp entryTHi1
    // initEntry::entryTHi1
  entryTHi1:
    jmp __b12
    // initEntry::@12
  __b12:
    // [242] (byte~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$cc
    // [243] *((byte*) initEntry::entry#10 + (byte) $10) ← (byte~) initEntry::$23 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$10
    sta (entry),y
    // [244] phi from initEntry::@12 to initEntry::entryTLo1 [phi:initEntry::@12->initEntry::entryTLo1]
  entryTLo1_from___b12:
    jmp entryTLo1
    // initEntry::entryTLo1
  entryTLo1:
    jmp __b13
    // initEntry::@13
  __b13:
    // [245] (byte~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$dd
    // [246] *((byte*) initEntry::entry#10 + (byte) $11) ← (byte~) initEntry::$25 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$11
    sta (entry),y
    jmp __breturn
    // initEntry::@return
  __breturn:
    // [247] return 
    rts
}
  // mul8u
// Perform binary multiplication of two unsigned 8-bit bytes into a 16-bit unsigned word
// mul8u(byte register(X) a)
mul8u: {
    .label mb = 8
    .label res = 6
    .label return = 6
    // [249] phi from mul8u to mul8u::@1 [phi:mul8u->mul8u::@1]
  __b1_from_mul8u:
    // [249] phi (word) mul8u::mb#2 = (const byte) SIZEOF_ENTRY [phi:mul8u->mul8u::@1#0] -- vwuz1=vbuc1 
    lda #<SIZEOF_ENTRY
    sta.z mb
    lda #>SIZEOF_ENTRY
    sta.z mb+1
    // [249] phi (word) mul8u::res#2 = (byte) 0 [phi:mul8u->mul8u::@1#1] -- vwuz1=vbuc1 
    lda #<0
    sta.z res
    lda #>0
    sta.z res+1
    // [249] phi (byte) mul8u::a#3 = (byte) mul8u::a#6 [phi:mul8u->mul8u::@1#2] -- register_copy 
    jmp __b1
    // mul8u::@1
  __b1:
    // [250] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b2
    jmp __breturn
    // mul8u::@return
  __breturn:
    // [251] return 
    rts
    // mul8u::@2
  __b2:
    // [252] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1 -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #1
    // [253] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3_from___b2
    jmp __b4
    // mul8u::@4
  __b4:
    // [254] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    // [255] phi from mul8u::@2 mul8u::@4 to mul8u::@3 [phi:mul8u::@2/mul8u::@4->mul8u::@3]
  __b3_from___b2:
  __b3_from___b4:
    // [255] phi (word) mul8u::res#6 = (word) mul8u::res#2 [phi:mul8u::@2/mul8u::@4->mul8u::@3#0] -- register_copy 
    jmp __b3
    // mul8u::@3
  __b3:
    // [256] (byte) mul8u::a#0 ← (byte) mul8u::a#3 >> (byte) 1 -- vbuxx=vbuxx_ror_1 
    txa
    lsr
    tax
    // [257] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1 -- vwuz1=vwuz1_rol_1 
    asl.z mb
    rol.z mb+1
    // [249] phi from mul8u::@3 to mul8u::@1 [phi:mul8u::@3->mul8u::@1]
  __b1_from___b3:
    // [249] phi (word) mul8u::mb#2 = (word) mul8u::mb#1 [phi:mul8u::@3->mul8u::@1#0] -- register_copy 
    // [249] phi (word) mul8u::res#2 = (word) mul8u::res#6 [phi:mul8u::@3->mul8u::@1#1] -- register_copy 
    // [249] phi (byte) mul8u::a#3 = (byte) mul8u::a#0 [phi:mul8u::@3->mul8u::@1#2] -- register_copy 
    jmp __b1
}
  // keyboard_init
// Initialize keyboard reading by setting CIA#$ Data Direction Registers
keyboard_init: {
    // [258] *((const byte*) CIA1_PORT_A_DDR) ← (byte) $ff -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Write Mode
    lda #$ff
    sta CIA1_PORT_A_DDR
    // [259] *((const byte*) CIA1_PORT_B_DDR) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Read Mode
    lda #0
    sta CIA1_PORT_B_DDR
    jmp __breturn
    // keyboard_init::@return
  __breturn:
    // [260] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // Keyboard row bitmask as expected by CIA#1 Port A when reading a specific keyboard matrix row (rows are numbered 0-7)
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  // Keyboard matrix column bitmasks for a specific keybooard matrix column when reading the keyboard. (columns are numbered 0-7)
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  // All files
  files: .fill MAX_FILES*SIZEOF_ENTRY, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __bend
Removing instruction jmp fileEntry1
Removing instruction jmp __b6
Removing instruction jmp fileEntry2
Removing instruction jmp __b7
Removing instruction jmp __b5
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __b1
Removing instruction jmp __b16
Removing instruction jmp __b2
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __b3
Removing instruction jmp __b23
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp entryBufDisk1
Removing instruction jmp __b1
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp entryBufEdit1
Removing instruction jmp __b2
Removing instruction jmp __b16
Removing instruction jmp __b17
Removing instruction jmp entryTsLen1
Removing instruction jmp __b3
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp entryTsOrder1
Removing instruction jmp __b4
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp entryTLastLink1
Removing instruction jmp __b5
Removing instruction jmp __b22
Removing instruction jmp __b23
Removing instruction jmp entrySLastLink1
Removing instruction jmp __b6
Removing instruction jmp __b24
Removing instruction jmp __b25
Removing instruction jmp entryBFlag1
Removing instruction jmp __b7
Removing instruction jmp __b26
Removing instruction jmp __b27
Removing instruction jmp entryBError1
Removing instruction jmp __b8
Removing instruction jmp __b28
Removing instruction jmp __b29
Removing instruction jmp entryUCross1
Removing instruction jmp __b9
Removing instruction jmp __b30
Removing instruction jmp __b31
Removing instruction jmp entryBAddrLo1
Removing instruction jmp __b10
Removing instruction jmp __b32
Removing instruction jmp __b33
Removing instruction jmp entryBAddrHi1
Removing instruction jmp __b11
Removing instruction jmp __b34
Removing instruction jmp __b35
Removing instruction jmp entryTHi1
Removing instruction jmp __b12
Removing instruction jmp __b36
Removing instruction jmp __b37
Removing instruction jmp entryTLo1
Removing instruction jmp __b13
Removing instruction jmp __b38
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp entryBufDisk1
Removing instruction jmp __b1
Removing instruction jmp entryBufEdit1
Removing instruction jmp __b2
Removing instruction jmp entryTsLen1
Removing instruction jmp __b3
Removing instruction jmp entryTsOrder1
Removing instruction jmp __b4
Removing instruction jmp entryTLastLink1
Removing instruction jmp __b5
Removing instruction jmp entrySLastLink1
Removing instruction jmp __b6
Removing instruction jmp entryBFlag1
Removing instruction jmp __b7
Removing instruction jmp entryBError1
Removing instruction jmp __b8
Removing instruction jmp entryUCross1
Removing instruction jmp __b9
Removing instruction jmp entryBAddrLo1
Removing instruction jmp __b10
Removing instruction jmp entryBAddrHi1
Removing instruction jmp __b11
Removing instruction jmp entryTHi1
Removing instruction jmp __b12
Removing instruction jmp entryTLo1
Removing instruction jmp __b13
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction ldy #0
Removing instruction lda.z print_line_cursor+1
Removing instruction lda #>0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __bbegin with __b1
Replacing label __b1_from___b16 with __b1
Replacing label __b3_from___b23 with __b3
Replacing label __b1_from___b2 with __b1
Replacing label __b1_from___b2 with __b1
Replacing label __b3_from___b2 with __b3
Removing instruction __bbegin:
Removing instruction __b1_from___bbegin:
Removing instruction main_from___b1:
Removing instruction __bend_from___b1:
Removing instruction fileEntry1_from_main:
Removing instruction mul8u_from_fileEntry1:
Removing instruction fileEntry2_from___b6:
Removing instruction mul8u_from_fileEntry2:
Removing instruction __b9_from___b8:
Removing instruction print_cls_from___b9:
Removing instruction __b10_from___b9:
Removing instruction print_str_from___b10:
Removing instruction __b11_from___b10:
Removing instruction print_ln_from___b11:
Removing instruction printEntry_from___b13:
Removing instruction __b1_from___b15:
Removing instruction __b1_from___b16:
Removing instruction keyboard_key_pressed_from___b1:
Removing instruction __b2_from___b16:
Removing instruction print_cls_from___b2:
Removing instruction __b17_from___b2:
Removing instruction print_str_from___b17:
Removing instruction __b18_from___b17:
Removing instruction print_ln_from___b18:
Removing instruction __b3_from___b22:
Removing instruction __b3_from___b23:
Removing instruction keyboard_key_pressed_from___b3:
Removing instruction __b4_from___b23:
Removing instruction print_cls_from___b4:
Removing instruction __b1_from_print_str:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_print_ln:
Removing instruction __b1_from___b2:
Removing instruction entryBufDisk1_from_printEntry:
Removing instruction entryBufDisk1:
Removing instruction entryBufEdit1_from___b15:
Removing instruction entryBufEdit1:
Removing instruction entryTsLen1_from___b17:
Removing instruction entryTsLen1:
Removing instruction entryTsOrder1_from___b19:
Removing instruction entryTsOrder1:
Removing instruction entryTLastLink1_from___b21:
Removing instruction entryTLastLink1:
Removing instruction entrySLastLink1_from___b23:
Removing instruction entrySLastLink1:
Removing instruction entryBFlag1_from___b25:
Removing instruction entryBFlag1:
Removing instruction entryBError1_from___b27:
Removing instruction entryBError1:
Removing instruction entryUCross1_from___b29:
Removing instruction entryUCross1:
Removing instruction entryBAddrLo1_from___b31:
Removing instruction entryBAddrLo1:
Removing instruction entryBAddrHi1_from___b33:
Removing instruction entryBAddrHi1:
Removing instruction entryTHi1_from___b35:
Removing instruction entryTHi1:
Removing instruction entryTLo1_from___b37:
Removing instruction entryTLo1:
Removing instruction entryBufDisk1_from_initEntry:
Removing instruction entryBufDisk1:
Removing instruction entryBufEdit1_from___b1:
Removing instruction entryBufEdit1:
Removing instruction entryTsLen1_from___b2:
Removing instruction entryTsLen1:
Removing instruction entryTsOrder1_from___b3:
Removing instruction entryTsOrder1:
Removing instruction entryTLastLink1_from___b4:
Removing instruction entryTLastLink1:
Removing instruction entrySLastLink1_from___b5:
Removing instruction entrySLastLink1:
Removing instruction entryBFlag1_from___b6:
Removing instruction entryBFlag1:
Removing instruction entryBError1_from___b7:
Removing instruction entryBError1:
Removing instruction entryUCross1_from___b8:
Removing instruction entryUCross1:
Removing instruction entryBAddrLo1_from___b9:
Removing instruction entryBAddrLo1:
Removing instruction entryBAddrHi1_from___b10:
Removing instruction entryBAddrHi1:
Removing instruction entryTHi1_from___b11:
Removing instruction entryTHi1:
Removing instruction entryTLo1_from___b12:
Removing instruction entryTLo1:
Removing instruction __b3_from___b2:
Removing instruction __b3_from___b4:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __bend:
Removing instruction fileEntry1:
Removing instruction __b6:
Removing instruction fileEntry2:
Removing instruction __b7:
Removing instruction __b5:
Removing instruction initEntry_from___b5:
Removing instruction __b8:
Removing instruction initEntry_from___b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction print_ln_from___b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction print_ln_from___b14:
Removing instruction __b15:
Removing instruction print_str_from___b15:
Removing instruction __b16:
Removing instruction __b2:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b19:
Removing instruction print_ln_from___b19:
Removing instruction __b20:
Removing instruction printEntry_from___b20:
Removing instruction __b21:
Removing instruction print_ln_from___b21:
Removing instruction __b22:
Removing instruction print_str_from___b22:
Removing instruction __b23:
Removing instruction __b4:
Removing instruction __breturn:
Removing instruction memset_from_print_cls:
Removing instruction __breturn:
Removing instruction __b1_from_memset:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_str_from_printEntry:
Removing instruction __b1:
Removing instruction print_word_from___b1:
Removing instruction __b14:
Removing instruction print_ln_from___b14:
Removing instruction __b15:
Removing instruction print_str_from___b15:
Removing instruction __b2:
Removing instruction print_word_from___b2:
Removing instruction __b16:
Removing instruction print_ln_from___b16:
Removing instruction __b17:
Removing instruction print_str_from___b17:
Removing instruction __b3:
Removing instruction print_word_from___b3:
Removing instruction __b18:
Removing instruction print_ln_from___b18:
Removing instruction __b19:
Removing instruction print_str_from___b19:
Removing instruction __b4:
Removing instruction print_word_from___b4:
Removing instruction __b20:
Removing instruction print_ln_from___b20:
Removing instruction __b21:
Removing instruction print_str_from___b21:
Removing instruction __b5:
Removing instruction print_byte_from___b5:
Removing instruction __b22:
Removing instruction print_ln_from___b22:
Removing instruction __b23:
Removing instruction print_str_from___b23:
Removing instruction __b6:
Removing instruction print_byte_from___b6:
Removing instruction __b24:
Removing instruction print_ln_from___b24:
Removing instruction __b25:
Removing instruction print_str_from___b25:
Removing instruction __b7:
Removing instruction print_byte_from___b7:
Removing instruction __b26:
Removing instruction print_ln_from___b26:
Removing instruction __b27:
Removing instruction print_str_from___b27:
Removing instruction __b8:
Removing instruction print_byte_from___b8:
Removing instruction __b28:
Removing instruction print_ln_from___b28:
Removing instruction __b29:
Removing instruction print_str_from___b29:
Removing instruction __b9:
Removing instruction print_word_from___b9:
Removing instruction __b30:
Removing instruction print_ln_from___b30:
Removing instruction __b31:
Removing instruction print_str_from___b31:
Removing instruction __b10:
Removing instruction print_byte_from___b10:
Removing instruction __b32:
Removing instruction print_ln_from___b32:
Removing instruction __b33:
Removing instruction print_str_from___b33:
Removing instruction __b11:
Removing instruction print_byte_from___b11:
Removing instruction __b34:
Removing instruction print_ln_from___b34:
Removing instruction __b35:
Removing instruction print_str_from___b35:
Removing instruction __b12:
Removing instruction print_byte_from___b12:
Removing instruction __b36:
Removing instruction print_ln_from___b36:
Removing instruction __b37:
Removing instruction print_str_from___b37:
Removing instruction __b13:
Removing instruction print_byte_from___b13:
Removing instruction __b38:
Removing instruction print_ln_from___b38:
Removing instruction __breturn:
Removing instruction print_char_from_print_byte:
Removing instruction __b1:
Removing instruction print_char_from___b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_byte_from_print_word:
Removing instruction __b1:
Removing instruction print_byte_from___b1:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b13:
Removing instruction __breturn:
Removing instruction __b1_from_mul8u:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b1_from___b3:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Updating BasicUpstart to call main directly
Removing instruction jsr main
Succesful ASM optimization Pass5SkipBegin
Removing instruction __b1:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
(label) @1
(label) @begin
(label) @end
(const byte*) CIA1_PORT_A = (byte*) 56320
(const byte*) CIA1_PORT_A_DDR = (byte*) 56322
(const byte*) CIA1_PORT_B = (byte*) 56321
(const byte*) CIA1_PORT_B_DDR = (byte*) 56323
(const byte) KEY_SPACE = (number) $3c
(const byte) MAX_FILES = (number) $90
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte) SIZEOF_ENTRY = (number) $12
(const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files = { fill( (word)MAX_FILES*SIZEOF_ENTRY, 0) }
(void()) initEntry((byte*) initEntry::entry , (byte) initEntry::n)
(word~) initEntry::$1 zp[2]:8 2.0
(byte~) initEntry::$11 reg byte a 4.0
(byte~) initEntry::$13 reg byte a 4.0
(byte~) initEntry::$15 reg byte a 4.0
(word~) initEntry::$17 zp[2]:16 4.0
(byte~) initEntry::$19 reg byte a 4.0
(byte~) initEntry::$21 reg byte a 4.0
(byte~) initEntry::$23 reg byte a 4.0
(byte~) initEntry::$25 reg byte a 4.0
(word~) initEntry::$3 zp[2]:10 2.0
(word~) initEntry::$5 zp[2]:12 4.0
(word~) initEntry::$7 zp[2]:14 2.0
(byte~) initEntry::$9 reg byte a 4.0
(label) initEntry::@1
(label) initEntry::@10
(label) initEntry::@11
(label) initEntry::@12
(label) initEntry::@13
(label) initEntry::@2
(label) initEntry::@3
(label) initEntry::@4
(label) initEntry::@5
(label) initEntry::@6
(label) initEntry::@7
(label) initEntry::@8
(label) initEntry::@9
(label) initEntry::@return
(byte*) initEntry::entry
(byte*) initEntry::entry#0 entry zp[2]:4 4.0
(byte*) initEntry::entry#1 entry zp[2]:4 4.0
(byte*) initEntry::entry#10 entry zp[2]:4 0.5128205128205128
(label) initEntry::entryBAddrHi1
(byte*) initEntry::entryBAddrHi1_entry
(byte*) initEntry::entryBAddrHi1_return
(label) initEntry::entryBAddrLo1
(byte*) initEntry::entryBAddrLo1_entry
(byte*) initEntry::entryBAddrLo1_return
(label) initEntry::entryBError1
(byte*) initEntry::entryBError1_entry
(byte*) initEntry::entryBError1_return
(label) initEntry::entryBFlag1
(byte*) initEntry::entryBFlag1_entry
(byte*) initEntry::entryBFlag1_return
(label) initEntry::entryBufDisk1
(byte*) initEntry::entryBufDisk1_entry
(byte**) initEntry::entryBufDisk1_return
(label) initEntry::entryBufEdit1
(byte*) initEntry::entryBufEdit1_entry
(byte**) initEntry::entryBufEdit1_return
(label) initEntry::entrySLastLink1
(byte*) initEntry::entrySLastLink1_entry
(byte*) initEntry::entrySLastLink1_return
(label) initEntry::entryTHi1
(byte*) initEntry::entryTHi1_entry
(byte*) initEntry::entryTHi1_return
(label) initEntry::entryTLastLink1
(byte*) initEntry::entryTLastLink1_entry
(byte*) initEntry::entryTLastLink1_return
(label) initEntry::entryTLo1
(byte*) initEntry::entryTLo1_entry
(byte*) initEntry::entryTLo1_return
(label) initEntry::entryTsLen1
(byte*) initEntry::entryTsLen1_entry
(word*) initEntry::entryTsLen1_return
(label) initEntry::entryTsOrder1
(byte*) initEntry::entryTsOrder1_entry
(word**) initEntry::entryTsOrder1_return
(label) initEntry::entryUCross1
(byte*) initEntry::entryUCross1_entry
(word*) initEntry::entryUCross1_return
(byte) initEntry::n
(byte) initEntry::n#10 reg byte x 0.6842105263157894
(void()) keyboard_init()
(label) keyboard_init::@return
(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
(byte~) keyboard_key_pressed::$2 reg byte a 4.0
(label) keyboard_key_pressed::@1
(label) keyboard_key_pressed::@return
(byte) keyboard_key_pressed::colidx
(const byte) keyboard_key_pressed::colidx#0 colidx = (const byte) KEY_SPACE&(byte) 7
(byte) keyboard_key_pressed::key
(byte) keyboard_key_pressed::return
(byte) keyboard_key_pressed::return#0 reg byte a 6.0
(byte) keyboard_key_pressed::return#2 reg byte a 22.0
(byte) keyboard_key_pressed::return#3 reg byte a 22.0
(byte) keyboard_key_pressed::rowidx
(const byte) keyboard_key_pressed::rowidx#0 rowidx = (const byte) KEY_SPACE>>(byte) 3
(const byte[8]) keyboard_matrix_col_bitmask = { (byte) 1, (byte) 2, (byte) 4, (byte) 8, (byte) $10, (byte) $20, (byte) $40, (byte) $80 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 reg byte a 1.3333333333333333
(byte) keyboard_matrix_read::return#2 reg byte a 4.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(const byte[8]) keyboard_matrix_row_bitmask = { (byte) $fe, (byte) $fd, (byte) $fb, (byte) $f7, (byte) $ef, (byte) $df, (byte) $bf, (byte) $7f }
(void()) main()
(byte~) main::$20 reg byte a 22.0
(byte~) main::$22 reg byte a 22.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(byte*) main::entry1
(byte*) main::entry1#0 entry1 zp[2]:2 0.3157894736842105
(byte*) main::entry2
(byte*) main::entry2#0 entry2 zp[2]:6 0.17142857142857143
(label) main::fileEntry1
(word~) main::fileEntry1_$0 zp[2]:2 4.0
(byte) main::fileEntry1_idx
(const byte) main::fileEntry1_idx#0 fileEntry1_idx = (byte) 1
(byte*) main::fileEntry1_return
(label) main::fileEntry2
(word~) main::fileEntry2_$0 zp[2]:6 4.0
(byte) main::fileEntry2_idx
(const byte) main::fileEntry2_idx#0 fileEntry2_idx = (byte) 2
(byte*) main::fileEntry2_return
(const string) main::str = (string) "** entry 1 **"
(const string) main::str1 = (string) "- press space -"
(const string) main::str2 = (string) "** entry 2 **"
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:10 22.0
(byte*) memset::dst#2 dst zp[2]:10 14.666666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(byte*) 1024
(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
(byte~) mul8u::$1 reg byte a 22.0
(label) mul8u::@1
(label) mul8u::@2
(label) mul8u::@3
(label) mul8u::@4
(label) mul8u::@return
(byte) mul8u::a
(byte) mul8u::a#0 reg byte x 11.0
(byte) mul8u::a#3 reg byte x 7.666666666666666
(byte) mul8u::a#6 reg byte x 2.0
(byte) mul8u::b
(word) mul8u::mb
(word) mul8u::mb#1 mb zp[2]:8 22.0
(word) mul8u::mb#2 mb zp[2]:8 4.714285714285714
(word) mul8u::res
(word) mul8u::res#1 res zp[2]:6 22.0
(word) mul8u::res#2 res zp[2]:6 5.285714285714286
(word) mul8u::res#6 res zp[2]:6 11.0
(word) mul8u::return
(word) mul8u::return#2 return zp[2]:6 4.0
(word) mul8u::return#3 return zp[2]:6 4.0
(void()) printEntry((byte*) printEntry::entry)
(label) printEntry::@1
(label) printEntry::@10
(label) printEntry::@11
(label) printEntry::@12
(label) printEntry::@13
(label) printEntry::@14
(label) printEntry::@15
(label) printEntry::@16
(label) printEntry::@17
(label) printEntry::@18
(label) printEntry::@19
(label) printEntry::@2
(label) printEntry::@20
(label) printEntry::@21
(label) printEntry::@22
(label) printEntry::@23
(label) printEntry::@24
(label) printEntry::@25
(label) printEntry::@26
(label) printEntry::@27
(label) printEntry::@28
(label) printEntry::@29
(label) printEntry::@3
(label) printEntry::@30
(label) printEntry::@31
(label) printEntry::@32
(label) printEntry::@33
(label) printEntry::@34
(label) printEntry::@35
(label) printEntry::@36
(label) printEntry::@37
(label) printEntry::@38
(label) printEntry::@4
(label) printEntry::@5
(label) printEntry::@6
(label) printEntry::@7
(label) printEntry::@8
(label) printEntry::@9
(label) printEntry::@return
(byte*) printEntry::entry
(byte*) printEntry::entry#0 entry zp[2]:2 4.0
(byte*) printEntry::entry#1 entry zp[2]:2 4.0
(byte*) printEntry::entry#10 entry zp[2]:2 0.22727272727272732
(label) printEntry::entryBAddrHi1
(byte*) printEntry::entryBAddrHi1_entry
(byte*) printEntry::entryBAddrHi1_return
(label) printEntry::entryBAddrLo1
(byte*) printEntry::entryBAddrLo1_entry
(byte*) printEntry::entryBAddrLo1_return
(label) printEntry::entryBError1
(byte*) printEntry::entryBError1_entry
(byte*) printEntry::entryBError1_return
(label) printEntry::entryBFlag1
(byte*) printEntry::entryBFlag1_entry
(byte*) printEntry::entryBFlag1_return
(label) printEntry::entryBufDisk1
(byte*) printEntry::entryBufDisk1_entry
(byte**) printEntry::entryBufDisk1_return
(label) printEntry::entryBufEdit1
(byte*) printEntry::entryBufEdit1_entry
(byte**) printEntry::entryBufEdit1_return
(label) printEntry::entrySLastLink1
(byte*) printEntry::entrySLastLink1_entry
(byte*) printEntry::entrySLastLink1_return
(label) printEntry::entryTHi1
(byte*) printEntry::entryTHi1_entry
(byte*) printEntry::entryTHi1_return
(label) printEntry::entryTLastLink1
(byte*) printEntry::entryTLastLink1_entry
(byte*) printEntry::entryTLastLink1_return
(label) printEntry::entryTLo1
(byte*) printEntry::entryTLo1_entry
(byte*) printEntry::entryTLo1_return
(label) printEntry::entryTsLen1
(byte*) printEntry::entryTsLen1_entry
(word*) printEntry::entryTsLen1_return
(label) printEntry::entryTsOrder1
(byte*) printEntry::entryTsOrder1_entry
(word**) printEntry::entryTsOrder1_return
(label) printEntry::entryUCross1
(byte*) printEntry::entryUCross1_entry
(word*) printEntry::entryUCross1_return
(const string) printEntry::str = (string) "bufdisk   "
(const string) printEntry::str1 = (string) "bufedit   "
(const string) printEntry::str10 = (string) "baddrhi     "
(const string) printEntry::str11 = (string) "thi         "
(const string) printEntry::str12 = (string) "tlo         "
(const string) printEntry::str2 = (string) "tslen     "
(const string) printEntry::str3 = (string) "tsorder   "
(const string) printEntry::str4 = (string) "tlastlink   "
(const string) printEntry::str5 = (string) "slastlink   "
(const string) printEntry::str6 = (string) "bflag       "
(const string) printEntry::str7 = (string) "berror      "
(const string) printEntry::str8 = (string) "ucross    "
(const string) printEntry::str9 = (string) "baddrlo     "
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte x 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 4.0
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#10 reg byte x 6.0
(byte) print_byte::b#2 reg byte x 4.0
(byte) print_byte::b#3 reg byte x 4.0
(byte) print_byte::b#4 reg byte x 4.0
(byte) print_byte::b#5 reg byte x 4.0
(byte) print_byte::b#6 reg byte x 4.0
(byte) print_byte::b#7 reg byte x 4.0
(byte) print_byte::b#8 reg byte x 4.0
(byte) print_byte::b#9 reg byte x 4.0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#2 reg byte a 6.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:4 11.0
(byte*) print_char_cursor#11 print_char_cursor zp[2]:4 0.8648648648648649
(byte*) print_char_cursor#142 print_char_cursor zp[2]:4 1.1632653061224494
(byte*) print_char_cursor#143 print_char_cursor zp[2]:4 9.800000000000002
(byte*) print_char_cursor#145 print_char_cursor zp[2]:4 7.333333333333334
(byte*) print_char_cursor#164 print_char_cursor zp[2]:4 32.0
(byte*) print_char_cursor#207 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#208 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#209 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#210 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#211 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#212 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#213 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#214 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#215 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#216 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#217 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#218 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#219 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#220 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#221 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#225 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#226 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#228 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#229 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#82 print_char_cursor zp[2]:4 4.0
(void()) print_cls()
(label) print_cls::@return
(const byte[]) print_hextab = (string) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#1 print_line_cursor zp[2]:8 1.0824742268041243
(byte*) print_line_cursor#154 print_line_cursor_1 zp[2]:10 2.0
(byte*) print_line_cursor#155 print_line_cursor_1 zp[2]:10 2.0
(byte*) print_line_cursor#156 print_line_cursor_1 zp[2]:10 2.0
(byte*) print_line_cursor#157 print_line_cursor_1 zp[2]:10 2.0
(byte*) print_line_cursor#158 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#159 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#160 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#161 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#162 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#163 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#164 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#165 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#166 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#167 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#168 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#169 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#170 print_line_cursor_1 zp[2]:10 4.0
(byte*) print_line_cursor#172 print_line_cursor_1 zp[2]:10 22.0
(byte*) print_line_cursor#32 print_line_cursor_1 zp[2]:10 24.0
(byte*) print_line_cursor#63 print_line_cursor_1 zp[2]:10 36.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:10 22.0
(byte*) print_str::str#18 str zp[2]:10 11.5
(byte*) print_str::str#20 str zp[2]:10 2.0
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#10 w zp[2]:10 4.0
(word) print_word::w#2 w zp[2]:10 4.0
(word) print_word::w#4 w zp[2]:10 4.0
(word) print_word::w#5 w zp[2]:10 4.666666666666666
(word) print_word::w#7 w zp[2]:10 4.0
(word) print_word::w#8 w zp[2]:10 4.0

zp[2]:2 [ printEntry::entry#10 printEntry::entry#0 printEntry::entry#1 main::entry1#0 main::fileEntry1_$0 ]
reg byte x [ print_byte::b#10 print_byte::b#6 print_byte::b#7 print_byte::b#8 print_byte::b#9 print_byte::b#2 print_byte::b#3 print_byte::b#4 print_byte::b#5 print_byte::b#0 print_byte::b#1 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp[2]:4 [ initEntry::entry#10 initEntry::entry#0 initEntry::entry#1 print_char_cursor#82 print_char_cursor#145 print_char_cursor#143 print_char_cursor#142 print_char_cursor#164 print_char_cursor#207 print_char_cursor#208 print_char_cursor#209 print_char_cursor#210 print_char_cursor#211 print_char_cursor#212 print_char_cursor#213 print_char_cursor#214 print_char_cursor#215 print_char_cursor#216 print_char_cursor#217 print_char_cursor#218 print_char_cursor#219 print_char_cursor#220 print_char_cursor#221 print_char_cursor#1 print_char_cursor#225 print_char_cursor#226 print_char_cursor#228 print_char_cursor#229 print_char_cursor#11 ]
reg byte x [ initEntry::n#10 ]
reg byte x [ mul8u::a#3 mul8u::a#6 mul8u::a#0 ]
zp[2]:6 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 mul8u::return#3 main::fileEntry2_$0 main::entry2#0 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$20 ]
reg byte a [ keyboard_key_pressed::return#3 ]
reg byte a [ main::$22 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ print_byte::$0 ]
reg byte x [ print_byte::$2 ]
zp[2]:8 [ initEntry::$1 print_line_cursor#1 mul8u::mb#2 mul8u::mb#1 ]
zp[2]:10 [ initEntry::$3 print_word::w#5 print_word::w#7 print_word::w#8 print_word::w#2 print_word::w#10 print_word::w#4 print_line_cursor#32 print_line_cursor#63 print_line_cursor#154 print_line_cursor#155 print_line_cursor#156 print_line_cursor#157 print_line_cursor#158 print_line_cursor#159 print_line_cursor#160 print_line_cursor#161 print_line_cursor#162 print_line_cursor#163 print_line_cursor#164 print_line_cursor#165 print_line_cursor#166 print_line_cursor#167 print_line_cursor#168 print_line_cursor#169 print_line_cursor#170 print_line_cursor#172 print_str::str#18 print_str::str#20 print_str::str#0 memset::dst#2 memset::dst#1 ]
zp[2]:12 [ initEntry::$5 ]
zp[2]:14 [ initEntry::$7 ]
reg byte a [ initEntry::$9 ]
reg byte a [ initEntry::$11 ]
reg byte a [ initEntry::$13 ]
reg byte a [ initEntry::$15 ]
zp[2]:16 [ initEntry::$17 ]
reg byte a [ initEntry::$19 ]
reg byte a [ initEntry::$21 ]
reg byte a [ initEntry::$23 ]
reg byte a [ initEntry::$25 ]
reg byte a [ mul8u::$1 ]


FINAL ASSEMBLER
Score: 4108

  // File Comments
// Implementing a semi-struct without the struct keyword by using pointer math and inline functions
//
// struct fileentry {
//    BYTE *bufDisk; // file position in disk buffer.
//    BYTE *bufEdit; // file edits
//    WORD tsLen; // num of sectors
//    TS *tsOrder;
//    BYTE tLastLink;
//    BYTE sLastLink;
//    BYTE bFlag;
//    BYTE bError;
//    WORD uCross; // num of crosslinked sectors
//    BYTE bAddrLo; // start address
//    BYTE bAddrHi;
//    BYTE tHi; // highest track
//    BYTE tLo; // lowest track
//    };
//    typedef struct fileentry ENTRY;
//    ENTRY files[MAX_FILES];
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  // CIA#1 Port A: keyboard matrix columns and joystick #2
  .label CIA1_PORT_A = $dc00
  // CIA#1 Port B: keyboard matrix rows and joystick #1.
  .label CIA1_PORT_B = $dc01
  // CIA #1 Port A data direction register.
  .label CIA1_PORT_A_DDR = $dc02
  // CIA #1 Port B data direction register.
  .label CIA1_PORT_B_DDR = $dc03
  .const KEY_SPACE = $3c
  // The size of a file ENTRY
  .const SIZEOF_ENTRY = $12
  // The maximal number of files
  .const MAX_FILES = $90
  .label print_char_cursor = 4
  .label print_line_cursor = 8
  .label print_line_cursor_1 = $a
  // @begin
  // [1] phi from @begin to @1 [phi:@begin->@1]
  // @1
  // [2] call main 
  // [4] phi from @1 to main [phi:@1->main]
  // [3] phi from @1 to @end [phi:@1->@end]
  // @end
  // main
// Initialize 2 file entries and print them
main: {
    .const fileEntry1_idx = 1
    .const fileEntry2_idx = 2
    .label fileEntry1___0 = 2
    .label fileEntry2___0 = 6
    .label entry1 = 2
    .label entry2 = 6
    // keyboard_init()
    // [5] call keyboard_init 
    jsr keyboard_init
    // [6] phi from main to main::fileEntry1 [phi:main->main::fileEntry1]
    // main::fileEntry1
    // mul8u(idx, SIZEOF_ENTRY)
    // [7] call mul8u 
    // [248] phi from main::fileEntry1 to mul8u [phi:main::fileEntry1->mul8u]
    // [248] phi (byte) mul8u::a#6 = (const byte) main::fileEntry1_idx#0 [phi:main::fileEntry1->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry1_idx
    jsr mul8u
    // mul8u(idx, SIZEOF_ENTRY)
    // [8] (word) mul8u::return#2 ← (word) mul8u::res#2
    // main::@6
    // [9] (word~) main::fileEntry1_$0 ← (word) mul8u::return#2 -- vwuz1=vwuz2 
    lda.z mul8u.return
    sta.z fileEntry1___0
    lda.z mul8u.return+1
    sta.z fileEntry1___0+1
    // files+mul8u(idx, SIZEOF_ENTRY)
    // [10] (byte*) main::entry1#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry1_$0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z entry1
    adc #<files
    sta.z entry1
    lda.z entry1+1
    adc #>files
    sta.z entry1+1
    // [11] phi from main::@6 to main::fileEntry2 [phi:main::@6->main::fileEntry2]
    // main::fileEntry2
    // mul8u(idx, SIZEOF_ENTRY)
    // [12] call mul8u 
    // [248] phi from main::fileEntry2 to mul8u [phi:main::fileEntry2->mul8u]
    // [248] phi (byte) mul8u::a#6 = (const byte) main::fileEntry2_idx#0 [phi:main::fileEntry2->mul8u#0] -- vbuxx=vbuc1 
    ldx #fileEntry2_idx
    jsr mul8u
    // mul8u(idx, SIZEOF_ENTRY)
    // [13] (word) mul8u::return#3 ← (word) mul8u::res#2
    // main::@7
    // [14] (word~) main::fileEntry2_$0 ← (word) mul8u::return#3
    // files+mul8u(idx, SIZEOF_ENTRY)
    // [15] (byte*) main::entry2#0 ← (const byte[(word)MAX_FILES*SIZEOF_ENTRY]) files + (word~) main::fileEntry2_$0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z entry2
    adc #<files
    sta.z entry2
    lda.z entry2+1
    adc #>files
    sta.z entry2+1
    // main::@5
    // initEntry(entry1,0x00)
    // [16] (byte*) initEntry::entry#0 ← (byte*) main::entry1#0 -- pbuz1=pbuz2 
    lda.z entry1
    sta.z initEntry.entry
    lda.z entry1+1
    sta.z initEntry.entry+1
    // [17] call initEntry 
    // [207] phi from main::@5 to initEntry [phi:main::@5->initEntry]
    // [207] phi (byte) initEntry::n#10 = (byte) 0 [phi:main::@5->initEntry#0] -- vbuxx=vbuc1 
    ldx #0
    // [207] phi (byte*) initEntry::entry#10 = (byte*) initEntry::entry#0 [phi:main::@5->initEntry#1] -- register_copy 
    jsr initEntry
    // main::@8
    // initEntry(entry2,0x11)
    // [18] (byte*) initEntry::entry#1 ← (byte*) main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z initEntry.entry
    lda.z entry2+1
    sta.z initEntry.entry+1
    // [19] call initEntry 
    // [207] phi from main::@8 to initEntry [phi:main::@8->initEntry]
    // [207] phi (byte) initEntry::n#10 = (byte) $11 [phi:main::@8->initEntry#0] -- vbuxx=vbuc1 
    ldx #$11
    // [207] phi (byte*) initEntry::entry#10 = (byte*) initEntry::entry#1 [phi:main::@8->initEntry#1] -- register_copy 
    jsr initEntry
    // [20] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
    // main::@9
    // print_cls()
    // [21] call print_cls 
    // [65] phi from main::@9 to print_cls [phi:main::@9->print_cls]
    jsr print_cls
    // [22] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
    // main::@10
    // print_str("** entry 1 **")
    // [23] call print_str 
    // [83] phi from main::@10 to print_str [phi:main::@10->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) 1024 [phi:main::@10->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [83] phi (byte*) print_str::str#20 = (const string) main::str [phi:main::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [24] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
    // main::@11
    // print_ln()
    // [25] call print_ln 
    // [90] phi from main::@11 to print_ln [phi:main::@11->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#142 [phi:main::@11->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) 1024 [phi:main::@11->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor_1
    lda #>$400
    sta.z print_line_cursor_1+1
    jsr print_ln
    // main::@12
    // [26] (byte*) print_line_cursor#154 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [27] (byte*) print_char_cursor#225 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [28] call print_ln 
    // [90] phi from main::@12 to print_ln [phi:main::@12->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#225 [phi:main::@12->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#154 [phi:main::@12->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@13
    // printEntry(entry1)
    // [29] (byte*) printEntry::entry#0 ← (byte*) main::entry1#0
    // [30] call printEntry 
    // [96] phi from main::@13 to printEntry [phi:main::@13->printEntry]
    // [96] phi (byte*) printEntry::entry#10 = (byte*) printEntry::entry#0 [phi:main::@13->printEntry#0] -- register_copy 
    jsr printEntry
    // main::@14
    // [31] (byte*) print_line_cursor#155 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [32] (byte*) print_char_cursor#226 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [33] call print_ln 
    // [90] phi from main::@14 to print_ln [phi:main::@14->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#226 [phi:main::@14->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#155 [phi:main::@14->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@15
    // [34] (byte*) print_char_cursor#207 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("- press space -")
    // [35] call print_str 
    // [83] phi from main::@15 to print_str [phi:main::@15->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#207 [phi:main::@15->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) main::str1 [phi:main::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [36] phi from main::@15 main::@16 to main::@1 [phi:main::@15/main::@16->main::@1]
    // main::@1
  __b1:
    // keyboard_key_pressed(KEY_SPACE)
    // [37] call keyboard_key_pressed 
    // [74] phi from main::@1 to keyboard_key_pressed [phi:main::@1->keyboard_key_pressed]
    jsr keyboard_key_pressed
    // keyboard_key_pressed(KEY_SPACE)
    // [38] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0
    // main::@16
    // [39] (byte~) main::$20 ← (byte) keyboard_key_pressed::return#2
    // while(keyboard_key_pressed(KEY_SPACE)==0)
    // [40] if((byte~) main::$20==(byte) 0) goto main::@1 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b1
    // [41] phi from main::@16 to main::@2 [phi:main::@16->main::@2]
    // main::@2
    // print_cls()
    // [42] call print_cls 
    // [65] phi from main::@2 to print_cls [phi:main::@2->print_cls]
    jsr print_cls
    // [43] phi from main::@2 to main::@17 [phi:main::@2->main::@17]
    // main::@17
    // print_str("** entry 2 **")
    // [44] call print_str 
    // [83] phi from main::@17 to print_str [phi:main::@17->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) 1024 [phi:main::@17->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [83] phi (byte*) print_str::str#20 = (const string) main::str2 [phi:main::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [45] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
    // main::@18
    // print_ln()
    // [46] call print_ln 
    // [90] phi from main::@18 to print_ln [phi:main::@18->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#142 [phi:main::@18->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) 1024 [phi:main::@18->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor_1
    lda #>$400
    sta.z print_line_cursor_1+1
    jsr print_ln
    // main::@19
    // [47] (byte*) print_line_cursor#156 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [48] (byte*) print_char_cursor#228 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [49] call print_ln 
    // [90] phi from main::@19 to print_ln [phi:main::@19->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#228 [phi:main::@19->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#156 [phi:main::@19->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@20
    // printEntry(entry2)
    // [50] (byte*) printEntry::entry#1 ← (byte*) main::entry2#0 -- pbuz1=pbuz2 
    lda.z entry2
    sta.z printEntry.entry
    lda.z entry2+1
    sta.z printEntry.entry+1
    // [51] call printEntry 
    // [96] phi from main::@20 to printEntry [phi:main::@20->printEntry]
    // [96] phi (byte*) printEntry::entry#10 = (byte*) printEntry::entry#1 [phi:main::@20->printEntry#0] -- register_copy 
    jsr printEntry
    // main::@21
    // [52] (byte*) print_line_cursor#157 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // [53] (byte*) print_char_cursor#229 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_ln()
    // [54] call print_ln 
    // [90] phi from main::@21 to print_ln [phi:main::@21->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#229 [phi:main::@21->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#157 [phi:main::@21->print_ln#1] -- register_copy 
    jsr print_ln
    // main::@22
    // [55] (byte*) print_char_cursor#208 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("- press space -")
    // [56] call print_str 
    // [83] phi from main::@22 to print_str [phi:main::@22->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#208 [phi:main::@22->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) main::str1 [phi:main::@22->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [57] phi from main::@22 main::@23 to main::@3 [phi:main::@22/main::@23->main::@3]
    // main::@3
  __b3:
    // keyboard_key_pressed(KEY_SPACE)
    // [58] call keyboard_key_pressed 
    // [74] phi from main::@3 to keyboard_key_pressed [phi:main::@3->keyboard_key_pressed]
    jsr keyboard_key_pressed
    // keyboard_key_pressed(KEY_SPACE)
    // [59] (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#0
    // main::@23
    // [60] (byte~) main::$22 ← (byte) keyboard_key_pressed::return#3
    // while(keyboard_key_pressed(KEY_SPACE)==0)
    // [61] if((byte~) main::$22==(byte) 0) goto main::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3
    // [62] phi from main::@23 to main::@4 [phi:main::@23->main::@4]
    // main::@4
    // print_cls()
    // [63] call print_cls 
    // [65] phi from main::@4 to print_cls [phi:main::@4->print_cls]
    jsr print_cls
    // main::@return
    // }
    // [64] return 
    rts
    str: .text "** entry 1 **"
    .byte 0
    str1: .text "- press space -"
    .byte 0
    str2: .text "** entry 2 **"
    .byte 0
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // memset(print_screen, ' ', 1000)
    // [66] call memset 
    // [68] phi from print_cls to memset [phi:print_cls->memset]
    jsr memset
    // print_cls::@return
    // }
    // [67] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = $400
    .label end = str+num
    .label dst = $a
    // [69] phi from memset to memset::@1 [phi:memset->memset::@1]
    // [69] phi (byte*) memset::dst#2 = (byte*)(const void*) memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    // memset::@1
  __b1:
    // for(char* dst = str; dst!=end; dst++)
    // [70] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    // memset::@return
    // }
    // [71] return 
    rts
    // memset::@2
  __b2:
    // *dst = c
    // [72] *((byte*) memset::dst#2) ← (const byte) memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [73] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [69] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
    // [69] phi (byte*) memset::dst#2 = (byte*) memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // keyboard_key_pressed
// Determines whether a specific key is currently pressed by accessing the matrix directly
// The key is a keyboard code defined from the keyboard matrix by %00rrrccc, where rrr is the row ID (0-7) and ccc is the column ID (0-7)
// All keys exist as as KEY_XXX constants.
// Returns zero if the key is not pressed and a non-zero value if the key is currently pressed
keyboard_key_pressed: {
    .const colidx = KEY_SPACE&7
    .label rowidx = KEY_SPACE>>3
    // keyboard_matrix_read(rowidx)
    // [75] call keyboard_matrix_read 
    jsr keyboard_matrix_read
    // [76] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
    // keyboard_key_pressed::@1
    // [77] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2
    // keyboard_matrix_read(rowidx) & keyboard_matrix_col_bitmask[colidx]
    // [78] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte[8]) keyboard_matrix_col_bitmask+(const byte) keyboard_key_pressed::colidx#0) -- vbuaa=vbuaa_band__deref_pbuc1 
    and keyboard_matrix_col_bitmask+colidx
    // keyboard_key_pressed::@return
    // }
    // [79] return 
    rts
}
  // keyboard_matrix_read
// Read a single row of the keyboard matrix
// The row ID (0-7) of the keyboard matrix row to read. See the C64 key matrix for row IDs.
// Returns the keys pressed on the row as bits according to the C64 key matrix.
// Notice: If the C64 normal interrupt is still running it will occasionally interrupt right between the read & write
// leading to erroneous readings. You must disable kill the normal interrupt or sei/cli around calls to the keyboard matrix reader.
keyboard_matrix_read: {
    // *CIA1_PORT_A = keyboard_matrix_row_bitmask[rowid]
    // [80] *((const byte*) CIA1_PORT_A) ← *((const byte[8]) keyboard_matrix_row_bitmask+(const byte) keyboard_key_pressed::rowidx#0) -- _deref_pbuc1=_deref_pbuc2 
    lda keyboard_matrix_row_bitmask+keyboard_key_pressed.rowidx
    sta CIA1_PORT_A
    // ~*CIA1_PORT_B
    // [81] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B) -- vbuaa=_bnot__deref_pbuc1 
    lda CIA1_PORT_B
    eor #$ff
    // keyboard_matrix_read::@return
    // }
    // [82] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zeropage($a) str)
print_str: {
    .label str = $a
    // [84] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
    // [84] phi (byte*) print_char_cursor#142 = (byte*) print_char_cursor#164 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
    // [84] phi (byte*) print_str::str#18 = (byte*) print_str::str#20 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    // print_str::@1
  __b1:
    // while(*str)
    // [85] if((byte) 0!=*((byte*) print_str::str#18)) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // print_str::@return
    // }
    // [86] return 
    rts
    // print_str::@2
  __b2:
    // *(print_char_cursor++) = *(str++)
    // [87] *((byte*) print_char_cursor#142) ← *((byte*) print_str::str#18) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    sta (print_char_cursor),y
    // *(print_char_cursor++) = *(str++);
    // [88] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#142 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // [89] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#18 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1
}
  // print_ln
// Print a newline
print_ln: {
    // [91] phi from print_ln print_ln::@2 to print_ln::@1 [phi:print_ln/print_ln::@2->print_ln::@1]
    // [91] phi (byte*) print_line_cursor#32 = (byte*) print_line_cursor#63 [phi:print_ln/print_ln::@2->print_ln::@1#0] -- register_copy 
    // print_ln::@1
  __b1:
    // print_line_cursor + $28
    // [92] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#32 + (byte) $28 -- pbuz1=pbuz2_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor_1
    sta.z print_line_cursor
    lda #0
    adc.z print_line_cursor_1+1
    sta.z print_line_cursor+1
    // while (print_line_cursor<print_char_cursor)
    // [93] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#143) goto print_ln::@2 -- pbuz1_lt_pbuz2_then_la1 
    cmp.z print_char_cursor+1
    bcc __b2
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b2
  !:
    // print_ln::@return
    // }
    // [94] return 
    rts
    // print_ln::@2
  __b2:
    // [95] (byte*) print_line_cursor#172 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    jmp __b1
}
  // printEntry
// Print the contents of a file entry
// printEntry(byte* zeropage(2) entry)
printEntry: {
    .label entry = 2
    // [97] (byte*) print_char_cursor#209 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("bufdisk   ")
    // [98] call print_str 
    // [83] phi from printEntry to print_str [phi:printEntry->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#209 [phi:printEntry->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str [phi:printEntry->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [99] phi from printEntry to printEntry::entryBufDisk1 [phi:printEntry->printEntry::entryBufDisk1]
    // printEntry::entryBufDisk1
    // printEntry::@1
    // [100] (word) print_word::w#7 ← (word)*((byte**)(byte*) printEntry::entry#10) -- vwuz1=_deref_pwuz2 
    ldy #0
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // print_word((word)*entryBufDisk(entry))
    // [101] call print_word 
    // [201] phi from printEntry::@1 to print_word [phi:printEntry::@1->print_word]
    // [201] phi (word) print_word::w#5 = (word) print_word::w#7 [phi:printEntry::@1->print_word#0] -- register_copy 
    jsr print_word
    // printEntry::@14
    // [102] (byte*) print_line_cursor#158 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [103] call print_ln 
    // [90] phi from printEntry::@14 to print_ln [phi:printEntry::@14->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@14->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#158 [phi:printEntry::@14->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@15
    // [104] (byte*) print_char_cursor#210 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("bufedit   ")
    // [105] call print_str 
    // [83] phi from printEntry::@15 to print_str [phi:printEntry::@15->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#210 [phi:printEntry::@15->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str1 [phi:printEntry::@15->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // [106] phi from printEntry::@15 to printEntry::entryBufEdit1 [phi:printEntry::@15->printEntry::entryBufEdit1]
    // printEntry::entryBufEdit1
    // printEntry::@2
    // [107] (word) print_word::w#8 ← (word)*((byte**)(byte*) printEntry::entry#10 + (byte) 2) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #2
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // print_word((word)*entryBufEdit(entry))
    // [108] call print_word 
    // [201] phi from printEntry::@2 to print_word [phi:printEntry::@2->print_word]
    // [201] phi (word) print_word::w#5 = (word) print_word::w#8 [phi:printEntry::@2->print_word#0] -- register_copy 
    jsr print_word
    // printEntry::@16
    // [109] (byte*) print_line_cursor#159 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [110] call print_ln 
    // [90] phi from printEntry::@16 to print_ln [phi:printEntry::@16->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@16->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#159 [phi:printEntry::@16->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@17
    // [111] (byte*) print_char_cursor#211 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tslen     ")
    // [112] call print_str 
    // [83] phi from printEntry::@17 to print_str [phi:printEntry::@17->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#211 [phi:printEntry::@17->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str2 [phi:printEntry::@17->print_str#1] -- pbuz1=pbuc1 
    lda #<str2
    sta.z print_str.str
    lda #>str2
    sta.z print_str.str+1
    jsr print_str
    // [113] phi from printEntry::@17 to printEntry::entryTsLen1 [phi:printEntry::@17->printEntry::entryTsLen1]
    // printEntry::entryTsLen1
    // printEntry::@3
    // print_word(*entryTsLen(entry))
    // [114] (word) print_word::w#2 ← *((word*)(byte*) printEntry::entry#10 + (byte) 4) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #4
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [115] call print_word 
    // [201] phi from printEntry::@3 to print_word [phi:printEntry::@3->print_word]
    // [201] phi (word) print_word::w#5 = (word) print_word::w#2 [phi:printEntry::@3->print_word#0] -- register_copy 
    jsr print_word
    // printEntry::@18
    // [116] (byte*) print_line_cursor#160 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [117] call print_ln 
    // [90] phi from printEntry::@18 to print_ln [phi:printEntry::@18->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@18->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#160 [phi:printEntry::@18->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@19
    // [118] (byte*) print_char_cursor#212 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tsorder   ")
    // [119] call print_str 
    // [83] phi from printEntry::@19 to print_str [phi:printEntry::@19->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#212 [phi:printEntry::@19->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str3 [phi:printEntry::@19->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // [120] phi from printEntry::@19 to printEntry::entryTsOrder1 [phi:printEntry::@19->printEntry::entryTsOrder1]
    // printEntry::entryTsOrder1
    // printEntry::@4
    // [121] (word) print_word::w#10 ← (word)*((word**)(byte*) printEntry::entry#10 + (byte) 6) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #6
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // print_word((word)*entryTsOrder(entry))
    // [122] call print_word 
    // [201] phi from printEntry::@4 to print_word [phi:printEntry::@4->print_word]
    // [201] phi (word) print_word::w#5 = (word) print_word::w#10 [phi:printEntry::@4->print_word#0] -- register_copy 
    jsr print_word
    // printEntry::@20
    // [123] (byte*) print_line_cursor#161 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [124] call print_ln 
    // [90] phi from printEntry::@20 to print_ln [phi:printEntry::@20->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@20->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#161 [phi:printEntry::@20->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@21
    // [125] (byte*) print_char_cursor#213 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tlastlink   ")
    // [126] call print_str 
    // [83] phi from printEntry::@21 to print_str [phi:printEntry::@21->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#213 [phi:printEntry::@21->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str4 [phi:printEntry::@21->print_str#1] -- pbuz1=pbuc1 
    lda #<str4
    sta.z print_str.str
    lda #>str4
    sta.z print_str.str+1
    jsr print_str
    // [127] phi from printEntry::@21 to printEntry::entryTLastLink1 [phi:printEntry::@21->printEntry::entryTLastLink1]
    // printEntry::entryTLastLink1
    // printEntry::@5
    // print_byte(*entryTLastLink(entry))
    // [128] (byte) print_byte::b#2 ← *((byte*) printEntry::entry#10 + (byte) 8) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #8
    lda (entry),y
    tax
    // [129] call print_byte 
    // [189] phi from printEntry::@5 to print_byte [phi:printEntry::@5->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@5->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#2 [phi:printEntry::@5->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@22
    // [130] (byte*) print_line_cursor#162 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [131] call print_ln 
    // [90] phi from printEntry::@22 to print_ln [phi:printEntry::@22->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@22->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#162 [phi:printEntry::@22->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@23
    // [132] (byte*) print_char_cursor#214 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("slastlink   ")
    // [133] call print_str 
    // [83] phi from printEntry::@23 to print_str [phi:printEntry::@23->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#214 [phi:printEntry::@23->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str5 [phi:printEntry::@23->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // [134] phi from printEntry::@23 to printEntry::entrySLastLink1 [phi:printEntry::@23->printEntry::entrySLastLink1]
    // printEntry::entrySLastLink1
    // printEntry::@6
    // print_byte(*entrySLastLink(entry))
    // [135] (byte) print_byte::b#3 ← *((byte*) printEntry::entry#10 + (byte) 9) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #9
    lda (entry),y
    tax
    // [136] call print_byte 
    // [189] phi from printEntry::@6 to print_byte [phi:printEntry::@6->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@6->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#3 [phi:printEntry::@6->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@24
    // [137] (byte*) print_line_cursor#163 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [138] call print_ln 
    // [90] phi from printEntry::@24 to print_ln [phi:printEntry::@24->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@24->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#163 [phi:printEntry::@24->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@25
    // [139] (byte*) print_char_cursor#215 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("bflag       ")
    // [140] call print_str 
    // [83] phi from printEntry::@25 to print_str [phi:printEntry::@25->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#215 [phi:printEntry::@25->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str6 [phi:printEntry::@25->print_str#1] -- pbuz1=pbuc1 
    lda #<str6
    sta.z print_str.str
    lda #>str6
    sta.z print_str.str+1
    jsr print_str
    // [141] phi from printEntry::@25 to printEntry::entryBFlag1 [phi:printEntry::@25->printEntry::entryBFlag1]
    // printEntry::entryBFlag1
    // printEntry::@7
    // print_byte(*entryBFlag(entry))
    // [142] (byte) print_byte::b#4 ← *((byte*) printEntry::entry#10 + (byte) $a) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$a
    lda (entry),y
    tax
    // [143] call print_byte 
    // [189] phi from printEntry::@7 to print_byte [phi:printEntry::@7->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@7->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#4 [phi:printEntry::@7->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@26
    // [144] (byte*) print_line_cursor#164 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [145] call print_ln 
    // [90] phi from printEntry::@26 to print_ln [phi:printEntry::@26->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@26->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#164 [phi:printEntry::@26->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@27
    // [146] (byte*) print_char_cursor#216 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("berror      ")
    // [147] call print_str 
    // [83] phi from printEntry::@27 to print_str [phi:printEntry::@27->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#216 [phi:printEntry::@27->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str7 [phi:printEntry::@27->print_str#1] -- pbuz1=pbuc1 
    lda #<str7
    sta.z print_str.str
    lda #>str7
    sta.z print_str.str+1
    jsr print_str
    // [148] phi from printEntry::@27 to printEntry::entryBError1 [phi:printEntry::@27->printEntry::entryBError1]
    // printEntry::entryBError1
    // printEntry::@8
    // print_byte(*entryBError(entry))
    // [149] (byte) print_byte::b#5 ← *((byte*) printEntry::entry#10 + (byte) $b) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$b
    lda (entry),y
    tax
    // [150] call print_byte 
    // [189] phi from printEntry::@8 to print_byte [phi:printEntry::@8->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@8->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#5 [phi:printEntry::@8->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@28
    // [151] (byte*) print_line_cursor#165 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [152] call print_ln 
    // [90] phi from printEntry::@28 to print_ln [phi:printEntry::@28->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@28->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#165 [phi:printEntry::@28->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@29
    // [153] (byte*) print_char_cursor#217 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("ucross    ")
    // [154] call print_str 
    // [83] phi from printEntry::@29 to print_str [phi:printEntry::@29->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#217 [phi:printEntry::@29->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str8 [phi:printEntry::@29->print_str#1] -- pbuz1=pbuc1 
    lda #<str8
    sta.z print_str.str
    lda #>str8
    sta.z print_str.str+1
    jsr print_str
    // [155] phi from printEntry::@29 to printEntry::entryUCross1 [phi:printEntry::@29->printEntry::entryUCross1]
    // printEntry::entryUCross1
    // printEntry::@9
    // print_word(*entryUCross(entry))
    // [156] (word) print_word::w#4 ← *((word*)(byte*) printEntry::entry#10 + (byte) $c) -- vwuz1=pwuz2_derefidx_vbuc1 
    ldy #$c
    lda (entry),y
    sta.z print_word.w
    iny
    lda (entry),y
    sta.z print_word.w+1
    // [157] call print_word 
    // [201] phi from printEntry::@9 to print_word [phi:printEntry::@9->print_word]
    // [201] phi (word) print_word::w#5 = (word) print_word::w#4 [phi:printEntry::@9->print_word#0] -- register_copy 
    jsr print_word
    // printEntry::@30
    // [158] (byte*) print_line_cursor#166 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [159] call print_ln 
    // [90] phi from printEntry::@30 to print_ln [phi:printEntry::@30->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@30->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#166 [phi:printEntry::@30->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@31
    // [160] (byte*) print_char_cursor#218 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("baddrlo     ")
    // [161] call print_str 
    // [83] phi from printEntry::@31 to print_str [phi:printEntry::@31->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#218 [phi:printEntry::@31->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str9 [phi:printEntry::@31->print_str#1] -- pbuz1=pbuc1 
    lda #<str9
    sta.z print_str.str
    lda #>str9
    sta.z print_str.str+1
    jsr print_str
    // [162] phi from printEntry::@31 to printEntry::entryBAddrLo1 [phi:printEntry::@31->printEntry::entryBAddrLo1]
    // printEntry::entryBAddrLo1
    // printEntry::@10
    // print_byte(*entryBAddrLo(entry))
    // [163] (byte) print_byte::b#6 ← *((byte*) printEntry::entry#10 + (byte) $e) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$e
    lda (entry),y
    tax
    // [164] call print_byte 
    // [189] phi from printEntry::@10 to print_byte [phi:printEntry::@10->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@10->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#6 [phi:printEntry::@10->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@32
    // [165] (byte*) print_line_cursor#167 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [166] call print_ln 
    // [90] phi from printEntry::@32 to print_ln [phi:printEntry::@32->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@32->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#167 [phi:printEntry::@32->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@33
    // [167] (byte*) print_char_cursor#219 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("baddrhi     ")
    // [168] call print_str 
    // [83] phi from printEntry::@33 to print_str [phi:printEntry::@33->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#219 [phi:printEntry::@33->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str10 [phi:printEntry::@33->print_str#1] -- pbuz1=pbuc1 
    lda #<str10
    sta.z print_str.str
    lda #>str10
    sta.z print_str.str+1
    jsr print_str
    // [169] phi from printEntry::@33 to printEntry::entryBAddrHi1 [phi:printEntry::@33->printEntry::entryBAddrHi1]
    // printEntry::entryBAddrHi1
    // printEntry::@11
    // print_byte(*entryBAddrHi(entry))
    // [170] (byte) print_byte::b#7 ← *((byte*) printEntry::entry#10 + (byte) $f) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$f
    lda (entry),y
    tax
    // [171] call print_byte 
    // [189] phi from printEntry::@11 to print_byte [phi:printEntry::@11->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@11->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#7 [phi:printEntry::@11->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@34
    // [172] (byte*) print_line_cursor#168 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [173] call print_ln 
    // [90] phi from printEntry::@34 to print_ln [phi:printEntry::@34->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@34->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#168 [phi:printEntry::@34->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@35
    // [174] (byte*) print_char_cursor#220 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("thi         ")
    // [175] call print_str 
    // [83] phi from printEntry::@35 to print_str [phi:printEntry::@35->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#220 [phi:printEntry::@35->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str11 [phi:printEntry::@35->print_str#1] -- pbuz1=pbuc1 
    lda #<str11
    sta.z print_str.str
    lda #>str11
    sta.z print_str.str+1
    jsr print_str
    // [176] phi from printEntry::@35 to printEntry::entryTHi1 [phi:printEntry::@35->printEntry::entryTHi1]
    // printEntry::entryTHi1
    // printEntry::@12
    // print_byte(*entryTHi(entry))
    // [177] (byte) print_byte::b#8 ← *((byte*) printEntry::entry#10 + (byte) $10) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$10
    lda (entry),y
    tax
    // [178] call print_byte 
    // [189] phi from printEntry::@12 to print_byte [phi:printEntry::@12->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@12->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#8 [phi:printEntry::@12->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@36
    // [179] (byte*) print_line_cursor#169 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [180] call print_ln 
    // [90] phi from printEntry::@36 to print_ln [phi:printEntry::@36->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@36->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#169 [phi:printEntry::@36->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@37
    // [181] (byte*) print_char_cursor#221 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str("tlo         ")
    // [182] call print_str 
    // [83] phi from printEntry::@37 to print_str [phi:printEntry::@37->print_str]
    // [83] phi (byte*) print_char_cursor#164 = (byte*) print_char_cursor#221 [phi:printEntry::@37->print_str#0] -- register_copy 
    // [83] phi (byte*) print_str::str#20 = (const string) printEntry::str12 [phi:printEntry::@37->print_str#1] -- pbuz1=pbuc1 
    lda #<str12
    sta.z print_str.str
    lda #>str12
    sta.z print_str.str+1
    jsr print_str
    // [183] phi from printEntry::@37 to printEntry::entryTLo1 [phi:printEntry::@37->printEntry::entryTLo1]
    // printEntry::entryTLo1
    // printEntry::@13
    // print_byte(*entryTLo(entry))
    // [184] (byte) print_byte::b#9 ← *((byte*) printEntry::entry#10 + (byte) $11) -- vbuxx=pbuz1_derefidx_vbuc1 
    ldy #$11
    lda (entry),y
    tax
    // [185] call print_byte 
    // [189] phi from printEntry::@13 to print_byte [phi:printEntry::@13->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:printEntry::@13->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#9 [phi:printEntry::@13->print_byte#1] -- register_copy 
    jsr print_byte
    // printEntry::@38
    // [186] (byte*) print_line_cursor#170 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_line_cursor_1
    lda.z print_line_cursor+1
    sta.z print_line_cursor_1+1
    // print_ln()
    // [187] call print_ln 
    // [90] phi from printEntry::@38 to print_ln [phi:printEntry::@38->print_ln]
    // [90] phi (byte*) print_char_cursor#143 = (byte*) print_char_cursor#11 [phi:printEntry::@38->print_ln#0] -- register_copy 
    // [90] phi (byte*) print_line_cursor#63 = (byte*) print_line_cursor#170 [phi:printEntry::@38->print_ln#1] -- register_copy 
    jsr print_ln
    // printEntry::@return
    // }
    // [188] return 
    rts
    str: .text "bufdisk   "
    .byte 0
    str1: .text "bufedit   "
    .byte 0
    str2: .text "tslen     "
    .byte 0
    str3: .text "tsorder   "
    .byte 0
    str4: .text "tlastlink   "
    .byte 0
    str5: .text "slastlink   "
    .byte 0
    str6: .text "bflag       "
    .byte 0
    str7: .text "berror      "
    .byte 0
    str8: .text "ucross    "
    .byte 0
    str9: .text "baddrlo     "
    .byte 0
    str10: .text "baddrhi     "
    .byte 0
    str11: .text "thi         "
    .byte 0
    str12: .text "tlo         "
    .byte 0
}
  // print_byte
// Print a byte as HEX
// print_byte(byte register(X) b)
print_byte: {
    // b>>4
    // [190] (byte~) print_byte::$0 ← (byte) print_byte::b#10 >> (byte) 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // print_char(print_hextab[b>>4])
    // [191] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [192] call print_char 
    // [197] phi from print_byte to print_char [phi:print_byte->print_char]
    // [197] phi (byte*) print_char_cursor#82 = (byte*) print_char_cursor#145 [phi:print_byte->print_char#0] -- register_copy 
    // [197] phi (byte) print_char::ch#2 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    // print_byte::@1
    // b&$f
    // [193] (byte~) print_byte::$2 ← (byte) print_byte::b#10 & (byte) $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // print_char(print_hextab[b&$f])
    // [194] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2) -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [195] call print_char 
    // [197] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
    // [197] phi (byte*) print_char_cursor#82 = (byte*) print_char_cursor#11 [phi:print_byte::@1->print_char#0] -- register_copy 
    // [197] phi (byte) print_char::ch#2 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    // print_byte::@return
    // }
    // [196] return 
    rts
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // *(print_char_cursor++) = ch
    // [198] *((byte*) print_char_cursor#82) ← (byte) print_char::ch#2 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // *(print_char_cursor++) = ch;
    // [199] (byte*) print_char_cursor#11 ← ++ (byte*) print_char_cursor#82 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // print_char::@return
    // }
    // [200] return 
    rts
}
  // print_word
// Print a word as HEX
// print_word(word zeropage($a) w)
print_word: {
    .label w = $a
    // print_byte(>w)
    // [202] (byte) print_byte::b#0 ← > (word) print_word::w#5 -- vbuxx=_hi_vwuz1 
    lda.z w+1
    tax
    // [203] call print_byte 
    // [189] phi from print_word to print_byte [phi:print_word->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#142 [phi:print_word->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#0 [phi:print_word->print_byte#1] -- register_copy 
    jsr print_byte
    // print_word::@1
    // print_byte(<w)
    // [204] (byte) print_byte::b#1 ← < (word) print_word::w#5 -- vbuxx=_lo_vwuz1 
    lda.z w
    tax
    // [205] call print_byte 
    // [189] phi from print_word::@1 to print_byte [phi:print_word::@1->print_byte]
    // [189] phi (byte*) print_char_cursor#145 = (byte*) print_char_cursor#11 [phi:print_word::@1->print_byte#0] -- register_copy 
    // [189] phi (byte) print_byte::b#10 = (byte) print_byte::b#1 [phi:print_word::@1->print_byte#1] -- register_copy 
    jsr print_byte
    // print_word::@return
    // }
    // [206] return 
    rts
}
  // initEntry
// Set all values in the passed struct
// Sets the values to n, n+1, n... to help test that everything works as intended
// initEntry(byte* zeropage(4) entry, byte register(X) n)
initEntry: {
    .label __1 = 8
    .label __3 = $a
    .label __5 = $c
    .label __7 = $e
    .label __17 = $10
    .label entry = 4
    // [208] phi from initEntry to initEntry::entryBufDisk1 [phi:initEntry->initEntry::entryBufDisk1]
    // initEntry::entryBufDisk1
    // initEntry::@1
    // 0x1111+n
    // [209] (word~) initEntry::$1 ← (word) $1111 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$1111
    sta.z __1
    lda #>$1111
    adc #0
    sta.z __1+1
    // *entryBufDisk(entry) = 0x1111+n
    // [210] *((byte**)(byte*) initEntry::entry#10) ← (byte*)(word~) initEntry::$1 -- _deref_pptz1=pbuz2 
    ldy #0
    lda.z __1
    sta (entry),y
    iny
    lda.z __1+1
    sta (entry),y
    // [211] phi from initEntry::@1 to initEntry::entryBufEdit1 [phi:initEntry::@1->initEntry::entryBufEdit1]
    // initEntry::entryBufEdit1
    // initEntry::@2
    // 0x2222+n
    // [212] (word~) initEntry::$3 ← (word) $2222 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$2222
    sta.z __3
    lda #>$2222
    adc #0
    sta.z __3+1
    // *entryBufEdit(entry) = 0x2222+n
    // [213] *((byte**)(byte*) initEntry::entry#10 + (byte) 2) ← (byte*)(word~) initEntry::$3 -- pptz1_derefidx_vbuc1=pbuz2 
    ldy #2
    lda.z __3
    sta (entry),y
    iny
    lda.z __3+1
    sta (entry),y
    // [214] phi from initEntry::@2 to initEntry::entryTsLen1 [phi:initEntry::@2->initEntry::entryTsLen1]
    // initEntry::entryTsLen1
    // initEntry::@3
    // 0x3333+n
    // [215] (word~) initEntry::$5 ← (word) $3333 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$3333
    sta.z __5
    lda #>$3333
    adc #0
    sta.z __5+1
    // *entryTsLen(entry) = 0x3333+n
    // [216] *((word*)(byte*) initEntry::entry#10 + (byte) 4) ← (word~) initEntry::$5 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #4
    lda.z __5
    sta (entry),y
    iny
    lda.z __5+1
    sta (entry),y
    // [217] phi from initEntry::@3 to initEntry::entryTsOrder1 [phi:initEntry::@3->initEntry::entryTsOrder1]
    // initEntry::entryTsOrder1
    // initEntry::@4
    // 0x4444+n
    // [218] (word~) initEntry::$7 ← (word) $4444 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$4444
    sta.z __7
    lda #>$4444
    adc #0
    sta.z __7+1
    // *entryTsOrder(entry) = 0x4444+n
    // [219] *((word**)(byte*) initEntry::entry#10 + (byte) 6) ← (word*)(word~) initEntry::$7 -- pptz1_derefidx_vbuc1=pwuz2 
    ldy #6
    lda.z __7
    sta (entry),y
    iny
    lda.z __7+1
    sta (entry),y
    // [220] phi from initEntry::@4 to initEntry::entryTLastLink1 [phi:initEntry::@4->initEntry::entryTLastLink1]
    // initEntry::entryTLastLink1
    // initEntry::@5
    // 0x55+n
    // [221] (byte~) initEntry::$9 ← (byte) $55 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$55
    // *entryTLastLink(entry) = 0x55+n
    // [222] *((byte*) initEntry::entry#10 + (byte) 8) ← (byte~) initEntry::$9 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #8
    sta (entry),y
    // [223] phi from initEntry::@5 to initEntry::entrySLastLink1 [phi:initEntry::@5->initEntry::entrySLastLink1]
    // initEntry::entrySLastLink1
    // initEntry::@6
    // 0x66+n
    // [224] (byte~) initEntry::$11 ← (byte) $66 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$66
    // *entrySLastLink(entry) = 0x66+n
    // [225] *((byte*) initEntry::entry#10 + (byte) 9) ← (byte~) initEntry::$11 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #9
    sta (entry),y
    // [226] phi from initEntry::@6 to initEntry::entryBFlag1 [phi:initEntry::@6->initEntry::entryBFlag1]
    // initEntry::entryBFlag1
    // initEntry::@7
    // 0x77+n
    // [227] (byte~) initEntry::$13 ← (byte) $77 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$77
    // *entryBFlag(entry) = 0x77+n
    // [228] *((byte*) initEntry::entry#10 + (byte) $a) ← (byte~) initEntry::$13 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$a
    sta (entry),y
    // [229] phi from initEntry::@7 to initEntry::entryBError1 [phi:initEntry::@7->initEntry::entryBError1]
    // initEntry::entryBError1
    // initEntry::@8
    // 0x88+n
    // [230] (byte~) initEntry::$15 ← (byte) $88 + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$88
    // *entryBError(entry) = 0x88+n
    // [231] *((byte*) initEntry::entry#10 + (byte) $b) ← (byte~) initEntry::$15 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$b
    sta (entry),y
    // [232] phi from initEntry::@8 to initEntry::entryUCross1 [phi:initEntry::@8->initEntry::entryUCross1]
    // initEntry::entryUCross1
    // initEntry::@9
    // 0x9999+n
    // [233] (word~) initEntry::$17 ← (word) $9999 + (byte) initEntry::n#10 -- vwuz1=vwuc1_plus_vbuxx 
    txa
    clc
    adc #<$9999
    sta.z __17
    lda #>$9999
    adc #0
    sta.z __17+1
    // *entryUCross(entry) = 0x9999+n
    // [234] *((word*)(byte*) initEntry::entry#10 + (byte) $c) ← (word~) initEntry::$17 -- pwuz1_derefidx_vbuc1=vwuz2 
    ldy #$c
    lda.z __17
    sta (entry),y
    iny
    lda.z __17+1
    sta (entry),y
    // [235] phi from initEntry::@9 to initEntry::entryBAddrLo1 [phi:initEntry::@9->initEntry::entryBAddrLo1]
    // initEntry::entryBAddrLo1
    // initEntry::@10
    // 0xaa+n
    // [236] (byte~) initEntry::$19 ← (byte) $aa + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$aa
    // *entryBAddrLo(entry) = 0xaa+n
    // [237] *((byte*) initEntry::entry#10 + (byte) $e) ← (byte~) initEntry::$19 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$e
    sta (entry),y
    // [238] phi from initEntry::@10 to initEntry::entryBAddrHi1 [phi:initEntry::@10->initEntry::entryBAddrHi1]
    // initEntry::entryBAddrHi1
    // initEntry::@11
    // 0xbb+n
    // [239] (byte~) initEntry::$21 ← (byte) $bb + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$bb
    // *entryBAddrHi(entry) = 0xbb+n
    // [240] *((byte*) initEntry::entry#10 + (byte) $f) ← (byte~) initEntry::$21 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$f
    sta (entry),y
    // [241] phi from initEntry::@11 to initEntry::entryTHi1 [phi:initEntry::@11->initEntry::entryTHi1]
    // initEntry::entryTHi1
    // initEntry::@12
    // 0xcc+n
    // [242] (byte~) initEntry::$23 ← (byte) $cc + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$cc
    // *entryTHi(entry) = 0xcc+n
    // [243] *((byte*) initEntry::entry#10 + (byte) $10) ← (byte~) initEntry::$23 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$10
    sta (entry),y
    // [244] phi from initEntry::@12 to initEntry::entryTLo1 [phi:initEntry::@12->initEntry::entryTLo1]
    // initEntry::entryTLo1
    // initEntry::@13
    // 0xdd+n
    // [245] (byte~) initEntry::$25 ← (byte) $dd + (byte) initEntry::n#10 -- vbuaa=vbuc1_plus_vbuxx 
    txa
    clc
    adc #$dd
    // *entryTLo(entry) = 0xdd+n
    // [246] *((byte*) initEntry::entry#10 + (byte) $11) ← (byte~) initEntry::$25 -- pbuz1_derefidx_vbuc1=vbuaa 
    ldy #$11
    sta (entry),y
    // initEntry::@return
    // }
    // [247] return 
    rts
}
  // mul8u
// Perform binary multiplication of two unsigned 8-bit bytes into a 16-bit unsigned word
// mul8u(byte register(X) a)
mul8u: {
    .label mb = 8
    .label res = 6
    .label return = 6
    // [249] phi from mul8u to mul8u::@1 [phi:mul8u->mul8u::@1]
    // [249] phi (word) mul8u::mb#2 = (const byte) SIZEOF_ENTRY [phi:mul8u->mul8u::@1#0] -- vwuz1=vbuc1 
    lda #<SIZEOF_ENTRY
    sta.z mb
    lda #>SIZEOF_ENTRY
    sta.z mb+1
    // [249] phi (word) mul8u::res#2 = (byte) 0 [phi:mul8u->mul8u::@1#1] -- vwuz1=vbuc1 
    lda #<0
    sta.z res
    sta.z res+1
    // [249] phi (byte) mul8u::a#3 = (byte) mul8u::a#6 [phi:mul8u->mul8u::@1#2] -- register_copy 
    // mul8u::@1
  __b1:
    // while(a!=0)
    // [250] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2 -- vbuxx_neq_0_then_la1 
    cpx #0
    bne __b2
    // mul8u::@return
    // }
    // [251] return 
    rts
    // mul8u::@2
  __b2:
    // a&1
    // [252] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1 -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #1
    // if( (a&1) != 0)
    // [253] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3 -- vbuaa_eq_0_then_la1 
    cmp #0
    beq __b3
    // mul8u::@4
    // res = res + mb
    // [254] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2 -- vwuz1=vwuz1_plus_vwuz2 
    lda.z res
    clc
    adc.z mb
    sta.z res
    lda.z res+1
    adc.z mb+1
    sta.z res+1
    // [255] phi from mul8u::@2 mul8u::@4 to mul8u::@3 [phi:mul8u::@2/mul8u::@4->mul8u::@3]
    // [255] phi (word) mul8u::res#6 = (word) mul8u::res#2 [phi:mul8u::@2/mul8u::@4->mul8u::@3#0] -- register_copy 
    // mul8u::@3
  __b3:
    // a = a>>1
    // [256] (byte) mul8u::a#0 ← (byte) mul8u::a#3 >> (byte) 1 -- vbuxx=vbuxx_ror_1 
    txa
    lsr
    tax
    // mb = mb<<1
    // [257] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1 -- vwuz1=vwuz1_rol_1 
    asl.z mb
    rol.z mb+1
    // [249] phi from mul8u::@3 to mul8u::@1 [phi:mul8u::@3->mul8u::@1]
    // [249] phi (word) mul8u::mb#2 = (word) mul8u::mb#1 [phi:mul8u::@3->mul8u::@1#0] -- register_copy 
    // [249] phi (word) mul8u::res#2 = (word) mul8u::res#6 [phi:mul8u::@3->mul8u::@1#1] -- register_copy 
    // [249] phi (byte) mul8u::a#3 = (byte) mul8u::a#0 [phi:mul8u::@3->mul8u::@1#2] -- register_copy 
    jmp __b1
}
  // keyboard_init
// Initialize keyboard reading by setting CIA#$ Data Direction Registers
keyboard_init: {
    // *CIA1_PORT_A_DDR = $ff
    // [258] *((const byte*) CIA1_PORT_A_DDR) ← (byte) $ff -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Write Mode
    lda #$ff
    sta CIA1_PORT_A_DDR
    // *CIA1_PORT_B_DDR = $00
    // [259] *((const byte*) CIA1_PORT_B_DDR) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    // Keyboard Matrix Columns Read Mode
    lda #0
    sta CIA1_PORT_B_DDR
    // keyboard_init::@return
    // }
    // [260] return 
    rts
}
  // File Data
  print_hextab: .text "0123456789abcdef"
  // Keyboard row bitmask as expected by CIA#1 Port A when reading a specific keyboard matrix row (rows are numbered 0-7)
  keyboard_matrix_row_bitmask: .byte $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f
  // Keyboard matrix column bitmasks for a specific keybooard matrix column when reading the keyboard. (columns are numbered 0-7)
  keyboard_matrix_col_bitmask: .byte 1, 2, 4, 8, $10, $20, $40, $80
  // All files
  files: .fill MAX_FILES*SIZEOF_ENTRY, 0

