@begin: from
  [0] call main param-assignment [ ]
  to:@end
@end: from @begin
main: from @begin
  [1] call lvalue param-assignment [ ]
  to:main::@1
main::@1: from main
  [2] call rvalue param-assignment [ ]
  to:main::@2
main::@2: from main::@1
  [3] call rvaluevar param-assignment [ ]
  to:main::@3
main::@3: from main::@2
  [4] call lvaluevar param-assignment [ ]
  to:main::@return
main::@return: from main::@3
  [5] return  [ ]
  to:@return
lvaluevar: from main::@3
  to:lvaluevar::@1
lvaluevar::@1: from lvaluevar lvaluevar::@2
  [6] (byte*) lvaluevar::screen#2 ← phi( lvaluevar/(word) 1024 lvaluevar::@2/(byte*) lvaluevar::screen#1 ) [ lvaluevar::i#2 lvaluevar::screen#2 ]
  [6] (byte) lvaluevar::i#2 ← phi( lvaluevar/(byte) 2 lvaluevar::@2/(byte) lvaluevar::i#1 ) [ lvaluevar::i#2 lvaluevar::screen#2 ]
  [7] if((byte) lvaluevar::i#2<(byte) 10) goto lvaluevar::@2 [ lvaluevar::i#2 lvaluevar::screen#2 ]
  to:lvaluevar::@return
lvaluevar::@return: from lvaluevar::@1
  [8] return  [ ]
  to:@return
lvaluevar::@2: from lvaluevar::@1
  [9] *((byte*) lvaluevar::screen#2) ← (byte) 4 [ lvaluevar::i#2 lvaluevar::screen#2 ]
  [10] (byte*) lvaluevar::screen#1 ← ++ (byte*) lvaluevar::screen#2 [ lvaluevar::screen#1 lvaluevar::i#2 ]
  [11] (byte) lvaluevar::i#1 ← ++ (byte) lvaluevar::i#2 [ lvaluevar::i#1 lvaluevar::screen#1 ]
  to:lvaluevar::@1
rvaluevar: from main::@2
  to:rvaluevar::@1
rvaluevar::@1: from rvaluevar rvaluevar::@2
  [12] (byte*) rvaluevar::screen#2 ← phi( rvaluevar/(word) 1024 rvaluevar::@2/(byte*) rvaluevar::screen#1 ) [ rvaluevar::i#2 rvaluevar::screen#2 ]
  [12] (byte) rvaluevar::i#2 ← phi( rvaluevar/(byte) 2 rvaluevar::@2/(byte) rvaluevar::i#1 ) [ rvaluevar::i#2 rvaluevar::screen#2 ]
  [13] if((byte) rvaluevar::i#2<(byte) 10) goto rvaluevar::@2 [ rvaluevar::i#2 rvaluevar::screen#2 ]
  to:rvaluevar::@return
rvaluevar::@return: from rvaluevar::@1
  [14] return  [ ]
  to:@return
rvaluevar::@2: from rvaluevar::@1
  [15] (byte) rvaluevar::b#0 ← * (byte*) rvaluevar::screen#2 [ rvaluevar::i#2 rvaluevar::screen#2 ]
  [16] (byte*) rvaluevar::screen#1 ← ++ (byte*) rvaluevar::screen#2 [ rvaluevar::screen#1 rvaluevar::i#2 ]
  [17] (byte) rvaluevar::i#1 ← ++ (byte) rvaluevar::i#2 [ rvaluevar::i#1 rvaluevar::screen#1 ]
  to:rvaluevar::@1
rvalue: from main::@1
  [18] (byte) rvalue::b#0 ← * (word) 1024 [ ]
  [19] (byte) rvalue::b#1 ← * (word) 1025 [ ]
  to:rvalue::@1
rvalue::@1: from rvalue rvalue::@2
  [20] (byte) rvalue::i#2 ← phi( rvalue/(byte) 2 rvalue::@2/(byte) rvalue::i#1 ) [ rvalue::i#2 ]
  [21] if((byte) rvalue::i#2<(byte) 10) goto rvalue::@2 [ rvalue::i#2 ]
  to:rvalue::@return
rvalue::@return: from rvalue::@1
  [22] return  [ ]
  to:@return
rvalue::@2: from rvalue::@1
  [23] (byte) rvalue::b#2 ← (word) 1024 *idx (byte) rvalue::i#2 [ rvalue::i#2 ]
  [24] (byte) rvalue::i#1 ← ++ (byte) rvalue::i#2 [ rvalue::i#1 ]
  to:rvalue::@1
lvalue: from main
  [25] *((word) 1024) ← (byte) 1 [ ]
  [26] *((word) 1025) ← (byte) 2 [ ]
  to:lvalue::@1
lvalue::@1: from lvalue lvalue::@2
  [27] (byte) lvalue::i#2 ← phi( lvalue/(byte) 2 lvalue::@2/(byte) lvalue::i#1 ) [ lvalue::i#2 ]
  [28] if((byte) lvalue::i#2<(byte) 10) goto lvalue::@2 [ lvalue::i#2 ]
  to:lvalue::@return
lvalue::@return: from lvalue::@1
  [29] return  [ ]
  to:@return
lvalue::@2: from lvalue::@1
  [30] *((word) 1024 + (byte) lvalue::i#2) ← (byte) 3 [ lvalue::i#2 ]
  [31] (byte) lvalue::i#1 ← ++ (byte) lvalue::i#2 [ lvalue::i#1 ]
  to:lvalue::@1
