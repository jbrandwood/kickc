
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call print 
  to:main::@2
main::@2: scope:[main]  from main
  [2] phi()
  [3] call print 
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@3
  [4] (byte) main::i#2 ← phi( main::@2/(byte) 2 main::@3/(byte) main::i#1 )
  [5] (byte~) main::$5 ← (byte) main::i#2 << (byte) 1
  [6] (signed word*) print::p#2 ← (const signed word*) VALS + (byte~) main::$5
  [7] call print 
  to:main::@3
main::@3: scope:[main]  from main::@1
  [8] (byte) main::i#1 ← ++ (byte) main::i#2
  [9] if((byte) main::i#1!=(byte) 4) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [10] return 
  to:@return

(void()) print((signed word*) print::p)
print: scope:[print]  from main main::@1 main::@2
  [11] (signed word*) print::p#3 ← phi( main/(const signed word*) VALS main::@1/(signed word*) print::p#2 main::@2/(const signed word*) VALS+(byte) 1*(const byte) SIZEOF_SIGNED_WORD )
  [11] (byte) idx#13 ← phi( main/(byte) 0 main::@1/(byte) idx#14 main::@2/(byte) idx#14 )
  [12] (byte~) print::$0 ← (byte) idx#13 << (byte) 1
  [13] *((const nomodify signed word*) SCREEN + (byte~) print::$0) ← *((signed word*) print::p#3)
  [14] (byte) idx#14 ← ++ (byte) idx#13
  to:print::@return
print::@return: scope:[print]  from print
  [15] return 
  to:@return
