@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::c#3 ← phi( main/(byte) 0 main::@3/(byte) main::c#1 )
  [6] if((byte) main::c#3<(byte) $64) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [7] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [8] *((const byte*) main::screen#0 + (byte) main::c#3) ← (byte) '*'
  [9] (byte~) main::$1 ← (byte) main::c#3 & (byte) 4
  [10] if((byte~) main::$1!=(byte) 0) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@2
  [11] (byte) main::c#2 ← (byte) main::c#3 + (byte) 5
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@4
  [12] (byte) main::c#5 ← phi( main::@2/(byte) main::c#3 main::@4/(byte) main::c#2 )
  [13] (byte) main::c#1 ← ++ (byte) main::c#5
  to:main::@1
