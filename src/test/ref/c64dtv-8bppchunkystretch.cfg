
void main()
main: scope:[main]  from
  asm { sei  }
  [1] *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
  [2] *PROCPORT = PROCPORT_RAM_IO
  [3] call gfx_init_chunky 
  to:main::@6
main::@6: scope:[main]  from main
  [4] *DTV_FEATURE = DTV_FEATURE_ENABLE
  [5] *DTV_CONTROL = DTV_HIGHCOLOR|DTV_LINEAR|DTV_COLORRAM_OFF|DTV_CHUNKY|DTV_BADLINE_OFF
  [6] *VICII_CONTROL1 = VICII_DEN|VICII_ECM|VICII_RSEL|3
  [7] *VICII_CONTROL2 = VICII_MCM|VICII_CSEL
  [8] *DTV_PLANEB_START_LO = 0
  [9] *DTV_PLANEB_START_MI = >CHUNKY
  [10] *DTV_PLANEB_START_HI = 0
  [11] *DTV_PLANEB_STEP = 8
  [12] *DTV_PLANEB_MODULO_LO = 0
  [13] *DTV_PLANEB_MODULO_HI = 0
  [14] *((byte*)CIA2+OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR) = 3
  [15] *((byte*)CIA2) = 3^(byte)(word)CHUNKY/$4000
  [16] *VICII_MEMORY = 0
  to:main::@1
main::@1: scope:[main]  from main::@1 main::@6
  [17] main::j#2 = phi( main::@1/main::j#1, main::@6/0 )
  [18] DTV_PALETTE[main::j#2] = main::j#2
  [19] main::j#1 = ++ main::j#2
  [20] if(main::j#1!=$10) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@5
  asm { ldx#$ff rff: cpxRASTER bnerff stabilize: nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop cpxRASTER beqeat+0 eat: inx cpx#$08 bnestabilize  }
  [22] *VICII_CONTROL1 = VICII_DEN|VICII_ECM|VICII_RSEL|3
  [23] *BORDER_COLOR = 0
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@3
  [24] if(*RASTER!=$42) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  asm { nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop  }
  to:main::@5
main::@5: scope:[main]  from main::@4 main::@5
  [26] main::rst#1 = *RASTER
  [27] main::$3 = main::rst#1 & 7
  [28] main::$4 = VICII_DEN|VICII_ECM|VICII_RSEL | main::$3
  [29] *VICII_CONTROL1 = main::$4
  [30] main::$5 = main::rst#1 << 4
  [31] *BORDER_COLOR = main::$5
  asm { nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop  }
  [33] if(main::rst#1!=$f2) goto main::@5
  to:main::@2

void gfx_init_chunky()
gfx_init_chunky: scope:[gfx_init_chunky]  from main
  [34] phi()
  [35] call dtvSetCpuBankSegment1 
  to:gfx_init_chunky::@1
gfx_init_chunky::@1: scope:[gfx_init_chunky]  from gfx_init_chunky gfx_init_chunky::@5
  [36] gfx_init_chunky::gfxbCpuBank#7 = phi( gfx_init_chunky::@5/gfx_init_chunky::gfxbCpuBank#8, gfx_init_chunky/++(byte)CHUNKY/$4000 )
  [36] gfx_init_chunky::y#6 = phi( gfx_init_chunky::@5/gfx_init_chunky::y#1, gfx_init_chunky/0 )
  [36] gfx_init_chunky::gfxb#5 = phi( gfx_init_chunky::@5/gfx_init_chunky::gfxb#1, gfx_init_chunky/(byte*) 16384 )
  to:gfx_init_chunky::@2
gfx_init_chunky::@2: scope:[gfx_init_chunky]  from gfx_init_chunky::@1 gfx_init_chunky::@3
  [37] gfx_init_chunky::gfxbCpuBank#4 = phi( gfx_init_chunky::@1/gfx_init_chunky::gfxbCpuBank#7, gfx_init_chunky::@3/gfx_init_chunky::gfxbCpuBank#8 )
  [37] gfx_init_chunky::x#2 = phi( gfx_init_chunky::@1/0, gfx_init_chunky::@3/gfx_init_chunky::x#1 )
  [37] gfx_init_chunky::gfxb#3 = phi( gfx_init_chunky::@1/gfx_init_chunky::gfxb#5, gfx_init_chunky::@3/gfx_init_chunky::gfxb#1 )
  [38] if(gfx_init_chunky::gfxb#3!=$8000) goto gfx_init_chunky::@3
  to:gfx_init_chunky::@4
gfx_init_chunky::@4: scope:[gfx_init_chunky]  from gfx_init_chunky::@2
  [39] dtvSetCpuBankSegment1::cpuBankIdx#1 = gfx_init_chunky::gfxbCpuBank#4
  [40] call dtvSetCpuBankSegment1 
  to:gfx_init_chunky::@7
gfx_init_chunky::@7: scope:[gfx_init_chunky]  from gfx_init_chunky::@4
  [41] gfx_init_chunky::gfxbCpuBank#2 = ++ gfx_init_chunky::gfxbCpuBank#4
  to:gfx_init_chunky::@3
gfx_init_chunky::@3: scope:[gfx_init_chunky]  from gfx_init_chunky::@2 gfx_init_chunky::@7
  [42] gfx_init_chunky::gfxbCpuBank#8 = phi( gfx_init_chunky::@2/gfx_init_chunky::gfxbCpuBank#4, gfx_init_chunky::@7/gfx_init_chunky::gfxbCpuBank#2 )
  [42] gfx_init_chunky::gfxb#4 = phi( gfx_init_chunky::@2/gfx_init_chunky::gfxb#3, gfx_init_chunky::@7/(byte*) 16384 )
  [43] gfx_init_chunky::$5 = gfx_init_chunky::x#2 + gfx_init_chunky::y#6
  [44] gfx_init_chunky::c#0 = (byte)gfx_init_chunky::$5
  [45] *gfx_init_chunky::gfxb#4 = gfx_init_chunky::c#0
  [46] gfx_init_chunky::gfxb#1 = ++ gfx_init_chunky::gfxb#4
  [47] gfx_init_chunky::x#1 = ++ gfx_init_chunky::x#2
  [48] if(gfx_init_chunky::x#1!=$140) goto gfx_init_chunky::@2
  to:gfx_init_chunky::@5
gfx_init_chunky::@5: scope:[gfx_init_chunky]  from gfx_init_chunky::@3
  [49] gfx_init_chunky::y#1 = ++ gfx_init_chunky::y#6
  [50] if(gfx_init_chunky::y#1!=$33) goto gfx_init_chunky::@1
  to:gfx_init_chunky::@6
gfx_init_chunky::@6: scope:[gfx_init_chunky]  from gfx_init_chunky::@5
  [51] phi()
  [52] call dtvSetCpuBankSegment1 
  to:gfx_init_chunky::@return
gfx_init_chunky::@return: scope:[gfx_init_chunky]  from gfx_init_chunky::@6
  [53] return 
  to:@return

void dtvSetCpuBankSegment1(byte dtvSetCpuBankSegment1::cpuBankIdx)
dtvSetCpuBankSegment1: scope:[dtvSetCpuBankSegment1]  from gfx_init_chunky gfx_init_chunky::@4 gfx_init_chunky::@6
  [54] dtvSetCpuBankSegment1::cpuBankIdx#3 = phi( gfx_init_chunky/(byte)CHUNKY/$4000, gfx_init_chunky::@4/dtvSetCpuBankSegment1::cpuBankIdx#1, gfx_init_chunky::@6/(byte)$4000/$4000 )
  [55] *dtvSetCpuBankSegment1::cpuBank = dtvSetCpuBankSegment1::cpuBankIdx#3
  asm { .byte$32,$dd lda$ff .byte$32,$00  }
  to:dtvSetCpuBankSegment1::@return
dtvSetCpuBankSegment1::@return: scope:[dtvSetCpuBankSegment1]  from dtvSetCpuBankSegment1
  [57] return 
  to:@return
