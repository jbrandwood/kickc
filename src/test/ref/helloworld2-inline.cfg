
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::print21
main::print21: scope:[main]  from main
  [1] phi()
  to:main::print21_@1
main::print21_@1: scope:[main]  from main::print21 main::print21_@2
  [2] (byte) main::print21_j#2 ← phi( main::print21/(byte) 0 main::print21_@2/(byte) main::print21_j#1 )
  [2] (byte) main::print21_i#2 ← phi( main::print21/(byte) 0 main::print21_@2/(byte) main::print21_i#1 )
  [3] if((byte) 0!=*((const byte*) main::hello + (byte) main::print21_i#2)) goto main::print21_@2
  to:main::print22
main::print22: scope:[main]  from main::print21_@1
  [4] phi()
  to:main::print22_@1
main::print22_@1: scope:[main]  from main::print22 main::print22_@2
  [5] (byte) main::print22_j#2 ← phi( main::print22/(byte) 0 main::print22_@2/(byte) main::print22_j#1 )
  [5] (byte) main::print22_i#2 ← phi( main::print22/(byte) 0 main::print22_@2/(byte) main::print22_i#1 )
  [6] if((byte) 0!=*((const byte*) main::hello + (byte) main::print22_i#2)) goto main::print22_@2
  to:main::@return
main::@return: scope:[main]  from main::print22_@1
  [7] return 
  to:@return
main::print22_@2: scope:[main]  from main::print22_@1
  [8] *((const byte*) main::print22_at#0 + (byte) main::print22_j#2) ← *((const byte*) main::hello + (byte) main::print22_i#2)
  [9] (byte) main::print22_j#1 ← (byte) main::print22_j#2 + (byte) 2
  [10] (byte) main::print22_i#1 ← ++ (byte) main::print22_i#2
  to:main::print22_@1
main::print21_@2: scope:[main]  from main::print21_@1
  [11] *((const byte*) screen + (byte) main::print21_j#2) ← *((const byte*) main::hello + (byte) main::print21_i#2)
  [12] (byte) main::print21_j#1 ← (byte) main::print21_j#2 + (byte) 2
  [13] (byte) main::print21_i#1 ← ++ (byte) main::print21_i#2
  to:main::print21_@1
