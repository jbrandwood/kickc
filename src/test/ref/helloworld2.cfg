
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call print2 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call print2 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [4] return 
  to:@return

(void()) print2((byte*) print2::at , (byte*) print2::msg)
print2: scope:[print2]  from main main::@1
  [5] (byte*) print2::at#4 ← phi( main/(const byte*) screen main::@1/(const byte*) screen+(byte) $50 )
  to:print2::@1
print2::@1: scope:[print2]  from print2 print2::@2
  [6] (byte) print2::j#2 ← phi( print2/(byte) 0 print2::@2/(byte) print2::j#1 )
  [6] (byte) print2::i#2 ← phi( print2/(byte) 0 print2::@2/(byte) print2::i#1 )
  [7] if((byte) 0!=*((const byte*) main::hello + (byte) print2::i#2)) goto print2::@2
  to:print2::@return
print2::@return: scope:[print2]  from print2::@1
  [8] return 
  to:@return
print2::@2: scope:[print2]  from print2::@1
  [9] *((byte*) print2::at#4 + (byte) print2::j#2) ← *((const byte*) main::hello + (byte) print2::i#2)
  [10] (byte) print2::j#1 ← (byte) print2::j#2 + (byte) 2
  [11] (byte) print2::i#1 ← ++ (byte) print2::i#2
  to:print2::@1
