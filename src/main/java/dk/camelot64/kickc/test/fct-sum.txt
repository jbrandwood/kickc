byte a = 12;
byte s = sum(5,a);
byte a = a+s;
byte s2 = sum(s, a);

byte sum(byte b1, byte b2) {
   return b1+b2;
}


CONTROL FLOW GRAPH:

// Not committed to a specific parameter transfer style (non SSA)
@BEGIN
    (byte)  a := 12
    (byte)  s := call SUM 5 a
    (byte§) $2 := a + s
    (byte§) a := $2
    (byte)  s2 := call SUM s a
    to: @END
SUM:
    param (byte) b1
    param (byte) b2
    (byte*) $1 := b1 + b2
    return (byte) $1
    to:

// Not committed to a specific parameter transfer style (SSA)
@BEGIN
    (byte)  a#0 := 12
    (byte)  s#0 := call SUM 5 a#0
    (byte§) $2 := a#0 + s#0
    (byte§) a#1 := $2
    (byte)  s2#0 := call SUM s#0 a#1
    to: @END
SUM:
    param (byte) b1#0
    param (byte) b2#0
    (byte*) $1 := b1#0 + b2#0
    return (byte) $1
    to: @RETURN


// Variable based parameter & return transfer (non SSA)
@BEGIN:
    (byte)  a := 12
    (byte)  SUM.b2 := a
    (byte)  SUM.b1 := 5
    (byte)  SUM.return = call SUM
    to @1
@1: from @BEGIN
    (byte)  s := SUM.return
    (byte*) $2 := a + s
    (byte*) a := a + s
    (byte)  SUM.b2 := a
    (byte)  SUM.b1 := s
    (byte)  SUM.return := call SUM
    to: @2
@2: from @1
    (byte)  s2 := SUM.return
    to: @END
SUM: from: @BEGIN, @1
    (byte§) $1 := SUM.b1 + SUM.b2
    (byte)  SUM.return := $1
    return SUM.return
    to: @RETURN

// Variable based parameter transfer & return (SSA)
@BEGIN:
    (byte)  a#0 := 12
    (byte)  SUM.b2#0 := a#0
    (byte)  SUM.b1#0 := 5
            call SUM
    (byte)  SUM.return#0 = SUM.return#4
    to @1
@1: from @BEGIN
    (byte)  SUM.return#1 = phi( @BEGIN/SUM.return#0)
    (byte)  a#1 = phi( @BEGIN/a#0)
    (byte)  s#0 := SUM.return#1
    (byte*) $2 := a#1 + s#0
    (byte*) a#2 := $2
    (byte)  SUM.b2#1 := a#2
    (byte)  SUM.b1#1 := s#0
            call SUM
    (byte)  SUM.return#2 := SUM.return#4
    to: @2
@2: from @1
    (byte)  SUM.return#3 = phi( @1/SUM.return#2)
    (byte)  s2#0 := SUM.return#3
    to: @END
SUM: from: @BEGIN, @1
    (byte)  SUM.b1#2 := phi(@BEGIN/SUM.b1#0 @1/SUM.b1#1)
    (byte)  SUM.b2#2 := phi(@BEGIN/SUM.b2#0 @1/SUM.b2#1)
    (byte§) $1 := SUM.b1#2 + SUM.b2#2
    (byte)  SUM.return#4 := $1
    return SUM.return#4
    to: @RETURN

// Variable based parameter transfer & return (SSA) - after optimizing
@BEGIN:
    (byte)  call SUM
    to @1
@1: from @BEGIN
    (byte)  SUM.b2#1 := a#0 + SUM.return#4
    (byte)  call SUM
    to: @2
@2: from @1
    (byte)  s2#0 := SUM.return#4
    to: @END
SUM: from: @BEGIN, @1
    (byte)  SUM.b1#2 := phi(@BEGIN/5  @1/SUM.return#4)
    (byte)  SUM.b2#2 := phi(@BEGIN/12 @1/SUM.b2#1)
    (byte§) $1 := SUM.b1#2 + SUM.b2#2
    (byte)  SUM.return#4 := $1
    to: @RETURN

