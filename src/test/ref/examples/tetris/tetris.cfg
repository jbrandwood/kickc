@begin: scope:[]  from
  [0] phi()
  to:@14
@14: scope:[]  from @begin
  kickasm(location (const byte*) PLAYFIELD_CHARSET#0) {{ .fill 8,$00 // Place a filled char at the start of the charset
    .import binary "nes-screen.imap"
 }}
  kickasm(location (const byte*) PLAYFIELD_SCREEN_ORIGINAL#0) {{ .import binary "nes-screen.iscr"
 }}
  to:@27
@27: scope:[]  from @14
  [3] phi()
  [4] call main 
  to:@end
@end: scope:[]  from @27
  [5] phi()
main: scope:[main]  from @27
  [6] phi()
  [7] call sid_rnd_init 
  to:main::@21
main::@21: scope:[main]  from main
  asm { sei  }
  [9] call render_init 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [10] phi()
  [11] call play_init 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [12] phi()
  [13] call play_spawn_current 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [14] phi()
  [15] call render_playfield 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [16] (byte*~) current_piece_gfx#87 ← (byte*) current_piece_gfx#17
  [17] (byte~) current_piece_char#75 ← (byte) current_piece_char#13
  [18] call render_current 
  [19] (byte*~) current_piece#70 ← (byte*)*((const word[]) PIECES#0 + (byte~) play_spawn_current::$3)
  to:main::@1
main::@1: scope:[main]  from main::@10 main::@25
  [20] (byte) current_movedown_counter#12 ← phi( main::@10/(byte) current_movedown_counter#10 main::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [20] (byte) keyboard_events_size#19 ← phi( main::@10/(byte) keyboard_events_size#16 main::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [20] (byte) current_piece_char#16 ← phi( main::@10/(byte) current_piece_char#11 main::@25/(byte) current_piece_char#13 )
  [20] (byte) current_ypos#22 ← phi( main::@10/(byte) current_ypos#14 main::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [20] (byte) current_xpos#11 ← phi( main::@10/(byte) current_xpos#20 main::@25/(byte/signed byte/word/signed word/dword/signed dword) 3 )
  [20] (byte*) current_piece_gfx#10 ← phi( main::@10/(byte*) current_piece_gfx#15 main::@25/(byte*) current_piece_gfx#17 )
  [20] (byte) current_orientation#10 ← phi( main::@10/(byte) current_orientation#19 main::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [20] (byte*) current_piece#16 ← phi( main::@10/(byte*) current_piece#10 main::@25/(byte*~) current_piece#70 )
  to:main::@4
main::@4: scope:[main]  from main::@1 main::@4
  [21] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@4
  to:main::@7
main::@7: scope:[main]  from main::@4 main::@7
  [22] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 254) goto main::@7
  to:main::@9
main::@9: scope:[main]  from main::@7
  [23] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  [24] call keyboard_event_scan 
  to:main::@27
main::@27: scope:[main]  from main::@9
  [25] phi()
  [26] call keyboard_event_get 
  [27] (byte) keyboard_event_get::return#3 ← (byte) keyboard_event_get::return#2
  to:main::@28
main::@28: scope:[main]  from main::@27
  [28] (byte) main::key_event#0 ← (byte) keyboard_event_get::return#3
  [29] (byte) play_move_down::key_event#0 ← (byte) main::key_event#0
  [30] call play_move_down 
  [31] (byte) play_move_down::return#3 ← (byte) play_move_down::return#2
  to:main::@29
main::@29: scope:[main]  from main::@28
  [32] (byte~) main::$10 ← (byte) play_move_down::return#3
  [33] (byte) main::render#1 ← (byte/signed byte/word/signed word/dword/signed dword) 0 + (byte~) main::$10
  [34] (byte) play_move_leftright::key_event#0 ← (byte) main::key_event#0
  [35] call play_move_leftright 
  [36] (byte) play_move_leftright::return#4 ← (byte) play_move_leftright::return#1
  to:main::@30
main::@30: scope:[main]  from main::@29
  [37] (byte~) main::$11 ← (byte) play_move_leftright::return#4
  [38] (byte) main::render#2 ← (byte) main::render#1 + (byte~) main::$11
  [39] (byte) play_move_rotate::key_event#0 ← (byte) main::key_event#0
  [40] call play_move_rotate 
  [41] (byte) play_move_rotate::return#4 ← (byte) play_move_rotate::return#1
  to:main::@31
main::@31: scope:[main]  from main::@30
  [42] (byte~) main::$12 ← (byte) play_move_rotate::return#4
  [43] (byte) main::render#3 ← (byte) main::render#2 + (byte~) main::$12
  [44] if((byte) main::render#3==(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@10
  to:main::@19
main::@19: scope:[main]  from main::@31
  [45] phi()
  [46] call render_playfield 
  to:main::@32
main::@32: scope:[main]  from main::@19
  [47] (byte~) current_ypos#71 ← (byte) current_ypos#14
  [48] (byte~) current_xpos#96 ← (byte) current_xpos#20
  [49] (byte*~) current_piece_gfx#88 ← (byte*) current_piece_gfx#15
  [50] (byte~) current_piece_char#76 ← (byte) current_piece_char#11
  [51] call render_current 
  to:main::@10
main::@10: scope:[main]  from main::@31 main::@32
  [52] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:main::@1
render_current: scope:[render_current]  from main::@25 main::@32
  [53] (byte) current_piece_char#62 ← phi( main::@25/(byte~) current_piece_char#75 main::@32/(byte~) current_piece_char#76 )
  [53] (byte*) current_piece_gfx#53 ← phi( main::@25/(byte*~) current_piece_gfx#87 main::@32/(byte*~) current_piece_gfx#88 )
  [53] (byte) current_xpos#48 ← phi( main::@25/(byte/signed byte/word/signed word/dword/signed dword) 3 main::@32/(byte~) current_xpos#96 )
  [53] (byte) current_ypos#10 ← phi( main::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@32/(byte~) current_ypos#71 )
  [54] (byte) render_current::ypos2#0 ← (byte) current_ypos#10 << (byte/signed byte/word/signed word/dword/signed dword) 1
  to:render_current::@1
render_current::@1: scope:[render_current]  from render_current render_current::@2
  [55] (byte) render_current::i#4 ← phi( render_current/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@2/(byte) render_current::i#8 )
  [55] (byte) render_current::l#3 ← phi( render_current/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@2/(byte) render_current::l#1 )
  [55] (byte) render_current::ypos2#2 ← phi( render_current/(byte) render_current::ypos2#0 render_current::@2/(byte) render_current::ypos2#1 )
  [56] if((byte) render_current::ypos2#2>=(byte/signed byte/word/signed word/dword/signed dword) 2*(const byte) PLAYFIELD_LINES#0) goto render_current::@2
  to:render_current::@6
render_current::@6: scope:[render_current]  from render_current::@1
  [57] (byte*) render_current::screen_line#0 ← *((const byte*[PLAYFIELD_LINES#0+3]) screen_lines#0 + (byte) render_current::ypos2#2)
  [58] (byte) render_current::xpos#0 ← (byte) current_xpos#48
  to:render_current::@3
render_current::@3: scope:[render_current]  from render_current::@4 render_current::@6
  [59] (byte) render_current::c#2 ← phi( render_current::@4/(byte) render_current::c#1 render_current::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [59] (byte) render_current::xpos#2 ← phi( render_current::@4/(byte) render_current::xpos#1 render_current::@6/(byte) render_current::xpos#0 )
  [59] (byte) render_current::i#2 ← phi( render_current::@4/(byte) render_current::i#1 render_current::@6/(byte) render_current::i#4 )
  [60] (byte) render_current::current_cell#0 ← *((byte*) current_piece_gfx#53 + (byte) render_current::i#2)
  [61] (byte) render_current::i#1 ← ++ (byte) render_current::i#2
  [62] if((byte) render_current::current_cell#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto render_current::@4
  to:render_current::@7
render_current::@7: scope:[render_current]  from render_current::@3
  [63] if((byte) render_current::xpos#2>=(const byte) PLAYFIELD_COLS#0) goto render_current::@4
  to:render_current::@8
render_current::@8: scope:[render_current]  from render_current::@7
  [64] *((byte*) render_current::screen_line#0 + (byte) render_current::xpos#2) ← (byte) current_piece_char#62
  to:render_current::@4
render_current::@4: scope:[render_current]  from render_current::@3 render_current::@7 render_current::@8
  [65] (byte) render_current::xpos#1 ← ++ (byte) render_current::xpos#2
  [66] (byte) render_current::c#1 ← ++ (byte) render_current::c#2
  [67] if((byte) render_current::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_current::@3
  to:render_current::@2
render_current::@2: scope:[render_current]  from render_current::@1 render_current::@4
  [68] (byte) render_current::i#8 ← phi( render_current::@1/(byte) render_current::i#4 render_current::@4/(byte) render_current::i#1 )
  [69] (byte) render_current::ypos2#1 ← (byte) render_current::ypos2#2 + (byte/signed byte/word/signed word/dword/signed dword) 2
  [70] (byte) render_current::l#1 ← ++ (byte) render_current::l#3
  [71] if((byte) render_current::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_current::@1
  to:render_current::@return
render_current::@return: scope:[render_current]  from render_current::@2
  [72] return 
  to:@return
render_playfield: scope:[render_playfield]  from main::@19 main::@24
  [73] phi()
  to:render_playfield::@1
render_playfield::@1: scope:[render_playfield]  from render_playfield render_playfield::@3
  [74] (byte) render_playfield::i#3 ← phi( render_playfield/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@3/(byte) render_playfield::i#1 )
  [74] (byte) render_playfield::l#2 ← phi( render_playfield/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@3/(byte) render_playfield::l#1 )
  [75] (byte~) render_playfield::$1 ← (byte) render_playfield::l#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [76] (byte*) render_playfield::line#0 ← *((const byte*[PLAYFIELD_LINES#0+3]) screen_lines#0 + (byte~) render_playfield::$1)
  to:render_playfield::@2
render_playfield::@2: scope:[render_playfield]  from render_playfield::@1 render_playfield::@2
  [77] (byte) render_playfield::c#2 ← phi( render_playfield::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@2/(byte) render_playfield::c#1 )
  [77] (byte*) render_playfield::line#2 ← phi( render_playfield::@1/(byte*) render_playfield::line#0 render_playfield::@2/(byte*) render_playfield::line#1 )
  [77] (byte) render_playfield::i#2 ← phi( render_playfield::@1/(byte) render_playfield::i#3 render_playfield::@2/(byte) render_playfield::i#1 )
  [78] *((byte*) render_playfield::line#2) ← *((const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 + (byte) render_playfield::i#2)
  [79] (byte*) render_playfield::line#1 ← ++ (byte*) render_playfield::line#2
  [80] (byte) render_playfield::i#1 ← ++ (byte) render_playfield::i#2
  [81] (byte) render_playfield::c#1 ← ++ (byte) render_playfield::c#2
  [82] if((byte) render_playfield::c#1!=(const byte) PLAYFIELD_COLS#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_playfield::@2
  to:render_playfield::@3
render_playfield::@3: scope:[render_playfield]  from render_playfield::@2
  [83] (byte) render_playfield::l#1 ← ++ (byte) render_playfield::l#2
  [84] if((byte) render_playfield::l#1!=(const byte) PLAYFIELD_LINES#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_playfield::@1
  to:render_playfield::@return
render_playfield::@return: scope:[render_playfield]  from render_playfield::@3
  [85] return 
  to:@return
play_move_rotate: scope:[play_move_rotate]  from main::@30
  [86] if((byte) play_move_rotate::key_event#0==(const byte) KEY_Z#0) goto play_move_rotate::@1
  to:play_move_rotate::@6
play_move_rotate::@6: scope:[play_move_rotate]  from play_move_rotate
  [87] if((byte) play_move_rotate::key_event#0==(const byte) KEY_X#0) goto play_move_rotate::@2
  to:play_move_rotate::@return
play_move_rotate::@return: scope:[play_move_rotate]  from play_move_rotate::@11 play_move_rotate::@14 play_move_rotate::@6
  [88] (byte*) current_piece_gfx#15 ← phi( play_move_rotate::@11/(byte*) current_piece_gfx#4 play_move_rotate::@14/(byte*) current_piece_gfx#14 play_move_rotate::@6/(byte*) current_piece_gfx#14 )
  [88] (byte) current_orientation#19 ← phi( play_move_rotate::@11/(byte) current_orientation#4 play_move_rotate::@14/(byte) current_orientation#14 play_move_rotate::@6/(byte) current_orientation#14 )
  [88] (byte) play_move_rotate::return#1 ← phi( play_move_rotate::@11/(byte/signed byte/word/signed word/dword/signed dword) 1 play_move_rotate::@14/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_rotate::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [89] return 
  to:@return
play_move_rotate::@2: scope:[play_move_rotate]  from play_move_rotate::@6
  [90] (byte/signed word/word/dword/signed dword~) play_move_rotate::$2 ← (byte) current_orientation#14 + (byte/signed byte/word/signed word/dword/signed dword) 16
  [91] (byte) play_move_rotate::orientation#2 ← (byte/signed word/word/dword/signed dword~) play_move_rotate::$2 & (byte/signed byte/word/signed word/dword/signed dword) 63
  to:play_move_rotate::@4
play_move_rotate::@4: scope:[play_move_rotate]  from play_move_rotate::@1 play_move_rotate::@2
  [92] (byte) play_move_rotate::orientation#3 ← phi( play_move_rotate::@1/(byte) play_move_rotate::orientation#1 play_move_rotate::@2/(byte) play_move_rotate::orientation#2 )
  [93] (byte) play_collision::xpos#3 ← (byte) current_xpos#20
  [94] (byte) play_collision::ypos#3 ← (byte) current_ypos#14
  [95] (byte) play_collision::orientation#3 ← (byte) play_move_rotate::orientation#3
  [96] (byte*~) current_piece#74 ← (byte*) current_piece#10
  [97] call play_collision 
  [98] (byte) play_collision::return#13 ← (byte) play_collision::return#14
  to:play_move_rotate::@14
play_move_rotate::@14: scope:[play_move_rotate]  from play_move_rotate::@4
  [99] (byte~) play_move_rotate::$6 ← (byte) play_collision::return#13
  [100] if((byte~) play_move_rotate::$6!=(const byte) COLLISION_NONE#0) goto play_move_rotate::@return
  to:play_move_rotate::@11
play_move_rotate::@11: scope:[play_move_rotate]  from play_move_rotate::@14
  [101] (byte) current_orientation#4 ← (byte) play_move_rotate::orientation#3
  [102] (byte*) current_piece_gfx#4 ← (byte*) current_piece#10 + (byte) current_orientation#4
  to:play_move_rotate::@return
play_move_rotate::@1: scope:[play_move_rotate]  from play_move_rotate
  [103] (byte/signed word/word/dword/signed dword~) play_move_rotate::$4 ← (byte) current_orientation#14 - (byte/signed byte/word/signed word/dword/signed dword) 16
  [104] (byte) play_move_rotate::orientation#1 ← (byte/signed word/word/dword/signed dword~) play_move_rotate::$4 & (byte/signed byte/word/signed word/dword/signed dword) 63
  to:play_move_rotate::@4
play_collision: scope:[play_collision]  from play_move_down::@12 play_move_leftright::@1 play_move_leftright::@7 play_move_rotate::@4
  [105] (byte) play_collision::xpos#5 ← phi( play_move_down::@12/(byte) play_collision::xpos#0 play_move_leftright::@1/(byte) play_collision::xpos#1 play_move_leftright::@7/(byte) play_collision::xpos#2 play_move_rotate::@4/(byte) play_collision::xpos#3 )
  [105] (byte) play_collision::ypos#4 ← phi( play_move_down::@12/(byte) play_collision::ypos#0 play_move_leftright::@1/(byte) play_collision::ypos#1 play_move_leftright::@7/(byte) play_collision::ypos#2 play_move_rotate::@4/(byte) play_collision::ypos#3 )
  [105] (byte) play_collision::orientation#4 ← phi( play_move_down::@12/(byte) play_collision::orientation#0 play_move_leftright::@1/(byte) play_collision::orientation#1 play_move_leftright::@7/(byte) play_collision::orientation#2 play_move_rotate::@4/(byte) play_collision::orientation#3 )
  [105] (byte*) current_piece#12 ← phi( play_move_down::@12/(byte*~) current_piece#71 play_move_leftright::@1/(byte*~) current_piece#72 play_move_leftright::@7/(byte*~) current_piece#73 play_move_rotate::@4/(byte*~) current_piece#74 )
  [106] (byte*) play_collision::piece_gfx#0 ← (byte*) current_piece#12 + (byte) play_collision::orientation#4
  [107] (byte) play_collision::ypos2#0 ← (byte) play_collision::ypos#4 << (byte/signed byte/word/signed word/dword/signed dword) 1
  to:play_collision::@1
play_collision::@1: scope:[play_collision]  from play_collision play_collision::@20
  [108] (byte) play_collision::l#6 ← phi( play_collision/(byte/signed byte/word/signed word/dword/signed dword) 0 play_collision::@20/(byte) play_collision::l#1 )
  [108] (byte) play_collision::i#3 ← phi( play_collision/(byte/signed byte/word/signed word/dword/signed dword) 0 play_collision::@20/(byte~) play_collision::i#11 )
  [108] (byte) play_collision::ypos2#2 ← phi( play_collision/(byte) play_collision::ypos2#0 play_collision::@20/(byte) play_collision::ypos2#1 )
  [109] (byte*) play_collision::playfield_line#0 ← *((const byte*[PLAYFIELD_LINES#0]) playfield_lines#0 + (byte) play_collision::ypos2#2)
  [110] (byte~) play_collision::col#9 ← (byte) play_collision::xpos#5
  to:play_collision::@2
play_collision::@2: scope:[play_collision]  from play_collision::@1 play_collision::@21
  [111] (byte) play_collision::c#2 ← phi( play_collision::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 play_collision::@21/(byte) play_collision::c#1 )
  [111] (byte) play_collision::col#2 ← phi( play_collision::@1/(byte~) play_collision::col#9 play_collision::@21/(byte) play_collision::col#1 )
  [111] (byte) play_collision::i#2 ← phi( play_collision::@1/(byte) play_collision::i#3 play_collision::@21/(byte~) play_collision::i#13 )
  [112] (byte) play_collision::i#1 ← ++ (byte) play_collision::i#2
  [113] if(*((byte*) play_collision::piece_gfx#0 + (byte) play_collision::i#2)==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_collision::@3
  to:play_collision::@8
play_collision::@8: scope:[play_collision]  from play_collision::@2
  [114] if((byte) play_collision::ypos2#2<(byte/signed byte/word/signed word/dword/signed dword) 2*(const byte) PLAYFIELD_LINES#0) goto play_collision::@4
  to:play_collision::@return
play_collision::@return: scope:[play_collision]  from play_collision::@17 play_collision::@4 play_collision::@5 play_collision::@6 play_collision::@8
  [115] (byte) play_collision::return#14 ← phi( play_collision::@4/(const byte) COLLISION_LEFT#0 play_collision::@5/(const byte) COLLISION_RIGHT#0 play_collision::@6/(const byte) COLLISION_PLAYFIELD#0 play_collision::@17/(const byte) COLLISION_NONE#0 play_collision::@8/(const byte) COLLISION_BOTTOM#0 )
  [116] return 
  to:@return
play_collision::@4: scope:[play_collision]  from play_collision::@8
  [117] (byte~) play_collision::$7 ← (byte) play_collision::col#2 & (byte/word/signed word/dword/signed dword) 128
  [118] if((byte~) play_collision::$7==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_collision::@5
  to:play_collision::@return
play_collision::@5: scope:[play_collision]  from play_collision::@4
  [119] if((byte) play_collision::col#2<(const byte) PLAYFIELD_COLS#0) goto play_collision::@6
  to:play_collision::@return
play_collision::@6: scope:[play_collision]  from play_collision::@5
  [120] if(*((byte*) play_collision::playfield_line#0 + (byte) play_collision::col#2)==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_collision::@3
  to:play_collision::@return
play_collision::@3: scope:[play_collision]  from play_collision::@2 play_collision::@6
  [121] (byte) play_collision::col#1 ← ++ (byte) play_collision::col#2
  [122] (byte) play_collision::c#1 ← ++ (byte) play_collision::c#2
  [123] if((byte) play_collision::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto play_collision::@21
  to:play_collision::@17
play_collision::@17: scope:[play_collision]  from play_collision::@3
  [124] (byte) play_collision::ypos2#1 ← (byte) play_collision::ypos2#2 + (byte/signed byte/word/signed word/dword/signed dword) 2
  [125] (byte) play_collision::l#1 ← ++ (byte) play_collision::l#6
  [126] if((byte) play_collision::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto play_collision::@20
  to:play_collision::@return
play_collision::@20: scope:[play_collision]  from play_collision::@17
  [127] (byte~) play_collision::i#11 ← (byte) play_collision::i#1
  to:play_collision::@1
play_collision::@21: scope:[play_collision]  from play_collision::@3
  [128] (byte~) play_collision::i#13 ← (byte) play_collision::i#1
  to:play_collision::@2
play_move_leftright: scope:[play_move_leftright]  from main::@29
  [129] if((byte) play_move_leftright::key_event#0==(const byte) KEY_COMMA#0) goto play_move_leftright::@1
  to:play_move_leftright::@6
play_move_leftright::@6: scope:[play_move_leftright]  from play_move_leftright
  [130] if((byte) play_move_leftright::key_event#0!=(const byte) KEY_DOT#0) goto play_move_leftright::@return
  to:play_move_leftright::@7
play_move_leftright::@7: scope:[play_move_leftright]  from play_move_leftright::@6
  [131] (byte) play_collision::xpos#2 ← (byte) current_xpos#16 + (byte/signed byte/word/signed word/dword/signed dword) 1
  [132] (byte) play_collision::ypos#2 ← (byte) current_ypos#14
  [133] (byte) play_collision::orientation#2 ← (byte) current_orientation#14
  [134] (byte*~) current_piece#73 ← (byte*) current_piece#10
  [135] call play_collision 
  [136] (byte) play_collision::return#12 ← (byte) play_collision::return#14
  to:play_move_leftright::@15
play_move_leftright::@15: scope:[play_move_leftright]  from play_move_leftright::@7
  [137] (byte~) play_move_leftright::$4 ← (byte) play_collision::return#12
  [138] if((byte~) play_move_leftright::$4!=(const byte) COLLISION_NONE#0) goto play_move_leftright::@return
  to:play_move_leftright::@8
play_move_leftright::@8: scope:[play_move_leftright]  from play_move_leftright::@15
  [139] (byte) current_xpos#3 ← ++ (byte) current_xpos#16
  to:play_move_leftright::@return
play_move_leftright::@return: scope:[play_move_leftright]  from play_move_leftright::@11 play_move_leftright::@14 play_move_leftright::@15 play_move_leftright::@6 play_move_leftright::@8
  [140] (byte) current_xpos#20 ← phi( play_move_leftright::@11/(byte) current_xpos#5 play_move_leftright::@15/(byte) current_xpos#16 play_move_leftright::@8/(byte) current_xpos#3 play_move_leftright::@14/(byte) current_xpos#16 play_move_leftright::@6/(byte) current_xpos#16 )
  [140] (byte) play_move_leftright::return#1 ← phi( play_move_leftright::@11/(byte/signed byte/word/signed word/dword/signed dword) 1 play_move_leftright::@15/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_leftright::@8/(byte/signed byte/word/signed word/dword/signed dword) 1 play_move_leftright::@14/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_leftright::@6/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [141] return 
  to:@return
play_move_leftright::@1: scope:[play_move_leftright]  from play_move_leftright
  [142] (byte) play_collision::xpos#1 ← (byte) current_xpos#16 - (byte/signed byte/word/signed word/dword/signed dword) 1
  [143] (byte) play_collision::ypos#1 ← (byte) current_ypos#14
  [144] (byte) play_collision::orientation#1 ← (byte) current_orientation#14
  [145] (byte*~) current_piece#72 ← (byte*) current_piece#10
  [146] call play_collision 
  [147] (byte) play_collision::return#1 ← (byte) play_collision::return#14
  to:play_move_leftright::@14
play_move_leftright::@14: scope:[play_move_leftright]  from play_move_leftright::@1
  [148] (byte~) play_move_leftright::$8 ← (byte) play_collision::return#1
  [149] if((byte~) play_move_leftright::$8!=(const byte) COLLISION_NONE#0) goto play_move_leftright::@return
  to:play_move_leftright::@11
play_move_leftright::@11: scope:[play_move_leftright]  from play_move_leftright::@14
  [150] (byte) current_xpos#5 ← -- (byte) current_xpos#16
  to:play_move_leftright::@return
play_move_down: scope:[play_move_down]  from main::@28
  [151] (byte) current_movedown_counter#1 ← ++ (byte) current_movedown_counter#12
  [152] if((byte) play_move_down::key_event#0!=(const byte) KEY_SPACE#0) goto play_move_down::@1
  to:play_move_down::@8
play_move_down::@8: scope:[play_move_down]  from play_move_down
  [153] phi()
  to:play_move_down::@1
play_move_down::@1: scope:[play_move_down]  from play_move_down play_move_down::@8
  [154] (byte) play_move_down::movedown#10 ← phi( play_move_down/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_down::@8/(byte/signed byte/word/signed word/dword/signed dword) 1 )
  [155] call keyboard_event_pressed 
  [156] (byte) keyboard_event_pressed::return#12 ← (byte) keyboard_event_pressed::return#11
  to:play_move_down::@17
play_move_down::@17: scope:[play_move_down]  from play_move_down::@1
  [157] (byte~) play_move_down::$2 ← (byte) keyboard_event_pressed::return#12
  [158] if((byte~) play_move_down::$2==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_move_down::@2
  to:play_move_down::@9
play_move_down::@9: scope:[play_move_down]  from play_move_down::@17
  [159] if((byte) current_movedown_counter#1<(const byte) current_movedown_fast#0) goto play_move_down::@2
  to:play_move_down::@10
play_move_down::@10: scope:[play_move_down]  from play_move_down::@9
  [160] (byte) play_move_down::movedown#2 ← ++ (byte) play_move_down::movedown#10
  to:play_move_down::@2
play_move_down::@2: scope:[play_move_down]  from play_move_down::@10 play_move_down::@17 play_move_down::@9
  [161] (byte) play_move_down::movedown#7 ← phi( play_move_down::@10/(byte) play_move_down::movedown#2 play_move_down::@17/(byte) play_move_down::movedown#10 play_move_down::@9/(byte) play_move_down::movedown#10 )
  [162] if((byte) current_movedown_counter#1<(const byte) current_movedown_slow#0) goto play_move_down::@4
  to:play_move_down::@11
play_move_down::@11: scope:[play_move_down]  from play_move_down::@2
  [163] (byte) play_move_down::movedown#3 ← ++ (byte) play_move_down::movedown#7
  to:play_move_down::@4
play_move_down::@4: scope:[play_move_down]  from play_move_down::@11 play_move_down::@2
  [164] (byte) play_move_down::movedown#6 ← phi( play_move_down::@11/(byte) play_move_down::movedown#3 play_move_down::@2/(byte) play_move_down::movedown#7 )
  [165] if((byte) play_move_down::movedown#6==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_move_down::@return
  to:play_move_down::@12
play_move_down::@12: scope:[play_move_down]  from play_move_down::@4
  [166] (byte) play_collision::ypos#0 ← (byte) current_ypos#22 + (byte/signed byte/word/signed word/dword/signed dword) 1
  [167] (byte) play_collision::xpos#0 ← (byte) current_xpos#11
  [168] (byte) play_collision::orientation#0 ← (byte) current_orientation#10
  [169] (byte*~) current_piece#71 ← (byte*) current_piece#16
  [170] call play_collision 
  [171] (byte) play_collision::return#0 ← (byte) play_collision::return#14
  to:play_move_down::@18
play_move_down::@18: scope:[play_move_down]  from play_move_down::@12
  [172] (byte~) play_move_down::$12 ← (byte) play_collision::return#0
  [173] if((byte~) play_move_down::$12==(const byte) COLLISION_NONE#0) goto play_move_down::@6
  to:play_move_down::@13
play_move_down::@13: scope:[play_move_down]  from play_move_down::@18
  [174] phi()
  [175] call play_lock_current 
  to:play_move_down::@19
play_move_down::@19: scope:[play_move_down]  from play_move_down::@13
  [176] phi()
  [177] call play_remove_lines 
  to:play_move_down::@20
play_move_down::@20: scope:[play_move_down]  from play_move_down::@19
  [178] phi()
  [179] call play_spawn_current 
  [180] (byte*~) current_piece#75 ← (byte*)*((const word[]) PIECES#0 + (byte~) play_spawn_current::$3)
  to:play_move_down::@7
play_move_down::@7: scope:[play_move_down]  from play_move_down::@20 play_move_down::@6
  [181] (byte) current_piece_char#21 ← phi( play_move_down::@20/(byte) current_piece_char#13 play_move_down::@6/(byte) current_piece_char#16 )
  [181] (byte) current_xpos#34 ← phi( play_move_down::@20/(byte/signed byte/word/signed word/dword/signed dword) 3 play_move_down::@6/(byte) current_xpos#11 )
  [181] (byte*) current_piece_gfx#27 ← phi( play_move_down::@20/(byte*) current_piece_gfx#17 play_move_down::@6/(byte*) current_piece_gfx#10 )
  [181] (byte) current_orientation#29 ← phi( play_move_down::@20/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_down::@6/(byte) current_orientation#10 )
  [181] (byte*) current_piece#20 ← phi( play_move_down::@20/(byte*~) current_piece#75 play_move_down::@6/(byte*) current_piece#16 )
  [181] (byte) current_ypos#30 ← phi( play_move_down::@20/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_down::@6/(byte) current_ypos#1 )
  to:play_move_down::@return
play_move_down::@return: scope:[play_move_down]  from play_move_down::@4 play_move_down::@7
  [182] (byte) current_piece_char#11 ← phi( play_move_down::@4/(byte) current_piece_char#16 play_move_down::@7/(byte) current_piece_char#21 )
  [182] (byte) current_xpos#16 ← phi( play_move_down::@4/(byte) current_xpos#11 play_move_down::@7/(byte) current_xpos#34 )
  [182] (byte*) current_piece_gfx#14 ← phi( play_move_down::@4/(byte*) current_piece_gfx#10 play_move_down::@7/(byte*) current_piece_gfx#27 )
  [182] (byte) current_orientation#14 ← phi( play_move_down::@4/(byte) current_orientation#10 play_move_down::@7/(byte) current_orientation#29 )
  [182] (byte*) current_piece#10 ← phi( play_move_down::@4/(byte*) current_piece#16 play_move_down::@7/(byte*) current_piece#20 )
  [182] (byte) current_ypos#14 ← phi( play_move_down::@4/(byte) current_ypos#22 play_move_down::@7/(byte) current_ypos#30 )
  [182] (byte) current_movedown_counter#10 ← phi( play_move_down::@4/(byte) current_movedown_counter#1 play_move_down::@7/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [182] (byte) play_move_down::return#2 ← phi( play_move_down::@4/(byte/signed byte/word/signed word/dword/signed dword) 0 play_move_down::@7/(byte/signed byte/word/signed word/dword/signed dword) 1 )
  [183] return 
  to:@return
play_move_down::@6: scope:[play_move_down]  from play_move_down::@18
  [184] (byte) current_ypos#1 ← ++ (byte) current_ypos#22
  to:play_move_down::@7
play_spawn_current: scope:[play_spawn_current]  from main::@23 play_move_down::@20
  [185] phi()
  to:play_spawn_current::@1
play_spawn_current::@1: scope:[play_spawn_current]  from play_spawn_current play_spawn_current::@7
  [186] (byte) play_spawn_current::piece_idx#2 ← phi( play_spawn_current/(byte/signed byte/word/signed word/dword/signed dword) 7 play_spawn_current::@7/(byte) play_spawn_current::piece_idx#1 )
  [187] if((byte) play_spawn_current::piece_idx#2==(byte/signed byte/word/signed word/dword/signed dword) 7) goto play_spawn_current::@2
  to:play_spawn_current::@3
play_spawn_current::@3: scope:[play_spawn_current]  from play_spawn_current::@1
  [188] (byte~) play_spawn_current::$3 ← (byte) play_spawn_current::piece_idx#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [189] (byte*) current_piece_gfx#17 ← (byte*)*((const word[]) PIECES#0 + (byte~) play_spawn_current::$3) + (byte/signed byte/word/signed word/dword/signed dword) 0
  [190] (byte) current_piece_char#13 ← *((const byte[]) PIECES_CHARS#0 + (byte) play_spawn_current::piece_idx#2)
  to:play_spawn_current::@return
play_spawn_current::@return: scope:[play_spawn_current]  from play_spawn_current::@3
  [191] return 
  to:@return
play_spawn_current::@2: scope:[play_spawn_current]  from play_spawn_current::@1
  [192] phi()
  [193] call sid_rnd 
  [194] (byte) sid_rnd::return#2 ← (byte) sid_rnd::return#0
  to:play_spawn_current::@7
play_spawn_current::@7: scope:[play_spawn_current]  from play_spawn_current::@2
  [195] (byte~) play_spawn_current::$1 ← (byte) sid_rnd::return#2
  [196] (byte) play_spawn_current::piece_idx#1 ← (byte~) play_spawn_current::$1 & (byte/signed byte/word/signed word/dword/signed dword) 7
  to:play_spawn_current::@1
sid_rnd: scope:[sid_rnd]  from play_spawn_current::@2
  [197] (byte) sid_rnd::return#0 ← *((const byte*) SID_VOICE3_OSC#0)
  to:sid_rnd::@return
sid_rnd::@return: scope:[sid_rnd]  from sid_rnd
  [198] return 
  to:@return
play_remove_lines: scope:[play_remove_lines]  from play_move_down::@19
  [199] phi()
  to:play_remove_lines::@1
play_remove_lines::@1: scope:[play_remove_lines]  from play_remove_lines play_remove_lines::@4
  [200] (byte) play_remove_lines::y#8 ← phi( play_remove_lines/(byte/signed byte/word/signed word/dword/signed dword) 0 play_remove_lines::@4/(byte) play_remove_lines::y#1 )
  [200] (byte) play_remove_lines::w#12 ← phi( play_remove_lines/(const byte) PLAYFIELD_LINES#0*(const byte) PLAYFIELD_COLS#0-(byte/signed byte/word/signed word/dword/signed dword) 1 play_remove_lines::@4/(byte) play_remove_lines::w#11 )
  [200] (byte) play_remove_lines::r#3 ← phi( play_remove_lines/(const byte) PLAYFIELD_LINES#0*(const byte) PLAYFIELD_COLS#0-(byte/signed byte/word/signed word/dword/signed dword) 1 play_remove_lines::@4/(byte) play_remove_lines::r#1 )
  to:play_remove_lines::@2
play_remove_lines::@2: scope:[play_remove_lines]  from play_remove_lines::@1 play_remove_lines::@3
  [201] (byte) play_remove_lines::full#4 ← phi( play_remove_lines::@1/(byte/signed byte/word/signed word/dword/signed dword) 1 play_remove_lines::@3/(byte) play_remove_lines::full#2 )
  [201] (byte) play_remove_lines::x#2 ← phi( play_remove_lines::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 play_remove_lines::@3/(byte) play_remove_lines::x#1 )
  [201] (byte) play_remove_lines::w#4 ← phi( play_remove_lines::@1/(byte) play_remove_lines::w#12 play_remove_lines::@3/(byte) play_remove_lines::w#1 )
  [201] (byte) play_remove_lines::r#2 ← phi( play_remove_lines::@1/(byte) play_remove_lines::r#3 play_remove_lines::@3/(byte) play_remove_lines::r#1 )
  [202] (byte) play_remove_lines::c#0 ← *((const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 + (byte) play_remove_lines::r#2)
  [203] (byte) play_remove_lines::r#1 ← -- (byte) play_remove_lines::r#2
  [204] if((byte) play_remove_lines::c#0!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_remove_lines::@17
  to:play_remove_lines::@3
play_remove_lines::@3: scope:[play_remove_lines]  from play_remove_lines::@17 play_remove_lines::@2
  [205] (byte) play_remove_lines::full#2 ← phi( play_remove_lines::@17/(byte) play_remove_lines::full#4 play_remove_lines::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [206] *((const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 + (byte) play_remove_lines::w#4) ← (byte) play_remove_lines::c#0
  [207] (byte) play_remove_lines::w#1 ← -- (byte) play_remove_lines::w#4
  [208] (byte) play_remove_lines::x#1 ← ++ (byte) play_remove_lines::x#2
  [209] if((byte) play_remove_lines::x#1!=(const byte) PLAYFIELD_COLS#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto play_remove_lines::@2
  to:play_remove_lines::@9
play_remove_lines::@9: scope:[play_remove_lines]  from play_remove_lines::@3
  [210] if((byte) play_remove_lines::full#2!=(byte/signed byte/word/signed word/dword/signed dword) 1) goto play_remove_lines::@4
  to:play_remove_lines::@10
play_remove_lines::@10: scope:[play_remove_lines]  from play_remove_lines::@9
  [211] (byte) play_remove_lines::w#2 ← (byte) play_remove_lines::w#1 + (const byte) PLAYFIELD_COLS#0
  to:play_remove_lines::@4
play_remove_lines::@4: scope:[play_remove_lines]  from play_remove_lines::@10 play_remove_lines::@9
  [212] (byte) play_remove_lines::w#11 ← phi( play_remove_lines::@10/(byte) play_remove_lines::w#2 play_remove_lines::@9/(byte) play_remove_lines::w#1 )
  [213] (byte) play_remove_lines::y#1 ← ++ (byte) play_remove_lines::y#8
  [214] if((byte) play_remove_lines::y#1!=(const byte) PLAYFIELD_LINES#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto play_remove_lines::@1
  to:play_remove_lines::@5
play_remove_lines::@5: scope:[play_remove_lines]  from play_remove_lines::@4 play_remove_lines::@6
  [215] (byte) play_remove_lines::w#6 ← phi( play_remove_lines::@4/(byte) play_remove_lines::w#11 play_remove_lines::@6/(byte) play_remove_lines::w#3 )
  [216] if((byte) play_remove_lines::w#6!=(byte/word/signed word/dword/signed dword) 255) goto play_remove_lines::@6
  to:play_remove_lines::@return
play_remove_lines::@return: scope:[play_remove_lines]  from play_remove_lines::@5
  [217] return 
  to:@return
play_remove_lines::@6: scope:[play_remove_lines]  from play_remove_lines::@5
  [218] *((const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 + (byte) play_remove_lines::w#6) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  [219] (byte) play_remove_lines::w#3 ← -- (byte) play_remove_lines::w#6
  to:play_remove_lines::@5
play_remove_lines::@17: scope:[play_remove_lines]  from play_remove_lines::@2
  [220] phi()
  to:play_remove_lines::@3
play_lock_current: scope:[play_lock_current]  from play_move_down::@13
  [221] (byte) play_lock_current::ypos2#0 ← (byte) current_ypos#22 << (byte/signed byte/word/signed word/dword/signed dword) 1
  to:play_lock_current::@1
play_lock_current::@1: scope:[play_lock_current]  from play_lock_current play_lock_current::@7
  [222] (byte) play_lock_current::l#6 ← phi( play_lock_current/(byte/signed byte/word/signed word/dword/signed dword) 0 play_lock_current::@7/(byte) play_lock_current::l#1 )
  [222] (byte) play_lock_current::i#3 ← phi( play_lock_current/(byte/signed byte/word/signed word/dword/signed dword) 0 play_lock_current::@7/(byte~) play_lock_current::i#7 )
  [222] (byte) play_lock_current::ypos2#2 ← phi( play_lock_current/(byte) play_lock_current::ypos2#0 play_lock_current::@7/(byte) play_lock_current::ypos2#1 )
  [223] (byte*) play_lock_current::playfield_line#0 ← *((const byte*[PLAYFIELD_LINES#0]) playfield_lines#0 + (byte) play_lock_current::ypos2#2)
  [224] (byte) play_lock_current::col#0 ← (byte) current_xpos#11
  to:play_lock_current::@2
play_lock_current::@2: scope:[play_lock_current]  from play_lock_current::@1 play_lock_current::@8
  [225] (byte) play_lock_current::c#2 ← phi( play_lock_current::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 play_lock_current::@8/(byte) play_lock_current::c#1 )
  [225] (byte) play_lock_current::col#2 ← phi( play_lock_current::@1/(byte) play_lock_current::col#0 play_lock_current::@8/(byte) play_lock_current::col#1 )
  [225] (byte) play_lock_current::i#2 ← phi( play_lock_current::@1/(byte) play_lock_current::i#3 play_lock_current::@8/(byte~) play_lock_current::i#9 )
  [226] (byte) play_lock_current::i#1 ← ++ (byte) play_lock_current::i#2
  [227] if(*((byte*) current_piece_gfx#10 + (byte) play_lock_current::i#2)==(byte/signed byte/word/signed word/dword/signed dword) 0) goto play_lock_current::@3
  to:play_lock_current::@4
play_lock_current::@4: scope:[play_lock_current]  from play_lock_current::@2
  [228] *((byte*) play_lock_current::playfield_line#0 + (byte) play_lock_current::col#2) ← (byte) current_piece_char#16
  to:play_lock_current::@3
play_lock_current::@3: scope:[play_lock_current]  from play_lock_current::@2 play_lock_current::@4
  [229] (byte) play_lock_current::col#1 ← ++ (byte) play_lock_current::col#2
  [230] (byte) play_lock_current::c#1 ← ++ (byte) play_lock_current::c#2
  [231] if((byte) play_lock_current::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto play_lock_current::@8
  to:play_lock_current::@5
play_lock_current::@5: scope:[play_lock_current]  from play_lock_current::@3
  [232] (byte) play_lock_current::ypos2#1 ← (byte) play_lock_current::ypos2#2 + (byte/signed byte/word/signed word/dword/signed dword) 2
  [233] (byte) play_lock_current::l#1 ← ++ (byte) play_lock_current::l#6
  [234] if((byte) play_lock_current::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto play_lock_current::@7
  to:play_lock_current::@return
play_lock_current::@return: scope:[play_lock_current]  from play_lock_current::@5
  [235] return 
  to:@return
play_lock_current::@7: scope:[play_lock_current]  from play_lock_current::@5
  [236] (byte~) play_lock_current::i#7 ← (byte) play_lock_current::i#1
  to:play_lock_current::@1
play_lock_current::@8: scope:[play_lock_current]  from play_lock_current::@3
  [237] (byte~) play_lock_current::i#9 ← (byte) play_lock_current::i#1
  to:play_lock_current::@2
keyboard_event_pressed: scope:[keyboard_event_pressed]  from keyboard_event_scan::@10 keyboard_event_scan::@11 keyboard_event_scan::@20 keyboard_event_scan::@9 play_move_down::@1
  [238] (byte) keyboard_event_pressed::keycode#5 ← phi( keyboard_event_scan::@10/(const byte) KEY_CTRL#0 keyboard_event_scan::@11/(const byte) KEY_COMMODORE#0 keyboard_event_scan::@20/(const byte) KEY_LSHIFT#0 keyboard_event_scan::@9/(const byte) KEY_RSHIFT#0 play_move_down::@1/(const byte) KEY_SPACE#0 )
  [239] (byte~) keyboard_event_pressed::$0 ← (byte) keyboard_event_pressed::keycode#5 >> (byte/signed byte/word/signed word/dword/signed dword) 3
  [240] (byte) keyboard_event_pressed::row_bits#0 ← *((const byte[8]) keyboard_scan_values#0 + (byte~) keyboard_event_pressed::$0)
  [241] (byte~) keyboard_event_pressed::$1 ← (byte) keyboard_event_pressed::keycode#5 & (byte/signed byte/word/signed word/dword/signed dword) 7
  [242] (byte) keyboard_event_pressed::return#11 ← (byte) keyboard_event_pressed::row_bits#0 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte~) keyboard_event_pressed::$1)
  to:keyboard_event_pressed::@return
keyboard_event_pressed::@return: scope:[keyboard_event_pressed]  from keyboard_event_pressed
  [243] return 
  to:@return
keyboard_event_get: scope:[keyboard_event_get]  from main::@27
  [244] if((byte) keyboard_events_size#13==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_get::@return
  to:keyboard_event_get::@3
keyboard_event_get::@3: scope:[keyboard_event_get]  from keyboard_event_get
  [245] (byte) keyboard_events_size#4 ← -- (byte) keyboard_events_size#13
  [246] (byte) keyboard_event_get::return#1 ← *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#4)
  to:keyboard_event_get::@return
keyboard_event_get::@return: scope:[keyboard_event_get]  from keyboard_event_get keyboard_event_get::@3
  [247] (byte) keyboard_events_size#16 ← phi( keyboard_event_get/(byte) keyboard_events_size#13 keyboard_event_get::@3/(byte) keyboard_events_size#4 )
  [247] (byte) keyboard_event_get::return#2 ← phi( keyboard_event_get/(byte/word/signed word/dword/signed dword) 255 keyboard_event_get::@3/(byte) keyboard_event_get::return#1 )
  [248] return 
  to:@return
keyboard_event_scan: scope:[keyboard_event_scan]  from main::@9
  [249] phi()
  to:keyboard_event_scan::@1
keyboard_event_scan::@1: scope:[keyboard_event_scan]  from keyboard_event_scan keyboard_event_scan::@3
  [250] (byte) keyboard_events_size#29 ← phi( keyboard_event_scan/(byte) keyboard_events_size#19 keyboard_event_scan::@3/(byte) keyboard_events_size#13 )
  [250] (byte) keyboard_event_scan::keycode#11 ← phi( keyboard_event_scan/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@3/(byte) keyboard_event_scan::keycode#14 )
  [250] (byte) keyboard_event_scan::row#2 ← phi( keyboard_event_scan/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@3/(byte) keyboard_event_scan::row#1 )
  [251] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_event_scan::row#2
  [252] call keyboard_matrix_read 
  [253] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
  to:keyboard_event_scan::@25
keyboard_event_scan::@25: scope:[keyboard_event_scan]  from keyboard_event_scan::@1
  [254] (byte) keyboard_event_scan::row_scan#0 ← (byte) keyboard_matrix_read::return#2
  [255] if((byte) keyboard_event_scan::row_scan#0!=*((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2)) goto keyboard_event_scan::@4
  to:keyboard_event_scan::@13
keyboard_event_scan::@13: scope:[keyboard_event_scan]  from keyboard_event_scan::@25
  [256] (byte) keyboard_event_scan::keycode#1 ← (byte) keyboard_event_scan::keycode#11 + (byte/signed byte/word/signed word/dword/signed dword) 8
  to:keyboard_event_scan::@3
keyboard_event_scan::@3: scope:[keyboard_event_scan]  from keyboard_event_scan::@13 keyboard_event_scan::@19
  [257] (byte) keyboard_events_size#13 ← phi( keyboard_event_scan::@13/(byte) keyboard_events_size#29 keyboard_event_scan::@19/(byte) keyboard_events_size#30 )
  [257] (byte) keyboard_event_scan::keycode#14 ← phi( keyboard_event_scan::@13/(byte) keyboard_event_scan::keycode#1 keyboard_event_scan::@19/(byte) keyboard_event_scan::keycode#15 )
  [258] (byte) keyboard_event_scan::row#1 ← ++ (byte) keyboard_event_scan::row#2
  [259] if((byte) keyboard_event_scan::row#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@1
  to:keyboard_event_scan::@20
keyboard_event_scan::@20: scope:[keyboard_event_scan]  from keyboard_event_scan::@3
  [260] phi()
  [261] call keyboard_event_pressed 
  [262] (byte) keyboard_event_pressed::return#0 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@26
keyboard_event_scan::@26: scope:[keyboard_event_scan]  from keyboard_event_scan::@20
  [263] (byte~) keyboard_event_scan::$14 ← (byte) keyboard_event_pressed::return#0
  [264] if((byte~) keyboard_event_scan::$14==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@21
keyboard_event_scan::@21: scope:[keyboard_event_scan]  from keyboard_event_scan::@26
  [265] phi()
  to:keyboard_event_scan::@9
keyboard_event_scan::@9: scope:[keyboard_event_scan]  from keyboard_event_scan::@21 keyboard_event_scan::@26
  [266] (byte) keyboard_modifiers#11 ← phi( keyboard_event_scan::@21/(byte/signed byte/word/signed word/dword/signed dword) 0|(const byte) KEY_MODIFIER_LSHIFT#0 keyboard_event_scan::@26/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [267] call keyboard_event_pressed 
  [268] (byte) keyboard_event_pressed::return#1 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@27
keyboard_event_scan::@27: scope:[keyboard_event_scan]  from keyboard_event_scan::@9
  [269] (byte~) keyboard_event_scan::$18 ← (byte) keyboard_event_pressed::return#1
  [270] if((byte~) keyboard_event_scan::$18==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@22
keyboard_event_scan::@22: scope:[keyboard_event_scan]  from keyboard_event_scan::@27
  [271] (byte) keyboard_modifiers#3 ← (byte) keyboard_modifiers#11 | (const byte) KEY_MODIFIER_RSHIFT#0
  to:keyboard_event_scan::@10
keyboard_event_scan::@10: scope:[keyboard_event_scan]  from keyboard_event_scan::@22 keyboard_event_scan::@27
  [272] (byte) keyboard_modifiers#12 ← phi( keyboard_event_scan::@22/(byte) keyboard_modifiers#3 keyboard_event_scan::@27/(byte) keyboard_modifiers#11 )
  [273] call keyboard_event_pressed 
  [274] (byte) keyboard_event_pressed::return#2 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@28
keyboard_event_scan::@28: scope:[keyboard_event_scan]  from keyboard_event_scan::@10
  [275] (byte~) keyboard_event_scan::$22 ← (byte) keyboard_event_pressed::return#2
  [276] if((byte~) keyboard_event_scan::$22==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@11
  to:keyboard_event_scan::@23
keyboard_event_scan::@23: scope:[keyboard_event_scan]  from keyboard_event_scan::@28
  [277] (byte) keyboard_modifiers#4 ← (byte) keyboard_modifiers#12 | (const byte) KEY_MODIFIER_CTRL#0
  to:keyboard_event_scan::@11
keyboard_event_scan::@11: scope:[keyboard_event_scan]  from keyboard_event_scan::@23 keyboard_event_scan::@28
  [278] (byte) keyboard_modifiers#13 ← phi( keyboard_event_scan::@23/(byte) keyboard_modifiers#4 keyboard_event_scan::@28/(byte) keyboard_modifiers#12 )
  [279] call keyboard_event_pressed 
  [280] (byte) keyboard_event_pressed::return#10 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@29
keyboard_event_scan::@29: scope:[keyboard_event_scan]  from keyboard_event_scan::@11
  [281] (byte~) keyboard_event_scan::$26 ← (byte) keyboard_event_pressed::return#10
  [282] if((byte~) keyboard_event_scan::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@return
  to:keyboard_event_scan::@24
keyboard_event_scan::@24: scope:[keyboard_event_scan]  from keyboard_event_scan::@29
  [283] (byte) keyboard_modifiers#5 ← (byte) keyboard_modifiers#13 | (const byte) KEY_MODIFIER_COMMODORE#0
  to:keyboard_event_scan::@return
keyboard_event_scan::@return: scope:[keyboard_event_scan]  from keyboard_event_scan::@24 keyboard_event_scan::@29
  [284] return 
  to:@return
keyboard_event_scan::@4: scope:[keyboard_event_scan]  from keyboard_event_scan::@25 keyboard_event_scan::@5
  [285] (byte) keyboard_events_size#10 ← phi( keyboard_event_scan::@25/(byte) keyboard_events_size#29 keyboard_event_scan::@5/(byte) keyboard_events_size#30 )
  [285] (byte) keyboard_event_scan::keycode#10 ← phi( keyboard_event_scan::@25/(byte) keyboard_event_scan::keycode#11 keyboard_event_scan::@5/(byte) keyboard_event_scan::keycode#15 )
  [285] (byte) keyboard_event_scan::col#2 ← phi( keyboard_event_scan::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@5/(byte) keyboard_event_scan::col#1 )
  [286] (byte~) keyboard_event_scan::$3 ← (byte) keyboard_event_scan::row_scan#0 ^ *((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2)
  [287] (byte~) keyboard_event_scan::$4 ← (byte~) keyboard_event_scan::$3 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_event_scan::col#2)
  [288] if((byte~) keyboard_event_scan::$4==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@5
  to:keyboard_event_scan::@15
keyboard_event_scan::@15: scope:[keyboard_event_scan]  from keyboard_event_scan::@4
  [289] if((byte) keyboard_events_size#10==(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@5
  to:keyboard_event_scan::@16
keyboard_event_scan::@16: scope:[keyboard_event_scan]  from keyboard_event_scan::@15
  [290] (byte) keyboard_event_scan::event_type#0 ← (byte) keyboard_event_scan::row_scan#0 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_event_scan::col#2)
  [291] if((byte) keyboard_event_scan::event_type#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@7
  to:keyboard_event_scan::@17
keyboard_event_scan::@17: scope:[keyboard_event_scan]  from keyboard_event_scan::@16
  [292] *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#10) ← (byte) keyboard_event_scan::keycode#10
  [293] (byte) keyboard_events_size#2 ← ++ (byte) keyboard_events_size#10
  to:keyboard_event_scan::@5
keyboard_event_scan::@5: scope:[keyboard_event_scan]  from keyboard_event_scan::@15 keyboard_event_scan::@17 keyboard_event_scan::@4 keyboard_event_scan::@7
  [294] (byte) keyboard_events_size#30 ← phi( keyboard_event_scan::@17/(byte) keyboard_events_size#2 keyboard_event_scan::@4/(byte) keyboard_events_size#10 keyboard_event_scan::@15/(byte) keyboard_events_size#10 keyboard_event_scan::@7/(byte) keyboard_events_size#1 )
  [295] (byte) keyboard_event_scan::keycode#15 ← ++ (byte) keyboard_event_scan::keycode#10
  [296] (byte) keyboard_event_scan::col#1 ← ++ (byte) keyboard_event_scan::col#2
  [297] if((byte) keyboard_event_scan::col#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@4
  to:keyboard_event_scan::@19
keyboard_event_scan::@19: scope:[keyboard_event_scan]  from keyboard_event_scan::@5
  [298] *((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2) ← (byte) keyboard_event_scan::row_scan#0
  to:keyboard_event_scan::@3
keyboard_event_scan::@7: scope:[keyboard_event_scan]  from keyboard_event_scan::@16
  [299] (byte/word/dword~) keyboard_event_scan::$11 ← (byte) keyboard_event_scan::keycode#10 | (byte/signed byte/word/signed word/dword/signed dword) 64
  [300] *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#10) ← (byte/word/dword~) keyboard_event_scan::$11
  [301] (byte) keyboard_events_size#1 ← ++ (byte) keyboard_events_size#10
  to:keyboard_event_scan::@5
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_event_scan::@1
  [302] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0)
  [303] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [304] return 
  to:@return
play_init: scope:[play_init]  from main::@22
  [305] phi()
  to:play_init::@1
play_init::@1: scope:[play_init]  from play_init play_init::@1
  [306] (byte) play_init::idx#2 ← phi( play_init/(byte/signed byte/word/signed word/dword/signed dword) 0 play_init::@1/(byte) play_init::idx#1 )
  [306] (byte*) play_init::pli#2 ← phi( play_init/(const byte[PLAYFIELD_LINES#0*PLAYFIELD_COLS#0]) playfield#0 play_init::@1/(byte*) play_init::pli#1 )
  [306] (byte) play_init::j#2 ← phi( play_init/(byte/signed byte/word/signed word/dword/signed dword) 0 play_init::@1/(byte) play_init::j#1 )
  [307] (byte~) play_init::$1 ← (byte) play_init::j#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [308] *((const byte*[PLAYFIELD_LINES#0]) playfield_lines#0 + (byte~) play_init::$1) ← (byte*) play_init::pli#2
  [309] *((const byte[PLAYFIELD_LINES#0+1]) playfield_lines_idx#0 + (byte) play_init::j#2) ← (byte) play_init::idx#2
  [310] (byte*) play_init::pli#1 ← (byte*) play_init::pli#2 + (const byte) PLAYFIELD_COLS#0
  [311] (byte) play_init::idx#1 ← (byte) play_init::idx#2 + (const byte) PLAYFIELD_COLS#0
  [312] (byte) play_init::j#1 ← ++ (byte) play_init::j#2
  [313] if((byte) play_init::j#1!=(const byte) PLAYFIELD_LINES#0-(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto play_init::@1
  to:play_init::@2
play_init::@2: scope:[play_init]  from play_init::@1
  [314] *((const byte[PLAYFIELD_LINES#0+1]) playfield_lines_idx#0+(const byte) PLAYFIELD_LINES#0) ← (const byte) PLAYFIELD_COLS#0*(const byte) PLAYFIELD_LINES#0
  to:play_init::@return
play_init::@return: scope:[play_init]  from play_init::@2
  [315] return 
  to:@return
render_init: scope:[render_init]  from main::@21
  [316] phi()
  to:render_init::vicSelectGfxBank1
render_init::vicSelectGfxBank1: scope:[render_init]  from render_init
  [317] *((const byte*) CIA2_PORT_A_DDR#0) ← (byte/signed byte/word/signed word/dword/signed dword) 3
  to:render_init::vicSelectGfxBank1_toDd001
render_init::vicSelectGfxBank1_toDd001: scope:[render_init]  from render_init::vicSelectGfxBank1
  [318] phi()
  to:render_init::vicSelectGfxBank1_@1
render_init::vicSelectGfxBank1_@1: scope:[render_init]  from render_init::vicSelectGfxBank1_toDd001
  [319] *((const byte*) CIA2_PORT_A#0) ← (const byte) render_init::vicSelectGfxBank1_toDd001_return#0
  to:render_init::toD0181
render_init::toD0181: scope:[render_init]  from render_init::vicSelectGfxBank1_@1
  [320] phi()
  to:render_init::@8
render_init::@8: scope:[render_init]  from render_init::toD0181
  [321] *((const byte*) D018#0) ← (const byte) render_init::toD0181_return#0
  [322] *((const byte*) D011#0) ← (const byte) VIC_ECM#0|(const byte) VIC_DEN#0|(const byte) VIC_RSEL#0|(byte/signed byte/word/signed word/dword/signed dword) 3
  [323] *((const byte*) BGCOL1#0) ← (const byte) BLACK#0
  [324] *((const byte*) BGCOL2#0) ← (const byte) BLUE#0
  [325] *((const byte*) BGCOL3#0) ← (const byte) CYAN#0
  [326] *((const byte*) BGCOL4#0) ← (const byte) GREY#0
  [327] call fill 
  to:render_init::@9
render_init::@9: scope:[render_init]  from render_init::@8
  [328] phi()
  [329] call render_screen_original 
  to:render_init::@1
render_init::@1: scope:[render_init]  from render_init::@1 render_init::@9
  [330] (byte*) render_init::li#2 ← phi( render_init::@1/(byte*) render_init::li#1 render_init::@9/(const byte*) PLAYFIELD_SCREEN#0+(byte/signed byte/word/signed word/dword/signed dword) 40+(byte/signed byte/word/signed word/dword/signed dword) 16 )
  [330] (byte) render_init::i#2 ← phi( render_init::@1/(byte) render_init::i#1 render_init::@9/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [331] (byte~) render_init::$10 ← (byte) render_init::i#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [332] *((const byte*[PLAYFIELD_LINES#0+3]) screen_lines#0 + (byte~) render_init::$10) ← (byte*) render_init::li#2
  [333] (byte*) render_init::li#1 ← (byte*) render_init::li#2 + (byte/signed byte/word/signed word/dword/signed dword) 40
  [334] (byte) render_init::i#1 ← ++ (byte) render_init::i#2
  [335] if((byte) render_init::i#1!=(const byte) PLAYFIELD_LINES#0+(byte/signed byte/word/signed word/dword/signed dword) 2+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_init::@1
  to:render_init::@2
render_init::@2: scope:[render_init]  from render_init::@1 render_init::@5
  [336] (byte) render_init::l#4 ← phi( render_init::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 render_init::@5/(byte) render_init::l#1 )
  [336] (byte*) render_init::line#4 ← phi( render_init::@1/(const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 15 render_init::@5/(byte*) render_init::line#1 )
  to:render_init::@3
render_init::@3: scope:[render_init]  from render_init::@2 render_init::@3
  [337] (byte) render_init::c#2 ← phi( render_init::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 render_init::@3/(byte) render_init::c#1 )
  [338] (byte*~) render_init::$15 ← (byte*) render_init::line#4 + (byte) render_init::c#2
  [339] *((byte*~) render_init::$15) ← (const byte) WHITE#0
  [340] (byte) render_init::c#1 ← ++ (byte) render_init::c#2
  [341] if((byte) render_init::c#1!=(const byte) PLAYFIELD_COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_init::@3
  to:render_init::@5
render_init::@5: scope:[render_init]  from render_init::@3
  [342] (byte*) render_init::line#1 ← (byte*) render_init::line#4 + (byte/signed byte/word/signed word/dword/signed dword) 40
  [343] (byte) render_init::l#1 ← ++ (byte) render_init::l#4
  [344] if((byte) render_init::l#1!=(const byte) PLAYFIELD_LINES#0+(byte/signed byte/word/signed word/dword/signed dword) 1+(byte/signed byte/word/signed word/dword/signed dword) 1) goto render_init::@2
  to:render_init::@return
render_init::@return: scope:[render_init]  from render_init::@5
  [345] return 
  to:@return
render_screen_original: scope:[render_screen_original]  from render_init::@9
  [346] phi()
  to:render_screen_original::@1
render_screen_original::@1: scope:[render_screen_original]  from render_screen_original render_screen_original::@7
  [347] (byte) render_screen_original::y#6 ← phi( render_screen_original/(byte/signed byte/word/signed word/dword/signed dword) 0 render_screen_original::@7/(byte) render_screen_original::y#1 )
  [347] (byte*) render_screen_original::orig#4 ← phi( render_screen_original/(const byte*) PLAYFIELD_SCREEN_ORIGINAL#0+(byte/signed byte/word/signed word/dword/signed dword) 32*(byte/signed byte/word/signed word/dword/signed dword) 2 render_screen_original::@7/(byte*) render_screen_original::orig#1 )
  [347] (byte*) render_screen_original::screen#7 ← phi( render_screen_original/(const byte*) PLAYFIELD_SCREEN#0 render_screen_original::@7/(byte*) render_screen_original::screen#3 )
  to:render_screen_original::@2
render_screen_original::@2: scope:[render_screen_original]  from render_screen_original::@1 render_screen_original::@2
  [348] (byte) render_screen_original::x#4 ← phi( render_screen_original::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 render_screen_original::@2/(byte) render_screen_original::x#1 )
  [348] (byte*) render_screen_original::screen#4 ← phi( render_screen_original::@1/(byte*) render_screen_original::screen#7 render_screen_original::@2/(byte*) render_screen_original::screen#1 )
  [349] *((byte*) render_screen_original::screen#4) ← (const byte) render_screen_original::SPACE#0
  [350] (byte*) render_screen_original::screen#1 ← ++ (byte*) render_screen_original::screen#4
  [351] (byte) render_screen_original::x#1 ← ++ (byte) render_screen_original::x#4
  [352] if((byte) render_screen_original::x#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_screen_original::@2
  to:render_screen_original::@3
render_screen_original::@3: scope:[render_screen_original]  from render_screen_original::@2 render_screen_original::@3
  [353] (byte) render_screen_original::x#5 ← phi( render_screen_original::@2/(byte) render_screen_original::x#1 render_screen_original::@3/(byte) render_screen_original::x#2 )
  [353] (byte*) render_screen_original::screen#5 ← phi( render_screen_original::@2/(byte*) render_screen_original::screen#1 render_screen_original::@3/(byte*) render_screen_original::screen#2 )
  [353] (byte*) render_screen_original::orig#2 ← phi( render_screen_original::@2/(byte*) render_screen_original::orig#4 render_screen_original::@3/(byte*) render_screen_original::orig#1 )
  [354] (byte/signed word/word/dword/signed dword~) render_screen_original::$3 ← *((byte*) render_screen_original::orig#2) + (byte/signed byte/word/signed word/dword/signed dword) 1
  [355] *((byte*) render_screen_original::screen#5) ← (byte/signed word/word/dword/signed dword~) render_screen_original::$3
  [356] (byte*) render_screen_original::screen#2 ← ++ (byte*) render_screen_original::screen#5
  [357] (byte*) render_screen_original::orig#1 ← ++ (byte*) render_screen_original::orig#2
  [358] (byte) render_screen_original::x#2 ← ++ (byte) render_screen_original::x#5
  [359] if((byte) render_screen_original::x#2!=(byte/signed byte/word/signed word/dword/signed dword) 36) goto render_screen_original::@3
  to:render_screen_original::@4
render_screen_original::@4: scope:[render_screen_original]  from render_screen_original::@3 render_screen_original::@4
  [360] (byte) render_screen_original::x#6 ← phi( render_screen_original::@3/(byte) render_screen_original::x#2 render_screen_original::@4/(byte) render_screen_original::x#3 )
  [360] (byte*) render_screen_original::screen#6 ← phi( render_screen_original::@3/(byte*) render_screen_original::screen#2 render_screen_original::@4/(byte*) render_screen_original::screen#3 )
  [361] *((byte*) render_screen_original::screen#6) ← (const byte) render_screen_original::SPACE#0
  [362] (byte*) render_screen_original::screen#3 ← ++ (byte*) render_screen_original::screen#6
  [363] (byte) render_screen_original::x#3 ← ++ (byte) render_screen_original::x#6
  [364] if((byte) render_screen_original::x#3!=(byte/signed byte/word/signed word/dword/signed dword) 40) goto render_screen_original::@4
  to:render_screen_original::@7
render_screen_original::@7: scope:[render_screen_original]  from render_screen_original::@4
  [365] (byte) render_screen_original::y#1 ← ++ (byte) render_screen_original::y#6
  [366] if((byte) render_screen_original::y#1!=(byte/signed byte/word/signed word/dword/signed dword) 25) goto render_screen_original::@1
  to:render_screen_original::@return
render_screen_original::@return: scope:[render_screen_original]  from render_screen_original::@7
  [367] return 
  to:@return
fill: scope:[fill]  from render_init::@8
  [368] phi()
  to:fill::@1
fill::@1: scope:[fill]  from fill fill::@1
  [369] (byte*) fill::addr#2 ← phi( fill/(const byte*) COLS#0 fill::@1/(byte*) fill::addr#1 )
  [370] *((byte*) fill::addr#2) ← (const byte) DARK_GREY#0
  [371] (byte*) fill::addr#1 ← ++ (byte*) fill::addr#2
  [372] if((byte*) fill::addr#1!=(const byte*) fill::end#0) goto fill::@1
  to:fill::@return
fill::@return: scope:[fill]  from fill::@1
  [373] return 
  to:@return
sid_rnd_init: scope:[sid_rnd_init]  from main
  [374] *((const word*) SID_VOICE3_FREQ#0) ← (word/dword/signed dword) 65535
  [375] *((const byte*) SID_VOICE3_CONTROL#0) ← (const byte) SID_CONTROL_NOISE#0
  to:sid_rnd_init::@return
sid_rnd_init::@return: scope:[sid_rnd_init]  from sid_rnd_init
  [376] return 
  to:@return
