const nomodify byte* COLORRAM = (byte*) 55296
const nomodify byte* DEFAULT_SCREEN = (byte*) 1024
const nomodify byte LIGHT_BLUE = $e
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void __start()
void clrscr()
byte clrscr::c
byte clrscr::c#1 reg byte y 20002.0
byte clrscr::c#2 reg byte y 12501.25
byte clrscr::l
byte clrscr::l#1 reg byte x 2002.0
byte clrscr::l#2 reg byte x 333.6666666666667
byte* clrscr::line_cols
byte* clrscr::line_cols#1 line_cols zp[2]:11 1001.0
byte* clrscr::line_cols#5 line_cols zp[2]:11 1500.375
byte* clrscr::line_text
byte* clrscr::line_text#1 line_text zp[2]:3 667.3333333333334
byte* clrscr::line_text#5 line_text zp[2]:3 1714.7142857142858
byte conio_cursor_x loadstore zp[1]:13 25001.816666666673
byte conio_cursor_y loadstore zp[1]:14 380953.6666666666
byte* conio_line_color loadstore zp[2]:17 269513.51219512196
byte* conio_line_text loadstore zp[2]:15 266266.3614457832
void cputc(byte cputc::c)
byte cputc::c
byte cputc::c#0 reg byte a 20002.0
byte cputc::c#1 reg byte a 20002.0
byte cputc::c#2 reg byte a 110002.0
void cputln()
void cputs(to_nomodify byte* cputs::s)
byte cputs::c
byte cputs::c#1 reg byte a 10001.0
to_nomodify byte* cputs::s
to_nomodify byte* cputs::s#0 s zp[2]:3 5000.5
to_nomodify byte* cputs::s#1 s zp[2]:3 551.0
to_nomodify byte* cputs::s#2 s zp[2]:3 15502.0
void cscroll()
void main()
const byte* main::str[4]  = "cml"
const byte* main::str1[6]  = "rules"
void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
void* memcpy::destination
void* memcpy::destination#2 destination zp[2]:21
byte* memcpy::dst
byte* memcpy::dst#1 dst zp[2]:21 1.0000000001E10
byte* memcpy::dst#2 dst zp[2]:21 1.0033333334666666E10
byte* memcpy::dst#4 dst zp[2]:21 2.00000002E8
word memcpy::num
void* memcpy::return
void* memcpy::source
void* memcpy::source#2 source zp[2]:11
byte* memcpy::src
byte* memcpy::src#1 src zp[2]:11 2.0000000002E10
byte* memcpy::src#2 src zp[2]:11 1.002500000125E10
byte* memcpy::src#4 src zp[2]:11 1.00000001E8
byte* memcpy::src_end
byte* memcpy::src_end#0 src_end zp[2]:19 1.26250000025E9
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 1.4285714287142856E9
byte* memset::dst
byte* memset::dst#1 dst zp[2]:11 2.0000000002E10
byte* memset::dst#2 dst zp[2]:11 1.3366666668333332E10
byte* memset::dst#4 dst zp[2]:11 2.00000002E8
byte* memset::end
byte* memset::end#0 end zp[2]:21 1.6833333336666665E9
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:11
void printf_padding(byte printf_padding::pad , byte printf_padding::length)
byte printf_padding::i
byte printf_padding::i#1 i zp[1]:10 20002.0
byte printf_padding::i#2 i zp[1]:10 7500.75
byte printf_padding::length
byte printf_padding::length#0 length zp[1]:8 202.0
byte printf_padding::length#1 length zp[1]:8 202.0
byte printf_padding::length#3 length zp[1]:8 1700.5
byte printf_padding::pad
byte printf_padding::pad#4 pad zp[1]:9 1666.8333333333333
void printf_string(byte* printf_string::str , byte printf_string::format_min_length , byte printf_string::format_justify_left)
word~ printf_string::$9 zp[2]:6 101.0
struct printf_format_string printf_string::format
byte printf_string::format_justify_left
byte printf_string::format_justify_left#10 format_justify_left zp[1]:2 12.625
byte printf_string::format_min_length
signed byte printf_string::len
signed byte printf_string::len#0 reg byte a 202.0
signed byte printf_string::padding
signed byte printf_string::padding#1 padding zp[1]:5 101.0
signed byte printf_string::padding#3 padding zp[1]:5 33.666666666666664
byte* printf_string::str
byte* printf_string::str#10 str zp[2]:3 14.428571428571429
word strlen(byte* strlen::str)
word strlen::len
word strlen::len#1 len zp[2]:6 10001.0
word strlen::len#2 len zp[2]:6 5025.75
word strlen::return
word strlen::return#2 return zp[2]:6 202.0
byte* strlen::str
byte* strlen::str#0 str zp[2]:11 20002.0
byte* strlen::str#1 str zp[2]:11 551.0
byte* strlen::str#2 str zp[2]:11 10334.666666666666

reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:2 [ printf_string::format_justify_left#10 ]
zp[2]:3 [ printf_string::str#10 cputs::s#2 cputs::s#1 cputs::s#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[1]:5 [ printf_string::padding#3 printf_string::padding#1 ]
zp[2]:6 [ strlen::len#2 strlen::len#1 strlen::return#2 printf_string::$9 ]
zp[1]:8 [ printf_padding::length#3 printf_padding::length#0 printf_padding::length#1 ]
zp[1]:9 [ printf_padding::pad#4 ]
zp[1]:10 [ printf_padding::i#2 printf_padding::i#1 ]
reg byte a [ cputc::c#2 cputc::c#0 cputc::c#1 ]
zp[2]:11 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 strlen::str#2 strlen::str#1 strlen::str#0 clrscr::line_cols#5 clrscr::line_cols#1 ]
reg byte x [ memset::c#4 ]
zp[1]:13 [ conio_cursor_x ]
zp[1]:14 [ conio_cursor_y ]
zp[2]:15 [ conio_line_text ]
zp[2]:17 [ conio_line_color ]
reg byte a [ printf_string::len#0 ]
reg byte a [ cputs::c#1 ]
zp[2]:19 [ memcpy::src_end#0 ]
zp[2]:21 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
