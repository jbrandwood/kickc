__constant const char CH_HLINE = $40
__constant const char CH_LLCORNER = $6d
__constant const char CH_LRCORNER = $7d
__constant const char CH_LTEE = $6b
__constant const char CH_RTEE = $73
__constant const char CH_ULCORNER = $70
__constant const char CH_URCORNER = $6e
__constant const char CH_VLINE = $5d
__constant char * const COLORRAM = (char *) 55296
__constant const char COLOR_BLACK = 0
__constant const char COLOR_GRAY3 = $f
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant const char LIGHT_BLUE = $e
void MakeNiceScreen()
unsigned int MakeNiceScreen::$22 // zp[2]:24 1001.0
char MakeNiceScreen::$23 // reg byte a 2002.0
char MakeNiceScreen::$30 // reg byte a 2002.0
char MakeNiceScreen::I
char MakeNiceScreen::I#2 // I zp[1]:29 2002.0
char MakeNiceScreen::I#3 // I zp[1]:29 214.5
const struct $0 *MakeNiceScreen::T
const struct $0 *MakeNiceScreen::T#2 // T zp[2]:30 1001.0
const struct $0 *MakeNiceScreen::T#3 // T zp[2]:30 154.0
__constant struct $0 MakeNiceScreen::Text[] = { { Y: 2, Msg: "Wolfgang Amadeus Mozart" }, { Y: 4, Msg: ""Eine kleine Nachtmusik"" }, { Y: 5, Msg: "(KV 525)" }, { Y: 9, Msg: "Ported to the SID in 1987 by" }, { Y: $b, Msg: "Joachim von Bassewitz" }, { Y: $c, Msg: "(joachim@von-bassewitz.de)" }, { Y: $d, Msg: "and" }, { Y: $e, Msg: "Ullrich von Bassewitz" }, { Y: $f, Msg: "(ullrich@von-bassewitz.de)" }, { Y: $12, Msg: "C Implementation by" }, { Y: $13, Msg: "Ullrich von Bassewitz" }, { Y: $17, Msg: "Press any key to quit..." } }
char MakeNiceScreen::X
char MakeNiceScreen::X#1 // reg byte x 1001.0
void MakeTeeLine(char Y)
char MakeTeeLine::Y
char MakeTeeLine::Y#2 // reg byte a 1001.0
__constant char * const VICII_MEMORY = (char *) 53272
__loadstore volatile char XSize // zp[1]:32 38.45
__loadstore volatile char YSize // zp[1]:33 20.0
void __start()
char bgcolor(char color)
__constant char * const bgcolor::CONIO_BGCOLOR = (char *) 53281
char bgcolor::color
char bgcolor::old
char bgcolor::return
char bordercolor(char color)
__constant char * const bordercolor::CONIO_BORDERCOLOR = (char *) 53280
char bordercolor::color
char bordercolor::old
char bordercolor::return
void chline(char length)
char chline::i
char chline::i#1 // i zp[1]:26 200002.0
char chline::i#2 // i zp[1]:26 75000.75
char chline::length
char chline::length#0 // length zp[1]:27 2002.0
char chline::length#1 // length zp[1]:27 202.0
char chline::length#2 // length zp[1]:27 202.0
char chline::length#4 // length zp[1]:27 16867.333333333332
void clrscr()
char clrscr::c
char clrscr::c#1 // reg byte y 200002.0
char clrscr::c#2 // reg byte y 125001.25
char clrscr::l
char clrscr::l#1 // reg byte x 20002.0
char clrscr::l#2 // reg byte x 3333.6666666666665
char *clrscr::line_cols
char *clrscr::line_cols#1 // line_cols zp[2]:24 10001.0
char *clrscr::line_cols#5 // line_cols zp[2]:24 15000.375
char *clrscr::line_text
char *clrscr::line_text#1 // line_text zp[2]:22 6667.333333333333
char *clrscr::line_text#5 // line_text zp[2]:22 17143.285714285714
void conio_c64_init()
__constant char * const conio_c64_init::BASIC_CURSOR_LINE = (char *) 214
char conio_c64_init::line
char conio_c64_init::line#0 // reg byte a 11.0
char conio_c64_init::line#2 // reg byte a 22.0
__loadstore char conio_cursor_x // zp[1]:19 1.1941177765999997E9
__loadstore char conio_cursor_y // zp[1]:16 1.5000001251136363E9
__loadstore char *conio_line_color // zp[2]:14 1.5262500126125004E9
__loadstore char *conio_line_text // zp[2]:17 1.4890244025487807E9
__loadstore char conio_scroll_enable // zp[1]:20 7.575758336363636E7
__loadstore char conio_textcolor // zp[1]:21 6.558507146753247E7
void cputc(char c)
char cputc::c
char cputc::c#0 // reg byte a 20002.0
char cputc::c#1 // reg byte a 2.0000002E7
char cputc::c#8 // reg byte a 1.05005002E8
void cputcxy(char x , char y , char c)
char cputcxy::c
char cputcxy::c#2 // reg byte y 3333.6666666666665
char cputcxy::x
char cputcxy::y
char cputcxy::y#0 // reg byte a 2002.0
char cputcxy::y#2 // reg byte a 11002.0
void cputln()
void cputs(const char *s)
char cputs::c
char cputs::c#1 // reg byte a 1.0000001E7
const char *cputs::s
const char *cputs::s#0 // s zp[2]:22 5000000.5
const char *cputs::s#1 // s zp[2]:22 55001.0
const char *cputs::s#2 // s zp[2]:22 1.5050002E7
void cputsxy(char x , char y , const char *s)
const char *cputsxy::s
const char *cputsxy::s#0 // s zp[2]:22 1833.6666666666665
char cputsxy::x
char cputsxy::x#0 // reg byte x 5501.0
char cputsxy::y
char cputsxy::y#0 // reg byte a 5501.0
void cscroll()
void cvline(char length)
char cvline::i
char cvline::i#1 // i zp[1]:27 200002.0
char cvline::i#2 // i zp[1]:27 37500.375
char cvline::length
__constant char cvline::length#0 = $17 // length
char cvline::x
char cvline::x#0 // x zp[1]:28 10000.181818181818
char cvline::y
char cvline::y#0 // y zp[1]:26 20002.0
char cvline::y#1 // y zp[1]:26 60000.600000000006
char cvline::y#2 // y zp[1]:26 52500.75
void cvlinexy(char x , char y , char length)
char cvlinexy::length
char cvlinexy::x
char cvlinexy::x#1 // reg byte x 202.0
char cvlinexy::x#2 // reg byte x 1102.0
char cvlinexy::y
void gotoxy(char x , char y)
char *gotoxy::$5 // zp[2]:12 2.00000000002E11
char *gotoxy::$6 // zp[2]:8 2.00000000002E11
unsigned int gotoxy::$7 // zp[2]:8 1.500000000015E11
unsigned int gotoxy::$8 // zp[2]:10 2.00000000002E11
unsigned int gotoxy::$9 // zp[2]:8 2.00000000002E11
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:8 1.00000000001E11
char gotoxy::x
char gotoxy::x#10 // reg byte x 3.3333351834166668E10
char gotoxy::x#2 // reg byte x 10001.0
char gotoxy::x#5 // reg byte x 100001.0
char gotoxy::x#6 // reg byte x 2002.0
char gotoxy::x#8 // reg byte x 2.00000000002E11
char gotoxy::y
char gotoxy::y#1 // reg byte a 20002.0
char gotoxy::y#10 // reg byte a 3.3333333333666668E10
char gotoxy::y#2 // reg byte a 20002.0
char gotoxy::y#4 // reg byte a 22.0
char gotoxy::y#5 // reg byte a 200002.0
char gotoxy::y#7 // reg byte a 6.6666706672E10
char kbhit()
__constant char * const kbhit::CIA1_PORT_A = (char *) 56320
__constant char * const kbhit::CIA1_PORT_B = (char *) 56321
char kbhit::return
char kbhit::return#0 // reg byte a 367.33333333333337
char kbhit::return#2 // reg byte a 202.0
void main()
char main::$3 // reg byte a 202.0
void * memcpy(void *destination , void *source , unsigned int num)
void *memcpy::destination
void *memcpy::destination#2 // destination zp[2]:4
char *memcpy::dst
char *memcpy::dst#1 // dst zp[2]:4 1.00000000000001E14
char *memcpy::dst#2 // dst zp[2]:4 1.0003333333333467E14
char *memcpy::dst#4 // dst zp[2]:4 2.00000000002E11
unsigned int memcpy::num
void *memcpy::return
void *memcpy::source
void *memcpy::source#2 // source zp[2]:2
char *memcpy::src
char *memcpy::src#1 // src zp[2]:2 2.00000000000002E14
char *memcpy::src#2 // src zp[2]:2 1.0002500000000125E14
char *memcpy::src#4 // src zp[2]:2 1.00000000001E11
char *memcpy::src_end
char *memcpy::src_end#0 // src_end zp[2]:6 1.251250000000025E13
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#1 // reg byte x 2.0000000002E10
char memset::c#4 // reg byte x 1.4287142857143143E13
char *memset::dst
char *memset::dst#1 // dst zp[2]:2 2.00000000000002E14
char *memset::dst#2 // dst zp[2]:2 1.3336666666666834E14
char *memset::dst#4 // dst zp[2]:2 2.00000000002E11
char *memset::end
char *memset::end#0 // end zp[2]:4 1.6683333333333668E13
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#3 // str zp[2]:2
void screensize(char *x , char *y)
char *screensize::x
__constant char *screensize::x#0 = &XSize // x
char *screensize::y
__constant char *screensize::y#0 = &YSize // y
char scroll(char onoff)
char scroll::old
char scroll::onoff
__constant char scroll::onoff#0 = 0 // onoff
char scroll::return
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // len zp[2]:24 1000001.0
unsigned int strlen::len#2 // len zp[2]:24 500250.75
unsigned int strlen::return
unsigned int strlen::return#2 // return zp[2]:24 2002.0
char *strlen::str
char *strlen::str#0 // str zp[2]:22 2000002.0
char *strlen::str#1 // str zp[2]:22 5501.0
char *strlen::str#2 // str zp[2]:22 1003334.6666666667
char textcolor(char color)
char textcolor::color
char textcolor::old
char textcolor::return

reg byte a [ conio_c64_init::line#2 conio_c64_init::line#0 ]
reg byte a [ gotoxy::y#10 gotoxy::y#7 gotoxy::y#4 gotoxy::y#1 gotoxy::y#2 gotoxy::y#5 ]
reg byte x [ gotoxy::x#8 gotoxy::x#10 gotoxy::x#2 gotoxy::x#5 gotoxy::x#6 ]
zp[1]:29 [ MakeNiceScreen::I#3 MakeNiceScreen::I#2 ]
zp[2]:30 [ MakeNiceScreen::T#3 MakeNiceScreen::T#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
reg byte a [ cputcxy::y#2 cputcxy::y#0 ]
reg byte y [ cputcxy::c#2 ]
reg byte a [ cputc::c#8 cputc::c#0 cputc::c#1 ]
reg byte x [ cvlinexy::x#2 cvlinexy::x#1 ]
reg byte a [ MakeTeeLine::Y#2 ]
zp[2]:24 [ strlen::len#2 strlen::len#1 strlen::return#2 MakeNiceScreen::$22 clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[1]:27 [ cvline::i#2 cvline::i#1 chline::length#4 chline::length#2 chline::length#1 chline::length#0 ]
zp[1]:26 [ cvline::y#2 cvline::y#0 cvline::y#1 chline::i#2 chline::i#1 ]
zp[2]:22 [ cputs::s#2 cputs::s#1 cputs::s#0 cputsxy::s#0 strlen::str#2 strlen::str#1 strlen::str#0 clrscr::line_text#5 clrscr::line_text#1 ]
zp[2]:2 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
reg byte x [ memset::c#4 memset::c#1 ]
zp[1]:19 [ conio_cursor_x ]
zp[1]:16 [ conio_cursor_y ]
zp[2]:17 [ conio_line_text ]
zp[2]:14 [ conio_line_color ]
zp[1]:21 [ conio_textcolor ]
zp[1]:20 [ conio_scroll_enable ]
zp[1]:32 [ XSize ]
zp[1]:33 [ YSize ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$3 ]
zp[2]:8 [ gotoxy::$7 gotoxy::$9 gotoxy::line_offset#0 gotoxy::$6 ]
zp[2]:10 [ gotoxy::$8 ]
zp[2]:12 [ gotoxy::$5 ]
reg byte a [ MakeNiceScreen::$30 ]
reg byte a [ MakeNiceScreen::$23 ]
reg byte x [ MakeNiceScreen::X#1 ]
reg byte x [ cputsxy::x#0 ]
reg byte a [ cputsxy::y#0 ]
reg byte a [ kbhit::return#0 ]
zp[1]:28 [ cvline::x#0 ]
reg byte a [ cputs::c#1 ]
zp[2]:6 [ memcpy::src_end#0 ]
zp[2]:4 [ memset::end#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
