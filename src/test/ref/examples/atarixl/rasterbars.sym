const nomodify struct ATARI_ANTIC* ANTIC = (struct ATARI_ANTIC*) 54272
byte ATARI_ANTIC::CHACTL
byte ATARI_ANTIC::CHBASE
byte* ATARI_ANTIC::DLIST
byte ATARI_ANTIC::DMACTL
byte ATARI_ANTIC::HSCROL
byte ATARI_ANTIC::NMIEN
byte ATARI_ANTIC::NMIST
byte ATARI_ANTIC::PENH
byte ATARI_ANTIC::PENV
byte ATARI_ANTIC::PMBASE
byte ATARI_ANTIC::UNUSED1
byte ATARI_ANTIC::UNUSED2
byte ATARI_ANTIC::VCOUNT
byte ATARI_ANTIC::VSCROL
byte ATARI_ANTIC::WSYNC
byte ATARI_GTIA_READ::CONSOL
byte ATARI_GTIA_READ::M0PF
byte ATARI_GTIA_READ::M0PL
byte ATARI_GTIA_READ::M1PF
byte ATARI_GTIA_READ::M1PL
byte ATARI_GTIA_READ::M2PF
byte ATARI_GTIA_READ::M2PL
byte ATARI_GTIA_READ::M3PF
byte ATARI_GTIA_READ::M3PL
byte ATARI_GTIA_READ::P0PF
byte ATARI_GTIA_READ::P0PL
byte ATARI_GTIA_READ::P1PF
byte ATARI_GTIA_READ::P1PL
byte ATARI_GTIA_READ::P2PF
byte ATARI_GTIA_READ::P2PL
byte ATARI_GTIA_READ::P3PF
byte ATARI_GTIA_READ::P3PL
byte ATARI_GTIA_READ::PAL
byte ATARI_GTIA_READ::TRIG0
byte ATARI_GTIA_READ::TRIG1
byte ATARI_GTIA_READ::TRIG2
byte ATARI_GTIA_READ::TRIG3
const byte* ATARI_GTIA_READ::UNUSED[$a]  = { fill( $a, 0) }
byte ATARI_GTIA_WRITE::COLBK
byte ATARI_GTIA_WRITE::COLPF0
byte ATARI_GTIA_WRITE::COLPF1
byte ATARI_GTIA_WRITE::COLPF2
byte ATARI_GTIA_WRITE::COLPF3
byte ATARI_GTIA_WRITE::COLPM0
byte ATARI_GTIA_WRITE::COLPM1
byte ATARI_GTIA_WRITE::COLPM2
byte ATARI_GTIA_WRITE::COLPM3
byte ATARI_GTIA_WRITE::CONSPK
byte ATARI_GTIA_WRITE::GRACTL
byte ATARI_GTIA_WRITE::GRAFM
byte ATARI_GTIA_WRITE::GRAFP0
byte ATARI_GTIA_WRITE::GRAFP1
byte ATARI_GTIA_WRITE::GRAFP2
byte ATARI_GTIA_WRITE::GRAFP3
byte ATARI_GTIA_WRITE::HITCLR
byte ATARI_GTIA_WRITE::HPOSM0
byte ATARI_GTIA_WRITE::HPOSM1
byte ATARI_GTIA_WRITE::HPOSM2
byte ATARI_GTIA_WRITE::HPOSM3
byte ATARI_GTIA_WRITE::HPOSP0
byte ATARI_GTIA_WRITE::HPOSP1
byte ATARI_GTIA_WRITE::HPOSP2
byte ATARI_GTIA_WRITE::HPOSP3
byte ATARI_GTIA_WRITE::PRIOR
byte ATARI_GTIA_WRITE::SIZEM
byte ATARI_GTIA_WRITE::SIZEP0
byte ATARI_GTIA_WRITE::SIZEP1
byte ATARI_GTIA_WRITE::SIZEP2
byte ATARI_GTIA_WRITE::SIZEP3
byte ATARI_GTIA_WRITE::VDELAY
byte ATARI_POKEY_READ::ALLPOT
byte ATARI_POKEY_READ::IRQST
byte ATARI_POKEY_READ::KBCODE
byte ATARI_POKEY_READ::POT0
byte ATARI_POKEY_READ::POT1
byte ATARI_POKEY_READ::POT2
byte ATARI_POKEY_READ::POT3
byte ATARI_POKEY_READ::POT4
byte ATARI_POKEY_READ::POT5
byte ATARI_POKEY_READ::POT6
byte ATARI_POKEY_READ::POT7
byte ATARI_POKEY_READ::RANDOM
byte ATARI_POKEY_READ::SERIN
byte ATARI_POKEY_READ::SKSTAT
const byte* ATARI_POKEY_READ::UNUSED[2]  = { fill( 2, 0) }
byte ATARI_POKEY_WRITE::AUDC1
byte ATARI_POKEY_WRITE::AUDC2
byte ATARI_POKEY_WRITE::AUDC3
byte ATARI_POKEY_WRITE::AUDC4
byte ATARI_POKEY_WRITE::AUDCTL
byte ATARI_POKEY_WRITE::AUDF1
byte ATARI_POKEY_WRITE::AUDF2
byte ATARI_POKEY_WRITE::AUDF3
byte ATARI_POKEY_WRITE::AUDF4
byte ATARI_POKEY_WRITE::IRQEN
byte ATARI_POKEY_WRITE::POTGO
byte ATARI_POKEY_WRITE::SEROUT
byte ATARI_POKEY_WRITE::SKCTL
byte ATARI_POKEY_WRITE::SKREST
byte ATARI_POKEY_WRITE::STIMER
byte ATARI_POKEY_WRITE::UNUSED
const nomodify byte BLANK4 = $30
const nomodify byte BLANK8 = $70
const byte* DISPLAY_LIST[]  = { BLANK8, BLANK8, BLANK8, LMS|MODE7, <TEXT, >TEXT, BLANK4, MODE2, JVB, <DISPLAY_LIST, >DISPLAY_LIST }
const nomodify struct ATARI_GTIA_WRITE* GTIA = (struct ATARI_GTIA_WRITE*) 53248
const nomodify byte JVB = $41
const nomodify byte LMS = $40
const nomodify byte MODE2 = 2
const nomodify byte MODE7 = 7
const byte OFFSET_STRUCT_ATARI_ANTIC_DLIST = 2
const byte OFFSET_STRUCT_ATARI_ANTIC_VCOUNT = $b
const byte OFFSET_STRUCT_ATARI_ANTIC_WSYNC = $a
const byte OFFSET_STRUCT_ATARI_GTIA_WRITE_COLBK = $1a
const byte OFFSET_STRUCT_ATARI_GTIA_WRITE_COLPF0 = $16
const byte OFFSET_STRUCT_ATARI_GTIA_WRITE_COLPF1 = $17
const byte OFFSET_STRUCT_ATARI_GTIA_WRITE_COLPF2 = $18
const byte OFFSET_STRUCT_ATARI_GTIA_WRITE_COLPF3 = $19
const byte* TEXT[]  = "HELLO atari 8BITDemonstrates ANTIC display list!"sa
void main()
label main::@1
label main::@2
label main::@3
label main::@4
label main::@5
byte main::c
byte main::c#1 reg byte y 101.0
byte main::c#2 reg byte y 103.75
byte main::col
byte main::col#1 reg byte x 2.75
byte main::col#2 reg byte y 78.33333333333334
byte main::col#8 reg byte y 22.0
byte main::l
byte main::l#1 reg byte a 202.0
byte main::l#2 reg byte a 60.599999999999994

reg byte a [ main::l#2 main::l#1 ]
reg byte y [ main::c#2 main::col#2 main::col#8 main::c#1 ]
reg byte x [ main::col#1 ]
