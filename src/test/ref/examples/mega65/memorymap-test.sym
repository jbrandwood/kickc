__constant char * const DEFAULT_SCREEN = (char *) 2048
__constant const char MEMORYBLOCK_4000 = 4
__constant const char MEMORYBLOCK_8000 = $10
void main()
char main::$7 // reg byte a 22.0
__constant char *main::BLOCK_4000 = (char *) 16384
__constant char *main::BLOCK_8000 = (char *) 32768
char main::i
char main::i#1 // reg byte x 22.0
char main::i#2 // reg byte x 18.333333333333332
char main::i1
char main::i1#1 // reg byte x 22.0
char main::i1#2 // reg byte x 13.75
void memoryRemap(char remapBlocks , unsigned int lowerPageOffset , unsigned int upperPageOffset)
char memoryRemap::$1 // zp[1]:22 67.33333333333333
char memoryRemap::$2 // reg byte a 202.0
char memoryRemap::$3 // reg byte a 202.0
char memoryRemap::$6 // zp[1]:13 67.33333333333333
char memoryRemap::$7 // reg byte a 202.0
char memoryRemap::$8 // reg byte a 202.0
__loadstore volatile char memoryRemap::aVal // zp[1]:10 10.1
unsigned int memoryRemap::lowerPageOffset
unsigned int memoryRemap::lowerPageOffset#0 // lowerPageOffset zp[2]:2 11.0
unsigned int memoryRemap::lowerPageOffset#2 // lowerPageOffset zp[2]:2 71.0
char memoryRemap::remapBlocks
char memoryRemap::remapBlocks#0 // reg byte z 7.333333333333333
char memoryRemap::remapBlocks#2 // reg byte z 30.42857142857143
unsigned int memoryRemap::upperPageOffset
unsigned int memoryRemap::upperPageOffset#0 // upperPageOffset zp[2]:4 22.0
unsigned int memoryRemap::upperPageOffset#2 // upperPageOffset zp[2]:4 26.625
__loadstore volatile char memoryRemap::xVal // zp[1]:11 16.833333333333332
__loadstore volatile char memoryRemap::yVal // zp[1]:12 20.2
__loadstore volatile char memoryRemap::zVal // zp[1]:14 101.0
void memoryRemap256M(char remapBlocks , unsigned long lowerPageOffset , unsigned long upperPageOffset)
unsigned long memoryRemap256M::$0 // zp[4]:15 11.0
char memoryRemap256M::$10 // reg byte a 22.0
char memoryRemap256M::$5 // zp[1]:22 7.333333333333333
char memoryRemap256M::$6 // reg byte a 22.0
char memoryRemap256M::$7 // reg byte a 22.0
__loadstore volatile char memoryRemap256M::aVal // zp[1]:21 1.375
__loadstore volatile char memoryRemap256M::lMb // zp[1]:19 1.1
unsigned long memoryRemap256M::lowerPageOffset
unsigned long memoryRemap256M::lowerPageOffset#2 // lowerPageOffset zp[4]:6 5.5
char memoryRemap256M::remapBlocks
char memoryRemap256M::remapBlocks#2 // reg byte z 2.2
__loadstore volatile char memoryRemap256M::uMb // zp[1]:20 1.2222222222222223
unsigned long memoryRemap256M::upperPageOffset
__loadstore volatile char memoryRemap256M::xVal // zp[1]:23 2.75
__loadstore volatile char memoryRemap256M::yVal // zp[1]:24 3.6666666666666665
__loadstore volatile char memoryRemap256M::zVal // zp[1]:25 11.0
void memoryRemapBlock(char blockPage , unsigned int memoryPage)
char memoryRemapBlock::block
char memoryRemapBlock::block#0 // reg byte a 22.0
char memoryRemapBlock::blockBits
char memoryRemapBlock::blockBits#0 // reg byte a 22.0
char memoryRemapBlock::blockPage
char memoryRemapBlock::blockPage#2 // reg byte x 11.0
unsigned int memoryRemapBlock::memoryPage
unsigned int memoryRemapBlock::pageOffset
unsigned int memoryRemapBlock::pageOffset#0 // pageOffset zp[2]:2 6.6000000000000005

reg byte x [ main::i#2 main::i#1 ]
reg byte x [ main::i1#2 main::i1#1 ]
reg byte x [ memoryRemapBlock::blockPage#2 ]
zp[2]:2 [ memoryRemap::lowerPageOffset#2 memoryRemap::lowerPageOffset#0 memoryRemapBlock::pageOffset#0 ]
reg byte z [ memoryRemap::remapBlocks#2 memoryRemap::remapBlocks#0 ]
zp[2]:4 [ memoryRemap::upperPageOffset#2 memoryRemap::upperPageOffset#0 ]
zp[4]:6 [ memoryRemap256M::lowerPageOffset#2 ]
reg byte z [ memoryRemap256M::remapBlocks#2 ]
reg byte a [ main::$7 ]
reg byte a [ memoryRemapBlock::block#0 ]
reg byte a [ memoryRemapBlock::blockBits#0 ]
zp[1]:10 [ memoryRemap::aVal ]
reg byte a [ memoryRemap::$2 ]
reg byte a [ memoryRemap::$3 ]
zp[1]:11 [ memoryRemap::xVal ]
zp[1]:12 [ memoryRemap::yVal ]
zp[1]:13 [ memoryRemap::$6 ]
reg byte a [ memoryRemap::$7 ]
reg byte a [ memoryRemap::$8 ]
zp[1]:14 [ memoryRemap::zVal ]
zp[4]:15 [ memoryRemap256M::$0 ]
zp[1]:19 [ memoryRemap256M::lMb ]
zp[1]:20 [ memoryRemap256M::uMb ]
zp[1]:21 [ memoryRemap256M::aVal ]
zp[1]:22 [ memoryRemap256M::$5 memoryRemap::$1 ]
reg byte a [ memoryRemap256M::$6 ]
reg byte a [ memoryRemap256M::$7 ]
zp[1]:23 [ memoryRemap256M::xVal ]
zp[1]:24 [ memoryRemap256M::yVal ]
reg byte a [ memoryRemap256M::$10 ]
zp[1]:25 [ memoryRemap256M::zVal ]
