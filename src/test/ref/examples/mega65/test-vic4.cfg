
(void()) main()
main: scope:[main]  from
  asm { sei lda#0 tax tay taz map eom  }
  [1] *((const nomodify to_volatile byte*) IO_KEY) ← (byte) $47
  [2] *((const nomodify to_volatile byte*) IO_KEY) ← (byte) $53
  [3] *((const nomodify to_volatile byte*) IO_BANK) ← *((const nomodify to_volatile byte*) IO_BANK) | (const nomodify byte) CRAM2K
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [4] (byte*) main::sc#2 ← phi( main/(const nomodify byte*) SCREEN main::@2/(byte*) main::sc#1 )
  [5] if((byte*) main::sc#2<(const nomodify byte*) SCREEN+(word) $7d0) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@4
  [6] (byte*) main::col#2 ← phi( main::@1/(const nomodify byte*) COLORS main::@4/(byte*) main::col#1 )
  [7] if((byte*) main::col#2<(const nomodify byte*) COLORS+(word) $7d0) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@3 main::@5
  [8] *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR) ← *((byte*)(const nomodify struct MOS6569_VICII*) VICII+(const byte) OFFSET_STRUCT_MOS6569_VICII_RASTER)
  to:main::@5
main::@4: scope:[main]  from main::@3
  [9] (byte~) main::$2 ← < (byte*) main::col#2
  [10] *((byte*) main::col#2) ← (byte~) main::$2
  [11] (byte*) main::col#1 ← ++ (byte*) main::col#2
  to:main::@3
main::@2: scope:[main]  from main::@1
  [12] *((byte*) main::sc#2) ← (byte) '*'
  [13] (byte*) main::sc#1 ← ++ (byte*) main::sc#2
  to:main::@1
