Loading link script "cx16-bankload.ld"
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type size struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Fixing struct type SIZE_OF struct printf_buffer_number to 12
Setting inferred volatile on symbol affected by address-of kbhit::ch
Setting inferred volatile on symbol affected by address-of conio_x16_init::$1 = call screensize(&conio_screen_width, &conio_screen_height)
Setting inferred volatile on symbol affected by address-of conio_x16_init::$1 = call screensize(&conio_screen_width, &conio_screen_height)
Setting inferred __stackcall on procedure affected by address-of __stackcall void cputc(char c) caused by statement call printf_str(&cputc, "

sprite banked file load and display demo.
")
Setting struct to load/store in variable affected by address-of main::$8 = call memcpy_to_vram(byte2 VERA_SPRITE_ATTR, (void *)(char *)word0 VERA_SPRITE_ATTR, (void *)&main::SPRITE_ATTR, main::$7)
Setting inferred volatile on symbol affected by address-of: setnam::filename_len in asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
Setting inferred volatile on symbol affected by address-of: setnam::filename in asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
Setting inferred volatile on symbol affected by address-of: setlfs::device in asm { ldxdevice lda#1 ldy#0 jsr$ffba  }
Setting inferred volatile on symbol affected by address-of: load::address in asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
Setting inferred volatile on symbol affected by address-of: load::verify in asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
Setting inferred volatile on symbol affected by address-of: load::status in asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
Setting inferred volatile on symbol affected by address-of: getin::ch in asm { jsr$ffe4 stach  }
Adding parameter assignment in __stackcall procedure cputc::c = param(cputc::c)
Resolving sizeof() main::$7 = sizeof  main::SPRITE_ATTR
Inlined call call vera_display_set_scale_double
Inlined call call vera_display_set_scale_none
Inlined call call vera_vram_address0(vera_tile_area::mapbase, VERA_INC_1)
Inlined call screenlayer::$2 = call vera_layer_get_width(conio_screen_layer)
Inlined call screenlayer::$5 = call vera_layer_get_height(conio_screen_layer)
Inlined call call __init
Eliminating unused variable with no statement memcpy_to_vram::$3
Eliminating unused variable with no statement memcpy_bank_to_vram::$3
Eliminating unused variable with no statement memcpy_bank_to_vram::$8
Eliminating unused variable with no statement load_to_bank::$6
Eliminating unused variable with no statement vera_layer_mode_tile::$4
Eliminating unused variable with no statement vera_layer_mode_tile::$9
Eliminating unused variable with no statement clrscr::$3
Eliminating unused variable with no statement gotoxy::$4
Eliminating unused variable with no statement screensize::$0
Eliminating unused variable with no statement screensize::$2
Eliminating unused variable with no statement cputc::$0
Eliminating unused variable with no statement cputc::$1
Eliminating unused variable with no statement clearline::$0
Eliminating unused variable with no statement clearline::$3
Eliminating unused variable with no statement insertup::$0
Eliminating unused variable with no statement insertup::$4
Eliminating unused variable with no statement insertup::$5
Eliminating unused variable with no statement printf_buffer
Eliminating unused variable with no statement main::$3
Eliminating unused variable with no statement main::$4
Calling convention STACK_CALL adding prepare/execute/finalize for call *printf_str::putc printf_str::c 
Calling convention STACK_CALL replacing param(cputc::c) with stackidx(char,cputc::OFFSET_STACK_C)
Calling convention STACK_CALL adding stack push stackpush(char) = printf_str::c
Removing C-classic struct-unwound assignment main::SPRITE_ATTR = struct-unwound {*(&main::SPRITE_ATTR)}

CONTROL FLOW GRAPH SSA

void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
memcpy_to_vram: scope:[memcpy_to_vram]  from main::@7
  memcpy_to_vram::num#1 = phi( main::@7/memcpy_to_vram::num#0 )
  memcpy_to_vram::src#1 = phi( main::@7/memcpy_to_vram::src#0 )
  memcpy_to_vram::vbank#1 = phi( main::@7/memcpy_to_vram::vbank#0 )
  memcpy_to_vram::vdest#1 = phi( main::@7/memcpy_to_vram::vdest#0 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  memcpy_to_vram::$0 = byte0  memcpy_to_vram::vdest#1
  *VERA_ADDRX_L = memcpy_to_vram::$0
  memcpy_to_vram::$1 = byte1  memcpy_to_vram::vdest#1
  *VERA_ADDRX_M = memcpy_to_vram::$1
  memcpy_to_vram::$2 = VERA_INC_1 | memcpy_to_vram::vbank#1
  *VERA_ADDRX_H = memcpy_to_vram::$2
  memcpy_to_vram::$5 = (char *)memcpy_to_vram::src#1
  memcpy_to_vram::end#0 = memcpy_to_vram::$5 + memcpy_to_vram::num#1
  memcpy_to_vram::s#0 = ((char *)) memcpy_to_vram::src#1
  to:memcpy_to_vram::@1
memcpy_to_vram::@1: scope:[memcpy_to_vram]  from memcpy_to_vram memcpy_to_vram::@2
  memcpy_to_vram::end#1 = phi( memcpy_to_vram/memcpy_to_vram::end#0, memcpy_to_vram::@2/memcpy_to_vram::end#2 )
  memcpy_to_vram::s#2 = phi( memcpy_to_vram/memcpy_to_vram::s#0, memcpy_to_vram::@2/memcpy_to_vram::s#1 )
  memcpy_to_vram::$4 = memcpy_to_vram::s#2 != memcpy_to_vram::end#1
  if(memcpy_to_vram::$4) goto memcpy_to_vram::@2
  to:memcpy_to_vram::@return
memcpy_to_vram::@2: scope:[memcpy_to_vram]  from memcpy_to_vram::@1
  memcpy_to_vram::end#2 = phi( memcpy_to_vram::@1/memcpy_to_vram::end#1 )
  memcpy_to_vram::s#3 = phi( memcpy_to_vram::@1/memcpy_to_vram::s#2 )
  *VERA_DATA0 = *memcpy_to_vram::s#3
  memcpy_to_vram::s#1 = ++ memcpy_to_vram::s#3
  to:memcpy_to_vram::@1
memcpy_to_vram::@return: scope:[memcpy_to_vram]  from memcpy_to_vram::@1
  return 
  to:@return

void memcpy_bank_to_vram(unsigned long vdest , unsigned long src , unsigned long num)
memcpy_bank_to_vram: scope:[memcpy_bank_to_vram]  from main::@5 main::@6
  memcpy_bank_to_vram::num#2 = phi( main::@5/memcpy_bank_to_vram::num#0, main::@6/memcpy_bank_to_vram::num#1 )
  memcpy_bank_to_vram::src#2 = phi( main::@5/memcpy_bank_to_vram::src#0, main::@6/memcpy_bank_to_vram::src#1 )
  memcpy_bank_to_vram::vdest#2 = phi( main::@5/memcpy_bank_to_vram::vdest#0, main::@6/memcpy_bank_to_vram::vdest#1 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  memcpy_bank_to_vram::$0 = byte0  memcpy_bank_to_vram::vdest#2
  *VERA_ADDRX_L = memcpy_bank_to_vram::$0
  memcpy_bank_to_vram::$1 = byte1  memcpy_bank_to_vram::vdest#2
  *VERA_ADDRX_M = memcpy_bank_to_vram::$1
  memcpy_bank_to_vram::$2 = byte2  memcpy_bank_to_vram::vdest#2
  *VERA_ADDRX_H = memcpy_bank_to_vram::$2
  *VERA_ADDRX_H = *VERA_ADDRX_H | VERA_INC_1
  memcpy_bank_to_vram::beg#0 = memcpy_bank_to_vram::src#2
  memcpy_bank_to_vram::end#0 = memcpy_bank_to_vram::src#2 + memcpy_bank_to_vram::num#2
  memcpy_bank_to_vram::$4 = byte2  memcpy_bank_to_vram::beg#0
  memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3
  memcpy_bank_to_vram::$6 = byte1  memcpy_bank_to_vram::beg#0
  memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5
  memcpy_bank_to_vram::bank#0 = memcpy_bank_to_vram::$5 | memcpy_bank_to_vram::$7
  memcpy_bank_to_vram::$9 = word0  memcpy_bank_to_vram::beg#0
  memcpy_bank_to_vram::$10 = memcpy_bank_to_vram::$9 & $1fff
  memcpy_bank_to_vram::addr#0 = (char *)memcpy_bank_to_vram::$10
  memcpy_bank_to_vram::addr#1 = memcpy_bank_to_vram::addr#0 + $a000
  *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = (char)memcpy_bank_to_vram::bank#0
  memcpy_bank_to_vram::pos#0 = memcpy_bank_to_vram::beg#0
  to:memcpy_bank_to_vram::@1
memcpy_bank_to_vram::@1: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram memcpy_bank_to_vram::@3
  memcpy_bank_to_vram::bank#4 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::bank#0, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::bank#5 )
  memcpy_bank_to_vram::addr#6 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::addr#1, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::addr#2 )
  memcpy_bank_to_vram::end#1 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::end#0, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::end#2 )
  memcpy_bank_to_vram::pos#2 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::pos#0, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::pos#1 )
  memcpy_bank_to_vram::$11 = memcpy_bank_to_vram::pos#2 < memcpy_bank_to_vram::end#1
  if(memcpy_bank_to_vram::$11) goto memcpy_bank_to_vram::@2
  to:memcpy_bank_to_vram::@return
memcpy_bank_to_vram::@2: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@1
  memcpy_bank_to_vram::end#3 = phi( memcpy_bank_to_vram::@1/memcpy_bank_to_vram::end#1 )
  memcpy_bank_to_vram::bank#3 = phi( memcpy_bank_to_vram::@1/memcpy_bank_to_vram::bank#4 )
  memcpy_bank_to_vram::pos#4 = phi( memcpy_bank_to_vram::@1/memcpy_bank_to_vram::pos#2 )
  memcpy_bank_to_vram::addr#4 = phi( memcpy_bank_to_vram::@1/memcpy_bank_to_vram::addr#6 )
  memcpy_bank_to_vram::$12 = memcpy_bank_to_vram::addr#4 == $c000
  memcpy_bank_to_vram::$13 = ! memcpy_bank_to_vram::$12
  if(memcpy_bank_to_vram::$13) goto memcpy_bank_to_vram::@3
  to:memcpy_bank_to_vram::@4
memcpy_bank_to_vram::@3: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@2 memcpy_bank_to_vram::@4
  memcpy_bank_to_vram::bank#5 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::bank#3, memcpy_bank_to_vram::@4/memcpy_bank_to_vram::bank#1 )
  memcpy_bank_to_vram::end#2 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::end#3, memcpy_bank_to_vram::@4/memcpy_bank_to_vram::end#4 )
  memcpy_bank_to_vram::pos#3 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::pos#4, memcpy_bank_to_vram::@4/memcpy_bank_to_vram::pos#5 )
  memcpy_bank_to_vram::addr#5 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::addr#4, memcpy_bank_to_vram::@4/memcpy_bank_to_vram::addr#3 )
  *VERA_DATA0 = *memcpy_bank_to_vram::addr#5
  memcpy_bank_to_vram::addr#2 = ++ memcpy_bank_to_vram::addr#5
  memcpy_bank_to_vram::pos#1 = ++ memcpy_bank_to_vram::pos#3
  to:memcpy_bank_to_vram::@1
memcpy_bank_to_vram::@4: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@2
  memcpy_bank_to_vram::end#4 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::end#3 )
  memcpy_bank_to_vram::pos#5 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::pos#4 )
  memcpy_bank_to_vram::bank#2 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::bank#3 )
  memcpy_bank_to_vram::bank#1 = ++ memcpy_bank_to_vram::bank#2
  *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = (char)memcpy_bank_to_vram::bank#1
  memcpy_bank_to_vram::addr#3 = (char *)$a000
  to:memcpy_bank_to_vram::@3
memcpy_bank_to_vram::@return: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@1
  return 
  to:@return

void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
memcpy_in_vram: scope:[memcpy_in_vram]  from insertup::@2
  memcpy_in_vram::num#2 = phi( insertup::@2/memcpy_in_vram::num#0 )
  memcpy_in_vram::dest_bank#1 = phi( insertup::@2/memcpy_in_vram::dest_bank#0 )
  memcpy_in_vram::dest_increment#1 = phi( insertup::@2/memcpy_in_vram::dest_increment#0 )
  memcpy_in_vram::dest#1 = phi( insertup::@2/memcpy_in_vram::dest#0 )
  memcpy_in_vram::src_bank#1 = phi( insertup::@2/memcpy_in_vram::src_bank#0 )
  memcpy_in_vram::src_increment#1 = phi( insertup::@2/memcpy_in_vram::src_increment#0 )
  memcpy_in_vram::src#1 = phi( insertup::@2/memcpy_in_vram::src#0 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  memcpy_in_vram::$0 = byte0  memcpy_in_vram::src#1
  *VERA_ADDRX_L = memcpy_in_vram::$0
  memcpy_in_vram::$1 = byte1  memcpy_in_vram::src#1
  *VERA_ADDRX_M = memcpy_in_vram::$1
  memcpy_in_vram::$2 = memcpy_in_vram::src_increment#1 | memcpy_in_vram::src_bank#1
  *VERA_ADDRX_H = memcpy_in_vram::$2
  *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL
  memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#1
  *VERA_ADDRX_L = memcpy_in_vram::$3
  memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#1
  *VERA_ADDRX_M = memcpy_in_vram::$4
  memcpy_in_vram::$5 = memcpy_in_vram::dest_increment#1 | memcpy_in_vram::dest_bank#1
  *VERA_ADDRX_H = memcpy_in_vram::$5
  memcpy_in_vram::i#0 = 0
  to:memcpy_in_vram::@1
memcpy_in_vram::@1: scope:[memcpy_in_vram]  from memcpy_in_vram memcpy_in_vram::@2
  memcpy_in_vram::num#1 = phi( memcpy_in_vram/memcpy_in_vram::num#2, memcpy_in_vram::@2/memcpy_in_vram::num#3 )
  memcpy_in_vram::i#2 = phi( memcpy_in_vram/memcpy_in_vram::i#0, memcpy_in_vram::@2/memcpy_in_vram::i#1 )
  memcpy_in_vram::$6 = memcpy_in_vram::i#2 < memcpy_in_vram::num#1
  if(memcpy_in_vram::$6) goto memcpy_in_vram::@2
  to:memcpy_in_vram::@return
memcpy_in_vram::@2: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  memcpy_in_vram::num#3 = phi( memcpy_in_vram::@1/memcpy_in_vram::num#1 )
  memcpy_in_vram::i#3 = phi( memcpy_in_vram::@1/memcpy_in_vram::i#2 )
  *VERA_DATA1 = *VERA_DATA0
  memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#3
  to:memcpy_in_vram::@1
memcpy_in_vram::@return: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  return 
  to:@return

char load_to_bank(char device , char *filename , unsigned long address)
load_to_bank: scope:[load_to_bank]  from main::@4
  load_to_bank::address#3 = phi( main::@4/load_to_bank::address#0 )
  load_to_bank::device#2 = phi( main::@4/load_to_bank::device#0 )
  load_to_bank::filename#1 = phi( main::@4/load_to_bank::filename#0 )
  setnam::filename = load_to_bank::filename#1
  call setnam
  to:load_to_bank::@1
load_to_bank::@1: scope:[load_to_bank]  from load_to_bank
  load_to_bank::address#2 = phi( load_to_bank/load_to_bank::address#3 )
  load_to_bank::device#1 = phi( load_to_bank/load_to_bank::device#2 )
  setlfs::device = load_to_bank::device#1
  call setlfs
  to:load_to_bank::@2
load_to_bank::@2: scope:[load_to_bank]  from load_to_bank::@1
  load_to_bank::address#1 = phi( load_to_bank::@1/load_to_bank::address#2 )
  load_to_bank::$2 = byte2  load_to_bank::address#1
  load_to_bank::$3 = load_to_bank::$2 << 3
  load_to_bank::$4 = byte1  load_to_bank::address#1
  load_to_bank::$5 = load_to_bank::$4 >> 5
  load_to_bank::bank#0 = load_to_bank::$3 | load_to_bank::$5
  load_to_bank::$7 = word0  load_to_bank::address#1
  load_to_bank::$8 = load_to_bank::$7 & $1fff
  load_to_bank::addr#0 = (char *)load_to_bank::$8
  load_to_bank::addr#1 = load_to_bank::addr#0 + $a000
  *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = (char)load_to_bank::bank#0
  load::address = load_to_bank::addr#1
  load::verify = 0
  call load
  load::return#0 = load::return#2
  to:load_to_bank::@3
load_to_bank::@3: scope:[load_to_bank]  from load_to_bank::@2
  load::return#3 = phi( load_to_bank::@2/load::return#0 )
  load_to_bank::$9 = load::return#3
  load_to_bank::return#0 = load_to_bank::$9
  to:load_to_bank::@return
load_to_bank::@return: scope:[load_to_bank]  from load_to_bank::@3
  load_to_bank::return#3 = phi( load_to_bank::@3/load_to_bank::return#0 )
  load_to_bank::return#1 = load_to_bank::return#3
  return 
  to:@return

void setnam(char * volatile filename)
setnam: scope:[setnam]  from load_to_bank
  strlen::str#0 = setnam::filename
  call strlen
  strlen::return#0 = strlen::return#2
  to:setnam::@1
setnam::@1: scope:[setnam]  from setnam
  strlen::return#3 = phi( setnam/strlen::return#0 )
  setnam::$0 = strlen::return#3
  setnam::filename_len = (char)setnam::$0
  asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
  to:setnam::@return
setnam::@return: scope:[setnam]  from setnam::@1
  return 
  to:@return

void setlfs(volatile char device)
setlfs: scope:[setlfs]  from load_to_bank::@1
  asm { ldxdevice lda#1 ldy#0 jsr$ffba  }
  to:setlfs::@return
setlfs::@return: scope:[setlfs]  from setlfs
  return 
  to:@return

char load(char * volatile address , volatile char verify)
load: scope:[load]  from load_to_bank::@2
  load::status = 0
  asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
  load::return#1 = load::status
  to:load::@return
load::@return: scope:[load]  from load
  load::return#4 = phi( load/load::return#1 )
  load::return#2 = load::return#4
  return 
  to:@return

unsigned int strlen(char *str)
strlen: scope:[strlen]  from setnam
  strlen::str#4 = phi( setnam/strlen::str#0 )
  strlen::len#0 = 0
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  strlen::len#4 = phi( strlen/strlen::len#0, strlen::@2/strlen::len#1 )
  strlen::str#2 = phi( strlen/strlen::str#4, strlen::@2/strlen::str#1 )
  strlen::$0 = 0 != *strlen::str#2
  if(strlen::$0) goto strlen::@2
  to:strlen::@3
strlen::@2: scope:[strlen]  from strlen::@1
  strlen::str#3 = phi( strlen::@1/strlen::str#2 )
  strlen::len#2 = phi( strlen::@1/strlen::len#4 )
  strlen::len#1 = ++ strlen::len#2
  strlen::str#1 = ++ strlen::str#3
  to:strlen::@1
strlen::@3: scope:[strlen]  from strlen::@1
  strlen::len#3 = phi( strlen::@1/strlen::len#4 )
  strlen::return#1 = strlen::len#3
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@3
  strlen::return#4 = phi( strlen::@3/strlen::return#1 )
  strlen::return#2 = strlen::return#4
  return 
  to:@return

void vera_layer_set_config(char layer , char config)
vera_layer_set_config: scope:[vera_layer_set_config]  from vera_layer_mode_tile::@24
  vera_layer_set_config::config#1 = phi( vera_layer_mode_tile::@24/vera_layer_set_config::config#0 )
  vera_layer_set_config::layer#1 = phi( vera_layer_mode_tile::@24/vera_layer_set_config::layer#0 )
  vera_layer_set_config::$0 = vera_layer_set_config::layer#1 * SIZEOF_POINTER
  vera_layer_set_config::addr#0 = vera_layer_config[vera_layer_set_config::$0]
  *vera_layer_set_config::addr#0 = vera_layer_set_config::config#1
  to:vera_layer_set_config::@return
vera_layer_set_config::@return: scope:[vera_layer_set_config]  from vera_layer_set_config
  return 
  to:@return

void vera_layer_set_text_color_mode(char layer , char color_mode)
vera_layer_set_text_color_mode: scope:[vera_layer_set_text_color_mode]  from main vera_layer_mode_text::@2 vera_layer_mode_text::@3
  vera_layer_set_text_color_mode::color_mode#3 = phi( main/vera_layer_set_text_color_mode::color_mode#2, vera_layer_mode_text::@2/vera_layer_set_text_color_mode::color_mode#0, vera_layer_mode_text::@3/vera_layer_set_text_color_mode::color_mode#1 )
  vera_layer_set_text_color_mode::layer#3 = phi( main/vera_layer_set_text_color_mode::layer#2, vera_layer_mode_text::@2/vera_layer_set_text_color_mode::layer#0, vera_layer_mode_text::@3/vera_layer_set_text_color_mode::layer#1 )
  vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 * SIZEOF_POINTER
  vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0]
  *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C
  *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 | vera_layer_set_text_color_mode::color_mode#3
  to:vera_layer_set_text_color_mode::@return
vera_layer_set_text_color_mode::@return: scope:[vera_layer_set_text_color_mode]  from vera_layer_set_text_color_mode
  return 
  to:@return

void vera_layer_set_mapbase(char layer , char mapbase)
vera_layer_set_mapbase: scope:[vera_layer_set_mapbase]  from conio_x16_init::@7 conio_x16_init::@8 vera_layer_mode_tile::@33
  vera_layer_set_mapbase::mapbase#3 = phi( conio_x16_init::@7/vera_layer_set_mapbase::mapbase#1, conio_x16_init::@8/vera_layer_set_mapbase::mapbase#2, vera_layer_mode_tile::@33/vera_layer_set_mapbase::mapbase#0 )
  vera_layer_set_mapbase::layer#3 = phi( conio_x16_init::@7/vera_layer_set_mapbase::layer#1, conio_x16_init::@8/vera_layer_set_mapbase::layer#2, vera_layer_mode_tile::@33/vera_layer_set_mapbase::layer#0 )
  vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 * SIZEOF_POINTER
  vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0]
  *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3
  to:vera_layer_set_mapbase::@return
vera_layer_set_mapbase::@return: scope:[vera_layer_set_mapbase]  from vera_layer_set_mapbase
  return 
  to:@return

char vera_layer_get_mapbase_bank(char layer)
vera_layer_get_mapbase_bank: scope:[vera_layer_get_mapbase_bank]  from screenlayer
  vera_layer_get_mapbase_bank::layer#1 = phi( screenlayer/vera_layer_get_mapbase_bank::layer#0 )
  vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#1]
  to:vera_layer_get_mapbase_bank::@return
vera_layer_get_mapbase_bank::@return: scope:[vera_layer_get_mapbase_bank]  from vera_layer_get_mapbase_bank
  vera_layer_get_mapbase_bank::return#3 = phi( vera_layer_get_mapbase_bank/vera_layer_get_mapbase_bank::return#0 )
  vera_layer_get_mapbase_bank::return#1 = vera_layer_get_mapbase_bank::return#3
  return 
  to:@return

unsigned int vera_layer_get_mapbase_offset(char layer)
vera_layer_get_mapbase_offset: scope:[vera_layer_get_mapbase_offset]  from screenlayer::@3
  vera_layer_get_mapbase_offset::layer#1 = phi( screenlayer::@3/vera_layer_get_mapbase_offset::layer#0 )
  vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#1 * SIZEOF_UNSIGNED_INT
  vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0]
  to:vera_layer_get_mapbase_offset::@return
vera_layer_get_mapbase_offset::@return: scope:[vera_layer_get_mapbase_offset]  from vera_layer_get_mapbase_offset
  vera_layer_get_mapbase_offset::return#3 = phi( vera_layer_get_mapbase_offset/vera_layer_get_mapbase_offset::return#0 )
  vera_layer_get_mapbase_offset::return#1 = vera_layer_get_mapbase_offset::return#3
  return 
  to:@return

void vera_layer_set_tilebase(char layer , char tilebase)
vera_layer_set_tilebase: scope:[vera_layer_set_tilebase]  from vera_layer_mode_tile::@32
  vera_layer_set_tilebase::tilebase#1 = phi( vera_layer_mode_tile::@32/vera_layer_set_tilebase::tilebase#0 )
  vera_layer_set_tilebase::layer#1 = phi( vera_layer_mode_tile::@32/vera_layer_set_tilebase::layer#0 )
  vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#1 * SIZEOF_POINTER
  vera_layer_set_tilebase::addr#0 = vera_layer_tilebase[vera_layer_set_tilebase::$0]
  *vera_layer_set_tilebase::addr#0 = vera_layer_set_tilebase::tilebase#1
  to:vera_layer_set_tilebase::@return
vera_layer_set_tilebase::@return: scope:[vera_layer_set_tilebase]  from vera_layer_set_tilebase
  return 
  to:@return

char vera_layer_set_textcolor(char layer , char color)
vera_layer_set_textcolor: scope:[vera_layer_set_textcolor]  from conio_x16_init::@5
  vera_layer_set_textcolor::color#1 = phi( conio_x16_init::@5/vera_layer_set_textcolor::color#0 )
  vera_layer_set_textcolor::layer#1 = phi( conio_x16_init::@5/vera_layer_set_textcolor::layer#0 )
  vera_layer_set_textcolor::old#0 = vera_layer_textcolor[vera_layer_set_textcolor::layer#1]
  vera_layer_textcolor[vera_layer_set_textcolor::layer#1] = vera_layer_set_textcolor::color#1
  vera_layer_set_textcolor::return#0 = vera_layer_set_textcolor::old#0
  to:vera_layer_set_textcolor::@return
vera_layer_set_textcolor::@return: scope:[vera_layer_set_textcolor]  from vera_layer_set_textcolor
  vera_layer_set_textcolor::return#3 = phi( vera_layer_set_textcolor/vera_layer_set_textcolor::return#0 )
  vera_layer_set_textcolor::return#1 = vera_layer_set_textcolor::return#3
  return 
  to:@return

char vera_layer_get_textcolor(char layer)
vera_layer_get_textcolor: scope:[vera_layer_get_textcolor]  from clrscr::@7
  vera_layer_get_textcolor::layer#1 = phi( clrscr::@7/vera_layer_get_textcolor::layer#0 )
  vera_layer_get_textcolor::return#0 = vera_layer_textcolor[vera_layer_get_textcolor::layer#1]
  to:vera_layer_get_textcolor::@return
vera_layer_get_textcolor::@return: scope:[vera_layer_get_textcolor]  from vera_layer_get_textcolor
  vera_layer_get_textcolor::return#3 = phi( vera_layer_get_textcolor/vera_layer_get_textcolor::return#0 )
  vera_layer_get_textcolor::return#1 = vera_layer_get_textcolor::return#3
  return 
  to:@return

char vera_layer_set_backcolor(char layer , char color)
vera_layer_set_backcolor: scope:[vera_layer_set_backcolor]  from conio_x16_init::@6
  vera_layer_set_backcolor::color#1 = phi( conio_x16_init::@6/vera_layer_set_backcolor::color#0 )
  vera_layer_set_backcolor::layer#1 = phi( conio_x16_init::@6/vera_layer_set_backcolor::layer#0 )
  vera_layer_set_backcolor::old#0 = vera_layer_backcolor[vera_layer_set_backcolor::layer#1]
  vera_layer_backcolor[vera_layer_set_backcolor::layer#1] = vera_layer_set_backcolor::color#1
  vera_layer_set_backcolor::return#0 = vera_layer_set_backcolor::old#0
  to:vera_layer_set_backcolor::@return
vera_layer_set_backcolor::@return: scope:[vera_layer_set_backcolor]  from vera_layer_set_backcolor
  vera_layer_set_backcolor::return#3 = phi( vera_layer_set_backcolor/vera_layer_set_backcolor::return#0 )
  vera_layer_set_backcolor::return#1 = vera_layer_set_backcolor::return#3
  return 
  to:@return

char vera_layer_get_backcolor(char layer)
vera_layer_get_backcolor: scope:[vera_layer_get_backcolor]  from clrscr
  vera_layer_get_backcolor::layer#1 = phi( clrscr/vera_layer_get_backcolor::layer#0 )
  vera_layer_get_backcolor::return#0 = vera_layer_backcolor[vera_layer_get_backcolor::layer#1]
  to:vera_layer_get_backcolor::@return
vera_layer_get_backcolor::@return: scope:[vera_layer_get_backcolor]  from vera_layer_get_backcolor
  vera_layer_get_backcolor::return#3 = phi( vera_layer_get_backcolor/vera_layer_get_backcolor::return#0 )
  vera_layer_get_backcolor::return#1 = vera_layer_get_backcolor::return#3
  return 
  to:@return

char vera_layer_get_color(char layer)
vera_layer_get_color: scope:[vera_layer_get_color]  from clearline cputc
  vera_layer_get_color::layer#2 = phi( clearline/vera_layer_get_color::layer#1, cputc/vera_layer_get_color::layer#0 )
  vera_layer_get_color::$3 = vera_layer_get_color::layer#2 * SIZEOF_POINTER
  vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3]
  vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C
  vera_layer_get_color::$4 = 0 != vera_layer_get_color::$0
  if(vera_layer_get_color::$4) goto vera_layer_get_color::@1
  to:vera_layer_get_color::@2
vera_layer_get_color::@1: scope:[vera_layer_get_color]  from vera_layer_get_color
  vera_layer_get_color::layer#3 = phi( vera_layer_get_color/vera_layer_get_color::layer#2 )
  vera_layer_get_color::return#0 = vera_layer_textcolor[vera_layer_get_color::layer#3]
  to:vera_layer_get_color::@return
vera_layer_get_color::@2: scope:[vera_layer_get_color]  from vera_layer_get_color
  vera_layer_get_color::layer#4 = phi( vera_layer_get_color/vera_layer_get_color::layer#2 )
  vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#4] << 4
  vera_layer_get_color::$2 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#4]
  vera_layer_get_color::return#1 = vera_layer_get_color::$2
  to:vera_layer_get_color::@return
vera_layer_get_color::@return: scope:[vera_layer_get_color]  from vera_layer_get_color::@1 vera_layer_get_color::@2
  vera_layer_get_color::return#5 = phi( vera_layer_get_color::@1/vera_layer_get_color::return#0, vera_layer_get_color::@2/vera_layer_get_color::return#1 )
  vera_layer_get_color::return#2 = vera_layer_get_color::return#5
  return 
  to:@return

char vera_layer_get_rowshift(char layer)
vera_layer_get_rowshift: scope:[vera_layer_get_rowshift]  from screenlayer::@1
  vera_layer_get_rowshift::layer#1 = phi( screenlayer::@1/vera_layer_get_rowshift::layer#0 )
  vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#1]
  to:vera_layer_get_rowshift::@return
vera_layer_get_rowshift::@return: scope:[vera_layer_get_rowshift]  from vera_layer_get_rowshift
  vera_layer_get_rowshift::return#3 = phi( vera_layer_get_rowshift/vera_layer_get_rowshift::return#0 )
  vera_layer_get_rowshift::return#1 = vera_layer_get_rowshift::return#3
  return 
  to:@return

unsigned int vera_layer_get_rowskip(char layer)
vera_layer_get_rowskip: scope:[vera_layer_get_rowskip]  from screenlayer::@5
  vera_layer_get_rowskip::layer#1 = phi( screenlayer::@5/vera_layer_get_rowskip::layer#0 )
  vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#1 * SIZEOF_UNSIGNED_INT
  vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0]
  to:vera_layer_get_rowskip::@return
vera_layer_get_rowskip::@return: scope:[vera_layer_get_rowskip]  from vera_layer_get_rowskip
  vera_layer_get_rowskip::return#3 = phi( vera_layer_get_rowskip/vera_layer_get_rowskip::return#0 )
  vera_layer_get_rowskip::return#1 = vera_layer_get_rowskip::return#3
  return 
  to:@return

void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
vera_layer_mode_tile: scope:[vera_layer_mode_tile]  from vera_layer_mode_text
  vera_layer_mode_tile::tileheight#30 = phi( vera_layer_mode_text/vera_layer_mode_tile::tileheight#0 )
  vera_layer_mode_tile::tilewidth#26 = phi( vera_layer_mode_text/vera_layer_mode_tile::tilewidth#0 )
  vera_layer_mode_tile::tilebase_address#26 = phi( vera_layer_mode_text/vera_layer_mode_tile::tilebase_address#1 )
  vera_layer_mode_tile::mapbase_address#25 = phi( vera_layer_mode_text/vera_layer_mode_tile::mapbase_address#1 )
  vera_layer_mode_tile::mapheight#18 = phi( vera_layer_mode_text/vera_layer_mode_tile::mapheight#0 )
  vera_layer_mode_tile::layer#30 = phi( vera_layer_mode_text/vera_layer_mode_tile::layer#0 )
  vera_layer_mode_tile::mapwidth#10 = phi( vera_layer_mode_text/vera_layer_mode_tile::mapwidth#0 )
  vera_layer_mode_tile::color_depth#1 = phi( vera_layer_mode_text/vera_layer_mode_tile::color_depth#0 )
  vera_layer_mode_tile::config#0 = 0
  if(vera_layer_mode_tile::color_depth#1==1) goto vera_layer_mode_tile::@4
  to:vera_layer_mode_tile::@1
vera_layer_mode_tile::@4: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  vera_layer_mode_tile::tileheight#26 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tileheight#30 )
  vera_layer_mode_tile::tilewidth#22 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilewidth#26 )
  vera_layer_mode_tile::tilebase_address#22 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilebase_address#26 )
  vera_layer_mode_tile::mapbase_address#21 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapbase_address#25 )
  vera_layer_mode_tile::mapheight#14 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapheight#18 )
  vera_layer_mode_tile::layer#22 = phi( vera_layer_mode_tile/vera_layer_mode_tile::layer#30 )
  vera_layer_mode_tile::mapwidth#6 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapwidth#10 )
  vera_layer_mode_tile::config#13 = phi( vera_layer_mode_tile/vera_layer_mode_tile::config#0 )
  vera_layer_mode_tile::config#1 = vera_layer_mode_tile::config#13 | VERA_LAYER_COLOR_DEPTH_1BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@1: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  vera_layer_mode_tile::tileheight#31 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tileheight#30 )
  vera_layer_mode_tile::tilewidth#27 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilewidth#26 )
  vera_layer_mode_tile::tilebase_address#27 = phi( vera_layer_mode_tile/vera_layer_mode_tile::tilebase_address#26 )
  vera_layer_mode_tile::mapbase_address#26 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapbase_address#25 )
  vera_layer_mode_tile::mapheight#19 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapheight#18 )
  vera_layer_mode_tile::layer#31 = phi( vera_layer_mode_tile/vera_layer_mode_tile::layer#30 )
  vera_layer_mode_tile::mapwidth#11 = phi( vera_layer_mode_tile/vera_layer_mode_tile::mapwidth#10 )
  vera_layer_mode_tile::config#26 = phi( vera_layer_mode_tile/vera_layer_mode_tile::config#0 )
  vera_layer_mode_tile::color_depth#2 = phi( vera_layer_mode_tile/vera_layer_mode_tile::color_depth#1 )
  if(vera_layer_mode_tile::color_depth#2==2) goto vera_layer_mode_tile::@5
  to:vera_layer_mode_tile::@2
vera_layer_mode_tile::@5: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  vera_layer_mode_tile::tileheight#27 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tileheight#31 )
  vera_layer_mode_tile::tilewidth#23 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilewidth#27 )
  vera_layer_mode_tile::tilebase_address#23 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilebase_address#27 )
  vera_layer_mode_tile::mapbase_address#22 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapbase_address#26 )
  vera_layer_mode_tile::mapheight#15 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapheight#19 )
  vera_layer_mode_tile::layer#23 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::layer#31 )
  vera_layer_mode_tile::mapwidth#7 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapwidth#11 )
  vera_layer_mode_tile::config#14 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::config#26 )
  vera_layer_mode_tile::config#2 = vera_layer_mode_tile::config#14 | VERA_LAYER_COLOR_DEPTH_2BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@2: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  vera_layer_mode_tile::tileheight#32 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tileheight#31 )
  vera_layer_mode_tile::tilewidth#28 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilewidth#27 )
  vera_layer_mode_tile::tilebase_address#28 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::tilebase_address#27 )
  vera_layer_mode_tile::mapbase_address#27 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapbase_address#26 )
  vera_layer_mode_tile::mapheight#20 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapheight#19 )
  vera_layer_mode_tile::layer#32 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::layer#31 )
  vera_layer_mode_tile::mapwidth#12 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::mapwidth#11 )
  vera_layer_mode_tile::config#27 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::config#26 )
  vera_layer_mode_tile::color_depth#3 = phi( vera_layer_mode_tile::@1/vera_layer_mode_tile::color_depth#2 )
  if(vera_layer_mode_tile::color_depth#3==4) goto vera_layer_mode_tile::@6
  to:vera_layer_mode_tile::@3
vera_layer_mode_tile::@6: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  vera_layer_mode_tile::tileheight#28 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tileheight#32 )
  vera_layer_mode_tile::tilewidth#24 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilewidth#28 )
  vera_layer_mode_tile::tilebase_address#24 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilebase_address#28 )
  vera_layer_mode_tile::mapbase_address#23 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapbase_address#27 )
  vera_layer_mode_tile::mapheight#16 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapheight#20 )
  vera_layer_mode_tile::layer#24 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::layer#32 )
  vera_layer_mode_tile::mapwidth#8 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapwidth#12 )
  vera_layer_mode_tile::config#15 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::config#27 )
  vera_layer_mode_tile::config#3 = vera_layer_mode_tile::config#15 | VERA_LAYER_COLOR_DEPTH_4BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@3: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  vera_layer_mode_tile::tileheight#25 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tileheight#32 )
  vera_layer_mode_tile::tilewidth#21 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilewidth#28 )
  vera_layer_mode_tile::tilebase_address#21 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::tilebase_address#28 )
  vera_layer_mode_tile::mapbase_address#20 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapbase_address#27 )
  vera_layer_mode_tile::mapheight#13 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapheight#20 )
  vera_layer_mode_tile::layer#21 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::layer#32 )
  vera_layer_mode_tile::mapwidth#5 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::mapwidth#12 )
  vera_layer_mode_tile::config#28 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::config#27 )
  vera_layer_mode_tile::color_depth#4 = phi( vera_layer_mode_tile::@2/vera_layer_mode_tile::color_depth#3 )
  if(vera_layer_mode_tile::color_depth#4==8) goto vera_layer_mode_tile::@7
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@7: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3
  vera_layer_mode_tile::tileheight#29 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tileheight#25 )
  vera_layer_mode_tile::tilewidth#25 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilewidth#21 )
  vera_layer_mode_tile::tilebase_address#25 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilebase_address#21 )
  vera_layer_mode_tile::mapbase_address#24 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapbase_address#20 )
  vera_layer_mode_tile::mapheight#17 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapheight#13 )
  vera_layer_mode_tile::layer#25 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::layer#21 )
  vera_layer_mode_tile::mapwidth#9 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapwidth#5 )
  vera_layer_mode_tile::config#16 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::config#28 )
  vera_layer_mode_tile::config#4 = vera_layer_mode_tile::config#16 | VERA_LAYER_COLOR_DEPTH_8BPP
  to:vera_layer_mode_tile::@8
vera_layer_mode_tile::@8: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3 vera_layer_mode_tile::@4 vera_layer_mode_tile::@5 vera_layer_mode_tile::@6 vera_layer_mode_tile::@7
  vera_layer_mode_tile::tileheight#22 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tileheight#25, vera_layer_mode_tile::@4/vera_layer_mode_tile::tileheight#26, vera_layer_mode_tile::@5/vera_layer_mode_tile::tileheight#27, vera_layer_mode_tile::@6/vera_layer_mode_tile::tileheight#28, vera_layer_mode_tile::@7/vera_layer_mode_tile::tileheight#29 )
  vera_layer_mode_tile::tilewidth#18 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilewidth#21, vera_layer_mode_tile::@4/vera_layer_mode_tile::tilewidth#22, vera_layer_mode_tile::@5/vera_layer_mode_tile::tilewidth#23, vera_layer_mode_tile::@6/vera_layer_mode_tile::tilewidth#24, vera_layer_mode_tile::@7/vera_layer_mode_tile::tilewidth#25 )
  vera_layer_mode_tile::tilebase_address#18 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::tilebase_address#21, vera_layer_mode_tile::@4/vera_layer_mode_tile::tilebase_address#22, vera_layer_mode_tile::@5/vera_layer_mode_tile::tilebase_address#23, vera_layer_mode_tile::@6/vera_layer_mode_tile::tilebase_address#24, vera_layer_mode_tile::@7/vera_layer_mode_tile::tilebase_address#25 )
  vera_layer_mode_tile::mapbase_address#17 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapbase_address#20, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapbase_address#21, vera_layer_mode_tile::@5/vera_layer_mode_tile::mapbase_address#22, vera_layer_mode_tile::@6/vera_layer_mode_tile::mapbase_address#23, vera_layer_mode_tile::@7/vera_layer_mode_tile::mapbase_address#24 )
  vera_layer_mode_tile::mapheight#10 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapheight#13, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapheight#14, vera_layer_mode_tile::@5/vera_layer_mode_tile::mapheight#15, vera_layer_mode_tile::@6/vera_layer_mode_tile::mapheight#16, vera_layer_mode_tile::@7/vera_layer_mode_tile::mapheight#17 )
  vera_layer_mode_tile::layer#9 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::layer#21, vera_layer_mode_tile::@4/vera_layer_mode_tile::layer#22, vera_layer_mode_tile::@5/vera_layer_mode_tile::layer#23, vera_layer_mode_tile::@6/vera_layer_mode_tile::layer#24, vera_layer_mode_tile::@7/vera_layer_mode_tile::layer#25 )
  vera_layer_mode_tile::config#29 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::config#28, vera_layer_mode_tile::@4/vera_layer_mode_tile::config#1, vera_layer_mode_tile::@5/vera_layer_mode_tile::config#2, vera_layer_mode_tile::@6/vera_layer_mode_tile::config#3, vera_layer_mode_tile::@7/vera_layer_mode_tile::config#4 )
  vera_layer_mode_tile::mapwidth#1 = phi( vera_layer_mode_tile::@3/vera_layer_mode_tile::mapwidth#5, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapwidth#6, vera_layer_mode_tile::@5/vera_layer_mode_tile::mapwidth#7, vera_layer_mode_tile::@6/vera_layer_mode_tile::mapwidth#8, vera_layer_mode_tile::@7/vera_layer_mode_tile::mapwidth#9 )
  if(vera_layer_mode_tile::mapwidth#1==$20) goto vera_layer_mode_tile::@12
  to:vera_layer_mode_tile::@9
vera_layer_mode_tile::@12: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@8
  vera_layer_mode_tile::tileheight#18 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tileheight#22 )
  vera_layer_mode_tile::tilewidth#14 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilewidth#18 )
  vera_layer_mode_tile::tilebase_address#14 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilebase_address#18 )
  vera_layer_mode_tile::mapbase_address#13 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapbase_address#17 )
  vera_layer_mode_tile::mapheight#6 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapheight#10 )
  vera_layer_mode_tile::layer#1 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::layer#9 )
  vera_layer_mode_tile::config#17 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::config#29 )
  vera_layer_mode_tile::config#5 = vera_layer_mode_tile::config#17 | VERA_LAYER_WIDTH_32
  vera_layer_rowshift[vera_layer_mode_tile::layer#1] = 6
  vera_layer_mode_tile::$11 = vera_layer_mode_tile::layer#1 * SIZEOF_UNSIGNED_INT
  vera_layer_rowskip[vera_layer_mode_tile::$11] = $40
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@9: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@8
  vera_layer_mode_tile::tileheight#23 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tileheight#22 )
  vera_layer_mode_tile::tilewidth#19 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilewidth#18 )
  vera_layer_mode_tile::tilebase_address#19 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::tilebase_address#18 )
  vera_layer_mode_tile::mapbase_address#18 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapbase_address#17 )
  vera_layer_mode_tile::mapheight#11 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapheight#10 )
  vera_layer_mode_tile::layer#10 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::layer#9 )
  vera_layer_mode_tile::config#30 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::config#29 )
  vera_layer_mode_tile::mapwidth#2 = phi( vera_layer_mode_tile::@8/vera_layer_mode_tile::mapwidth#1 )
  if(vera_layer_mode_tile::mapwidth#2==$40) goto vera_layer_mode_tile::@13
  to:vera_layer_mode_tile::@10
vera_layer_mode_tile::@13: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@9
  vera_layer_mode_tile::tileheight#19 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tileheight#23 )
  vera_layer_mode_tile::tilewidth#15 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilewidth#19 )
  vera_layer_mode_tile::tilebase_address#15 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilebase_address#19 )
  vera_layer_mode_tile::mapbase_address#14 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapbase_address#18 )
  vera_layer_mode_tile::mapheight#7 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapheight#11 )
  vera_layer_mode_tile::layer#2 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::layer#10 )
  vera_layer_mode_tile::config#18 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::config#30 )
  vera_layer_mode_tile::config#6 = vera_layer_mode_tile::config#18 | VERA_LAYER_WIDTH_64
  vera_layer_rowshift[vera_layer_mode_tile::layer#2] = 7
  vera_layer_mode_tile::$12 = vera_layer_mode_tile::layer#2 * SIZEOF_UNSIGNED_INT
  vera_layer_rowskip[vera_layer_mode_tile::$12] = $80
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@10: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@9
  vera_layer_mode_tile::tileheight#24 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tileheight#23 )
  vera_layer_mode_tile::tilewidth#20 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilewidth#19 )
  vera_layer_mode_tile::tilebase_address#20 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::tilebase_address#19 )
  vera_layer_mode_tile::mapbase_address#19 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapbase_address#18 )
  vera_layer_mode_tile::mapheight#12 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapheight#11 )
  vera_layer_mode_tile::layer#11 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::layer#10 )
  vera_layer_mode_tile::config#31 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::config#30 )
  vera_layer_mode_tile::mapwidth#3 = phi( vera_layer_mode_tile::@9/vera_layer_mode_tile::mapwidth#2 )
  if(vera_layer_mode_tile::mapwidth#3==$80) goto vera_layer_mode_tile::@14
  to:vera_layer_mode_tile::@11
vera_layer_mode_tile::@14: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@10
  vera_layer_mode_tile::tileheight#20 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tileheight#24 )
  vera_layer_mode_tile::tilewidth#16 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilewidth#20 )
  vera_layer_mode_tile::tilebase_address#16 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilebase_address#20 )
  vera_layer_mode_tile::mapbase_address#15 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapbase_address#19 )
  vera_layer_mode_tile::mapheight#8 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapheight#12 )
  vera_layer_mode_tile::layer#3 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::layer#11 )
  vera_layer_mode_tile::config#19 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::config#31 )
  vera_layer_mode_tile::config#7 = vera_layer_mode_tile::config#19 | VERA_LAYER_WIDTH_128
  vera_layer_rowshift[vera_layer_mode_tile::layer#3] = 8
  vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#3 * SIZEOF_UNSIGNED_INT
  vera_layer_rowskip[vera_layer_mode_tile::$13] = $100
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@11: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@10
  vera_layer_mode_tile::tileheight#17 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tileheight#24 )
  vera_layer_mode_tile::tilewidth#13 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilewidth#20 )
  vera_layer_mode_tile::tilebase_address#13 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::tilebase_address#20 )
  vera_layer_mode_tile::mapbase_address#12 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapbase_address#19 )
  vera_layer_mode_tile::mapheight#5 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapheight#12 )
  vera_layer_mode_tile::layer#12 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::layer#11 )
  vera_layer_mode_tile::config#32 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::config#31 )
  vera_layer_mode_tile::mapwidth#4 = phi( vera_layer_mode_tile::@10/vera_layer_mode_tile::mapwidth#3 )
  if(vera_layer_mode_tile::mapwidth#4==$100) goto vera_layer_mode_tile::@15
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@15: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@11
  vera_layer_mode_tile::tileheight#21 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tileheight#17 )
  vera_layer_mode_tile::tilewidth#17 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilewidth#13 )
  vera_layer_mode_tile::tilebase_address#17 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilebase_address#13 )
  vera_layer_mode_tile::mapbase_address#16 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapbase_address#12 )
  vera_layer_mode_tile::mapheight#9 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapheight#5 )
  vera_layer_mode_tile::layer#4 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::layer#12 )
  vera_layer_mode_tile::config#20 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::config#32 )
  vera_layer_mode_tile::config#8 = vera_layer_mode_tile::config#20 | VERA_LAYER_WIDTH_256
  vera_layer_rowshift[vera_layer_mode_tile::layer#4] = 9
  vera_layer_mode_tile::$14 = vera_layer_mode_tile::layer#4 * SIZEOF_UNSIGNED_INT
  vera_layer_rowskip[vera_layer_mode_tile::$14] = $200
  to:vera_layer_mode_tile::@16
vera_layer_mode_tile::@16: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@11 vera_layer_mode_tile::@12 vera_layer_mode_tile::@13 vera_layer_mode_tile::@14 vera_layer_mode_tile::@15
  vera_layer_mode_tile::tileheight#14 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tileheight#17, vera_layer_mode_tile::@12/vera_layer_mode_tile::tileheight#18, vera_layer_mode_tile::@13/vera_layer_mode_tile::tileheight#19, vera_layer_mode_tile::@14/vera_layer_mode_tile::tileheight#20, vera_layer_mode_tile::@15/vera_layer_mode_tile::tileheight#21 )
  vera_layer_mode_tile::tilewidth#10 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilewidth#13, vera_layer_mode_tile::@12/vera_layer_mode_tile::tilewidth#14, vera_layer_mode_tile::@13/vera_layer_mode_tile::tilewidth#15, vera_layer_mode_tile::@14/vera_layer_mode_tile::tilewidth#16, vera_layer_mode_tile::@15/vera_layer_mode_tile::tilewidth#17 )
  vera_layer_mode_tile::tilebase_address#10 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::tilebase_address#13, vera_layer_mode_tile::@12/vera_layer_mode_tile::tilebase_address#14, vera_layer_mode_tile::@13/vera_layer_mode_tile::tilebase_address#15, vera_layer_mode_tile::@14/vera_layer_mode_tile::tilebase_address#16, vera_layer_mode_tile::@15/vera_layer_mode_tile::tilebase_address#17 )
  vera_layer_mode_tile::mapbase_address#9 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapbase_address#12, vera_layer_mode_tile::@12/vera_layer_mode_tile::mapbase_address#13, vera_layer_mode_tile::@13/vera_layer_mode_tile::mapbase_address#14, vera_layer_mode_tile::@14/vera_layer_mode_tile::mapbase_address#15, vera_layer_mode_tile::@15/vera_layer_mode_tile::mapbase_address#16 )
  vera_layer_mode_tile::layer#26 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::layer#12, vera_layer_mode_tile::@12/vera_layer_mode_tile::layer#1, vera_layer_mode_tile::@13/vera_layer_mode_tile::layer#2, vera_layer_mode_tile::@14/vera_layer_mode_tile::layer#3, vera_layer_mode_tile::@15/vera_layer_mode_tile::layer#4 )
  vera_layer_mode_tile::config#33 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::config#32, vera_layer_mode_tile::@12/vera_layer_mode_tile::config#5, vera_layer_mode_tile::@13/vera_layer_mode_tile::config#6, vera_layer_mode_tile::@14/vera_layer_mode_tile::config#7, vera_layer_mode_tile::@15/vera_layer_mode_tile::config#8 )
  vera_layer_mode_tile::mapheight#1 = phi( vera_layer_mode_tile::@11/vera_layer_mode_tile::mapheight#5, vera_layer_mode_tile::@12/vera_layer_mode_tile::mapheight#6, vera_layer_mode_tile::@13/vera_layer_mode_tile::mapheight#7, vera_layer_mode_tile::@14/vera_layer_mode_tile::mapheight#8, vera_layer_mode_tile::@15/vera_layer_mode_tile::mapheight#9 )
  if(vera_layer_mode_tile::mapheight#1==$20) goto vera_layer_mode_tile::@20
  to:vera_layer_mode_tile::@17
vera_layer_mode_tile::@20: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@16
  vera_layer_mode_tile::tileheight#10 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tileheight#14 )
  vera_layer_mode_tile::tilewidth#6 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilewidth#10 )
  vera_layer_mode_tile::tilebase_address#6 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilebase_address#10 )
  vera_layer_mode_tile::mapbase_address#5 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::mapbase_address#9 )
  vera_layer_mode_tile::layer#14 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::layer#26 )
  vera_layer_mode_tile::config#21 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::config#33 )
  vera_layer_mode_tile::config#9 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_32
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@17: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@16
  vera_layer_mode_tile::tileheight#15 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tileheight#14 )
  vera_layer_mode_tile::tilewidth#11 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilewidth#10 )
  vera_layer_mode_tile::tilebase_address#11 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::tilebase_address#10 )
  vera_layer_mode_tile::mapbase_address#10 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::mapbase_address#9 )
  vera_layer_mode_tile::layer#27 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::layer#26 )
  vera_layer_mode_tile::config#34 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::config#33 )
  vera_layer_mode_tile::mapheight#2 = phi( vera_layer_mode_tile::@16/vera_layer_mode_tile::mapheight#1 )
  if(vera_layer_mode_tile::mapheight#2==$40) goto vera_layer_mode_tile::@21
  to:vera_layer_mode_tile::@18
vera_layer_mode_tile::@21: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@17
  vera_layer_mode_tile::tileheight#11 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tileheight#15 )
  vera_layer_mode_tile::tilewidth#7 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilewidth#11 )
  vera_layer_mode_tile::tilebase_address#7 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilebase_address#11 )
  vera_layer_mode_tile::mapbase_address#6 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::mapbase_address#10 )
  vera_layer_mode_tile::layer#15 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::layer#27 )
  vera_layer_mode_tile::config#22 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::config#34 )
  vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#22 | VERA_LAYER_HEIGHT_64
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@18: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@17
  vera_layer_mode_tile::tileheight#16 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tileheight#15 )
  vera_layer_mode_tile::tilewidth#12 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilewidth#11 )
  vera_layer_mode_tile::tilebase_address#12 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::tilebase_address#11 )
  vera_layer_mode_tile::mapbase_address#11 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::mapbase_address#10 )
  vera_layer_mode_tile::layer#28 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::layer#27 )
  vera_layer_mode_tile::config#35 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::config#34 )
  vera_layer_mode_tile::mapheight#3 = phi( vera_layer_mode_tile::@17/vera_layer_mode_tile::mapheight#2 )
  if(vera_layer_mode_tile::mapheight#3==$80) goto vera_layer_mode_tile::@22
  to:vera_layer_mode_tile::@19
vera_layer_mode_tile::@22: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@18
  vera_layer_mode_tile::tileheight#12 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tileheight#16 )
  vera_layer_mode_tile::tilewidth#8 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilewidth#12 )
  vera_layer_mode_tile::tilebase_address#8 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilebase_address#12 )
  vera_layer_mode_tile::mapbase_address#7 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::mapbase_address#11 )
  vera_layer_mode_tile::layer#16 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::layer#28 )
  vera_layer_mode_tile::config#23 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::config#35 )
  vera_layer_mode_tile::config#11 = vera_layer_mode_tile::config#23 | VERA_LAYER_HEIGHT_128
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@19: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@18
  vera_layer_mode_tile::tileheight#9 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tileheight#16 )
  vera_layer_mode_tile::tilewidth#5 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilewidth#12 )
  vera_layer_mode_tile::tilebase_address#5 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::tilebase_address#12 )
  vera_layer_mode_tile::mapbase_address#4 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::mapbase_address#11 )
  vera_layer_mode_tile::layer#13 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::layer#28 )
  vera_layer_mode_tile::config#36 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::config#35 )
  vera_layer_mode_tile::mapheight#4 = phi( vera_layer_mode_tile::@18/vera_layer_mode_tile::mapheight#3 )
  if(vera_layer_mode_tile::mapheight#4==$100) goto vera_layer_mode_tile::@23
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@23: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@19
  vera_layer_mode_tile::tileheight#13 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tileheight#9 )
  vera_layer_mode_tile::tilewidth#9 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilewidth#5 )
  vera_layer_mode_tile::tilebase_address#9 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilebase_address#5 )
  vera_layer_mode_tile::mapbase_address#8 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::mapbase_address#4 )
  vera_layer_mode_tile::layer#17 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::layer#13 )
  vera_layer_mode_tile::config#24 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::config#36 )
  vera_layer_mode_tile::config#12 = vera_layer_mode_tile::config#24 | VERA_LAYER_HEIGHT_256
  to:vera_layer_mode_tile::@24
vera_layer_mode_tile::@24: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@19 vera_layer_mode_tile::@20 vera_layer_mode_tile::@21 vera_layer_mode_tile::@22 vera_layer_mode_tile::@23
  vera_layer_mode_tile::tileheight#8 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tileheight#9, vera_layer_mode_tile::@20/vera_layer_mode_tile::tileheight#10, vera_layer_mode_tile::@21/vera_layer_mode_tile::tileheight#11, vera_layer_mode_tile::@22/vera_layer_mode_tile::tileheight#12, vera_layer_mode_tile::@23/vera_layer_mode_tile::tileheight#13 )
  vera_layer_mode_tile::tilewidth#4 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilewidth#5, vera_layer_mode_tile::@20/vera_layer_mode_tile::tilewidth#6, vera_layer_mode_tile::@21/vera_layer_mode_tile::tilewidth#7, vera_layer_mode_tile::@22/vera_layer_mode_tile::tilewidth#8, vera_layer_mode_tile::@23/vera_layer_mode_tile::tilewidth#9 )
  vera_layer_mode_tile::tilebase_address#4 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::tilebase_address#5, vera_layer_mode_tile::@20/vera_layer_mode_tile::tilebase_address#6, vera_layer_mode_tile::@21/vera_layer_mode_tile::tilebase_address#7, vera_layer_mode_tile::@22/vera_layer_mode_tile::tilebase_address#8, vera_layer_mode_tile::@23/vera_layer_mode_tile::tilebase_address#9 )
  vera_layer_mode_tile::mapbase_address#3 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::mapbase_address#4, vera_layer_mode_tile::@20/vera_layer_mode_tile::mapbase_address#5, vera_layer_mode_tile::@21/vera_layer_mode_tile::mapbase_address#6, vera_layer_mode_tile::@22/vera_layer_mode_tile::mapbase_address#7, vera_layer_mode_tile::@23/vera_layer_mode_tile::mapbase_address#8 )
  vera_layer_mode_tile::config#25 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::config#36, vera_layer_mode_tile::@20/vera_layer_mode_tile::config#9, vera_layer_mode_tile::@21/vera_layer_mode_tile::config#10, vera_layer_mode_tile::@22/vera_layer_mode_tile::config#11, vera_layer_mode_tile::@23/vera_layer_mode_tile::config#12 )
  vera_layer_mode_tile::layer#5 = phi( vera_layer_mode_tile::@19/vera_layer_mode_tile::layer#13, vera_layer_mode_tile::@20/vera_layer_mode_tile::layer#14, vera_layer_mode_tile::@21/vera_layer_mode_tile::layer#15, vera_layer_mode_tile::@22/vera_layer_mode_tile::layer#16, vera_layer_mode_tile::@23/vera_layer_mode_tile::layer#17 )
  vera_layer_set_config::layer#0 = vera_layer_mode_tile::layer#5
  vera_layer_set_config::config#0 = vera_layer_mode_tile::config#25
  call vera_layer_set_config
  to:vera_layer_mode_tile::@33
vera_layer_mode_tile::@33: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@24
  vera_layer_mode_tile::tileheight#7 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::tileheight#8 )
  vera_layer_mode_tile::tilewidth#3 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::tilewidth#4 )
  vera_layer_mode_tile::tilebase_address#3 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::tilebase_address#4 )
  vera_layer_mode_tile::layer#6 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::layer#5 )
  vera_layer_mode_tile::mapbase_address#2 = phi( vera_layer_mode_tile::@24/vera_layer_mode_tile::mapbase_address#3 )
  vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#2
  vera_layer_mode_tile::$15 = vera_layer_mode_tile::layer#6 * SIZEOF_UNSIGNED_INT
  vera_mapbase_offset[vera_layer_mode_tile::$15] = vera_layer_mode_tile::$1
  vera_layer_mode_tile::$2 = byte2  vera_layer_mode_tile::mapbase_address#2
  vera_mapbase_bank[vera_layer_mode_tile::layer#6] = vera_layer_mode_tile::$2
  vera_layer_mode_tile::$16 = vera_layer_mode_tile::layer#6 * SIZEOF_UNSIGNED_LONG
  vera_mapbase_address[vera_layer_mode_tile::$16] = vera_layer_mode_tile::mapbase_address#2
  vera_layer_mode_tile::$3 = vera_layer_mode_tile::mapbase_address#2 >> 1
  vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::$3
  vera_layer_mode_tile::mapbase#0 = byte1  vera_layer_mode_tile::mapbase_address#0
  vera_layer_set_mapbase::layer#0 = vera_layer_mode_tile::layer#6
  vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
  call vera_layer_set_mapbase
  to:vera_layer_mode_tile::@34
vera_layer_mode_tile::@34: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@33
  vera_layer_mode_tile::tileheight#6 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::tileheight#7 )
  vera_layer_mode_tile::tilewidth#1 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::tilewidth#3 )
  vera_layer_mode_tile::layer#7 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::layer#6 )
  vera_layer_mode_tile::tilebase_address#2 = phi( vera_layer_mode_tile::@33/vera_layer_mode_tile::tilebase_address#3 )
  vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#2
  vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#7 * SIZEOF_UNSIGNED_INT
  vera_tilebase_offset[vera_layer_mode_tile::$17] = vera_layer_mode_tile::$6
  vera_layer_mode_tile::$7 = byte2  vera_layer_mode_tile::tilebase_address#2
  vera_tilebase_bank[vera_layer_mode_tile::layer#7] = vera_layer_mode_tile::$7
  vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#7 * SIZEOF_UNSIGNED_LONG
  vera_tilebase_address[vera_layer_mode_tile::$18] = vera_layer_mode_tile::tilebase_address#2
  vera_layer_mode_tile::$8 = vera_layer_mode_tile::tilebase_address#2 >> 1
  vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::$8
  vera_layer_mode_tile::tilebase#0 = byte1  vera_layer_mode_tile::tilebase_address#0
  vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK
  if(vera_layer_mode_tile::tilewidth#1==8) goto vera_layer_mode_tile::@26
  to:vera_layer_mode_tile::@25
vera_layer_mode_tile::@26: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@34
  vera_layer_mode_tile::layer#34 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::layer#7 )
  vera_layer_mode_tile::tileheight#4 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tileheight#6 )
  vera_layer_mode_tile::tilebase#6 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tilebase#1 )
  vera_layer_mode_tile::tilebase#2 = vera_layer_mode_tile::tilebase#6 | VERA_TILEBASE_WIDTH_8
  to:vera_layer_mode_tile::@28
vera_layer_mode_tile::@25: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@34
  vera_layer_mode_tile::layer#33 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::layer#7 )
  vera_layer_mode_tile::tileheight#3 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tileheight#6 )
  vera_layer_mode_tile::tilebase#11 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tilebase#1 )
  vera_layer_mode_tile::tilewidth#2 = phi( vera_layer_mode_tile::@34/vera_layer_mode_tile::tilewidth#1 )
  if(vera_layer_mode_tile::tilewidth#2==$10) goto vera_layer_mode_tile::@27
  to:vera_layer_mode_tile::@28
vera_layer_mode_tile::@27: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@25
  vera_layer_mode_tile::layer#35 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::layer#33 )
  vera_layer_mode_tile::tileheight#5 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tileheight#3 )
  vera_layer_mode_tile::tilebase#7 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tilebase#11 )
  vera_layer_mode_tile::tilebase#3 = vera_layer_mode_tile::tilebase#7 | VERA_TILEBASE_WIDTH_16
  to:vera_layer_mode_tile::@28
vera_layer_mode_tile::@28: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@25 vera_layer_mode_tile::@26 vera_layer_mode_tile::@27
  vera_layer_mode_tile::layer#29 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::layer#33, vera_layer_mode_tile::@26/vera_layer_mode_tile::layer#34, vera_layer_mode_tile::@27/vera_layer_mode_tile::layer#35 )
  vera_layer_mode_tile::tilebase#12 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tilebase#11, vera_layer_mode_tile::@26/vera_layer_mode_tile::tilebase#2, vera_layer_mode_tile::@27/vera_layer_mode_tile::tilebase#3 )
  vera_layer_mode_tile::tileheight#1 = phi( vera_layer_mode_tile::@25/vera_layer_mode_tile::tileheight#3, vera_layer_mode_tile::@26/vera_layer_mode_tile::tileheight#4, vera_layer_mode_tile::@27/vera_layer_mode_tile::tileheight#5 )
  if(vera_layer_mode_tile::tileheight#1==8) goto vera_layer_mode_tile::@30
  to:vera_layer_mode_tile::@29
vera_layer_mode_tile::@30: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@28
  vera_layer_mode_tile::layer#19 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::layer#29 )
  vera_layer_mode_tile::tilebase#8 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::tilebase#12 )
  vera_layer_mode_tile::tilebase#4 = vera_layer_mode_tile::tilebase#8 | VERA_TILEBASE_HEIGHT_8
  to:vera_layer_mode_tile::@32
vera_layer_mode_tile::@29: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@28
  vera_layer_mode_tile::layer#18 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::layer#29 )
  vera_layer_mode_tile::tilebase#13 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::tilebase#12 )
  vera_layer_mode_tile::tileheight#2 = phi( vera_layer_mode_tile::@28/vera_layer_mode_tile::tileheight#1 )
  if(vera_layer_mode_tile::tileheight#2==$10) goto vera_layer_mode_tile::@31
  to:vera_layer_mode_tile::@32
vera_layer_mode_tile::@31: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@29
  vera_layer_mode_tile::layer#20 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::layer#18 )
  vera_layer_mode_tile::tilebase#9 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::tilebase#13 )
  vera_layer_mode_tile::tilebase#5 = vera_layer_mode_tile::tilebase#9 | VERA_TILEBASE_HEIGHT_16
  to:vera_layer_mode_tile::@32
vera_layer_mode_tile::@32: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@29 vera_layer_mode_tile::@30 vera_layer_mode_tile::@31
  vera_layer_mode_tile::tilebase#10 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::tilebase#13, vera_layer_mode_tile::@30/vera_layer_mode_tile::tilebase#4, vera_layer_mode_tile::@31/vera_layer_mode_tile::tilebase#5 )
  vera_layer_mode_tile::layer#8 = phi( vera_layer_mode_tile::@29/vera_layer_mode_tile::layer#18, vera_layer_mode_tile::@30/vera_layer_mode_tile::layer#19, vera_layer_mode_tile::@31/vera_layer_mode_tile::layer#20 )
  vera_layer_set_tilebase::layer#0 = vera_layer_mode_tile::layer#8
  vera_layer_set_tilebase::tilebase#0 = vera_layer_mode_tile::tilebase#10
  call vera_layer_set_tilebase
  to:vera_layer_mode_tile::@35
vera_layer_mode_tile::@35: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@32
  to:vera_layer_mode_tile::@return
vera_layer_mode_tile::@return: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@35
  return 
  to:@return

void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
vera_layer_mode_text: scope:[vera_layer_mode_text]  from conio_x16_init
  vera_layer_mode_text::color_mode#3 = phi( conio_x16_init/vera_layer_mode_text::color_mode#0 )
  vera_layer_mode_text::tileheight#1 = phi( conio_x16_init/vera_layer_mode_text::tileheight#0 )
  vera_layer_mode_text::tilewidth#1 = phi( conio_x16_init/vera_layer_mode_text::tilewidth#0 )
  vera_layer_mode_text::mapheight#1 = phi( conio_x16_init/vera_layer_mode_text::mapheight#0 )
  vera_layer_mode_text::mapwidth#1 = phi( conio_x16_init/vera_layer_mode_text::mapwidth#0 )
  vera_layer_mode_text::tilebase_address#1 = phi( conio_x16_init/vera_layer_mode_text::tilebase_address#0 )
  vera_layer_mode_text::mapbase_address#1 = phi( conio_x16_init/vera_layer_mode_text::mapbase_address#0 )
  vera_layer_mode_text::layer#1 = phi( conio_x16_init/vera_layer_mode_text::layer#0 )
  vera_layer_mode_tile::layer#0 = vera_layer_mode_text::layer#1
  vera_layer_mode_tile::mapbase_address#1 = vera_layer_mode_text::mapbase_address#1
  vera_layer_mode_tile::tilebase_address#1 = vera_layer_mode_text::tilebase_address#1
  vera_layer_mode_tile::mapwidth#0 = vera_layer_mode_text::mapwidth#1
  vera_layer_mode_tile::mapheight#0 = vera_layer_mode_text::mapheight#1
  vera_layer_mode_tile::tilewidth#0 = vera_layer_mode_text::tilewidth#1
  vera_layer_mode_tile::tileheight#0 = vera_layer_mode_text::tileheight#1
  vera_layer_mode_tile::color_depth#0 = 1
  call vera_layer_mode_tile
  to:vera_layer_mode_text::@4
vera_layer_mode_text::@4: scope:[vera_layer_mode_text]  from vera_layer_mode_text
  vera_layer_mode_text::layer#4 = phi( vera_layer_mode_text/vera_layer_mode_text::layer#1 )
  vera_layer_mode_text::color_mode#1 = phi( vera_layer_mode_text/vera_layer_mode_text::color_mode#3 )
  if(vera_layer_mode_text::color_mode#1==$10) goto vera_layer_mode_text::@2
  to:vera_layer_mode_text::@1
vera_layer_mode_text::@2: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@4
  vera_layer_mode_text::layer#2 = phi( vera_layer_mode_text::@4/vera_layer_mode_text::layer#4 )
  vera_layer_set_text_color_mode::layer#0 = vera_layer_mode_text::layer#2
  vera_layer_set_text_color_mode::color_mode#0 = VERA_LAYER_CONFIG_16C
  call vera_layer_set_text_color_mode
  to:vera_layer_mode_text::@5
vera_layer_mode_text::@5: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@2
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@1: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@4
  vera_layer_mode_text::layer#5 = phi( vera_layer_mode_text::@4/vera_layer_mode_text::layer#4 )
  vera_layer_mode_text::color_mode#2 = phi( vera_layer_mode_text::@4/vera_layer_mode_text::color_mode#1 )
  if(vera_layer_mode_text::color_mode#2==$100) goto vera_layer_mode_text::@3
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@3: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1
  vera_layer_mode_text::layer#3 = phi( vera_layer_mode_text::@1/vera_layer_mode_text::layer#5 )
  vera_layer_set_text_color_mode::layer#1 = vera_layer_mode_text::layer#3
  vera_layer_set_text_color_mode::color_mode#1 = VERA_LAYER_CONFIG_256C
  call vera_layer_set_text_color_mode
  to:vera_layer_mode_text::@6
vera_layer_mode_text::@6: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@3
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@return: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1 vera_layer_mode_text::@5 vera_layer_mode_text::@6
  return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main::@2
  CONIO_SCREEN_BANK#43 = phi( main::@2/CONIO_SCREEN_BANK#4 )
  CONIO_SCREEN_TEXT#10 = phi( main::@2/CONIO_SCREEN_TEXT#4 )
  clrscr::line_text#0 = CONIO_SCREEN_TEXT#10
  vera_layer_get_backcolor::layer#0 = conio_screen_layer
  call vera_layer_get_backcolor
  vera_layer_get_backcolor::return#2 = vera_layer_get_backcolor::return#1
  to:clrscr::@7
clrscr::@7: scope:[clrscr]  from clrscr
  CONIO_SCREEN_BANK#36 = phi( clrscr/CONIO_SCREEN_BANK#43 )
  clrscr::line_text#8 = phi( clrscr/clrscr::line_text#0 )
  vera_layer_get_backcolor::return#4 = phi( clrscr/vera_layer_get_backcolor::return#2 )
  clrscr::$0 = vera_layer_get_backcolor::return#4
  clrscr::$1 = clrscr::$0 << 4
  vera_layer_get_textcolor::layer#0 = conio_screen_layer
  call vera_layer_get_textcolor
  vera_layer_get_textcolor::return#2 = vera_layer_get_textcolor::return#1
  to:clrscr::@8
clrscr::@8: scope:[clrscr]  from clrscr::@7
  CONIO_SCREEN_BANK#29 = phi( clrscr::@7/CONIO_SCREEN_BANK#36 )
  clrscr::line_text#6 = phi( clrscr::@7/clrscr::line_text#8 )
  vera_layer_get_textcolor::return#4 = phi( clrscr::@7/vera_layer_get_textcolor::return#2 )
  clrscr::$2 = vera_layer_get_textcolor::return#4
  clrscr::color#0 = clrscr::$1 | clrscr::$2
  clrscr::l#0 = 0
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr::@6 clrscr::@8
  clrscr::color#4 = phi( clrscr::@6/clrscr::color#5, clrscr::@8/clrscr::color#0 )
  CONIO_SCREEN_BANK#20 = phi( clrscr::@6/CONIO_SCREEN_BANK#28, clrscr::@8/CONIO_SCREEN_BANK#29 )
  clrscr::line_text#4 = phi( clrscr::@6/clrscr::line_text#1, clrscr::@8/clrscr::line_text#6 )
  clrscr::l#2 = phi( clrscr::@6/clrscr::l#1, clrscr::@8/clrscr::l#0 )
  clrscr::$4 = clrscr::l#2 < conio_height
  if(clrscr::$4) goto clrscr::@2
  to:clrscr::@3
clrscr::@2: scope:[clrscr]  from clrscr::@1
  clrscr::l#5 = phi( clrscr::@1/clrscr::l#2 )
  clrscr::color#3 = phi( clrscr::@1/clrscr::color#4 )
  CONIO_SCREEN_BANK#10 = phi( clrscr::@1/CONIO_SCREEN_BANK#20 )
  clrscr::line_text#2 = phi( clrscr::@1/clrscr::line_text#4 )
  clrscr::ch#0 = clrscr::line_text#2
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  clrscr::$5 = byte0  clrscr::ch#0
  *VERA_ADDRX_L = clrscr::$5
  clrscr::$6 = byte1  clrscr::ch#0
  *VERA_ADDRX_M = clrscr::$6
  clrscr::$7 = CONIO_SCREEN_BANK#10 | VERA_INC_1
  *VERA_ADDRX_H = clrscr::$7
  clrscr::c#0 = 0
  to:clrscr::@4
clrscr::@3: scope:[clrscr]  from clrscr::@1
  conio_cursor_x[conio_screen_layer] = 0
  conio_cursor_y[conio_screen_layer] = 0
  clrscr::$9 = conio_screen_layer * SIZEOF_UNSIGNED_INT
  conio_line_text[clrscr::$9] = 0
  to:clrscr::@return
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  CONIO_SCREEN_BANK#37 = phi( clrscr::@2/CONIO_SCREEN_BANK#10, clrscr::@5/CONIO_SCREEN_BANK#44 )
  clrscr::l#4 = phi( clrscr::@2/clrscr::l#5, clrscr::@5/clrscr::l#6 )
  clrscr::line_text#5 = phi( clrscr::@2/clrscr::line_text#2, clrscr::@5/clrscr::line_text#7 )
  clrscr::color#2 = phi( clrscr::@2/clrscr::color#3, clrscr::@5/clrscr::color#1 )
  clrscr::c#2 = phi( clrscr::@2/clrscr::c#0, clrscr::@5/clrscr::c#1 )
  clrscr::$8 = clrscr::c#2 < conio_width
  if(clrscr::$8) goto clrscr::@5
  to:clrscr::@6
clrscr::@5: scope:[clrscr]  from clrscr::@4
  CONIO_SCREEN_BANK#44 = phi( clrscr::@4/CONIO_SCREEN_BANK#37 )
  clrscr::l#6 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_text#7 = phi( clrscr::@4/clrscr::line_text#5 )
  clrscr::c#3 = phi( clrscr::@4/clrscr::c#2 )
  clrscr::color#1 = phi( clrscr::@4/clrscr::color#2 )
  *VERA_DATA0 = ' '
  *VERA_DATA0 = clrscr::color#1
  clrscr::c#1 = ++ clrscr::c#3
  to:clrscr::@4
clrscr::@6: scope:[clrscr]  from clrscr::@4
  clrscr::color#5 = phi( clrscr::@4/clrscr::color#2 )
  CONIO_SCREEN_BANK#28 = phi( clrscr::@4/CONIO_SCREEN_BANK#37 )
  clrscr::l#3 = phi( clrscr::@4/clrscr::l#4 )
  clrscr::line_text#3 = phi( clrscr::@4/clrscr::line_text#5 )
  clrscr::line_text#1 = clrscr::line_text#3 + conio_rowskip
  clrscr::l#1 = ++ clrscr::l#3
  to:clrscr::@1
clrscr::@return: scope:[clrscr]  from clrscr::@3
  return 
  to:@return

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_x16_init::@1 cscroll::@5
  gotoxy::x#5 = phi( conio_x16_init::@1/gotoxy::x#1, cscroll::@5/gotoxy::x#2 )
  gotoxy::y#3 = phi( conio_x16_init::@1/gotoxy::y#1, cscroll::@5/gotoxy::y#2 )
  gotoxy::$0 = gotoxy::y#3 > conio_screen_height
  gotoxy::$1 = ! gotoxy::$0
  if(gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  gotoxy::y#5 = phi( gotoxy/gotoxy::y#3, gotoxy::@3/gotoxy::y#0 )
  gotoxy::x#3 = phi( gotoxy/gotoxy::x#5, gotoxy::@3/gotoxy::x#6 )
  gotoxy::$2 = gotoxy::x#3 >= conio_screen_width
  gotoxy::$3 = ! gotoxy::$2
  if(gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  gotoxy::x#6 = phi( gotoxy/gotoxy::x#5 )
  gotoxy::y#0 = 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  gotoxy::y#4 = phi( gotoxy::@1/gotoxy::y#5, gotoxy::@4/gotoxy::y#6 )
  gotoxy::x#4 = phi( gotoxy::@1/gotoxy::x#3, gotoxy::@4/gotoxy::x#0 )
  conio_cursor_x[conio_screen_layer] = gotoxy::x#4
  conio_cursor_y[conio_screen_layer] = gotoxy::y#4
  gotoxy::$6 = (unsigned int)gotoxy::y#4
  gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift
  gotoxy::$5 = conio_screen_layer * SIZEOF_UNSIGNED_INT
  conio_line_text[gotoxy::$5] = gotoxy::line_offset#0
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  gotoxy::y#6 = phi( gotoxy::@1/gotoxy::y#5 )
  gotoxy::x#0 = 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  return 
  to:@return

void screensize(char *x , char *y)
screensize: scope:[screensize]  from conio_x16_init::@3
  screensize::y#1 = phi( conio_x16_init::@3/screensize::y#0 )
  screensize::x#1 = phi( conio_x16_init::@3/screensize::x#0 )
  screensize::hscale#0 = *VERA_DC_HSCALE >> 7
  screensize::$1 = $28 << screensize::hscale#0
  *screensize::x#1 = screensize::$1
  screensize::vscale#0 = *VERA_DC_VSCALE >> 7
  screensize::$3 = $1e << screensize::vscale#0
  *screensize::y#1 = screensize::$3
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from
  CONIO_SCREEN_BANK#30 = phi( )
  CONIO_SCREEN_TEXT#22 = phi( )
  cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  vera_layer_get_color::layer#0 = conio_screen_layer
  call vera_layer_get_color
  vera_layer_get_color::return#3 = vera_layer_get_color::return#2
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc
  CONIO_SCREEN_BANK#21 = phi( cputc/CONIO_SCREEN_BANK#30 )
  cputc::c#1 = phi( cputc/cputc::c#0 )
  CONIO_SCREEN_TEXT#11 = phi( cputc/CONIO_SCREEN_TEXT#22 )
  vera_layer_get_color::return#6 = phi( cputc/vera_layer_get_color::return#3 )
  cputc::color#0 = vera_layer_get_color::return#6
  cputc::$15 = conio_screen_layer * SIZEOF_UNSIGNED_INT
  cputc::conio_addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[cputc::$15]
  cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
  cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2
  cputc::$3 = cputc::c#1 == '
'
  if(cputc::$3) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc::@7
  CONIO_SCREEN_TEXT#56 = phi( cputc::@7/CONIO_SCREEN_TEXT#11 )
  call cputln
  to:cputc::@8
cputc::@8: scope:[cputc]  from cputc::@1
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc::@7
  CONIO_SCREEN_TEXT#63 = phi( cputc::@7/CONIO_SCREEN_TEXT#11 )
  cputc::color#1 = phi( cputc::@7/cputc::color#0 )
  cputc::c#2 = phi( cputc::@7/cputc::c#1 )
  CONIO_SCREEN_BANK#11 = phi( cputc::@7/CONIO_SCREEN_BANK#21 )
  cputc::conio_addr#2 = phi( cputc::@7/cputc::conio_addr#1 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  cputc::$4 = byte0  cputc::conio_addr#2
  *VERA_ADDRX_L = cputc::$4
  cputc::$5 = byte1  cputc::conio_addr#2
  *VERA_ADDRX_M = cputc::$5
  cputc::$6 = CONIO_SCREEN_BANK#11 | VERA_INC_1
  *VERA_ADDRX_H = cputc::$6
  *VERA_DATA0 = cputc::c#2
  *VERA_DATA0 = cputc::color#1
  conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer]
  cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer]
  cputc::$17 = 0 != cputc::scroll_enable#0
  if(cputc::$17) goto cputc::@5
  to:cputc::@3
cputc::@5: scope:[cputc]  from cputc::@2
  CONIO_SCREEN_TEXT#61 = phi( cputc::@2/CONIO_SCREEN_TEXT#63 )
  cputc::$11 = conio_cursor_x[conio_screen_layer] == conio_screen_width
  cputc::$12 = ! cputc::$11
  if(cputc::$12) goto cputc::@return
  to:cputc::@6
cputc::@3: scope:[cputc]  from cputc::@2
  CONIO_SCREEN_TEXT#60 = phi( cputc::@2/CONIO_SCREEN_TEXT#63 )
  cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer]
  cputc::$8 = cputc::$16 == conio_width
  cputc::$9 = ! cputc::$8
  if(cputc::$9) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  CONIO_SCREEN_TEXT#57 = phi( cputc::@3/CONIO_SCREEN_TEXT#60 )
  call cputln
  to:cputc::@9
cputc::@9: scope:[cputc]  from cputc::@4
  to:cputc::@return
cputc::@6: scope:[cputc]  from cputc::@5
  CONIO_SCREEN_TEXT#58 = phi( cputc::@5/CONIO_SCREEN_TEXT#61 )
  call cputln
  to:cputc::@10
cputc::@10: scope:[cputc]  from cputc::@6
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@10 cputc::@3 cputc::@5 cputc::@8 cputc::@9
  return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@4 cputc::@6
  CONIO_SCREEN_TEXT#53 = phi( cputc::@1/CONIO_SCREEN_TEXT#56, cputc::@4/CONIO_SCREEN_TEXT#57, cputc::@6/CONIO_SCREEN_TEXT#58 )
  cputln::$2 = conio_screen_layer * SIZEOF_UNSIGNED_INT
  cputln::temp#0 = conio_line_text[cputln::$2]
  cputln::temp#1 = cputln::temp#0 + conio_rowskip
  cputln::$3 = conio_screen_layer * SIZEOF_UNSIGNED_INT
  conio_line_text[cputln::$3] = cputln::temp#1
  conio_cursor_x[conio_screen_layer] = 0
  conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer]
  call cscroll
  to:cputln::@1
cputln::@1: scope:[cputln]  from cputln
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln::@1
  return 
  to:@return

void conio_x16_init()
conio_x16_init: scope:[conio_x16_init]  from __start::__init1
  CONIO_SCREEN_TEXT#38 = phi( __start::__init1/CONIO_SCREEN_TEXT#6 )
  CONIO_SCREEN_BANK#38 = phi( __start::__init1/CONIO_SCREEN_BANK#6 )
  conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE
  vera_layer_mode_text::layer#0 = 1
  vera_layer_mode_text::mapbase_address#0 = (unsigned long)0
  vera_layer_mode_text::tilebase_address#0 = (unsigned long)$f800
  vera_layer_mode_text::mapwidth#0 = $80
  vera_layer_mode_text::mapheight#0 = $40
  vera_layer_mode_text::tilewidth#0 = 8
  vera_layer_mode_text::tileheight#0 = 8
  vera_layer_mode_text::color_mode#0 = $10
  call vera_layer_mode_text
  to:conio_x16_init::@3
conio_x16_init::@3: scope:[conio_x16_init]  from conio_x16_init
  conio_x16_init::line#9 = phi( conio_x16_init/conio_x16_init::line#0 )
  CONIO_SCREEN_TEXT#31 = phi( conio_x16_init/CONIO_SCREEN_TEXT#38 )
  CONIO_SCREEN_BANK#31 = phi( conio_x16_init/CONIO_SCREEN_BANK#38 )
  screensize::x#0 = &conio_screen_width
  screensize::y#0 = &conio_screen_height
  call screensize
  to:conio_x16_init::@4
conio_x16_init::@4: scope:[conio_x16_init]  from conio_x16_init::@3
  conio_x16_init::line#8 = phi( conio_x16_init::@3/conio_x16_init::line#9 )
  CONIO_SCREEN_TEXT#23 = phi( conio_x16_init::@3/CONIO_SCREEN_TEXT#31 )
  CONIO_SCREEN_BANK#22 = phi( conio_x16_init::@3/CONIO_SCREEN_BANK#31 )
  screenlayer::layer#0 = 1
  call screenlayer
  to:conio_x16_init::@5
conio_x16_init::@5: scope:[conio_x16_init]  from conio_x16_init::@4
  conio_x16_init::line#7 = phi( conio_x16_init::@4/conio_x16_init::line#8 )
  CONIO_SCREEN_TEXT#12 = phi( conio_x16_init::@4/CONIO_SCREEN_TEXT#3 )
  CONIO_SCREEN_BANK#12 = phi( conio_x16_init::@4/CONIO_SCREEN_BANK#3 )
  CONIO_SCREEN_BANK#0 = CONIO_SCREEN_BANK#12
  CONIO_SCREEN_TEXT#0 = CONIO_SCREEN_TEXT#12
  vera_layer_set_textcolor::layer#0 = 1
  vera_layer_set_textcolor::color#0 = WHITE
  call vera_layer_set_textcolor
  vera_layer_set_textcolor::return#2 = vera_layer_set_textcolor::return#1
  to:conio_x16_init::@6
conio_x16_init::@6: scope:[conio_x16_init]  from conio_x16_init::@5
  CONIO_SCREEN_TEXT#52 = phi( conio_x16_init::@5/CONIO_SCREEN_TEXT#0 )
  CONIO_SCREEN_BANK#51 = phi( conio_x16_init::@5/CONIO_SCREEN_BANK#0 )
  conio_x16_init::line#6 = phi( conio_x16_init::@5/conio_x16_init::line#7 )
  vera_layer_set_backcolor::layer#0 = 1
  vera_layer_set_backcolor::color#0 = BLUE
  call vera_layer_set_backcolor
  vera_layer_set_backcolor::return#2 = vera_layer_set_backcolor::return#1
  to:conio_x16_init::@7
conio_x16_init::@7: scope:[conio_x16_init]  from conio_x16_init::@6
  CONIO_SCREEN_TEXT#48 = phi( conio_x16_init::@6/CONIO_SCREEN_TEXT#52 )
  CONIO_SCREEN_BANK#48 = phi( conio_x16_init::@6/CONIO_SCREEN_BANK#51 )
  conio_x16_init::line#5 = phi( conio_x16_init::@6/conio_x16_init::line#6 )
  vera_layer_set_mapbase::layer#1 = 0
  vera_layer_set_mapbase::mapbase#1 = $20
  call vera_layer_set_mapbase
  to:conio_x16_init::@8
conio_x16_init::@8: scope:[conio_x16_init]  from conio_x16_init::@7
  CONIO_SCREEN_TEXT#44 = phi( conio_x16_init::@7/CONIO_SCREEN_TEXT#48 )
  CONIO_SCREEN_BANK#45 = phi( conio_x16_init::@7/CONIO_SCREEN_BANK#48 )
  conio_x16_init::line#4 = phi( conio_x16_init::@7/conio_x16_init::line#5 )
  vera_layer_set_mapbase::layer#2 = 1
  vera_layer_set_mapbase::mapbase#2 = 0
  call vera_layer_set_mapbase
  to:conio_x16_init::@9
conio_x16_init::@9: scope:[conio_x16_init]  from conio_x16_init::@8
  CONIO_SCREEN_TEXT#40 = phi( conio_x16_init::@8/CONIO_SCREEN_TEXT#44 )
  CONIO_SCREEN_BANK#40 = phi( conio_x16_init::@8/CONIO_SCREEN_BANK#45 )
  conio_x16_init::line#2 = phi( conio_x16_init::@8/conio_x16_init::line#4 )
  conio_x16_init::$7 = conio_x16_init::line#2 >= conio_screen_height
  conio_x16_init::$8 = ! conio_x16_init::$7
  if(conio_x16_init::$8) goto conio_x16_init::@1
  to:conio_x16_init::@2
conio_x16_init::@1: scope:[conio_x16_init]  from conio_x16_init::@2 conio_x16_init::@9
  CONIO_SCREEN_TEXT#32 = phi( conio_x16_init::@2/CONIO_SCREEN_TEXT#39, conio_x16_init::@9/CONIO_SCREEN_TEXT#40 )
  CONIO_SCREEN_BANK#32 = phi( conio_x16_init::@2/CONIO_SCREEN_BANK#39, conio_x16_init::@9/CONIO_SCREEN_BANK#40 )
  conio_x16_init::line#3 = phi( conio_x16_init::@2/conio_x16_init::line#1, conio_x16_init::@9/conio_x16_init::line#2 )
  gotoxy::x#1 = 0
  gotoxy::y#1 = conio_x16_init::line#3
  call gotoxy
  to:conio_x16_init::@10
conio_x16_init::@10: scope:[conio_x16_init]  from conio_x16_init::@1
  CONIO_SCREEN_TEXT#24 = phi( conio_x16_init::@1/CONIO_SCREEN_TEXT#32 )
  CONIO_SCREEN_BANK#23 = phi( conio_x16_init::@1/CONIO_SCREEN_BANK#32 )
  to:conio_x16_init::@return
conio_x16_init::@2: scope:[conio_x16_init]  from conio_x16_init::@9
  CONIO_SCREEN_TEXT#39 = phi( conio_x16_init::@9/CONIO_SCREEN_TEXT#40 )
  CONIO_SCREEN_BANK#39 = phi( conio_x16_init::@9/CONIO_SCREEN_BANK#40 )
  conio_x16_init::$9 = conio_screen_height - 1
  conio_x16_init::line#1 = conio_x16_init::$9
  to:conio_x16_init::@1
conio_x16_init::@return: scope:[conio_x16_init]  from conio_x16_init::@10
  CONIO_SCREEN_TEXT#13 = phi( conio_x16_init::@10/CONIO_SCREEN_TEXT#24 )
  CONIO_SCREEN_BANK#13 = phi( conio_x16_init::@10/CONIO_SCREEN_BANK#23 )
  CONIO_SCREEN_BANK#1 = CONIO_SCREEN_BANK#13
  CONIO_SCREEN_TEXT#1 = CONIO_SCREEN_TEXT#13
  return 
  to:@return

void clearline()
clearline: scope:[clearline]  from insertup::@3
  CONIO_SCREEN_TEXT#14 = phi( insertup::@3/CONIO_SCREEN_TEXT#25 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  clearline::$5 = conio_screen_layer * SIZEOF_UNSIGNED_INT
  clearline::addr#0 = CONIO_SCREEN_TEXT#14 + conio_line_text[clearline::$5]
  clearline::$1 = byte0  clearline::addr#0
  *VERA_ADDRX_L = clearline::$1
  clearline::$2 = byte1  clearline::addr#0
  *VERA_ADDRX_M = clearline::$2
  *VERA_ADDRX_H = VERA_INC_1
  vera_layer_get_color::layer#1 = conio_screen_layer
  call vera_layer_get_color
  vera_layer_get_color::return#4 = vera_layer_get_color::return#2
  to:clearline::@4
clearline::@4: scope:[clearline]  from clearline
  vera_layer_get_color::return#7 = phi( clearline/vera_layer_get_color::return#4 )
  clearline::color#0 = vera_layer_get_color::return#7
  clearline::c#0 = 0
  to:clearline::@1
clearline::@1: scope:[clearline]  from clearline::@2 clearline::@4
  clearline::color#2 = phi( clearline::@2/clearline::color#1, clearline::@4/clearline::color#0 )
  clearline::c#2 = phi( clearline::@2/clearline::c#1, clearline::@4/clearline::c#0 )
  clearline::$4 = clearline::c#2 < conio_screen_width
  if(clearline::$4) goto clearline::@2
  to:clearline::@3
clearline::@2: scope:[clearline]  from clearline::@1
  clearline::c#3 = phi( clearline::@1/clearline::c#2 )
  clearline::color#1 = phi( clearline::@1/clearline::color#2 )
  *VERA_DATA0 = ' '
  *VERA_DATA0 = clearline::color#1
  clearline::c#1 = ++ clearline::c#3
  to:clearline::@1
clearline::@3: scope:[clearline]  from clearline::@1
  conio_cursor_x[conio_screen_layer] = 0
  to:clearline::@return
clearline::@return: scope:[clearline]  from clearline::@3
  return 
  to:@return

void insertup()
insertup: scope:[insertup]  from cscroll::@4
  CONIO_SCREEN_TEXT#33 = phi( cscroll::@4/CONIO_SCREEN_TEXT#41 )
  insertup::cy#0 = conio_cursor_y[conio_screen_layer]
  insertup::width#0 = conio_screen_width * 2
  insertup::i#0 = 1
  to:insertup::@1
insertup::@1: scope:[insertup]  from insertup insertup::@4
  insertup::width#2 = phi( insertup/insertup::width#0, insertup::@4/insertup::width#3 )
  CONIO_SCREEN_TEXT#26 = phi( insertup/CONIO_SCREEN_TEXT#33, insertup::@4/CONIO_SCREEN_TEXT#34 )
  insertup::cy#1 = phi( insertup/insertup::cy#0, insertup::@4/insertup::cy#2 )
  insertup::i#2 = phi( insertup/insertup::i#0, insertup::@4/insertup::i#1 )
  insertup::$2 = insertup::i#2 <= insertup::cy#1
  if(insertup::$2) goto insertup::@2
  to:insertup::@3
insertup::@2: scope:[insertup]  from insertup::@1
  insertup::cy#3 = phi( insertup::@1/insertup::cy#1 )
  insertup::width#1 = phi( insertup::@1/insertup::width#2 )
  CONIO_SCREEN_TEXT#15 = phi( insertup::@1/CONIO_SCREEN_TEXT#26 )
  insertup::i#3 = phi( insertup::@1/insertup::i#2 )
  insertup::$3 = insertup::i#3 - 1
  insertup::line#0 = insertup::$3 << conio_rowshift
  insertup::start#0 = CONIO_SCREEN_TEXT#15 + insertup::line#0
  insertup::$6 = insertup::start#0 + conio_rowskip
  memcpy_in_vram::dest_bank#0 = 0
  memcpy_in_vram::dest#0 = (void *)insertup::start#0
  memcpy_in_vram::dest_increment#0 = VERA_INC_1
  memcpy_in_vram::src_bank#0 = 0
  memcpy_in_vram::src#0 = (void *)insertup::$6
  memcpy_in_vram::src_increment#0 = VERA_INC_1
  memcpy_in_vram::num#0 = insertup::width#1
  call memcpy_in_vram
  to:insertup::@4
insertup::@4: scope:[insertup]  from insertup::@2
  insertup::width#3 = phi( insertup::@2/insertup::width#1 )
  CONIO_SCREEN_TEXT#34 = phi( insertup::@2/CONIO_SCREEN_TEXT#15 )
  insertup::cy#2 = phi( insertup::@2/insertup::cy#3 )
  insertup::i#4 = phi( insertup::@2/insertup::i#3 )
  insertup::i#1 = ++ insertup::i#4
  to:insertup::@1
insertup::@3: scope:[insertup]  from insertup::@1
  CONIO_SCREEN_TEXT#25 = phi( insertup::@1/CONIO_SCREEN_TEXT#26 )
  call clearline
  to:insertup::@5
insertup::@5: scope:[insertup]  from insertup::@3
  to:insertup::@return
insertup::@return: scope:[insertup]  from insertup::@5
  return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  CONIO_SCREEN_TEXT#49 = phi( cputln/CONIO_SCREEN_TEXT#53 )
  cscroll::$0 = conio_cursor_y[conio_screen_layer] >= conio_screen_height
  cscroll::$1 = ! cscroll::$0
  if(cscroll::$1) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  CONIO_SCREEN_TEXT#45 = phi( cscroll/CONIO_SCREEN_TEXT#49 )
  cscroll::$7 = 0 != conio_scroll_enable[conio_screen_layer]
  if(cscroll::$7) goto cscroll::@4
  to:cscroll::@2
cscroll::@4: scope:[cscroll]  from cscroll::@1
  CONIO_SCREEN_TEXT#41 = phi( cscroll::@1/CONIO_SCREEN_TEXT#45 )
  call insertup
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  cscroll::$5 = conio_screen_height - 1
  gotoxy::x#2 = 0
  gotoxy::y#2 = cscroll::$5
  call gotoxy
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  to:cscroll::@return
cscroll::@2: scope:[cscroll]  from cscroll::@1
  cscroll::$2 = conio_cursor_y[conio_screen_layer] >= conio_height
  cscroll::$3 = ! cscroll::$2
  if(cscroll::$3) goto cscroll::@return
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@3 cscroll::@6
  return 
  to:@return

void screenlayer(char layer)
screenlayer: scope:[screenlayer]  from conio_x16_init::@4 main::@1
  screenlayer::layer#2 = phi( conio_x16_init::@4/screenlayer::layer#0, main::@1/screenlayer::layer#1 )
  conio_screen_layer = screenlayer::layer#2
  vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer
  call vera_layer_get_mapbase_bank
  vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#1
  to:screenlayer::@3
screenlayer::@3: scope:[screenlayer]  from screenlayer
  vera_layer_get_mapbase_bank::return#4 = phi( screenlayer/vera_layer_get_mapbase_bank::return#2 )
  screenlayer::$0 = vera_layer_get_mapbase_bank::return#4
  CONIO_SCREEN_BANK#2 = screenlayer::$0
  vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer
  call vera_layer_get_mapbase_offset
  vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#1
  to:screenlayer::@4
screenlayer::@4: scope:[screenlayer]  from screenlayer::@3
  CONIO_SCREEN_BANK#56 = phi( screenlayer::@3/CONIO_SCREEN_BANK#2 )
  vera_layer_get_mapbase_offset::return#4 = phi( screenlayer::@3/vera_layer_get_mapbase_offset::return#2 )
  screenlayer::$1 = vera_layer_get_mapbase_offset::return#4
  CONIO_SCREEN_TEXT#2 = (char *)screenlayer::$1
  screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_width1
screenlayer::vera_layer_get_width1: scope:[screenlayer]  from screenlayer::@4
  CONIO_SCREEN_TEXT#62 = phi( screenlayer::@4/CONIO_SCREEN_TEXT#2 )
  CONIO_SCREEN_BANK#55 = phi( screenlayer::@4/CONIO_SCREEN_BANK#56 )
  screenlayer::vera_layer_get_width1_layer#1 = phi( screenlayer::@4/screenlayer::vera_layer_get_width1_layer#0 )
  screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#1 * SIZEOF_POINTER
  screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2]
  screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK
  screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
  screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 * SIZEOF_UNSIGNED_INT
  screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3]
  to:screenlayer::vera_layer_get_width1_@return
screenlayer::vera_layer_get_width1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_width1
  CONIO_SCREEN_TEXT#59 = phi( screenlayer::vera_layer_get_width1/CONIO_SCREEN_TEXT#62 )
  CONIO_SCREEN_BANK#54 = phi( screenlayer::vera_layer_get_width1/CONIO_SCREEN_BANK#55 )
  screenlayer::vera_layer_get_width1_return#2 = phi( screenlayer::vera_layer_get_width1/screenlayer::vera_layer_get_width1_return#0 )
  screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#2
  to:screenlayer::@1
screenlayer::@1: scope:[screenlayer]  from screenlayer::vera_layer_get_width1_@return
  CONIO_SCREEN_TEXT#54 = phi( screenlayer::vera_layer_get_width1_@return/CONIO_SCREEN_TEXT#59 )
  CONIO_SCREEN_BANK#52 = phi( screenlayer::vera_layer_get_width1_@return/CONIO_SCREEN_BANK#54 )
  screenlayer::vera_layer_get_width1_return#3 = phi( screenlayer::vera_layer_get_width1_@return/screenlayer::vera_layer_get_width1_return#1 )
  screenlayer::$2 = screenlayer::vera_layer_get_width1_return#3
  conio_width = screenlayer::$2
  vera_layer_get_rowshift::layer#0 = conio_screen_layer
  call vera_layer_get_rowshift
  vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#1
  to:screenlayer::@5
screenlayer::@5: scope:[screenlayer]  from screenlayer::@1
  CONIO_SCREEN_TEXT#50 = phi( screenlayer::@1/CONIO_SCREEN_TEXT#54 )
  CONIO_SCREEN_BANK#49 = phi( screenlayer::@1/CONIO_SCREEN_BANK#52 )
  vera_layer_get_rowshift::return#4 = phi( screenlayer::@1/vera_layer_get_rowshift::return#2 )
  screenlayer::$3 = vera_layer_get_rowshift::return#4
  conio_rowshift = screenlayer::$3
  vera_layer_get_rowskip::layer#0 = conio_screen_layer
  call vera_layer_get_rowskip
  vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#1
  to:screenlayer::@6
screenlayer::@6: scope:[screenlayer]  from screenlayer::@5
  CONIO_SCREEN_TEXT#46 = phi( screenlayer::@5/CONIO_SCREEN_TEXT#50 )
  CONIO_SCREEN_BANK#46 = phi( screenlayer::@5/CONIO_SCREEN_BANK#49 )
  vera_layer_get_rowskip::return#4 = phi( screenlayer::@5/vera_layer_get_rowskip::return#2 )
  screenlayer::$4 = vera_layer_get_rowskip::return#4
  conio_rowskip = screenlayer::$4
  screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_height1
screenlayer::vera_layer_get_height1: scope:[screenlayer]  from screenlayer::@6
  CONIO_SCREEN_TEXT#42 = phi( screenlayer::@6/CONIO_SCREEN_TEXT#46 )
  CONIO_SCREEN_BANK#41 = phi( screenlayer::@6/CONIO_SCREEN_BANK#46 )
  screenlayer::vera_layer_get_height1_layer#1 = phi( screenlayer::@6/screenlayer::vera_layer_get_height1_layer#0 )
  screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#1 * SIZEOF_POINTER
  screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2]
  screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK
  screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
  screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 * SIZEOF_UNSIGNED_INT
  screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3]
  to:screenlayer::vera_layer_get_height1_@return
screenlayer::vera_layer_get_height1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_height1
  CONIO_SCREEN_TEXT#35 = phi( screenlayer::vera_layer_get_height1/CONIO_SCREEN_TEXT#42 )
  CONIO_SCREEN_BANK#33 = phi( screenlayer::vera_layer_get_height1/CONIO_SCREEN_BANK#41 )
  screenlayer::vera_layer_get_height1_return#2 = phi( screenlayer::vera_layer_get_height1/screenlayer::vera_layer_get_height1_return#0 )
  screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#2
  to:screenlayer::@2
screenlayer::@2: scope:[screenlayer]  from screenlayer::vera_layer_get_height1_@return
  CONIO_SCREEN_TEXT#27 = phi( screenlayer::vera_layer_get_height1_@return/CONIO_SCREEN_TEXT#35 )
  CONIO_SCREEN_BANK#24 = phi( screenlayer::vera_layer_get_height1_@return/CONIO_SCREEN_BANK#33 )
  screenlayer::vera_layer_get_height1_return#3 = phi( screenlayer::vera_layer_get_height1_@return/screenlayer::vera_layer_get_height1_return#1 )
  screenlayer::$5 = screenlayer::vera_layer_get_height1_return#3
  conio_height = screenlayer::$5
  to:screenlayer::@return
screenlayer::@return: scope:[screenlayer]  from screenlayer::@2
  CONIO_SCREEN_TEXT#16 = phi( screenlayer::@2/CONIO_SCREEN_TEXT#27 )
  CONIO_SCREEN_BANK#14 = phi( screenlayer::@2/CONIO_SCREEN_BANK#24 )
  CONIO_SCREEN_BANK#3 = CONIO_SCREEN_BANK#14
  CONIO_SCREEN_TEXT#3 = CONIO_SCREEN_TEXT#16
  return 
  to:@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@3
  printf_str::putc#3 = phi( main::@3/printf_str::putc#0 )
  printf_str::s#3 = phi( main::@3/printf_str::s#1 )
  printf_str::c#0 = 0
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  printf_str::putc#2 = phi( printf_str/printf_str::putc#3, printf_str::@2/printf_str::putc#1 )
  printf_str::s#2 = phi( printf_str/printf_str::s#3, printf_str::@2/printf_str::s#4 )
  printf_str::c#1 = *printf_str::s#2
  printf_str::$0 = printf_str::c#1
  printf_str::s#0 = ++ printf_str::s#2
  printf_str::$2 = 0 != printf_str::$0
  if(printf_str::$2) goto printf_str::@2
  to:printf_str::@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  printf_str::s#4 = phi( printf_str::@1/printf_str::s#0 )
  printf_str::putc#1 = phi( printf_str::@1/printf_str::putc#2 )
  printf_str::c#2 = phi( printf_str::@1/printf_str::c#1 )
  stackpush(char) = printf_str::c#2
  callexecute *printf_str::putc#1 
  sideeffect stackpullbytes(1)
  to:printf_str::@1
printf_str::@return: scope:[printf_str]  from printf_str::@1
  return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  CONIO_SCREEN_TEXT#36 = phi( __start::@1/CONIO_SCREEN_TEXT#30 )
  CONIO_SCREEN_BANK#34 = phi( __start::@1/CONIO_SCREEN_BANK#27 )
  vera_layer_set_text_color_mode::layer#2 = 1
  vera_layer_set_text_color_mode::color_mode#2 = VERA_LAYER_CONFIG_16C
  call vera_layer_set_text_color_mode
  to:main::@1
main::@1: scope:[main]  from main
  CONIO_SCREEN_TEXT#28 = phi( main/CONIO_SCREEN_TEXT#36 )
  CONIO_SCREEN_BANK#25 = phi( main/CONIO_SCREEN_BANK#34 )
  screenlayer::layer#1 = 1
  call screenlayer
  to:main::@2
main::@2: scope:[main]  from main::@1
  CONIO_SCREEN_TEXT#17 = phi( main::@1/CONIO_SCREEN_TEXT#3 )
  CONIO_SCREEN_BANK#15 = phi( main::@1/CONIO_SCREEN_BANK#3 )
  CONIO_SCREEN_BANK#4 = CONIO_SCREEN_BANK#15
  CONIO_SCREEN_TEXT#4 = CONIO_SCREEN_TEXT#17
  call clrscr
  to:main::@3
main::@3: scope:[main]  from main::@2
  CONIO_SCREEN_TEXT#55 = phi( main::@2/CONIO_SCREEN_TEXT#4 )
  CONIO_SCREEN_BANK#53 = phi( main::@2/CONIO_SCREEN_BANK#4 )
  printf_str::putc#0 = &cputc
  printf_str::s#1 = main::s
  call printf_str
  to:main::@4
main::@4: scope:[main]  from main::@3
  CONIO_SCREEN_TEXT#51 = phi( main::@3/CONIO_SCREEN_TEXT#55 )
  CONIO_SCREEN_BANK#50 = phi( main::@3/CONIO_SCREEN_BANK#53 )
  *(&main::SPRITE_ATTR) = memcpy(*(&$0), struct VERA_SPRITE, SIZEOF_STRUCT_VERA_SPRITE)
  load_to_bank::device#0 = 8
  load_to_bank::filename#0 = main::filename
  load_to_bank::address#0 = main::BANK_SPRITE
  call load_to_bank
  load_to_bank::return#2 = load_to_bank::return#1
  to:main::@5
main::@5: scope:[main]  from main::@4
  CONIO_SCREEN_TEXT#47 = phi( main::@4/CONIO_SCREEN_TEXT#51 )
  CONIO_SCREEN_BANK#47 = phi( main::@4/CONIO_SCREEN_BANK#50 )
  memcpy_bank_to_vram::vdest#0 = VERA_PALETTE+$20
  memcpy_bank_to_vram::src#0 = main::BANK_SPRITE-2
  memcpy_bank_to_vram::num#0 = $20
  call memcpy_bank_to_vram
  to:main::@6
main::@6: scope:[main]  from main::@5
  CONIO_SCREEN_TEXT#43 = phi( main::@5/CONIO_SCREEN_TEXT#47 )
  CONIO_SCREEN_BANK#42 = phi( main::@5/CONIO_SCREEN_BANK#47 )
  memcpy_bank_to_vram::vdest#1 = main::VRAM_SPRITE
  memcpy_bank_to_vram::src#1 = main::BANK_SPRITE+$20-2
  memcpy_bank_to_vram::num#1 = $40*$20
  call memcpy_bank_to_vram
  to:main::@7
main::@7: scope:[main]  from main::@6
  CONIO_SCREEN_TEXT#37 = phi( main::@6/CONIO_SCREEN_TEXT#43 )
  CONIO_SCREEN_BANK#35 = phi( main::@6/CONIO_SCREEN_BANK#42 )
  *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_ADDR) = word0 main::VRAM_SPRITE/$20|VERA_SPRITE_4BPP
  *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64
  *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64
  main::$7 = SIZEOF_STRUCT_VERA_SPRITE
  memcpy_to_vram::vbank#0 = byte2 VERA_SPRITE_ATTR
  memcpy_to_vram::vdest#0 = (void *)(char *)word0 VERA_SPRITE_ATTR
  memcpy_to_vram::src#0 = (void *)&main::SPRITE_ATTR
  memcpy_to_vram::num#0 = main::$7
  call memcpy_to_vram
  to:main::@8
main::@8: scope:[main]  from main::@7
  CONIO_SCREEN_TEXT#29 = phi( main::@7/CONIO_SCREEN_TEXT#37 )
  CONIO_SCREEN_BANK#26 = phi( main::@7/CONIO_SCREEN_BANK#35 )
  *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL
  *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE
  to:main::@return
main::@return: scope:[main]  from main::@8
  CONIO_SCREEN_TEXT#18 = phi( main::@8/CONIO_SCREEN_TEXT#29 )
  CONIO_SCREEN_BANK#16 = phi( main::@8/CONIO_SCREEN_BANK#26 )
  CONIO_SCREEN_BANK#5 = CONIO_SCREEN_BANK#16
  CONIO_SCREEN_TEXT#5 = CONIO_SCREEN_TEXT#18
  return 
  to:@return

void __start()
__start: scope:[__start]  from
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  CONIO_SCREEN_TEXT#6 = DEFAULT_SCREEN
  CONIO_SCREEN_BANK#6 = 0
  conio_screen_width = 0
  conio_screen_height = 0
  conio_screen_layer = 1
  conio_width = 0
  conio_height = 0
  conio_rowshift = 0
  conio_rowskip = 0
  call conio_x16_init
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  CONIO_SCREEN_TEXT#19 = phi( __start::__init1/CONIO_SCREEN_TEXT#1 )
  CONIO_SCREEN_BANK#17 = phi( __start::__init1/CONIO_SCREEN_BANK#1 )
  CONIO_SCREEN_BANK#7 = CONIO_SCREEN_BANK#17
  CONIO_SCREEN_TEXT#7 = CONIO_SCREEN_TEXT#19
  to:__start::@1
__start::@1: scope:[__start]  from __start::@2
  CONIO_SCREEN_TEXT#30 = phi( __start::@2/CONIO_SCREEN_TEXT#7 )
  CONIO_SCREEN_BANK#27 = phi( __start::@2/CONIO_SCREEN_BANK#7 )
  call main
  to:__start::@3
__start::@3: scope:[__start]  from __start::@1
  CONIO_SCREEN_TEXT#20 = phi( __start::@1/CONIO_SCREEN_TEXT#5 )
  CONIO_SCREEN_BANK#18 = phi( __start::@1/CONIO_SCREEN_BANK#5 )
  CONIO_SCREEN_BANK#8 = CONIO_SCREEN_BANK#18
  CONIO_SCREEN_TEXT#8 = CONIO_SCREEN_TEXT#20
  to:__start::@return
__start::@return: scope:[__start]  from __start::@3
  CONIO_SCREEN_BANK#19 = phi( __start::@3/CONIO_SCREEN_BANK#8 )
  CONIO_SCREEN_TEXT#21 = phi( __start::@3/CONIO_SCREEN_TEXT#8 )
  CONIO_SCREEN_TEXT#9 = CONIO_SCREEN_TEXT#21
  CONIO_SCREEN_BANK#9 = CONIO_SCREEN_BANK#19
  return 
  to:@return

SYMBOL TABLE SSA
__constant struct VERA_SPRITE $0 = { ADDR: word0 main::VRAM_SPRITE/$20|VERA_SPRITE_8BPP, X: (unsigned int)$140-$20, Y: (unsigned int)$f0-$20, CTRL1: $c, CTRL2: $f1 }
__constant const char BLUE = 6
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#0
char CONIO_SCREEN_BANK#1
char CONIO_SCREEN_BANK#10
char CONIO_SCREEN_BANK#11
char CONIO_SCREEN_BANK#12
char CONIO_SCREEN_BANK#13
char CONIO_SCREEN_BANK#14
char CONIO_SCREEN_BANK#15
char CONIO_SCREEN_BANK#16
char CONIO_SCREEN_BANK#17
char CONIO_SCREEN_BANK#18
char CONIO_SCREEN_BANK#19
char CONIO_SCREEN_BANK#2
char CONIO_SCREEN_BANK#20
char CONIO_SCREEN_BANK#21
char CONIO_SCREEN_BANK#22
char CONIO_SCREEN_BANK#23
char CONIO_SCREEN_BANK#24
char CONIO_SCREEN_BANK#25
char CONIO_SCREEN_BANK#26
char CONIO_SCREEN_BANK#27
char CONIO_SCREEN_BANK#28
char CONIO_SCREEN_BANK#29
char CONIO_SCREEN_BANK#3
char CONIO_SCREEN_BANK#30
char CONIO_SCREEN_BANK#31
char CONIO_SCREEN_BANK#32
char CONIO_SCREEN_BANK#33
char CONIO_SCREEN_BANK#34
char CONIO_SCREEN_BANK#35
char CONIO_SCREEN_BANK#36
char CONIO_SCREEN_BANK#37
char CONIO_SCREEN_BANK#38
char CONIO_SCREEN_BANK#39
char CONIO_SCREEN_BANK#4
char CONIO_SCREEN_BANK#40
char CONIO_SCREEN_BANK#41
char CONIO_SCREEN_BANK#42
char CONIO_SCREEN_BANK#43
char CONIO_SCREEN_BANK#44
char CONIO_SCREEN_BANK#45
char CONIO_SCREEN_BANK#46
char CONIO_SCREEN_BANK#47
char CONIO_SCREEN_BANK#48
char CONIO_SCREEN_BANK#49
char CONIO_SCREEN_BANK#5
char CONIO_SCREEN_BANK#50
char CONIO_SCREEN_BANK#51
char CONIO_SCREEN_BANK#52
char CONIO_SCREEN_BANK#53
char CONIO_SCREEN_BANK#54
char CONIO_SCREEN_BANK#55
char CONIO_SCREEN_BANK#56
char CONIO_SCREEN_BANK#6
char CONIO_SCREEN_BANK#7
char CONIO_SCREEN_BANK#8
char CONIO_SCREEN_BANK#9
char *CONIO_SCREEN_TEXT
char *CONIO_SCREEN_TEXT#0
char *CONIO_SCREEN_TEXT#1
char *CONIO_SCREEN_TEXT#10
char *CONIO_SCREEN_TEXT#11
char *CONIO_SCREEN_TEXT#12
char *CONIO_SCREEN_TEXT#13
char *CONIO_SCREEN_TEXT#14
char *CONIO_SCREEN_TEXT#15
char *CONIO_SCREEN_TEXT#16
char *CONIO_SCREEN_TEXT#17
char *CONIO_SCREEN_TEXT#18
char *CONIO_SCREEN_TEXT#19
char *CONIO_SCREEN_TEXT#2
char *CONIO_SCREEN_TEXT#20
char *CONIO_SCREEN_TEXT#21
char *CONIO_SCREEN_TEXT#22
char *CONIO_SCREEN_TEXT#23
char *CONIO_SCREEN_TEXT#24
char *CONIO_SCREEN_TEXT#25
char *CONIO_SCREEN_TEXT#26
char *CONIO_SCREEN_TEXT#27
char *CONIO_SCREEN_TEXT#28
char *CONIO_SCREEN_TEXT#29
char *CONIO_SCREEN_TEXT#3
char *CONIO_SCREEN_TEXT#30
char *CONIO_SCREEN_TEXT#31
char *CONIO_SCREEN_TEXT#32
char *CONIO_SCREEN_TEXT#33
char *CONIO_SCREEN_TEXT#34
char *CONIO_SCREEN_TEXT#35
char *CONIO_SCREEN_TEXT#36
char *CONIO_SCREEN_TEXT#37
char *CONIO_SCREEN_TEXT#38
char *CONIO_SCREEN_TEXT#39
char *CONIO_SCREEN_TEXT#4
char *CONIO_SCREEN_TEXT#40
char *CONIO_SCREEN_TEXT#41
char *CONIO_SCREEN_TEXT#42
char *CONIO_SCREEN_TEXT#43
char *CONIO_SCREEN_TEXT#44
char *CONIO_SCREEN_TEXT#45
char *CONIO_SCREEN_TEXT#46
char *CONIO_SCREEN_TEXT#47
char *CONIO_SCREEN_TEXT#48
char *CONIO_SCREEN_TEXT#49
char *CONIO_SCREEN_TEXT#5
char *CONIO_SCREEN_TEXT#50
char *CONIO_SCREEN_TEXT#51
char *CONIO_SCREEN_TEXT#52
char *CONIO_SCREEN_TEXT#53
char *CONIO_SCREEN_TEXT#54
char *CONIO_SCREEN_TEXT#55
char *CONIO_SCREEN_TEXT#56
char *CONIO_SCREEN_TEXT#57
char *CONIO_SCREEN_TEXT#58
char *CONIO_SCREEN_TEXT#59
char *CONIO_SCREEN_TEXT#6
char *CONIO_SCREEN_TEXT#60
char *CONIO_SCREEN_TEXT#61
char *CONIO_SCREEN_TEXT#62
char *CONIO_SCREEN_TEXT#63
char *CONIO_SCREEN_TEXT#7
char *CONIO_SCREEN_TEXT#8
char *CONIO_SCREEN_TEXT#9
__constant char * const DEFAULT_SCREEN = (char *)0
__constant char OFFSET_STRUCT_MOS6522_VIA_PORT_A = 1
__constant char OFFSET_STRUCT_VERA_SPRITE_ADDR = 0
__constant char OFFSET_STRUCT_VERA_SPRITE_X = 2
__constant char OFFSET_STRUCT_VERA_SPRITE_Y = 4
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char SIZEOF_POINTER = 2
__constant char SIZEOF_STRUCT_VERA_SPRITE = 8
__constant char SIZEOF_UNSIGNED_INT = 2
__constant char SIZEOF_UNSIGNED_LONG = 4
__constant char SPRITE_PIXELS[] = kickasm {{ .var pic = LoadPicture("ship.png")
    // palette: rgb->idx
    .var palette = Hashtable()
    // RGB value for each palette index
    .var palList = List()
    // Next palette index
    .var nxt_idx = 0;
    // Extract palette while outputting pixels as palete index values
    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x++) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx = palette.get(rgb)
            .if(idx==null) {
                .eval idx = nxt_idx++;
                .eval palette.put(rgb,idx);
                .eval palList.add(rgb)
            }
        }
    }
    .if(nxt_idx>16) .error "Image has too many colours "+nxt_idx

    .for(var i=0;i<16;i++) {
        .var rgb = palList.get(i)
        .var red = floor(rgb / [256*256])
        .var green = floor(rgb/256) & 255
        .var blue = rgb & 255
        // bits 4-8: green, bits 0-3 blue
        .byte green&$f0  | blue/16
        // bits bits 0-3 red
        .byte red/16
    }

    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x+=2) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx1 = palette.get(rgb)
            .if(idx1==null) {
                .printnow "unknown rgb value!"
            }
            // Find palette index (add if not known)
            .eval rgb = pic.getPixel(x+1,y);
            .var idx2 = palette.get(rgb)
            .if(idx2==null) {
                .printnow "unknown rgb value!"
            }
            .byte idx1*16+idx2;
        }
    }
 }}
__constant unsigned int STACK_BASE = $103
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *)$9f22
__constant char * const VERA_ADDRX_L = (char *)$9f20
__constant char * const VERA_ADDRX_M = (char *)$9f21
__constant char * const VERA_CTRL = (char *)$9f25
__constant char * const VERA_DATA0 = (char *)$9f23
__constant char * const VERA_DATA1 = (char *)$9f24
__constant const char VERA_DCSEL = 2
__constant char * const VERA_DC_HSCALE = (char *)$9f2a
__constant char * const VERA_DC_VIDEO = (char *)$9f29
__constant char * const VERA_DC_VSCALE = (char *)$9f2b
__constant const char VERA_INC_1 = $10
__constant char * const VERA_L0_CONFIG = (char *)$9f2d
__constant char * const VERA_L0_MAPBASE = (char *)$9f2e
__constant char * const VERA_L0_TILEBASE = (char *)$9f2f
__constant char * const VERA_L1_CONFIG = (char *)$9f34
__constant char * const VERA_L1_MAPBASE = (char *)$9f35
__constant char * const VERA_L1_TILEBASE = (char *)$9f36
__constant const char VERA_LAYER_COLOR_DEPTH_1BPP = 0
__constant const char VERA_LAYER_COLOR_DEPTH_2BPP = 1
__constant const char VERA_LAYER_COLOR_DEPTH_4BPP = 2
__constant const char VERA_LAYER_COLOR_DEPTH_8BPP = 3
__constant const char VERA_LAYER_CONFIG_16C = 0
__constant const char VERA_LAYER_CONFIG_256C = 8
__constant const unsigned int VERA_LAYER_HEIGHT[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_HEIGHT_128 = $80
__constant const char VERA_LAYER_HEIGHT_256 = $c0
__constant const char VERA_LAYER_HEIGHT_32 = 0
__constant const char VERA_LAYER_HEIGHT_64 = $40
__constant const char VERA_LAYER_HEIGHT_MASK = $c0
__constant const char VERA_LAYER_TILEBASE_MASK = $fc
__constant const unsigned int VERA_LAYER_WIDTH[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_WIDTH_128 = $20
__constant const char VERA_LAYER_WIDTH_256 = $30
__constant const char VERA_LAYER_WIDTH_32 = 0
__constant const char VERA_LAYER_WIDTH_64 = $10
__constant const char VERA_LAYER_WIDTH_MASK = $30
__constant const unsigned long VERA_PALETTE = $1fa00
__constant const char VERA_SPRITES_ENABLE = $40
__constant const unsigned int VERA_SPRITE_4BPP = 0
__constant const unsigned int VERA_SPRITE_8BPP = $8000
__constant const unsigned long VERA_SPRITE_ATTR = $1fc00
__constant const char VERA_TILEBASE_HEIGHT_16 = 2
__constant const char VERA_TILEBASE_HEIGHT_8 = 0
__constant const char VERA_TILEBASE_WIDTH_16 = 1
__constant const char VERA_TILEBASE_WIDTH_8 = 0
__constant struct MOS6522_VIA * const VIA1 = (struct MOS6522_VIA *)$9f60
__constant const char WHITE = 1
void __start()
void clearline()
char clearline::$1
char clearline::$2
bool clearline::$4
char clearline::$5
char *clearline::addr
char *clearline::addr#0
unsigned int clearline::c
unsigned int clearline::c#0
unsigned int clearline::c#1
unsigned int clearline::c#2
unsigned int clearline::c#3
char clearline::color
char clearline::color#0
char clearline::color#1
char clearline::color#2
void clrscr()
char clrscr::$0
char clrscr::$1
char clrscr::$2
bool clrscr::$4
char clrscr::$5
char clrscr::$6
char clrscr::$7
bool clrscr::$8
char clrscr::$9
char clrscr::c
char clrscr::c#0
char clrscr::c#1
char clrscr::c#2
char clrscr::c#3
char *clrscr::ch
char *clrscr::ch#0
char clrscr::color
char clrscr::color#0
char clrscr::color#1
char clrscr::color#2
char clrscr::color#3
char clrscr::color#4
char clrscr::color#5
char clrscr::l
char clrscr::l#0
char clrscr::l#1
char clrscr::l#2
char clrscr::l#3
char clrscr::l#4
char clrscr::l#5
char clrscr::l#6
char *clrscr::line_text
char *clrscr::line_text#0
char *clrscr::line_text#1
char *clrscr::line_text#2
char *clrscr::line_text#3
char *clrscr::line_text#4
char *clrscr::line_text#5
char *clrscr::line_text#6
char *clrscr::line_text#7
char *clrscr::line_text#8
__constant char conio_cursor_x[2] = { 0, 0 }
__constant char conio_cursor_y[2] = { 0, 0 }
__loadstore unsigned int conio_height
__constant unsigned int conio_line_text[2] = { 0, 0 }
__loadstore char conio_rowshift
__loadstore unsigned int conio_rowskip
__loadstore volatile char conio_screen_height
__loadstore char conio_screen_layer
__loadstore volatile char conio_screen_width
__constant char conio_scroll_enable[2] = { 1, 1 }
__loadstore unsigned int conio_width
void conio_x16_init()
bool conio_x16_init::$7
bool conio_x16_init::$8
number conio_x16_init::$9
__constant char * const conio_x16_init::BASIC_CURSOR_LINE = (char *)$d6
char conio_x16_init::line
char conio_x16_init::line#0
char conio_x16_init::line#1
char conio_x16_init::line#2
char conio_x16_init::line#3
char conio_x16_init::line#4
char conio_x16_init::line#5
char conio_x16_init::line#6
char conio_x16_init::line#7
char conio_x16_init::line#8
char conio_x16_init::line#9
__stackcall void cputc(char c)
bool cputc::$11
bool cputc::$12
char cputc::$15
unsigned int cputc::$16
bool cputc::$17
char cputc::$2
bool cputc::$3
char cputc::$4
char cputc::$5
char cputc::$6
bool cputc::$8
bool cputc::$9
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0
char cputc::c#1
char cputc::c#2
char cputc::color
char cputc::color#0
char cputc::color#1
char *cputc::conio_addr
char *cputc::conio_addr#0
char *cputc::conio_addr#1
char *cputc::conio_addr#2
char cputc::scroll_enable
char cputc::scroll_enable#0
void cputln()
char cputln::$2
char cputln::$3
unsigned int cputln::temp
unsigned int cputln::temp#0
unsigned int cputln::temp#1
void cscroll()
bool cscroll::$0
bool cscroll::$1
bool cscroll::$2
bool cscroll::$3
number cscroll::$5
bool cscroll::$7
void gotoxy(char x , char y)
bool gotoxy::$0
bool gotoxy::$1
bool gotoxy::$2
bool gotoxy::$3
char gotoxy::$5
unsigned int gotoxy::$6
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0
char gotoxy::x
char gotoxy::x#0
char gotoxy::x#1
char gotoxy::x#2
char gotoxy::x#3
char gotoxy::x#4
char gotoxy::x#5
char gotoxy::x#6
char gotoxy::y
char gotoxy::y#0
char gotoxy::y#1
char gotoxy::y#2
char gotoxy::y#3
char gotoxy::y#4
char gotoxy::y#5
char gotoxy::y#6
void insertup()
bool insertup::$2
number insertup::$3
char *insertup::$6
char insertup::cy
char insertup::cy#0
char insertup::cy#1
char insertup::cy#2
char insertup::cy#3
char insertup::i
char insertup::i#0
char insertup::i#1
char insertup::i#2
char insertup::i#3
char insertup::i#4
unsigned int insertup::line
unsigned int insertup::line#0
char *insertup::start
char *insertup::start#0
char insertup::width
char insertup::width#0
char insertup::width#1
char insertup::width#2
char insertup::width#3
char load(char * volatile address , volatile char verify)
__loadstore char * volatile load::address
char load::return
char load::return#0
char load::return#1
char load::return#2
char load::return#3
char load::return#4
__loadstore volatile char load::status
__loadstore volatile char load::verify
char load_to_bank(char device , char *filename , unsigned long address)
char load_to_bank::$2
char load_to_bank::$3
char load_to_bank::$4
char load_to_bank::$5
unsigned int load_to_bank::$7
number load_to_bank::$8
char load_to_bank::$9
char *load_to_bank::addr
char *load_to_bank::addr#0
char *load_to_bank::addr#1
unsigned long load_to_bank::address
unsigned long load_to_bank::address#0
unsigned long load_to_bank::address#1
unsigned long load_to_bank::address#2
unsigned long load_to_bank::address#3
char load_to_bank::bank
char load_to_bank::bank#0
char load_to_bank::device
char load_to_bank::device#0
char load_to_bank::device#1
char load_to_bank::device#2
char *load_to_bank::filename
char *load_to_bank::filename#0
char *load_to_bank::filename#1
char load_to_bank::return
char load_to_bank::return#0
char load_to_bank::return#1
char load_to_bank::return#2
char load_to_bank::return#3
void main()
unsigned int main::$7
__constant const unsigned long main::BANK_SPRITE = $12000
__loadstore volatile struct VERA_SPRITE main::SPRITE_ATTR
__constant const unsigned long main::VRAM_SPRITE = $10000
__constant char main::filename[7] = "SPRITE"
__constant char main::s[$2d] = "

sprite banked file load and display demo.
"
void memcpy_bank_to_vram(unsigned long vdest , unsigned long src , unsigned long num)
char memcpy_bank_to_vram::$0
char memcpy_bank_to_vram::$1
number memcpy_bank_to_vram::$10
bool memcpy_bank_to_vram::$11
bool memcpy_bank_to_vram::$12
bool memcpy_bank_to_vram::$13
char memcpy_bank_to_vram::$2
char memcpy_bank_to_vram::$4
char memcpy_bank_to_vram::$5
char memcpy_bank_to_vram::$6
char memcpy_bank_to_vram::$7
unsigned int memcpy_bank_to_vram::$9
char *memcpy_bank_to_vram::addr
char *memcpy_bank_to_vram::addr#0
char *memcpy_bank_to_vram::addr#1
char *memcpy_bank_to_vram::addr#2
char *memcpy_bank_to_vram::addr#3
char *memcpy_bank_to_vram::addr#4
char *memcpy_bank_to_vram::addr#5
char *memcpy_bank_to_vram::addr#6
char memcpy_bank_to_vram::bank
char memcpy_bank_to_vram::bank#0
char memcpy_bank_to_vram::bank#1
char memcpy_bank_to_vram::bank#2
char memcpy_bank_to_vram::bank#3
char memcpy_bank_to_vram::bank#4
char memcpy_bank_to_vram::bank#5
unsigned long memcpy_bank_to_vram::beg
unsigned long memcpy_bank_to_vram::beg#0
unsigned long memcpy_bank_to_vram::end
unsigned long memcpy_bank_to_vram::end#0
unsigned long memcpy_bank_to_vram::end#1
unsigned long memcpy_bank_to_vram::end#2
unsigned long memcpy_bank_to_vram::end#3
unsigned long memcpy_bank_to_vram::end#4
unsigned long memcpy_bank_to_vram::num
unsigned long memcpy_bank_to_vram::num#0
unsigned long memcpy_bank_to_vram::num#1
unsigned long memcpy_bank_to_vram::num#2
unsigned long memcpy_bank_to_vram::pos
unsigned long memcpy_bank_to_vram::pos#0
unsigned long memcpy_bank_to_vram::pos#1
unsigned long memcpy_bank_to_vram::pos#2
unsigned long memcpy_bank_to_vram::pos#3
unsigned long memcpy_bank_to_vram::pos#4
unsigned long memcpy_bank_to_vram::pos#5
unsigned long memcpy_bank_to_vram::src
unsigned long memcpy_bank_to_vram::src#0
unsigned long memcpy_bank_to_vram::src#1
unsigned long memcpy_bank_to_vram::src#2
unsigned long memcpy_bank_to_vram::vdest
unsigned long memcpy_bank_to_vram::vdest#0
unsigned long memcpy_bank_to_vram::vdest#1
unsigned long memcpy_bank_to_vram::vdest#2
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0
char memcpy_in_vram::$1
char memcpy_in_vram::$2
char memcpy_in_vram::$3
char memcpy_in_vram::$4
char memcpy_in_vram::$5
bool memcpy_in_vram::$6
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0
void *memcpy_in_vram::dest#1
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_bank#0
char memcpy_in_vram::dest_bank#1
char memcpy_in_vram::dest_increment
char memcpy_in_vram::dest_increment#0
char memcpy_in_vram::dest_increment#1
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#0
unsigned int memcpy_in_vram::i#1
unsigned int memcpy_in_vram::i#2
unsigned int memcpy_in_vram::i#3
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0
unsigned int memcpy_in_vram::num#1
unsigned int memcpy_in_vram::num#2
unsigned int memcpy_in_vram::num#3
void *memcpy_in_vram::src
void *memcpy_in_vram::src#0
void *memcpy_in_vram::src#1
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_bank#0
char memcpy_in_vram::src_bank#1
char memcpy_in_vram::src_increment
char memcpy_in_vram::src_increment#0
char memcpy_in_vram::src_increment#1
void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
char memcpy_to_vram::$0
char memcpy_to_vram::$1
char memcpy_to_vram::$2
bool memcpy_to_vram::$4
char *memcpy_to_vram::$5
char *memcpy_to_vram::end
char *memcpy_to_vram::end#0
char *memcpy_to_vram::end#1
char *memcpy_to_vram::end#2
unsigned int memcpy_to_vram::num
unsigned int memcpy_to_vram::num#0
unsigned int memcpy_to_vram::num#1
char *memcpy_to_vram::s
char *memcpy_to_vram::s#0
char *memcpy_to_vram::s#1
char *memcpy_to_vram::s#2
char *memcpy_to_vram::s#3
void *memcpy_to_vram::src
void *memcpy_to_vram::src#0
void *memcpy_to_vram::src#1
char memcpy_to_vram::vbank
char memcpy_to_vram::vbank#0
char memcpy_to_vram::vbank#1
void *memcpy_to_vram::vdest
void *memcpy_to_vram::vdest#0
void *memcpy_to_vram::vdest#1
void printf_str(void (*putc)(char) , const char *s)
char printf_str::$0
bool printf_str::$2
char printf_str::c
char printf_str::c#0
char printf_str::c#1
char printf_str::c#2
void (*printf_str::putc)(char)
void (*printf_str::putc#0)(char)
void (*printf_str::putc#1)(char)
void (*printf_str::putc#2)(char)
void (*printf_str::putc#3)(char)
const char *printf_str::s
const char *printf_str::s#0
const char *printf_str::s#1
const char *printf_str::s#2
const char *printf_str::s#3
const char *printf_str::s#4
void screenlayer(char layer)
char screenlayer::$0
unsigned int screenlayer::$1
unsigned int screenlayer::$2
char screenlayer::$3
unsigned int screenlayer::$4
unsigned int screenlayer::$5
char screenlayer::layer
char screenlayer::layer#0
char screenlayer::layer#1
char screenlayer::layer#2
char screenlayer::vera_layer_get_height1_$0
char screenlayer::vera_layer_get_height1_$1
char screenlayer::vera_layer_get_height1_$2
char screenlayer::vera_layer_get_height1_$3
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0
char screenlayer::vera_layer_get_height1_layer#1
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0
unsigned int screenlayer::vera_layer_get_height1_return#1
unsigned int screenlayer::vera_layer_get_height1_return#2
unsigned int screenlayer::vera_layer_get_height1_return#3
char screenlayer::vera_layer_get_width1_$0
char screenlayer::vera_layer_get_width1_$1
char screenlayer::vera_layer_get_width1_$2
char screenlayer::vera_layer_get_width1_$3
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0
char screenlayer::vera_layer_get_width1_layer#1
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0
unsigned int screenlayer::vera_layer_get_width1_return#1
unsigned int screenlayer::vera_layer_get_width1_return#2
unsigned int screenlayer::vera_layer_get_width1_return#3
void screensize(char *x , char *y)
number screensize::$1
number screensize::$3
char screensize::hscale
char screensize::hscale#0
char screensize::vscale
char screensize::vscale#0
char *screensize::x
char *screensize::x#0
char *screensize::x#1
char *screensize::y
char *screensize::y#0
char *screensize::y#1
void setlfs(volatile char device)
__loadstore volatile char setlfs::device
void setnam(char * volatile filename)
unsigned int setnam::$0
__loadstore char * volatile setnam::filename
__loadstore volatile char setnam::filename_len
unsigned int strlen(char *str)
bool strlen::$0
unsigned int strlen::len
unsigned int strlen::len#0
unsigned int strlen::len#1
unsigned int strlen::len#2
unsigned int strlen::len#3
unsigned int strlen::len#4
unsigned int strlen::return
unsigned int strlen::return#0
unsigned int strlen::return#1
unsigned int strlen::return#2
unsigned int strlen::return#3
unsigned int strlen::return#4
char *strlen::str
char *strlen::str#0
char *strlen::str#1
char *strlen::str#2
char *strlen::str#3
char *strlen::str#4
__constant char vera_layer_backcolor[2] = { BLUE, BLUE }
__constant char *vera_layer_config[2] = { VERA_L0_CONFIG, VERA_L1_CONFIG }
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0
char vera_layer_get_backcolor::layer#1
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0
char vera_layer_get_backcolor::return#1
char vera_layer_get_backcolor::return#2
char vera_layer_get_backcolor::return#3
char vera_layer_get_backcolor::return#4
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0
char vera_layer_get_color::$1
char vera_layer_get_color::$2
char vera_layer_get_color::$3
bool vera_layer_get_color::$4
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0
char vera_layer_get_color::layer#1
char vera_layer_get_color::layer#2
char vera_layer_get_color::layer#3
char vera_layer_get_color::layer#4
char vera_layer_get_color::return
char vera_layer_get_color::return#0
char vera_layer_get_color::return#1
char vera_layer_get_color::return#2
char vera_layer_get_color::return#3
char vera_layer_get_color::return#4
char vera_layer_get_color::return#5
char vera_layer_get_color::return#6
char vera_layer_get_color::return#7
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0
char vera_layer_get_mapbase_bank::layer#1
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0
char vera_layer_get_mapbase_bank::return#1
char vera_layer_get_mapbase_bank::return#2
char vera_layer_get_mapbase_bank::return#3
char vera_layer_get_mapbase_bank::return#4
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0
char vera_layer_get_mapbase_offset::layer#1
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0
unsigned int vera_layer_get_mapbase_offset::return#1
unsigned int vera_layer_get_mapbase_offset::return#2
unsigned int vera_layer_get_mapbase_offset::return#3
unsigned int vera_layer_get_mapbase_offset::return#4
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0
char vera_layer_get_rowshift::layer#1
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0
char vera_layer_get_rowshift::return#1
char vera_layer_get_rowshift::return#2
char vera_layer_get_rowshift::return#3
char vera_layer_get_rowshift::return#4
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0
char vera_layer_get_rowskip::layer#1
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0
unsigned int vera_layer_get_rowskip::return#1
unsigned int vera_layer_get_rowskip::return#2
unsigned int vera_layer_get_rowskip::return#3
unsigned int vera_layer_get_rowskip::return#4
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0
char vera_layer_get_textcolor::layer#1
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0
char vera_layer_get_textcolor::return#1
char vera_layer_get_textcolor::return#2
char vera_layer_get_textcolor::return#3
char vera_layer_get_textcolor::return#4
__constant char *vera_layer_mapbase[2] = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
unsigned int vera_layer_mode_text::color_mode#0
unsigned int vera_layer_mode_text::color_mode#1
unsigned int vera_layer_mode_text::color_mode#2
unsigned int vera_layer_mode_text::color_mode#3
char vera_layer_mode_text::layer
char vera_layer_mode_text::layer#0
char vera_layer_mode_text::layer#1
char vera_layer_mode_text::layer#2
char vera_layer_mode_text::layer#3
char vera_layer_mode_text::layer#4
char vera_layer_mode_text::layer#5
unsigned long vera_layer_mode_text::mapbase_address
unsigned long vera_layer_mode_text::mapbase_address#0
unsigned long vera_layer_mode_text::mapbase_address#1
unsigned int vera_layer_mode_text::mapheight
unsigned int vera_layer_mode_text::mapheight#0
unsigned int vera_layer_mode_text::mapheight#1
unsigned int vera_layer_mode_text::mapwidth
unsigned int vera_layer_mode_text::mapwidth#0
unsigned int vera_layer_mode_text::mapwidth#1
unsigned long vera_layer_mode_text::tilebase_address
unsigned long vera_layer_mode_text::tilebase_address#0
unsigned long vera_layer_mode_text::tilebase_address#1
char vera_layer_mode_text::tileheight
char vera_layer_mode_text::tileheight#0
char vera_layer_mode_text::tileheight#1
char vera_layer_mode_text::tilewidth
char vera_layer_mode_text::tilewidth#0
char vera_layer_mode_text::tilewidth#1
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
unsigned int vera_layer_mode_tile::$1
char vera_layer_mode_tile::$11
char vera_layer_mode_tile::$12
char vera_layer_mode_tile::$13
char vera_layer_mode_tile::$14
char vera_layer_mode_tile::$15
char vera_layer_mode_tile::$16
char vera_layer_mode_tile::$17
char vera_layer_mode_tile::$18
char vera_layer_mode_tile::$2
unsigned long vera_layer_mode_tile::$3
unsigned int vera_layer_mode_tile::$6
char vera_layer_mode_tile::$7
unsigned long vera_layer_mode_tile::$8
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::color_depth#0
char vera_layer_mode_tile::color_depth#1
char vera_layer_mode_tile::color_depth#2
char vera_layer_mode_tile::color_depth#3
char vera_layer_mode_tile::color_depth#4
char vera_layer_mode_tile::config
char vera_layer_mode_tile::config#0
char vera_layer_mode_tile::config#1
char vera_layer_mode_tile::config#10
char vera_layer_mode_tile::config#11
char vera_layer_mode_tile::config#12
char vera_layer_mode_tile::config#13
char vera_layer_mode_tile::config#14
char vera_layer_mode_tile::config#15
char vera_layer_mode_tile::config#16
char vera_layer_mode_tile::config#17
char vera_layer_mode_tile::config#18
char vera_layer_mode_tile::config#19
char vera_layer_mode_tile::config#2
char vera_layer_mode_tile::config#20
char vera_layer_mode_tile::config#21
char vera_layer_mode_tile::config#22
char vera_layer_mode_tile::config#23
char vera_layer_mode_tile::config#24
char vera_layer_mode_tile::config#25
char vera_layer_mode_tile::config#26
char vera_layer_mode_tile::config#27
char vera_layer_mode_tile::config#28
char vera_layer_mode_tile::config#29
char vera_layer_mode_tile::config#3
char vera_layer_mode_tile::config#30
char vera_layer_mode_tile::config#31
char vera_layer_mode_tile::config#32
char vera_layer_mode_tile::config#33
char vera_layer_mode_tile::config#34
char vera_layer_mode_tile::config#35
char vera_layer_mode_tile::config#36
char vera_layer_mode_tile::config#4
char vera_layer_mode_tile::config#5
char vera_layer_mode_tile::config#6
char vera_layer_mode_tile::config#7
char vera_layer_mode_tile::config#8
char vera_layer_mode_tile::config#9
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::layer#0
char vera_layer_mode_tile::layer#1
char vera_layer_mode_tile::layer#10
char vera_layer_mode_tile::layer#11
char vera_layer_mode_tile::layer#12
char vera_layer_mode_tile::layer#13
char vera_layer_mode_tile::layer#14
char vera_layer_mode_tile::layer#15
char vera_layer_mode_tile::layer#16
char vera_layer_mode_tile::layer#17
char vera_layer_mode_tile::layer#18
char vera_layer_mode_tile::layer#19
char vera_layer_mode_tile::layer#2
char vera_layer_mode_tile::layer#20
char vera_layer_mode_tile::layer#21
char vera_layer_mode_tile::layer#22
char vera_layer_mode_tile::layer#23
char vera_layer_mode_tile::layer#24
char vera_layer_mode_tile::layer#25
char vera_layer_mode_tile::layer#26
char vera_layer_mode_tile::layer#27
char vera_layer_mode_tile::layer#28
char vera_layer_mode_tile::layer#29
char vera_layer_mode_tile::layer#3
char vera_layer_mode_tile::layer#30
char vera_layer_mode_tile::layer#31
char vera_layer_mode_tile::layer#32
char vera_layer_mode_tile::layer#33
char vera_layer_mode_tile::layer#34
char vera_layer_mode_tile::layer#35
char vera_layer_mode_tile::layer#4
char vera_layer_mode_tile::layer#5
char vera_layer_mode_tile::layer#6
char vera_layer_mode_tile::layer#7
char vera_layer_mode_tile::layer#8
char vera_layer_mode_tile::layer#9
char vera_layer_mode_tile::mapbase
char vera_layer_mode_tile::mapbase#0
unsigned long vera_layer_mode_tile::mapbase_address
unsigned long vera_layer_mode_tile::mapbase_address#0
unsigned long vera_layer_mode_tile::mapbase_address#1
unsigned long vera_layer_mode_tile::mapbase_address#10
unsigned long vera_layer_mode_tile::mapbase_address#11
unsigned long vera_layer_mode_tile::mapbase_address#12
unsigned long vera_layer_mode_tile::mapbase_address#13
unsigned long vera_layer_mode_tile::mapbase_address#14
unsigned long vera_layer_mode_tile::mapbase_address#15
unsigned long vera_layer_mode_tile::mapbase_address#16
unsigned long vera_layer_mode_tile::mapbase_address#17
unsigned long vera_layer_mode_tile::mapbase_address#18
unsigned long vera_layer_mode_tile::mapbase_address#19
unsigned long vera_layer_mode_tile::mapbase_address#2
unsigned long vera_layer_mode_tile::mapbase_address#20
unsigned long vera_layer_mode_tile::mapbase_address#21
unsigned long vera_layer_mode_tile::mapbase_address#22
unsigned long vera_layer_mode_tile::mapbase_address#23
unsigned long vera_layer_mode_tile::mapbase_address#24
unsigned long vera_layer_mode_tile::mapbase_address#25
unsigned long vera_layer_mode_tile::mapbase_address#26
unsigned long vera_layer_mode_tile::mapbase_address#27
unsigned long vera_layer_mode_tile::mapbase_address#3
unsigned long vera_layer_mode_tile::mapbase_address#4
unsigned long vera_layer_mode_tile::mapbase_address#5
unsigned long vera_layer_mode_tile::mapbase_address#6
unsigned long vera_layer_mode_tile::mapbase_address#7
unsigned long vera_layer_mode_tile::mapbase_address#8
unsigned long vera_layer_mode_tile::mapbase_address#9
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapheight#0
unsigned int vera_layer_mode_tile::mapheight#1
unsigned int vera_layer_mode_tile::mapheight#10
unsigned int vera_layer_mode_tile::mapheight#11
unsigned int vera_layer_mode_tile::mapheight#12
unsigned int vera_layer_mode_tile::mapheight#13
unsigned int vera_layer_mode_tile::mapheight#14
unsigned int vera_layer_mode_tile::mapheight#15
unsigned int vera_layer_mode_tile::mapheight#16
unsigned int vera_layer_mode_tile::mapheight#17
unsigned int vera_layer_mode_tile::mapheight#18
unsigned int vera_layer_mode_tile::mapheight#19
unsigned int vera_layer_mode_tile::mapheight#2
unsigned int vera_layer_mode_tile::mapheight#20
unsigned int vera_layer_mode_tile::mapheight#3
unsigned int vera_layer_mode_tile::mapheight#4
unsigned int vera_layer_mode_tile::mapheight#5
unsigned int vera_layer_mode_tile::mapheight#6
unsigned int vera_layer_mode_tile::mapheight#7
unsigned int vera_layer_mode_tile::mapheight#8
unsigned int vera_layer_mode_tile::mapheight#9
unsigned int vera_layer_mode_tile::mapwidth
unsigned int vera_layer_mode_tile::mapwidth#0
unsigned int vera_layer_mode_tile::mapwidth#1
unsigned int vera_layer_mode_tile::mapwidth#10
unsigned int vera_layer_mode_tile::mapwidth#11
unsigned int vera_layer_mode_tile::mapwidth#12
unsigned int vera_layer_mode_tile::mapwidth#2
unsigned int vera_layer_mode_tile::mapwidth#3
unsigned int vera_layer_mode_tile::mapwidth#4
unsigned int vera_layer_mode_tile::mapwidth#5
unsigned int vera_layer_mode_tile::mapwidth#6
unsigned int vera_layer_mode_tile::mapwidth#7
unsigned int vera_layer_mode_tile::mapwidth#8
unsigned int vera_layer_mode_tile::mapwidth#9
char vera_layer_mode_tile::tilebase
char vera_layer_mode_tile::tilebase#0
char vera_layer_mode_tile::tilebase#1
char vera_layer_mode_tile::tilebase#10
char vera_layer_mode_tile::tilebase#11
char vera_layer_mode_tile::tilebase#12
char vera_layer_mode_tile::tilebase#13
char vera_layer_mode_tile::tilebase#2
char vera_layer_mode_tile::tilebase#3
char vera_layer_mode_tile::tilebase#4
char vera_layer_mode_tile::tilebase#5
char vera_layer_mode_tile::tilebase#6
char vera_layer_mode_tile::tilebase#7
char vera_layer_mode_tile::tilebase#8
char vera_layer_mode_tile::tilebase#9
unsigned long vera_layer_mode_tile::tilebase_address
unsigned long vera_layer_mode_tile::tilebase_address#0
unsigned long vera_layer_mode_tile::tilebase_address#1
unsigned long vera_layer_mode_tile::tilebase_address#10
unsigned long vera_layer_mode_tile::tilebase_address#11
unsigned long vera_layer_mode_tile::tilebase_address#12
unsigned long vera_layer_mode_tile::tilebase_address#13
unsigned long vera_layer_mode_tile::tilebase_address#14
unsigned long vera_layer_mode_tile::tilebase_address#15
unsigned long vera_layer_mode_tile::tilebase_address#16
unsigned long vera_layer_mode_tile::tilebase_address#17
unsigned long vera_layer_mode_tile::tilebase_address#18
unsigned long vera_layer_mode_tile::tilebase_address#19
unsigned long vera_layer_mode_tile::tilebase_address#2
unsigned long vera_layer_mode_tile::tilebase_address#20
unsigned long vera_layer_mode_tile::tilebase_address#21
unsigned long vera_layer_mode_tile::tilebase_address#22
unsigned long vera_layer_mode_tile::tilebase_address#23
unsigned long vera_layer_mode_tile::tilebase_address#24
unsigned long vera_layer_mode_tile::tilebase_address#25
unsigned long vera_layer_mode_tile::tilebase_address#26
unsigned long vera_layer_mode_tile::tilebase_address#27
unsigned long vera_layer_mode_tile::tilebase_address#28
unsigned long vera_layer_mode_tile::tilebase_address#3
unsigned long vera_layer_mode_tile::tilebase_address#4
unsigned long vera_layer_mode_tile::tilebase_address#5
unsigned long vera_layer_mode_tile::tilebase_address#6
unsigned long vera_layer_mode_tile::tilebase_address#7
unsigned long vera_layer_mode_tile::tilebase_address#8
unsigned long vera_layer_mode_tile::tilebase_address#9
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tileheight#0
char vera_layer_mode_tile::tileheight#1
char vera_layer_mode_tile::tileheight#10
char vera_layer_mode_tile::tileheight#11
char vera_layer_mode_tile::tileheight#12
char vera_layer_mode_tile::tileheight#13
char vera_layer_mode_tile::tileheight#14
char vera_layer_mode_tile::tileheight#15
char vera_layer_mode_tile::tileheight#16
char vera_layer_mode_tile::tileheight#17
char vera_layer_mode_tile::tileheight#18
char vera_layer_mode_tile::tileheight#19
char vera_layer_mode_tile::tileheight#2
char vera_layer_mode_tile::tileheight#20
char vera_layer_mode_tile::tileheight#21
char vera_layer_mode_tile::tileheight#22
char vera_layer_mode_tile::tileheight#23
char vera_layer_mode_tile::tileheight#24
char vera_layer_mode_tile::tileheight#25
char vera_layer_mode_tile::tileheight#26
char vera_layer_mode_tile::tileheight#27
char vera_layer_mode_tile::tileheight#28
char vera_layer_mode_tile::tileheight#29
char vera_layer_mode_tile::tileheight#3
char vera_layer_mode_tile::tileheight#30
char vera_layer_mode_tile::tileheight#31
char vera_layer_mode_tile::tileheight#32
char vera_layer_mode_tile::tileheight#4
char vera_layer_mode_tile::tileheight#5
char vera_layer_mode_tile::tileheight#6
char vera_layer_mode_tile::tileheight#7
char vera_layer_mode_tile::tileheight#8
char vera_layer_mode_tile::tileheight#9
char vera_layer_mode_tile::tilewidth
char vera_layer_mode_tile::tilewidth#0
char vera_layer_mode_tile::tilewidth#1
char vera_layer_mode_tile::tilewidth#10
char vera_layer_mode_tile::tilewidth#11
char vera_layer_mode_tile::tilewidth#12
char vera_layer_mode_tile::tilewidth#13
char vera_layer_mode_tile::tilewidth#14
char vera_layer_mode_tile::tilewidth#15
char vera_layer_mode_tile::tilewidth#16
char vera_layer_mode_tile::tilewidth#17
char vera_layer_mode_tile::tilewidth#18
char vera_layer_mode_tile::tilewidth#19
char vera_layer_mode_tile::tilewidth#2
char vera_layer_mode_tile::tilewidth#20
char vera_layer_mode_tile::tilewidth#21
char vera_layer_mode_tile::tilewidth#22
char vera_layer_mode_tile::tilewidth#23
char vera_layer_mode_tile::tilewidth#24
char vera_layer_mode_tile::tilewidth#25
char vera_layer_mode_tile::tilewidth#26
char vera_layer_mode_tile::tilewidth#27
char vera_layer_mode_tile::tilewidth#28
char vera_layer_mode_tile::tilewidth#3
char vera_layer_mode_tile::tilewidth#4
char vera_layer_mode_tile::tilewidth#5
char vera_layer_mode_tile::tilewidth#6
char vera_layer_mode_tile::tilewidth#7
char vera_layer_mode_tile::tilewidth#8
char vera_layer_mode_tile::tilewidth#9
__constant char vera_layer_rowshift[2] = { 0, 0 }
__constant unsigned int vera_layer_rowskip[2] = { 0, 0 }
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::color#0
char vera_layer_set_backcolor::color#1
char vera_layer_set_backcolor::layer
char vera_layer_set_backcolor::layer#0
char vera_layer_set_backcolor::layer#1
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::old#0
char vera_layer_set_backcolor::return
char vera_layer_set_backcolor::return#0
char vera_layer_set_backcolor::return#1
char vera_layer_set_backcolor::return#2
char vera_layer_set_backcolor::return#3
void vera_layer_set_config(char layer , char config)
char vera_layer_set_config::$0
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0
char vera_layer_set_config::config
char vera_layer_set_config::config#0
char vera_layer_set_config::config#1
char vera_layer_set_config::layer
char vera_layer_set_config::layer#0
char vera_layer_set_config::layer#1
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#0
char vera_layer_set_mapbase::layer#1
char vera_layer_set_mapbase::layer#2
char vera_layer_set_mapbase::layer#3
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#0
char vera_layer_set_mapbase::mapbase#1
char vera_layer_set_mapbase::mapbase#2
char vera_layer_set_mapbase::mapbase#3
void vera_layer_set_text_color_mode(char layer , char color_mode)
char vera_layer_set_text_color_mode::$0
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::color_mode#0
char vera_layer_set_text_color_mode::color_mode#1
char vera_layer_set_text_color_mode::color_mode#2
char vera_layer_set_text_color_mode::color_mode#3
char vera_layer_set_text_color_mode::layer
char vera_layer_set_text_color_mode::layer#0
char vera_layer_set_text_color_mode::layer#1
char vera_layer_set_text_color_mode::layer#2
char vera_layer_set_text_color_mode::layer#3
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::color#0
char vera_layer_set_textcolor::color#1
char vera_layer_set_textcolor::layer
char vera_layer_set_textcolor::layer#0
char vera_layer_set_textcolor::layer#1
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::old#0
char vera_layer_set_textcolor::return
char vera_layer_set_textcolor::return#0
char vera_layer_set_textcolor::return#1
char vera_layer_set_textcolor::return#2
char vera_layer_set_textcolor::return#3
void vera_layer_set_tilebase(char layer , char tilebase)
char vera_layer_set_tilebase::$0
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::layer#0
char vera_layer_set_tilebase::layer#1
char vera_layer_set_tilebase::tilebase
char vera_layer_set_tilebase::tilebase#0
char vera_layer_set_tilebase::tilebase#1
__constant char vera_layer_textcolor[2] = { WHITE, WHITE }
__constant char *vera_layer_tilebase[2] = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
__constant unsigned long vera_mapbase_address[2] = { 0, 0 }
__constant char vera_mapbase_bank[2] = { 0, 0 }
__constant unsigned int vera_mapbase_offset[2] = { 0, 0 }
__constant unsigned long vera_tilebase_address[2] = { 0, 0 }
__constant char vera_tilebase_bank[2] = { 0, 0 }
__constant unsigned int vera_tilebase_offset[2] = { 0, 0 }

Adding number conversion cast (unumber) $20 in 
Adding number conversion cast (unumber) 3 in memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3
Adding number conversion cast (unumber) 5 in memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5
Adding number conversion cast (unumber) $1fff in memcpy_bank_to_vram::$10 = memcpy_bank_to_vram::$9 & $1fff
Adding number conversion cast (unumber) memcpy_bank_to_vram::$10 in memcpy_bank_to_vram::$10 = memcpy_bank_to_vram::$9 & (unumber)$1fff
Adding number conversion cast (unumber) $a000 in memcpy_bank_to_vram::addr#1 = memcpy_bank_to_vram::addr#0 + $a000
Adding number conversion cast (unumber) $c000 in memcpy_bank_to_vram::$12 = memcpy_bank_to_vram::addr#4 == $c000
Adding number conversion cast (unumber) 3 in load_to_bank::$3 = load_to_bank::$2 << 3
Adding number conversion cast (unumber) 5 in load_to_bank::$5 = load_to_bank::$4 >> 5
Adding number conversion cast (unumber) $1fff in load_to_bank::$8 = load_to_bank::$7 & $1fff
Adding number conversion cast (unumber) load_to_bank::$8 in load_to_bank::$8 = load_to_bank::$7 & (unumber)$1fff
Adding number conversion cast (unumber) $a000 in load_to_bank::addr#1 = load_to_bank::addr#0 + $a000
Adding number conversion cast (unumber) 0 in load::verify = 0
Adding number conversion cast (unumber) 0 in strlen::$0 = 0 != *strlen::str#2
Adding number conversion cast (unumber) 0 in vera_layer_get_color::$4 = 0 != vera_layer_get_color::$0
Adding number conversion cast (unumber) 4 in vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#4] << 4
Adding number conversion cast (unumber) 1 in if(vera_layer_mode_tile::color_depth#1==1) goto vera_layer_mode_tile::@4
Adding number conversion cast (unumber) 2 in if(vera_layer_mode_tile::color_depth#2==2) goto vera_layer_mode_tile::@5
Adding number conversion cast (unumber) 4 in if(vera_layer_mode_tile::color_depth#3==4) goto vera_layer_mode_tile::@6
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_tile::color_depth#4==8) goto vera_layer_mode_tile::@7
Adding number conversion cast (unumber) $20 in if(vera_layer_mode_tile::mapwidth#1==$20) goto vera_layer_mode_tile::@12
Adding number conversion cast (unumber) 6 in vera_layer_rowshift[vera_layer_mode_tile::layer#1] = 6
Adding number conversion cast (unumber) $40 in vera_layer_rowskip[vera_layer_mode_tile::$11] = $40
Adding number conversion cast (unumber) $40 in if(vera_layer_mode_tile::mapwidth#2==$40) goto vera_layer_mode_tile::@13
Adding number conversion cast (unumber) 7 in vera_layer_rowshift[vera_layer_mode_tile::layer#2] = 7
Adding number conversion cast (unumber) $80 in vera_layer_rowskip[vera_layer_mode_tile::$12] = $80
Adding number conversion cast (unumber) $80 in if(vera_layer_mode_tile::mapwidth#3==$80) goto vera_layer_mode_tile::@14
Adding number conversion cast (unumber) 8 in vera_layer_rowshift[vera_layer_mode_tile::layer#3] = 8
Adding number conversion cast (unumber) $100 in vera_layer_rowskip[vera_layer_mode_tile::$13] = $100
Adding number conversion cast (unumber) $100 in if(vera_layer_mode_tile::mapwidth#4==$100) goto vera_layer_mode_tile::@15
Adding number conversion cast (unumber) 9 in vera_layer_rowshift[vera_layer_mode_tile::layer#4] = 9
Adding number conversion cast (unumber) $200 in vera_layer_rowskip[vera_layer_mode_tile::$14] = $200
Adding number conversion cast (unumber) $20 in if(vera_layer_mode_tile::mapheight#1==$20) goto vera_layer_mode_tile::@20
Adding number conversion cast (unumber) $40 in if(vera_layer_mode_tile::mapheight#2==$40) goto vera_layer_mode_tile::@21
Adding number conversion cast (unumber) $80 in if(vera_layer_mode_tile::mapheight#3==$80) goto vera_layer_mode_tile::@22
Adding number conversion cast (unumber) $100 in if(vera_layer_mode_tile::mapheight#4==$100) goto vera_layer_mode_tile::@23
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::$3 = vera_layer_mode_tile::mapbase_address#2 >> 1
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::$8 = vera_layer_mode_tile::tilebase_address#2 >> 1
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_tile::tilewidth#1==8) goto vera_layer_mode_tile::@26
Adding number conversion cast (unumber) $10 in if(vera_layer_mode_tile::tilewidth#2==$10) goto vera_layer_mode_tile::@27
Adding number conversion cast (unumber) 8 in if(vera_layer_mode_tile::tileheight#1==8) goto vera_layer_mode_tile::@30
Adding number conversion cast (unumber) $10 in if(vera_layer_mode_tile::tileheight#2==$10) goto vera_layer_mode_tile::@31
Adding number conversion cast (unumber) 1 in vera_layer_mode_tile::color_depth#0 = 1
Adding number conversion cast (unumber) $10 in if(vera_layer_mode_text::color_mode#1==$10) goto vera_layer_mode_text::@2
Adding number conversion cast (unumber) $100 in if(vera_layer_mode_text::color_mode#2==$100) goto vera_layer_mode_text::@3
Adding number conversion cast (unumber) 4 in clrscr::$1 = clrscr::$0 << 4
Adding number conversion cast (unumber) 0 in conio_cursor_x[conio_screen_layer] = 0
Adding number conversion cast (unumber) 0 in conio_cursor_y[conio_screen_layer] = 0
Adding number conversion cast (unumber) 0 in conio_line_text[clrscr::$9] = 0
Adding number conversion cast (unumber) 0 in gotoxy::y#0 = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#0 = 0
Adding number conversion cast (unumber) 7 in screensize::hscale#0 = *VERA_DC_HSCALE >> 7
Adding number conversion cast (unumber) $28 in screensize::$1 = $28 << screensize::hscale#0
Adding number conversion cast (unumber) screensize::$1 in screensize::$1 = (unumber)$28 << screensize::hscale#0
Adding number conversion cast (unumber) 7 in screensize::vscale#0 = *VERA_DC_VSCALE >> 7
Adding number conversion cast (unumber) $1e in screensize::$3 = $1e << screensize::vscale#0
Adding number conversion cast (unumber) screensize::$3 in screensize::$3 = (unumber)$1e << screensize::vscale#0
Adding number conversion cast (unumber) 1 in cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
Adding number conversion cast (unumber) 0 in cputc::$17 = 0 != cputc::scroll_enable#0
Adding number conversion cast (unumber) 0 in conio_cursor_x[conio_screen_layer] = 0
Adding number conversion cast (unumber) 1 in vera_layer_mode_text::layer#0 = 1
Adding number conversion cast (unumber) $80 in vera_layer_mode_text::mapwidth#0 = $80
Adding number conversion cast (unumber) $40 in vera_layer_mode_text::mapheight#0 = $40
Adding number conversion cast (unumber) 8 in vera_layer_mode_text::tilewidth#0 = 8
Adding number conversion cast (unumber) 8 in vera_layer_mode_text::tileheight#0 = 8
Adding number conversion cast (unumber) $10 in vera_layer_mode_text::color_mode#0 = $10
Adding number conversion cast (unumber) 1 in screenlayer::layer#0 = 1
Adding number conversion cast (unumber) 1 in vera_layer_set_textcolor::layer#0 = 1
Adding number conversion cast (unumber) 1 in vera_layer_set_backcolor::layer#0 = 1
Adding number conversion cast (unumber) 0 in vera_layer_set_mapbase::layer#1 = 0
Adding number conversion cast (unumber) $20 in vera_layer_set_mapbase::mapbase#1 = $20
Adding number conversion cast (unumber) 1 in vera_layer_set_mapbase::layer#2 = 1
Adding number conversion cast (unumber) 0 in vera_layer_set_mapbase::mapbase#2 = 0
Adding number conversion cast (unumber) 0 in gotoxy::x#1 = 0
Adding number conversion cast (unumber) 1 in conio_x16_init::$9 = conio_screen_height - 1
Adding number conversion cast (unumber) conio_x16_init::$9 in conio_x16_init::$9 = conio_screen_height - (unumber)1
Adding number conversion cast (unumber) 0 in conio_cursor_x[conio_screen_layer] = 0
Adding number conversion cast (unumber) 2 in insertup::width#0 = conio_screen_width * 2
Adding number conversion cast (unumber) 1 in insertup::$3 = insertup::i#3 - 1
Adding number conversion cast (unumber) insertup::$3 in insertup::$3 = insertup::i#3 - (unumber)1
Adding number conversion cast (unumber) 0 in memcpy_in_vram::dest_bank#0 = 0
Adding number conversion cast (unumber) 0 in memcpy_in_vram::src_bank#0 = 0
Adding number conversion cast (unumber) 0 in cscroll::$7 = 0 != conio_scroll_enable[conio_screen_layer]
Adding number conversion cast (unumber) 1 in cscroll::$5 = conio_screen_height - 1
Adding number conversion cast (unumber) cscroll::$5 in cscroll::$5 = conio_screen_height - (unumber)1
Adding number conversion cast (unumber) 0 in gotoxy::x#2 = 0
Adding number conversion cast (unumber) 4 in screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
Adding number conversion cast (unumber) 6 in screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
Adding number conversion cast (unumber) 0 in printf_str::$2 = 0 != printf_str::$0
Adding number conversion cast (unumber) 1 in vera_layer_set_text_color_mode::layer#2 = 1
Adding number conversion cast (unumber) 1 in screenlayer::layer#1 = 1
Adding number conversion cast (unumber) 8 in load_to_bank::device#0 = 8
Adding number conversion cast (unumber) VERA_PALETTE+$20 in memcpy_bank_to_vram::vdest#0 = VERA_PALETTE+$20
Adding number conversion cast (unumber) $20 in memcpy_bank_to_vram::vdest#0 = ((unumber)) VERA_PALETTE+$20
Adding number conversion cast (unumber) main::BANK_SPRITE-2 in memcpy_bank_to_vram::src#0 = main::BANK_SPRITE-2
Adding number conversion cast (unumber) 2 in memcpy_bank_to_vram::src#0 = ((unumber)) main::BANK_SPRITE-2
Adding number conversion cast (unumber) $20 in memcpy_bank_to_vram::num#0 = $20
Adding number conversion cast (unumber) main::BANK_SPRITE+$20-2 in memcpy_bank_to_vram::src#1 = main::BANK_SPRITE+$20-2
Adding number conversion cast (unumber) $20 in memcpy_bank_to_vram::src#1 = ((unumber)) main::BANK_SPRITE+$20-2
Adding number conversion cast (unumber) $40*$20 in memcpy_bank_to_vram::num#1 = $40*$20
Adding number conversion cast (unumber) $20 in *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_ADDR) = word0 main::VRAM_SPRITE/$20|VERA_SPRITE_4BPP
Adding number conversion cast (unumber) $64 in *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64
Adding number conversion cast (unumber) $64 in *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64
Successful SSA optimization PassNAddNumberTypeConversions
Adding number conversion cast (unumber) 2 in memcpy_bank_to_vram::src#1 = ((unumber)) main::BANK_SPRITE+(unumber)$20-2
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast memcpy_to_vram::s#0 = (char *)memcpy_to_vram::src#1
Inlining cast load::verify = (unumber)0
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#1] = (unumber)6
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$11] = (unumber)$40
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#2] = (unumber)7
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$12] = (unumber)$80
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#3] = (unumber)8
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$13] = (unumber)$100
Inlining cast vera_layer_rowshift[vera_layer_mode_tile::layer#4] = (unumber)9
Inlining cast vera_layer_rowskip[vera_layer_mode_tile::$14] = (unumber)$200
Inlining cast vera_layer_mode_tile::color_depth#0 = (unumber)1
Inlining cast conio_cursor_x[conio_screen_layer] = (unumber)0
Inlining cast conio_cursor_y[conio_screen_layer] = (unumber)0
Inlining cast conio_line_text[clrscr::$9] = (unumber)0
Inlining cast gotoxy::y#0 = (unumber)0
Inlining cast gotoxy::x#0 = (unumber)0
Inlining cast conio_cursor_x[conio_screen_layer] = (unumber)0
Inlining cast vera_layer_mode_text::layer#0 = (unumber)1
Inlining cast vera_layer_mode_text::mapwidth#0 = (unumber)$80
Inlining cast vera_layer_mode_text::mapheight#0 = (unumber)$40
Inlining cast vera_layer_mode_text::tilewidth#0 = (unumber)8
Inlining cast vera_layer_mode_text::tileheight#0 = (unumber)8
Inlining cast vera_layer_mode_text::color_mode#0 = (unumber)$10
Inlining cast screenlayer::layer#0 = (unumber)1
Inlining cast vera_layer_set_textcolor::layer#0 = (unumber)1
Inlining cast vera_layer_set_backcolor::layer#0 = (unumber)1
Inlining cast vera_layer_set_mapbase::layer#1 = (unumber)0
Inlining cast vera_layer_set_mapbase::mapbase#1 = (unumber)$20
Inlining cast vera_layer_set_mapbase::layer#2 = (unumber)1
Inlining cast vera_layer_set_mapbase::mapbase#2 = (unumber)0
Inlining cast gotoxy::x#1 = (unumber)0
Inlining cast conio_cursor_x[conio_screen_layer] = (unumber)0
Inlining cast memcpy_in_vram::dest_bank#0 = (unumber)0
Inlining cast memcpy_in_vram::src_bank#0 = (unumber)0
Inlining cast gotoxy::x#2 = (unumber)0
Inlining cast vera_layer_set_text_color_mode::layer#2 = (unumber)1
Inlining cast screenlayer::layer#1 = (unumber)1
Inlining cast load_to_bank::device#0 = (unumber)8
Inlining cast memcpy_bank_to_vram::vdest#0 = (unumber)VERA_PALETTE+(unumber)$20
Inlining cast memcpy_bank_to_vram::src#0 = (unumber)main::BANK_SPRITE-(unumber)2
Inlining cast memcpy_bank_to_vram::num#0 = (unumber)$20
Inlining cast memcpy_bank_to_vram::src#1 = (unumber)main::BANK_SPRITE+(unumber)$20-(unumber)2
Inlining cast memcpy_bank_to_vram::num#1 = (unumber)$40*$20
Inlining cast *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = (unumber)$64
Inlining cast *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = (unumber)$64
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (char *) 40736
Simplifying constant pointer cast (char *) 40737
Simplifying constant pointer cast (char *) 40738
Simplifying constant pointer cast (char *) 40739
Simplifying constant pointer cast (char *) 40740
Simplifying constant pointer cast (char *) 40741
Simplifying constant pointer cast (char *) 40745
Simplifying constant pointer cast (char *) 40746
Simplifying constant pointer cast (char *) 40747
Simplifying constant pointer cast (char *) 40749
Simplifying constant pointer cast (char *) 40750
Simplifying constant pointer cast (char *) 40751
Simplifying constant pointer cast (char *) 40756
Simplifying constant pointer cast (char *) 40757
Simplifying constant pointer cast (char *) 40758
Simplifying constant pointer cast (struct MOS6522_VIA *) 40800
Simplifying constant pointer cast (char *) 0
Simplifying constant pointer cast (char *) 214
Simplifying constant integer cast $20
Simplifying constant integer cast 3
Simplifying constant integer cast 5
Simplifying constant integer cast $1fff
Simplifying constant integer cast $a000
Simplifying constant integer cast memcpy_bank_to_vram::bank#0
Simplifying constant integer cast $c000
Simplifying constant integer cast memcpy_bank_to_vram::bank#1
Simplifying constant pointer cast (char *) 40960
Simplifying constant integer cast 3
Simplifying constant integer cast 5
Simplifying constant integer cast $1fff
Simplifying constant integer cast $a000
Simplifying constant integer cast load_to_bank::bank#0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 4
Simplifying constant integer cast 1
Simplifying constant integer cast 2
Simplifying constant integer cast 4
Simplifying constant integer cast 8
Simplifying constant integer cast $20
Simplifying constant integer cast 6
Simplifying constant integer cast $40
Simplifying constant integer cast $40
Simplifying constant integer cast 7
Simplifying constant integer cast $80
Simplifying constant integer cast $80
Simplifying constant integer cast 8
Simplifying constant integer cast $100
Simplifying constant integer cast $100
Simplifying constant integer cast 9
Simplifying constant integer cast $200
Simplifying constant integer cast $20
Simplifying constant integer cast $40
Simplifying constant integer cast $80
Simplifying constant integer cast $100
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast 1
Simplifying constant integer cast $10
Simplifying constant integer cast $100
Simplifying constant integer cast 4
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 7
Simplifying constant integer cast $28
Simplifying constant integer cast 7
Simplifying constant integer cast $1e
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $f800
Simplifying constant integer cast $80
Simplifying constant integer cast $40
Simplifying constant integer cast 8
Simplifying constant integer cast 8
Simplifying constant integer cast $10
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast $20
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 2
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 1
Simplifying constant integer cast 8
Simplifying constant integer cast VERA_PALETTE+(unumber)$20
Simplifying constant integer cast $20
Simplifying constant integer cast main::BANK_SPRITE-(unumber)2
Simplifying constant integer cast 2
Simplifying constant integer cast $20
Simplifying constant integer cast main::BANK_SPRITE+(unumber)$20-(unumber)2
Simplifying constant integer cast $20
Simplifying constant integer cast 2
Simplifying constant integer cast $20
Simplifying constant integer cast $64
Simplifying constant integer cast $64
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) 3
Finalized unsigned number type (char) 5
Finalized unsigned number type (unsigned int) $1fff
Finalized unsigned number type (unsigned int) $a000
Finalized unsigned number type (unsigned int) $c000
Finalized unsigned number type (char) 3
Finalized unsigned number type (char) 5
Finalized unsigned number type (unsigned int) $1fff
Finalized unsigned number type (unsigned int) $a000
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) 6
Finalized unsigned number type (char) $40
Finalized unsigned number type (char) $40
Finalized unsigned number type (char) 7
Finalized unsigned number type (char) $80
Finalized unsigned number type (char) $80
Finalized unsigned number type (char) 8
Finalized unsigned number type (unsigned int) $100
Finalized unsigned number type (unsigned int) $100
Finalized unsigned number type (char) 9
Finalized unsigned number type (unsigned int) $200
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) $40
Finalized unsigned number type (char) $80
Finalized unsigned number type (unsigned int) $100
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) $10
Finalized unsigned number type (unsigned int) $100
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 7
Finalized unsigned number type (char) $28
Finalized unsigned number type (char) 7
Finalized unsigned number type (char) $1e
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) $80
Finalized unsigned number type (char) $40
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 6
Finalized unsigned number type (char) 0
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 1
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) $64
Finalized unsigned number type (char) $64
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to unsigned int in memcpy_bank_to_vram::$10 = memcpy_bank_to_vram::$9 & $1fff
Inferred type updated to unsigned int in load_to_bank::$8 = load_to_bank::$7 & $1fff
Inferred type updated to char in screensize::$1 = $28 << screensize::hscale#0
Inferred type updated to char in screensize::$3 = $1e << screensize::vscale#0
Inferred type updated to char in conio_x16_init::$9 = conio_screen_height - 1
Inferred type updated to char in insertup::$3 = insertup::i#3 - 1
Inferred type updated to char in cscroll::$5 = conio_screen_height - 1
Inversing boolean not [45] memcpy_bank_to_vram::$13 = memcpy_bank_to_vram::addr#4 != $c000 from [44] memcpy_bank_to_vram::$12 = memcpy_bank_to_vram::addr#4 == $c000
Inversing boolean not [396] gotoxy::$1 = gotoxy::y#3 <= conio_screen_height from [395] gotoxy::$0 = gotoxy::y#3 > conio_screen_height
Inversing boolean not [400] gotoxy::$3 = gotoxy::x#3 < conio_screen_width from [399] gotoxy::$2 = gotoxy::x#3 >= conio_screen_width
Inversing boolean not [453] cputc::$12 = conio_cursor_x[conio_screen_layer] != conio_screen_width from [452] cputc::$11 = conio_cursor_x[conio_screen_layer] == conio_screen_width
Inversing boolean not [458] cputc::$9 = cputc::$16 != conio_width from [457] cputc::$8 = cputc::$16 == conio_width
Inversing boolean not [515] conio_x16_init::$8 = conio_x16_init::line#2 < conio_screen_height from [514] conio_x16_init::$7 = conio_x16_init::line#2 >= conio_screen_height
Inversing boolean not [580] cscroll::$1 = conio_cursor_y[conio_screen_layer] < conio_screen_height from [579] cscroll::$0 = conio_cursor_y[conio_screen_layer] >= conio_screen_height
Inversing boolean not [592] cscroll::$3 = conio_cursor_y[conio_screen_layer] < conio_height from [591] cscroll::$2 = conio_cursor_y[conio_screen_layer] >= conio_height
Successful SSA optimization Pass2UnaryNotSimplification
Alias candidate removed (volatile)load::return#1 = load::status load::return#4 load::return#2 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#1 screenlayer::vera_layer_get_width1_return#3 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#1 screenlayer::vera_layer_get_height1_return#3 screenlayer::$5 conio_height 
Alias memcpy_to_vram::s#2 = memcpy_to_vram::s#3 
Alias memcpy_to_vram::end#1 = memcpy_to_vram::end#2 
Alias memcpy_bank_to_vram::beg#0 = memcpy_bank_to_vram::src#2 memcpy_bank_to_vram::pos#0 
Alias memcpy_bank_to_vram::addr#4 = memcpy_bank_to_vram::addr#6 
Alias memcpy_bank_to_vram::pos#2 = memcpy_bank_to_vram::pos#4 memcpy_bank_to_vram::pos#5 
Alias memcpy_bank_to_vram::bank#2 = memcpy_bank_to_vram::bank#3 memcpy_bank_to_vram::bank#4 
Alias memcpy_bank_to_vram::end#1 = memcpy_bank_to_vram::end#3 memcpy_bank_to_vram::end#4 
Alias memcpy_in_vram::i#2 = memcpy_in_vram::i#3 
Alias memcpy_in_vram::num#1 = memcpy_in_vram::num#3 
Alias load_to_bank::device#1 = load_to_bank::device#2 
Alias load_to_bank::address#1 = load_to_bank::address#2 load_to_bank::address#3 
Alias load::return#0 = load::return#3 
Alias load_to_bank::return#0 = load_to_bank::$9 load_to_bank::return#3 load_to_bank::return#1 
Alias strlen::return#0 = strlen::return#3 
Alias strlen::len#2 = strlen::len#4 strlen::len#3 strlen::return#1 strlen::return#4 strlen::return#2 
Alias strlen::str#2 = strlen::str#3 
Alias vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#3 vera_layer_get_mapbase_bank::return#1 
Alias vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#3 vera_layer_get_mapbase_offset::return#1 
Alias vera_layer_set_textcolor::return#0 = vera_layer_set_textcolor::old#0 vera_layer_set_textcolor::return#3 vera_layer_set_textcolor::return#1 
Alias vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#3 vera_layer_get_textcolor::return#1 
Alias vera_layer_set_backcolor::return#0 = vera_layer_set_backcolor::old#0 vera_layer_set_backcolor::return#3 vera_layer_set_backcolor::return#1 
Alias vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#3 vera_layer_get_backcolor::return#1 
Alias vera_layer_get_color::layer#2 = vera_layer_get_color::layer#3 vera_layer_get_color::layer#4 
Alias vera_layer_get_color::return#1 = vera_layer_get_color::$2 
Alias vera_layer_get_color::return#2 = vera_layer_get_color::return#5 
Alias vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#3 vera_layer_get_rowshift::return#1 
Alias vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#3 vera_layer_get_rowskip::return#1 
Alias vera_layer_mode_tile::config#0 = vera_layer_mode_tile::config#13 vera_layer_mode_tile::config#26 vera_layer_mode_tile::config#14 vera_layer_mode_tile::config#27 vera_layer_mode_tile::config#15 vera_layer_mode_tile::config#28 vera_layer_mode_tile::config#16 
Alias vera_layer_mode_tile::mapwidth#10 = vera_layer_mode_tile::mapwidth#6 vera_layer_mode_tile::mapwidth#11 vera_layer_mode_tile::mapwidth#7 vera_layer_mode_tile::mapwidth#12 vera_layer_mode_tile::mapwidth#8 vera_layer_mode_tile::mapwidth#5 vera_layer_mode_tile::mapwidth#9 
Alias vera_layer_mode_tile::layer#21 = vera_layer_mode_tile::layer#22 vera_layer_mode_tile::layer#30 vera_layer_mode_tile::layer#31 vera_layer_mode_tile::layer#23 vera_layer_mode_tile::layer#32 vera_layer_mode_tile::layer#24 vera_layer_mode_tile::layer#25 
Alias vera_layer_mode_tile::mapheight#13 = vera_layer_mode_tile::mapheight#14 vera_layer_mode_tile::mapheight#18 vera_layer_mode_tile::mapheight#19 vera_layer_mode_tile::mapheight#15 vera_layer_mode_tile::mapheight#20 vera_layer_mode_tile::mapheight#16 vera_layer_mode_tile::mapheight#17 
Alias vera_layer_mode_tile::mapbase_address#20 = vera_layer_mode_tile::mapbase_address#21 vera_layer_mode_tile::mapbase_address#25 vera_layer_mode_tile::mapbase_address#26 vera_layer_mode_tile::mapbase_address#22 vera_layer_mode_tile::mapbase_address#27 vera_layer_mode_tile::mapbase_address#23 vera_layer_mode_tile::mapbase_address#24 
Alias vera_layer_mode_tile::tilebase_address#21 = vera_layer_mode_tile::tilebase_address#22 vera_layer_mode_tile::tilebase_address#26 vera_layer_mode_tile::tilebase_address#27 vera_layer_mode_tile::tilebase_address#23 vera_layer_mode_tile::tilebase_address#28 vera_layer_mode_tile::tilebase_address#24 vera_layer_mode_tile::tilebase_address#25 
Alias vera_layer_mode_tile::tilewidth#21 = vera_layer_mode_tile::tilewidth#22 vera_layer_mode_tile::tilewidth#26 vera_layer_mode_tile::tilewidth#27 vera_layer_mode_tile::tilewidth#23 vera_layer_mode_tile::tilewidth#28 vera_layer_mode_tile::tilewidth#24 vera_layer_mode_tile::tilewidth#25 
Alias vera_layer_mode_tile::tileheight#25 = vera_layer_mode_tile::tileheight#26 vera_layer_mode_tile::tileheight#30 vera_layer_mode_tile::tileheight#31 vera_layer_mode_tile::tileheight#27 vera_layer_mode_tile::tileheight#32 vera_layer_mode_tile::tileheight#28 vera_layer_mode_tile::tileheight#29 
Alias vera_layer_mode_tile::color_depth#1 = vera_layer_mode_tile::color_depth#2 vera_layer_mode_tile::color_depth#3 vera_layer_mode_tile::color_depth#4 
Alias vera_layer_mode_tile::config#17 = vera_layer_mode_tile::config#29 vera_layer_mode_tile::config#30 vera_layer_mode_tile::config#18 vera_layer_mode_tile::config#31 vera_layer_mode_tile::config#19 vera_layer_mode_tile::config#32 vera_layer_mode_tile::config#20 
Alias vera_layer_mode_tile::layer#1 = vera_layer_mode_tile::layer#9 vera_layer_mode_tile::layer#10 vera_layer_mode_tile::layer#2 vera_layer_mode_tile::layer#11 vera_layer_mode_tile::layer#3 vera_layer_mode_tile::layer#12 vera_layer_mode_tile::layer#4 
Alias vera_layer_mode_tile::mapheight#10 = vera_layer_mode_tile::mapheight#6 vera_layer_mode_tile::mapheight#11 vera_layer_mode_tile::mapheight#7 vera_layer_mode_tile::mapheight#12 vera_layer_mode_tile::mapheight#8 vera_layer_mode_tile::mapheight#5 vera_layer_mode_tile::mapheight#9 
Alias vera_layer_mode_tile::mapbase_address#12 = vera_layer_mode_tile::mapbase_address#13 vera_layer_mode_tile::mapbase_address#17 vera_layer_mode_tile::mapbase_address#18 vera_layer_mode_tile::mapbase_address#14 vera_layer_mode_tile::mapbase_address#19 vera_layer_mode_tile::mapbase_address#15 vera_layer_mode_tile::mapbase_address#16 
Alias vera_layer_mode_tile::tilebase_address#13 = vera_layer_mode_tile::tilebase_address#14 vera_layer_mode_tile::tilebase_address#18 vera_layer_mode_tile::tilebase_address#19 vera_layer_mode_tile::tilebase_address#15 vera_layer_mode_tile::tilebase_address#20 vera_layer_mode_tile::tilebase_address#16 vera_layer_mode_tile::tilebase_address#17 
Alias vera_layer_mode_tile::tilewidth#13 = vera_layer_mode_tile::tilewidth#14 vera_layer_mode_tile::tilewidth#18 vera_layer_mode_tile::tilewidth#19 vera_layer_mode_tile::tilewidth#15 vera_layer_mode_tile::tilewidth#20 vera_layer_mode_tile::tilewidth#16 vera_layer_mode_tile::tilewidth#17 
Alias vera_layer_mode_tile::tileheight#17 = vera_layer_mode_tile::tileheight#18 vera_layer_mode_tile::tileheight#22 vera_layer_mode_tile::tileheight#23 vera_layer_mode_tile::tileheight#19 vera_layer_mode_tile::tileheight#24 vera_layer_mode_tile::tileheight#20 vera_layer_mode_tile::tileheight#21 
Alias vera_layer_mode_tile::mapwidth#1 = vera_layer_mode_tile::mapwidth#2 vera_layer_mode_tile::mapwidth#3 vera_layer_mode_tile::mapwidth#4 
Alias vera_layer_mode_tile::config#21 = vera_layer_mode_tile::config#33 vera_layer_mode_tile::config#34 vera_layer_mode_tile::config#22 vera_layer_mode_tile::config#35 vera_layer_mode_tile::config#23 vera_layer_mode_tile::config#36 vera_layer_mode_tile::config#24 
Alias vera_layer_mode_tile::layer#13 = vera_layer_mode_tile::layer#14 vera_layer_mode_tile::layer#26 vera_layer_mode_tile::layer#27 vera_layer_mode_tile::layer#15 vera_layer_mode_tile::layer#28 vera_layer_mode_tile::layer#16 vera_layer_mode_tile::layer#17 
Alias vera_layer_mode_tile::mapbase_address#10 = vera_layer_mode_tile::mapbase_address#5 vera_layer_mode_tile::mapbase_address#9 vera_layer_mode_tile::mapbase_address#6 vera_layer_mode_tile::mapbase_address#11 vera_layer_mode_tile::mapbase_address#7 vera_layer_mode_tile::mapbase_address#4 vera_layer_mode_tile::mapbase_address#8 
Alias vera_layer_mode_tile::tilebase_address#10 = vera_layer_mode_tile::tilebase_address#6 vera_layer_mode_tile::tilebase_address#11 vera_layer_mode_tile::tilebase_address#7 vera_layer_mode_tile::tilebase_address#12 vera_layer_mode_tile::tilebase_address#8 vera_layer_mode_tile::tilebase_address#5 vera_layer_mode_tile::tilebase_address#9 
Alias vera_layer_mode_tile::tilewidth#10 = vera_layer_mode_tile::tilewidth#6 vera_layer_mode_tile::tilewidth#11 vera_layer_mode_tile::tilewidth#7 vera_layer_mode_tile::tilewidth#12 vera_layer_mode_tile::tilewidth#8 vera_layer_mode_tile::tilewidth#5 vera_layer_mode_tile::tilewidth#9 
Alias vera_layer_mode_tile::tileheight#10 = vera_layer_mode_tile::tileheight#14 vera_layer_mode_tile::tileheight#15 vera_layer_mode_tile::tileheight#11 vera_layer_mode_tile::tileheight#16 vera_layer_mode_tile::tileheight#12 vera_layer_mode_tile::tileheight#9 vera_layer_mode_tile::tileheight#13 
Alias vera_layer_mode_tile::mapheight#1 = vera_layer_mode_tile::mapheight#2 vera_layer_mode_tile::mapheight#3 vera_layer_mode_tile::mapheight#4 
Alias vera_layer_mode_tile::mapbase_address#2 = vera_layer_mode_tile::mapbase_address#3 
Alias vera_layer_mode_tile::layer#33 = vera_layer_mode_tile::layer#6 vera_layer_mode_tile::layer#5 vera_layer_mode_tile::layer#7 vera_layer_mode_tile::layer#34 vera_layer_mode_tile::layer#35 
Alias vera_layer_mode_tile::tilebase_address#2 = vera_layer_mode_tile::tilebase_address#3 vera_layer_mode_tile::tilebase_address#4 
Alias vera_layer_mode_tile::tilewidth#1 = vera_layer_mode_tile::tilewidth#3 vera_layer_mode_tile::tilewidth#4 vera_layer_mode_tile::tilewidth#2 
Alias vera_layer_mode_tile::tileheight#3 = vera_layer_mode_tile::tileheight#7 vera_layer_mode_tile::tileheight#8 vera_layer_mode_tile::tileheight#6 vera_layer_mode_tile::tileheight#4 vera_layer_mode_tile::tileheight#5 
Alias vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::$3 
Alias vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::$8 
Alias vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#6 vera_layer_mode_tile::tilebase#11 vera_layer_mode_tile::tilebase#7 
Alias vera_layer_mode_tile::tilebase#12 = vera_layer_mode_tile::tilebase#8 vera_layer_mode_tile::tilebase#13 vera_layer_mode_tile::tilebase#9 
Alias vera_layer_mode_tile::layer#18 = vera_layer_mode_tile::layer#19 vera_layer_mode_tile::layer#29 vera_layer_mode_tile::layer#20 
Alias vera_layer_mode_tile::tileheight#1 = vera_layer_mode_tile::tileheight#2 
Alias vera_layer_mode_text::color_mode#1 = vera_layer_mode_text::color_mode#3 vera_layer_mode_text::color_mode#2 
Alias vera_layer_mode_text::layer#1 = vera_layer_mode_text::layer#4 vera_layer_mode_text::layer#2 vera_layer_mode_text::layer#5 vera_layer_mode_text::layer#3 
Alias vera_layer_get_backcolor::return#2 = vera_layer_get_backcolor::return#4 
Alias clrscr::line_text#0 = clrscr::line_text#8 clrscr::line_text#6 
Alias CONIO_SCREEN_BANK#29 = CONIO_SCREEN_BANK#36 CONIO_SCREEN_BANK#43 
Alias vera_layer_get_textcolor::return#2 = vera_layer_get_textcolor::return#4 
Alias clrscr::line_text#2 = clrscr::line_text#4 clrscr::ch#0 
Alias CONIO_SCREEN_BANK#10 = CONIO_SCREEN_BANK#20 
Alias clrscr::color#3 = clrscr::color#4 
Alias clrscr::l#2 = clrscr::l#5 
Alias clrscr::color#1 = clrscr::color#2 clrscr::color#5 
Alias clrscr::c#2 = clrscr::c#3 
Alias clrscr::line_text#3 = clrscr::line_text#7 clrscr::line_text#5 
Alias clrscr::l#3 = clrscr::l#6 clrscr::l#4 
Alias CONIO_SCREEN_BANK#28 = CONIO_SCREEN_BANK#44 CONIO_SCREEN_BANK#37 
Alias gotoxy::x#5 = gotoxy::x#6 
Alias gotoxy::y#5 = gotoxy::y#6 
Alias vera_layer_get_color::return#3 = vera_layer_get_color::return#6 
Alias CONIO_SCREEN_TEXT#11 = CONIO_SCREEN_TEXT#22 CONIO_SCREEN_TEXT#56 CONIO_SCREEN_TEXT#63 CONIO_SCREEN_TEXT#61 CONIO_SCREEN_TEXT#60 CONIO_SCREEN_TEXT#57 CONIO_SCREEN_TEXT#58 
Alias cputc::c#0 = cputc::c#1 cputc::c#2 
Alias CONIO_SCREEN_BANK#11 = CONIO_SCREEN_BANK#21 CONIO_SCREEN_BANK#30 
Alias cputc::conio_addr#1 = cputc::conio_addr#2 
Alias cputc::color#0 = cputc::color#1 
Alias CONIO_SCREEN_BANK#22 = CONIO_SCREEN_BANK#31 CONIO_SCREEN_BANK#38 
Alias CONIO_SCREEN_TEXT#23 = CONIO_SCREEN_TEXT#31 CONIO_SCREEN_TEXT#38 
Alias conio_x16_init::line#0 = conio_x16_init::line#9 conio_x16_init::line#8 conio_x16_init::line#7 conio_x16_init::line#6 conio_x16_init::line#5 conio_x16_init::line#4 conio_x16_init::line#2 
Alias CONIO_SCREEN_BANK#0 = CONIO_SCREEN_BANK#12 CONIO_SCREEN_BANK#51 CONIO_SCREEN_BANK#48 CONIO_SCREEN_BANK#45 CONIO_SCREEN_BANK#40 CONIO_SCREEN_BANK#39 
Alias CONIO_SCREEN_TEXT#0 = CONIO_SCREEN_TEXT#12 CONIO_SCREEN_TEXT#52 CONIO_SCREEN_TEXT#48 CONIO_SCREEN_TEXT#44 CONIO_SCREEN_TEXT#40 CONIO_SCREEN_TEXT#39 
Alias CONIO_SCREEN_BANK#1 = CONIO_SCREEN_BANK#23 CONIO_SCREEN_BANK#32 CONIO_SCREEN_BANK#13 
Alias CONIO_SCREEN_TEXT#1 = CONIO_SCREEN_TEXT#24 CONIO_SCREEN_TEXT#32 CONIO_SCREEN_TEXT#13 
Alias conio_x16_init::line#1 = conio_x16_init::$9 
Alias vera_layer_get_color::return#4 = vera_layer_get_color::return#7 
Alias clearline::color#1 = clearline::color#2 
Alias clearline::c#2 = clearline::c#3 
Alias insertup::i#2 = insertup::i#3 insertup::i#4 
Alias CONIO_SCREEN_TEXT#15 = CONIO_SCREEN_TEXT#26 CONIO_SCREEN_TEXT#34 CONIO_SCREEN_TEXT#25 
Alias insertup::width#1 = insertup::width#2 insertup::width#3 
Alias insertup::cy#1 = insertup::cy#3 insertup::cy#2 
Alias CONIO_SCREEN_TEXT#41 = CONIO_SCREEN_TEXT#45 CONIO_SCREEN_TEXT#49 
Alias gotoxy::y#2 = cscroll::$5 
Alias vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#4 
Alias CONIO_SCREEN_BANK#14 = CONIO_SCREEN_BANK#2 screenlayer::$0 CONIO_SCREEN_BANK#56 CONIO_SCREEN_BANK#55 CONIO_SCREEN_BANK#54 CONIO_SCREEN_BANK#52 CONIO_SCREEN_BANK#49 CONIO_SCREEN_BANK#46 CONIO_SCREEN_BANK#41 CONIO_SCREEN_BANK#33 CONIO_SCREEN_BANK#24 CONIO_SCREEN_BANK#3 
Alias vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#4 
Alias screenlayer::vera_layer_get_width1_layer#0 = screenlayer::vera_layer_get_width1_layer#1 
Alias CONIO_SCREEN_TEXT#16 = CONIO_SCREEN_TEXT#62 CONIO_SCREEN_TEXT#2 CONIO_SCREEN_TEXT#59 CONIO_SCREEN_TEXT#54 CONIO_SCREEN_TEXT#50 CONIO_SCREEN_TEXT#46 CONIO_SCREEN_TEXT#42 CONIO_SCREEN_TEXT#35 CONIO_SCREEN_TEXT#27 CONIO_SCREEN_TEXT#3 
Alias vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#4 
Alias vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#4 
Alias screenlayer::vera_layer_get_height1_layer#0 = screenlayer::vera_layer_get_height1_layer#1 
Alias printf_str::c#1 = printf_str::$0 printf_str::c#2 
Alias printf_str::putc#1 = printf_str::putc#2 
Alias printf_str::s#0 = printf_str::s#4 
Alias CONIO_SCREEN_BANK#25 = CONIO_SCREEN_BANK#34 
Alias CONIO_SCREEN_TEXT#28 = CONIO_SCREEN_TEXT#36 
Alias CONIO_SCREEN_BANK#15 = CONIO_SCREEN_BANK#4 CONIO_SCREEN_BANK#53 CONIO_SCREEN_BANK#50 CONIO_SCREEN_BANK#47 CONIO_SCREEN_BANK#42 CONIO_SCREEN_BANK#35 CONIO_SCREEN_BANK#26 CONIO_SCREEN_BANK#16 CONIO_SCREEN_BANK#5 
Alias CONIO_SCREEN_TEXT#17 = CONIO_SCREEN_TEXT#4 CONIO_SCREEN_TEXT#55 CONIO_SCREEN_TEXT#51 CONIO_SCREEN_TEXT#47 CONIO_SCREEN_TEXT#43 CONIO_SCREEN_TEXT#37 CONIO_SCREEN_TEXT#29 CONIO_SCREEN_TEXT#18 CONIO_SCREEN_TEXT#5 
Alias memcpy_to_vram::num#0 = main::$7 
Alias CONIO_SCREEN_BANK#17 = CONIO_SCREEN_BANK#7 CONIO_SCREEN_BANK#27 
Alias CONIO_SCREEN_TEXT#19 = CONIO_SCREEN_TEXT#7 CONIO_SCREEN_TEXT#30 
Alias CONIO_SCREEN_BANK#18 = CONIO_SCREEN_BANK#8 CONIO_SCREEN_BANK#19 CONIO_SCREEN_BANK#9 
Alias CONIO_SCREEN_TEXT#20 = CONIO_SCREEN_TEXT#8 CONIO_SCREEN_TEXT#21 CONIO_SCREEN_TEXT#9 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)load::return#1 = load::status load::return#4 load::return#2 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#1 screenlayer::vera_layer_get_width1_return#3 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#1 screenlayer::vera_layer_get_height1_return#3 screenlayer::$5 conio_height 
Alias memcpy_bank_to_vram::pos#2 = memcpy_bank_to_vram::pos#3 
Alias memcpy_bank_to_vram::end#1 = memcpy_bank_to_vram::end#2 
Alias vera_layer_mode_tile::mapwidth#1 = vera_layer_mode_tile::mapwidth#10 
Alias vera_layer_mode_tile::layer#1 = vera_layer_mode_tile::layer#21 vera_layer_mode_tile::layer#13 vera_layer_mode_tile::layer#33 vera_layer_mode_tile::layer#18 vera_layer_mode_tile::layer#8 
Alias vera_layer_mode_tile::mapheight#1 = vera_layer_mode_tile::mapheight#10 vera_layer_mode_tile::mapheight#13 
Alias vera_layer_mode_tile::mapbase_address#10 = vera_layer_mode_tile::mapbase_address#12 vera_layer_mode_tile::mapbase_address#20 vera_layer_mode_tile::mapbase_address#2 
Alias vera_layer_mode_tile::tilebase_address#10 = vera_layer_mode_tile::tilebase_address#13 vera_layer_mode_tile::tilebase_address#21 vera_layer_mode_tile::tilebase_address#2 
Alias vera_layer_mode_tile::tilewidth#1 = vera_layer_mode_tile::tilewidth#13 vera_layer_mode_tile::tilewidth#21 vera_layer_mode_tile::tilewidth#10 
Alias vera_layer_mode_tile::tileheight#1 = vera_layer_mode_tile::tileheight#17 vera_layer_mode_tile::tileheight#25 vera_layer_mode_tile::tileheight#10 vera_layer_mode_tile::tileheight#3 
Alias gotoxy::x#3 = gotoxy::x#5 
Alias gotoxy::y#4 = gotoxy::y#5 
Alias CONIO_SCREEN_BANK#0 = CONIO_SCREEN_BANK#1 
Alias CONIO_SCREEN_TEXT#0 = CONIO_SCREEN_TEXT#1 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)load::return#1 = load::status load::return#4 load::return#2 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#1 screenlayer::vera_layer_get_width1_return#3 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#1 screenlayer::vera_layer_get_height1_return#3 screenlayer::$5 conio_height 
Identical Phi Values memcpy_to_vram::vdest#1 memcpy_to_vram::vdest#0
Identical Phi Values memcpy_to_vram::vbank#1 memcpy_to_vram::vbank#0
Identical Phi Values memcpy_to_vram::src#1 memcpy_to_vram::src#0
Identical Phi Values memcpy_to_vram::num#1 memcpy_to_vram::num#0
Identical Phi Values memcpy_to_vram::end#1 memcpy_to_vram::end#0
Identical Phi Values memcpy_bank_to_vram::end#1 memcpy_bank_to_vram::end#0
Identical Phi Values memcpy_in_vram::src#1 memcpy_in_vram::src#0
Identical Phi Values memcpy_in_vram::src_increment#1 memcpy_in_vram::src_increment#0
Identical Phi Values memcpy_in_vram::src_bank#1 memcpy_in_vram::src_bank#0
Identical Phi Values memcpy_in_vram::dest#1 memcpy_in_vram::dest#0
Identical Phi Values memcpy_in_vram::dest_increment#1 memcpy_in_vram::dest_increment#0
Identical Phi Values memcpy_in_vram::dest_bank#1 memcpy_in_vram::dest_bank#0
Identical Phi Values memcpy_in_vram::num#2 memcpy_in_vram::num#0
Identical Phi Values memcpy_in_vram::num#1 memcpy_in_vram::num#2
Identical Phi Values load_to_bank::filename#1 load_to_bank::filename#0
Identical Phi Values load_to_bank::device#1 load_to_bank::device#0
Identical Phi Values load_to_bank::address#1 load_to_bank::address#0
Identical Phi Values load::return#4 load::return#1
Identical Phi Values strlen::str#4 strlen::str#0
Identical Phi Values vera_layer_set_config::layer#1 vera_layer_set_config::layer#0
Identical Phi Values vera_layer_set_config::config#1 vera_layer_set_config::config#0
Identical Phi Values vera_layer_get_mapbase_bank::layer#1 vera_layer_get_mapbase_bank::layer#0
Identical Phi Values vera_layer_get_mapbase_offset::layer#1 vera_layer_get_mapbase_offset::layer#0
Identical Phi Values vera_layer_set_tilebase::layer#1 vera_layer_set_tilebase::layer#0
Identical Phi Values vera_layer_set_tilebase::tilebase#1 vera_layer_set_tilebase::tilebase#0
Identical Phi Values vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#0
Identical Phi Values vera_layer_set_textcolor::color#1 vera_layer_set_textcolor::color#0
Identical Phi Values vera_layer_get_textcolor::layer#1 vera_layer_get_textcolor::layer#0
Identical Phi Values vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#0
Identical Phi Values vera_layer_set_backcolor::color#1 vera_layer_set_backcolor::color#0
Identical Phi Values vera_layer_get_backcolor::layer#1 vera_layer_get_backcolor::layer#0
Identical Phi Values vera_layer_get_rowshift::layer#1 vera_layer_get_rowshift::layer#0
Identical Phi Values vera_layer_get_rowskip::layer#1 vera_layer_get_rowskip::layer#0
Identical Phi Values vera_layer_mode_tile::color_depth#1 vera_layer_mode_tile::color_depth#0
Identical Phi Values vera_layer_mode_tile::mapwidth#1 vera_layer_mode_tile::mapwidth#0
Identical Phi Values vera_layer_mode_tile::layer#1 vera_layer_mode_tile::layer#0
Identical Phi Values vera_layer_mode_tile::mapheight#1 vera_layer_mode_tile::mapheight#0
Identical Phi Values vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::mapbase_address#1
Identical Phi Values vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilebase_address#1
Identical Phi Values vera_layer_mode_tile::tilewidth#1 vera_layer_mode_tile::tilewidth#0
Identical Phi Values vera_layer_mode_tile::tileheight#1 vera_layer_mode_tile::tileheight#0
Identical Phi Values vera_layer_mode_text::layer#1 vera_layer_mode_text::layer#0
Identical Phi Values vera_layer_mode_text::mapbase_address#1 vera_layer_mode_text::mapbase_address#0
Identical Phi Values vera_layer_mode_text::tilebase_address#1 vera_layer_mode_text::tilebase_address#0
Identical Phi Values vera_layer_mode_text::mapwidth#1 vera_layer_mode_text::mapwidth#0
Identical Phi Values vera_layer_mode_text::mapheight#1 vera_layer_mode_text::mapheight#0
Identical Phi Values vera_layer_mode_text::tilewidth#1 vera_layer_mode_text::tilewidth#0
Identical Phi Values vera_layer_mode_text::tileheight#1 vera_layer_mode_text::tileheight#0
Identical Phi Values vera_layer_mode_text::color_mode#1 vera_layer_mode_text::color_mode#0
Identical Phi Values CONIO_SCREEN_TEXT#10 CONIO_SCREEN_TEXT#17
Identical Phi Values CONIO_SCREEN_BANK#29 CONIO_SCREEN_BANK#15
Identical Phi Values clrscr::color#1 clrscr::color#3
Identical Phi Values clrscr::line_text#3 clrscr::line_text#2
Identical Phi Values clrscr::l#3 clrscr::l#2
Identical Phi Values CONIO_SCREEN_BANK#28 CONIO_SCREEN_BANK#10
Identical Phi Values screensize::x#1 screensize::x#0
Identical Phi Values screensize::y#1 screensize::y#0
Identical Phi Values CONIO_SCREEN_TEXT#53 CONIO_SCREEN_TEXT#11
Identical Phi Values CONIO_SCREEN_BANK#22 CONIO_SCREEN_BANK#6
Identical Phi Values CONIO_SCREEN_TEXT#23 CONIO_SCREEN_TEXT#6
Identical Phi Values CONIO_SCREEN_BANK#0 CONIO_SCREEN_BANK#14
Identical Phi Values CONIO_SCREEN_TEXT#0 CONIO_SCREEN_TEXT#16
Identical Phi Values CONIO_SCREEN_TEXT#14 CONIO_SCREEN_TEXT#15
Identical Phi Values clearline::color#1 clearline::color#0
Identical Phi Values CONIO_SCREEN_TEXT#33 CONIO_SCREEN_TEXT#41
Identical Phi Values insertup::cy#1 insertup::cy#0
Identical Phi Values CONIO_SCREEN_TEXT#15 CONIO_SCREEN_TEXT#33
Identical Phi Values insertup::width#1 insertup::width#0
Identical Phi Values CONIO_SCREEN_TEXT#41 CONIO_SCREEN_TEXT#53
Identical Phi Values screenlayer::vera_layer_get_width1_return#2 screenlayer::vera_layer_get_width1_return#0
Identical Phi Values screenlayer::vera_layer_get_width1_return#3 screenlayer::vera_layer_get_width1_return#1
Identical Phi Values screenlayer::vera_layer_get_height1_return#2 screenlayer::vera_layer_get_height1_return#0
Identical Phi Values screenlayer::vera_layer_get_height1_return#3 screenlayer::vera_layer_get_height1_return#1
Identical Phi Values printf_str::s#3 printf_str::s#1
Identical Phi Values printf_str::putc#3 printf_str::putc#0
Identical Phi Values printf_str::putc#1 printf_str::putc#3
Identical Phi Values CONIO_SCREEN_BANK#25 CONIO_SCREEN_BANK#17
Identical Phi Values CONIO_SCREEN_TEXT#28 CONIO_SCREEN_TEXT#19
Identical Phi Values CONIO_SCREEN_BANK#15 CONIO_SCREEN_BANK#14
Identical Phi Values CONIO_SCREEN_TEXT#17 CONIO_SCREEN_TEXT#16
Identical Phi Values CONIO_SCREEN_BANK#17 CONIO_SCREEN_BANK#0
Identical Phi Values CONIO_SCREEN_TEXT#19 CONIO_SCREEN_TEXT#0
Identical Phi Values CONIO_SCREEN_BANK#18 CONIO_SCREEN_BANK#15
Identical Phi Values CONIO_SCREEN_TEXT#20 CONIO_SCREEN_TEXT#17
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values CONIO_SCREEN_BANK#10 CONIO_SCREEN_BANK#14
Identical Phi Values clrscr::color#3 clrscr::color#0
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition memcpy_to_vram::$4 [13] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2
Simple Condition memcpy_bank_to_vram::$11 [39] if(memcpy_bank_to_vram::pos#2<memcpy_bank_to_vram::end#0) goto memcpy_bank_to_vram::@2
Simple Condition memcpy_bank_to_vram::$13 [41] if(memcpy_bank_to_vram::addr#4!=$c000) goto memcpy_bank_to_vram::@3
Simple Condition memcpy_in_vram::$6 [68] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2
Simple Condition strlen::$0 [112] if(0!=*strlen::str#2) goto strlen::@2
Simple Condition vera_layer_get_color::$4 [163] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1
Simple Condition clrscr::$4 [290] if(clrscr::l#2<conio_height) goto clrscr::@2
Simple Condition clrscr::$8 [305] if(clrscr::c#2<conio_width) goto clrscr::@5
Simple Condition gotoxy::$1 [314] if(gotoxy::y#3<=conio_screen_height) goto gotoxy::@1
Simple Condition gotoxy::$3 [317] if(gotoxy::x#3<conio_screen_width) goto gotoxy::@2
Simple Condition cputc::$3 [347] if(cputc::c#0=='
') goto cputc::@1
Simple Condition cputc::$17 [361] if(0!=cputc::scroll_enable#0) goto cputc::@5
Simple Condition cputc::$12 [363] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return
Simple Condition cputc::$9 [366] if(cputc::$16!=conio_width) goto cputc::@return
Simple Condition conio_x16_init::$8 [412] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1
Simple Condition clearline::$4 [435] if(clearline::c#2<conio_screen_width) goto clearline::@2
Simple Condition insertup::$2 [447] if(insertup::i#2<=insertup::cy#0) goto insertup::@2
Simple Condition cscroll::$1 [465] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return
Simple Condition cscroll::$7 [467] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4
Simple Condition cscroll::$3 [473] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return
Simple Condition printf_str::$2 [527] if(0!=printf_str::c#1) goto printf_str::@2
Successful SSA optimization Pass2ConditionalJumpSimplification
Negating conditional jump and destination [184] if(vera_layer_mode_tile::color_depth#0!=8) goto vera_layer_mode_tile::@8
Negating conditional jump and destination [202] if(vera_layer_mode_tile::mapwidth#0!=$100) goto vera_layer_mode_tile::@16
Negating conditional jump and destination [214] if(vera_layer_mode_tile::mapheight#0!=$100) goto vera_layer_mode_tile::@24
Negating conditional jump and destination [244] if(vera_layer_mode_tile::tilewidth#0!=$10) goto vera_layer_mode_tile::@28
Negating conditional jump and destination [249] if(vera_layer_mode_tile::tileheight#0!=$10) goto vera_layer_mode_tile::@32
Successful SSA optimization Pass2ConditionalJumpSequenceImprovement
Constant right-side identified [555] memcpy_bank_to_vram::num#1 = (unumber)$40*$20
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memcpy_bank_to_vram::addr#3 = (char *) 40960
Constant memcpy_in_vram::i#0 = 0
Constant strlen::len#0 = 0
Constant vera_layer_mode_tile::config#0 = 0
Constant vera_layer_mode_tile::color_depth#0 = 1
Constant vera_layer_set_text_color_mode::color_mode#0 = VERA_LAYER_CONFIG_16C
Constant vera_layer_set_text_color_mode::color_mode#1 = VERA_LAYER_CONFIG_256C
Constant clrscr::l#0 = 0
Constant clrscr::c#0 = 0
Constant gotoxy::y#0 = 0
Constant gotoxy::x#0 = 0
Constant vera_layer_mode_text::layer#0 = 1
Constant vera_layer_mode_text::mapbase_address#0 = 0
Constant vera_layer_mode_text::tilebase_address#0 = $f800
Constant vera_layer_mode_text::mapwidth#0 = $80
Constant vera_layer_mode_text::mapheight#0 = $40
Constant vera_layer_mode_text::tilewidth#0 = 8
Constant vera_layer_mode_text::tileheight#0 = 8
Constant vera_layer_mode_text::color_mode#0 = $10
Constant screensize::x#0 = &conio_screen_width
Constant screensize::y#0 = &conio_screen_height
Constant screenlayer::layer#0 = 1
Constant vera_layer_set_textcolor::layer#0 = 1
Constant vera_layer_set_textcolor::color#0 = WHITE
Constant vera_layer_set_backcolor::layer#0 = 1
Constant vera_layer_set_backcolor::color#0 = BLUE
Constant vera_layer_set_mapbase::layer#1 = 0
Constant vera_layer_set_mapbase::mapbase#1 = $20
Constant vera_layer_set_mapbase::layer#2 = 1
Constant vera_layer_set_mapbase::mapbase#2 = 0
Constant gotoxy::x#1 = 0
Constant clearline::c#0 = 0
Constant insertup::i#0 = 1
Constant memcpy_in_vram::dest_bank#0 = 0
Constant memcpy_in_vram::dest_increment#0 = VERA_INC_1
Constant memcpy_in_vram::src_bank#0 = 0
Constant memcpy_in_vram::src_increment#0 = VERA_INC_1
Constant gotoxy::x#2 = 0
Constant printf_str::c#0 = 0
Constant vera_layer_set_text_color_mode::layer#2 = 1
Constant vera_layer_set_text_color_mode::color_mode#2 = VERA_LAYER_CONFIG_16C
Constant screenlayer::layer#1 = 1
Constant printf_str::putc#0 = &cputc
Constant printf_str::s#1 = main::s
Constant load_to_bank::device#0 = 8
Constant load_to_bank::filename#0 = main::filename
Constant load_to_bank::address#0 = main::BANK_SPRITE
Constant memcpy_bank_to_vram::vdest#0 = VERA_PALETTE+$20
Constant memcpy_bank_to_vram::src#0 = main::BANK_SPRITE-2
Constant memcpy_bank_to_vram::num#0 = $20
Constant memcpy_bank_to_vram::vdest#1 = main::VRAM_SPRITE
Constant memcpy_bank_to_vram::src#1 = main::BANK_SPRITE+$20-2
Constant memcpy_bank_to_vram::num#1 = (unumber)$40*$20
Constant memcpy_to_vram::num#0 = SIZEOF_STRUCT_VERA_SPRITE
Constant memcpy_to_vram::vbank#0 = byte2 VERA_SPRITE_ATTR
Constant memcpy_to_vram::vdest#0 = (void *)(char *)word0 VERA_SPRITE_ATTR
Constant memcpy_to_vram::src#0 = (void *)&main::SPRITE_ATTR
Constant CONIO_SCREEN_TEXT#6 = DEFAULT_SCREEN
Constant CONIO_SCREEN_BANK#6 = 0
Successful SSA optimization Pass2ConstantIdentification
Constant memcpy_to_vram::$5 = (char *)memcpy_to_vram::src#0
Constant memcpy_to_vram::s#0 = (char *)memcpy_to_vram::src#0
Constant vera_layer_mode_tile::layer#0 = vera_layer_mode_text::layer#0
Constant vera_layer_mode_tile::mapbase_address#1 = vera_layer_mode_text::mapbase_address#0
Constant vera_layer_mode_tile::tilebase_address#1 = vera_layer_mode_text::tilebase_address#0
Constant vera_layer_mode_tile::mapwidth#0 = vera_layer_mode_text::mapwidth#0
Constant vera_layer_mode_tile::mapheight#0 = vera_layer_mode_text::mapheight#0
Constant vera_layer_mode_tile::tilewidth#0 = vera_layer_mode_text::tilewidth#0
Constant vera_layer_mode_tile::tileheight#0 = vera_layer_mode_text::tileheight#0
Constant vera_layer_set_text_color_mode::layer#0 = vera_layer_mode_text::layer#0
Constant vera_layer_set_text_color_mode::layer#1 = vera_layer_mode_text::layer#0
Successful SSA optimization Pass2ConstantIdentification
Constant vera_layer_set_config::layer#0 = vera_layer_mode_tile::layer#0
Constant vera_layer_set_mapbase::layer#0 = vera_layer_mode_tile::layer#0
Constant vera_layer_set_tilebase::layer#0 = vera_layer_mode_tile::layer#0
Successful SSA optimization Pass2ConstantIdentification
Replacing constant pointer function [529] callexecute cputc 
Successful SSA optimization Pass2ConstantCallPointerIdentification
if() condition always true - replacing block destination [178] if(vera_layer_mode_tile::color_depth#0==1) goto vera_layer_mode_tile::@4
if() condition always false - eliminating [180] if(vera_layer_mode_tile::color_depth#0==2) goto vera_layer_mode_tile::@5
if() condition always false - eliminating [182] if(vera_layer_mode_tile::color_depth#0==4) goto vera_layer_mode_tile::@6
if() condition always true - replacing block destination [184] if(vera_layer_mode_tile::color_depth#0!=8) goto vera_layer_mode_tile::@8
if() condition always false - eliminating [187] if(vera_layer_mode_tile::mapwidth#0==$20) goto vera_layer_mode_tile::@12
if() condition always false - eliminating [192] if(vera_layer_mode_tile::mapwidth#0==$40) goto vera_layer_mode_tile::@13
if() condition always true - replacing block destination [197] if(vera_layer_mode_tile::mapwidth#0==$80) goto vera_layer_mode_tile::@14
if() condition always true - replacing block destination [202] if(vera_layer_mode_tile::mapwidth#0!=$100) goto vera_layer_mode_tile::@16
if() condition always false - eliminating [208] if(vera_layer_mode_tile::mapheight#0==$20) goto vera_layer_mode_tile::@20
if() condition always true - replacing block destination [210] if(vera_layer_mode_tile::mapheight#0==$40) goto vera_layer_mode_tile::@21
if() condition always false - eliminating [212] if(vera_layer_mode_tile::mapheight#0==$80) goto vera_layer_mode_tile::@22
if() condition always true - replacing block destination [214] if(vera_layer_mode_tile::mapheight#0!=$100) goto vera_layer_mode_tile::@24
if() condition always true - replacing block destination [242] if(vera_layer_mode_tile::tilewidth#0==8) goto vera_layer_mode_tile::@26
if() condition always true - replacing block destination [244] if(vera_layer_mode_tile::tilewidth#0!=$10) goto vera_layer_mode_tile::@28
if() condition always true - replacing block destination [247] if(vera_layer_mode_tile::tileheight#0==8) goto vera_layer_mode_tile::@30
if() condition always true - replacing block destination [249] if(vera_layer_mode_tile::tileheight#0!=$10) goto vera_layer_mode_tile::@32
if() condition always true - replacing block destination [266] if(vera_layer_mode_text::color_mode#0==$10) goto vera_layer_mode_text::@2
if() condition always false - eliminating [270] if(vera_layer_mode_text::color_mode#0==$100) goto vera_layer_mode_text::@3
Successful SSA optimization Pass2ConstantIfs
Simplifying expression containing zero memcpy_in_vram::src_increment#0 in [56] memcpy_in_vram::$2 = memcpy_in_vram::src_increment#0 | memcpy_in_vram::src_bank#0
Simplifying expression containing zero memcpy_in_vram::dest_increment#0 in [63] memcpy_in_vram::$5 = memcpy_in_vram::dest_increment#0 | memcpy_in_vram::dest_bank#0
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_1BPP in [179] vera_layer_mode_tile::config#1 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_1BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_2BPP in [181] vera_layer_mode_tile::config#2 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_2BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_4BPP in [183] vera_layer_mode_tile::config#3 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_4BPP
Simplifying expression containing zero VERA_LAYER_COLOR_DEPTH_8BPP in [185] vera_layer_mode_tile::config#4 = vera_layer_mode_tile::config#0 | VERA_LAYER_COLOR_DEPTH_8BPP
Simplifying expression containing zero vera_layer_mode_tile::config#17 in [188] vera_layer_mode_tile::config#5 = vera_layer_mode_tile::config#17 | VERA_LAYER_WIDTH_32
Simplifying expression containing zero vera_layer_mode_tile::config#21 in [209] vera_layer_mode_tile::config#9 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_32
Simplifying expression containing zero vera_layer_mode_tile::tilebase#1 in [243] vera_layer_mode_tile::tilebase#2 = vera_layer_mode_tile::tilebase#1 | VERA_TILEBASE_WIDTH_8
Simplifying expression containing zero vera_layer_mode_tile::tilebase#12 in [248] vera_layer_mode_tile::tilebase#4 = vera_layer_mode_tile::tilebase#12 | VERA_TILEBASE_HEIGHT_8
Simplifying expression containing zero word0 main::VRAM_SPRITE/$20 in [557] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_ADDR) = word0 main::VRAM_SPRITE/$20|VERA_SPRITE_4BPP
Simplifying expression containing zero (unsigned int *)&main::SPRITE_ATTR in [557] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_ADDR) = word0 main::VRAM_SPRITE/$20
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating variable vera_layer_mode_tile::config#2 from unused block vera_layer_mode_tile::@5
Eliminating variable vera_layer_mode_tile::config#3 from unused block vera_layer_mode_tile::@6
Eliminating variable vera_layer_mode_tile::config#4 from unused block vera_layer_mode_tile::@7
Eliminating variable vera_layer_mode_tile::config#5 from unused block vera_layer_mode_tile::@12
Eliminating variable vera_layer_mode_tile::$11 from unused block vera_layer_mode_tile::@12
Eliminating variable vera_layer_mode_tile::config#6 from unused block vera_layer_mode_tile::@13
Eliminating variable vera_layer_mode_tile::$12 from unused block vera_layer_mode_tile::@13
Eliminating variable vera_layer_mode_tile::config#8 from unused block vera_layer_mode_tile::@15
Eliminating variable vera_layer_mode_tile::$14 from unused block vera_layer_mode_tile::@15
Eliminating variable vera_layer_mode_tile::config#9 from unused block vera_layer_mode_tile::@20
Eliminating variable vera_layer_mode_tile::config#11 from unused block vera_layer_mode_tile::@22
Eliminating variable vera_layer_mode_tile::config#12 from unused block vera_layer_mode_tile::@23
Eliminating variable vera_layer_mode_tile::tilebase#3 from unused block vera_layer_mode_tile::@27
Eliminating variable vera_layer_mode_tile::tilebase#5 from unused block vera_layer_mode_tile::@31
Removing unused block vera_layer_mode_tile::@1
Removing PHI-reference to removed block (vera_layer_mode_tile::@5) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@5
Removing unused block vera_layer_mode_tile::@2
Removing PHI-reference to removed block (vera_layer_mode_tile::@6) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@6
Removing PHI-reference to removed block (vera_layer_mode_tile::@3) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@3
Removing PHI-reference to removed block (vera_layer_mode_tile::@7) in block vera_layer_mode_tile::@8
Removing unused block vera_layer_mode_tile::@7
Removing PHI-reference to removed block (vera_layer_mode_tile::@12) in block vera_layer_mode_tile::@16
Removing unused block vera_layer_mode_tile::@12
Removing PHI-reference to removed block (vera_layer_mode_tile::@13) in block vera_layer_mode_tile::@16
Removing unused block vera_layer_mode_tile::@13
Removing PHI-reference to removed block (vera_layer_mode_tile::@11) in block vera_layer_mode_tile::@16
Removing unused block vera_layer_mode_tile::@11
Removing PHI-reference to removed block (vera_layer_mode_tile::@15) in block vera_layer_mode_tile::@16
Removing unused block vera_layer_mode_tile::@15
Removing PHI-reference to removed block (vera_layer_mode_tile::@20) in block vera_layer_mode_tile::@24
Removing unused block vera_layer_mode_tile::@20
Removing unused block vera_layer_mode_tile::@18
Removing PHI-reference to removed block (vera_layer_mode_tile::@22) in block vera_layer_mode_tile::@24
Removing unused block vera_layer_mode_tile::@22
Removing PHI-reference to removed block (vera_layer_mode_tile::@19) in block vera_layer_mode_tile::@24
Removing unused block vera_layer_mode_tile::@19
Removing PHI-reference to removed block (vera_layer_mode_tile::@23) in block vera_layer_mode_tile::@24
Removing unused block vera_layer_mode_tile::@23
Removing PHI-reference to removed block (vera_layer_mode_tile::@25) in block vera_layer_mode_tile::@28
Removing unused block vera_layer_mode_tile::@25
Removing PHI-reference to removed block (vera_layer_mode_tile::@27) in block vera_layer_mode_tile::@28
Removing unused block vera_layer_mode_tile::@27
Removing PHI-reference to removed block (vera_layer_mode_tile::@29) in block vera_layer_mode_tile::@32
Removing unused block vera_layer_mode_tile::@29
Removing PHI-reference to removed block (vera_layer_mode_tile::@31) in block vera_layer_mode_tile::@32
Removing unused block vera_layer_mode_tile::@31
Removing unused block vera_layer_mode_text::@1
Removing PHI-reference to removed block (vera_layer_mode_text::@3) in block vera_layer_set_text_color_mode
Removing PHI-reference to removed block (vera_layer_mode_text::@3) in block vera_layer_set_text_color_mode
Removing unused block vera_layer_mode_text::@3
Removing unused block vera_layer_mode_text::@6
Successful SSA optimization Pass2EliminateUnusedBlocks
Eliminating unused variable vera_layer_set_textcolor::return#2 and assignment [287] vera_layer_set_textcolor::return#2 = vera_layer_set_textcolor::return#0
Eliminating unused variable vera_layer_set_backcolor::return#2 and assignment [289] vera_layer_set_backcolor::return#2 = vera_layer_set_backcolor::return#0
Eliminating unused variable load_to_bank::return#2 and assignment [395] load_to_bank::return#2 = load_to_bank::return#0
Eliminating unused constant VERA_LAYER_WIDTH_32
Eliminating unused constant VERA_LAYER_WIDTH_64
Eliminating unused constant VERA_LAYER_WIDTH_256
Eliminating unused constant VERA_LAYER_HEIGHT_32
Eliminating unused constant VERA_LAYER_HEIGHT_128
Eliminating unused constant VERA_LAYER_HEIGHT_256
Eliminating unused constant VERA_LAYER_COLOR_DEPTH_2BPP
Eliminating unused constant VERA_LAYER_COLOR_DEPTH_4BPP
Eliminating unused constant VERA_LAYER_COLOR_DEPTH_8BPP
Eliminating unused constant VERA_TILEBASE_WIDTH_8
Eliminating unused constant VERA_TILEBASE_WIDTH_16
Eliminating unused constant VERA_TILEBASE_HEIGHT_8
Eliminating unused constant VERA_TILEBASE_HEIGHT_16
Eliminating unused constant VERA_SPRITE_4BPP
Eliminating unused constant memcpy_in_vram::dest_bank#0
Eliminating unused constant memcpy_in_vram::src_bank#0
Eliminating unused constant vera_layer_set_text_color_mode::color_mode#1
Eliminating unused constant vera_layer_set_text_color_mode::layer#1
Eliminating unused constant vera_layer_mode_tile::config#0
Eliminating unused constant vera_layer_mode_tile::color_depth#0
Eliminating unused constant vera_layer_mode_tile::mapwidth#0
Eliminating unused constant vera_layer_mode_tile::mapheight#0
Eliminating unused constant vera_layer_mode_tile::tilewidth#0
Eliminating unused constant vera_layer_mode_tile::tileheight#0
Eliminating unused constant vera_layer_mode_text::color_mode#0
Eliminating unused constant printf_str::c#0
Eliminating unused constant printf_str::putc#0
Eliminating unused constant OFFSET_STRUCT_VERA_SPRITE_ADDR
Eliminating unused constant CONIO_SCREEN_TEXT#6
Eliminating unused constant CONIO_SCREEN_BANK#6
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable load_to_bank::return#0 and assignment [80] load_to_bank::return#0 = load::return#0
Eliminating unused variable vera_layer_set_textcolor::return#0 and assignment [125] vera_layer_set_textcolor::return#0 = vera_layer_textcolor[vera_layer_set_textcolor::layer#0]
Eliminating unused variable vera_layer_set_backcolor::return#0 and assignment [130] vera_layer_set_backcolor::return#0 = vera_layer_backcolor[vera_layer_set_backcolor::layer#0]
Eliminating unused constant DEFAULT_SCREEN
Eliminating unused constant vera_layer_mode_text::mapwidth#0
Eliminating unused constant vera_layer_mode_text::mapheight#0
Eliminating unused constant vera_layer_mode_text::tilewidth#0
Eliminating unused constant vera_layer_mode_text::tileheight#0
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable load::return#0 and assignment [79] load::return#0 = load::return#2
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable load::return#2 and assignment [92] load::return#2 = load::return#1
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused variable load::return#1 and assignment [91] load::return#1 = load::status
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias vera_layer_mode_tile::config#1 = vera_layer_mode_tile::config#17 
Alias vera_layer_mode_tile::config#21 = vera_layer_mode_tile::config#7 
Alias vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#25 
Alias vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#2 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#4 vera_layer_mode_tile::tilebase#10 
Successful SSA optimization Pass2AliasElimination
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Constant right-side identified [1] memcpy_to_vram::$0 = byte0  memcpy_to_vram::vdest#0
Constant right-side identified [3] memcpy_to_vram::$1 = byte1  memcpy_to_vram::vdest#0
Constant right-side identified [5] memcpy_to_vram::$2 = VERA_INC_1 | memcpy_to_vram::vbank#0
Constant right-side identified [7] memcpy_to_vram::end#0 = memcpy_to_vram::$5 + memcpy_to_vram::num#0
Constant right-side identified [66] load_to_bank::$2 = byte2  load_to_bank::address#0
Constant right-side identified [68] load_to_bank::$4 = byte1  load_to_bank::address#0
Constant right-side identified [71] load_to_bank::$7 = word0  load_to_bank::address#0
Constant right-side identified [97] vera_layer_set_config::$0 = vera_layer_set_config::layer#0 * SIZEOF_POINTER
Constant right-side identified [117] vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#0 * SIZEOF_POINTER
Constant right-side identified [147] vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#0 * SIZEOF_UNSIGNED_INT
Constant right-side identified [152] vera_layer_mode_tile::$1 = word0  vera_layer_mode_tile::mapbase_address#1
Constant right-side identified [153] vera_layer_mode_tile::$15 = vera_layer_mode_tile::layer#0 * SIZEOF_UNSIGNED_INT
Constant right-side identified [155] vera_layer_mode_tile::$2 = byte2  vera_layer_mode_tile::mapbase_address#1
Constant right-side identified [157] vera_layer_mode_tile::$16 = vera_layer_mode_tile::layer#0 * SIZEOF_UNSIGNED_LONG
Constant right-side identified [159] vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#1 >> 1
Constant right-side identified [163] vera_layer_mode_tile::$6 = word0  vera_layer_mode_tile::tilebase_address#1
Constant right-side identified [164] vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#0 * SIZEOF_UNSIGNED_INT
Constant right-side identified [166] vera_layer_mode_tile::$7 = byte2  vera_layer_mode_tile::tilebase_address#1
Constant right-side identified [168] vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#0 * SIZEOF_UNSIGNED_LONG
Constant right-side identified [170] vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#1 >> 1
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant memcpy_to_vram::$0 = byte0 memcpy_to_vram::vdest#0
Constant memcpy_to_vram::$1 = byte1 memcpy_to_vram::vdest#0
Constant memcpy_to_vram::$2 = VERA_INC_1|memcpy_to_vram::vbank#0
Constant memcpy_to_vram::end#0 = memcpy_to_vram::$5+memcpy_to_vram::num#0
Constant memcpy_in_vram::$2 = memcpy_in_vram::src_increment#0
Constant memcpy_in_vram::$5 = memcpy_in_vram::dest_increment#0
Constant load_to_bank::$2 = byte2 load_to_bank::address#0
Constant load_to_bank::$4 = byte1 load_to_bank::address#0
Constant load_to_bank::$7 = word0 load_to_bank::address#0
Constant vera_layer_set_config::$0 = vera_layer_set_config::layer#0*SIZEOF_POINTER
Constant vera_layer_set_tilebase::$0 = vera_layer_set_tilebase::layer#0*SIZEOF_POINTER
Constant vera_layer_mode_tile::config#1 = VERA_LAYER_COLOR_DEPTH_1BPP
Constant vera_layer_mode_tile::$13 = vera_layer_mode_tile::layer#0*SIZEOF_UNSIGNED_INT
Constant vera_layer_mode_tile::$1 = word0 vera_layer_mode_tile::mapbase_address#1
Constant vera_layer_mode_tile::$15 = vera_layer_mode_tile::layer#0*SIZEOF_UNSIGNED_INT
Constant vera_layer_mode_tile::$2 = byte2 vera_layer_mode_tile::mapbase_address#1
Constant vera_layer_mode_tile::$16 = vera_layer_mode_tile::layer#0*SIZEOF_UNSIGNED_LONG
Constant vera_layer_mode_tile::mapbase_address#0 = vera_layer_mode_tile::mapbase_address#1>>1
Constant vera_layer_mode_tile::$6 = word0 vera_layer_mode_tile::tilebase_address#1
Constant vera_layer_mode_tile::$17 = vera_layer_mode_tile::layer#0*SIZEOF_UNSIGNED_INT
Constant vera_layer_mode_tile::$7 = byte2 vera_layer_mode_tile::tilebase_address#1
Constant vera_layer_mode_tile::$18 = vera_layer_mode_tile::layer#0*SIZEOF_UNSIGNED_LONG
Constant vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_tile::tilebase_address#1>>1
Successful SSA optimization Pass2ConstantIdentification
Simplifying constant evaluating to zero byte0 memcpy_to_vram::vdest#0 in 
Simplifying constant evaluating to zero word0 vera_layer_mode_tile::mapbase_address#1 in 
Simplifying constant evaluating to zero byte2 vera_layer_mode_tile::mapbase_address#1 in 
Simplifying constant evaluating to zero vera_layer_mode_tile::mapbase_address#1>>1 in 
Simplifying constant evaluating to zero byte2 vera_layer_mode_tile::tilebase_address#1 in 
Successful SSA optimization PassNSimplifyConstantZero
Simplifying expression containing zero VERA_LAYER_WIDTH_128 in [145] vera_layer_mode_tile::config#21 = vera_layer_mode_tile::config#1 | VERA_LAYER_WIDTH_128
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused constant vera_layer_mode_tile::config#1
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant VERA_LAYER_COLOR_DEPTH_1BPP
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Constant right-side identified [60] load_to_bank::$3 = load_to_bank::$2 << 3
Constant right-side identified [61] load_to_bank::$5 = load_to_bank::$4 >> 5
Constant right-side identified [63] load_to_bank::$8 = load_to_bank::$7 & $1fff
Constant right-side identified [142] vera_layer_mode_tile::mapbase#0 = byte1  vera_layer_mode_tile::mapbase_address#0
Constant right-side identified [148] vera_layer_mode_tile::tilebase#0 = byte1  vera_layer_mode_tile::tilebase_address#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant load_to_bank::$3 = load_to_bank::$2<<3
Constant load_to_bank::$5 = load_to_bank::$4>>5
Constant load_to_bank::$8 = load_to_bank::$7&$1fff
Constant vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_128
Constant vera_layer_mode_tile::mapbase#0 = byte1 vera_layer_mode_tile::mapbase_address#0
Constant vera_layer_mode_tile::tilebase#0 = byte1 vera_layer_mode_tile::tilebase_address#0
Successful SSA optimization Pass2ConstantIdentification
Constant load_to_bank::addr#0 = (char *)load_to_bank::$8
Constant vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
Successful SSA optimization Pass2ConstantIdentification
Simplifying constant evaluating to zero load_to_bank::$7&$1fff in 
Simplifying constant evaluating to zero byte1 vera_layer_mode_tile::mapbase_address#0 in 
Successful SSA optimization PassNSimplifyConstantZero
Eliminating unused constant load_to_bank::$7
Eliminating unused constant vera_layer_mode_tile::mapbase_address#0
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Constant right-side identified [60] load_to_bank::bank#0 = load_to_bank::$3 | load_to_bank::$5
Constant right-side identified [61] load_to_bank::addr#1 = load_to_bank::addr#0 + $a000
Constant right-side identified [131] vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21 | VERA_LAYER_HEIGHT_64
Constant right-side identified [141] vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0 & VERA_LAYER_TILEBASE_MASK
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant load_to_bank::bank#0 = load_to_bank::$3|load_to_bank::$5
Constant load_to_bank::addr#1 = load_to_bank::addr#0+$a000
Constant vera_layer_mode_tile::config#10 = vera_layer_mode_tile::config#21|VERA_LAYER_HEIGHT_64
Constant vera_layer_mode_tile::tilebase#1 = vera_layer_mode_tile::tilebase#0&VERA_LAYER_TILEBASE_MASK
Successful SSA optimization Pass2ConstantIdentification
Constant vera_layer_set_config::config#0 = vera_layer_mode_tile::config#10
Constant vera_layer_set_tilebase::tilebase#0 = vera_layer_mode_tile::tilebase#1
Successful SSA optimization Pass2ConstantIdentification
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Inlining Noop Cast [26] memcpy_bank_to_vram::addr#0 = (char *)memcpy_bank_to_vram::$10 keeping memcpy_bank_to_vram::addr#0
Inlining Noop Cast [274] memcpy_in_vram::src#0 = (void *)insertup::$6 keeping memcpy_in_vram::src#0
Inlining Noop Cast [297] CONIO_SCREEN_TEXT#16 = (char *)screenlayer::$1 keeping CONIO_SCREEN_TEXT#16
Successful SSA optimization Pass2NopCastInlining
Rewriting multiplication to use shift [86] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 * SIZEOF_POINTER
Rewriting multiplication to use shift [92] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 * SIZEOF_POINTER
Rewriting multiplication to use shift [98] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [113] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 * SIZEOF_POINTER
Rewriting multiplication to use shift [124] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [164] clrscr::$9 = conio_screen_layer * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [183] gotoxy::$5 = conio_screen_layer * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [199] cputc::$15 = conio_screen_layer * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [223] cputln::$2 = conio_screen_layer * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [226] cputln::$3 = conio_screen_layer * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [247] clearline::$5 = conio_screen_layer * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [266] insertup::width#0 = conio_screen_width * 2
Rewriting multiplication to use shift [299] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 * SIZEOF_POINTER
Rewriting multiplication to use shift [303] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 * SIZEOF_UNSIGNED_INT
Rewriting multiplication to use shift [319] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 * SIZEOF_POINTER
Rewriting multiplication to use shift [323] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 * SIZEOF_UNSIGNED_INT
Successful SSA optimization Pass2MultiplyToShiftRewriting
Inlining constant with var siblings memcpy_to_vram::s#0
Inlining constant with var siblings memcpy_bank_to_vram::addr#3
Inlining constant with var siblings memcpy_bank_to_vram::vdest#0
Inlining constant with different constant siblings memcpy_bank_to_vram::src#0
Inlining constant with var siblings memcpy_bank_to_vram::num#0
Inlining constant with var siblings memcpy_bank_to_vram::vdest#1
Inlining constant with different constant siblings memcpy_bank_to_vram::src#1
Inlining constant with var siblings memcpy_bank_to_vram::num#1
Inlining constant with var siblings memcpy_in_vram::i#0
Inlining constant with different constant siblings load_to_bank::addr#0
Inlining constant with different constant siblings load_to_bank::addr#1
Inlining constant with var siblings strlen::len#0
Inlining constant with var siblings vera_layer_set_text_color_mode::color_mode#0
Inlining constant with var siblings vera_layer_set_text_color_mode::layer#2
Inlining constant with var siblings vera_layer_set_text_color_mode::color_mode#2
Inlining constant with var siblings vera_layer_set_text_color_mode::layer#0
Inlining constant with var siblings vera_layer_set_mapbase::layer#1
Inlining constant with var siblings vera_layer_set_mapbase::mapbase#1
Inlining constant with var siblings vera_layer_set_mapbase::layer#2
Inlining constant with var siblings vera_layer_set_mapbase::mapbase#2
Inlining constant with var siblings vera_layer_set_mapbase::layer#0
Inlining constant with var siblings vera_layer_set_mapbase::mapbase#0
Inlining constant with different constant siblings vera_layer_mode_tile::tilebase_address#1
Inlining constant with different constant siblings vera_layer_mode_tile::config#21
Inlining constant with different constant siblings vera_layer_mode_tile::tilebase#0
Inlining constant with different constant siblings vera_layer_mode_tile::tilebase#1
Inlining constant with var siblings clrscr::l#0
Inlining constant with var siblings clrscr::c#0
Inlining constant with var siblings gotoxy::y#0
Inlining constant with var siblings gotoxy::x#0
Inlining constant with var siblings gotoxy::x#1
Inlining constant with var siblings gotoxy::x#2
Inlining constant with var siblings clearline::c#0
Inlining constant with var siblings insertup::i#0
Inlining constant with var siblings screenlayer::layer#0
Inlining constant with var siblings screenlayer::layer#1
Inlining constant with var siblings printf_str::s#1
Constant inlined vera_layer_set_config::layer#0 = vera_layer_mode_text::layer#0
Constant inlined vera_layer_set_textcolor::color#0 = WHITE
Constant inlined clrscr::l#0 = 0
Constant inlined strlen::len#0 = 0
Constant inlined vera_layer_set_tilebase::layer#0 = vera_layer_mode_text::layer#0
Constant inlined memcpy_in_vram::dest_increment#0 = VERA_INC_1
Constant inlined vera_layer_set_tilebase::tilebase#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK
Constant inlined printf_str::s#1 = main::s
Constant inlined memcpy_to_vram::num#0 = SIZEOF_STRUCT_VERA_SPRITE
Constant inlined load_to_bank::$3 = byte2 main::BANK_SPRITE<<3
Constant inlined memcpy_bank_to_vram::addr#3 = (char *) 40960
Constant inlined memcpy_bank_to_vram::vdest#0 = VERA_PALETTE+$20
Constant inlined memcpy_bank_to_vram::vdest#1 = main::VRAM_SPRITE
Constant inlined memcpy_in_vram::$2 = VERA_INC_1
Constant inlined load_to_bank::$4 = byte1 main::BANK_SPRITE
Constant inlined memcpy_in_vram::$5 = VERA_INC_1
Constant inlined load_to_bank::$2 = byte2 main::BANK_SPRITE
Constant inlined vera_layer_mode_tile::layer#0 = vera_layer_mode_text::layer#0
Constant inlined load_to_bank::$8 = 0
Constant inlined load_to_bank::$5 = byte1 main::BANK_SPRITE>>5
Constant inlined memcpy_in_vram::src_increment#0 = VERA_INC_1
Constant inlined vera_layer_set_config::config#0 = vera_layer_mode_tile::config#10
Constant inlined insertup::i#0 = 1
Constant inlined vera_layer_set_mapbase::layer#0 = vera_layer_mode_text::layer#0
Constant inlined memcpy_to_vram::s#0 = (char *)memcpy_to_vram::src#0
Constant inlined vera_layer_set_mapbase::layer#2 = 1
Constant inlined vera_layer_set_mapbase::layer#1 = 0
Constant inlined gotoxy::x#0 = 0
Constant inlined gotoxy::x#1 = 0
Constant inlined gotoxy::x#2 = 0
Constant inlined memcpy_to_vram::$2 = VERA_INC_1|memcpy_to_vram::vbank#0
Constant inlined vera_layer_mode_tile::tilebase_address#1 = vera_layer_mode_text::tilebase_address#0
Constant inlined memcpy_to_vram::$0 = 0
Constant inlined memcpy_to_vram::$1 = byte1 memcpy_to_vram::vdest#0
Constant inlined vera_layer_set_text_color_mode::color_mode#0 = VERA_LAYER_CONFIG_16C
Constant inlined load_to_bank::filename#0 = main::filename
Constant inlined vera_layer_set_text_color_mode::color_mode#2 = VERA_LAYER_CONFIG_16C
Constant inlined memcpy_to_vram::$5 = (char *)memcpy_to_vram::src#0
Constant inlined vera_layer_mode_tile::$6 = word0 vera_layer_mode_text::tilebase_address#0
Constant inlined memcpy_bank_to_vram::src#1 = main::BANK_SPRITE+$20-2
Constant inlined memcpy_bank_to_vram::src#0 = main::BANK_SPRITE-2
Constant inlined vera_layer_mode_tile::$7 = 0
Constant inlined vera_layer_mode_tile::$2 = 0
Constant inlined vera_layer_mode_tile::$1 = 0
Constant inlined load_to_bank::address#0 = main::BANK_SPRITE
Constant inlined vera_layer_mode_tile::config#21 = VERA_LAYER_WIDTH_128
Constant inlined load_to_bank::addr#0 = (char *)0
Constant inlined vera_layer_set_mapbase::mapbase#0 = vera_layer_mode_tile::mapbase#0
Constant inlined vera_layer_set_mapbase::mapbase#1 = $20
Constant inlined load_to_bank::addr#1 = (char *)0+$a000
Constant inlined vera_layer_set_mapbase::mapbase#2 = 0
Constant inlined memcpy_in_vram::i#0 = 0
Constant inlined memcpy_bank_to_vram::num#0 = $20
Constant inlined memcpy_bank_to_vram::num#1 = (unsigned int)$40*$20
Constant inlined clearline::c#0 = 0
Constant inlined vera_layer_mode_tile::mapbase_address#1 = vera_layer_mode_text::mapbase_address#0
Constant inlined vera_layer_mode_tile::$18 = vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG
Constant inlined vera_layer_set_backcolor::color#0 = BLUE
Constant inlined screenlayer::layer#0 = 1
Constant inlined vera_layer_set_config::$0 = vera_layer_mode_text::layer#0*SIZEOF_POINTER
Constant inlined screenlayer::layer#1 = 1
Constant inlined vera_layer_mode_tile::$13 = vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT
Constant inlined vera_layer_mode_tile::tilebase#0 = byte1 vera_layer_mode_tile::tilebase_address#0
Constant inlined vera_layer_set_text_color_mode::layer#2 = 1
Constant inlined vera_layer_mode_tile::$15 = vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT
Constant inlined vera_layer_set_text_color_mode::layer#0 = vera_layer_mode_text::layer#0
Constant inlined vera_layer_mode_tile::$16 = vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG
Constant inlined gotoxy::y#0 = 0
Constant inlined vera_layer_mode_tile::$17 = vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT
Constant inlined vera_layer_mode_tile::tilebase#1 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK
Constant inlined clrscr::c#0 = 0
Constant inlined vera_layer_set_tilebase::$0 = vera_layer_mode_text::layer#0*SIZEOF_POINTER
Successful SSA optimization Pass2ConstantInlining
Consolidated array index constant in *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
Consolidated array index constant in *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
Consolidated array index constant in *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0)
Consolidated array index constant in *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0)
Consolidated array index constant in *(vera_layer_rowshift+vera_layer_mode_text::layer#0)
Consolidated array index constant in *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT)
Consolidated array index constant in *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT)
Consolidated array index constant in *(vera_mapbase_bank+vera_layer_mode_text::layer#0)
Consolidated array index constant in *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG)
Consolidated array index constant in *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT)
Consolidated array index constant in *(vera_tilebase_bank+vera_layer_mode_text::layer#0)
Consolidated array index constant in *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG)
Successful SSA optimization Pass2ConstantAdditionElimination
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Identical Phi Values vera_layer_set_text_color_mode::color_mode#3 VERA_LAYER_CONFIG_16C
Identical Phi Values gotoxy::x#3 0
Identical Phi Values screenlayer::layer#2 1
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values gotoxy::x#4 0
Successful SSA optimization Pass2IdenticalPhiElimination
Simplifying expression containing zero *vera_layer_set_text_color_mode::addr#0 in [88] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 | VERA_LAYER_CONFIG_16C
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused constant VERA_LAYER_CONFIG_16C
Successful SSA optimization PassNEliminateUnusedVars
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 4
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 2
Finalized unsigned number type (char) 8
Finalized unsigned number type (char) $a
Finalized unsigned number type (char) $10
Finalized unsigned number type (char) $b
Finalized unsigned number type (char) $b
Finalized unsigned number type (unsigned int) $140
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) $f0
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) $40
Finalized unsigned number type (char) $20
Finalized unsigned number type (char) 1
Successful SSA optimization PassNFinalizeNumberTypeConversions
Simplifying constant integer cast $140-$20
Successful SSA optimization PassNCastSimplification
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Alias candidate removed (volatile)screenlayer::vera_layer_get_width1_return#0 = screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 conio_width 
Alias candidate removed (volatile)conio_rowshift = screenlayer::$3 
Alias candidate removed (volatile)conio_rowskip = screenlayer::$4 
Alias candidate removed (volatile)screenlayer::vera_layer_get_height1_return#0 = screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 conio_height 
Added new block during phi lifting memcpy_bank_to_vram::@5(between memcpy_bank_to_vram::@2 and memcpy_bank_to_vram::@3)
Added new block during phi lifting gotoxy::@5(between gotoxy and gotoxy::@1)
Added new block during phi lifting conio_x16_init::@11(between conio_x16_init::@9 and conio_x16_init::@1)
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@2
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of __start::@3
Adding NOP phi() at start of conio_x16_init::@3
Adding NOP phi() at start of conio_x16_init::@4
Adding NOP phi() at start of conio_x16_init::@5
Adding NOP phi() at start of conio_x16_init::@6
Adding NOP phi() at start of conio_x16_init::@7
Adding NOP phi() at start of conio_x16_init::@8
Adding NOP phi() at start of conio_x16_init::@10
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cputc::@9
Adding NOP phi() at start of cputc::@6
Adding NOP phi() at start of cputc::@10
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of cputc::@8
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of vera_layer_mode_text
Adding NOP phi() at start of vera_layer_mode_text::@4
Adding NOP phi() at start of vera_layer_mode_text::@2
Adding NOP phi() at start of vera_layer_mode_text::@5
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of gotoxy::@4
Adding NOP phi() at start of cputln::@1
Adding NOP phi() at start of printf_str
Adding NOP phi() at start of load_to_bank::@3
Adding NOP phi() at start of vera_layer_mode_tile
Adding NOP phi() at start of vera_layer_mode_tile::@4
Adding NOP phi() at start of vera_layer_mode_tile::@8
Adding NOP phi() at start of vera_layer_mode_tile::@9
Adding NOP phi() at start of vera_layer_mode_tile::@10
Adding NOP phi() at start of vera_layer_mode_tile::@16
Adding NOP phi() at start of vera_layer_mode_tile::@17
Adding NOP phi() at start of vera_layer_mode_tile::@21
Adding NOP phi() at start of vera_layer_mode_tile::@24
Adding NOP phi() at start of vera_layer_mode_tile::@26
Adding NOP phi() at start of vera_layer_mode_tile::@28
Adding NOP phi() at start of vera_layer_mode_tile::@30
Adding NOP phi() at start of vera_layer_mode_tile::@32
Adding NOP phi() at start of vera_layer_mode_tile::@35
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of cscroll::@6
Adding NOP phi() at start of insertup::@3
Adding NOP phi() at start of insertup::@5
Adding NOP phi() at start of strlen::@3
CALL GRAPH
Calls in [__start] to conio_x16_init:8 main:11 
Calls in [conio_x16_init] to vera_layer_mode_text:15 screensize:17 screenlayer:19 vera_layer_set_textcolor:21 vera_layer_set_backcolor:23 vera_layer_set_mapbase:25 vera_layer_set_mapbase:27 gotoxy:34 
Calls in [cputc] to vera_layer_get_color:42 cputln:65 cputln:70 cputln:73 
Calls in [main] to vera_layer_set_text_color_mode:76 screenlayer:78 clrscr:80 printf_str:82 load_to_bank:84 memcpy_bank_to_vram:86 memcpy_bank_to_vram:88 memcpy_to_vram:92 
Calls in [vera_layer_mode_text] to vera_layer_mode_tile:97 vera_layer_set_text_color_mode:100 
Calls in [screenlayer] to vera_layer_get_mapbase_bank:112 vera_layer_get_mapbase_offset:116 vera_layer_get_rowshift:130 vera_layer_get_rowskip:135 
Calls in [cputln] to cscroll:192 
Calls in [clrscr] to vera_layer_get_backcolor:203 vera_layer_get_textcolor:208 
Calls in [printf_str] to cputc:244 
Calls in [load_to_bank] to setnam:248 setlfs:250 load:254 
Calls in [vera_layer_mode_tile] to vera_layer_set_config:316 vera_layer_set_mapbase:320 vera_layer_set_tilebase:328 
Calls in [cscroll] to insertup:347 gotoxy:350 
Calls in [setnam] to strlen:357 
Calls in [insertup] to clearline:379 memcpy_in_vram:388 
Calls in [clearline] to vera_layer_get_color:410 

Created 28 initial phi equivalence classes
Coalesced [30] conio_x16_init::line#10 = conio_x16_init::line#1
Coalesced [33] gotoxy::y#7 = gotoxy::y#1
Coalesced [37] conio_x16_init::line#11 = conio_x16_init::line#0
Coalesced [41] vera_layer_get_color::layer#6 = vera_layer_get_color::layer#0
Coalesced [172] gotoxy::y#9 = gotoxy::y#3
Coalesced [180] vera_layer_get_color::return#9 = vera_layer_get_color::return#1
Coalesced [184] vera_layer_get_color::return#8 = vera_layer_get_color::return#0
Coalesced [212] clrscr::line_text#10 = clrscr::line_text#0
Coalesced [231] clrscr::l#7 = clrscr::l#1
Coalesced [232] clrscr::line_text#9 = clrscr::line_text#1
Coalesced [236] clrscr::c#4 = clrscr::c#1
Coalesced [246] printf_str::s#5 = printf_str::s#0
Coalesced [276] memcpy_bank_to_vram::pos#6 = memcpy_bank_to_vram::beg#0
Coalesced [277] memcpy_bank_to_vram::addr#7 = memcpy_bank_to_vram::addr#1
Coalesced [278] memcpy_bank_to_vram::bank#6 = memcpy_bank_to_vram::bank#0
Coalesced [285] memcpy_bank_to_vram::bank#9 = memcpy_bank_to_vram::bank#1
Coalesced [290] memcpy_bank_to_vram::pos#7 = memcpy_bank_to_vram::pos#1
Coalesced [291] memcpy_bank_to_vram::addr#8 = memcpy_bank_to_vram::addr#2
Coalesced [292] memcpy_bank_to_vram::bank#7 = memcpy_bank_to_vram::bank#5
Coalesced [293] memcpy_bank_to_vram::addr#9 = memcpy_bank_to_vram::addr#4
Coalesced (already) [294] memcpy_bank_to_vram::bank#8 = memcpy_bank_to_vram::bank#2
Coalesced [304] memcpy_to_vram::s#4 = memcpy_to_vram::s#1
Coalesced [349] gotoxy::y#8 = gotoxy::y#2
Coalesced [390] insertup::i#5 = insertup::i#1
Coalesced [391] strlen::str#5 = strlen::str#0
Coalesced [398] strlen::str#6 = strlen::str#1
Coalesced [399] strlen::len#5 = strlen::len#1
Coalesced [409] vera_layer_get_color::layer#5 = vera_layer_get_color::layer#1
Coalesced [420] clearline::c#4 = clearline::c#1
Coalesced [438] memcpy_in_vram::i#4 = memcpy_in_vram::i#1
Coalesced down to 24 phi equivalence classes
Culled Empty Block label __start::@2
Culled Empty Block label __start::@3
Culled Empty Block label conio_x16_init::@10
Culled Empty Block label conio_x16_init::@11
Culled Empty Block label cputc::@9
Culled Empty Block label cputc::@10
Culled Empty Block label cputc::@8
Culled Empty Block label vera_layer_mode_text::@4
Culled Empty Block label vera_layer_mode_text::@5
Culled Empty Block label gotoxy::@3
Culled Empty Block label cputln::@1
Culled Empty Block label load_to_bank::@3
Culled Empty Block label memcpy_bank_to_vram::@5
Culled Empty Block label vera_layer_mode_tile::@4
Culled Empty Block label vera_layer_mode_tile::@8
Culled Empty Block label vera_layer_mode_tile::@9
Culled Empty Block label vera_layer_mode_tile::@10
Culled Empty Block label vera_layer_mode_tile::@16
Culled Empty Block label vera_layer_mode_tile::@17
Culled Empty Block label vera_layer_mode_tile::@21
Culled Empty Block label vera_layer_mode_tile::@26
Culled Empty Block label vera_layer_mode_tile::@28
Culled Empty Block label vera_layer_mode_tile::@30
Culled Empty Block label vera_layer_mode_tile::@35
Culled Empty Block label cscroll::@6
Culled Empty Block label insertup::@5
Culled Empty Block label strlen::@3
Renumbering block vera_layer_mode_tile::@14 to vera_layer_mode_tile::@1
Renumbering block vera_layer_mode_tile::@24 to vera_layer_mode_tile::@2
Renumbering block vera_layer_mode_tile::@32 to vera_layer_mode_tile::@3
Renumbering block vera_layer_mode_tile::@33 to vera_layer_mode_tile::@4
Renumbering block vera_layer_mode_tile::@34 to vera_layer_mode_tile::@5
Renumbering block vera_layer_mode_text::@2 to vera_layer_mode_text::@1
Renumbering block gotoxy::@4 to gotoxy::@3
Renumbering block gotoxy::@5 to gotoxy::@4
Adding NOP phi() at start of __start
Adding NOP phi() at start of __start::@1
Adding NOP phi() at start of conio_x16_init::@3
Adding NOP phi() at start of conio_x16_init::@4
Adding NOP phi() at start of conio_x16_init::@5
Adding NOP phi() at start of conio_x16_init::@6
Adding NOP phi() at start of conio_x16_init::@7
Adding NOP phi() at start of conio_x16_init::@8
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of cputc::@6
Adding NOP phi() at start of cputc::@1
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of vera_layer_mode_text
Adding NOP phi() at start of vera_layer_mode_text::@1
Adding NOP phi() at start of gotoxy::@4
Adding NOP phi() at start of gotoxy::@3
Adding NOP phi() at start of printf_str
Adding NOP phi() at start of vera_layer_mode_tile
Adding NOP phi() at start of vera_layer_mode_tile::@2
Adding NOP phi() at start of vera_layer_mode_tile::@3
Adding NOP phi() at start of cscroll::@3
Adding NOP phi() at start of cscroll::@4
Adding NOP phi() at start of insertup::@3
Adding NOP phi() at start of strlen

FINAL CONTROL FLOW GRAPH

void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_screen_width = 0
  [2] conio_screen_height = 0
  [3] conio_screen_layer = 1
  [4] conio_width = 0
  [5] conio_height = 0
  [6] conio_rowshift = 0
  [7] conio_rowskip = 0
  [8] call conio_x16_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [9] phi()
  [10] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [11] return 
  to:@return

void conio_x16_init()
conio_x16_init: scope:[conio_x16_init]  from __start::__init1
  [12] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE
  [13] call vera_layer_mode_text
  to:conio_x16_init::@3
conio_x16_init::@3: scope:[conio_x16_init]  from conio_x16_init
  [14] phi()
  [15] call screensize
  to:conio_x16_init::@4
conio_x16_init::@4: scope:[conio_x16_init]  from conio_x16_init::@3
  [16] phi()
  [17] call screenlayer
  to:conio_x16_init::@5
conio_x16_init::@5: scope:[conio_x16_init]  from conio_x16_init::@4
  [18] phi()
  [19] call vera_layer_set_textcolor
  to:conio_x16_init::@6
conio_x16_init::@6: scope:[conio_x16_init]  from conio_x16_init::@5
  [20] phi()
  [21] call vera_layer_set_backcolor
  to:conio_x16_init::@7
conio_x16_init::@7: scope:[conio_x16_init]  from conio_x16_init::@6
  [22] phi()
  [23] call vera_layer_set_mapbase
  to:conio_x16_init::@8
conio_x16_init::@8: scope:[conio_x16_init]  from conio_x16_init::@7
  [24] phi()
  [25] call vera_layer_set_mapbase
  to:conio_x16_init::@9
conio_x16_init::@9: scope:[conio_x16_init]  from conio_x16_init::@8
  [26] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1
  to:conio_x16_init::@2
conio_x16_init::@2: scope:[conio_x16_init]  from conio_x16_init::@9
  [27] conio_x16_init::line#1 = conio_screen_height - 1
  to:conio_x16_init::@1
conio_x16_init::@1: scope:[conio_x16_init]  from conio_x16_init::@2 conio_x16_init::@9
  [28] conio_x16_init::line#3 = phi( conio_x16_init::@2/conio_x16_init::line#1, conio_x16_init::@9/conio_x16_init::line#0 )
  [29] gotoxy::y#1 = conio_x16_init::line#3
  [30] call gotoxy
  to:conio_x16_init::@return
conio_x16_init::@return: scope:[conio_x16_init]  from conio_x16_init::@1
  [31] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from printf_str::@2
  [32] CONIO_SCREEN_BANK#11 = phi( )
  [32] CONIO_SCREEN_TEXT#11 = phi( )
  [33] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [34] vera_layer_get_color::layer#0 = conio_screen_layer
  [35] call vera_layer_get_color
  [36] vera_layer_get_color::return#3 = vera_layer_get_color::return#2
  to:cputc::@7
cputc::@7: scope:[cputc]  from cputc
  [37] cputc::color#0 = vera_layer_get_color::return#3
  [38] cputc::$15 = conio_screen_layer << 1
  [39] cputc::conio_addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[cputc::$15]
  [40] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1
  [41] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2
  [42] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc::@7
  [43] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [44] cputc::$4 = byte0  cputc::conio_addr#1
  [45] *VERA_ADDRX_L = cputc::$4
  [46] cputc::$5 = byte1  cputc::conio_addr#1
  [47] *VERA_ADDRX_M = cputc::$5
  [48] cputc::$6 = CONIO_SCREEN_BANK#11 | VERA_INC_1
  [49] *VERA_ADDRX_H = cputc::$6
  [50] *VERA_DATA0 = cputc::c#0
  [51] *VERA_DATA0 = cputc::color#0
  [52] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer]
  [53] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer]
  [54] if(0!=cputc::scroll_enable#0) goto cputc::@5
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [55] cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer]
  [56] if(cputc::$16!=conio_width) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  [57] phi()
  [58] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@3 cputc::@4 cputc::@5 cputc::@6
  [59] return 
  to:@return
cputc::@5: scope:[cputc]  from cputc::@2
  [60] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return
  to:cputc::@6
cputc::@6: scope:[cputc]  from cputc::@5
  [61] phi()
  [62] call cputln
  to:cputc::@return
cputc::@1: scope:[cputc]  from cputc::@7
  [63] phi()
  [64] call cputln
  to:cputc::@return

void main()
main: scope:[main]  from __start::@1
  [65] phi()
  [66] call vera_layer_set_text_color_mode
  to:main::@1
main::@1: scope:[main]  from main
  [67] phi()
  [68] call screenlayer
  to:main::@2
main::@2: scope:[main]  from main::@1
  [69] phi()
  [70] call clrscr
  to:main::@3
main::@3: scope:[main]  from main::@2
  [71] phi()
  [72] call printf_str
  to:main::@4
main::@4: scope:[main]  from main::@3
  [73] *(&main::SPRITE_ATTR) = memcpy(*(&$0), struct VERA_SPRITE, SIZEOF_STRUCT_VERA_SPRITE)
  [74] call load_to_bank
  to:main::@5
main::@5: scope:[main]  from main::@4
  [75] phi()
  [76] call memcpy_bank_to_vram
  to:main::@6
main::@6: scope:[main]  from main::@5
  [77] phi()
  [78] call memcpy_bank_to_vram
  to:main::@7
main::@7: scope:[main]  from main::@6
  [79] *((unsigned int *)&main::SPRITE_ATTR) = word0 main::VRAM_SPRITE/$20
  [80] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64
  [81] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64
  [82] call memcpy_to_vram
  to:main::@8
main::@8: scope:[main]  from main::@7
  [83] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL
  [84] *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE
  to:main::@return
main::@return: scope:[main]  from main::@8
  [85] return 
  to:@return

void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
vera_layer_mode_text: scope:[vera_layer_mode_text]  from conio_x16_init
  [86] phi()
  [87] call vera_layer_mode_tile
  to:vera_layer_mode_text::@1
vera_layer_mode_text::@1: scope:[vera_layer_mode_text]  from vera_layer_mode_text
  [88] phi()
  [89] call vera_layer_set_text_color_mode
  to:vera_layer_mode_text::@return
vera_layer_mode_text::@return: scope:[vera_layer_mode_text]  from vera_layer_mode_text::@1
  [90] return 
  to:@return

void screensize(char *x , char *y)
screensize: scope:[screensize]  from conio_x16_init::@3
  [91] screensize::hscale#0 = *VERA_DC_HSCALE >> 7
  [92] screensize::$1 = $28 << screensize::hscale#0
  [93] *screensize::x#0 = screensize::$1
  [94] screensize::vscale#0 = *VERA_DC_VSCALE >> 7
  [95] screensize::$3 = $1e << screensize::vscale#0
  [96] *screensize::y#0 = screensize::$3
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  [97] return 
  to:@return

void screenlayer(char layer)
screenlayer: scope:[screenlayer]  from conio_x16_init::@4 main::@1
  [98] conio_screen_layer = 1
  [99] vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer
  [100] call vera_layer_get_mapbase_bank
  [101] vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#0
  to:screenlayer::@3
screenlayer::@3: scope:[screenlayer]  from screenlayer
  [102] CONIO_SCREEN_BANK#14 = vera_layer_get_mapbase_bank::return#2
  [103] vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer
  [104] call vera_layer_get_mapbase_offset
  [105] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0
  to:screenlayer::@4
screenlayer::@4: scope:[screenlayer]  from screenlayer::@3
  [106] CONIO_SCREEN_TEXT#16 = vera_layer_get_mapbase_offset::return#2
  [107] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_width1
screenlayer::vera_layer_get_width1: scope:[screenlayer]  from screenlayer::@4
  [108] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1
  [109] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2]
  [110] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK
  [111] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4
  [112] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1
  [113] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3]
  to:screenlayer::vera_layer_get_width1_@return
screenlayer::vera_layer_get_width1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_width1
  [114] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
  to:screenlayer::@1
screenlayer::@1: scope:[screenlayer]  from screenlayer::vera_layer_get_width1_@return
  [115] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
  [116] conio_width = screenlayer::$2
  [117] vera_layer_get_rowshift::layer#0 = conio_screen_layer
  [118] call vera_layer_get_rowshift
  [119] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
  to:screenlayer::@5
screenlayer::@5: scope:[screenlayer]  from screenlayer::@1
  [120] screenlayer::$3 = vera_layer_get_rowshift::return#2
  [121] conio_rowshift = screenlayer::$3
  [122] vera_layer_get_rowskip::layer#0 = conio_screen_layer
  [123] call vera_layer_get_rowskip
  [124] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
  to:screenlayer::@6
screenlayer::@6: scope:[screenlayer]  from screenlayer::@5
  [125] screenlayer::$4 = vera_layer_get_rowskip::return#2
  [126] conio_rowskip = screenlayer::$4
  [127] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer
  to:screenlayer::vera_layer_get_height1
screenlayer::vera_layer_get_height1: scope:[screenlayer]  from screenlayer::@6
  [128] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1
  [129] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2]
  [130] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK
  [131] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6
  [132] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1
  [133] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3]
  to:screenlayer::vera_layer_get_height1_@return
screenlayer::vera_layer_get_height1_@return: scope:[screenlayer]  from screenlayer::vera_layer_get_height1
  [134] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
  to:screenlayer::@2
screenlayer::@2: scope:[screenlayer]  from screenlayer::vera_layer_get_height1_@return
  [135] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
  [136] conio_height = screenlayer::$5
  to:screenlayer::@return
screenlayer::@return: scope:[screenlayer]  from screenlayer::@2
  [137] return 
  to:@return

char vera_layer_set_textcolor(char layer , char color)
vera_layer_set_textcolor: scope:[vera_layer_set_textcolor]  from conio_x16_init::@5
  [138] *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0) = WHITE
  to:vera_layer_set_textcolor::@return
vera_layer_set_textcolor::@return: scope:[vera_layer_set_textcolor]  from vera_layer_set_textcolor
  [139] return 
  to:@return

char vera_layer_set_backcolor(char layer , char color)
vera_layer_set_backcolor: scope:[vera_layer_set_backcolor]  from conio_x16_init::@6
  [140] *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0) = BLUE
  to:vera_layer_set_backcolor::@return
vera_layer_set_backcolor::@return: scope:[vera_layer_set_backcolor]  from vera_layer_set_backcolor
  [141] return 
  to:@return

void vera_layer_set_mapbase(char layer , char mapbase)
vera_layer_set_mapbase: scope:[vera_layer_set_mapbase]  from conio_x16_init::@7 conio_x16_init::@8 vera_layer_mode_tile::@4
  [142] vera_layer_set_mapbase::mapbase#3 = phi( conio_x16_init::@7/$20, conio_x16_init::@8/0, vera_layer_mode_tile::@4/vera_layer_mode_tile::mapbase#0 )
  [142] vera_layer_set_mapbase::layer#3 = phi( conio_x16_init::@7/0, conio_x16_init::@8/1, vera_layer_mode_tile::@4/vera_layer_mode_text::layer#0 )
  [143] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1
  [144] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0]
  [145] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3
  to:vera_layer_set_mapbase::@return
vera_layer_set_mapbase::@return: scope:[vera_layer_set_mapbase]  from vera_layer_set_mapbase
  [146] return 
  to:@return

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_x16_init::@1 cscroll::@5
  [147] gotoxy::y#3 = phi( conio_x16_init::@1/gotoxy::y#1, cscroll::@5/gotoxy::y#2 )
  [148] if(gotoxy::y#3<=conio_screen_height) goto gotoxy::@4
  to:gotoxy::@1
gotoxy::@4: scope:[gotoxy]  from gotoxy
  [149] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@4
  [150] gotoxy::y#4 = phi( gotoxy::@4/gotoxy::y#3, gotoxy/0 )
  [151] if(0<conio_screen_width) goto gotoxy::@2
  to:gotoxy::@3
gotoxy::@3: scope:[gotoxy]  from gotoxy::@1
  [152] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@3
  [153] conio_cursor_x[conio_screen_layer] = 0
  [154] conio_cursor_y[conio_screen_layer] = gotoxy::y#4
  [155] gotoxy::$6 = (unsigned int)gotoxy::y#4
  [156] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift
  [157] gotoxy::$5 = conio_screen_layer << 1
  [158] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [159] return 
  to:@return

char vera_layer_get_color(char layer)
vera_layer_get_color: scope:[vera_layer_get_color]  from clearline cputc
  [160] vera_layer_get_color::layer#2 = phi( clearline/vera_layer_get_color::layer#1, cputc/vera_layer_get_color::layer#0 )
  [161] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1
  [162] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3]
  [163] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C
  [164] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1
  to:vera_layer_get_color::@2
vera_layer_get_color::@2: scope:[vera_layer_get_color]  from vera_layer_get_color
  [165] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4
  [166] vera_layer_get_color::return#1 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2]
  to:vera_layer_get_color::@return
vera_layer_get_color::@return: scope:[vera_layer_get_color]  from vera_layer_get_color::@1 vera_layer_get_color::@2
  [167] vera_layer_get_color::return#2 = phi( vera_layer_get_color::@1/vera_layer_get_color::return#0, vera_layer_get_color::@2/vera_layer_get_color::return#1 )
  [168] return 
  to:@return
vera_layer_get_color::@1: scope:[vera_layer_get_color]  from vera_layer_get_color
  [169] vera_layer_get_color::return#0 = vera_layer_textcolor[vera_layer_get_color::layer#2]
  to:vera_layer_get_color::@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@4 cputc::@6
  [170] cputln::$2 = conio_screen_layer << 1
  [171] cputln::temp#0 = conio_line_text[cputln::$2]
  [172] cputln::temp#1 = cputln::temp#0 + conio_rowskip
  [173] cputln::$3 = conio_screen_layer << 1
  [174] conio_line_text[cputln::$3] = cputln::temp#1
  [175] conio_cursor_x[conio_screen_layer] = 0
  [176] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer]
  [177] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [178] return 
  to:@return

void vera_layer_set_text_color_mode(char layer , char color_mode)
vera_layer_set_text_color_mode: scope:[vera_layer_set_text_color_mode]  from main vera_layer_mode_text::@1
  [179] vera_layer_set_text_color_mode::layer#3 = phi( main/1, vera_layer_mode_text::@1/vera_layer_mode_text::layer#0 )
  [180] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 << 1
  [181] vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0]
  [182] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C
  [183] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0
  to:vera_layer_set_text_color_mode::@return
vera_layer_set_text_color_mode::@return: scope:[vera_layer_set_text_color_mode]  from vera_layer_set_text_color_mode
  [184] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main::@2
  [185] clrscr::line_text#0 = (char *)CONIO_SCREEN_TEXT#16
  [186] vera_layer_get_backcolor::layer#0 = conio_screen_layer
  [187] call vera_layer_get_backcolor
  [188] vera_layer_get_backcolor::return#2 = vera_layer_get_backcolor::return#0
  to:clrscr::@7
clrscr::@7: scope:[clrscr]  from clrscr
  [189] clrscr::$0 = vera_layer_get_backcolor::return#2
  [190] clrscr::$1 = clrscr::$0 << 4
  [191] vera_layer_get_textcolor::layer#0 = conio_screen_layer
  [192] call vera_layer_get_textcolor
  [193] vera_layer_get_textcolor::return#2 = vera_layer_get_textcolor::return#0
  to:clrscr::@8
clrscr::@8: scope:[clrscr]  from clrscr::@7
  [194] clrscr::$2 = vera_layer_get_textcolor::return#2
  [195] clrscr::color#0 = clrscr::$1 | clrscr::$2
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr::@6 clrscr::@8
  [196] clrscr::line_text#2 = phi( clrscr::@6/clrscr::line_text#1, clrscr::@8/clrscr::line_text#0 )
  [196] clrscr::l#2 = phi( clrscr::@6/clrscr::l#1, clrscr::@8/0 )
  [197] if(clrscr::l#2<conio_height) goto clrscr::@2
  to:clrscr::@3
clrscr::@3: scope:[clrscr]  from clrscr::@1
  [198] conio_cursor_x[conio_screen_layer] = 0
  [199] conio_cursor_y[conio_screen_layer] = 0
  [200] clrscr::$9 = conio_screen_layer << 1
  [201] conio_line_text[clrscr::$9] = 0
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@3
  [202] return 
  to:@return
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [203] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [204] clrscr::$5 = byte0  clrscr::line_text#2
  [205] *VERA_ADDRX_L = clrscr::$5
  [206] clrscr::$6 = byte1  clrscr::line_text#2
  [207] *VERA_ADDRX_M = clrscr::$6
  [208] clrscr::$7 = CONIO_SCREEN_BANK#14 | VERA_INC_1
  [209] *VERA_ADDRX_H = clrscr::$7
  to:clrscr::@4
clrscr::@4: scope:[clrscr]  from clrscr::@2 clrscr::@5
  [210] clrscr::c#2 = phi( clrscr::@2/0, clrscr::@5/clrscr::c#1 )
  [211] if(clrscr::c#2<conio_width) goto clrscr::@5
  to:clrscr::@6
clrscr::@6: scope:[clrscr]  from clrscr::@4
  [212] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip
  [213] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@5: scope:[clrscr]  from clrscr::@4
  [214] *VERA_DATA0 = ' '
  [215] *VERA_DATA0 = clrscr::color#0
  [216] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@4

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from main::@3
  [217] phi()
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [218] printf_str::s#2 = phi( printf_str/main::s, printf_str::@2/printf_str::s#0 )
  [219] printf_str::c#1 = *printf_str::s#2
  [220] printf_str::s#0 = ++ printf_str::s#2
  [221] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [222] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [223] stackpush(char) = printf_str::c#1
  [224] callexecute cputc 
  sideeffect stackpullbytes(1)
  to:printf_str::@1

char load_to_bank(char device , char *filename , unsigned long address)
load_to_bank: scope:[load_to_bank]  from main::@4
  [226] setnam::filename = main::filename
  [227] call setnam
  to:load_to_bank::@1
load_to_bank::@1: scope:[load_to_bank]  from load_to_bank
  [228] setlfs::device = load_to_bank::device#0
  [229] call setlfs
  to:load_to_bank::@2
load_to_bank::@2: scope:[load_to_bank]  from load_to_bank::@1
  [230] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = load_to_bank::bank#0
  [231] load::address = (char *)0+$a000
  [232] load::verify = 0
  [233] call load
  to:load_to_bank::@return
load_to_bank::@return: scope:[load_to_bank]  from load_to_bank::@2
  [234] return 
  to:@return

void memcpy_bank_to_vram(unsigned long vdest , unsigned long src , unsigned long num)
memcpy_bank_to_vram: scope:[memcpy_bank_to_vram]  from main::@5 main::@6
  [235] memcpy_bank_to_vram::num#2 = phi( main::@5/$20, main::@6/(unsigned int)$40*$20 )
  [235] memcpy_bank_to_vram::beg#0 = phi( main::@5/main::BANK_SPRITE-2, main::@6/main::BANK_SPRITE+$20-2 )
  [235] memcpy_bank_to_vram::vdest#2 = phi( main::@5/VERA_PALETTE+$20, main::@6/main::VRAM_SPRITE )
  [236] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [237] memcpy_bank_to_vram::$0 = byte0  memcpy_bank_to_vram::vdest#2
  [238] *VERA_ADDRX_L = memcpy_bank_to_vram::$0
  [239] memcpy_bank_to_vram::$1 = byte1  memcpy_bank_to_vram::vdest#2
  [240] *VERA_ADDRX_M = memcpy_bank_to_vram::$1
  [241] memcpy_bank_to_vram::$2 = byte2  memcpy_bank_to_vram::vdest#2
  [242] *VERA_ADDRX_H = memcpy_bank_to_vram::$2
  [243] *VERA_ADDRX_H = *VERA_ADDRX_H | VERA_INC_1
  [244] memcpy_bank_to_vram::end#0 = memcpy_bank_to_vram::beg#0 + memcpy_bank_to_vram::num#2
  [245] memcpy_bank_to_vram::$4 = byte2  memcpy_bank_to_vram::beg#0
  [246] memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3
  [247] memcpy_bank_to_vram::$6 = byte1  memcpy_bank_to_vram::beg#0
  [248] memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5
  [249] memcpy_bank_to_vram::bank#0 = memcpy_bank_to_vram::$5 | memcpy_bank_to_vram::$7
  [250] memcpy_bank_to_vram::$9 = word0  memcpy_bank_to_vram::beg#0
  [251] memcpy_bank_to_vram::addr#0 = memcpy_bank_to_vram::$9 & $1fff
  [252] memcpy_bank_to_vram::addr#1 = (char *)memcpy_bank_to_vram::addr#0 + $a000
  [253] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = memcpy_bank_to_vram::bank#0
  to:memcpy_bank_to_vram::@1
memcpy_bank_to_vram::@1: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram memcpy_bank_to_vram::@3
  [254] memcpy_bank_to_vram::bank#2 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::bank#0, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::bank#5 )
  [254] memcpy_bank_to_vram::addr#4 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::addr#1, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::addr#2 )
  [254] memcpy_bank_to_vram::pos#2 = phi( memcpy_bank_to_vram/memcpy_bank_to_vram::beg#0, memcpy_bank_to_vram::@3/memcpy_bank_to_vram::pos#1 )
  [255] if(memcpy_bank_to_vram::pos#2<memcpy_bank_to_vram::end#0) goto memcpy_bank_to_vram::@2
  to:memcpy_bank_to_vram::@return
memcpy_bank_to_vram::@return: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@1
  [256] return 
  to:@return
memcpy_bank_to_vram::@2: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@1
  [257] if(memcpy_bank_to_vram::addr#4!=$c000) goto memcpy_bank_to_vram::@3
  to:memcpy_bank_to_vram::@4
memcpy_bank_to_vram::@4: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@2
  [258] memcpy_bank_to_vram::bank#1 = ++ memcpy_bank_to_vram::bank#2
  [259] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = memcpy_bank_to_vram::bank#1
  to:memcpy_bank_to_vram::@3
memcpy_bank_to_vram::@3: scope:[memcpy_bank_to_vram]  from memcpy_bank_to_vram::@2 memcpy_bank_to_vram::@4
  [260] memcpy_bank_to_vram::bank#5 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::bank#2, memcpy_bank_to_vram::@4/memcpy_bank_to_vram::bank#1 )
  [260] memcpy_bank_to_vram::addr#5 = phi( memcpy_bank_to_vram::@2/memcpy_bank_to_vram::addr#4, memcpy_bank_to_vram::@4/(char *) 40960 )
  [261] *VERA_DATA0 = *memcpy_bank_to_vram::addr#5
  [262] memcpy_bank_to_vram::addr#2 = ++ memcpy_bank_to_vram::addr#5
  [263] memcpy_bank_to_vram::pos#1 = ++ memcpy_bank_to_vram::pos#2
  to:memcpy_bank_to_vram::@1

void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
memcpy_to_vram: scope:[memcpy_to_vram]  from main::@7
  [264] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [265] *VERA_ADDRX_L = 0
  [266] *VERA_ADDRX_M = byte1 memcpy_to_vram::vdest#0
  [267] *VERA_ADDRX_H = VERA_INC_1|memcpy_to_vram::vbank#0
  to:memcpy_to_vram::@1
memcpy_to_vram::@1: scope:[memcpy_to_vram]  from memcpy_to_vram memcpy_to_vram::@2
  [268] memcpy_to_vram::s#2 = phi( memcpy_to_vram/(char *)memcpy_to_vram::src#0, memcpy_to_vram::@2/memcpy_to_vram::s#1 )
  [269] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2
  to:memcpy_to_vram::@return
memcpy_to_vram::@return: scope:[memcpy_to_vram]  from memcpy_to_vram::@1
  [270] return 
  to:@return
memcpy_to_vram::@2: scope:[memcpy_to_vram]  from memcpy_to_vram::@1
  [271] *VERA_DATA0 = *memcpy_to_vram::s#2
  [272] memcpy_to_vram::s#1 = ++ memcpy_to_vram::s#2
  to:memcpy_to_vram::@1

void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
vera_layer_mode_tile: scope:[vera_layer_mode_tile]  from vera_layer_mode_text
  [273] phi()
  to:vera_layer_mode_tile::@1
vera_layer_mode_tile::@1: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile
  [274] *(vera_layer_rowshift+vera_layer_mode_text::layer#0) = 8
  [275] *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = $100
  to:vera_layer_mode_tile::@2
vera_layer_mode_tile::@2: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@1
  [276] phi()
  [277] call vera_layer_set_config
  to:vera_layer_mode_tile::@4
vera_layer_mode_tile::@4: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@2
  [278] *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = 0
  [279] *(vera_mapbase_bank+vera_layer_mode_text::layer#0) = 0
  [280] *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::mapbase_address#0
  [281] call vera_layer_set_mapbase
  to:vera_layer_mode_tile::@5
vera_layer_mode_tile::@5: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@4
  [282] *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = word0 vera_layer_mode_text::tilebase_address#0
  [283] *(vera_tilebase_bank+vera_layer_mode_text::layer#0) = 0
  [284] *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::tilebase_address#0
  to:vera_layer_mode_tile::@3
vera_layer_mode_tile::@3: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@5
  [285] phi()
  [286] call vera_layer_set_tilebase
  to:vera_layer_mode_tile::@return
vera_layer_mode_tile::@return: scope:[vera_layer_mode_tile]  from vera_layer_mode_tile::@3
  [287] return 
  to:@return

char vera_layer_get_mapbase_bank(char layer)
vera_layer_get_mapbase_bank: scope:[vera_layer_get_mapbase_bank]  from screenlayer
  [288] vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#0]
  to:vera_layer_get_mapbase_bank::@return
vera_layer_get_mapbase_bank::@return: scope:[vera_layer_get_mapbase_bank]  from vera_layer_get_mapbase_bank
  [289] return 
  to:@return

unsigned int vera_layer_get_mapbase_offset(char layer)
vera_layer_get_mapbase_offset: scope:[vera_layer_get_mapbase_offset]  from screenlayer::@3
  [290] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1
  [291] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0]
  to:vera_layer_get_mapbase_offset::@return
vera_layer_get_mapbase_offset::@return: scope:[vera_layer_get_mapbase_offset]  from vera_layer_get_mapbase_offset
  [292] return 
  to:@return

char vera_layer_get_rowshift(char layer)
vera_layer_get_rowshift: scope:[vera_layer_get_rowshift]  from screenlayer::@1
  [293] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0]
  to:vera_layer_get_rowshift::@return
vera_layer_get_rowshift::@return: scope:[vera_layer_get_rowshift]  from vera_layer_get_rowshift
  [294] return 
  to:@return

unsigned int vera_layer_get_rowskip(char layer)
vera_layer_get_rowskip: scope:[vera_layer_get_rowskip]  from screenlayer::@5
  [295] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1
  [296] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0]
  to:vera_layer_get_rowskip::@return
vera_layer_get_rowskip::@return: scope:[vera_layer_get_rowskip]  from vera_layer_get_rowskip
  [297] return 
  to:@return

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [298] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [299] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [300] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [301] phi()
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@3 cscroll::@5
  [302] return 
  to:@return
cscroll::@4: scope:[cscroll]  from cscroll::@1
  [303] phi()
  [304] call insertup
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [305] gotoxy::y#2 = conio_screen_height - 1
  [306] call gotoxy
  to:cscroll::@return

char vera_layer_get_backcolor(char layer)
vera_layer_get_backcolor: scope:[vera_layer_get_backcolor]  from clrscr
  [307] vera_layer_get_backcolor::return#0 = vera_layer_backcolor[vera_layer_get_backcolor::layer#0]
  to:vera_layer_get_backcolor::@return
vera_layer_get_backcolor::@return: scope:[vera_layer_get_backcolor]  from vera_layer_get_backcolor
  [308] return 
  to:@return

char vera_layer_get_textcolor(char layer)
vera_layer_get_textcolor: scope:[vera_layer_get_textcolor]  from clrscr::@7
  [309] vera_layer_get_textcolor::return#0 = vera_layer_textcolor[vera_layer_get_textcolor::layer#0]
  to:vera_layer_get_textcolor::@return
vera_layer_get_textcolor::@return: scope:[vera_layer_get_textcolor]  from vera_layer_get_textcolor
  [310] return 
  to:@return

void setnam(char * volatile filename)
setnam: scope:[setnam]  from load_to_bank
  [311] strlen::str#0 = setnam::filename
  [312] call strlen
  [313] strlen::return#0 = strlen::len#2
  to:setnam::@1
setnam::@1: scope:[setnam]  from setnam
  [314] setnam::$0 = strlen::return#0
  [315] setnam::filename_len = (char)setnam::$0
  asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
  to:setnam::@return
setnam::@return: scope:[setnam]  from setnam::@1
  [317] return 
  to:@return

void setlfs(volatile char device)
setlfs: scope:[setlfs]  from load_to_bank::@1
  asm { ldxdevice lda#1 ldy#0 jsr$ffba  }
  to:setlfs::@return
setlfs::@return: scope:[setlfs]  from setlfs
  [319] return 
  to:@return

char load(char * volatile address , volatile char verify)
load: scope:[load]  from load_to_bank::@2
  [320] load::status = 0
  asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
  to:load::@return
load::@return: scope:[load]  from load
  [322] return 
  to:@return

void vera_layer_set_config(char layer , char config)
vera_layer_set_config: scope:[vera_layer_set_config]  from vera_layer_mode_tile::@2
  [323] vera_layer_set_config::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
  [324] *vera_layer_set_config::addr#0 = vera_layer_mode_tile::config#10
  to:vera_layer_set_config::@return
vera_layer_set_config::@return: scope:[vera_layer_set_config]  from vera_layer_set_config
  [325] return 
  to:@return

void vera_layer_set_tilebase(char layer , char tilebase)
vera_layer_set_tilebase: scope:[vera_layer_set_tilebase]  from vera_layer_mode_tile::@3
  [326] vera_layer_set_tilebase::addr#0 = *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER)
  [327] *vera_layer_set_tilebase::addr#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK
  to:vera_layer_set_tilebase::@return
vera_layer_set_tilebase::@return: scope:[vera_layer_set_tilebase]  from vera_layer_set_tilebase
  [328] return 
  to:@return

void insertup()
insertup: scope:[insertup]  from cscroll::@4
  [329] insertup::cy#0 = conio_cursor_y[conio_screen_layer]
  [330] insertup::width#0 = conio_screen_width << 1
  to:insertup::@1
insertup::@1: scope:[insertup]  from insertup insertup::@4
  [331] insertup::i#2 = phi( insertup/1, insertup::@4/insertup::i#1 )
  [332] if(insertup::i#2<=insertup::cy#0) goto insertup::@2
  to:insertup::@3
insertup::@3: scope:[insertup]  from insertup::@1
  [333] phi()
  [334] call clearline
  to:insertup::@return
insertup::@return: scope:[insertup]  from insertup::@3
  [335] return 
  to:@return
insertup::@2: scope:[insertup]  from insertup::@1
  [336] insertup::$3 = insertup::i#2 - 1
  [337] insertup::line#0 = insertup::$3 << conio_rowshift
  [338] insertup::start#0 = CONIO_SCREEN_TEXT#11 + insertup::line#0
  [339] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip
  [340] memcpy_in_vram::dest#0 = (void *)insertup::start#0
  [341] memcpy_in_vram::num#0 = insertup::width#0
  [342] call memcpy_in_vram
  to:insertup::@4
insertup::@4: scope:[insertup]  from insertup::@2
  [343] insertup::i#1 = ++ insertup::i#2
  to:insertup::@1

unsigned int strlen(char *str)
strlen: scope:[strlen]  from setnam
  [344] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [345] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [345] strlen::str#2 = phi( strlen/strlen::str#0, strlen::@2/strlen::str#1 )
  [346] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [347] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [348] strlen::len#1 = ++ strlen::len#2
  [349] strlen::str#1 = ++ strlen::str#2
  to:strlen::@1

void clearline()
clearline: scope:[clearline]  from insertup::@3
  [350] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [351] clearline::$5 = conio_screen_layer << 1
  [352] clearline::addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[clearline::$5]
  [353] clearline::$1 = byte0  clearline::addr#0
  [354] *VERA_ADDRX_L = clearline::$1
  [355] clearline::$2 = byte1  clearline::addr#0
  [356] *VERA_ADDRX_M = clearline::$2
  [357] *VERA_ADDRX_H = VERA_INC_1
  [358] vera_layer_get_color::layer#1 = conio_screen_layer
  [359] call vera_layer_get_color
  [360] vera_layer_get_color::return#4 = vera_layer_get_color::return#2
  to:clearline::@4
clearline::@4: scope:[clearline]  from clearline
  [361] clearline::color#0 = vera_layer_get_color::return#4
  to:clearline::@1
clearline::@1: scope:[clearline]  from clearline::@2 clearline::@4
  [362] clearline::c#2 = phi( clearline::@2/clearline::c#1, clearline::@4/0 )
  [363] if(clearline::c#2<conio_screen_width) goto clearline::@2
  to:clearline::@3
clearline::@3: scope:[clearline]  from clearline::@1
  [364] conio_cursor_x[conio_screen_layer] = 0
  to:clearline::@return
clearline::@return: scope:[clearline]  from clearline::@3
  [365] return 
  to:@return
clearline::@2: scope:[clearline]  from clearline::@1
  [366] *VERA_DATA0 = ' '
  [367] *VERA_DATA0 = clearline::color#0
  [368] clearline::c#1 = ++ clearline::c#2
  to:clearline::@1

void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
memcpy_in_vram: scope:[memcpy_in_vram]  from insertup::@2
  [369] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL
  [370] memcpy_in_vram::$0 = byte0  (void *)memcpy_in_vram::src#0
  [371] *VERA_ADDRX_L = memcpy_in_vram::$0
  [372] memcpy_in_vram::$1 = byte1  (void *)memcpy_in_vram::src#0
  [373] *VERA_ADDRX_M = memcpy_in_vram::$1
  [374] *VERA_ADDRX_H = VERA_INC_1
  [375] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL
  [376] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#0
  [377] *VERA_ADDRX_L = memcpy_in_vram::$3
  [378] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#0
  [379] *VERA_ADDRX_M = memcpy_in_vram::$4
  [380] *VERA_ADDRX_H = VERA_INC_1
  to:memcpy_in_vram::@1
memcpy_in_vram::@1: scope:[memcpy_in_vram]  from memcpy_in_vram memcpy_in_vram::@2
  [381] memcpy_in_vram::i#2 = phi( memcpy_in_vram/0, memcpy_in_vram::@2/memcpy_in_vram::i#1 )
  [382] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2
  to:memcpy_in_vram::@return
memcpy_in_vram::@return: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  [383] return 
  to:@return
memcpy_in_vram::@2: scope:[memcpy_in_vram]  from memcpy_in_vram::@1
  [384] *VERA_DATA1 = *VERA_DATA0
  [385] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2
  to:memcpy_in_vram::@1

null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc
null depth in calling loop Loop head: printf_str::@1 tails: printf_str::@2 blocks: printf_str::@2 printf_str::@1  in scope cputc

VARIABLE REGISTER WEIGHTS
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#11 // 625.0625
char CONIO_SCREEN_BANK#14 // 16.953846153846154
char *CONIO_SCREEN_TEXT
char *CONIO_SCREEN_TEXT#11 // 2.0370555611111112E7
unsigned int CONIO_SCREEN_TEXT#16 // 2.9705882352941178
void __start()
void clearline()
char clearline::$1 // 2.00000002E8
char clearline::$2 // 2.00000002E8
char clearline::$5 // 2.00000002E8
char *clearline::addr
char *clearline::addr#0 // 1.00000001E8
unsigned int clearline::c
unsigned int clearline::c#1 // 2.0000000002E10
unsigned int clearline::c#2 // 7.50000000075E9
char clearline::color
char clearline::color#0 // 1.6833333336666665E9
void clrscr()
char clrscr::$0 // 202.0
char clrscr::$1 // 40.4
char clrscr::$2 // 202.0
char clrscr::$5 // 2002.0
char clrscr::$6 // 2002.0
char clrscr::$7 // 2002.0
char clrscr::$9 // 202.0
char clrscr::c
char clrscr::c#1 // 20002.0
char clrscr::c#2 // 7500.75
char *clrscr::ch
char clrscr::color
char clrscr::color#0 // 594.2352941176471
char clrscr::l
char clrscr::l#1 // 2002.0
char clrscr::l#2 // 200.2
char *clrscr::line_text
char *clrscr::line_text#0 // 18.363636363636363
char *clrscr::line_text#1 // 1001.0
char *clrscr::line_text#2 // 293.2142857142857
__loadstore unsigned int conio_height // 10320.670103092783
__loadstore char conio_rowshift // 8347108.305785124
__loadstore unsigned int conio_rowskip // 8197550.049180328
__loadstore volatile char conio_screen_height // 112149.78504672897
__loadstore char conio_screen_layer // 1761903.7743589743
__loadstore volatile char conio_screen_width // 7.056345074647889E7
__loadstore unsigned int conio_width // 203.08080808080808
void conio_x16_init()
char conio_x16_init::line
char conio_x16_init::line#0 // 2.1999999999999997
char conio_x16_init::line#1 // 22.0
char conio_x16_init::line#3 // 33.0
__stackcall void cputc(char c)
char cputc::$15 // 20002.0
unsigned int cputc::$16 // 20002.0
char cputc::$2 // 20002.0
char cputc::$4 // 20002.0
char cputc::$5 // 20002.0
char cputc::$6 // 20002.0
char cputc::c
char cputc::c#0 // 1764.8823529411764
char cputc::color
char cputc::color#0 // 1428.7142857142858
char *cputc::conio_addr
char *cputc::conio_addr#0 // 10001.0
char *cputc::conio_addr#1 // 6000.6
char cputc::scroll_enable
char cputc::scroll_enable#0 // 20002.0
void cputln()
char cputln::$2 // 200002.0
char cputln::$3 // 200002.0
unsigned int cputln::temp
unsigned int cputln::temp#0 // 200002.0
unsigned int cputln::temp#1 // 100001.0
void cscroll()
void gotoxy(char x , char y)
char gotoxy::$5 // 2.0000002E7
unsigned int gotoxy::$6 // 2.0000002E7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // 1.0000001E7
char gotoxy::x
char gotoxy::y
char gotoxy::y#1 // 22.0
char gotoxy::y#2 // 2000002.0
char gotoxy::y#3 // 7000004.666666666
char gotoxy::y#4 // 4000000.4
void insertup()
char insertup::$3 // 2.000000002E9
char insertup::cy
char insertup::cy#0 // 8.416666683333334E7
char insertup::i
char insertup::i#1 // 2.000000002E9
char insertup::i#2 // 4.444444448888889E8
unsigned int insertup::line
unsigned int insertup::line#0 // 2.000000002E9
char *insertup::start
char *insertup::start#0 // 1.000000001E9
char insertup::width
char insertup::width#0 // 9.1818182E7
char load(char * volatile address , volatile char verify)
__loadstore char * volatile load::address // 33.666666666666664
char load::return
__loadstore volatile char load::status // 1001.0
__loadstore volatile char load::verify // 50.5
char load_to_bank(char device , char *filename , unsigned long address)
char *load_to_bank::addr
unsigned long load_to_bank::address
char load_to_bank::bank
char load_to_bank::device
char *load_to_bank::filename
char load_to_bank::return
void main()
__loadstore volatile struct VERA_SPRITE main::SPRITE_ATTR
void memcpy_bank_to_vram(unsigned long vdest , unsigned long src , unsigned long num)
char memcpy_bank_to_vram::$0 // 202.0
char memcpy_bank_to_vram::$1 // 202.0
char memcpy_bank_to_vram::$2 // 202.0
char memcpy_bank_to_vram::$4 // 202.0
char memcpy_bank_to_vram::$5 // 67.33333333333333
char memcpy_bank_to_vram::$6 // 202.0
char memcpy_bank_to_vram::$7 // 202.0
unsigned int memcpy_bank_to_vram::$9 // 202.0
char *memcpy_bank_to_vram::addr
unsigned int memcpy_bank_to_vram::addr#0 // 101.0
char *memcpy_bank_to_vram::addr#1 // 101.0
char *memcpy_bank_to_vram::addr#2 // 1001.0
char *memcpy_bank_to_vram::addr#4 // 1034.6666666666667
char *memcpy_bank_to_vram::addr#5 // 1501.5
char memcpy_bank_to_vram::bank
char memcpy_bank_to_vram::bank#0 // 60.599999999999994
char memcpy_bank_to_vram::bank#1 // 1501.5
char memcpy_bank_to_vram::bank#2 // 1034.6666666666667
char memcpy_bank_to_vram::bank#5 // 750.75
unsigned long memcpy_bank_to_vram::beg
unsigned long memcpy_bank_to_vram::beg#0 // 26.578947368421055
unsigned long memcpy_bank_to_vram::end
unsigned long memcpy_bank_to_vram::end#0 // 58.0
unsigned long memcpy_bank_to_vram::num
unsigned long memcpy_bank_to_vram::num#2 // 11.222222222222221
unsigned long memcpy_bank_to_vram::pos
unsigned long memcpy_bank_to_vram::pos#1 // 2002.0
unsigned long memcpy_bank_to_vram::pos#2 // 388.0
unsigned long memcpy_bank_to_vram::src
unsigned long memcpy_bank_to_vram::vdest
unsigned long memcpy_bank_to_vram::vdest#2 // 50.5
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0 // 2.0000000002E10
char memcpy_in_vram::$1 // 2.0000000002E10
char memcpy_in_vram::$3 // 2.0000000002E10
char memcpy_in_vram::$4 // 2.0000000002E10
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0 // 1.9090909093636363E9
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_increment
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#1 // 2.0000000000002E13
unsigned int memcpy_in_vram::i#2 // 1.0000000000001E13
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0 // 5.882941176471765E11
void *memcpy_in_vram::src
char *memcpy_in_vram::src#0 // 1.6666666683333334E8
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_increment
void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
char *memcpy_to_vram::end
unsigned int memcpy_to_vram::num
char *memcpy_to_vram::s
char *memcpy_to_vram::s#1 // 2002.0
char *memcpy_to_vram::s#2 // 1334.6666666666667
void *memcpy_to_vram::src
char memcpy_to_vram::vbank
void *memcpy_to_vram::vdest
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // 1001.0
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // 400.4
const char *printf_str::s#2 // 1501.5
void screenlayer(char layer)
unsigned int screenlayer::$2 // 202.0
char screenlayer::$3 // 202.0
unsigned int screenlayer::$4 // 202.0
unsigned int screenlayer::$5 // 202.0
char screenlayer::layer
char screenlayer::vera_layer_get_height1_$0 // 202.0
char screenlayer::vera_layer_get_height1_$1 // 202.0
char screenlayer::vera_layer_get_height1_$2 // 202.0
char screenlayer::vera_layer_get_height1_$3 // 202.0
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0 // 202.0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0 // 202.0
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0 // 202.0
unsigned int screenlayer::vera_layer_get_height1_return#1 // 202.0
char screenlayer::vera_layer_get_width1_$0 // 202.0
char screenlayer::vera_layer_get_width1_$1 // 202.0
char screenlayer::vera_layer_get_width1_$2 // 202.0
char screenlayer::vera_layer_get_width1_$3 // 202.0
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0 // 202.0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0 // 202.0
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0 // 202.0
unsigned int screenlayer::vera_layer_get_width1_return#1 // 202.0
void screensize(char *x , char *y)
char screensize::$1 // 202.0
char screensize::$3 // 202.0
char screensize::hscale
char screensize::hscale#0 // 202.0
char screensize::vscale
char screensize::vscale#0 // 202.0
char *screensize::x
char *screensize::y
void setlfs(volatile char device)
__loadstore volatile char setlfs::device // 101.0
void setnam(char * volatile filename)
unsigned int setnam::$0 // 1001.0
__loadstore char * volatile setnam::filename // 183.66666666666669
__loadstore volatile char setnam::filename_len // 1001.0
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // 100001.0
unsigned int strlen::len#2 // 50250.75
unsigned int strlen::return
unsigned int strlen::return#0 // 2002.0
char *strlen::str
char *strlen::str#0 // 5501.0
char *strlen::str#1 // 200002.0
char *strlen::str#2 // 103334.66666666666
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0 // 1102.0
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0 // 367.33333333333337
char vera_layer_get_backcolor::return#2 // 202.0
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0 // 2.000000002E9
char vera_layer_get_color::$1 // 2.000000002E9
char vera_layer_get_color::$3 // 2.000000002E9
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0 // 2.000000002E9
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0 // 20002.0
char vera_layer_get_color::layer#1 // 2.00000002E8
char vera_layer_get_color::layer#2 // 6.833350010000001E8
char vera_layer_get_color::return
char vera_layer_get_color::return#0 // 2.000000002E9
char vera_layer_get_color::return#1 // 2.000000002E9
char vera_layer_get_color::return#2 // 5.25002501E8
char vera_layer_get_color::return#3 // 20002.0
char vera_layer_get_color::return#4 // 2.00000002E8
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0 // 1102.0
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0 // 367.33333333333337
char vera_layer_get_mapbase_bank::return#2 // 202.0
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0 // 2002.0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0 // 1102.0
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0 // 367.33333333333337
unsigned int vera_layer_get_mapbase_offset::return#2 // 202.0
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0 // 1102.0
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0 // 367.33333333333337
char vera_layer_get_rowshift::return#2 // 202.0
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0 // 2002.0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0 // 1102.0
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0 // 367.33333333333337
unsigned int vera_layer_get_rowskip::return#2 // 202.0
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0 // 1102.0
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0 // 367.33333333333337
char vera_layer_get_textcolor::return#2 // 202.0
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
char vera_layer_mode_text::layer
unsigned long vera_layer_mode_text::mapbase_address
unsigned int vera_layer_mode_text::mapheight
unsigned int vera_layer_mode_text::mapwidth
unsigned long vera_layer_mode_text::tilebase_address
char vera_layer_mode_text::tileheight
char vera_layer_mode_text::tilewidth
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::config
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::mapbase
unsigned long vera_layer_mode_tile::mapbase_address
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapwidth
char vera_layer_mode_tile::tilebase
unsigned long vera_layer_mode_tile::tilebase_address
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tilewidth
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::layer
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::return
void vera_layer_set_config(char layer , char config)
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0 // 20002.0
char vera_layer_set_config::config
char vera_layer_set_config::layer
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0 // 20002.0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0 // 20002.0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#3 // 10001.0
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#3 // 3333.6666666666665
void vera_layer_set_text_color_mode(char layer , char color_mode)
char vera_layer_set_text_color_mode::$0 // 2002.0
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0 // 2502.5
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::layer
char vera_layer_set_text_color_mode::layer#3 // 1001.0
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::layer
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::return
void vera_layer_set_tilebase(char layer , char tilebase)
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0 // 20002.0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::tilebase

Initial phi equivalence classes
[ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
[ CONIO_SCREEN_TEXT#11 ]
[ CONIO_SCREEN_BANK#11 ]
[ vera_layer_set_mapbase::layer#3 ]
[ vera_layer_set_mapbase::mapbase#3 ]
[ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ]
[ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
[ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ]
[ vera_layer_set_text_color_mode::layer#3 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
[ clrscr::c#2 clrscr::c#1 ]
[ printf_str::s#2 printf_str::s#0 ]
[ memcpy_bank_to_vram::vdest#2 ]
[ memcpy_bank_to_vram::num#2 ]
[ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ]
[ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ]
[ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ]
[ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ]
[ insertup::i#2 insertup::i#1 ]
[ strlen::str#2 strlen::str#0 strlen::str#1 ]
[ strlen::len#2 strlen::len#1 ]
[ clearline::c#2 clearline::c#1 ]
[ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
Added variable conio_screen_width to live range equivalence class [ conio_screen_width ]
Added variable conio_screen_height to live range equivalence class [ conio_screen_height ]
Added variable conio_screen_layer to live range equivalence class [ conio_screen_layer ]
Added variable conio_width to live range equivalence class [ conio_width ]
Added variable conio_height to live range equivalence class [ conio_height ]
Added variable conio_rowshift to live range equivalence class [ conio_rowshift ]
Added variable conio_rowskip to live range equivalence class [ conio_rowskip ]
Added variable cputc::c#0 to live range equivalence class [ cputc::c#0 ]
Added variable vera_layer_get_color::return#3 to live range equivalence class [ vera_layer_get_color::return#3 ]
Added variable cputc::color#0 to live range equivalence class [ cputc::color#0 ]
Added variable cputc::$15 to live range equivalence class [ cputc::$15 ]
Added variable cputc::conio_addr#0 to live range equivalence class [ cputc::conio_addr#0 ]
Added variable cputc::$2 to live range equivalence class [ cputc::$2 ]
Added variable cputc::conio_addr#1 to live range equivalence class [ cputc::conio_addr#1 ]
Added variable cputc::$4 to live range equivalence class [ cputc::$4 ]
Added variable cputc::$5 to live range equivalence class [ cputc::$5 ]
Added variable cputc::$6 to live range equivalence class [ cputc::$6 ]
Added variable cputc::scroll_enable#0 to live range equivalence class [ cputc::scroll_enable#0 ]
Added variable cputc::$16 to live range equivalence class [ cputc::$16 ]
Added variable screensize::hscale#0 to live range equivalence class [ screensize::hscale#0 ]
Added variable screensize::$1 to live range equivalence class [ screensize::$1 ]
Added variable screensize::vscale#0 to live range equivalence class [ screensize::vscale#0 ]
Added variable screensize::$3 to live range equivalence class [ screensize::$3 ]
Added variable vera_layer_get_mapbase_bank::layer#0 to live range equivalence class [ vera_layer_get_mapbase_bank::layer#0 ]
Added variable vera_layer_get_mapbase_bank::return#2 to live range equivalence class [ vera_layer_get_mapbase_bank::return#2 ]
Added variable CONIO_SCREEN_BANK#14 to live range equivalence class [ CONIO_SCREEN_BANK#14 ]
Added variable vera_layer_get_mapbase_offset::layer#0 to live range equivalence class [ vera_layer_get_mapbase_offset::layer#0 ]
Added variable vera_layer_get_mapbase_offset::return#2 to live range equivalence class [ vera_layer_get_mapbase_offset::return#2 ]
Added variable CONIO_SCREEN_TEXT#16 to live range equivalence class [ CONIO_SCREEN_TEXT#16 ]
Added variable screenlayer::vera_layer_get_width1_layer#0 to live range equivalence class [ screenlayer::vera_layer_get_width1_layer#0 ]
Added variable screenlayer::vera_layer_get_width1_$2 to live range equivalence class [ screenlayer::vera_layer_get_width1_$2 ]
Added variable screenlayer::vera_layer_get_width1_config#0 to live range equivalence class [ screenlayer::vera_layer_get_width1_config#0 ]
Added variable screenlayer::vera_layer_get_width1_$0 to live range equivalence class [ screenlayer::vera_layer_get_width1_$0 ]
Added variable screenlayer::vera_layer_get_width1_$1 to live range equivalence class [ screenlayer::vera_layer_get_width1_$1 ]
Added variable screenlayer::vera_layer_get_width1_$3 to live range equivalence class [ screenlayer::vera_layer_get_width1_$3 ]
Added variable screenlayer::vera_layer_get_width1_return#0 to live range equivalence class [ screenlayer::vera_layer_get_width1_return#0 ]
Added variable screenlayer::vera_layer_get_width1_return#1 to live range equivalence class [ screenlayer::vera_layer_get_width1_return#1 ]
Added variable screenlayer::$2 to live range equivalence class [ screenlayer::$2 ]
Added variable vera_layer_get_rowshift::layer#0 to live range equivalence class [ vera_layer_get_rowshift::layer#0 ]
Added variable vera_layer_get_rowshift::return#2 to live range equivalence class [ vera_layer_get_rowshift::return#2 ]
Added variable screenlayer::$3 to live range equivalence class [ screenlayer::$3 ]
Added variable vera_layer_get_rowskip::layer#0 to live range equivalence class [ vera_layer_get_rowskip::layer#0 ]
Added variable vera_layer_get_rowskip::return#2 to live range equivalence class [ vera_layer_get_rowskip::return#2 ]
Added variable screenlayer::$4 to live range equivalence class [ screenlayer::$4 ]
Added variable screenlayer::vera_layer_get_height1_layer#0 to live range equivalence class [ screenlayer::vera_layer_get_height1_layer#0 ]
Added variable screenlayer::vera_layer_get_height1_$2 to live range equivalence class [ screenlayer::vera_layer_get_height1_$2 ]
Added variable screenlayer::vera_layer_get_height1_config#0 to live range equivalence class [ screenlayer::vera_layer_get_height1_config#0 ]
Added variable screenlayer::vera_layer_get_height1_$0 to live range equivalence class [ screenlayer::vera_layer_get_height1_$0 ]
Added variable screenlayer::vera_layer_get_height1_$1 to live range equivalence class [ screenlayer::vera_layer_get_height1_$1 ]
Added variable screenlayer::vera_layer_get_height1_$3 to live range equivalence class [ screenlayer::vera_layer_get_height1_$3 ]
Added variable screenlayer::vera_layer_get_height1_return#0 to live range equivalence class [ screenlayer::vera_layer_get_height1_return#0 ]
Added variable screenlayer::vera_layer_get_height1_return#1 to live range equivalence class [ screenlayer::vera_layer_get_height1_return#1 ]
Added variable screenlayer::$5 to live range equivalence class [ screenlayer::$5 ]
Added variable vera_layer_set_mapbase::$0 to live range equivalence class [ vera_layer_set_mapbase::$0 ]
Added variable vera_layer_set_mapbase::addr#0 to live range equivalence class [ vera_layer_set_mapbase::addr#0 ]
Added variable gotoxy::$6 to live range equivalence class [ gotoxy::$6 ]
Added variable gotoxy::line_offset#0 to live range equivalence class [ gotoxy::line_offset#0 ]
Added variable gotoxy::$5 to live range equivalence class [ gotoxy::$5 ]
Added variable vera_layer_get_color::$3 to live range equivalence class [ vera_layer_get_color::$3 ]
Added variable vera_layer_get_color::addr#0 to live range equivalence class [ vera_layer_get_color::addr#0 ]
Added variable vera_layer_get_color::$0 to live range equivalence class [ vera_layer_get_color::$0 ]
Added variable vera_layer_get_color::$1 to live range equivalence class [ vera_layer_get_color::$1 ]
Added variable cputln::$2 to live range equivalence class [ cputln::$2 ]
Added variable cputln::temp#0 to live range equivalence class [ cputln::temp#0 ]
Added variable cputln::temp#1 to live range equivalence class [ cputln::temp#1 ]
Added variable cputln::$3 to live range equivalence class [ cputln::$3 ]
Added variable vera_layer_set_text_color_mode::$0 to live range equivalence class [ vera_layer_set_text_color_mode::$0 ]
Added variable vera_layer_set_text_color_mode::addr#0 to live range equivalence class [ vera_layer_set_text_color_mode::addr#0 ]
Added variable vera_layer_get_backcolor::layer#0 to live range equivalence class [ vera_layer_get_backcolor::layer#0 ]
Added variable vera_layer_get_backcolor::return#2 to live range equivalence class [ vera_layer_get_backcolor::return#2 ]
Added variable clrscr::$0 to live range equivalence class [ clrscr::$0 ]
Added variable clrscr::$1 to live range equivalence class [ clrscr::$1 ]
Added variable vera_layer_get_textcolor::layer#0 to live range equivalence class [ vera_layer_get_textcolor::layer#0 ]
Added variable vera_layer_get_textcolor::return#2 to live range equivalence class [ vera_layer_get_textcolor::return#2 ]
Added variable clrscr::$2 to live range equivalence class [ clrscr::$2 ]
Added variable clrscr::color#0 to live range equivalence class [ clrscr::color#0 ]
Added variable clrscr::$9 to live range equivalence class [ clrscr::$9 ]
Added variable clrscr::$5 to live range equivalence class [ clrscr::$5 ]
Added variable clrscr::$6 to live range equivalence class [ clrscr::$6 ]
Added variable clrscr::$7 to live range equivalence class [ clrscr::$7 ]
Added variable printf_str::c#1 to live range equivalence class [ printf_str::c#1 ]
Added variable setnam::filename to live range equivalence class [ setnam::filename ]
Added variable setlfs::device to live range equivalence class [ setlfs::device ]
Added variable load::address to live range equivalence class [ load::address ]
Added variable load::verify to live range equivalence class [ load::verify ]
Added variable memcpy_bank_to_vram::$0 to live range equivalence class [ memcpy_bank_to_vram::$0 ]
Added variable memcpy_bank_to_vram::$1 to live range equivalence class [ memcpy_bank_to_vram::$1 ]
Added variable memcpy_bank_to_vram::$2 to live range equivalence class [ memcpy_bank_to_vram::$2 ]
Added variable memcpy_bank_to_vram::end#0 to live range equivalence class [ memcpy_bank_to_vram::end#0 ]
Added variable memcpy_bank_to_vram::$4 to live range equivalence class [ memcpy_bank_to_vram::$4 ]
Added variable memcpy_bank_to_vram::$5 to live range equivalence class [ memcpy_bank_to_vram::$5 ]
Added variable memcpy_bank_to_vram::$6 to live range equivalence class [ memcpy_bank_to_vram::$6 ]
Added variable memcpy_bank_to_vram::$7 to live range equivalence class [ memcpy_bank_to_vram::$7 ]
Added variable memcpy_bank_to_vram::$9 to live range equivalence class [ memcpy_bank_to_vram::$9 ]
Added variable memcpy_bank_to_vram::addr#0 to live range equivalence class [ memcpy_bank_to_vram::addr#0 ]
Added variable vera_layer_get_mapbase_bank::return#0 to live range equivalence class [ vera_layer_get_mapbase_bank::return#0 ]
Added variable vera_layer_get_mapbase_offset::$0 to live range equivalence class [ vera_layer_get_mapbase_offset::$0 ]
Added variable vera_layer_get_mapbase_offset::return#0 to live range equivalence class [ vera_layer_get_mapbase_offset::return#0 ]
Added variable vera_layer_get_rowshift::return#0 to live range equivalence class [ vera_layer_get_rowshift::return#0 ]
Added variable vera_layer_get_rowskip::$0 to live range equivalence class [ vera_layer_get_rowskip::$0 ]
Added variable vera_layer_get_rowskip::return#0 to live range equivalence class [ vera_layer_get_rowskip::return#0 ]
Added variable vera_layer_get_backcolor::return#0 to live range equivalence class [ vera_layer_get_backcolor::return#0 ]
Added variable vera_layer_get_textcolor::return#0 to live range equivalence class [ vera_layer_get_textcolor::return#0 ]
Added variable strlen::return#0 to live range equivalence class [ strlen::return#0 ]
Added variable setnam::$0 to live range equivalence class [ setnam::$0 ]
Added variable setnam::filename_len to live range equivalence class [ setnam::filename_len ]
Added variable load::status to live range equivalence class [ load::status ]
Added variable vera_layer_set_config::addr#0 to live range equivalence class [ vera_layer_set_config::addr#0 ]
Added variable vera_layer_set_tilebase::addr#0 to live range equivalence class [ vera_layer_set_tilebase::addr#0 ]
Added variable insertup::cy#0 to live range equivalence class [ insertup::cy#0 ]
Added variable insertup::width#0 to live range equivalence class [ insertup::width#0 ]
Added variable insertup::$3 to live range equivalence class [ insertup::$3 ]
Added variable insertup::line#0 to live range equivalence class [ insertup::line#0 ]
Added variable insertup::start#0 to live range equivalence class [ insertup::start#0 ]
Added variable memcpy_in_vram::src#0 to live range equivalence class [ memcpy_in_vram::src#0 ]
Added variable memcpy_in_vram::dest#0 to live range equivalence class [ memcpy_in_vram::dest#0 ]
Added variable memcpy_in_vram::num#0 to live range equivalence class [ memcpy_in_vram::num#0 ]
Added variable clearline::$5 to live range equivalence class [ clearline::$5 ]
Added variable clearline::addr#0 to live range equivalence class [ clearline::addr#0 ]
Added variable clearline::$1 to live range equivalence class [ clearline::$1 ]
Added variable clearline::$2 to live range equivalence class [ clearline::$2 ]
Added variable vera_layer_get_color::return#4 to live range equivalence class [ vera_layer_get_color::return#4 ]
Added variable clearline::color#0 to live range equivalence class [ clearline::color#0 ]
Added variable memcpy_in_vram::$0 to live range equivalence class [ memcpy_in_vram::$0 ]
Added variable memcpy_in_vram::$1 to live range equivalence class [ memcpy_in_vram::$1 ]
Added variable memcpy_in_vram::$3 to live range equivalence class [ memcpy_in_vram::$3 ]
Added variable memcpy_in_vram::$4 to live range equivalence class [ memcpy_in_vram::$4 ]
Added variable main::SPRITE_ATTR to live range equivalence class [ main::SPRITE_ATTR ]
Complete equivalence classes
[ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
[ CONIO_SCREEN_TEXT#11 ]
[ CONIO_SCREEN_BANK#11 ]
[ vera_layer_set_mapbase::layer#3 ]
[ vera_layer_set_mapbase::mapbase#3 ]
[ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ]
[ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
[ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ]
[ vera_layer_set_text_color_mode::layer#3 ]
[ clrscr::l#2 clrscr::l#1 ]
[ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
[ clrscr::c#2 clrscr::c#1 ]
[ printf_str::s#2 printf_str::s#0 ]
[ memcpy_bank_to_vram::vdest#2 ]
[ memcpy_bank_to_vram::num#2 ]
[ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ]
[ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ]
[ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ]
[ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ]
[ insertup::i#2 insertup::i#1 ]
[ strlen::str#2 strlen::str#0 strlen::str#1 ]
[ strlen::len#2 strlen::len#1 ]
[ clearline::c#2 clearline::c#1 ]
[ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
[ conio_screen_width ]
[ conio_screen_height ]
[ conio_screen_layer ]
[ conio_width ]
[ conio_height ]
[ conio_rowshift ]
[ conio_rowskip ]
[ cputc::c#0 ]
[ vera_layer_get_color::return#3 ]
[ cputc::color#0 ]
[ cputc::$15 ]
[ cputc::conio_addr#0 ]
[ cputc::$2 ]
[ cputc::conio_addr#1 ]
[ cputc::$4 ]
[ cputc::$5 ]
[ cputc::$6 ]
[ cputc::scroll_enable#0 ]
[ cputc::$16 ]
[ screensize::hscale#0 ]
[ screensize::$1 ]
[ screensize::vscale#0 ]
[ screensize::$3 ]
[ vera_layer_get_mapbase_bank::layer#0 ]
[ vera_layer_get_mapbase_bank::return#2 ]
[ CONIO_SCREEN_BANK#14 ]
[ vera_layer_get_mapbase_offset::layer#0 ]
[ vera_layer_get_mapbase_offset::return#2 ]
[ CONIO_SCREEN_TEXT#16 ]
[ screenlayer::vera_layer_get_width1_layer#0 ]
[ screenlayer::vera_layer_get_width1_$2 ]
[ screenlayer::vera_layer_get_width1_config#0 ]
[ screenlayer::vera_layer_get_width1_$0 ]
[ screenlayer::vera_layer_get_width1_$1 ]
[ screenlayer::vera_layer_get_width1_$3 ]
[ screenlayer::vera_layer_get_width1_return#0 ]
[ screenlayer::vera_layer_get_width1_return#1 ]
[ screenlayer::$2 ]
[ vera_layer_get_rowshift::layer#0 ]
[ vera_layer_get_rowshift::return#2 ]
[ screenlayer::$3 ]
[ vera_layer_get_rowskip::layer#0 ]
[ vera_layer_get_rowskip::return#2 ]
[ screenlayer::$4 ]
[ screenlayer::vera_layer_get_height1_layer#0 ]
[ screenlayer::vera_layer_get_height1_$2 ]
[ screenlayer::vera_layer_get_height1_config#0 ]
[ screenlayer::vera_layer_get_height1_$0 ]
[ screenlayer::vera_layer_get_height1_$1 ]
[ screenlayer::vera_layer_get_height1_$3 ]
[ screenlayer::vera_layer_get_height1_return#0 ]
[ screenlayer::vera_layer_get_height1_return#1 ]
[ screenlayer::$5 ]
[ vera_layer_set_mapbase::$0 ]
[ vera_layer_set_mapbase::addr#0 ]
[ gotoxy::$6 ]
[ gotoxy::line_offset#0 ]
[ gotoxy::$5 ]
[ vera_layer_get_color::$3 ]
[ vera_layer_get_color::addr#0 ]
[ vera_layer_get_color::$0 ]
[ vera_layer_get_color::$1 ]
[ cputln::$2 ]
[ cputln::temp#0 ]
[ cputln::temp#1 ]
[ cputln::$3 ]
[ vera_layer_set_text_color_mode::$0 ]
[ vera_layer_set_text_color_mode::addr#0 ]
[ vera_layer_get_backcolor::layer#0 ]
[ vera_layer_get_backcolor::return#2 ]
[ clrscr::$0 ]
[ clrscr::$1 ]
[ vera_layer_get_textcolor::layer#0 ]
[ vera_layer_get_textcolor::return#2 ]
[ clrscr::$2 ]
[ clrscr::color#0 ]
[ clrscr::$9 ]
[ clrscr::$5 ]
[ clrscr::$6 ]
[ clrscr::$7 ]
[ printf_str::c#1 ]
[ setnam::filename ]
[ setlfs::device ]
[ load::address ]
[ load::verify ]
[ memcpy_bank_to_vram::$0 ]
[ memcpy_bank_to_vram::$1 ]
[ memcpy_bank_to_vram::$2 ]
[ memcpy_bank_to_vram::end#0 ]
[ memcpy_bank_to_vram::$4 ]
[ memcpy_bank_to_vram::$5 ]
[ memcpy_bank_to_vram::$6 ]
[ memcpy_bank_to_vram::$7 ]
[ memcpy_bank_to_vram::$9 ]
[ memcpy_bank_to_vram::addr#0 ]
[ vera_layer_get_mapbase_bank::return#0 ]
[ vera_layer_get_mapbase_offset::$0 ]
[ vera_layer_get_mapbase_offset::return#0 ]
[ vera_layer_get_rowshift::return#0 ]
[ vera_layer_get_rowskip::$0 ]
[ vera_layer_get_rowskip::return#0 ]
[ vera_layer_get_backcolor::return#0 ]
[ vera_layer_get_textcolor::return#0 ]
[ strlen::return#0 ]
[ setnam::$0 ]
[ setnam::filename_len ]
[ load::status ]
[ vera_layer_set_config::addr#0 ]
[ vera_layer_set_tilebase::addr#0 ]
[ insertup::cy#0 ]
[ insertup::width#0 ]
[ insertup::$3 ]
[ insertup::line#0 ]
[ insertup::start#0 ]
[ memcpy_in_vram::src#0 ]
[ memcpy_in_vram::dest#0 ]
[ memcpy_in_vram::num#0 ]
[ clearline::$5 ]
[ clearline::addr#0 ]
[ clearline::$1 ]
[ clearline::$2 ]
[ vera_layer_get_color::return#4 ]
[ clearline::color#0 ]
[ memcpy_in_vram::$0 ]
[ memcpy_in_vram::$1 ]
[ memcpy_in_vram::$3 ]
[ memcpy_in_vram::$4 ]
[ main::SPRITE_ATTR ]
Allocated zp[2]:2 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ]
Allocated zp[2]:4 [ memcpy_in_vram::num#0 ]
Allocated zp[2]:6 [ clearline::c#2 clearline::c#1 ]
Allocated zp[1]:8 [ memcpy_in_vram::$0 ]
Allocated zp[1]:9 [ memcpy_in_vram::$1 ]
Allocated zp[1]:10 [ memcpy_in_vram::$3 ]
Allocated zp[1]:11 [ memcpy_in_vram::$4 ]
Allocated zp[1]:12 [ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ]
Allocated zp[1]:13 [ insertup::i#2 insertup::i#1 ]
Allocated zp[1]:14 [ vera_layer_get_color::$3 ]
Allocated zp[2]:15 [ vera_layer_get_color::addr#0 ]
Allocated zp[1]:17 [ vera_layer_get_color::$0 ]
Allocated zp[1]:18 [ vera_layer_get_color::$1 ]
Allocated zp[1]:19 [ insertup::$3 ]
Allocated zp[2]:20 [ insertup::line#0 ]
Allocated zp[2]:22 [ memcpy_in_vram::dest#0 ]
Allocated zp[1]:24 [ clearline::color#0 ]
Allocated zp[2]:25 [ insertup::start#0 ]
Allocated zp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Allocated zp[1]:28 [ clearline::$5 ]
Allocated zp[1]:29 [ clearline::$1 ]
Allocated zp[1]:30 [ clearline::$2 ]
Allocated zp[1]:31 [ vera_layer_get_color::return#4 ]
Allocated zp[2]:32 [ memcpy_in_vram::src#0 ]
Allocated zp[2]:34 [ clearline::addr#0 ]
Allocated zp[1]:36 [ insertup::width#0 ]
Allocated zp[1]:37 [ insertup::cy#0 ]
Allocated zp[1]:38 [ conio_screen_width ]
Allocated zp[2]:39 [ CONIO_SCREEN_TEXT#11 ]
Allocated zp[2]:41 [ gotoxy::$6 ]
Allocated zp[1]:43 [ gotoxy::$5 ]
Allocated zp[1]:44 [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ]
Allocated zp[2]:45 [ gotoxy::line_offset#0 ]
Allocated zp[1]:47 [ conio_rowshift ]
Allocated zp[2]:48 [ conio_rowskip ]
Allocated zp[1]:50 [ conio_screen_layer ]
Allocated zp[2]:51 [ strlen::str#2 strlen::str#0 strlen::str#1 ]
Allocated zp[1]:53 [ cputln::$2 ]
Allocated zp[2]:54 [ cputln::temp#0 ]
Allocated zp[1]:56 [ cputln::$3 ]
Allocated zp[2]:57 [ strlen::len#2 strlen::len#1 ]
Allocated zp[1]:59 [ conio_screen_height ]
Allocated zp[2]:60 [ cputln::temp#1 ]
Allocated zp[1]:62 [ clrscr::c#2 clrscr::c#1 ]
Allocated zp[1]:63 [ vera_layer_get_color::return#3 ]
Allocated zp[1]:64 [ cputc::$15 ]
Allocated zp[1]:65 [ cputc::$2 ]
Allocated zp[1]:66 [ cputc::$4 ]
Allocated zp[1]:67 [ cputc::$5 ]
Allocated zp[1]:68 [ cputc::$6 ]
Allocated zp[1]:69 [ cputc::scroll_enable#0 ]
Allocated zp[2]:70 [ cputc::$16 ]
Allocated zp[1]:72 [ vera_layer_set_mapbase::$0 ]
Allocated zp[2]:73 [ vera_layer_set_mapbase::addr#0 ]
Allocated zp[2]:75 [ vera_layer_set_config::addr#0 ]
Allocated zp[2]:77 [ vera_layer_set_tilebase::addr#0 ]
Allocated zp[2]:79 [ conio_height ]
Allocated zp[1]:81 [ vera_layer_set_mapbase::layer#3 ]
Allocated zp[2]:82 [ cputc::conio_addr#0 ]
Allocated zp[2]:84 [ cputc::conio_addr#1 ]
Allocated zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ]
Allocated zp[1]:88 [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ]
Allocated zp[2]:89 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ]
Allocated zp[1]:91 [ vera_layer_set_mapbase::mapbase#3 ]
Allocated zp[2]:92 [ vera_layer_set_text_color_mode::addr#0 ]
Allocated zp[4]:94 [ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ]
Allocated zp[1]:98 [ clrscr::l#2 clrscr::l#1 ]
Allocated zp[1]:99 [ vera_layer_set_text_color_mode::$0 ]
Allocated zp[1]:100 [ clrscr::$5 ]
Allocated zp[1]:101 [ clrscr::$6 ]
Allocated zp[1]:102 [ clrscr::$7 ]
Allocated zp[1]:103 [ vera_layer_get_mapbase_offset::$0 ]
Allocated zp[1]:104 [ vera_layer_get_rowskip::$0 ]
Allocated zp[2]:105 [ strlen::return#0 ]
Allocated zp[2]:107 [ printf_str::s#2 printf_str::s#0 ]
Allocated zp[1]:109 [ cputc::c#0 ]
Allocated zp[1]:110 [ cputc::color#0 ]
Allocated zp[2]:111 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
Allocated zp[1]:113 [ vera_layer_get_mapbase_bank::layer#0 ]
Allocated zp[1]:114 [ vera_layer_get_mapbase_offset::layer#0 ]
Allocated zp[1]:115 [ vera_layer_get_rowshift::layer#0 ]
Allocated zp[1]:116 [ vera_layer_get_rowskip::layer#0 ]
Allocated zp[1]:117 [ vera_layer_get_backcolor::layer#0 ]
Allocated zp[1]:118 [ vera_layer_get_textcolor::layer#0 ]
Allocated zp[1]:119 [ vera_layer_set_text_color_mode::layer#3 ]
Allocated zp[1]:120 [ printf_str::c#1 ]
Allocated zp[2]:121 [ setnam::$0 ]
Allocated zp[1]:123 [ setnam::filename_len ]
Allocated zp[1]:124 [ load::status ]
Allocated zp[1]:125 [ CONIO_SCREEN_BANK#11 ]
Allocated zp[1]:126 [ clrscr::color#0 ]
Allocated zp[1]:127 [ vera_layer_get_mapbase_bank::return#0 ]
Allocated zp[2]:128 [ vera_layer_get_mapbase_offset::return#0 ]
Allocated zp[1]:130 [ vera_layer_get_rowshift::return#0 ]
Allocated zp[2]:131 [ vera_layer_get_rowskip::return#0 ]
Allocated zp[1]:133 [ vera_layer_get_backcolor::return#0 ]
Allocated zp[1]:134 [ vera_layer_get_textcolor::return#0 ]
Allocated zp[2]:135 [ conio_width ]
Allocated zp[1]:137 [ screensize::hscale#0 ]
Allocated zp[1]:138 [ screensize::$1 ]
Allocated zp[1]:139 [ screensize::vscale#0 ]
Allocated zp[1]:140 [ screensize::$3 ]
Allocated zp[1]:141 [ vera_layer_get_mapbase_bank::return#2 ]
Allocated zp[2]:142 [ vera_layer_get_mapbase_offset::return#2 ]
Allocated zp[1]:144 [ screenlayer::vera_layer_get_width1_layer#0 ]
Allocated zp[1]:145 [ screenlayer::vera_layer_get_width1_$2 ]
Allocated zp[2]:146 [ screenlayer::vera_layer_get_width1_config#0 ]
Allocated zp[1]:148 [ screenlayer::vera_layer_get_width1_$0 ]
Allocated zp[1]:149 [ screenlayer::vera_layer_get_width1_$1 ]
Allocated zp[1]:150 [ screenlayer::vera_layer_get_width1_$3 ]
Allocated zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 ]
Allocated zp[2]:153 [ screenlayer::vera_layer_get_width1_return#1 ]
Allocated zp[2]:155 [ screenlayer::$2 ]
Allocated zp[1]:157 [ vera_layer_get_rowshift::return#2 ]
Allocated zp[1]:158 [ screenlayer::$3 ]
Allocated zp[2]:159 [ vera_layer_get_rowskip::return#2 ]
Allocated zp[2]:161 [ screenlayer::$4 ]
Allocated zp[1]:163 [ screenlayer::vera_layer_get_height1_layer#0 ]
Allocated zp[1]:164 [ screenlayer::vera_layer_get_height1_$2 ]
Allocated zp[2]:165 [ screenlayer::vera_layer_get_height1_config#0 ]
Allocated zp[1]:167 [ screenlayer::vera_layer_get_height1_$0 ]
Allocated zp[1]:168 [ screenlayer::vera_layer_get_height1_$1 ]
Allocated zp[1]:169 [ screenlayer::vera_layer_get_height1_$3 ]
Allocated zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 ]
Allocated zp[2]:172 [ screenlayer::vera_layer_get_height1_return#1 ]
Allocated zp[2]:174 [ screenlayer::$5 ]
Allocated zp[1]:176 [ vera_layer_get_backcolor::return#2 ]
Allocated zp[1]:177 [ clrscr::$0 ]
Allocated zp[1]:178 [ vera_layer_get_textcolor::return#2 ]
Allocated zp[1]:179 [ clrscr::$2 ]
Allocated zp[1]:180 [ clrscr::$9 ]
Allocated zp[1]:181 [ memcpy_bank_to_vram::$0 ]
Allocated zp[1]:182 [ memcpy_bank_to_vram::$1 ]
Allocated zp[1]:183 [ memcpy_bank_to_vram::$2 ]
Allocated zp[1]:184 [ memcpy_bank_to_vram::$4 ]
Allocated zp[1]:185 [ memcpy_bank_to_vram::$6 ]
Allocated zp[1]:186 [ memcpy_bank_to_vram::$7 ]
Allocated zp[2]:187 [ memcpy_bank_to_vram::$9 ]
Allocated zp[2]:189 [ setnam::filename ]
Allocated zp[1]:191 [ setlfs::device ]
Allocated zp[2]:192 [ memcpy_bank_to_vram::addr#0 ]
Allocated zp[1]:194 [ memcpy_bank_to_vram::$5 ]
Allocated zp[4]:195 [ memcpy_bank_to_vram::end#0 ]
Allocated zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Allocated zp[4]:200 [ memcpy_bank_to_vram::vdest#2 ]
Allocated zp[1]:204 [ load::verify ]
Allocated zp[1]:205 [ clrscr::$1 ]
Allocated zp[2]:206 [ load::address ]
Allocated zp[1]:208 [ CONIO_SCREEN_BANK#14 ]
Allocated zp[4]:209 [ memcpy_bank_to_vram::num#2 ]
Allocated zp[2]:213 [ CONIO_SCREEN_TEXT#16 ]
Allocated zp[8]:215 [ main::SPRITE_ATTR ]
REGISTER UPLIFT POTENTIAL REGISTERS
Statement [1] conio_screen_width = 0 [ conio_screen_width main::SPRITE_ATTR ] (  [ conio_screen_width main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [2] conio_screen_height = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [3] conio_screen_layer = 1 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [4] conio_width = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [5] conio_height = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [6] conio_rowshift = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [7] conio_rowskip = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [33] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  ) always clobbers reg byte a reg byte x 
Removing always clobbered register reg byte a as potential for zp[1]:125 [ CONIO_SCREEN_BANK#11 ]
Removing always clobbered register reg byte x as potential for zp[1]:125 [ CONIO_SCREEN_BANK#11 ]
Statement [38] cputc::$15 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::$15 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::$15 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:109 [ cputc::c#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:110 [ cputc::color#0 ]
Statement [39] cputc::conio_addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[cputc::$15] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { }  ) always clobbers reg byte a 
Statement [40] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { }  ) always clobbers reg byte a 
Statement [41] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { }  ) always clobbers reg byte a 
Statement [43] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { }  ) always clobbers reg byte a 
Statement [48] cputc::$6 = CONIO_SCREEN_BANK#11 | VERA_INC_1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::c#0 cputc::color#0 cputc::$6 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::c#0 cputc::color#0 cputc::$6 ] { }  ) always clobbers reg byte a 
Statement [52] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte x 
Statement [53] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::scroll_enable#0 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::scroll_enable#0 ] { }  ) always clobbers reg byte y 
Statement [55] cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::$16 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::$16 ] { }  ) always clobbers reg byte a reg byte y 
Statement [56] if(cputc::$16!=conio_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a 
Statement [60] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [73] *(&main::SPRITE_ATTR) = memcpy(*(&$0), struct VERA_SPRITE, SIZEOF_STRUCT_VERA_SPRITE) [ main::SPRITE_ATTR ] ( main:10 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a reg byte y 
Statement [79] *((unsigned int *)&main::SPRITE_ATTR) = word0 main::VRAM_SPRITE/$20 [ main::SPRITE_ATTR ] ( main:10 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [80] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64 [ main::SPRITE_ATTR ] ( main:10 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [81] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64 [ ] ( main:10 [ ] { }  ) always clobbers reg byte a 
Statement [83] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL [ ] ( main:10 [ ] { }  ) always clobbers reg byte a 
Statement [84] *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE [ ] ( main:10 [ ] { }  ) always clobbers reg byte a 
Statement [91] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 [ screensize::hscale#0 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Statement [92] screensize::$1 = $28 << screensize::hscale#0 [ screensize::$1 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  ) always clobbers reg byte a 
Statement [94] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 [ screensize::vscale#0 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  ) always clobbers reg byte a 
Statement [95] screensize::$3 = $1e << screensize::vscale#0 [ screensize::$3 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  ) always clobbers reg byte a 
Statement [98] conio_screen_layer = 1 [ conio_screen_layer ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  ) always clobbers reg byte a 
Statement [105] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0 [ conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:208 [ CONIO_SCREEN_BANK#14 ]
Statement [106] CONIO_SCREEN_TEXT#16 = vera_layer_get_mapbase_offset::return#2 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  ) always clobbers reg byte a 
Statement [108] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] { }  ) always clobbers reg byte a 
Statement [109] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] { }  ) always clobbers reg byte a 
Statement [110] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:208 [ CONIO_SCREEN_BANK#14 ]
Statement [111] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] { }  ) always clobbers reg byte a 
Statement [112] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] { }  ) always clobbers reg byte a 
Statement [113] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] { }  ) always clobbers reg byte a 
Statement [114] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] { }  ) always clobbers reg byte a 
Statement [115] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [116] conio_width = screenlayer::$2 [ conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [124] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [125] screenlayer::$4 = vera_layer_get_rowskip::return#2 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] { }  ) always clobbers reg byte a 
Statement [126] conio_rowskip = screenlayer::$4 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  ) always clobbers reg byte a 
Statement [128] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] { }  ) always clobbers reg byte a 
Statement [129] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] { }  ) always clobbers reg byte a 
Statement [130] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [131] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] { }  ) always clobbers reg byte a 
Statement [132] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] { }  ) always clobbers reg byte a 
Statement [133] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] { }  ) always clobbers reg byte a 
Statement [134] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] { }  ) always clobbers reg byte a 
Statement [135] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] { }  ) always clobbers reg byte a 
Statement [136] conio_height = screenlayer::$5 [ conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  ) always clobbers reg byte a 
Statement [138] *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0) = WHITE [ ] ( vera_layer_set_textcolor:19 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_textcolor:19 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [140] *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0) = BLUE [ ] ( vera_layer_set_backcolor:21 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_backcolor:21 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [143] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] ( vera_layer_set_mapbase:23 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:23 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  vera_layer_set_mapbase:25 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:25 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:91 [ vera_layer_set_mapbase::mapbase#3 ]
Statement [144] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] ( vera_layer_set_mapbase:23 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:23 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  vera_layer_set_mapbase:25 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:25 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  ) always clobbers reg byte a 
Statement [145] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 [ ] ( vera_layer_set_mapbase:23 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:23 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  vera_layer_set_mapbase:25 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:25 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [151] if(0<conio_screen_width) goto gotoxy::@2 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:44 [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ]
Statement [153] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:44 [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ]
Statement [154] conio_cursor_y[conio_screen_layer] = gotoxy::y#4 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a reg byte y 
Statement [155] gotoxy::$6 = (unsigned int)gotoxy::y#4 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [156] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a reg byte y 
Statement [157] gotoxy::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [158] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [161] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 [ vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Statement [162] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] [ vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [163] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C [ vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:125 [ CONIO_SCREEN_BANK#11 ]
Removing always clobbered register reg byte y as potential for zp[1]:109 [ cputc::c#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Statement [165] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 [ vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [166] vera_layer_get_color::return#1 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] [ vera_layer_get_color::return#1 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [170] cputln::$2 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] { }  ) always clobbers reg byte a 
Statement [171] cputln::temp#0 = conio_line_text[cputln::$2] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] { }  ) always clobbers reg byte a 
Statement [172] cputln::temp#1 = cputln::temp#0 + conio_rowskip [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] { }  ) always clobbers reg byte a 
Statement [173] cputln::$3 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] { }  ) always clobbers reg byte a 
Statement [174] conio_line_text[cputln::$3] = cputln::temp#1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a 
Statement [175] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [176] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte x 
Statement [180] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 << 1 [ vera_layer_set_text_color_mode::$0 ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR vera_layer_set_text_color_mode::$0 ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::$0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::$0 ] { }  ) always clobbers reg byte a 
Statement [181] vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0] [ vera_layer_set_text_color_mode::addr#0 ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR vera_layer_set_text_color_mode::addr#0 ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a 
Statement [182] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C [ vera_layer_set_text_color_mode::addr#0 ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR vera_layer_set_text_color_mode::addr#0 ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [183] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 [ ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [185] clrscr::line_text#0 = (char *)CONIO_SCREEN_TEXT#16 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#2 } }  ) always clobbers reg byte a 
Statement [190] clrscr::$1 = clrscr::$0 << 4 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 clrscr::$1 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#2 } }  ) always clobbers reg byte a 
Statement [198] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip ] { }  ) always clobbers reg byte a reg byte y 
Statement [199] conio_cursor_y[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip ] { }  ) always clobbers reg byte a reg byte y 
Statement [200] clrscr::$9 = conio_screen_layer << 1 [ conio_screen_layer conio_width conio_height conio_rowskip clrscr::$9 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip clrscr::$9 ] { }  ) always clobbers reg byte a 
Statement [201] conio_line_text[clrscr::$9] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip ] { }  ) always clobbers reg byte a 
Statement [203] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:126 [ clrscr::color#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:98 [ clrscr::l#2 clrscr::l#1 ]
Statement [208] clrscr::$7 = CONIO_SCREEN_BANK#14 | VERA_INC_1 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  ) always clobbers reg byte a 
Statement [212] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [214] *VERA_DATA0 = ' ' [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:62 [ clrscr::c#2 clrscr::c#1 ]
Statement [219] printf_str::c#1 = *printf_str::s#2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip printf_str::s#2 printf_str::c#1 ] ( main:10::printf_str:72 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip printf_str::s#2 printf_str::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [226] setnam::filename = main::filename [ setnam::filename ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR setnam::filename ] { }  ) always clobbers reg byte a 
Statement [228] setlfs::device = load_to_bank::device#0 [ setlfs::device ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR setlfs::device ] { }  ) always clobbers reg byte a 
Statement [230] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = load_to_bank::bank#0 [ ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [231] load::address = (char *)0+$a000 [ load::address ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR load::address ] { }  ) always clobbers reg byte a 
Statement [232] load::verify = 0 [ load::address load::verify ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR load::address load::verify ] { }  ) always clobbers reg byte a 
Statement [236] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memcpy_bank_to_vram::vdest#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::vdest#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::vdest#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  ) always clobbers reg byte a 
Statement [243] *VERA_ADDRX_H = *VERA_ADDRX_H | VERA_INC_1 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  ) always clobbers reg byte a 
Statement [244] memcpy_bank_to_vram::end#0 = memcpy_bank_to_vram::beg#0 + memcpy_bank_to_vram::num#2 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 ] { }  ) always clobbers reg byte a 
Statement [246] memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 ] { }  ) always clobbers reg byte a 
Statement [248] memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 memcpy_bank_to_vram::$7 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 memcpy_bank_to_vram::$7 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 memcpy_bank_to_vram::$7 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:194 [ memcpy_bank_to_vram::$5 ]
Statement [250] memcpy_bank_to_vram::$9 = word0  memcpy_bank_to_vram::beg#0 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::$9 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::$9 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::$9 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:88 [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ]
Statement [251] memcpy_bank_to_vram::addr#0 = memcpy_bank_to_vram::$9 & $1fff [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#0 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#0 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#0 ] { }  ) always clobbers reg byte a 
Statement [252] memcpy_bank_to_vram::addr#1 = (char *)memcpy_bank_to_vram::addr#0 + $a000 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#1 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#1 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#1 ] { }  ) always clobbers reg byte a 
Statement [255] if(memcpy_bank_to_vram::pos#2<memcpy_bank_to_vram::end#0) goto memcpy_bank_to_vram::@2 [ memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  ) always clobbers reg byte a 
Statement [257] if(memcpy_bank_to_vram::addr#4!=$c000) goto memcpy_bank_to_vram::@3 [ memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  ) always clobbers reg byte a 
Statement [261] *VERA_DATA0 = *memcpy_bank_to_vram::addr#5 [ memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::addr#5 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::addr#5 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::addr#5 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:88 [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ]
Statement [264] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [265] *VERA_ADDRX_L = 0 [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [266] *VERA_ADDRX_M = byte1 memcpy_to_vram::vdest#0 [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [267] *VERA_ADDRX_H = VERA_INC_1|memcpy_to_vram::vbank#0 [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [269] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2 [ memcpy_to_vram::s#2 ] ( main:10::memcpy_to_vram:82 [ memcpy_to_vram::s#2 ] { }  ) always clobbers reg byte a 
Statement [271] *VERA_DATA0 = *memcpy_to_vram::s#2 [ memcpy_to_vram::s#2 ] ( main:10::memcpy_to_vram:82 [ memcpy_to_vram::s#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [274] *(vera_layer_rowshift+vera_layer_mode_text::layer#0) = 8 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [275] *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = $100 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [278] *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = 0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [279] *(vera_mapbase_bank+vera_layer_mode_text::layer#0) = 0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [280] *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::mapbase_address#0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [282] *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = word0 vera_layer_mode_text::tilebase_address#0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [283] *(vera_tilebase_bank+vera_layer_mode_text::layer#0) = 0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [284] *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::tilebase_address#0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [290] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 [ vera_layer_get_mapbase_offset::$0 ] ( screenlayer:17::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_mapbase_offset:104 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:10::screenlayer:68::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [291] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] [ vera_layer_get_mapbase_offset::return#0 ] ( screenlayer:17::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_mapbase_offset:104 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:10::screenlayer:68::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [295] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 [ vera_layer_get_rowskip::$0 ] ( screenlayer:17::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_rowskip:123 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:10::screenlayer:68::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [296] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] [ vera_layer_get_rowskip::return#0 ] ( screenlayer:17::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_rowskip:123 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:10::screenlayer:68::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [298] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [299] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [300] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] { }  ) always clobbers reg byte a reg byte y 
Statement [305] gotoxy::y#2 = conio_screen_height - 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte x 
Statement [311] strlen::str#0 = setnam::filename [ setnam::filename strlen::str#0 ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename strlen::str#0 ] { { strlen::str#0 = setnam::filename } { strlen::return#0 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [313] strlen::return#0 = strlen::len#2 [ setnam::filename strlen::return#0 ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename strlen::return#0 ] { { strlen::str#0 = setnam::filename } { strlen::return#0 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [314] setnam::$0 = strlen::return#0 [ setnam::filename setnam::$0 ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename setnam::$0 ] { }  ) always clobbers reg byte a 
Statement [315] setnam::filename_len = (char)setnam::$0 [ setnam::filename setnam::filename_len ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename setnam::filename_len ] { }  ) always clobbers reg byte a 
Statement asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  } always clobbers reg byte a reg byte x reg byte y 
Statement asm { ldxdevice lda#1 ldy#0 jsr$ffba  } always clobbers reg byte a reg byte x reg byte y 
Statement [320] load::status = 0 [ load::address load::verify load::status ] ( main:10::load_to_bank:74::load:233 [ main::SPRITE_ATTR load::address load::verify load::status ] { }  ) always clobbers reg byte a 
Statement asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  } always clobbers reg byte a reg byte x reg byte y 
Statement [323] vera_layer_set_config::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) [ vera_layer_set_config::addr#0 ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_config::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_config::addr#0 ] { }  ) always clobbers reg byte a 
Statement [324] *vera_layer_set_config::addr#0 = vera_layer_mode_tile::config#10 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [326] vera_layer_set_tilebase::addr#0 = *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER) [ vera_layer_set_tilebase::addr#0 ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::addr#0 ] { }  ) always clobbers reg byte a 
Statement [327] *vera_layer_set_tilebase::addr#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [329] insertup::cy#0 = conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] { }  ) always clobbers reg byte y 
Statement [330] insertup::width#0 = conio_screen_width << 1 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:37 [ insertup::cy#0 ]
Statement [337] insertup::line#0 = insertup::$3 << conio_rowshift [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:37 [ insertup::cy#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:36 [ insertup::width#0 ]
Removing always clobbered register reg byte y as potential for zp[1]:36 [ insertup::width#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:13 [ insertup::i#2 insertup::i#1 ]
Removing always clobbered register reg byte y as potential for zp[1]:13 [ insertup::i#2 insertup::i#1 ]
Statement [338] insertup::start#0 = CONIO_SCREEN_TEXT#11 + insertup::line#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [339] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [340] memcpy_in_vram::dest#0 = (void *)insertup::start#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [341] memcpy_in_vram::num#0 = insertup::width#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [346] if(0!=*strlen::str#2) goto strlen::@2 [ strlen::len#2 strlen::str#2 ] ( main:10::load_to_bank:74::setnam:227::strlen:312 [ main::SPRITE_ATTR setnam::filename strlen::len#2 strlen::str#2 ] { { strlen::str#0 = setnam::filename } { strlen::return#0 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [350] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [351] clearline::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [352] clearline::addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[clearline::$5] [ conio_screen_width conio_screen_layer clearline::addr#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [357] *VERA_ADDRX_H = VERA_INC_1 [ conio_screen_width conio_screen_layer ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [363] if(clearline::c#2<conio_screen_width) goto clearline::@2 [ conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:24 [ clearline::color#0 ]
Statement [364] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_layer ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { }  ) always clobbers reg byte a reg byte y 
Statement [366] *VERA_DATA0 = ' ' [ conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  ) always clobbers reg byte a 
Statement [369] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [374] *VERA_ADDRX_H = VERA_INC_1 [ memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [375] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL [ memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [380] *VERA_ADDRX_H = VERA_INC_1 [ memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [382] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2 [ memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [384] *VERA_DATA1 = *VERA_DATA0 [ memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [1] conio_screen_width = 0 [ conio_screen_width main::SPRITE_ATTR ] (  [ conio_screen_width main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [2] conio_screen_height = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [3] conio_screen_layer = 1 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [4] conio_width = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [5] conio_height = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [6] conio_rowshift = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [7] conio_rowskip = 0 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] (  [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [27] conio_x16_init::line#1 = conio_screen_height - 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#1 ] (  [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#1 ] { }  conio_x16_init:8 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#1 ] { }  ) always clobbers reg byte x 
Statement [33] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  ) always clobbers reg byte a reg byte x 
Statement [38] cputc::$15 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::$15 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::$15 ] { }  ) always clobbers reg byte a 
Statement [39] cputc::conio_addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[cputc::$15] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 ] { }  ) always clobbers reg byte a 
Statement [40] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#0 cputc::$2 ] { }  ) always clobbers reg byte a 
Statement [41] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { }  ) always clobbers reg byte a 
Statement [43] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 cputc::color#0 cputc::conio_addr#1 ] { }  ) always clobbers reg byte a 
Statement [48] cputc::$6 = CONIO_SCREEN_BANK#11 | VERA_INC_1 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::c#0 cputc::color#0 cputc::$6 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::c#0 cputc::color#0 cputc::$6 ] { }  ) always clobbers reg byte a 
Statement [52] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte x 
Statement [53] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::scroll_enable#0 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::scroll_enable#0 ] { }  ) always clobbers reg byte y 
Statement [55] cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::$16 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputc::$16 ] { }  ) always clobbers reg byte a reg byte y 
Statement [56] if(cputc::$16!=conio_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a 
Statement [60] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [73] *(&main::SPRITE_ATTR) = memcpy(*(&$0), struct VERA_SPRITE, SIZEOF_STRUCT_VERA_SPRITE) [ main::SPRITE_ATTR ] ( main:10 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a reg byte y 
Statement [79] *((unsigned int *)&main::SPRITE_ATTR) = word0 main::VRAM_SPRITE/$20 [ main::SPRITE_ATTR ] ( main:10 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [80] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64 [ main::SPRITE_ATTR ] ( main:10 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [81] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64 [ ] ( main:10 [ ] { }  ) always clobbers reg byte a 
Statement [83] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL [ ] ( main:10 [ ] { }  ) always clobbers reg byte a 
Statement [84] *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE [ ] ( main:10 [ ] { }  ) always clobbers reg byte a 
Statement [91] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 [ screensize::hscale#0 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::hscale#0 ] { }  ) always clobbers reg byte a 
Statement [92] screensize::$1 = $28 << screensize::hscale#0 [ screensize::$1 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$1 ] { }  ) always clobbers reg byte a 
Statement [94] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 [ screensize::vscale#0 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::vscale#0 ] { }  ) always clobbers reg byte a 
Statement [95] screensize::$3 = $1e << screensize::vscale#0 [ screensize::$3 ] ( screensize:15 [ conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  conio_x16_init:8::screensize:15 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 screensize::$3 ] { }  ) always clobbers reg byte a 
Statement [98] conio_screen_layer = 1 [ conio_screen_layer ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer ] { { vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_bank::return#0 = vera_layer_get_mapbase_bank::return#2 } }  ) always clobbers reg byte a 
Statement [105] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0 [ conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#2 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [106] CONIO_SCREEN_TEXT#16 = vera_layer_get_mapbase_offset::return#2 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  ) always clobbers reg byte a 
Statement [108] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$2 ] { }  ) always clobbers reg byte a 
Statement [109] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_config#0 ] { }  ) always clobbers reg byte a 
Statement [110] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [111] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$1 ] { }  ) always clobbers reg byte a 
Statement [112] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_$3 ] { }  ) always clobbers reg byte a 
Statement [113] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#0 ] { }  ) always clobbers reg byte a 
Statement [114] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_width1_return#1 ] { }  ) always clobbers reg byte a 
Statement [115] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1 [ conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$2 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [116] conio_width = screenlayer::$2 [ conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { { vera_layer_get_rowshift::layer#0 = conio_screen_layer } { vera_layer_get_rowshift::return#0 = vera_layer_get_rowshift::return#2 } }  ) always clobbers reg byte a 
Statement [124] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#2 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [125] screenlayer::$4 = vera_layer_get_rowskip::return#2 [ conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$4 ] { }  ) always clobbers reg byte a 
Statement [126] conio_rowskip = screenlayer::$4 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  ) always clobbers reg byte a 
Statement [128] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$2 ] { }  ) always clobbers reg byte a 
Statement [129] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_config#0 ] { }  ) always clobbers reg byte a 
Statement [130] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [131] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$1 ] { }  ) always clobbers reg byte a 
Statement [132] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_$3 ] { }  ) always clobbers reg byte a 
Statement [133] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#0 ] { }  ) always clobbers reg byte a 
Statement [134] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::vera_layer_get_height1_return#1 ] { }  ) always clobbers reg byte a 
Statement [135] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1 [ conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 screenlayer::$5 ] { }  ) always clobbers reg byte a 
Statement [136] conio_height = screenlayer::$5 [ conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] ( screenlayer:17 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  conio_x16_init:8::screenlayer:17 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  main:10::screenlayer:68 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 ] { }  ) always clobbers reg byte a 
Statement [138] *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0) = WHITE [ ] ( vera_layer_set_textcolor:19 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_textcolor:19 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [140] *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0) = BLUE [ ] ( vera_layer_set_backcolor:21 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_backcolor:21 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [143] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] ( vera_layer_set_mapbase:23 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:23 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  vera_layer_set_mapbase:25 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:25 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::$0 ] { }  ) always clobbers reg byte a 
Statement [144] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] ( vera_layer_set_mapbase:23 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:23 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  vera_layer_set_mapbase:25 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:25 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::addr#0 ] { }  ) always clobbers reg byte a 
Statement [145] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 [ ] ( vera_layer_set_mapbase:23 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:23 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  vera_layer_set_mapbase:25 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_set_mapbase:25 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift conio_x16_init::line#0 ] { }  vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_mapbase:281 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [148] if(gotoxy::y#3<=conio_screen_height) goto gotoxy::@4 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#3 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#3 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#3 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#3 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#3 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#3 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [151] if(0<conio_screen_width) goto gotoxy::@2 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [153] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a reg byte y 
Statement [154] conio_cursor_y[conio_screen_layer] = gotoxy::y#4 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::y#4 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a reg byte y 
Statement [155] gotoxy::$6 = (unsigned int)gotoxy::y#4 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::$6 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [156] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a reg byte y 
Statement [157] gotoxy::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift gotoxy::line_offset#0 gotoxy::$5 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [158] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] ( gotoxy:30 [ conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  conio_x16_init:8::gotoxy:30 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#1 = gotoxy::y#3 conio_x16_init::line#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::gotoxy:306 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_height conio_rowskip conio_screen_width conio_screen_height conio_screen_layer conio_rowshift ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte a 
Statement [161] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 [ vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$3 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [162] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] [ vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [163] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C [ vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a reg byte y 
Statement [165] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 [ vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::layer#2 vera_layer_get_color::$1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [166] vera_layer_get_color::return#1 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] [ vera_layer_get_color::return#1 ] ( main:10::printf_str:72::cputc:224::vera_layer_get_color:35 [ main::SPRITE_ATTR printf_str::s#0 conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 CONIO_SCREEN_BANK#11 cputc::c#0 vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#0 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#3 } }  main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334::vera_layer_get_color:359 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer vera_layer_get_color::return#1 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [170] cputln::$2 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::$2 ] { }  ) always clobbers reg byte a 
Statement [171] cputln::temp#0 = conio_line_text[cputln::$2] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#0 ] { }  ) always clobbers reg byte a 
Statement [172] cputln::temp#1 = cputln::temp#0 + conio_rowskip [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 ] { }  ) always clobbers reg byte a 
Statement [173] cputln::$3 = conio_screen_layer << 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 cputln::temp#1 cputln::$3 ] { }  ) always clobbers reg byte a 
Statement [174] conio_line_text[cputln::$3] = cputln::temp#1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a 
Statement [175] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [176] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte x 
Statement [180] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 << 1 [ vera_layer_set_text_color_mode::$0 ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR vera_layer_set_text_color_mode::$0 ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::$0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::$0 ] { }  ) always clobbers reg byte a 
Statement [181] vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0] [ vera_layer_set_text_color_mode::addr#0 ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR vera_layer_set_text_color_mode::addr#0 ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a 
Statement [182] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C [ vera_layer_set_text_color_mode::addr#0 ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR vera_layer_set_text_color_mode::addr#0 ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_text_color_mode::addr#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [183] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 [ ] ( main:10::vera_layer_set_text_color_mode:66 [ conio_screen_width conio_screen_height main::SPRITE_ATTR ] { }  vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_set_text_color_mode:89 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [185] clrscr::line_text#0 = (char *)CONIO_SCREEN_TEXT#16 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 ] { { vera_layer_get_backcolor::layer#0 = conio_screen_layer } { vera_layer_get_backcolor::return#0 = vera_layer_get_backcolor::return#2 } }  ) always clobbers reg byte a 
Statement [190] clrscr::$1 = clrscr::$0 << 4 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 clrscr::$1 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::line_text#0 clrscr::$1 ] { { vera_layer_get_textcolor::layer#0 = conio_screen_layer } { vera_layer_get_textcolor::return#0 = vera_layer_get_textcolor::return#2 } }  ) always clobbers reg byte a 
Statement [197] if(clrscr::l#2<conio_height) goto clrscr::@2 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  ) always clobbers reg byte a 
Statement [198] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip ] { }  ) always clobbers reg byte a reg byte y 
Statement [199] conio_cursor_y[conio_screen_layer] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip ] { }  ) always clobbers reg byte a reg byte y 
Statement [200] clrscr::$9 = conio_screen_layer << 1 [ conio_screen_layer conio_width conio_height conio_rowskip clrscr::$9 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip clrscr::$9 ] { }  ) always clobbers reg byte a 
Statement [201] conio_line_text[clrscr::$9] = 0 [ conio_screen_layer conio_width conio_height conio_rowskip ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip ] { }  ) always clobbers reg byte a 
Statement [203] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 ] { }  ) always clobbers reg byte a 
Statement [208] clrscr::$7 = CONIO_SCREEN_BANK#14 | VERA_INC_1 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::$7 ] { }  ) always clobbers reg byte a 
Statement [211] if(clrscr::c#2<conio_width) goto clrscr::@5 [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [212] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#1 ] { }  ) always clobbers reg byte a 
Statement [214] *VERA_DATA0 = ' ' [ conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] ( main:10::clrscr:70 [ conio_screen_width conio_screen_height conio_rowshift main::SPRITE_ATTR conio_screen_layer conio_width conio_height conio_rowskip CONIO_SCREEN_BANK#14 clrscr::color#0 clrscr::l#2 clrscr::line_text#2 clrscr::c#2 ] { }  ) always clobbers reg byte a 
Statement [219] printf_str::c#1 = *printf_str::s#2 [ conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip printf_str::s#2 printf_str::c#1 ] ( main:10::printf_str:72 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_screen_layer conio_width conio_height conio_rowshift conio_rowskip printf_str::s#2 printf_str::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement sideeffect stackpullbytes(1) always clobbers reg byte a 
Statement [226] setnam::filename = main::filename [ setnam::filename ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR setnam::filename ] { }  ) always clobbers reg byte a 
Statement [228] setlfs::device = load_to_bank::device#0 [ setlfs::device ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR setlfs::device ] { }  ) always clobbers reg byte a 
Statement [230] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = load_to_bank::bank#0 [ ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR ] { }  ) always clobbers reg byte a 
Statement [231] load::address = (char *)0+$a000 [ load::address ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR load::address ] { }  ) always clobbers reg byte a 
Statement [232] load::verify = 0 [ load::address load::verify ] ( main:10::load_to_bank:74 [ main::SPRITE_ATTR load::address load::verify ] { }  ) always clobbers reg byte a 
Statement [236] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memcpy_bank_to_vram::vdest#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::vdest#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::vdest#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  ) always clobbers reg byte a 
Statement [243] *VERA_ADDRX_H = *VERA_ADDRX_H | VERA_INC_1 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::num#2 ] { }  ) always clobbers reg byte a 
Statement [244] memcpy_bank_to_vram::end#0 = memcpy_bank_to_vram::beg#0 + memcpy_bank_to_vram::num#2 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 ] { }  ) always clobbers reg byte a 
Statement [246] memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 ] { }  ) always clobbers reg byte a 
Statement [248] memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 memcpy_bank_to_vram::$7 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 memcpy_bank_to_vram::$7 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::$5 memcpy_bank_to_vram::$7 ] { }  ) always clobbers reg byte a 
Statement [250] memcpy_bank_to_vram::$9 = word0  memcpy_bank_to_vram::beg#0 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::$9 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::$9 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::$9 ] { }  ) always clobbers reg byte a 
Statement [251] memcpy_bank_to_vram::addr#0 = memcpy_bank_to_vram::$9 & $1fff [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#0 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#0 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#0 ] { }  ) always clobbers reg byte a 
Statement [252] memcpy_bank_to_vram::addr#1 = (char *)memcpy_bank_to_vram::addr#0 + $a000 [ memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#1 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#1 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::addr#1 ] { }  ) always clobbers reg byte a 
Statement [255] if(memcpy_bank_to_vram::pos#2<memcpy_bank_to_vram::end#0) goto memcpy_bank_to_vram::@2 [ memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  ) always clobbers reg byte a 
Statement [257] if(memcpy_bank_to_vram::addr#4!=$c000) goto memcpy_bank_to_vram::@3 [ memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::bank#2 ] { }  ) always clobbers reg byte a 
Statement [261] *VERA_DATA0 = *memcpy_bank_to_vram::addr#5 [ memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::addr#5 ] ( main:10::memcpy_bank_to_vram:76 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::addr#5 ] { }  main:10::memcpy_bank_to_vram:78 [ main::SPRITE_ATTR memcpy_bank_to_vram::end#0 memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::addr#5 ] { }  ) always clobbers reg byte a reg byte y 
Statement [264] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [265] *VERA_ADDRX_L = 0 [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [266] *VERA_ADDRX_M = byte1 memcpy_to_vram::vdest#0 [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [267] *VERA_ADDRX_H = VERA_INC_1|memcpy_to_vram::vbank#0 [ ] ( main:10::memcpy_to_vram:82 [ ] { }  ) always clobbers reg byte a 
Statement [269] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2 [ memcpy_to_vram::s#2 ] ( main:10::memcpy_to_vram:82 [ memcpy_to_vram::s#2 ] { }  ) always clobbers reg byte a 
Statement [271] *VERA_DATA0 = *memcpy_to_vram::s#2 [ memcpy_to_vram::s#2 ] ( main:10::memcpy_to_vram:82 [ memcpy_to_vram::s#2 ] { }  ) always clobbers reg byte a reg byte y 
Statement [274] *(vera_layer_rowshift+vera_layer_mode_text::layer#0) = 8 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [275] *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = $100 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [278] *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = 0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [279] *(vera_mapbase_bank+vera_layer_mode_text::layer#0) = 0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [280] *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::mapbase_address#0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [282] *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = word0 vera_layer_mode_text::tilebase_address#0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [283] *(vera_tilebase_bank+vera_layer_mode_text::layer#0) = 0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [284] *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::tilebase_address#0 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a 
Statement [290] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 [ vera_layer_get_mapbase_offset::$0 ] ( screenlayer:17::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_mapbase_offset:104 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:10::screenlayer:68::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::$0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [291] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] [ vera_layer_get_mapbase_offset::return#0 ] ( screenlayer:17::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_mapbase_offset:104 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  main:10::screenlayer:68::vera_layer_get_mapbase_offset:104 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer CONIO_SCREEN_BANK#14 vera_layer_get_mapbase_offset::return#0 ] { { vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer } { vera_layer_get_mapbase_offset::return#0 = vera_layer_get_mapbase_offset::return#2 } }  ) always clobbers reg byte a 
Statement [295] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 [ vera_layer_get_rowskip::$0 ] ( screenlayer:17::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_rowskip:123 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:10::screenlayer:68::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::$0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [296] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] [ vera_layer_get_rowskip::return#0 ] ( screenlayer:17::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  conio_x16_init:8::screenlayer:17::vera_layer_get_rowskip:123 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  main:10::screenlayer:68::vera_layer_get_rowskip:123 [ conio_screen_width conio_screen_height main::SPRITE_ATTR conio_screen_layer conio_width conio_rowshift CONIO_SCREEN_BANK#14 CONIO_SCREEN_TEXT#16 vera_layer_get_rowskip::return#0 ] { { vera_layer_get_rowskip::layer#0 = conio_screen_layer } { vera_layer_get_rowskip::return#0 = vera_layer_get_rowskip::return#2 } }  ) always clobbers reg byte a 
Statement [298] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [299] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 ] { }  ) always clobbers reg byte a reg byte y 
Statement [300] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip ] { }  ) always clobbers reg byte a reg byte y 
Statement [305] gotoxy::y#2 = conio_screen_height - 1 [ conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] { { gotoxy::y#2 = gotoxy::y#3 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_width conio_screen_height conio_screen_layer conio_height conio_rowshift conio_rowskip gotoxy::y#2 ] { { gotoxy::y#2 = gotoxy::y#3 } }  ) always clobbers reg byte x 
Statement [311] strlen::str#0 = setnam::filename [ setnam::filename strlen::str#0 ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename strlen::str#0 ] { { strlen::str#0 = setnam::filename } { strlen::return#0 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [313] strlen::return#0 = strlen::len#2 [ setnam::filename strlen::return#0 ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename strlen::return#0 ] { { strlen::str#0 = setnam::filename } { strlen::return#0 = strlen::len#2 } }  ) always clobbers reg byte a 
Statement [314] setnam::$0 = strlen::return#0 [ setnam::filename setnam::$0 ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename setnam::$0 ] { }  ) always clobbers reg byte a 
Statement [315] setnam::filename_len = (char)setnam::$0 [ setnam::filename setnam::filename_len ] ( main:10::load_to_bank:74::setnam:227 [ main::SPRITE_ATTR setnam::filename setnam::filename_len ] { }  ) always clobbers reg byte a 
Statement asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  } always clobbers reg byte a reg byte x reg byte y 
Statement asm { ldxdevice lda#1 ldy#0 jsr$ffba  } always clobbers reg byte a reg byte x reg byte y 
Statement [320] load::status = 0 [ load::address load::verify load::status ] ( main:10::load_to_bank:74::load:233 [ main::SPRITE_ATTR load::address load::verify load::status ] { }  ) always clobbers reg byte a 
Statement asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  } always clobbers reg byte a reg byte x reg byte y 
Statement [323] vera_layer_set_config::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) [ vera_layer_set_config::addr#0 ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_config::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_config::addr#0 ] { }  ) always clobbers reg byte a 
Statement [324] *vera_layer_set_config::addr#0 = vera_layer_mode_tile::config#10 [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_config:277 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [326] vera_layer_set_tilebase::addr#0 = *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER) [ vera_layer_set_tilebase::addr#0 ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::addr#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 vera_layer_set_tilebase::addr#0 ] { }  ) always clobbers reg byte a 
Statement [327] *vera_layer_set_tilebase::addr#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK [ ] ( vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  conio_x16_init:8::vera_layer_mode_text:13::vera_layer_mode_tile:87::vera_layer_set_tilebase:286 [ main::SPRITE_ATTR conio_screen_width conio_screen_height conio_x16_init::line#0 ] { }  ) always clobbers reg byte a reg byte y 
Statement [329] insertup::cy#0 = conio_cursor_y[conio_screen_layer] [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 ] { }  ) always clobbers reg byte y 
Statement [330] insertup::width#0 = conio_screen_width << 1 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 ] { }  ) always clobbers reg byte a 
Statement [337] insertup::line#0 = insertup::$3 << conio_rowshift [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::line#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a reg byte y 
Statement [338] insertup::start#0 = CONIO_SCREEN_TEXT#11 + insertup::line#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [339] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 insertup::start#0 memcpy_in_vram::src#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [340] memcpy_in_vram::dest#0 = (void *)insertup::start#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [341] memcpy_in_vram::num#0 = insertup::width#0 [ conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [346] if(0!=*strlen::str#2) goto strlen::@2 [ strlen::len#2 strlen::str#2 ] ( main:10::load_to_bank:74::setnam:227::strlen:312 [ main::SPRITE_ATTR setnam::filename strlen::len#2 strlen::str#2 ] { { strlen::str#0 = setnam::filename } { strlen::return#0 = strlen::len#2 } }  ) always clobbers reg byte a reg byte y 
Statement [350] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [351] clearline::$5 = conio_screen_layer << 1 [ conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer CONIO_SCREEN_TEXT#11 clearline::$5 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [352] clearline::addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[clearline::$5] [ conio_screen_width conio_screen_layer clearline::addr#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::addr#0 ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [357] *VERA_ADDRX_H = VERA_INC_1 [ conio_screen_width conio_screen_layer ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { { vera_layer_get_color::layer#1 = vera_layer_get_color::layer#2 conio_screen_layer } { vera_layer_get_color::return#2 = vera_layer_get_color::return#4 } }  ) always clobbers reg byte a 
Statement [363] if(clearline::c#2<conio_screen_width) goto clearline::@2 [ conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  ) always clobbers reg byte a 
Statement [364] conio_cursor_x[conio_screen_layer] = 0 [ conio_screen_width conio_screen_layer ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer ] { }  ) always clobbers reg byte a reg byte y 
Statement [366] *VERA_DATA0 = ' ' [ conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::clearline:334 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_rowshift conio_rowskip conio_screen_width conio_screen_layer clearline::color#0 clearline::c#2 ] { }  ) always clobbers reg byte a 
Statement [369] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL [ memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::src#0 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [374] *VERA_ADDRX_H = VERA_INC_1 [ memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [375] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL [ memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::dest#0 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [380] *VERA_ADDRX_H = VERA_INC_1 [ memcpy_in_vram::num#0 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [382] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2 [ memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Statement [384] *VERA_DATA1 = *VERA_DATA0 [ memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] ( main:10::printf_str:72::cputc:224::cputln:58::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:62::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  main:10::printf_str:72::cputc:224::cputln:64::cscroll:177::insertup:304::memcpy_in_vram:342 [ main::SPRITE_ATTR printf_str::s#0 conio_width conio_screen_height conio_height conio_screen_width conio_screen_layer conio_rowshift conio_rowskip CONIO_SCREEN_TEXT#11 insertup::cy#0 insertup::width#0 insertup::i#2 memcpy_in_vram::num#0 memcpy_in_vram::i#2 ] { { memcpy_in_vram::num#0 = insertup::width#0 } }  ) always clobbers reg byte a 
Potential registers zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] : zp[1]:199 , reg byte x , 
Potential registers zp[2]:39 [ CONIO_SCREEN_TEXT#11 ] : zp[2]:39 , 
Potential registers zp[1]:125 [ CONIO_SCREEN_BANK#11 ] : zp[1]:125 , 
Potential registers zp[1]:81 [ vera_layer_set_mapbase::layer#3 ] : zp[1]:81 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:91 [ vera_layer_set_mapbase::mapbase#3 ] : zp[1]:91 , reg byte x , reg byte y , 
Potential registers zp[1]:44 [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ] : zp[1]:44 , reg byte x , 
Potential registers zp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] : zp[1]:27 , reg byte x , 
Potential registers zp[1]:12 [ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ] : zp[1]:12 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:119 [ vera_layer_set_text_color_mode::layer#3 ] : zp[1]:119 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:98 [ clrscr::l#2 clrscr::l#1 ] : zp[1]:98 , reg byte x , reg byte y , 
Potential registers zp[2]:111 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] : zp[2]:111 , 
Potential registers zp[1]:62 [ clrscr::c#2 clrscr::c#1 ] : zp[1]:62 , reg byte x , reg byte y , 
Potential registers zp[2]:107 [ printf_str::s#2 printf_str::s#0 ] : zp[2]:107 , 
Potential registers zp[4]:200 [ memcpy_bank_to_vram::vdest#2 ] : zp[4]:200 , 
Potential registers zp[4]:209 [ memcpy_bank_to_vram::num#2 ] : zp[4]:209 , 
Potential registers zp[4]:94 [ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ] : zp[4]:94 , 
Potential registers zp[1]:88 [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ] : zp[1]:88 , reg byte x , 
Potential registers zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ] : zp[2]:86 , 
Potential registers zp[2]:89 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ] : zp[2]:89 , 
Potential registers zp[1]:13 [ insertup::i#2 insertup::i#1 ] : zp[1]:13 , reg byte x , 
Potential registers zp[2]:51 [ strlen::str#2 strlen::str#0 strlen::str#1 ] : zp[2]:51 , 
Potential registers zp[2]:57 [ strlen::len#2 strlen::len#1 ] : zp[2]:57 , 
Potential registers zp[2]:6 [ clearline::c#2 clearline::c#1 ] : zp[2]:6 , 
Potential registers zp[2]:2 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] : zp[2]:2 , 
Potential registers zp[1]:38 [ conio_screen_width ] : zp[1]:38 , 
Potential registers zp[1]:59 [ conio_screen_height ] : zp[1]:59 , 
Potential registers zp[1]:50 [ conio_screen_layer ] : zp[1]:50 , 
Potential registers zp[2]:135 [ conio_width ] : zp[2]:135 , 
Potential registers zp[2]:79 [ conio_height ] : zp[2]:79 , 
Potential registers zp[1]:47 [ conio_rowshift ] : zp[1]:47 , 
Potential registers zp[2]:48 [ conio_rowskip ] : zp[2]:48 , 
Potential registers zp[1]:109 [ cputc::c#0 ] : zp[1]:109 , reg byte x , 
Potential registers zp[1]:63 [ vera_layer_get_color::return#3 ] : zp[1]:63 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:110 [ cputc::color#0 ] : zp[1]:110 , reg byte x , reg byte y , 
Potential registers zp[1]:64 [ cputc::$15 ] : zp[1]:64 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:82 [ cputc::conio_addr#0 ] : zp[2]:82 , 
Potential registers zp[1]:65 [ cputc::$2 ] : zp[1]:65 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:84 [ cputc::conio_addr#1 ] : zp[2]:84 , 
Potential registers zp[1]:66 [ cputc::$4 ] : zp[1]:66 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:67 [ cputc::$5 ] : zp[1]:67 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:68 [ cputc::$6 ] : zp[1]:68 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:69 [ cputc::scroll_enable#0 ] : zp[1]:69 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:70 [ cputc::$16 ] : zp[2]:70 , 
Potential registers zp[1]:137 [ screensize::hscale#0 ] : zp[1]:137 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:138 [ screensize::$1 ] : zp[1]:138 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:139 [ screensize::vscale#0 ] : zp[1]:139 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:140 [ screensize::$3 ] : zp[1]:140 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:113 [ vera_layer_get_mapbase_bank::layer#0 ] : zp[1]:113 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:141 [ vera_layer_get_mapbase_bank::return#2 ] : zp[1]:141 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:208 [ CONIO_SCREEN_BANK#14 ] : zp[1]:208 , reg byte x , 
Potential registers zp[1]:114 [ vera_layer_get_mapbase_offset::layer#0 ] : zp[1]:114 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:142 [ vera_layer_get_mapbase_offset::return#2 ] : zp[2]:142 , 
Potential registers zp[2]:213 [ CONIO_SCREEN_TEXT#16 ] : zp[2]:213 , 
Potential registers zp[1]:144 [ screenlayer::vera_layer_get_width1_layer#0 ] : zp[1]:144 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:145 [ screenlayer::vera_layer_get_width1_$2 ] : zp[1]:145 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:146 [ screenlayer::vera_layer_get_width1_config#0 ] : zp[2]:146 , 
Potential registers zp[1]:148 [ screenlayer::vera_layer_get_width1_$0 ] : zp[1]:148 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:149 [ screenlayer::vera_layer_get_width1_$1 ] : zp[1]:149 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:150 [ screenlayer::vera_layer_get_width1_$3 ] : zp[1]:150 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 ] : zp[2]:151 , 
Potential registers zp[2]:153 [ screenlayer::vera_layer_get_width1_return#1 ] : zp[2]:153 , 
Potential registers zp[2]:155 [ screenlayer::$2 ] : zp[2]:155 , 
Potential registers zp[1]:115 [ vera_layer_get_rowshift::layer#0 ] : zp[1]:115 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:157 [ vera_layer_get_rowshift::return#2 ] : zp[1]:157 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:158 [ screenlayer::$3 ] : zp[1]:158 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:116 [ vera_layer_get_rowskip::layer#0 ] : zp[1]:116 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:159 [ vera_layer_get_rowskip::return#2 ] : zp[2]:159 , 
Potential registers zp[2]:161 [ screenlayer::$4 ] : zp[2]:161 , 
Potential registers zp[1]:163 [ screenlayer::vera_layer_get_height1_layer#0 ] : zp[1]:163 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:164 [ screenlayer::vera_layer_get_height1_$2 ] : zp[1]:164 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:165 [ screenlayer::vera_layer_get_height1_config#0 ] : zp[2]:165 , 
Potential registers zp[1]:167 [ screenlayer::vera_layer_get_height1_$0 ] : zp[1]:167 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:168 [ screenlayer::vera_layer_get_height1_$1 ] : zp[1]:168 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:169 [ screenlayer::vera_layer_get_height1_$3 ] : zp[1]:169 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 ] : zp[2]:170 , 
Potential registers zp[2]:172 [ screenlayer::vera_layer_get_height1_return#1 ] : zp[2]:172 , 
Potential registers zp[2]:174 [ screenlayer::$5 ] : zp[2]:174 , 
Potential registers zp[1]:72 [ vera_layer_set_mapbase::$0 ] : zp[1]:72 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:73 [ vera_layer_set_mapbase::addr#0 ] : zp[2]:73 , 
Potential registers zp[2]:41 [ gotoxy::$6 ] : zp[2]:41 , 
Potential registers zp[2]:45 [ gotoxy::line_offset#0 ] : zp[2]:45 , 
Potential registers zp[1]:43 [ gotoxy::$5 ] : zp[1]:43 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:14 [ vera_layer_get_color::$3 ] : zp[1]:14 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:15 [ vera_layer_get_color::addr#0 ] : zp[2]:15 , 
Potential registers zp[1]:17 [ vera_layer_get_color::$0 ] : zp[1]:17 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:18 [ vera_layer_get_color::$1 ] : zp[1]:18 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:53 [ cputln::$2 ] : zp[1]:53 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:54 [ cputln::temp#0 ] : zp[2]:54 , 
Potential registers zp[2]:60 [ cputln::temp#1 ] : zp[2]:60 , 
Potential registers zp[1]:56 [ cputln::$3 ] : zp[1]:56 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:99 [ vera_layer_set_text_color_mode::$0 ] : zp[1]:99 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:92 [ vera_layer_set_text_color_mode::addr#0 ] : zp[2]:92 , 
Potential registers zp[1]:117 [ vera_layer_get_backcolor::layer#0 ] : zp[1]:117 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:176 [ vera_layer_get_backcolor::return#2 ] : zp[1]:176 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:177 [ clrscr::$0 ] : zp[1]:177 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:205 [ clrscr::$1 ] : zp[1]:205 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:118 [ vera_layer_get_textcolor::layer#0 ] : zp[1]:118 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:178 [ vera_layer_get_textcolor::return#2 ] : zp[1]:178 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:179 [ clrscr::$2 ] : zp[1]:179 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:126 [ clrscr::color#0 ] : zp[1]:126 , reg byte x , reg byte y , 
Potential registers zp[1]:180 [ clrscr::$9 ] : zp[1]:180 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:100 [ clrscr::$5 ] : zp[1]:100 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:101 [ clrscr::$6 ] : zp[1]:101 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:102 [ clrscr::$7 ] : zp[1]:102 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:120 [ printf_str::c#1 ] : zp[1]:120 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:189 [ setnam::filename ] : zp[2]:189 , 
Potential registers zp[1]:191 [ setlfs::device ] : zp[1]:191 , 
Potential registers zp[2]:206 [ load::address ] : zp[2]:206 , 
Potential registers zp[1]:204 [ load::verify ] : zp[1]:204 , 
Potential registers zp[1]:181 [ memcpy_bank_to_vram::$0 ] : zp[1]:181 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:182 [ memcpy_bank_to_vram::$1 ] : zp[1]:182 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:183 [ memcpy_bank_to_vram::$2 ] : zp[1]:183 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[4]:195 [ memcpy_bank_to_vram::end#0 ] : zp[4]:195 , 
Potential registers zp[1]:184 [ memcpy_bank_to_vram::$4 ] : zp[1]:184 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:194 [ memcpy_bank_to_vram::$5 ] : zp[1]:194 , reg byte x , reg byte y , 
Potential registers zp[1]:185 [ memcpy_bank_to_vram::$6 ] : zp[1]:185 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:186 [ memcpy_bank_to_vram::$7 ] : zp[1]:186 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:187 [ memcpy_bank_to_vram::$9 ] : zp[2]:187 , 
Potential registers zp[2]:192 [ memcpy_bank_to_vram::addr#0 ] : zp[2]:192 , 
Potential registers zp[1]:127 [ vera_layer_get_mapbase_bank::return#0 ] : zp[1]:127 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:103 [ vera_layer_get_mapbase_offset::$0 ] : zp[1]:103 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:128 [ vera_layer_get_mapbase_offset::return#0 ] : zp[2]:128 , 
Potential registers zp[1]:130 [ vera_layer_get_rowshift::return#0 ] : zp[1]:130 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:104 [ vera_layer_get_rowskip::$0 ] : zp[1]:104 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:131 [ vera_layer_get_rowskip::return#0 ] : zp[2]:131 , 
Potential registers zp[1]:133 [ vera_layer_get_backcolor::return#0 ] : zp[1]:133 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:134 [ vera_layer_get_textcolor::return#0 ] : zp[1]:134 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:105 [ strlen::return#0 ] : zp[2]:105 , 
Potential registers zp[2]:121 [ setnam::$0 ] : zp[2]:121 , 
Potential registers zp[1]:123 [ setnam::filename_len ] : zp[1]:123 , 
Potential registers zp[1]:124 [ load::status ] : zp[1]:124 , 
Potential registers zp[2]:75 [ vera_layer_set_config::addr#0 ] : zp[2]:75 , 
Potential registers zp[2]:77 [ vera_layer_set_tilebase::addr#0 ] : zp[2]:77 , 
Potential registers zp[1]:37 [ insertup::cy#0 ] : zp[1]:37 , reg byte x , 
Potential registers zp[1]:36 [ insertup::width#0 ] : zp[1]:36 , reg byte x , 
Potential registers zp[1]:19 [ insertup::$3 ] : zp[1]:19 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:20 [ insertup::line#0 ] : zp[2]:20 , 
Potential registers zp[2]:25 [ insertup::start#0 ] : zp[2]:25 , 
Potential registers zp[2]:32 [ memcpy_in_vram::src#0 ] : zp[2]:32 , 
Potential registers zp[2]:22 [ memcpy_in_vram::dest#0 ] : zp[2]:22 , 
Potential registers zp[2]:4 [ memcpy_in_vram::num#0 ] : zp[2]:4 , 
Potential registers zp[1]:28 [ clearline::$5 ] : zp[1]:28 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:34 [ clearline::addr#0 ] : zp[2]:34 , 
Potential registers zp[1]:29 [ clearline::$1 ] : zp[1]:29 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:30 [ clearline::$2 ] : zp[1]:30 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:31 [ vera_layer_get_color::return#4 ] : zp[1]:31 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:24 [ clearline::color#0 ] : zp[1]:24 , reg byte x , reg byte y , 
Potential registers zp[1]:8 [ memcpy_in_vram::$0 ] : zp[1]:8 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:9 [ memcpy_in_vram::$1 ] : zp[1]:9 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:10 [ memcpy_in_vram::$3 ] : zp[1]:10 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:11 [ memcpy_in_vram::$4 ] : zp[1]:11 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[8]:215 [ main::SPRITE_ATTR ] : zp[8]:215 , 

REGISTER UPLIFT SCOPES
Uplift Scope [memcpy_in_vram] 30,000,000,000,003: zp[2]:2 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] 588,294,117,647.18: zp[2]:4 [ memcpy_in_vram::num#0 ] 20,000,000,002: zp[1]:8 [ memcpy_in_vram::$0 ] 20,000,000,002: zp[1]:9 [ memcpy_in_vram::$1 ] 20,000,000,002: zp[1]:10 [ memcpy_in_vram::$3 ] 20,000,000,002: zp[1]:11 [ memcpy_in_vram::$4 ] 1,909,090,909.36: zp[2]:22 [ memcpy_in_vram::dest#0 ] 166,666,666.83: zp[2]:32 [ memcpy_in_vram::src#0 ] 
Uplift Scope [clearline] 27,500,000,002.75: zp[2]:6 [ clearline::c#2 clearline::c#1 ] 1,683,333,333.67: zp[1]:24 [ clearline::color#0 ] 200,000,002: zp[1]:28 [ clearline::$5 ] 200,000,002: zp[1]:29 [ clearline::$1 ] 200,000,002: zp[1]:30 [ clearline::$2 ] 100,000,001: zp[2]:34 [ clearline::addr#0 ] 
Uplift Scope [vera_layer_get_color] 4,525,002,505: zp[1]:12 [ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ] 2,000,000,002: zp[1]:14 [ vera_layer_get_color::$3 ] 2,000,000,002: zp[2]:15 [ vera_layer_get_color::addr#0 ] 2,000,000,002: zp[1]:17 [ vera_layer_get_color::$0 ] 2,000,000,002: zp[1]:18 [ vera_layer_get_color::$1 ] 883,355,005: zp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] 200,000,002: zp[1]:31 [ vera_layer_get_color::return#4 ] 20,002: zp[1]:63 [ vera_layer_get_color::return#3 ] 
Uplift Scope [insertup] 2,444,444,446.89: zp[1]:13 [ insertup::i#2 insertup::i#1 ] 2,000,000,002: zp[1]:19 [ insertup::$3 ] 2,000,000,002: zp[2]:20 [ insertup::line#0 ] 1,000,000,001: zp[2]:25 [ insertup::start#0 ] 91,818,182: zp[1]:36 [ insertup::width#0 ] 84,166,666.83: zp[1]:37 [ insertup::cy#0 ] 
Uplift Scope [] 70,563,450.75: zp[1]:38 [ conio_screen_width ] 20,370,555.61: zp[2]:39 [ CONIO_SCREEN_TEXT#11 ] 8,347,108.31: zp[1]:47 [ conio_rowshift ] 8,197,550.05: zp[2]:48 [ conio_rowskip ] 1,761,903.77: zp[1]:50 [ conio_screen_layer ] 112,149.79: zp[1]:59 [ conio_screen_height ] 10,320.67: zp[2]:79 [ conio_height ] 625.06: zp[1]:125 [ CONIO_SCREEN_BANK#11 ] 203.08: zp[2]:135 [ conio_width ] 16.95: zp[1]:208 [ CONIO_SCREEN_BANK#14 ] 2.97: zp[2]:213 [ CONIO_SCREEN_TEXT#16 ] 
Uplift Scope [gotoxy] 20,000,002: zp[2]:41 [ gotoxy::$6 ] 20,000,002: zp[1]:43 [ gotoxy::$5 ] 13,000,029.07: zp[1]:44 [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ] 10,000,001: zp[2]:45 [ gotoxy::line_offset#0 ] 
Uplift Scope [cputln] 200,002: zp[1]:53 [ cputln::$2 ] 200,002: zp[2]:54 [ cputln::temp#0 ] 200,002: zp[1]:56 [ cputln::$3 ] 100,001: zp[2]:60 [ cputln::temp#1 ] 
Uplift Scope [strlen] 308,837.67: zp[2]:51 [ strlen::str#2 strlen::str#0 strlen::str#1 ] 150,251.75: zp[2]:57 [ strlen::len#2 strlen::len#1 ] 2,002: zp[2]:105 [ strlen::return#0 ] 
Uplift Scope [cputc] 20,002: zp[1]:64 [ cputc::$15 ] 20,002: zp[1]:65 [ cputc::$2 ] 20,002: zp[1]:66 [ cputc::$4 ] 20,002: zp[1]:67 [ cputc::$5 ] 20,002: zp[1]:68 [ cputc::$6 ] 20,002: zp[1]:69 [ cputc::scroll_enable#0 ] 20,002: zp[2]:70 [ cputc::$16 ] 10,001: zp[2]:82 [ cputc::conio_addr#0 ] 6,000.6: zp[2]:84 [ cputc::conio_addr#1 ] 1,764.88: zp[1]:109 [ cputc::c#0 ] 1,428.71: zp[1]:110 [ cputc::color#0 ] 
Uplift Scope [vera_layer_set_mapbase] 20,002: zp[1]:72 [ vera_layer_set_mapbase::$0 ] 20,002: zp[2]:73 [ vera_layer_set_mapbase::addr#0 ] 10,001: zp[1]:81 [ vera_layer_set_mapbase::layer#3 ] 3,333.67: zp[1]:91 [ vera_layer_set_mapbase::mapbase#3 ] 
Uplift Scope [clrscr] 27,502.75: zp[1]:62 [ clrscr::c#2 clrscr::c#1 ] 2,202.2: zp[1]:98 [ clrscr::l#2 clrscr::l#1 ] 2,002: zp[1]:100 [ clrscr::$5 ] 2,002: zp[1]:101 [ clrscr::$6 ] 2,002: zp[1]:102 [ clrscr::$7 ] 1,312.58: zp[2]:111 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] 594.24: zp[1]:126 [ clrscr::color#0 ] 202: zp[1]:177 [ clrscr::$0 ] 202: zp[1]:179 [ clrscr::$2 ] 202: zp[1]:180 [ clrscr::$9 ] 40.4: zp[1]:205 [ clrscr::$1 ] 
Uplift Scope [vera_layer_set_config] 20,002: zp[2]:75 [ vera_layer_set_config::addr#0 ] 
Uplift Scope [vera_layer_set_tilebase] 20,002: zp[2]:77 [ vera_layer_set_tilebase::addr#0 ] 
Uplift Scope [memcpy_bank_to_vram] 3,638.17: zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ] 3,347.52: zp[1]:88 [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ] 2,416.58: zp[4]:94 [ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ] 202: zp[1]:181 [ memcpy_bank_to_vram::$0 ] 202: zp[1]:182 [ memcpy_bank_to_vram::$1 ] 202: zp[1]:183 [ memcpy_bank_to_vram::$2 ] 202: zp[1]:184 [ memcpy_bank_to_vram::$4 ] 202: zp[1]:185 [ memcpy_bank_to_vram::$6 ] 202: zp[1]:186 [ memcpy_bank_to_vram::$7 ] 202: zp[2]:187 [ memcpy_bank_to_vram::$9 ] 101: zp[2]:192 [ memcpy_bank_to_vram::addr#0 ] 67.33: zp[1]:194 [ memcpy_bank_to_vram::$5 ] 58: zp[4]:195 [ memcpy_bank_to_vram::end#0 ] 50.5: zp[4]:200 [ memcpy_bank_to_vram::vdest#2 ] 11.22: zp[4]:209 [ memcpy_bank_to_vram::num#2 ] 
Uplift Scope [vera_layer_set_text_color_mode] 2,502.5: zp[2]:92 [ vera_layer_set_text_color_mode::addr#0 ] 2,002: zp[1]:99 [ vera_layer_set_text_color_mode::$0 ] 1,001: zp[1]:119 [ vera_layer_set_text_color_mode::layer#3 ] 
Uplift Scope [screenlayer] 202: zp[1]:144 [ screenlayer::vera_layer_get_width1_layer#0 ] 202: zp[1]:145 [ screenlayer::vera_layer_get_width1_$2 ] 202: zp[2]:146 [ screenlayer::vera_layer_get_width1_config#0 ] 202: zp[1]:148 [ screenlayer::vera_layer_get_width1_$0 ] 202: zp[1]:149 [ screenlayer::vera_layer_get_width1_$1 ] 202: zp[1]:150 [ screenlayer::vera_layer_get_width1_$3 ] 202: zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 ] 202: zp[2]:153 [ screenlayer::vera_layer_get_width1_return#1 ] 202: zp[2]:155 [ screenlayer::$2 ] 202: zp[1]:158 [ screenlayer::$3 ] 202: zp[2]:161 [ screenlayer::$4 ] 202: zp[1]:163 [ screenlayer::vera_layer_get_height1_layer#0 ] 202: zp[1]:164 [ screenlayer::vera_layer_get_height1_$2 ] 202: zp[2]:165 [ screenlayer::vera_layer_get_height1_config#0 ] 202: zp[1]:167 [ screenlayer::vera_layer_get_height1_$0 ] 202: zp[1]:168 [ screenlayer::vera_layer_get_height1_$1 ] 202: zp[1]:169 [ screenlayer::vera_layer_get_height1_$3 ] 202: zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 ] 202: zp[2]:172 [ screenlayer::vera_layer_get_height1_return#1 ] 202: zp[2]:174 [ screenlayer::$5 ] 
Uplift Scope [vera_layer_get_mapbase_offset] 2,002: zp[1]:103 [ vera_layer_get_mapbase_offset::$0 ] 1,102: zp[1]:114 [ vera_layer_get_mapbase_offset::layer#0 ] 367.33: zp[2]:128 [ vera_layer_get_mapbase_offset::return#0 ] 202: zp[2]:142 [ vera_layer_get_mapbase_offset::return#2 ] 
Uplift Scope [vera_layer_get_rowskip] 2,002: zp[1]:104 [ vera_layer_get_rowskip::$0 ] 1,102: zp[1]:116 [ vera_layer_get_rowskip::layer#0 ] 367.33: zp[2]:131 [ vera_layer_get_rowskip::return#0 ] 202: zp[2]:159 [ vera_layer_get_rowskip::return#2 ] 
Uplift Scope [memcpy_to_vram] 3,336.67: zp[2]:89 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ] 
Uplift Scope [printf_str] 1,901.9: zp[2]:107 [ printf_str::s#2 printf_str::s#0 ] 1,001: zp[1]:120 [ printf_str::c#1 ] 
Uplift Scope [setnam] 1,001: zp[2]:121 [ setnam::$0 ] 1,001: zp[1]:123 [ setnam::filename_len ] 183.67: zp[2]:189 [ setnam::filename ] 
Uplift Scope [vera_layer_get_mapbase_bank] 1,102: zp[1]:113 [ vera_layer_get_mapbase_bank::layer#0 ] 367.33: zp[1]:127 [ vera_layer_get_mapbase_bank::return#0 ] 202: zp[1]:141 [ vera_layer_get_mapbase_bank::return#2 ] 
Uplift Scope [vera_layer_get_textcolor] 1,102: zp[1]:118 [ vera_layer_get_textcolor::layer#0 ] 367.33: zp[1]:134 [ vera_layer_get_textcolor::return#0 ] 202: zp[1]:178 [ vera_layer_get_textcolor::return#2 ] 
Uplift Scope [vera_layer_get_backcolor] 1,102: zp[1]:117 [ vera_layer_get_backcolor::layer#0 ] 367.33: zp[1]:133 [ vera_layer_get_backcolor::return#0 ] 202: zp[1]:176 [ vera_layer_get_backcolor::return#2 ] 
Uplift Scope [vera_layer_get_rowshift] 1,102: zp[1]:115 [ vera_layer_get_rowshift::layer#0 ] 367.33: zp[1]:130 [ vera_layer_get_rowshift::return#0 ] 202: zp[1]:157 [ vera_layer_get_rowshift::return#2 ] 
Uplift Scope [load] 1,001: zp[1]:124 [ load::status ] 50.5: zp[1]:204 [ load::verify ] 33.67: zp[2]:206 [ load::address ] 
Uplift Scope [screensize] 202: zp[1]:137 [ screensize::hscale#0 ] 202: zp[1]:138 [ screensize::$1 ] 202: zp[1]:139 [ screensize::vscale#0 ] 202: zp[1]:140 [ screensize::$3 ] 
Uplift Scope [setlfs] 101: zp[1]:191 [ setlfs::device ] 
Uplift Scope [conio_x16_init] 57.2: zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] 
Uplift Scope [VERA_SPRITE] 
Uplift Scope [MOS6522_VIA] 
Uplift Scope [load_to_bank] 
Uplift Scope [vera_layer_set_textcolor] 
Uplift Scope [vera_layer_set_backcolor] 
Uplift Scope [vera_layer_mode_tile] 
Uplift Scope [vera_layer_mode_text] 
Uplift Scope [cscroll] 
Uplift Scope [RADIX] 
Uplift Scope [printf_format_number] 
Uplift Scope [printf_buffer_number] 
Uplift Scope [printf_format_string] 
Uplift Scope [main] 0: zp[8]:215 [ main::SPRITE_ATTR ] 
Uplift Scope [__start] 

Uplifting [memcpy_in_vram] best 90674 combination zp[2]:2 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] zp[2]:4 [ memcpy_in_vram::num#0 ] reg byte a [ memcpy_in_vram::$0 ] reg byte a [ memcpy_in_vram::$1 ] reg byte a [ memcpy_in_vram::$3 ] reg byte a [ memcpy_in_vram::$4 ] zp[2]:22 [ memcpy_in_vram::dest#0 ] zp[2]:32 [ memcpy_in_vram::src#0 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [clearline] best 90355 combination zp[2]:6 [ clearline::c#2 clearline::c#1 ] reg byte x [ clearline::color#0 ] reg byte a [ clearline::$5 ] reg byte a [ clearline::$1 ] reg byte a [ clearline::$2 ] zp[2]:34 [ clearline::addr#0 ] 
Limited combination testing to 100 combinations of 192 possible.
Uplifting [vera_layer_get_color] best 90329 combination reg byte a [ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ] reg byte a [ vera_layer_get_color::$3 ] zp[2]:15 [ vera_layer_get_color::addr#0 ] reg byte a [ vera_layer_get_color::$0 ] reg byte a [ vera_layer_get_color::$1 ] zp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] zp[1]:31 [ vera_layer_get_color::return#4 ] zp[1]:63 [ vera_layer_get_color::return#3 ] 
Limited combination testing to 100 combinations of 8192 possible.
Uplifting [insertup] best 89529 combination reg byte x [ insertup::i#2 insertup::i#1 ] reg byte a [ insertup::$3 ] zp[2]:20 [ insertup::line#0 ] zp[2]:25 [ insertup::start#0 ] zp[1]:36 [ insertup::width#0 ] zp[1]:37 [ insertup::cy#0 ] 
Uplifting [] best 89516 combination zp[1]:38 [ conio_screen_width ] zp[2]:39 [ CONIO_SCREEN_TEXT#11 ] zp[1]:47 [ conio_rowshift ] zp[2]:48 [ conio_rowskip ] zp[1]:50 [ conio_screen_layer ] zp[1]:59 [ conio_screen_height ] zp[2]:79 [ conio_height ] zp[1]:125 [ CONIO_SCREEN_BANK#11 ] zp[2]:135 [ conio_width ] reg byte x [ CONIO_SCREEN_BANK#14 ] zp[2]:213 [ CONIO_SCREEN_TEXT#16 ] 
Uplifting [gotoxy] best 89504 combination zp[2]:41 [ gotoxy::$6 ] reg byte a [ gotoxy::$5 ] reg byte x [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ] zp[2]:45 [ gotoxy::line_offset#0 ] 
Uplifting [cputln] best 89496 combination reg byte a [ cputln::$2 ] zp[2]:54 [ cputln::temp#0 ] reg byte a [ cputln::$3 ] zp[2]:60 [ cputln::temp#1 ] 
Uplifting [strlen] best 89496 combination zp[2]:51 [ strlen::str#2 strlen::str#0 strlen::str#1 ] zp[2]:57 [ strlen::len#2 strlen::len#1 ] zp[2]:105 [ strlen::return#0 ] 
Uplifting [cputc] best 89474 combination reg byte a [ cputc::$15 ] reg byte a [ cputc::$2 ] reg byte a [ cputc::$4 ] reg byte a [ cputc::$5 ] zp[1]:68 [ cputc::$6 ] zp[1]:69 [ cputc::scroll_enable#0 ] zp[2]:70 [ cputc::$16 ] zp[2]:82 [ cputc::conio_addr#0 ] zp[2]:84 [ cputc::conio_addr#1 ] zp[1]:109 [ cputc::c#0 ] zp[1]:110 [ cputc::color#0 ] 
Limited combination testing to 100 combinations of 24576 possible.
Uplifting [vera_layer_set_mapbase] best 89448 combination reg byte a [ vera_layer_set_mapbase::$0 ] zp[2]:73 [ vera_layer_set_mapbase::addr#0 ] reg byte a [ vera_layer_set_mapbase::layer#3 ] reg byte x [ vera_layer_set_mapbase::mapbase#3 ] 
Uplifting [clrscr] best 88428 combination reg byte y [ clrscr::c#2 clrscr::c#1 ] zp[1]:98 [ clrscr::l#2 clrscr::l#1 ] reg byte a [ clrscr::$5 ] reg byte a [ clrscr::$6 ] zp[1]:102 [ clrscr::$7 ] zp[2]:111 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] zp[1]:126 [ clrscr::color#0 ] zp[1]:177 [ clrscr::$0 ] zp[1]:179 [ clrscr::$2 ] zp[1]:180 [ clrscr::$9 ] zp[1]:205 [ clrscr::$1 ] 
Limited combination testing to 100 combinations of 442368 possible.
Uplifting [vera_layer_set_config] best 88428 combination zp[2]:75 [ vera_layer_set_config::addr#0 ] 
Uplifting [vera_layer_set_tilebase] best 88428 combination zp[2]:77 [ vera_layer_set_tilebase::addr#0 ] 
Uplifting [memcpy_bank_to_vram] best 88346 combination zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ] reg byte x [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ] zp[4]:94 [ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ] reg byte a [ memcpy_bank_to_vram::$0 ] reg byte a [ memcpy_bank_to_vram::$1 ] reg byte a [ memcpy_bank_to_vram::$2 ] zp[1]:184 [ memcpy_bank_to_vram::$4 ] zp[1]:185 [ memcpy_bank_to_vram::$6 ] zp[1]:186 [ memcpy_bank_to_vram::$7 ] zp[2]:187 [ memcpy_bank_to_vram::$9 ] zp[2]:192 [ memcpy_bank_to_vram::addr#0 ] zp[1]:194 [ memcpy_bank_to_vram::$5 ] zp[4]:195 [ memcpy_bank_to_vram::end#0 ] zp[4]:200 [ memcpy_bank_to_vram::vdest#2 ] zp[4]:209 [ memcpy_bank_to_vram::num#2 ] 
Limited combination testing to 100 combinations of 24576 possible.
Uplifting [vera_layer_set_text_color_mode] best 88333 combination zp[2]:92 [ vera_layer_set_text_color_mode::addr#0 ] reg byte a [ vera_layer_set_text_color_mode::$0 ] reg byte a [ vera_layer_set_text_color_mode::layer#3 ] 
Uplifting [screenlayer] best 88311 combination reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ] reg byte a [ screenlayer::vera_layer_get_width1_$2 ] zp[2]:146 [ screenlayer::vera_layer_get_width1_config#0 ] reg byte a [ screenlayer::vera_layer_get_width1_$0 ] reg byte a [ screenlayer::vera_layer_get_width1_$1 ] zp[1]:150 [ screenlayer::vera_layer_get_width1_$3 ] zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 ] zp[2]:153 [ screenlayer::vera_layer_get_width1_return#1 ] zp[2]:155 [ screenlayer::$2 ] zp[1]:158 [ screenlayer::$3 ] zp[2]:161 [ screenlayer::$4 ] zp[1]:163 [ screenlayer::vera_layer_get_height1_layer#0 ] zp[1]:164 [ screenlayer::vera_layer_get_height1_$2 ] zp[2]:165 [ screenlayer::vera_layer_get_height1_config#0 ] zp[1]:167 [ screenlayer::vera_layer_get_height1_$0 ] zp[1]:168 [ screenlayer::vera_layer_get_height1_$1 ] zp[1]:169 [ screenlayer::vera_layer_get_height1_$3 ] zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 ] zp[2]:172 [ screenlayer::vera_layer_get_height1_return#1 ] zp[2]:174 [ screenlayer::$5 ] 
Limited combination testing to 100 combinations of 4194304 possible.
Uplifting [vera_layer_get_mapbase_offset] best 88301 combination reg byte a [ vera_layer_get_mapbase_offset::$0 ] reg byte a [ vera_layer_get_mapbase_offset::layer#0 ] zp[2]:128 [ vera_layer_get_mapbase_offset::return#0 ] zp[2]:142 [ vera_layer_get_mapbase_offset::return#2 ] 
Uplifting [vera_layer_get_rowskip] best 88291 combination reg byte a [ vera_layer_get_rowskip::$0 ] reg byte a [ vera_layer_get_rowskip::layer#0 ] zp[2]:131 [ vera_layer_get_rowskip::return#0 ] zp[2]:159 [ vera_layer_get_rowskip::return#2 ] 
Uplifting [memcpy_to_vram] best 88291 combination zp[2]:89 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ] 
Uplifting [printf_str] best 88221 combination zp[2]:107 [ printf_str::s#2 printf_str::s#0 ] reg byte a [ printf_str::c#1 ] 
Uplifting [setnam] best 88221 combination zp[2]:121 [ setnam::$0 ] zp[1]:123 [ setnam::filename_len ] zp[2]:189 [ setnam::filename ] 
Uplifting [vera_layer_get_mapbase_bank] best 88203 combination reg byte y [ vera_layer_get_mapbase_bank::layer#0 ] reg byte x [ vera_layer_get_mapbase_bank::return#0 ] reg byte x [ vera_layer_get_mapbase_bank::return#2 ] 
Uplifting [vera_layer_get_textcolor] best 88185 combination reg byte y [ vera_layer_get_textcolor::layer#0 ] reg byte a [ vera_layer_get_textcolor::return#0 ] reg byte a [ vera_layer_get_textcolor::return#2 ] 
Uplifting [vera_layer_get_backcolor] best 88167 combination reg byte y [ vera_layer_get_backcolor::layer#0 ] reg byte a [ vera_layer_get_backcolor::return#0 ] reg byte a [ vera_layer_get_backcolor::return#2 ] 
Uplifting [vera_layer_get_rowshift] best 88149 combination reg byte y [ vera_layer_get_rowshift::layer#0 ] reg byte a [ vera_layer_get_rowshift::return#0 ] reg byte a [ vera_layer_get_rowshift::return#2 ] 
Uplifting [load] best 88149 combination zp[1]:124 [ load::status ] zp[1]:204 [ load::verify ] zp[2]:206 [ load::address ] 
Uplifting [screensize] best 88129 combination reg byte a [ screensize::hscale#0 ] reg byte a [ screensize::$1 ] reg byte a [ screensize::vscale#0 ] reg byte a [ screensize::$3 ] 
Limited combination testing to 100 combinations of 256 possible.
Uplifting [setlfs] best 88129 combination zp[1]:191 [ setlfs::device ] 
Uplifting [conio_x16_init] best 88129 combination zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] 
Uplifting [VERA_SPRITE] best 88129 combination 
Uplifting [MOS6522_VIA] best 88129 combination 
Uplifting [load_to_bank] best 88129 combination 
Uplifting [vera_layer_set_textcolor] best 88129 combination 
Uplifting [vera_layer_set_backcolor] best 88129 combination 
Uplifting [vera_layer_mode_tile] best 88129 combination 
Uplifting [vera_layer_mode_text] best 88129 combination 
Uplifting [cscroll] best 88129 combination 
Uplifting [RADIX] best 88129 combination 
Uplifting [printf_format_number] best 88129 combination 
Uplifting [printf_buffer_number] best 88129 combination 
Uplifting [printf_format_string] best 88129 combination 
Uplifting [main] best 88129 combination zp[8]:215 [ main::SPRITE_ATTR ] 
Uplifting [__start] best 88129 combination 
Attempting to uplift remaining variables inzp[1]:27 [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
Uplifting [vera_layer_get_color] best 88113 combination reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ] 
Attempting to uplift remaining variables inzp[1]:31 [ vera_layer_get_color::return#4 ]
Uplifting [vera_layer_get_color] best 88109 combination reg byte a [ vera_layer_get_color::return#4 ] 
Attempting to uplift remaining variables inzp[1]:36 [ insertup::width#0 ]
Uplifting [insertup] best 88109 combination zp[1]:36 [ insertup::width#0 ] 
Attempting to uplift remaining variables inzp[1]:37 [ insertup::cy#0 ]
Uplifting [insertup] best 88109 combination zp[1]:37 [ insertup::cy#0 ] 
Attempting to uplift remaining variables inzp[1]:38 [ conio_screen_width ]
Uplifting [] best 88109 combination zp[1]:38 [ conio_screen_width ] 
Attempting to uplift remaining variables inzp[1]:47 [ conio_rowshift ]
Uplifting [] best 88109 combination zp[1]:47 [ conio_rowshift ] 
Attempting to uplift remaining variables inzp[1]:50 [ conio_screen_layer ]
Uplifting [] best 88109 combination zp[1]:50 [ conio_screen_layer ] 
Attempting to uplift remaining variables inzp[1]:59 [ conio_screen_height ]
Uplifting [] best 88109 combination zp[1]:59 [ conio_screen_height ] 
Attempting to uplift remaining variables inzp[1]:63 [ vera_layer_get_color::return#3 ]
Uplifting [vera_layer_get_color] best 88103 combination reg byte a [ vera_layer_get_color::return#3 ] 
Attempting to uplift remaining variables inzp[1]:68 [ cputc::$6 ]
Uplifting [cputc] best 88097 combination reg byte a [ cputc::$6 ] 
Attempting to uplift remaining variables inzp[1]:69 [ cputc::scroll_enable#0 ]
Uplifting [cputc] best 88093 combination reg byte a [ cputc::scroll_enable#0 ] 
Attempting to uplift remaining variables inzp[1]:98 [ clrscr::l#2 clrscr::l#1 ]
Uplifting [clrscr] best 88093 combination zp[1]:98 [ clrscr::l#2 clrscr::l#1 ] 
Attempting to uplift remaining variables inzp[1]:102 [ clrscr::$7 ]
Uplifting [clrscr] best 88033 combination reg byte a [ clrscr::$7 ] 
Attempting to uplift remaining variables inzp[1]:109 [ cputc::c#0 ]
Uplifting [cputc] best 88033 combination zp[1]:109 [ cputc::c#0 ] 
Attempting to uplift remaining variables inzp[1]:110 [ cputc::color#0 ]
Uplifting [cputc] best 88029 combination reg byte x [ cputc::color#0 ] 
Attempting to uplift remaining variables inzp[1]:123 [ setnam::filename_len ]
Uplifting [setnam] best 88029 combination zp[1]:123 [ setnam::filename_len ] 
Attempting to uplift remaining variables inzp[1]:124 [ load::status ]
Uplifting [load] best 88029 combination zp[1]:124 [ load::status ] 
Attempting to uplift remaining variables inzp[1]:125 [ CONIO_SCREEN_BANK#11 ]
Uplifting [] best 88029 combination zp[1]:125 [ CONIO_SCREEN_BANK#11 ] 
Attempting to uplift remaining variables inzp[1]:126 [ clrscr::color#0 ]
Uplifting [clrscr] best 88029 combination zp[1]:126 [ clrscr::color#0 ] 
Attempting to uplift remaining variables inzp[1]:150 [ screenlayer::vera_layer_get_width1_$3 ]
Uplifting [screenlayer] best 88025 combination reg byte a [ screenlayer::vera_layer_get_width1_$3 ] 
Attempting to uplift remaining variables inzp[1]:158 [ screenlayer::$3 ]
Uplifting [screenlayer] best 88019 combination reg byte a [ screenlayer::$3 ] 
Attempting to uplift remaining variables inzp[1]:163 [ screenlayer::vera_layer_get_height1_layer#0 ]
Uplifting [screenlayer] best 88013 combination reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ] 
Attempting to uplift remaining variables inzp[1]:164 [ screenlayer::vera_layer_get_height1_$2 ]
Uplifting [screenlayer] best 88009 combination reg byte a [ screenlayer::vera_layer_get_height1_$2 ] 
Attempting to uplift remaining variables inzp[1]:167 [ screenlayer::vera_layer_get_height1_$0 ]
Uplifting [screenlayer] best 88003 combination reg byte a [ screenlayer::vera_layer_get_height1_$0 ] 
Attempting to uplift remaining variables inzp[1]:168 [ screenlayer::vera_layer_get_height1_$1 ]
Uplifting [screenlayer] best 87997 combination reg byte a [ screenlayer::vera_layer_get_height1_$1 ] 
Attempting to uplift remaining variables inzp[1]:169 [ screenlayer::vera_layer_get_height1_$3 ]
Uplifting [screenlayer] best 87993 combination reg byte a [ screenlayer::vera_layer_get_height1_$3 ] 
Attempting to uplift remaining variables inzp[1]:177 [ clrscr::$0 ]
Uplifting [clrscr] best 87987 combination reg byte a [ clrscr::$0 ] 
Attempting to uplift remaining variables inzp[1]:179 [ clrscr::$2 ]
Uplifting [clrscr] best 87981 combination reg byte a [ clrscr::$2 ] 
Attempting to uplift remaining variables inzp[1]:180 [ clrscr::$9 ]
Uplifting [clrscr] best 87977 combination reg byte a [ clrscr::$9 ] 
Attempting to uplift remaining variables inzp[1]:184 [ memcpy_bank_to_vram::$4 ]
Uplifting [memcpy_bank_to_vram] best 87971 combination reg byte a [ memcpy_bank_to_vram::$4 ] 
Attempting to uplift remaining variables inzp[1]:185 [ memcpy_bank_to_vram::$6 ]
Uplifting [memcpy_bank_to_vram] best 87965 combination reg byte a [ memcpy_bank_to_vram::$6 ] 
Attempting to uplift remaining variables inzp[1]:186 [ memcpy_bank_to_vram::$7 ]
Uplifting [memcpy_bank_to_vram] best 87959 combination reg byte a [ memcpy_bank_to_vram::$7 ] 
Attempting to uplift remaining variables inzp[1]:191 [ setlfs::device ]
Uplifting [setlfs] best 87959 combination zp[1]:191 [ setlfs::device ] 
Attempting to uplift remaining variables inzp[1]:194 [ memcpy_bank_to_vram::$5 ]
Uplifting [memcpy_bank_to_vram] best 87959 combination zp[1]:194 [ memcpy_bank_to_vram::$5 ] 
Attempting to uplift remaining variables inzp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Uplifting [conio_x16_init] best 87959 combination zp[1]:199 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ] 
Attempting to uplift remaining variables inzp[1]:204 [ load::verify ]
Uplifting [load] best 87959 combination zp[1]:204 [ load::verify ] 
Attempting to uplift remaining variables inzp[1]:205 [ clrscr::$1 ]
Uplifting [clrscr] best 87959 combination zp[1]:205 [ clrscr::$1 ] 
Coalescing zero page register [ zp[4]:209 [ memcpy_bank_to_vram::num#2 ] ] with [ zp[4]:195 [ memcpy_bank_to_vram::end#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 ] ] with [ zp[2]:192 [ memcpy_bank_to_vram::addr#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ strlen::len#2 strlen::len#1 ] ] with [ zp[2]:105 [ strlen::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:82 [ cputc::conio_addr#0 ] ] with [ zp[2]:84 [ cputc::conio_addr#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:142 [ vera_layer_get_mapbase_offset::return#2 ] ] with [ zp[2]:128 [ vera_layer_get_mapbase_offset::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 ] ] with [ zp[2]:153 [ screenlayer::vera_layer_get_width1_return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:159 [ vera_layer_get_rowskip::return#2 ] ] with [ zp[2]:161 [ screenlayer::$4 ] ] - score: 1
Coalescing zero page register [ zp[2]:159 [ vera_layer_get_rowskip::return#2 screenlayer::$4 ] ] with [ zp[2]:131 [ vera_layer_get_rowskip::return#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 ] ] with [ zp[2]:172 [ screenlayer::vera_layer_get_height1_return#1 ] ] - score: 1
Coalescing zero page register [ zp[2]:41 [ gotoxy::$6 ] ] with [ zp[2]:45 [ gotoxy::line_offset#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:54 [ cputln::temp#0 ] ] with [ zp[2]:60 [ cputln::temp#1 ] ] - score: 1
Coalescing zero page register [ zp[1]:205 [ clrscr::$1 ] ] with [ zp[1]:126 [ clrscr::color#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ insertup::line#0 ] ] with [ zp[2]:25 [ insertup::start#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 memcpy_bank_to_vram::addr#0 ] ] with [ zp[2]:187 [ memcpy_bank_to_vram::$9 ] ] - score: 1
Coalescing zero page register [ zp[2]:57 [ strlen::len#2 strlen::len#1 strlen::return#0 ] ] with [ zp[2]:121 [ setnam::$0 ] ] - score: 1
Coalescing zero page register [ zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 ] ] with [ zp[2]:155 [ screenlayer::$2 ] ] - score: 1
Coalescing zero page register [ zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 ] ] with [ zp[2]:174 [ screenlayer::$5 ] ] - score: 1
Coalescing zero page register [ zp[2]:20 [ insertup::line#0 insertup::start#0 ] ] with [ zp[2]:22 [ memcpy_in_vram::dest#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:107 [ printf_str::s#2 printf_str::s#0 ] ] with [ zp[2]:111 [ clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] ]
Coalescing zero page register [ zp[2]:89 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ] ] with [ zp[2]:86 [ memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 memcpy_bank_to_vram::addr#0 memcpy_bank_to_vram::$9 ] ]
Coalescing zero page register [ zp[2]:6 [ clearline::c#2 clearline::c#1 ] ] with [ zp[2]:51 [ strlen::str#2 strlen::str#0 strlen::str#1 ] ]
Coalescing zero page register [ zp[2]:2 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 ] ] with [ zp[2]:57 [ strlen::len#2 strlen::len#1 strlen::return#0 setnam::$0 ] ]
Coalescing zero page register [ zp[1]:109 [ cputc::c#0 ] ] with [ zp[1]:98 [ clrscr::l#2 clrscr::l#1 ] ]
Coalescing zero page register [ zp[2]:146 [ screenlayer::vera_layer_get_width1_config#0 ] ] with [ zp[2]:142 [ vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ] ]
Coalescing zero page register [ zp[2]:73 [ vera_layer_set_mapbase::addr#0 ] ] with [ zp[2]:151 [ screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ] ]
Coalescing zero page register [ zp[2]:41 [ gotoxy::$6 gotoxy::line_offset#0 ] ] with [ zp[2]:159 [ vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ] ]
Coalescing zero page register [ zp[2]:54 [ cputln::temp#0 cputln::temp#1 ] ] with [ zp[2]:15 [ vera_layer_get_color::addr#0 ] ]
Coalescing zero page register [ zp[2]:92 [ vera_layer_set_text_color_mode::addr#0 ] ] with [ zp[2]:165 [ screenlayer::vera_layer_get_height1_config#0 ] ]
Coalescing zero page register [ zp[1]:194 [ memcpy_bank_to_vram::$5 ] ] with [ zp[1]:205 [ clrscr::$1 clrscr::color#0 ] ]
Coalescing zero page register [ zp[2]:75 [ vera_layer_set_config::addr#0 ] ] with [ zp[2]:170 [ screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ] ]
Coalescing zero page register [ zp[2]:34 [ clearline::addr#0 ] ] with [ zp[2]:32 [ memcpy_in_vram::src#0 ] ]
Coalescing zero page register [ zp[2]:89 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 memcpy_bank_to_vram::addr#0 memcpy_bank_to_vram::$9 ] ] with [ zp[2]:107 [ printf_str::s#2 printf_str::s#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ] ]
Coalescing zero page register [ zp[2]:82 [ cputc::conio_addr#0 cputc::conio_addr#1 ] ] with [ zp[2]:6 [ clearline::c#2 clearline::c#1 strlen::str#2 strlen::str#0 strlen::str#1 ] ]
Coalescing zero page register [ zp[2]:70 [ cputc::$16 ] ] with [ zp[2]:2 [ memcpy_in_vram::i#2 memcpy_in_vram::i#1 strlen::len#2 strlen::len#1 strlen::return#0 setnam::$0 ] ]
Coalescing zero page register [ zp[2]:77 [ vera_layer_set_tilebase::addr#0 ] ] with [ zp[2]:146 [ screenlayer::vera_layer_get_width1_config#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ] ]
Coalescing zero page register [ zp[1]:37 [ insertup::cy#0 ] ] with [ zp[1]:194 [ memcpy_bank_to_vram::$5 clrscr::$1 clrscr::color#0 ] ]
Allocated (was zp[2]:70) zp[2]:2 [ cputc::$16 memcpy_in_vram::i#2 memcpy_in_vram::i#1 strlen::len#2 strlen::len#1 strlen::return#0 setnam::$0 ]
Allocated (was zp[2]:82) zp[2]:6 [ cputc::conio_addr#0 cputc::conio_addr#1 clearline::c#2 clearline::c#1 strlen::str#2 strlen::str#0 strlen::str#1 ]
Allocated (was zp[2]:20) zp[2]:8 [ insertup::line#0 insertup::start#0 memcpy_in_vram::dest#0 ]
Allocated (was zp[2]:54) zp[2]:10 [ cputln::temp#0 cputln::temp#1 vera_layer_get_color::addr#0 ]
Allocated (was zp[2]:34) zp[2]:12 [ clearline::addr#0 memcpy_in_vram::src#0 ]
Allocated (was zp[1]:36) zp[1]:14 [ insertup::width#0 ]
Allocated (was zp[1]:37) zp[1]:15 [ insertup::cy#0 memcpy_bank_to_vram::$5 clrscr::$1 clrscr::color#0 ]
Allocated (was zp[1]:38) zp[1]:16 [ conio_screen_width ]
Allocated (was zp[2]:41) zp[2]:17 [ gotoxy::$6 gotoxy::line_offset#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ]
Allocated (was zp[2]:39) zp[2]:19 [ CONIO_SCREEN_TEXT#11 ]
Allocated (was zp[1]:47) zp[1]:21 [ conio_rowshift ]
Allocated (was zp[2]:48) zp[2]:22 [ conio_rowskip ]
Allocated (was zp[1]:50) zp[1]:24 [ conio_screen_layer ]
Allocated (was zp[1]:59) zp[1]:25 [ conio_screen_height ]
Allocated (was zp[2]:77) zp[2]:26 [ vera_layer_set_tilebase::addr#0 screenlayer::vera_layer_get_width1_config#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ]
Allocated (was zp[2]:73) zp[2]:28 [ vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
Allocated (was zp[2]:75) zp[2]:30 [ vera_layer_set_config::addr#0 screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
Allocated (was zp[2]:89) zp[2]:32 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 memcpy_bank_to_vram::addr#0 memcpy_bank_to_vram::$9 printf_str::s#2 printf_str::s#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
Allocated (was zp[2]:79) zp[2]:34 [ conio_height ]
Allocated (was zp[1]:109) zp[1]:36 [ cputc::c#0 clrscr::l#2 clrscr::l#1 ]
Allocated (was zp[2]:92) zp[2]:37 [ vera_layer_set_text_color_mode::addr#0 screenlayer::vera_layer_get_height1_config#0 ]
Allocated (was zp[4]:94) zp[4]:39 [ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ]
Allocated (was zp[1]:123) zp[1]:43 [ setnam::filename_len ]
Allocated (was zp[1]:124) zp[1]:44 [ load::status ]
Allocated (was zp[1]:125) zp[1]:45 [ CONIO_SCREEN_BANK#11 ]
Allocated (was zp[2]:135) zp[2]:46 [ conio_width ]
Allocated (was zp[2]:189) zp[2]:48 [ setnam::filename ]
Allocated (was zp[1]:191) zp[1]:50 [ setlfs::device ]
Allocated (was zp[4]:209) zp[4]:51 [ memcpy_bank_to_vram::num#2 memcpy_bank_to_vram::end#0 ]
Allocated (was zp[1]:199) zp[1]:55 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
Allocated (was zp[4]:200) zp[4]:56 [ memcpy_bank_to_vram::vdest#2 ]
Allocated (was zp[1]:204) zp[1]:60 [ load::verify ]
Allocated (was zp[2]:206) zp[2]:61 [ load::address ]
Allocated (was zp[2]:213) zp[2]:63 [ CONIO_SCREEN_TEXT#16 ]
Allocated (was zp[8]:215) zp[8]:65 [ main::SPRITE_ATTR ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Commander X16 Load a file to a memory bank
  // Upstart
.cpu _65c02
  // Create a bunch of files
.file [name="cx16-bankload.prg", type="prg", segments="Program"]
.file [name="SPRITE", type="bin", segments="Sprite"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
.segmentdef Sprite

  // Global Constants & labels
  .const WHITE = 1
  .const BLUE = 6
  .const VERA_INC_1 = $10
  .const VERA_DCSEL = 2
  .const VERA_ADDRSEL = 1
  .const VERA_SPRITES_ENABLE = $40
  .const VERA_LAYER_WIDTH_128 = $20
  .const VERA_LAYER_WIDTH_MASK = $30
  .const VERA_LAYER_HEIGHT_64 = $40
  .const VERA_LAYER_HEIGHT_MASK = $c0
  .const VERA_LAYER_CONFIG_256C = 8
  .const VERA_LAYER_TILEBASE_MASK = $fc
  /// VERA Palette address in VRAM  $1FA00 - $1FBFF
  /// 256 entries of 2 bytes
  /// byte 0 bits 4-7: Green
  /// byte 0 bits 0-3: Blue
  /// byte 1 bits 0-3: Red
  .const VERA_PALETTE = $1fa00
  /// Sprite Attributes address in VERA VRAM $1FC00 - $1FFFF
  .const VERA_SPRITE_ATTR = $1fc00
  /// 8BPP sprite mode (add to VERA_SPRITE.ADDR to enable)
  .const VERA_SPRITE_8BPP = $8000
  .const SIZEOF_UNSIGNED_INT = 2
  .const SIZEOF_POINTER = 2
  .const SIZEOF_UNSIGNED_LONG = 4
  .const SIZEOF_STRUCT_VERA_SPRITE = 8
  .const OFFSET_STRUCT_MOS6522_VIA_PORT_A = 1
  .const OFFSET_STRUCT_VERA_SPRITE_X = 2
  .const OFFSET_STRUCT_VERA_SPRITE_Y = 4
  .const STACK_BASE = $103
  /// $9F20 VRAM Address (7:0)
  .label VERA_ADDRX_L = $9f20
  /// $9F21 VRAM Address (15:8)
  .label VERA_ADDRX_M = $9f21
  /// $9F22 VRAM Address (7:0)
  /// Bit 4-7: Address Increment  The following is the amount incremented per value value:increment
  ///                             0:0, 1:1, 2:2, 3:4, 4:8, 5:16, 6:32, 7:64, 8:128, 9:256, 10:512, 11:40, 12:80, 13:160, 14:320, 15:640
  /// Bit 3: DECR Setting the DECR bit, will decrement instead of increment by the value set by the 'Address Increment' field.
  /// Bit 0: VRAM Address (16)
  .label VERA_ADDRX_H = $9f22
  /// $9F23	DATA0	VRAM Data port 0
  .label VERA_DATA0 = $9f23
  /// $9F24	DATA1	VRAM Data port 1
  .label VERA_DATA1 = $9f24
  /// $9F25	CTRL Control
  /// Bit 7: Reset
  /// Bit 1: DCSEL
  /// Bit 2: ADDRSEL
  .label VERA_CTRL = $9f25
  /// $9F29	DC_VIDEO (DCSEL=0)
  /// Bit 7: Current Field     Read-only bit which reflects the active interlaced field in composite and RGB modes. (0: even, 1: odd)
  /// Bit 6: Sprites Enable	Enable output from the Sprites renderer
  /// Bit 5: Layer1 Enable	    Enable output from the Layer1 renderer
  /// Bit 4: Layer0 Enable	    Enable output from the Layer0 renderer
  /// Bit 2: Chroma Disable    Setting 'Chroma Disable' disables output of chroma in NTSC composite mode and will give a better picture on a monochrome display. (Setting this bit will also disable the chroma output on the S-video output.)
  /// Bit 0-1: Output Mode     0: Video disabled, 1: VGA output, 2: NTSC composite, 3: RGB interlaced, composite sync (via VGA connector)
  .label VERA_DC_VIDEO = $9f29
  /// $9F2A	DC_HSCALE (DCSEL=0)	Active Display H-Scale
  .label VERA_DC_HSCALE = $9f2a
  /// $9F2B	DC_VSCALE (DCSEL=0)	Active Display V-Scale
  .label VERA_DC_VSCALE = $9f2b
  /// $9F2D	L0_CONFIG   Layer 0 Configuration
  .label VERA_L0_CONFIG = $9f2d
  /// $9F2E	L0_MAPBASE	    Layer 0 Map Base Address (16:9)
  .label VERA_L0_MAPBASE = $9f2e
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L0_TILEBASE = $9f2f
  /// $9F34	L1_CONFIG   Layer 1 Configuration
  .label VERA_L1_CONFIG = $9f34
  /// $9F35	L1_MAPBASE	    Layer 1 Map Base Address (16:9)
  .label VERA_L1_MAPBASE = $9f35
  /// $9F36	L1_TILEBASE	    Layer 1 Tile Base
  /// Bit 2-7: Tile Base Address (16:11)
  /// Bit 1:   Tile Height (0:8 pixels, 1:16 pixels)
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L1_TILEBASE = $9f36
  /// The VIA#1: ROM/RAM Bank Control
  /// Port A Bits 0-7 RAM bank
  /// Port B Bits 0-2 ROM bank
  /// Port B Bits 3-7 [TBD]
  .label VIA1 = $9f60
  // Variable holding the screen width;
  .label conio_screen_width = $10
  // Variable holding the screen height;
  .label conio_screen_height = $19
  // Variable holding the screen layer on the VERA card with which conio interacts;
  .label conio_screen_layer = $18
  // Variables holding the current map width and map height of the layer.
  .label conio_width = $2e
  .label conio_height = $22
  .label conio_rowshift = $15
  .label conio_rowskip = $16
  // The screen width
  // The screen height
  // The text screen base address, which is a 16:0 bit value in VERA VRAM.
  // That is 128KB addressable space, thus 17 bits in total.
  // CONIO_SCREEN_TEXT contains bits 15:0 of the address.
  // CONIO_SCREEN_BANK contains bit 16, the the 64K memory bank in VERA VRAM (the upper 17th bit).
  // !!! note that these values are not const for the cx16!
  // This conio implements the two layers of VERA, which can be layer 0 or layer 1.
  // Configuring conio to output to a different layer, will change these fields to the address base
  // configured using VERA_L0_MAPBASE = 0x9f2e or VERA_L1_MAPBASE = 0x9f35.
  // Using the function setscreenlayer(layer) will re-calculate using CONIO_SCREEN_TEXT and CONIO_SCREEN_BASE
  // based on the values of VERA_L0_MAPBASE or VERA_L1_MAPBASE, mapping the base address of the selected layer.
  // The function setscreenlayermapbase(layer,mapbase) allows to configure bit 16:9 of the
  // mapbase address of the time map in VRAM of the selected layer VERA_L0_MAPBASE or VERA_L1_MAPBASE.
  .label CONIO_SCREEN_TEXT = $13
  .label CONIO_SCREEN_BANK = $2d
  // The screen width
  // The screen height
  // The text screen base address, which is a 16:0 bit value in VERA VRAM.
  // That is 128KB addressable space, thus 17 bits in total.
  // CONIO_SCREEN_TEXT contains bits 15:0 of the address.
  // CONIO_SCREEN_BANK contains bit 16, the the 64K memory bank in VERA VRAM (the upper 17th bit).
  // !!! note that these values are not const for the cx16!
  // This conio implements the two layers of VERA, which can be layer 0 or layer 1.
  // Configuring conio to output to a different layer, will change these fields to the address base
  // configured using VERA_L0_MAPBASE = 0x9f2e or VERA_L1_MAPBASE = 0x9f35.
  // Using the function setscreenlayer(layer) will re-calculate using CONIO_SCREEN_TEXT and CONIO_SCREEN_BASE
  // based on the values of VERA_L0_MAPBASE or VERA_L1_MAPBASE, mapping the base address of the selected layer.
  // The function setscreenlayermapbase(layer,mapbase) allows to configure bit 16:9 of the
  // mapbase address of the time map in VRAM of the selected layer VERA_L0_MAPBASE or VERA_L1_MAPBASE.
  .label CONIO_SCREEN_TEXT_1 = $3f
.segment Code
  // __start
__start: {
    jmp __init1
    // __start::__init1
  __init1:
    // [1] conio_screen_width = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_screen_width
    // [2] conio_screen_height = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_screen_height
    // [3] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // [4] conio_width = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_width
    lda #>0
    sta.z conio_width+1
    // [5] conio_height = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_height
    lda #>0
    sta.z conio_height+1
    // [6] conio_rowshift = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_rowshift
    // [7] conio_rowskip = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_rowskip
    lda #>0
    sta.z conio_rowskip+1
    // [8] call conio_x16_init
    jsr conio_x16_init
    // [9] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
  __b1_from___init1:
    jmp __b1
    // __start::@1
  __b1:
    // [10] call main
    // [65] phi from __start::@1 to main [phi:__start::@1->main]
  main_from___b1:
    jsr main
    jmp __breturn
    // __start::@return
  __breturn:
    // [11] return 
    rts
}
  // conio_x16_init
// Set initial cursor position
conio_x16_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    .label line = $37
    // [12] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE -- vbuz1=_deref_pbuc1 
    lda.z BASIC_CURSOR_LINE
    sta.z line
    // [13] call vera_layer_mode_text
    // [86] phi from conio_x16_init to vera_layer_mode_text [phi:conio_x16_init->vera_layer_mode_text]
  vera_layer_mode_text_from_conio_x16_init:
    jsr vera_layer_mode_text
    // [14] phi from conio_x16_init to conio_x16_init::@3 [phi:conio_x16_init->conio_x16_init::@3]
  __b3_from_conio_x16_init:
    jmp __b3
    // conio_x16_init::@3
  __b3:
    // [15] call screensize
    jsr screensize
    // [16] phi from conio_x16_init::@3 to conio_x16_init::@4 [phi:conio_x16_init::@3->conio_x16_init::@4]
  __b4_from___b3:
    jmp __b4
    // conio_x16_init::@4
  __b4:
    // [17] call screenlayer
    jsr screenlayer
    // [18] phi from conio_x16_init::@4 to conio_x16_init::@5 [phi:conio_x16_init::@4->conio_x16_init::@5]
  __b5_from___b4:
    jmp __b5
    // conio_x16_init::@5
  __b5:
    // [19] call vera_layer_set_textcolor
    jsr vera_layer_set_textcolor
    // [20] phi from conio_x16_init::@5 to conio_x16_init::@6 [phi:conio_x16_init::@5->conio_x16_init::@6]
  __b6_from___b5:
    jmp __b6
    // conio_x16_init::@6
  __b6:
    // [21] call vera_layer_set_backcolor
    jsr vera_layer_set_backcolor
    // [22] phi from conio_x16_init::@6 to conio_x16_init::@7 [phi:conio_x16_init::@6->conio_x16_init::@7]
  __b7_from___b6:
    jmp __b7
    // conio_x16_init::@7
  __b7:
    // [23] call vera_layer_set_mapbase
    // [142] phi from conio_x16_init::@7 to vera_layer_set_mapbase [phi:conio_x16_init::@7->vera_layer_set_mapbase]
  vera_layer_set_mapbase_from___b7:
    // [142] phi vera_layer_set_mapbase::mapbase#3 = $20 [phi:conio_x16_init::@7->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #$20
    // [142] phi vera_layer_set_mapbase::layer#3 = 0 [phi:conio_x16_init::@7->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #0
    jsr vera_layer_set_mapbase
    // [24] phi from conio_x16_init::@7 to conio_x16_init::@8 [phi:conio_x16_init::@7->conio_x16_init::@8]
  __b8_from___b7:
    jmp __b8
    // conio_x16_init::@8
  __b8:
    // [25] call vera_layer_set_mapbase
    // [142] phi from conio_x16_init::@8 to vera_layer_set_mapbase [phi:conio_x16_init::@8->vera_layer_set_mapbase]
  vera_layer_set_mapbase_from___b8:
    // [142] phi vera_layer_set_mapbase::mapbase#3 = 0 [phi:conio_x16_init::@8->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #0
    // [142] phi vera_layer_set_mapbase::layer#3 = 1 [phi:conio_x16_init::@8->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #1
    jsr vera_layer_set_mapbase
    jmp __b9
    // conio_x16_init::@9
  __b9:
    // [26] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1 -- vbuz1_lt_vbuz2_then_la1 
    lda.z line
    cmp.z conio_screen_height
    bcc __b1_from___b9
    jmp __b2
    // conio_x16_init::@2
  __b2:
    // [27] conio_x16_init::line#1 = conio_screen_height - 1 -- vbuz1=vbuz2_minus_1 
    ldx.z conio_screen_height
    dex
    stx.z line
    // [28] phi from conio_x16_init::@2 conio_x16_init::@9 to conio_x16_init::@1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1]
  __b1_from___b2:
  __b1_from___b9:
    // [28] phi conio_x16_init::line#3 = conio_x16_init::line#1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1#0] -- register_copy 
    jmp __b1
    // conio_x16_init::@1
  __b1:
    // [29] gotoxy::y#1 = conio_x16_init::line#3 -- vbuxx=vbuz1 
    ldx.z line
    // [30] call gotoxy
    // [147] phi from conio_x16_init::@1 to gotoxy [phi:conio_x16_init::@1->gotoxy]
  gotoxy_from___b1:
    // [147] phi gotoxy::y#3 = gotoxy::y#1 [phi:conio_x16_init::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn
    // conio_x16_init::@return
  __breturn:
    // [31] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// void cputc(__zp($24) char c)
cputc: {
    .const OFFSET_STACK_C = 0
    .label __16 = 2
    .label c = $24
    .label conio_addr = 6
    // [33] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) -- vbuz1=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_C,x
    sta.z c
    // [34] vera_layer_get_color::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [35] call vera_layer_get_color
    // [160] phi from cputc to vera_layer_get_color [phi:cputc->vera_layer_get_color]
  vera_layer_get_color_from_cputc:
    // [160] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#0 [phi:cputc->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // [36] vera_layer_get_color::return#3 = vera_layer_get_color::return#2
    jmp __b7
    // cputc::@7
  __b7:
    // [37] cputc::color#0 = vera_layer_get_color::return#3 -- vbuxx=vbuaa 
    tax
    // [38] cputc::$15 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [39] cputc::conio_addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[cputc::$15] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z conio_addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z conio_addr+1
    // [40] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 -- vbuaa=pbuc1_derefidx_vbuz1_rol_1 
    ldy.z conio_screen_layer
    lda conio_cursor_x,y
    asl
    // [41] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 -- pbuz1=pbuz1_plus_vbuaa 
    clc
    adc.z conio_addr
    sta.z conio_addr
    bcc !+
    inc.z conio_addr+1
  !:
    // [42] if(cputc::c#0==' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1_from___b7
    jmp __b2
    // cputc::@2
  __b2:
    // [43] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [44] cputc::$4 = byte0  cputc::conio_addr#1 -- vbuaa=_byte0_pbuz1 
    lda.z conio_addr
    // [45] *VERA_ADDRX_L = cputc::$4 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [46] cputc::$5 = byte1  cputc::conio_addr#1 -- vbuaa=_byte1_pbuz1 
    lda.z conio_addr+1
    // [47] *VERA_ADDRX_M = cputc::$5 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [48] cputc::$6 = CONIO_SCREEN_BANK#11 | VERA_INC_1 -- vbuaa=vbuz1_bor_vbuc1 
    lda #VERA_INC_1
    ora.z CONIO_SCREEN_BANK
    // [49] *VERA_ADDRX_H = cputc::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [50] *VERA_DATA0 = cputc::c#0 -- _deref_pbuc1=vbuz1 
    lda.z c
    sta VERA_DATA0
    // [51] *VERA_DATA0 = cputc::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // [52] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_x,x
    // [53] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] -- vbuaa=pbuc1_derefidx_vbuz1 
    ldy.z conio_screen_layer
    lda conio_scroll_enable,y
    // [54] if(0!=cputc::scroll_enable#0) goto cputc::@5 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b5
    jmp __b3
    // cputc::@3
  __b3:
    // [55] cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer] -- vwuz1=_word_pbuc1_derefidx_vbuz2 
    ldy.z conio_screen_layer
    lda conio_cursor_x,y
    sta.z __16
    lda #0
    sta.z __16+1
    // [56] if(cputc::$16!=conio_width) goto cputc::@return -- vwuz1_neq_vwuz2_then_la1 
    lda.z __16+1
    cmp.z conio_width+1
    bne __breturn
    lda.z __16
    cmp.z conio_width
    bne __breturn
    // [57] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
  __b4_from___b3:
    jmp __b4
    // cputc::@4
  __b4:
    // [58] call cputln
    jsr cputln
    jmp __breturn
    // cputc::@return
  __breturn:
    // [59] return 
    rts
    // cputc::@5
  __b5:
    // [60] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return -- pbuc1_derefidx_vbuz1_neq_vbuz2_then_la1 
    lda.z conio_screen_width
    ldy.z conio_screen_layer
    cmp conio_cursor_x,y
    bne __breturn
    // [61] phi from cputc::@5 to cputc::@6 [phi:cputc::@5->cputc::@6]
  __b6_from___b5:
    jmp __b6
    // cputc::@6
  __b6:
    // [62] call cputln
    jsr cputln
    jmp __breturn
    // [63] phi from cputc::@7 to cputc::@1 [phi:cputc::@7->cputc::@1]
  __b1_from___b7:
    jmp __b1
    // cputc::@1
  __b1:
    // [64] call cputln
    jsr cputln
    jmp __breturn
}
  // main
main: {
    // RAM Bank where sprite is loaded
    .label BANK_SPRITE = $12000
    // VRAM address of sprite
    .label VRAM_SPRITE = $10000
    .label SPRITE_ATTR = $41
    // [66] call vera_layer_set_text_color_mode
    // [179] phi from main to vera_layer_set_text_color_mode [phi:main->vera_layer_set_text_color_mode]
  vera_layer_set_text_color_mode_from_main:
    // [179] phi vera_layer_set_text_color_mode::layer#3 = 1 [phi:main->vera_layer_set_text_color_mode#0] -- vbuaa=vbuc1 
    lda #1
    jsr vera_layer_set_text_color_mode
    // [67] phi from main to main::@1 [phi:main->main::@1]
  __b1_from_main:
    jmp __b1
    // main::@1
  __b1:
    // [68] call screenlayer
    jsr screenlayer
    // [69] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [70] call clrscr
    jsr clrscr
    // [71] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [72] call printf_str
    // [217] phi from main::@3 to printf_str [phi:main::@3->printf_str]
  printf_str_from___b3:
    jsr printf_str
    jmp __b4
    // main::@4
  __b4:
    // [73] *(&main::SPRITE_ATTR) = memcpy(*(&$0), struct VERA_SPRITE, SIZEOF_STRUCT_VERA_SPRITE) -- _deref_pssc1=_deref_pssc2_memcpy_vbuc3 
    ldy #SIZEOF_STRUCT_VERA_SPRITE
  !:
    lda __0-1,y
    sta SPRITE_ATTR-1,y
    dey
    bne !-
    // [74] call load_to_bank
    jsr load_to_bank
    // [75] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [76] call memcpy_bank_to_vram
    // [235] phi from main::@5 to memcpy_bank_to_vram [phi:main::@5->memcpy_bank_to_vram]
  memcpy_bank_to_vram_from___b5:
    // [235] phi memcpy_bank_to_vram::num#2 = $20 [phi:main::@5->memcpy_bank_to_vram#0] -- vduz1=vbuc1 
    lda #$20
    sta.z memcpy_bank_to_vram.num
    lda #0
    sta.z memcpy_bank_to_vram.num+1
    sta.z memcpy_bank_to_vram.num+2
    sta.z memcpy_bank_to_vram.num+3
    // [235] phi memcpy_bank_to_vram::beg#0 = main::BANK_SPRITE-2 [phi:main::@5->memcpy_bank_to_vram#1] -- vduz1=vduc1 
    lda #<BANK_SPRITE-2
    sta.z memcpy_bank_to_vram.beg
    lda #>BANK_SPRITE-2
    sta.z memcpy_bank_to_vram.beg+1
    lda #<BANK_SPRITE-2>>$10
    sta.z memcpy_bank_to_vram.beg+2
    lda #>BANK_SPRITE-2>>$10
    sta.z memcpy_bank_to_vram.beg+3
    // [235] phi memcpy_bank_to_vram::vdest#2 = VERA_PALETTE+$20 [phi:main::@5->memcpy_bank_to_vram#2] -- vduz1=vduc1 
    lda #<VERA_PALETTE+$20
    sta.z memcpy_bank_to_vram.vdest
    lda #>VERA_PALETTE+$20
    sta.z memcpy_bank_to_vram.vdest+1
    lda #<VERA_PALETTE+$20>>$10
    sta.z memcpy_bank_to_vram.vdest+2
    lda #>VERA_PALETTE+$20>>$10
    sta.z memcpy_bank_to_vram.vdest+3
    jsr memcpy_bank_to_vram
    // [77] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [78] call memcpy_bank_to_vram
    // [235] phi from main::@6 to memcpy_bank_to_vram [phi:main::@6->memcpy_bank_to_vram]
  memcpy_bank_to_vram_from___b6:
    // [235] phi memcpy_bank_to_vram::num#2 = (unsigned int)$40*$20 [phi:main::@6->memcpy_bank_to_vram#0] -- vduz1=vduc1 
    lda #<$40*$20
    sta.z memcpy_bank_to_vram.num
    lda #>$40*$20
    sta.z memcpy_bank_to_vram.num+1
    lda #<$40*$20>>$10
    sta.z memcpy_bank_to_vram.num+2
    lda #>$40*$20>>$10
    sta.z memcpy_bank_to_vram.num+3
    // [235] phi memcpy_bank_to_vram::beg#0 = main::BANK_SPRITE+$20-2 [phi:main::@6->memcpy_bank_to_vram#1] -- vduz1=vduc1 
    lda #<BANK_SPRITE+$20-2
    sta.z memcpy_bank_to_vram.beg
    lda #>BANK_SPRITE+$20-2
    sta.z memcpy_bank_to_vram.beg+1
    lda #<BANK_SPRITE+$20-2>>$10
    sta.z memcpy_bank_to_vram.beg+2
    lda #>BANK_SPRITE+$20-2>>$10
    sta.z memcpy_bank_to_vram.beg+3
    // [235] phi memcpy_bank_to_vram::vdest#2 = main::VRAM_SPRITE [phi:main::@6->memcpy_bank_to_vram#2] -- vduz1=vduc1 
    lda #<VRAM_SPRITE
    sta.z memcpy_bank_to_vram.vdest
    lda #>VRAM_SPRITE
    sta.z memcpy_bank_to_vram.vdest+1
    lda #<VRAM_SPRITE>>$10
    sta.z memcpy_bank_to_vram.vdest+2
    lda #>VRAM_SPRITE>>$10
    sta.z memcpy_bank_to_vram.vdest+3
    jsr memcpy_bank_to_vram
    jmp __b7
    // main::@7
  __b7:
    // [79] *((unsigned int *)&main::SPRITE_ATTR) = word0 main::VRAM_SPRITE/$20 -- _deref_pwuc1=vwuc2 
    lda #<VRAM_SPRITE/$20&$ffff
    sta.z SPRITE_ATTR
    lda #>VRAM_SPRITE/$20&$ffff
    sta.z SPRITE_ATTR+1
    // [80] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64 -- _deref_pwuc1=vbuc2 
    lda #<$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X
    lda #>$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X+1
    // [81] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64 -- _deref_pwuc1=vbuc2 
    lda #<$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y
    lda #>$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y+1
    // [82] call memcpy_to_vram
    jsr memcpy_to_vram
    jmp __b8
    // main::@8
  __b8:
    // [83] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Enable sprites
    lda #VERA_DCSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [84] *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    lda #VERA_SPRITES_ENABLE
    ora VERA_DC_VIDEO
    sta VERA_DC_VIDEO
    jmp __breturn
    // main::@return
  __breturn:
    // [85] return 
    rts
  .segment Data
    s: .text @"\n\nsprite banked file load and display demo.\n"
    .byte 0
    filename: .text "SPRITE"
    .byte 0
}
.segment Code
  // vera_layer_mode_text
// Set a vera layer in text mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_mode: The color mode, which can be 16 or 256.
// void vera_layer_mode_text(char layer, unsigned long mapbase_address, unsigned long tilebase_address, unsigned int mapwidth, unsigned int mapheight, char tilewidth, char tileheight, unsigned int color_mode)
vera_layer_mode_text: {
    .label layer = 1
    .label mapbase_address = 0
    .label tilebase_address = $f800
    // [87] call vera_layer_mode_tile
    // [273] phi from vera_layer_mode_text to vera_layer_mode_tile [phi:vera_layer_mode_text->vera_layer_mode_tile]
  vera_layer_mode_tile_from_vera_layer_mode_text:
    jsr vera_layer_mode_tile
    // [88] phi from vera_layer_mode_text to vera_layer_mode_text::@1 [phi:vera_layer_mode_text->vera_layer_mode_text::@1]
  __b1_from_vera_layer_mode_text:
    jmp __b1
    // vera_layer_mode_text::@1
  __b1:
    // [89] call vera_layer_set_text_color_mode
    // [179] phi from vera_layer_mode_text::@1 to vera_layer_set_text_color_mode [phi:vera_layer_mode_text::@1->vera_layer_set_text_color_mode]
  vera_layer_set_text_color_mode_from___b1:
    // [179] phi vera_layer_set_text_color_mode::layer#3 = vera_layer_mode_text::layer#0 [phi:vera_layer_mode_text::@1->vera_layer_set_text_color_mode#0] -- vbuaa=vbuc1 
    lda #layer
    jsr vera_layer_set_text_color_mode
    jmp __breturn
    // vera_layer_mode_text::@return
  __breturn:
    // [90] return 
    rts
}
  // screensize
// Return the current screen size.
// void screensize(char *x, char *y)
screensize: {
    .label x = conio_screen_width
    .label y = conio_screen_height
    // [91] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    // VERA returns in VERA_DC_HSCALE the value of 128 when 80 columns is used in text mode,
    // and the value of 64 when 40 columns is used in text mode.
    // Basically, 40 columns mode in the VERA is a double scan mode.
    // Same for the VERA_DC_VSCALE mode, but then the subdivision is 60 or 30 rows.
    // I still need to test the other modes, but this will suffice for now for the pure text modes.
    lda VERA_DC_HSCALE
    rol
    rol
    and #1
    // [92] screensize::$1 = $28 << screensize::hscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$28
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // [93] *screensize::x#0 = screensize::$1 -- _deref_pbuc1=vbuaa 
    sta.z x
    // [94] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    lda VERA_DC_VSCALE
    rol
    rol
    and #1
    // [95] screensize::$3 = $1e << screensize::vscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$1e
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // [96] *screensize::y#0 = screensize::$3 -- _deref_pbuc1=vbuaa 
    sta.z y
    jmp __breturn
    // screensize::@return
  __breturn:
    // [97] return 
    rts
}
  // screenlayer
// Set the layer with which the conio will interact.
// - layer: value of 0 or 1.
// void screenlayer(char layer)
screenlayer: {
    .label __2 = $1c
    .label __4 = $11
    .label __5 = $1e
    .label vera_layer_get_width1_config = $1a
    .label vera_layer_get_width1_return = $1c
    .label vera_layer_get_height1_config = $25
    .label vera_layer_get_height1_return = $1e
    // [98] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // [99] vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [100] call vera_layer_get_mapbase_bank
    jsr vera_layer_get_mapbase_bank
    // [101] vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#0
    jmp __b3
    // screenlayer::@3
  __b3:
    // [102] CONIO_SCREEN_BANK#14 = vera_layer_get_mapbase_bank::return#2
    // [103] vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [104] call vera_layer_get_mapbase_offset
    jsr vera_layer_get_mapbase_offset
    // [105] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0
    jmp __b4
    // screenlayer::@4
  __b4:
    // [106] CONIO_SCREEN_TEXT#16 = vera_layer_get_mapbase_offset::return#2 -- vwuz1=vwuz2 
    lda.z vera_layer_get_mapbase_offset.return
    sta.z CONIO_SCREEN_TEXT_1
    lda.z vera_layer_get_mapbase_offset.return+1
    sta.z CONIO_SCREEN_TEXT_1+1
    // [107] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    jmp vera_layer_get_width1
    // screenlayer::vera_layer_get_width1
  vera_layer_get_width1:
    // [108] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [109] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_width1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_width1_config+1
    // [110] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_WIDTH_MASK
    ldy #0
    and (vera_layer_get_width1_config),y
    // [111] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 -- vbuaa=vbuaa_ror_4 
    lsr
    lsr
    lsr
    lsr
    // [112] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [113] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_WIDTH,y
    sta.z vera_layer_get_width1_return
    lda VERA_LAYER_WIDTH+1,y
    sta.z vera_layer_get_width1_return+1
    jmp vera_layer_get_width1___breturn
    // screenlayer::vera_layer_get_width1_@return
  vera_layer_get_width1___breturn:
    // [114] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
    jmp __b1
    // screenlayer::@1
  __b1:
    // [115] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
    // [116] conio_width = screenlayer::$2 -- vwuz1=vwuz2 
    lda.z __2
    sta.z conio_width
    lda.z __2+1
    sta.z conio_width+1
    // [117] vera_layer_get_rowshift::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [118] call vera_layer_get_rowshift
    jsr vera_layer_get_rowshift
    // [119] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
    jmp __b5
    // screenlayer::@5
  __b5:
    // [120] screenlayer::$3 = vera_layer_get_rowshift::return#2
    // [121] conio_rowshift = screenlayer::$3 -- vbuz1=vbuaa 
    sta.z conio_rowshift
    // [122] vera_layer_get_rowskip::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [123] call vera_layer_get_rowskip
    jsr vera_layer_get_rowskip
    // [124] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
    jmp __b6
    // screenlayer::@6
  __b6:
    // [125] screenlayer::$4 = vera_layer_get_rowskip::return#2
    // [126] conio_rowskip = screenlayer::$4 -- vwuz1=vwuz2 
    lda.z __4
    sta.z conio_rowskip
    lda.z __4+1
    sta.z conio_rowskip+1
    // [127] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    jmp vera_layer_get_height1
    // screenlayer::vera_layer_get_height1
  vera_layer_get_height1:
    // [128] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [129] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_height1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_height1_config+1
    // [130] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_HEIGHT_MASK
    ldy #0
    and (vera_layer_get_height1_config),y
    // [131] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 -- vbuaa=vbuaa_ror_6 
    rol
    rol
    rol
    and #3
    // [132] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [133] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_HEIGHT,y
    sta.z vera_layer_get_height1_return
    lda VERA_LAYER_HEIGHT+1,y
    sta.z vera_layer_get_height1_return+1
    jmp vera_layer_get_height1___breturn
    // screenlayer::vera_layer_get_height1_@return
  vera_layer_get_height1___breturn:
    // [134] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
    jmp __b2
    // screenlayer::@2
  __b2:
    // [135] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
    // [136] conio_height = screenlayer::$5 -- vwuz1=vwuz2 
    lda.z __5
    sta.z conio_height
    lda.z __5+1
    sta.z conio_height+1
    jmp __breturn
    // screenlayer::@return
  __breturn:
    // [137] return 
    rts
}
  // vera_layer_set_textcolor
// Set the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15) when the VERA works in 16x16 color text mode.
//   An 8 bit value (decimal between 0 and 255) when the VERA works in 256 text mode.
//   Note that on the VERA, the transparent color has value 0.
// char vera_layer_set_textcolor(char layer, char color)
vera_layer_set_textcolor: {
    .const layer = 1
    // [138] *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0) = WHITE -- _deref_pbuc1=vbuc2 
    lda #WHITE
    sta vera_layer_textcolor+layer
    jmp __breturn
    // vera_layer_set_textcolor::@return
  __breturn:
    // [139] return 
    rts
}
  // vera_layer_set_backcolor
// Set the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// char vera_layer_set_backcolor(char layer, char color)
vera_layer_set_backcolor: {
    .const layer = 1
    // [140] *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0) = BLUE -- _deref_pbuc1=vbuc2 
    lda #BLUE
    sta vera_layer_backcolor+layer
    jmp __breturn
    // vera_layer_set_backcolor::@return
  __breturn:
    // [141] return 
    rts
}
  // vera_layer_set_mapbase
// Set the base of the map layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - mapbase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// void vera_layer_set_mapbase(__register(A) char layer, __register(X) char mapbase)
vera_layer_set_mapbase: {
    .label addr = $1c
    // [143] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [144] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_mapbase,y
    sta.z addr
    lda vera_layer_mapbase+1,y
    sta.z addr+1
    // [145] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_mapbase::@return
  __breturn:
    // [146] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// void gotoxy(char x, __register(X) char y)
gotoxy: {
    .label __6 = $11
    .label line_offset = $11
    // [148] if(gotoxy::y#3<=conio_screen_height) goto gotoxy::@4 -- vbuxx_le_vbuz1_then_la1 
    lda.z conio_screen_height
    stx.z $ff
    cmp.z $ff
    bcs __b4_from_gotoxy
    // [150] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
  __b1_from_gotoxy:
    // [150] phi gotoxy::y#4 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    jmp __b1
    // [149] phi from gotoxy to gotoxy::@4 [phi:gotoxy->gotoxy::@4]
  __b4_from_gotoxy:
    jmp __b4
    // gotoxy::@4
  __b4:
    // [150] phi from gotoxy::@4 to gotoxy::@1 [phi:gotoxy::@4->gotoxy::@1]
  __b1_from___b4:
    // [150] phi gotoxy::y#4 = gotoxy::y#3 [phi:gotoxy::@4->gotoxy::@1#0] -- register_copy 
    jmp __b1
    // gotoxy::@1
  __b1:
    // [151] if(0<conio_screen_width) goto gotoxy::@2 -- 0_lt_vbuz1_then_la1 
    lda.z conio_screen_width
    bne __b2
    // [152] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
  __b3_from___b1:
    jmp __b3
    // gotoxy::@3
  __b3:
    jmp __b2
    // gotoxy::@2
  __b2:
    // [153] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // [154] conio_cursor_y[conio_screen_layer] = gotoxy::y#4 -- pbuc1_derefidx_vbuz1=vbuxx 
    ldy.z conio_screen_layer
    txa
    sta conio_cursor_y,y
    // [155] gotoxy::$6 = (unsigned int)gotoxy::y#4 -- vwuz1=_word_vbuxx 
    txa
    sta.z __6
    lda #0
    sta.z __6+1
    // [156] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift -- vwuz1=vwuz1_rol_vbuz2 
    ldy.z conio_rowshift
    beq !e+
  !:
    asl.z line_offset
    rol.z line_offset+1
    dey
    bne !-
  !e:
    // [157] gotoxy::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [158] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z line_offset
    sta conio_line_text,y
    lda.z line_offset+1
    sta conio_line_text+1,y
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [159] return 
    rts
}
  // vera_layer_get_color
// Get the text and back color for text output in 16 color mode.
// - layer: Value of 0 or 1.
// - return: an 8 bit value with bit 7:4 containing the back color and bit 3:0 containing the front color.
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// __register(A) char vera_layer_get_color(__register(X) char layer)
vera_layer_get_color: {
    .label addr = $a
    // [161] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 -- vbuaa=vbuxx_rol_1 
    txa
    asl
    // [162] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // [163] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C
    ldy #0
    and (addr),y
    // [164] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b1
    jmp __b2
    // vera_layer_get_color::@2
  __b2:
    // [165] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 -- vbuaa=pbuc1_derefidx_vbuxx_rol_4 
    lda vera_layer_backcolor,x
    asl
    asl
    asl
    asl
    // [166] vera_layer_get_color::return#1 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=vbuaa_bor_pbuc1_derefidx_vbuxx 
    ora vera_layer_textcolor,x
    // [167] phi from vera_layer_get_color::@1 vera_layer_get_color::@2 to vera_layer_get_color::@return [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return]
  __breturn_from___b1:
  __breturn_from___b2:
    // [167] phi vera_layer_get_color::return#2 = vera_layer_get_color::return#0 [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return#0] -- register_copy 
    jmp __breturn
    // vera_layer_get_color::@return
  __breturn:
    // [168] return 
    rts
    // vera_layer_get_color::@1
  __b1:
    // [169] vera_layer_get_color::return#0 = vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_textcolor,x
    jmp __breturn_from___b1
}
  // cputln
// Print a newline
cputln: {
    .label temp = $a
    // [170] cputln::$2 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [171] cputln::temp#0 = conio_line_text[cputln::$2] -- vwuz1=pwuc1_derefidx_vbuaa 
    // TODO: This needs to be optimized! other variations don't compile because of sections not available!
    tay
    lda conio_line_text,y
    sta.z temp
    lda conio_line_text+1,y
    sta.z temp+1
    // [172] cputln::temp#1 = cputln::temp#0 + conio_rowskip -- vwuz1=vwuz1_plus_vwuz2 
    clc
    lda.z temp
    adc.z conio_rowskip
    sta.z temp
    lda.z temp+1
    adc.z conio_rowskip+1
    sta.z temp+1
    // [173] cputln::$3 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [174] conio_line_text[cputln::$3] = cputln::temp#1 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z temp
    sta conio_line_text,y
    lda.z temp+1
    sta conio_line_text+1,y
    // [175] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // [176] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_y,x
    // [177] call cscroll
    jsr cscroll
    jmp __breturn
    // cputln::@return
  __breturn:
    // [178] return 
    rts
}
  // vera_layer_set_text_color_mode
// Set the configuration of the layer text color mode.
// - layer: Value of 0 or 1.
// - color_mode: Specifies the color mode to be VERA_LAYER_CONFIG_16 or VERA_LAYER_CONFIG_256 for text mode.
// void vera_layer_set_text_color_mode(__register(A) char layer, char color_mode)
vera_layer_set_text_color_mode: {
    .label addr = $25
    // [180] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [181] vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // [182] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C -- _deref_pbuz1=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C^$ff
    ldy #0
    and (addr),y
    ldy #0
    sta (addr),y
    // [183] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 -- _deref_pbuz1=_deref_pbuz1 
    ldy #0
    lda (addr),y
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_text_color_mode::@return
  __breturn:
    // [184] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label __1 = $f
    .label line_text = $20
    .label color = $f
    .label l = $24
    // [185] clrscr::line_text#0 = (char *)CONIO_SCREEN_TEXT#16 -- pbuz1=pbuz2 
    lda.z CONIO_SCREEN_TEXT_1
    sta.z line_text
    lda.z CONIO_SCREEN_TEXT_1+1
    sta.z line_text+1
    // [186] vera_layer_get_backcolor::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [187] call vera_layer_get_backcolor
    jsr vera_layer_get_backcolor
    // [188] vera_layer_get_backcolor::return#2 = vera_layer_get_backcolor::return#0
    jmp __b7
    // clrscr::@7
  __b7:
    // [189] clrscr::$0 = vera_layer_get_backcolor::return#2
    // [190] clrscr::$1 = clrscr::$0 << 4 -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta.z __1
    // [191] vera_layer_get_textcolor::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [192] call vera_layer_get_textcolor
    jsr vera_layer_get_textcolor
    // [193] vera_layer_get_textcolor::return#2 = vera_layer_get_textcolor::return#0
    jmp __b8
    // clrscr::@8
  __b8:
    // [194] clrscr::$2 = vera_layer_get_textcolor::return#2
    // [195] clrscr::color#0 = clrscr::$1 | clrscr::$2 -- vbuz1=vbuz1_bor_vbuaa 
    ora.z color
    sta.z color
    // [196] phi from clrscr::@8 to clrscr::@1 [phi:clrscr::@8->clrscr::@1]
  __b1_from___b8:
    // [196] phi clrscr::line_text#2 = clrscr::line_text#0 [phi:clrscr::@8->clrscr::@1#0] -- register_copy 
    // [196] phi clrscr::l#2 = 0 [phi:clrscr::@8->clrscr::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z l
    jmp __b1
    // clrscr::@1
  __b1:
    // [197] if(clrscr::l#2<conio_height) goto clrscr::@2 -- vbuz1_lt_vwuz2_then_la1 
    lda.z conio_height+1
    bne __b2
    lda.z l
    cmp.z conio_height
    bcc __b2
    jmp __b3
    // clrscr::@3
  __b3:
    // [198] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // [199] conio_cursor_y[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_y,y
    // [200] clrscr::$9 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [201] conio_line_text[clrscr::$9] = 0 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #0
    sta conio_line_text,y
    lda #0
    sta conio_line_text+1,y
    jmp __breturn
    // clrscr::@return
  __breturn:
    // [202] return 
    rts
    // clrscr::@2
  __b2:
    // [203] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [204] clrscr::$5 = byte0  clrscr::line_text#2 -- vbuaa=_byte0_pbuz1 
    lda.z line_text
    // [205] *VERA_ADDRX_L = clrscr::$5 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [206] clrscr::$6 = byte1  clrscr::line_text#2 -- vbuaa=_byte1_pbuz1 
    lda.z line_text+1
    // [207] *VERA_ADDRX_M = clrscr::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [208] clrscr::$7 = CONIO_SCREEN_BANK#14 | VERA_INC_1 -- vbuaa=vbuxx_bor_vbuc1 
    txa
    ora #VERA_INC_1
    // [209] *VERA_ADDRX_H = clrscr::$7 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [210] phi from clrscr::@2 to clrscr::@4 [phi:clrscr::@2->clrscr::@4]
  __b4_from___b2:
    // [210] phi clrscr::c#2 = 0 [phi:clrscr::@2->clrscr::@4#0] -- vbuyy=vbuc1 
    ldy #0
    jmp __b4
    // clrscr::@4
  __b4:
    // [211] if(clrscr::c#2<conio_width) goto clrscr::@5 -- vbuyy_lt_vwuz1_then_la1 
    lda.z conio_width+1
    bne __b5
    cpy.z conio_width
    bcc __b5
    jmp __b6
    // clrscr::@6
  __b6:
    // [212] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip -- pbuz1=pbuz1_plus_vwuz2 
    clc
    lda.z line_text
    adc.z conio_rowskip
    sta.z line_text
    lda.z line_text+1
    adc.z conio_rowskip+1
    sta.z line_text+1
    // [213] clrscr::l#1 = ++ clrscr::l#2 -- vbuz1=_inc_vbuz1 
    inc.z l
    // [196] phi from clrscr::@6 to clrscr::@1 [phi:clrscr::@6->clrscr::@1]
  __b1_from___b6:
    // [196] phi clrscr::line_text#2 = clrscr::line_text#1 [phi:clrscr::@6->clrscr::@1#0] -- register_copy 
    // [196] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@6->clrscr::@1#1] -- register_copy 
    jmp __b1
    // clrscr::@5
  __b5:
    // [214] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    lda #' '
    sta VERA_DATA0
    // [215] *VERA_DATA0 = clrscr::color#0 -- _deref_pbuc1=vbuz1 
    lda.z color
    sta VERA_DATA0
    // [216] clrscr::c#1 = ++ clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [210] phi from clrscr::@5 to clrscr::@4 [phi:clrscr::@5->clrscr::@4]
  __b4_from___b5:
    // [210] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@5->clrscr::@4#0] -- register_copy 
    jmp __b4
}
  // printf_str
/// Print a NUL-terminated string
// void printf_str(void (*putc)(char), __zp($20) const char *s)
printf_str: {
    .label s = $20
    // [218] phi from printf_str to printf_str::@1 [phi:printf_str->printf_str::@1]
  __b1_from_printf_str:
    // [218] phi printf_str::s#2 = main::s [phi:printf_str->printf_str::@1#0] -- pbuz1=pbuc1 
    lda #<main.s
    sta.z s
    lda #>main.s
    sta.z s+1
    jmp __b1
    // printf_str::@1
  __b1:
    // [219] printf_str::c#1 = *printf_str::s#2 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [220] printf_str::s#0 = ++ printf_str::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [221] if(0!=printf_str::c#1) goto printf_str::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // printf_str::@return
  __breturn:
    // [222] return 
    rts
    // printf_str::@2
  __b2:
    // [223] stackpush(char) = printf_str::c#1 -- _stackpushbyte_=vbuaa 
    pha
    // [224] callexecute cputc  -- call_vprc1 
    jsr cputc
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // [218] phi from printf_str::@2 to printf_str::@1 [phi:printf_str::@2->printf_str::@1]
  __b1_from___b2:
    // [218] phi printf_str::s#2 = printf_str::s#0 [phi:printf_str::@2->printf_str::@1#0] -- register_copy 
    jmp __b1
}
  // load_to_bank
// Load a file into one of the 256 8KB RAM banks.
// - device: The device to load from
// - filename: The file name
// - address: The absolute address in banked memory to load the file too
// - returns: 0xff: Success, other: Kernal Error Code (https://commodore.ca/manuals/pdfs/commodore_error_messages.pdf)
// Note: This function only works if the entire file fits within the selected bank. The function cannot load to multiple banks.
// char load_to_bank(char device, char *filename, unsigned long address)
load_to_bank: {
    .const device = 8
    .const bank = (<main.BANK_SPRITE>>$10)<<3|(>main.BANK_SPRITE)>>5
    // [226] setnam::filename = main::filename -- pbuz1=pbuc1 
    lda #<main.filename
    sta.z setnam.filename
    lda #>main.filename
    sta.z setnam.filename+1
    // [227] call setnam
    jsr setnam
    jmp __b1
    // load_to_bank::@1
  __b1:
    // [228] setlfs::device = load_to_bank::device#0 -- vbuz1=vbuc1 
    lda #device
    sta.z setlfs.device
    // [229] call setlfs
    jsr setlfs
    jmp __b2
    // load_to_bank::@2
  __b2:
    // [230] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = load_to_bank::bank#0 -- _deref_pbuc1=vbuc2 
    lda #bank
    sta VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A
    // [231] load::address = (char *)0+$a000 -- pbuz1=pbuc1 
    lda #<0+$a000
    sta.z load.address
    lda #>0+$a000
    sta.z load.address+1
    // [232] load::verify = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z load.verify
    // [233] call load
    jsr load
    jmp __breturn
    // load_to_bank::@return
  __breturn:
    // [234] return 
    rts
}
  // memcpy_bank_to_vram
// Copy block of memory (from banked RAM to VRAM)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination in VRAM.
// - vdest: absolute address in VRAM
// - src: absolute address in the banked RAM  of the CX16.
// - num: dword of the number of bytes to copy
// Note: This function can switch RAM bank during copying to copy data from multiple RAM banks.
// void memcpy_bank_to_vram(__zp($38) unsigned long vdest, unsigned long src, __zp($33) unsigned long num)
memcpy_bank_to_vram: {
    .label __5 = $f
    .label __9 = $20
    .label beg = $27
    .label end = $33
    // select the bank
    .label addr = $20
    .label pos = $27
    .label vdest = $38
    .label num = $33
    // [236] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [237] memcpy_bank_to_vram::$0 = byte0  memcpy_bank_to_vram::vdest#2 -- vbuaa=_byte0_vduz1 
    lda.z vdest
    // [238] *VERA_ADDRX_L = memcpy_bank_to_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [239] memcpy_bank_to_vram::$1 = byte1  memcpy_bank_to_vram::vdest#2 -- vbuaa=_byte1_vduz1 
    lda.z vdest+1
    // [240] *VERA_ADDRX_M = memcpy_bank_to_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [241] memcpy_bank_to_vram::$2 = byte2  memcpy_bank_to_vram::vdest#2 -- vbuaa=_byte2_vduz1 
    lda.z vdest+2
    // [242] *VERA_ADDRX_H = memcpy_bank_to_vram::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [243] *VERA_ADDRX_H = *VERA_ADDRX_H | VERA_INC_1 -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    lda #VERA_INC_1
    ora VERA_ADDRX_H
    sta VERA_ADDRX_H
    // [244] memcpy_bank_to_vram::end#0 = memcpy_bank_to_vram::beg#0 + memcpy_bank_to_vram::num#2 -- vduz1=vduz2_plus_vduz1 
    clc
    lda.z end
    adc.z beg
    sta.z end
    lda.z end+1
    adc.z beg+1
    sta.z end+1
    lda.z end+2
    adc.z beg+2
    sta.z end+2
    lda.z end+3
    adc.z beg+3
    sta.z end+3
    // [245] memcpy_bank_to_vram::$4 = byte2  memcpy_bank_to_vram::beg#0 -- vbuaa=_byte2_vduz1 
    lda.z beg+2
    // [246] memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3 -- vbuz1=vbuaa_rol_3 
    asl
    asl
    asl
    sta.z __5
    // [247] memcpy_bank_to_vram::$6 = byte1  memcpy_bank_to_vram::beg#0 -- vbuaa=_byte1_vduz1 
    lda.z beg+1
    // [248] memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5 -- vbuaa=vbuaa_ror_5 
    lsr
    lsr
    lsr
    lsr
    lsr
    // [249] memcpy_bank_to_vram::bank#0 = memcpy_bank_to_vram::$5 | memcpy_bank_to_vram::$7 -- vbuxx=vbuz1_bor_vbuaa 
    ora.z __5
    tax
    // [250] memcpy_bank_to_vram::$9 = word0  memcpy_bank_to_vram::beg#0 -- vwuz1=_word0_vduz2 
    lda.z beg
    sta.z __9
    lda.z beg+1
    sta.z __9+1
    // [251] memcpy_bank_to_vram::addr#0 = memcpy_bank_to_vram::$9 & $1fff -- vwuz1=vwuz1_band_vwuc1 
    lda.z addr
    and #<$1fff
    sta.z addr
    lda.z addr+1
    and #>$1fff
    sta.z addr+1
    // [252] memcpy_bank_to_vram::addr#1 = (char *)memcpy_bank_to_vram::addr#0 + $a000 -- pbuz1=pbuz1_plus_vwuc1 
    // stip off the top 3 bits, which are representing the bank of the word!
    lda.z addr
    clc
    adc #<$a000
    sta.z addr
    lda.z addr+1
    adc #>$a000
    sta.z addr+1
    // [253] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = memcpy_bank_to_vram::bank#0 -- _deref_pbuc1=vbuxx 
    stx VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A
    // [254] phi from memcpy_bank_to_vram memcpy_bank_to_vram::@3 to memcpy_bank_to_vram::@1 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1]
  __b1_from_memcpy_bank_to_vram:
  __b1_from___b3:
    // [254] phi memcpy_bank_to_vram::bank#2 = memcpy_bank_to_vram::bank#0 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1#0] -- register_copy 
    // [254] phi memcpy_bank_to_vram::addr#4 = memcpy_bank_to_vram::addr#1 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1#1] -- register_copy 
    // [254] phi memcpy_bank_to_vram::pos#2 = memcpy_bank_to_vram::beg#0 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1#2] -- register_copy 
    jmp __b1
  // select the bank
    // memcpy_bank_to_vram::@1
  __b1:
    // [255] if(memcpy_bank_to_vram::pos#2<memcpy_bank_to_vram::end#0) goto memcpy_bank_to_vram::@2 -- vduz1_lt_vduz2_then_la1 
    lda.z pos+3
    cmp.z end+3
    bcc __b2
    bne !+
    lda.z pos+2
    cmp.z end+2
    bcc __b2
    bne !+
    lda.z pos+1
    cmp.z end+1
    bcc __b2
    bne !+
    lda.z pos
    cmp.z end
    bcc __b2
  !:
    jmp __breturn
    // memcpy_bank_to_vram::@return
  __breturn:
    // [256] return 
    rts
    // memcpy_bank_to_vram::@2
  __b2:
    // [257] if(memcpy_bank_to_vram::addr#4!=$c000) goto memcpy_bank_to_vram::@3 -- pbuz1_neq_vwuc1_then_la1 
    lda.z addr+1
    cmp #>$c000
    bne __b3_from___b2
    lda.z addr
    cmp #<$c000
    bne __b3_from___b2
    jmp __b4
    // memcpy_bank_to_vram::@4
  __b4:
    // [258] memcpy_bank_to_vram::bank#1 = ++ memcpy_bank_to_vram::bank#2 -- vbuxx=_inc_vbuxx 
    inx
    // [259] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = memcpy_bank_to_vram::bank#1 -- _deref_pbuc1=vbuxx 
    stx VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A
    // [260] phi from memcpy_bank_to_vram::@4 to memcpy_bank_to_vram::@3 [phi:memcpy_bank_to_vram::@4->memcpy_bank_to_vram::@3]
  __b3_from___b4:
    // [260] phi memcpy_bank_to_vram::bank#5 = memcpy_bank_to_vram::bank#1 [phi:memcpy_bank_to_vram::@4->memcpy_bank_to_vram::@3#0] -- register_copy 
    // [260] phi memcpy_bank_to_vram::addr#5 = (char *) 40960 [phi:memcpy_bank_to_vram::@4->memcpy_bank_to_vram::@3#1] -- pbuz1=pbuc1 
    lda #<$a000
    sta.z addr
    lda #>$a000
    sta.z addr+1
    jmp __b3
    // [260] phi from memcpy_bank_to_vram::@2 to memcpy_bank_to_vram::@3 [phi:memcpy_bank_to_vram::@2->memcpy_bank_to_vram::@3]
  __b3_from___b2:
    // [260] phi memcpy_bank_to_vram::bank#5 = memcpy_bank_to_vram::bank#2 [phi:memcpy_bank_to_vram::@2->memcpy_bank_to_vram::@3#0] -- register_copy 
    // [260] phi memcpy_bank_to_vram::addr#5 = memcpy_bank_to_vram::addr#4 [phi:memcpy_bank_to_vram::@2->memcpy_bank_to_vram::@3#1] -- register_copy 
    jmp __b3
    // memcpy_bank_to_vram::@3
  __b3:
    // [261] *VERA_DATA0 = *memcpy_bank_to_vram::addr#5 -- _deref_pbuc1=_deref_pbuz1 
    ldy #0
    lda (addr),y
    sta VERA_DATA0
    // [262] memcpy_bank_to_vram::addr#2 = ++ memcpy_bank_to_vram::addr#5 -- pbuz1=_inc_pbuz1 
    inc.z addr
    bne !+
    inc.z addr+1
  !:
    // [263] memcpy_bank_to_vram::pos#1 = ++ memcpy_bank_to_vram::pos#2 -- vduz1=_inc_vduz1 
    inc.z pos
    bne !+
    inc.z pos+1
    bne !+
    inc.z pos+2
    bne !+
    inc.z pos+3
  !:
    jmp __b1_from___b3
}
  // memcpy_to_vram
// Copy block of memory (from RAM to VRAM)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination in VRAM.
// - vbank: Which 64K VRAM bank to put data into (0/1)
// - vdest: The destination address in VRAM
// - src: The source address in RAM
// - num: The number of bytes to copy
// void memcpy_to_vram(char vbank, void *vdest, void *src, unsigned int num)
memcpy_to_vram: {
    .const vbank = <VERA_SPRITE_ATTR>>$10
    .label vdest = VERA_SPRITE_ATTR&$ffff
    .label src = main.SPRITE_ATTR
    // Transfer the data
    .label end = src+SIZEOF_STRUCT_VERA_SPRITE
    .label s = $20
    // [264] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [265] *VERA_ADDRX_L = 0 -- _deref_pbuc1=vbuc2 
    // Set address
    lda #0
    sta VERA_ADDRX_L
    // [266] *VERA_ADDRX_M = byte1 memcpy_to_vram::vdest#0 -- _deref_pbuc1=vbuc2 
    lda #>vdest
    sta VERA_ADDRX_M
    // [267] *VERA_ADDRX_H = VERA_INC_1|memcpy_to_vram::vbank#0 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1|vbank
    sta VERA_ADDRX_H
    // [268] phi from memcpy_to_vram to memcpy_to_vram::@1 [phi:memcpy_to_vram->memcpy_to_vram::@1]
  __b1_from_memcpy_to_vram:
    // [268] phi memcpy_to_vram::s#2 = (char *)memcpy_to_vram::src#0 [phi:memcpy_to_vram->memcpy_to_vram::@1#0] -- pbuz1=pbuc1 
    lda #<src
    sta.z s
    lda #>src
    sta.z s+1
    jmp __b1
    // memcpy_to_vram::@1
  __b1:
    // [269] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z s+1
    cmp #>end
    bne __b2
    lda.z s
    cmp #<end
    bne __b2
    jmp __breturn
    // memcpy_to_vram::@return
  __breturn:
    // [270] return 
    rts
    // memcpy_to_vram::@2
  __b2:
    // [271] *VERA_DATA0 = *memcpy_to_vram::s#2 -- _deref_pbuc1=_deref_pbuz1 
    ldy #0
    lda (s),y
    sta VERA_DATA0
    // [272] memcpy_to_vram::s#1 = ++ memcpy_to_vram::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [268] phi from memcpy_to_vram::@2 to memcpy_to_vram::@1 [phi:memcpy_to_vram::@2->memcpy_to_vram::@1]
  __b1_from___b2:
    // [268] phi memcpy_to_vram::s#2 = memcpy_to_vram::s#1 [phi:memcpy_to_vram::@2->memcpy_to_vram::@1#0] -- register_copy 
    jmp __b1
}
  // vera_layer_mode_tile
// Set a vera layer in tile mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_depth: The color depth in bits per pixel (BPP), which can be 1, 2, 4 or 8.
// void vera_layer_mode_tile(char layer, unsigned long mapbase_address, unsigned long tilebase_address, unsigned int mapwidth, unsigned int mapheight, char tilewidth, char tileheight, char color_depth)
vera_layer_mode_tile: {
    .const mapbase = 0
    .label tilebase_address = vera_layer_mode_text.tilebase_address>>1
    // config
    .label config = VERA_LAYER_WIDTH_128|VERA_LAYER_HEIGHT_64
    jmp __b1
    // vera_layer_mode_tile::@1
  __b1:
    // [274] *(vera_layer_rowshift+vera_layer_mode_text::layer#0) = 8 -- _deref_pbuc1=vbuc2 
    lda #8
    sta vera_layer_rowshift+vera_layer_mode_text.layer
    // [275] *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = $100 -- _deref_pwuc1=vwuc2 
    lda #<$100
    sta vera_layer_rowskip+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT
    lda #>$100
    sta vera_layer_rowskip+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT+1
    // [276] phi from vera_layer_mode_tile::@1 to vera_layer_mode_tile::@2 [phi:vera_layer_mode_tile::@1->vera_layer_mode_tile::@2]
  __b2_from___b1:
    jmp __b2
    // vera_layer_mode_tile::@2
  __b2:
    // [277] call vera_layer_set_config
    jsr vera_layer_set_config
    jmp __b4
    // vera_layer_mode_tile::@4
  __b4:
    // [278] *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = 0 -- _deref_pwuc1=vwuc2 
    // mapbase
    lda #<0
    sta vera_mapbase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT
    lda #>0
    sta vera_mapbase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT+1
    // [279] *(vera_mapbase_bank+vera_layer_mode_text::layer#0) = 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta vera_mapbase_bank+vera_layer_mode_text.layer
    // [280] *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::mapbase_address#0 -- _deref_pduc1=vduc2 
    lda #<vera_layer_mode_text.mapbase_address
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG
    lda #>vera_layer_mode_text.mapbase_address
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+1
    lda #<vera_layer_mode_text.mapbase_address>>$10
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+2
    lda #>vera_layer_mode_text.mapbase_address>>$10
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+3
    // [281] call vera_layer_set_mapbase
    // [142] phi from vera_layer_mode_tile::@4 to vera_layer_set_mapbase [phi:vera_layer_mode_tile::@4->vera_layer_set_mapbase]
  vera_layer_set_mapbase_from___b4:
    // [142] phi vera_layer_set_mapbase::mapbase#3 = vera_layer_mode_tile::mapbase#0 [phi:vera_layer_mode_tile::@4->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #mapbase
    // [142] phi vera_layer_set_mapbase::layer#3 = vera_layer_mode_text::layer#0 [phi:vera_layer_mode_tile::@4->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #vera_layer_mode_text.layer
    jsr vera_layer_set_mapbase
    jmp __b5
    // vera_layer_mode_tile::@5
  __b5:
    // [282] *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = word0 vera_layer_mode_text::tilebase_address#0 -- _deref_pwuc1=vwuc2 
    // tilebase
    lda #<vera_layer_mode_text.tilebase_address&$ffff
    sta vera_tilebase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT
    lda #>vera_layer_mode_text.tilebase_address&$ffff
    sta vera_tilebase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT+1
    // [283] *(vera_tilebase_bank+vera_layer_mode_text::layer#0) = 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta vera_tilebase_bank+vera_layer_mode_text.layer
    // [284] *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::tilebase_address#0 -- _deref_pduc1=vduc2 
    lda #<vera_layer_mode_text.tilebase_address
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG
    lda #>vera_layer_mode_text.tilebase_address
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+1
    lda #<vera_layer_mode_text.tilebase_address>>$10
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+2
    lda #>vera_layer_mode_text.tilebase_address>>$10
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+3
    // [285] phi from vera_layer_mode_tile::@5 to vera_layer_mode_tile::@3 [phi:vera_layer_mode_tile::@5->vera_layer_mode_tile::@3]
  __b3_from___b5:
    jmp __b3
    // vera_layer_mode_tile::@3
  __b3:
    // [286] call vera_layer_set_tilebase
    jsr vera_layer_set_tilebase
    jmp __breturn
    // vera_layer_mode_tile::@return
  __breturn:
    // [287] return 
    rts
}
  // vera_layer_get_mapbase_bank
// Get the map base bank of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Bank in vera vram.
// __register(X) char vera_layer_get_mapbase_bank(__register(Y) char layer)
vera_layer_get_mapbase_bank: {
    // [288] vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#0] -- vbuxx=pbuc1_derefidx_vbuyy 
    ldx vera_mapbase_bank,y
    jmp __breturn
    // vera_layer_get_mapbase_bank::@return
  __breturn:
    // [289] return 
    rts
}
  // vera_layer_get_mapbase_offset
// Get the map base lower 16-bit address (offset) of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Offset in vera vram of the specified bank.
// __zp($1a) unsigned int vera_layer_get_mapbase_offset(__register(A) char layer)
vera_layer_get_mapbase_offset: {
    .label return = $1a
    // [290] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [291] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_mapbase_offset,y
    sta.z return
    lda vera_mapbase_offset+1,y
    sta.z return+1
    jmp __breturn
    // vera_layer_get_mapbase_offset::@return
  __breturn:
    // [292] return 
    rts
}
  // vera_layer_get_rowshift
// Get the bit shift value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Rowshift value to calculate fast from a y value to line offset in tile mode.
// __register(A) char vera_layer_get_rowshift(__register(Y) char layer)
vera_layer_get_rowshift: {
    // [293] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0] -- vbuaa=pbuc1_derefidx_vbuyy 
    lda vera_layer_rowshift,y
    jmp __breturn
    // vera_layer_get_rowshift::@return
  __breturn:
    // [294] return 
    rts
}
  // vera_layer_get_rowskip
// Get the value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Skip value to calculate fast from a y value to line offset in tile mode.
// __zp($11) unsigned int vera_layer_get_rowskip(__register(A) char layer)
vera_layer_get_rowskip: {
    .label return = $11
    // [295] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [296] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_layer_rowskip,y
    sta.z return
    lda vera_layer_rowskip+1,y
    sta.z return+1
    jmp __breturn
    // vera_layer_get_rowskip::@return
  __breturn:
    // [297] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // [298] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vbuz2_then_la1 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    cmp.z conio_screen_height
    bcc __breturn
    jmp __b1
    // cscroll::@1
  __b1:
    // [299] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 -- 0_neq_pbuc1_derefidx_vbuz1_then_la1 
    ldy.z conio_screen_layer
    lda conio_scroll_enable,y
    cmp #0
    bne __b4_from___b1
    jmp __b2
    // cscroll::@2
  __b2:
    // [300] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vwuz2_then_la1 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    ldy.z conio_height+1
    bne __breturn
    cmp.z conio_height
    bcc __breturn
    // [301] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
  __b3_from___b2:
    jmp __b3
    // cscroll::@3
  __b3:
    jmp __breturn
    // cscroll::@return
  __breturn:
    // [302] return 
    rts
    // [303] phi from cscroll::@1 to cscroll::@4 [phi:cscroll::@1->cscroll::@4]
  __b4_from___b1:
    jmp __b4
    // cscroll::@4
  __b4:
    // [304] call insertup
    jsr insertup
    jmp __b5
    // cscroll::@5
  __b5:
    // [305] gotoxy::y#2 = conio_screen_height - 1 -- vbuxx=vbuz1_minus_1 
    ldx.z conio_screen_height
    dex
    // [306] call gotoxy
    // [147] phi from cscroll::@5 to gotoxy [phi:cscroll::@5->gotoxy]
  gotoxy_from___b5:
    // [147] phi gotoxy::y#3 = gotoxy::y#2 [phi:cscroll::@5->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn
}
  // vera_layer_get_backcolor
// Get the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// __register(A) char vera_layer_get_backcolor(__register(Y) char layer)
vera_layer_get_backcolor: {
    // [307] vera_layer_get_backcolor::return#0 = vera_layer_backcolor[vera_layer_get_backcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuyy 
    lda vera_layer_backcolor,y
    jmp __breturn
    // vera_layer_get_backcolor::@return
  __breturn:
    // [308] return 
    rts
}
  // vera_layer_get_textcolor
// Get the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// __register(A) char vera_layer_get_textcolor(__register(Y) char layer)
vera_layer_get_textcolor: {
    // [309] vera_layer_get_textcolor::return#0 = vera_layer_textcolor[vera_layer_get_textcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuyy 
    lda vera_layer_textcolor,y
    jmp __breturn
    // vera_layer_get_textcolor::@return
  __breturn:
    // [310] return 
    rts
}
  // setnam
// Kernal SETNAM function
// SETNAM. Set file name parameters.
// void setnam(__zp($30) char * volatile filename)
setnam: {
    .label filename = $30
    .label filename_len = $2b
    .label __0 = 2
    // [311] strlen::str#0 = setnam::filename -- pbuz1=pbuz2 
    lda.z filename
    sta.z strlen.str
    lda.z filename+1
    sta.z strlen.str+1
    // [312] call strlen
    // [344] phi from setnam to strlen [phi:setnam->strlen]
  strlen_from_setnam:
    jsr strlen
    // [313] strlen::return#0 = strlen::len#2
    jmp __b1
    // setnam::@1
  __b1:
    // [314] setnam::$0 = strlen::return#0
    // [315] setnam::filename_len = (char)setnam::$0 -- vbuz1=_byte_vwuz2 
    lda.z __0
    sta.z filename_len
    // asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
    lda filename_len
    ldx filename
    ldy filename+1
    jsr $ffbd
    jmp __breturn
    // setnam::@return
  __breturn:
    // [317] return 
    rts
}
  // setlfs
// SETLFS. Set file parameters.
// void setlfs(__zp($32) volatile char device)
setlfs: {
    .label device = $32
    // asm { ldxdevice lda#1 ldy#0 jsr$ffba  }
    ldx device
    lda #1
    ldy #0
    jsr $ffba
    jmp __breturn
    // setlfs::@return
  __breturn:
    // [319] return 
    rts
}
  // load
// LOAD. Load or verify file. (Must call SETLFS and SETNAM beforehands.)
// - verify: 0 = Load, 1-255 = Verify
//
// Returns a status, 0xff: Success other: Kernal Error Code
// char load(__zp($3d) char * volatile address, __zp($3c) volatile char verify)
load: {
    .label address = $3d
    .label verify = $3c
    .label status = $2c
    // [320] load::status = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z status
    // asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
    ldx address
    ldy address+1
    lda verify
    jsr $ffd5
    bcs error
    lda #$ff
  error:
    sta status
    jmp __breturn
    // load::@return
  __breturn:
    // [322] return 
    rts
}
  // vera_layer_set_config
// Set the configuration of the layer.
// - layer: Value of 0 or 1.
// - config: Specifies the modes which are specified using T256C / 'Bitmap Mode' / 'Color Depth'.
// void vera_layer_set_config(char layer, char config)
vera_layer_set_config: {
    .label addr = $1e
    // [323] vera_layer_set_config::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) -- pbuz1=_deref_qbuc1 
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER
    sta.z addr
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER+1
    sta.z addr+1
    // [324] *vera_layer_set_config::addr#0 = vera_layer_mode_tile::config#10 -- _deref_pbuz1=vbuc1 
    lda #vera_layer_mode_tile.config
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_config::@return
  __breturn:
    // [325] return 
    rts
}
  // vera_layer_set_tilebase
// Set the base of the tiles for the layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - tilebase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// void vera_layer_set_tilebase(char layer, char tilebase)
vera_layer_set_tilebase: {
    .label addr = $1a
    // [326] vera_layer_set_tilebase::addr#0 = *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER) -- pbuz1=_deref_qbuc1 
    lda vera_layer_tilebase+vera_layer_mode_text.layer*SIZEOF_POINTER
    sta.z addr
    lda vera_layer_tilebase+vera_layer_mode_text.layer*SIZEOF_POINTER+1
    sta.z addr+1
    // [327] *vera_layer_set_tilebase::addr#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK -- _deref_pbuz1=vbuc1 
    lda #(>vera_layer_mode_tile.tilebase_address)&VERA_LAYER_TILEBASE_MASK
    ldy #0
    sta (addr),y
    jmp __breturn
    // vera_layer_set_tilebase::@return
  __breturn:
    // [328] return 
    rts
}
  // insertup
// Insert a new line, and scroll the upper part of the screen up.
insertup: {
    .label cy = $f
    .label width = $e
    .label line = 8
    .label start = 8
    // [329] insertup::cy#0 = conio_cursor_y[conio_screen_layer] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    sta.z cy
    // [330] insertup::width#0 = conio_screen_width << 1 -- vbuz1=vbuz2_rol_1 
    lda.z conio_screen_width
    asl
    sta.z width
    // [331] phi from insertup to insertup::@1 [phi:insertup->insertup::@1]
  __b1_from_insertup:
    // [331] phi insertup::i#2 = 1 [phi:insertup->insertup::@1#0] -- vbuxx=vbuc1 
    ldx #1
    jmp __b1
    // insertup::@1
  __b1:
    // [332] if(insertup::i#2<=insertup::cy#0) goto insertup::@2 -- vbuxx_le_vbuz1_then_la1 
    lda.z cy
    stx.z $ff
    cmp.z $ff
    bcs __b2
    // [333] phi from insertup::@1 to insertup::@3 [phi:insertup::@1->insertup::@3]
  __b3_from___b1:
    jmp __b3
    // insertup::@3
  __b3:
    // [334] call clearline
    jsr clearline
    jmp __breturn
    // insertup::@return
  __breturn:
    // [335] return 
    rts
    // insertup::@2
  __b2:
    // [336] insertup::$3 = insertup::i#2 - 1 -- vbuaa=vbuxx_minus_1 
    txa
    sec
    sbc #1
    // [337] insertup::line#0 = insertup::$3 << conio_rowshift -- vwuz1=vbuaa_rol_vbuz2 
    ldy.z conio_rowshift
    sta.z line
    lda #0
    sta.z line+1
    cpy #0
    beq !e+
  !:
    asl.z line
    rol.z line+1
    dey
    bne !-
  !e:
    // [338] insertup::start#0 = CONIO_SCREEN_TEXT#11 + insertup::line#0 -- pbuz1=pbuz2_plus_vwuz1 
    clc
    lda.z start
    adc.z CONIO_SCREEN_TEXT
    sta.z start
    lda.z start+1
    adc.z CONIO_SCREEN_TEXT+1
    sta.z start+1
    // [339] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip -- pbuz1=pbuz2_plus_vwuz3 
    lda.z start
    clc
    adc.z conio_rowskip
    sta.z memcpy_in_vram.src
    lda.z start+1
    adc.z conio_rowskip+1
    sta.z memcpy_in_vram.src+1
    // [340] memcpy_in_vram::dest#0 = (void *)insertup::start#0
    // [341] memcpy_in_vram::num#0 = insertup::width#0 -- vwuz1=vbuz2 
    lda.z width
    sta.z memcpy_in_vram.num
    lda #0
    sta.z memcpy_in_vram.num+1
    // [342] call memcpy_in_vram
    jsr memcpy_in_vram
    jmp __b4
    // insertup::@4
  __b4:
    // [343] insertup::i#1 = ++ insertup::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [331] phi from insertup::@4 to insertup::@1 [phi:insertup::@4->insertup::@1]
  __b1_from___b4:
    // [331] phi insertup::i#2 = insertup::i#1 [phi:insertup::@4->insertup::@1#0] -- register_copy 
    jmp __b1
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// __zp(2) unsigned int strlen(__zp(6) char *str)
strlen: {
    .label str = 6
    .label return = 2
    .label len = 2
    // [345] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
  __b1_from_strlen:
    // [345] phi strlen::len#2 = 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    lda #>0
    sta.z len+1
    // [345] phi strlen::str#2 = strlen::str#0 [phi:strlen->strlen::@1#1] -- register_copy 
    jmp __b1
    // strlen::@1
  __b1:
    // [346] if(0!=*strlen::str#2) goto strlen::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // strlen::@return
  __breturn:
    // [347] return 
    rts
    // strlen::@2
  __b2:
    // [348] strlen::len#1 = ++ strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // [349] strlen::str#1 = ++ strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [345] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
  __b1_from___b2:
    // [345] phi strlen::len#2 = strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [345] phi strlen::str#2 = strlen::str#1 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // clearline
clearline: {
    .label addr = $c
    .label c = 6
    // [350] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [351] clearline::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [352] clearline::addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[clearline::$5] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    // Set address
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z addr+1
    // [353] clearline::$1 = byte0  clearline::addr#0 -- vbuaa=_byte0_pbuz1 
    lda.z addr
    // [354] *VERA_ADDRX_L = clearline::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_L
    // [355] clearline::$2 = byte1  clearline::addr#0 -- vbuaa=_byte1_pbuz1 
    lda.z addr+1
    // [356] *VERA_ADDRX_M = clearline::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [357] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // [358] vera_layer_get_color::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [359] call vera_layer_get_color
    // [160] phi from clearline to vera_layer_get_color [phi:clearline->vera_layer_get_color]
  vera_layer_get_color_from_clearline:
    // [160] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#1 [phi:clearline->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // [360] vera_layer_get_color::return#4 = vera_layer_get_color::return#2
    jmp __b4
    // clearline::@4
  __b4:
    // [361] clearline::color#0 = vera_layer_get_color::return#4 -- vbuxx=vbuaa 
    tax
    // [362] phi from clearline::@4 to clearline::@1 [phi:clearline::@4->clearline::@1]
  __b1_from___b4:
    // [362] phi clearline::c#2 = 0 [phi:clearline::@4->clearline::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z c
    lda #>0
    sta.z c+1
    jmp __b1
    // clearline::@1
  __b1:
    // [363] if(clearline::c#2<conio_screen_width) goto clearline::@2 -- vwuz1_lt_vbuz2_then_la1 
    lda.z c+1
    bne !+
    lda.z c
    cmp.z conio_screen_width
    bcc __b2
  !:
    jmp __b3
    // clearline::@3
  __b3:
    // [364] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    jmp __breturn
    // clearline::@return
  __breturn:
    // [365] return 
    rts
    // clearline::@2
  __b2:
    // [366] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    // Set data
    lda #' '
    sta VERA_DATA0
    // [367] *VERA_DATA0 = clearline::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // [368] clearline::c#1 = ++ clearline::c#2 -- vwuz1=_inc_vwuz1 
    inc.z c
    bne !+
    inc.z c+1
  !:
    // [362] phi from clearline::@2 to clearline::@1 [phi:clearline::@2->clearline::@1]
  __b1_from___b2:
    // [362] phi clearline::c#2 = clearline::c#1 [phi:clearline::@2->clearline::@1#0] -- register_copy 
    jmp __b1
}
  // memcpy_in_vram
// Copy block of memory (from VRAM to VRAM)
// Copies the values from the location pointed by src to the location pointed by dest.
// The method uses the VERA access ports 0 and 1 to copy data from and to in VRAM.
// - src_bank:  64K VRAM bank number to copy from (0/1).
// - src: pointer to the location to copy from. Note that the address is a 16 bit value!
// - src_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - dest_bank:  64K VRAM bank number to copy to (0/1).
// - dest: pointer to the location to copy to. Note that the address is a 16 bit value!
// - dest_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - num: The number of bytes to copy
// void memcpy_in_vram(char dest_bank, __zp(8) void *dest, char dest_increment, char src_bank, __zp($c) char *src, char src_increment, __zp(4) unsigned int num)
memcpy_in_vram: {
    .label i = 2
    .label dest = 8
    .label src = $c
    .label num = 4
    // [369] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // [370] memcpy_in_vram::$0 = byte0  (void *)memcpy_in_vram::src#0 -- vbuaa=_byte0_pvoz1 
    lda.z src
    // [371] *VERA_ADDRX_L = memcpy_in_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [372] memcpy_in_vram::$1 = byte1  (void *)memcpy_in_vram::src#0 -- vbuaa=_byte1_pvoz1 
    lda.z src+1
    // [373] *VERA_ADDRX_M = memcpy_in_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [374] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // [375] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    // Select DATA1
    lda #VERA_ADDRSEL
    ora VERA_CTRL
    sta VERA_CTRL
    // [376] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#0 -- vbuaa=_byte0_pvoz1 
    lda.z dest
    // [377] *VERA_ADDRX_L = memcpy_in_vram::$3 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // [378] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#0 -- vbuaa=_byte1_pvoz1 
    lda.z dest+1
    // [379] *VERA_ADDRX_M = memcpy_in_vram::$4 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // [380] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // [381] phi from memcpy_in_vram to memcpy_in_vram::@1 [phi:memcpy_in_vram->memcpy_in_vram::@1]
  __b1_from_memcpy_in_vram:
    // [381] phi memcpy_in_vram::i#2 = 0 [phi:memcpy_in_vram->memcpy_in_vram::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z i
    lda #>0
    sta.z i+1
    jmp __b1
  // Transfer the data
    // memcpy_in_vram::@1
  __b1:
    // [382] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2 -- vwuz1_lt_vwuz2_then_la1 
    lda.z i+1
    cmp.z num+1
    bcc __b2
    bne !+
    lda.z i
    cmp.z num
    bcc __b2
  !:
    jmp __breturn
    // memcpy_in_vram::@return
  __breturn:
    // [383] return 
    rts
    // memcpy_in_vram::@2
  __b2:
    // [384] *VERA_DATA1 = *VERA_DATA0 -- _deref_pbuc1=_deref_pbuc2 
    lda VERA_DATA0
    sta VERA_DATA1
    // [385] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2 -- vwuz1=_inc_vwuz1 
    inc.z i
    bne !+
    inc.z i+1
  !:
    // [381] phi from memcpy_in_vram::@2 to memcpy_in_vram::@1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1]
  __b1_from___b2:
    // [381] phi memcpy_in_vram::i#2 = memcpy_in_vram::i#1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  VERA_LAYER_WIDTH: .word $20, $40, $80, $100
  VERA_LAYER_HEIGHT: .word $20, $40, $80, $100
  /// --- VERA function encapsulation ---
  vera_mapbase_offset: .word 0, 0
  vera_mapbase_bank: .byte 0, 0
  vera_mapbase_address: .dword 0, 0
  vera_tilebase_offset: .word 0, 0
  vera_tilebase_bank: .byte 0, 0
  vera_tilebase_address: .dword 0, 0
  vera_layer_rowshift: .byte 0, 0
  vera_layer_rowskip: .word 0, 0
  vera_layer_config: .word VERA_L0_CONFIG, VERA_L1_CONFIG
  vera_layer_mapbase: .word VERA_L0_MAPBASE, VERA_L1_MAPBASE
  vera_layer_tilebase: .word VERA_L0_TILEBASE, VERA_L1_TILEBASE
  vera_layer_textcolor: .byte WHITE, WHITE
  vera_layer_backcolor: .byte BLUE, BLUE
  // The number of bytes on the screen
  // The current cursor x-position
  conio_cursor_x: .byte 0, 0
  // The current cursor y-position
  conio_cursor_y: .byte 0, 0
  // The current text cursor line start
  conio_line_text: .word 0, 0
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  conio_scroll_enable: .byte 1, 1
.segment Sprite
SPRITE_PIXELS:
.var pic = LoadPicture("ship.png")
    // palette: rgb->idx
    .var palette = Hashtable()
    // RGB value for each palette index
    .var palList = List()
    // Next palette index
    .var nxt_idx = 0;
    // Extract palette while outputting pixels as palete index values
    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x++) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx = palette.get(rgb)
            .if(idx==null) {
                .eval idx = nxt_idx++;
                .eval palette.put(rgb,idx);
                .eval palList.add(rgb)
            }
        }
    }
    .if(nxt_idx>16) .error "Image has too many colours "+nxt_idx

    .for(var i=0;i<16;i++) {
        .var rgb = palList.get(i)
        .var red = floor(rgb / [256*256])
        .var green = floor(rgb/256) & 255
        .var blue = rgb & 255
        // bits 4-8: green, bits 0-3 blue
        .byte green&$f0  | blue/16
        // bits bits 0-3 red
        .byte red/16
    }

    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x+=2) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx1 = palette.get(rgb)
            .if(idx1==null) {
                .printnow "unknown rgb value!"
            }
            // Find palette index (add if not known)
            .eval rgb = pic.getPixel(x+1,y);
            .var idx2 = palette.get(rgb)
            .if(idx2==null) {
                .printnow "unknown rgb value!"
            }
            .byte idx1*16+idx2;
        }
    }

.segment Data
  __0: .word (main.VRAM_SPRITE/$20&$ffff)|VERA_SPRITE_8BPP, $140-$20, $f0-$20
  .byte $c, $f1

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __init1
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b2
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp vera_layer_get_width1
Removing instruction jmp vera_layer_get_width1___breturn
Removing instruction jmp __b1
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp vera_layer_get_height1
Removing instruction jmp vera_layer_get_height1___breturn
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b6
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b3
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Removing instruction lda #>0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction lda #<0
Removing instruction lda #>0
Removing instruction lda.z __16+1
Replacing instruction ldy.z conio_screen_layer with TAY
Removing instruction ldy.z conio_screen_layer
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction ldy #0
Removing instruction lda #0
Removing instruction ldy.z conio_screen_layer
Replacing instruction lda.z conio_screen_layer with TYA
Removing instruction lda #0
Removing instruction lda #>0
Removing instruction lda #0
Removing instruction lda filename_len
Removing instruction lda #>0
Removing instruction lda #>0
Removing instruction lda #>0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __b1_from___b9 with __b1
Replacing label __b1_from___b7 with __b1
Replacing label __b4_from_gotoxy with __b1
Replacing label __breturn_from___b1 with __breturn
Replacing label __b3_from___b2 with __b3
Replacing label __b3_from___b2 with __b3
Replacing label __breturn with __b3
Replacing label __b4_from___b1 with __b4
Replacing label __breturn with __b3
Replacing label __breturn with __b3
Replacing label __breturn with __b3
Removing instruction __b1_from___init1:
Removing instruction main_from___b1:
Removing instruction __b3_from_conio_x16_init:
Removing instruction __b4_from___b3:
Removing instruction __b5_from___b4:
Removing instruction __b6_from___b5:
Removing instruction __b7_from___b6:
Removing instruction vera_layer_set_mapbase_from___b7:
Removing instruction __b8_from___b7:
Removing instruction vera_layer_set_mapbase_from___b8:
Removing instruction __b1_from___b2:
Removing instruction __b1_from___b9:
Removing instruction __b4_from___b3:
Removing instruction __b6_from___b5:
Removing instruction __b1_from___b7:
Removing instruction __b1_from_main:
Removing instruction __b2_from___b1:
Removing instruction __b3_from___b2:
Removing instruction printf_str_from___b3:
Removing instruction __b5_from___b4:
Removing instruction memcpy_bank_to_vram_from___b5:
Removing instruction __b6_from___b5:
Removing instruction memcpy_bank_to_vram_from___b6:
Removing instruction __b1_from_vera_layer_mode_text:
Removing instruction vera_layer_set_text_color_mode_from___b1:
Removing instruction vera_layer_get_width1___breturn:
Removing instruction vera_layer_get_height1___breturn:
Removing instruction __b4_from_gotoxy:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction __b3_from___b1:
Removing instruction __b3:
Removing instruction __breturn_from___b1:
Removing instruction __breturn_from___b2:
Removing instruction __b1_from_memcpy_bank_to_vram:
Removing instruction __b3_from___b2:
Removing instruction __b2_from___b1:
Removing instruction __b3_from___b5:
Removing instruction __b3_from___b2:
Removing instruction __breturn:
Removing instruction __b4_from___b1:
Removing instruction __b3_from___b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __init1:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction vera_layer_mode_text_from_conio_x16_init:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b2:
Removing instruction gotoxy_from___b1:
Removing instruction __breturn:
Removing instruction vera_layer_get_color_from_cputc:
Removing instruction __b7:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b6:
Removing instruction vera_layer_set_text_color_mode_from_main:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __breturn:
Removing instruction vera_layer_mode_tile_from_vera_layer_mode_text:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction vera_layer_get_width1:
Removing instruction __b1:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction vera_layer_get_height1:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_gotoxy:
Removing instruction __breturn:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b1_from___b8:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4_from___b2:
Removing instruction __b6:
Removing instruction __b1_from___b6:
Removing instruction __b4_from___b5:
Removing instruction __b1_from_printf_str:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b3_from___b4:
Removing instruction __b1_from_memcpy_to_vram:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b4:
Removing instruction vera_layer_set_mapbase_from___b4:
Removing instruction __b5:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b5:
Removing instruction gotoxy_from___b5:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction strlen_from_setnam:
Removing instruction __b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __b1_from_insertup:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction __b1_from_strlen:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction vera_layer_get_color_from_clearline:
Removing instruction __b4:
Removing instruction __b1_from___b4:
Removing instruction __b3:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b1_from_memcpy_in_vram:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5UnusedLabelElimination
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __breturn
Replacing jump to rts with rts in jmp __b3
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __b1_from___b3 to __b1
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b1
Removing instruction bne __b2
Removing instruction jmp __b3
Removing instruction bcc __b3
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction ldy.z conio_screen_layer
Removing instruction ldy.z conio_screen_layer
Removing instruction ldy.z conio_screen_layer
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Removing instruction __b2:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
__constant struct VERA_SPRITE $0 = { ADDR: word0 main::VRAM_SPRITE/$20|VERA_SPRITE_8BPP, X: $140-$20, Y: (unsigned int)$f0-$20, CTRL1: $c, CTRL2: $f1 }
__constant const char BLUE = 6
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#11 // CONIO_SCREEN_BANK zp[1]:45 625.0625
char CONIO_SCREEN_BANK#14 // reg byte x 16.953846153846154
char *CONIO_SCREEN_TEXT
char *CONIO_SCREEN_TEXT#11 // CONIO_SCREEN_TEXT zp[2]:19 2.0370555611111112E7
unsigned int CONIO_SCREEN_TEXT#16 // CONIO_SCREEN_TEXT_1 zp[2]:63 2.9705882352941178
__constant char OFFSET_STRUCT_MOS6522_VIA_PORT_A = 1
__constant char OFFSET_STRUCT_VERA_SPRITE_X = 2
__constant char OFFSET_STRUCT_VERA_SPRITE_Y = 4
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char SIZEOF_POINTER = 2
__constant char SIZEOF_STRUCT_VERA_SPRITE = 8
__constant char SIZEOF_UNSIGNED_INT = 2
__constant char SIZEOF_UNSIGNED_LONG = 4
__constant char SPRITE_PIXELS[] = kickasm {{ .var pic = LoadPicture("ship.png")
    // palette: rgb->idx
    .var palette = Hashtable()
    // RGB value for each palette index
    .var palList = List()
    // Next palette index
    .var nxt_idx = 0;
    // Extract palette while outputting pixels as palete index values
    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x++) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx = palette.get(rgb)
            .if(idx==null) {
                .eval idx = nxt_idx++;
                .eval palette.put(rgb,idx);
                .eval palList.add(rgb)
            }
        }
    }
    .if(nxt_idx>16) .error "Image has too many colours "+nxt_idx

    .for(var i=0;i<16;i++) {
        .var rgb = palList.get(i)
        .var red = floor(rgb / [256*256])
        .var green = floor(rgb/256) & 255
        .var blue = rgb & 255
        // bits 4-8: green, bits 0-3 blue
        .byte green&$f0  | blue/16
        // bits bits 0-3 red
        .byte red/16
    }

    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x+=2) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx1 = palette.get(rgb)
            .if(idx1==null) {
                .printnow "unknown rgb value!"
            }
            // Find palette index (add if not known)
            .eval rgb = pic.getPixel(x+1,y);
            .var idx2 = palette.get(rgb)
            .if(idx2==null) {
                .printnow "unknown rgb value!"
            }
            .byte idx1*16+idx2;
        }
    }
 }}
__constant unsigned int STACK_BASE = $103
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *) 40738
__constant char * const VERA_ADDRX_L = (char *) 40736
__constant char * const VERA_ADDRX_M = (char *) 40737
__constant char * const VERA_CTRL = (char *) 40741
__constant char * const VERA_DATA0 = (char *) 40739
__constant char * const VERA_DATA1 = (char *) 40740
__constant const char VERA_DCSEL = 2
__constant char * const VERA_DC_HSCALE = (char *) 40746
__constant char * const VERA_DC_VIDEO = (char *) 40745
__constant char * const VERA_DC_VSCALE = (char *) 40747
__constant const char VERA_INC_1 = $10
__constant char * const VERA_L0_CONFIG = (char *) 40749
__constant char * const VERA_L0_MAPBASE = (char *) 40750
__constant char * const VERA_L0_TILEBASE = (char *) 40751
__constant char * const VERA_L1_CONFIG = (char *) 40756
__constant char * const VERA_L1_MAPBASE = (char *) 40757
__constant char * const VERA_L1_TILEBASE = (char *) 40758
__constant const char VERA_LAYER_CONFIG_256C = 8
__constant const unsigned int VERA_LAYER_HEIGHT[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_HEIGHT_64 = $40
__constant const char VERA_LAYER_HEIGHT_MASK = $c0
__constant const char VERA_LAYER_TILEBASE_MASK = $fc
__constant const unsigned int VERA_LAYER_WIDTH[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_WIDTH_128 = $20
__constant const char VERA_LAYER_WIDTH_MASK = $30
__constant const unsigned long VERA_PALETTE = $1fa00
__constant const char VERA_SPRITES_ENABLE = $40
__constant const unsigned int VERA_SPRITE_8BPP = $8000
__constant const unsigned long VERA_SPRITE_ATTR = $1fc00
__constant struct MOS6522_VIA * const VIA1 = (struct MOS6522_VIA *) 40800
__constant const char WHITE = 1
void __start()
void clearline()
char clearline::$1 // reg byte a 2.00000002E8
char clearline::$2 // reg byte a 2.00000002E8
char clearline::$5 // reg byte a 2.00000002E8
char *clearline::addr
char *clearline::addr#0 // addr zp[2]:12 1.00000001E8
unsigned int clearline::c
unsigned int clearline::c#1 // c zp[2]:6 2.0000000002E10
unsigned int clearline::c#2 // c zp[2]:6 7.50000000075E9
char clearline::color
char clearline::color#0 // reg byte x 1.6833333336666665E9
void clrscr()
char clrscr::$0 // reg byte a 202.0
char clrscr::$1 // zp[1]:15 40.4
char clrscr::$2 // reg byte a 202.0
char clrscr::$5 // reg byte a 2002.0
char clrscr::$6 // reg byte a 2002.0
char clrscr::$7 // reg byte a 2002.0
char clrscr::$9 // reg byte a 202.0
char clrscr::c
char clrscr::c#1 // reg byte y 20002.0
char clrscr::c#2 // reg byte y 7500.75
char *clrscr::ch
char clrscr::color
char clrscr::color#0 // color zp[1]:15 594.2352941176471
char clrscr::l
char clrscr::l#1 // l zp[1]:36 2002.0
char clrscr::l#2 // l zp[1]:36 200.2
char *clrscr::line_text
char *clrscr::line_text#0 // line_text zp[2]:32 18.363636363636363
char *clrscr::line_text#1 // line_text zp[2]:32 1001.0
char *clrscr::line_text#2 // line_text zp[2]:32 293.2142857142857
__constant char conio_cursor_x[2] = { 0, 0 }
__constant char conio_cursor_y[2] = { 0, 0 }
__loadstore unsigned int conio_height // zp[2]:34 10320.670103092783
__constant unsigned int conio_line_text[2] = { 0, 0 }
__loadstore char conio_rowshift // zp[1]:21 8347108.305785124
__loadstore unsigned int conio_rowskip // zp[2]:22 8197550.049180328
__loadstore volatile char conio_screen_height // zp[1]:25 112149.78504672897
__loadstore char conio_screen_layer // zp[1]:24 1761903.7743589743
__loadstore volatile char conio_screen_width // zp[1]:16 7.056345074647889E7
__constant char conio_scroll_enable[2] = { 1, 1 }
__loadstore unsigned int conio_width // zp[2]:46 203.08080808080808
void conio_x16_init()
__constant char * const conio_x16_init::BASIC_CURSOR_LINE = (char *) 214
char conio_x16_init::line
char conio_x16_init::line#0 // line zp[1]:55 2.1999999999999997
char conio_x16_init::line#1 // line zp[1]:55 22.0
char conio_x16_init::line#3 // line zp[1]:55 33.0
__stackcall void cputc(char c)
char cputc::$15 // reg byte a 20002.0
unsigned int cputc::$16 // zp[2]:2 20002.0
char cputc::$2 // reg byte a 20002.0
char cputc::$4 // reg byte a 20002.0
char cputc::$5 // reg byte a 20002.0
char cputc::$6 // reg byte a 20002.0
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // c zp[1]:36 1764.8823529411764
char cputc::color
char cputc::color#0 // reg byte x 1428.7142857142858
char *cputc::conio_addr
char *cputc::conio_addr#0 // conio_addr zp[2]:6 10001.0
char *cputc::conio_addr#1 // conio_addr zp[2]:6 6000.6
char cputc::scroll_enable
char cputc::scroll_enable#0 // reg byte a 20002.0
void cputln()
char cputln::$2 // reg byte a 200002.0
char cputln::$3 // reg byte a 200002.0
unsigned int cputln::temp
unsigned int cputln::temp#0 // temp zp[2]:10 200002.0
unsigned int cputln::temp#1 // temp zp[2]:10 100001.0
void cscroll()
void gotoxy(char x , char y)
char gotoxy::$5 // reg byte a 2.0000002E7
unsigned int gotoxy::$6 // zp[2]:17 2.0000002E7
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:17 1.0000001E7
char gotoxy::x
char gotoxy::y
char gotoxy::y#1 // reg byte x 22.0
char gotoxy::y#2 // reg byte x 2000002.0
char gotoxy::y#3 // reg byte x 7000004.666666666
char gotoxy::y#4 // reg byte x 4000000.4
void insertup()
char insertup::$3 // reg byte a 2.000000002E9
char insertup::cy
char insertup::cy#0 // cy zp[1]:15 8.416666683333334E7
char insertup::i
char insertup::i#1 // reg byte x 2.000000002E9
char insertup::i#2 // reg byte x 4.444444448888889E8
unsigned int insertup::line
unsigned int insertup::line#0 // line zp[2]:8 2.000000002E9
char *insertup::start
char *insertup::start#0 // start zp[2]:8 1.000000001E9
char insertup::width
char insertup::width#0 // width zp[1]:14 9.1818182E7
char load(char * volatile address , volatile char verify)
__loadstore char * volatile load::address // zp[2]:61 33.666666666666664
char load::return
__loadstore volatile char load::status // zp[1]:44 1001.0
__loadstore volatile char load::verify // zp[1]:60 50.5
char load_to_bank(char device , char *filename , unsigned long address)
char *load_to_bank::addr
unsigned long load_to_bank::address
char load_to_bank::bank
__constant char load_to_bank::bank#0 = byte2 main::BANK_SPRITE<<3|byte1 main::BANK_SPRITE>>5 // bank
char load_to_bank::device
__constant char load_to_bank::device#0 = 8 // device
char *load_to_bank::filename
char load_to_bank::return
void main()
__constant const unsigned long main::BANK_SPRITE = $12000
__loadstore volatile struct VERA_SPRITE main::SPRITE_ATTR // zp[8]:65
__constant const unsigned long main::VRAM_SPRITE = $10000
__constant char main::filename[7] = "SPRITE"
__constant char main::s[$2d] = "

sprite banked file load and display demo.
"
void memcpy_bank_to_vram(unsigned long vdest , unsigned long src , unsigned long num)
char memcpy_bank_to_vram::$0 // reg byte a 202.0
char memcpy_bank_to_vram::$1 // reg byte a 202.0
char memcpy_bank_to_vram::$2 // reg byte a 202.0
char memcpy_bank_to_vram::$4 // reg byte a 202.0
char memcpy_bank_to_vram::$5 // zp[1]:15 67.33333333333333
char memcpy_bank_to_vram::$6 // reg byte a 202.0
char memcpy_bank_to_vram::$7 // reg byte a 202.0
unsigned int memcpy_bank_to_vram::$9 // zp[2]:32 202.0
char *memcpy_bank_to_vram::addr
unsigned int memcpy_bank_to_vram::addr#0 // addr zp[2]:32 101.0
char *memcpy_bank_to_vram::addr#1 // addr zp[2]:32 101.0
char *memcpy_bank_to_vram::addr#2 // addr zp[2]:32 1001.0
char *memcpy_bank_to_vram::addr#4 // addr zp[2]:32 1034.6666666666667
char *memcpy_bank_to_vram::addr#5 // addr zp[2]:32 1501.5
char memcpy_bank_to_vram::bank
char memcpy_bank_to_vram::bank#0 // reg byte x 60.599999999999994
char memcpy_bank_to_vram::bank#1 // reg byte x 1501.5
char memcpy_bank_to_vram::bank#2 // reg byte x 1034.6666666666667
char memcpy_bank_to_vram::bank#5 // reg byte x 750.75
unsigned long memcpy_bank_to_vram::beg
unsigned long memcpy_bank_to_vram::beg#0 // beg zp[4]:39 26.578947368421055
unsigned long memcpy_bank_to_vram::end
unsigned long memcpy_bank_to_vram::end#0 // end zp[4]:51 58.0
unsigned long memcpy_bank_to_vram::num
unsigned long memcpy_bank_to_vram::num#2 // num zp[4]:51 11.222222222222221
unsigned long memcpy_bank_to_vram::pos
unsigned long memcpy_bank_to_vram::pos#1 // pos zp[4]:39 2002.0
unsigned long memcpy_bank_to_vram::pos#2 // pos zp[4]:39 388.0
unsigned long memcpy_bank_to_vram::src
unsigned long memcpy_bank_to_vram::vdest
unsigned long memcpy_bank_to_vram::vdest#2 // vdest zp[4]:56 50.5
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0 // reg byte a 2.0000000002E10
char memcpy_in_vram::$1 // reg byte a 2.0000000002E10
char memcpy_in_vram::$3 // reg byte a 2.0000000002E10
char memcpy_in_vram::$4 // reg byte a 2.0000000002E10
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0 // dest zp[2]:8 1.9090909093636363E9
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_increment
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#1 // i zp[2]:2 2.0000000000002E13
unsigned int memcpy_in_vram::i#2 // i zp[2]:2 1.0000000000001E13
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0 // num zp[2]:4 5.882941176471765E11
void *memcpy_in_vram::src
char *memcpy_in_vram::src#0 // src zp[2]:12 1.6666666683333334E8
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_increment
void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
char *memcpy_to_vram::end
__constant char *memcpy_to_vram::end#0 = (char *)memcpy_to_vram::src#0+SIZEOF_STRUCT_VERA_SPRITE // end
unsigned int memcpy_to_vram::num
char *memcpy_to_vram::s
char *memcpy_to_vram::s#1 // s zp[2]:32 2002.0
char *memcpy_to_vram::s#2 // s zp[2]:32 1334.6666666666667
void *memcpy_to_vram::src
__constant void *memcpy_to_vram::src#0 = (void *)&main::SPRITE_ATTR // src
char memcpy_to_vram::vbank
__constant char memcpy_to_vram::vbank#0 = byte2 VERA_SPRITE_ATTR // vbank
void *memcpy_to_vram::vdest
__constant void *memcpy_to_vram::vdest#0 = (void *)(char *)word0 VERA_SPRITE_ATTR // vdest
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1001.0
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:32 400.4
const char *printf_str::s#2 // s zp[2]:32 1501.5
void screenlayer(char layer)
unsigned int screenlayer::$2 // zp[2]:28 202.0
char screenlayer::$3 // reg byte a 202.0
unsigned int screenlayer::$4 // zp[2]:17 202.0
unsigned int screenlayer::$5 // zp[2]:30 202.0
char screenlayer::layer
char screenlayer::vera_layer_get_height1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0 // vera_layer_get_height1_config zp[2]:37 202.0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0 // vera_layer_get_height1_return zp[2]:30 202.0
unsigned int screenlayer::vera_layer_get_height1_return#1 // vera_layer_get_height1_return zp[2]:30 202.0
char screenlayer::vera_layer_get_width1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0 // vera_layer_get_width1_config zp[2]:26 202.0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0 // vera_layer_get_width1_return zp[2]:28 202.0
unsigned int screenlayer::vera_layer_get_width1_return#1 // vera_layer_get_width1_return zp[2]:28 202.0
void screensize(char *x , char *y)
char screensize::$1 // reg byte a 202.0
char screensize::$3 // reg byte a 202.0
char screensize::hscale
char screensize::hscale#0 // reg byte a 202.0
char screensize::vscale
char screensize::vscale#0 // reg byte a 202.0
char *screensize::x
__constant char *screensize::x#0 = &conio_screen_width // x
char *screensize::y
__constant char *screensize::y#0 = &conio_screen_height // y
void setlfs(volatile char device)
__loadstore volatile char setlfs::device // zp[1]:50 101.0
void setnam(char * volatile filename)
unsigned int setnam::$0 // zp[2]:2 1001.0
__loadstore char * volatile setnam::filename // zp[2]:48 183.66666666666669
__loadstore volatile char setnam::filename_len // zp[1]:43 1001.0
unsigned int strlen(char *str)
unsigned int strlen::len
unsigned int strlen::len#1 // len zp[2]:2 100001.0
unsigned int strlen::len#2 // len zp[2]:2 50250.75
unsigned int strlen::return
unsigned int strlen::return#0 // return zp[2]:2 2002.0
char *strlen::str
char *strlen::str#0 // str zp[2]:6 5501.0
char *strlen::str#1 // str zp[2]:6 200002.0
char *strlen::str#2 // str zp[2]:6 103334.66666666666
__constant char vera_layer_backcolor[2] = { BLUE, BLUE }
__constant char *vera_layer_config[2] = { VERA_L0_CONFIG, VERA_L1_CONFIG }
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0 // reg byte y 1102.0
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0 // reg byte a 367.33333333333337
char vera_layer_get_backcolor::return#2 // reg byte a 202.0
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0 // reg byte a 2.000000002E9
char vera_layer_get_color::$1 // reg byte a 2.000000002E9
char vera_layer_get_color::$3 // reg byte a 2.000000002E9
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0 // addr zp[2]:10 2.000000002E9
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0 // reg byte x 20002.0
char vera_layer_get_color::layer#1 // reg byte x 2.00000002E8
char vera_layer_get_color::layer#2 // reg byte x 6.833350010000001E8
char vera_layer_get_color::return
char vera_layer_get_color::return#0 // reg byte a 2.000000002E9
char vera_layer_get_color::return#1 // reg byte a 2.000000002E9
char vera_layer_get_color::return#2 // reg byte a 5.25002501E8
char vera_layer_get_color::return#3 // reg byte a 20002.0
char vera_layer_get_color::return#4 // reg byte a 2.00000002E8
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0 // reg byte y 1102.0
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0 // reg byte x 367.33333333333337
char vera_layer_get_mapbase_bank::return#2 // reg byte x 202.0
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0 // reg byte a 2002.0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0 // return zp[2]:26 367.33333333333337
unsigned int vera_layer_get_mapbase_offset::return#2 // return zp[2]:26 202.0
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0 // reg byte y 1102.0
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0 // reg byte a 367.33333333333337
char vera_layer_get_rowshift::return#2 // reg byte a 202.0
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0 // reg byte a 2002.0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0 // return zp[2]:17 367.33333333333337
unsigned int vera_layer_get_rowskip::return#2 // return zp[2]:17 202.0
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0 // reg byte y 1102.0
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0 // reg byte a 367.33333333333337
char vera_layer_get_textcolor::return#2 // reg byte a 202.0
__constant char *vera_layer_mapbase[2] = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
char vera_layer_mode_text::layer
__constant char vera_layer_mode_text::layer#0 = 1 // layer
unsigned long vera_layer_mode_text::mapbase_address
__constant unsigned long vera_layer_mode_text::mapbase_address#0 = 0 // mapbase_address
unsigned int vera_layer_mode_text::mapheight
unsigned int vera_layer_mode_text::mapwidth
unsigned long vera_layer_mode_text::tilebase_address
__constant unsigned long vera_layer_mode_text::tilebase_address#0 = $f800 // tilebase_address
char vera_layer_mode_text::tileheight
char vera_layer_mode_text::tilewidth
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::config
__constant char vera_layer_mode_tile::config#10 = VERA_LAYER_WIDTH_128|VERA_LAYER_HEIGHT_64 // config
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::mapbase
__constant char vera_layer_mode_tile::mapbase#0 = 0 // mapbase
unsigned long vera_layer_mode_tile::mapbase_address
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapwidth
char vera_layer_mode_tile::tilebase
unsigned long vera_layer_mode_tile::tilebase_address
__constant unsigned long vera_layer_mode_tile::tilebase_address#0 = vera_layer_mode_text::tilebase_address#0>>1 // tilebase_address
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tilewidth
__constant char vera_layer_rowshift[2] = { 0, 0 }
__constant unsigned int vera_layer_rowskip[2] = { 0, 0 }
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::layer
__constant char vera_layer_set_backcolor::layer#0 = 1 // layer
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::return
void vera_layer_set_config(char layer , char config)
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0 // addr zp[2]:30 20002.0
char vera_layer_set_config::config
char vera_layer_set_config::layer
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0 // reg byte a 20002.0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0 // addr zp[2]:28 20002.0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#3 // reg byte a 10001.0
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#3 // reg byte x 3333.6666666666665
void vera_layer_set_text_color_mode(char layer , char color_mode)
char vera_layer_set_text_color_mode::$0 // reg byte a 2002.0
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0 // addr zp[2]:37 2502.5
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::layer
char vera_layer_set_text_color_mode::layer#3 // reg byte a 1001.0
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::layer
__constant char vera_layer_set_textcolor::layer#0 = 1 // layer
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::return
void vera_layer_set_tilebase(char layer , char tilebase)
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0 // addr zp[2]:26 20002.0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::tilebase
__constant char vera_layer_textcolor[2] = { WHITE, WHITE }
__constant char *vera_layer_tilebase[2] = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
__constant unsigned long vera_mapbase_address[2] = { 0, 0 }
__constant char vera_mapbase_bank[2] = { 0, 0 }
__constant unsigned int vera_mapbase_offset[2] = { 0, 0 }
__constant unsigned long vera_tilebase_address[2] = { 0, 0 }
__constant char vera_tilebase_bank[2] = { 0, 0 }
__constant unsigned int vera_tilebase_offset[2] = { 0, 0 }

zp[1]:55 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
zp[2]:19 [ CONIO_SCREEN_TEXT#11 ]
zp[1]:45 [ CONIO_SCREEN_BANK#11 ]
reg byte a [ vera_layer_set_mapbase::layer#3 ]
reg byte x [ vera_layer_set_mapbase::mapbase#3 ]
reg byte x [ gotoxy::y#4 gotoxy::y#3 gotoxy::y#1 gotoxy::y#2 ]
reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
reg byte a [ vera_layer_get_color::return#2 vera_layer_get_color::return#0 vera_layer_get_color::return#1 ]
reg byte a [ vera_layer_set_text_color_mode::layer#3 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[4]:56 [ memcpy_bank_to_vram::vdest#2 ]
zp[4]:51 [ memcpy_bank_to_vram::num#2 memcpy_bank_to_vram::end#0 ]
zp[4]:39 [ memcpy_bank_to_vram::pos#2 memcpy_bank_to_vram::beg#0 memcpy_bank_to_vram::pos#1 ]
reg byte x [ memcpy_bank_to_vram::bank#2 memcpy_bank_to_vram::bank#0 memcpy_bank_to_vram::bank#5 memcpy_bank_to_vram::bank#1 ]
zp[2]:32 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 memcpy_bank_to_vram::addr#5 memcpy_bank_to_vram::addr#4 memcpy_bank_to_vram::addr#1 memcpy_bank_to_vram::addr#2 memcpy_bank_to_vram::addr#0 memcpy_bank_to_vram::$9 printf_str::s#2 printf_str::s#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
zp[1]:16 [ conio_screen_width ]
zp[1]:25 [ conio_screen_height ]
zp[1]:24 [ conio_screen_layer ]
zp[2]:46 [ conio_width ]
zp[2]:34 [ conio_height ]
zp[1]:21 [ conio_rowshift ]
zp[2]:22 [ conio_rowskip ]
zp[1]:36 [ cputc::c#0 clrscr::l#2 clrscr::l#1 ]
reg byte a [ vera_layer_get_color::return#3 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
zp[2]:6 [ cputc::conio_addr#0 cputc::conio_addr#1 clearline::c#2 clearline::c#1 strlen::str#2 strlen::str#0 strlen::str#1 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:2 [ cputc::$16 memcpy_in_vram::i#2 memcpy_in_vram::i#1 strlen::len#2 strlen::len#1 strlen::return#0 setnam::$0 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte y [ vera_layer_get_mapbase_bank::layer#0 ]
reg byte x [ vera_layer_get_mapbase_bank::return#2 ]
reg byte x [ CONIO_SCREEN_BANK#14 ]
reg byte a [ vera_layer_get_mapbase_offset::layer#0 ]
zp[2]:63 [ CONIO_SCREEN_TEXT#16 ]
reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$2 ]
reg byte a [ screenlayer::vera_layer_get_width1_$0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$1 ]
reg byte a [ screenlayer::vera_layer_get_width1_$3 ]
reg byte y [ vera_layer_get_rowshift::layer#0 ]
reg byte a [ vera_layer_get_rowshift::return#2 ]
reg byte a [ screenlayer::$3 ]
reg byte a [ vera_layer_get_rowskip::layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$2 ]
reg byte a [ screenlayer::vera_layer_get_height1_$0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$1 ]
reg byte a [ screenlayer::vera_layer_get_height1_$3 ]
reg byte a [ vera_layer_set_mapbase::$0 ]
zp[2]:28 [ vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
zp[2]:17 [ gotoxy::$6 gotoxy::line_offset#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ vera_layer_get_color::$3 ]
reg byte a [ vera_layer_get_color::$0 ]
reg byte a [ vera_layer_get_color::$1 ]
reg byte a [ cputln::$2 ]
zp[2]:10 [ cputln::temp#0 cputln::temp#1 vera_layer_get_color::addr#0 ]
reg byte a [ cputln::$3 ]
reg byte a [ vera_layer_set_text_color_mode::$0 ]
zp[2]:37 [ vera_layer_set_text_color_mode::addr#0 screenlayer::vera_layer_get_height1_config#0 ]
reg byte y [ vera_layer_get_backcolor::layer#0 ]
reg byte a [ vera_layer_get_backcolor::return#2 ]
reg byte a [ clrscr::$0 ]
reg byte y [ vera_layer_get_textcolor::layer#0 ]
reg byte a [ vera_layer_get_textcolor::return#2 ]
reg byte a [ clrscr::$2 ]
reg byte a [ clrscr::$9 ]
reg byte a [ clrscr::$5 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ printf_str::c#1 ]
zp[2]:48 [ setnam::filename ]
zp[1]:50 [ setlfs::device ]
zp[2]:61 [ load::address ]
zp[1]:60 [ load::verify ]
reg byte a [ memcpy_bank_to_vram::$0 ]
reg byte a [ memcpy_bank_to_vram::$1 ]
reg byte a [ memcpy_bank_to_vram::$2 ]
reg byte a [ memcpy_bank_to_vram::$4 ]
reg byte a [ memcpy_bank_to_vram::$6 ]
reg byte a [ memcpy_bank_to_vram::$7 ]
reg byte x [ vera_layer_get_mapbase_bank::return#0 ]
reg byte a [ vera_layer_get_mapbase_offset::$0 ]
reg byte a [ vera_layer_get_rowshift::return#0 ]
reg byte a [ vera_layer_get_rowskip::$0 ]
reg byte a [ vera_layer_get_backcolor::return#0 ]
reg byte a [ vera_layer_get_textcolor::return#0 ]
zp[1]:43 [ setnam::filename_len ]
zp[1]:44 [ load::status ]
zp[2]:30 [ vera_layer_set_config::addr#0 screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
zp[2]:26 [ vera_layer_set_tilebase::addr#0 screenlayer::vera_layer_get_width1_config#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 ]
zp[1]:15 [ insertup::cy#0 memcpy_bank_to_vram::$5 clrscr::$1 clrscr::color#0 ]
zp[1]:14 [ insertup::width#0 ]
reg byte a [ insertup::$3 ]
zp[2]:8 [ insertup::line#0 insertup::start#0 memcpy_in_vram::dest#0 ]
zp[2]:4 [ memcpy_in_vram::num#0 ]
reg byte a [ clearline::$5 ]
zp[2]:12 [ clearline::addr#0 memcpy_in_vram::src#0 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_layer_get_color::return#4 ]
reg byte x [ clearline::color#0 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
zp[8]:65 [ main::SPRITE_ATTR ]


FINAL ASSEMBLER
Score: 75806

  // File Comments
// Commander X16 Load a file to a memory bank
  // Upstart
.cpu _65c02
  // Create a bunch of files
.file [name="cx16-bankload.prg", type="prg", segments="Program"]
.file [name="SPRITE", type="bin", segments="Sprite"]
.segmentdef Program [segments="Basic, Code, Data"]
.segmentdef Basic [start=$0801]
.segmentdef Code [start=$80d]
.segmentdef Data [startAfter="Code"]
.segment Basic
:BasicUpstart(__start)
.segmentdef Sprite

  // Global Constants & labels
  .const WHITE = 1
  .const BLUE = 6
  .const VERA_INC_1 = $10
  .const VERA_DCSEL = 2
  .const VERA_ADDRSEL = 1
  .const VERA_SPRITES_ENABLE = $40
  .const VERA_LAYER_WIDTH_128 = $20
  .const VERA_LAYER_WIDTH_MASK = $30
  .const VERA_LAYER_HEIGHT_64 = $40
  .const VERA_LAYER_HEIGHT_MASK = $c0
  .const VERA_LAYER_CONFIG_256C = 8
  .const VERA_LAYER_TILEBASE_MASK = $fc
  /// VERA Palette address in VRAM  $1FA00 - $1FBFF
  /// 256 entries of 2 bytes
  /// byte 0 bits 4-7: Green
  /// byte 0 bits 0-3: Blue
  /// byte 1 bits 0-3: Red
  .const VERA_PALETTE = $1fa00
  /// Sprite Attributes address in VERA VRAM $1FC00 - $1FFFF
  .const VERA_SPRITE_ATTR = $1fc00
  /// 8BPP sprite mode (add to VERA_SPRITE.ADDR to enable)
  .const VERA_SPRITE_8BPP = $8000
  .const SIZEOF_UNSIGNED_INT = 2
  .const SIZEOF_POINTER = 2
  .const SIZEOF_UNSIGNED_LONG = 4
  .const SIZEOF_STRUCT_VERA_SPRITE = 8
  .const OFFSET_STRUCT_MOS6522_VIA_PORT_A = 1
  .const OFFSET_STRUCT_VERA_SPRITE_X = 2
  .const OFFSET_STRUCT_VERA_SPRITE_Y = 4
  .const STACK_BASE = $103
  /// $9F20 VRAM Address (7:0)
  .label VERA_ADDRX_L = $9f20
  /// $9F21 VRAM Address (15:8)
  .label VERA_ADDRX_M = $9f21
  /// $9F22 VRAM Address (7:0)
  /// Bit 4-7: Address Increment  The following is the amount incremented per value value:increment
  ///                             0:0, 1:1, 2:2, 3:4, 4:8, 5:16, 6:32, 7:64, 8:128, 9:256, 10:512, 11:40, 12:80, 13:160, 14:320, 15:640
  /// Bit 3: DECR Setting the DECR bit, will decrement instead of increment by the value set by the 'Address Increment' field.
  /// Bit 0: VRAM Address (16)
  .label VERA_ADDRX_H = $9f22
  /// $9F23	DATA0	VRAM Data port 0
  .label VERA_DATA0 = $9f23
  /// $9F24	DATA1	VRAM Data port 1
  .label VERA_DATA1 = $9f24
  /// $9F25	CTRL Control
  /// Bit 7: Reset
  /// Bit 1: DCSEL
  /// Bit 2: ADDRSEL
  .label VERA_CTRL = $9f25
  /// $9F29	DC_VIDEO (DCSEL=0)
  /// Bit 7: Current Field     Read-only bit which reflects the active interlaced field in composite and RGB modes. (0: even, 1: odd)
  /// Bit 6: Sprites Enable	Enable output from the Sprites renderer
  /// Bit 5: Layer1 Enable	    Enable output from the Layer1 renderer
  /// Bit 4: Layer0 Enable	    Enable output from the Layer0 renderer
  /// Bit 2: Chroma Disable    Setting 'Chroma Disable' disables output of chroma in NTSC composite mode and will give a better picture on a monochrome display. (Setting this bit will also disable the chroma output on the S-video output.)
  /// Bit 0-1: Output Mode     0: Video disabled, 1: VGA output, 2: NTSC composite, 3: RGB interlaced, composite sync (via VGA connector)
  .label VERA_DC_VIDEO = $9f29
  /// $9F2A	DC_HSCALE (DCSEL=0)	Active Display H-Scale
  .label VERA_DC_HSCALE = $9f2a
  /// $9F2B	DC_VSCALE (DCSEL=0)	Active Display V-Scale
  .label VERA_DC_VSCALE = $9f2b
  /// $9F2D	L0_CONFIG   Layer 0 Configuration
  .label VERA_L0_CONFIG = $9f2d
  /// $9F2E	L0_MAPBASE	    Layer 0 Map Base Address (16:9)
  .label VERA_L0_MAPBASE = $9f2e
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L0_TILEBASE = $9f2f
  /// $9F34	L1_CONFIG   Layer 1 Configuration
  .label VERA_L1_CONFIG = $9f34
  /// $9F35	L1_MAPBASE	    Layer 1 Map Base Address (16:9)
  .label VERA_L1_MAPBASE = $9f35
  /// $9F36	L1_TILEBASE	    Layer 1 Tile Base
  /// Bit 2-7: Tile Base Address (16:11)
  /// Bit 1:   Tile Height (0:8 pixels, 1:16 pixels)
  /// Bit 0:	Tile Width (0:8 pixels, 1:16 pixels)
  .label VERA_L1_TILEBASE = $9f36
  /// The VIA#1: ROM/RAM Bank Control
  /// Port A Bits 0-7 RAM bank
  /// Port B Bits 0-2 ROM bank
  /// Port B Bits 3-7 [TBD]
  .label VIA1 = $9f60
  // Variable holding the screen width;
  .label conio_screen_width = $10
  // Variable holding the screen height;
  .label conio_screen_height = $19
  // Variable holding the screen layer on the VERA card with which conio interacts;
  .label conio_screen_layer = $18
  // Variables holding the current map width and map height of the layer.
  .label conio_width = $2e
  .label conio_height = $22
  .label conio_rowshift = $15
  .label conio_rowskip = $16
  // The screen width
  // The screen height
  // The text screen base address, which is a 16:0 bit value in VERA VRAM.
  // That is 128KB addressable space, thus 17 bits in total.
  // CONIO_SCREEN_TEXT contains bits 15:0 of the address.
  // CONIO_SCREEN_BANK contains bit 16, the the 64K memory bank in VERA VRAM (the upper 17th bit).
  // !!! note that these values are not const for the cx16!
  // This conio implements the two layers of VERA, which can be layer 0 or layer 1.
  // Configuring conio to output to a different layer, will change these fields to the address base
  // configured using VERA_L0_MAPBASE = 0x9f2e or VERA_L1_MAPBASE = 0x9f35.
  // Using the function setscreenlayer(layer) will re-calculate using CONIO_SCREEN_TEXT and CONIO_SCREEN_BASE
  // based on the values of VERA_L0_MAPBASE or VERA_L1_MAPBASE, mapping the base address of the selected layer.
  // The function setscreenlayermapbase(layer,mapbase) allows to configure bit 16:9 of the
  // mapbase address of the time map in VRAM of the selected layer VERA_L0_MAPBASE or VERA_L1_MAPBASE.
  .label CONIO_SCREEN_TEXT = $13
  .label CONIO_SCREEN_BANK = $2d
  // The screen width
  // The screen height
  // The text screen base address, which is a 16:0 bit value in VERA VRAM.
  // That is 128KB addressable space, thus 17 bits in total.
  // CONIO_SCREEN_TEXT contains bits 15:0 of the address.
  // CONIO_SCREEN_BANK contains bit 16, the the 64K memory bank in VERA VRAM (the upper 17th bit).
  // !!! note that these values are not const for the cx16!
  // This conio implements the two layers of VERA, which can be layer 0 or layer 1.
  // Configuring conio to output to a different layer, will change these fields to the address base
  // configured using VERA_L0_MAPBASE = 0x9f2e or VERA_L1_MAPBASE = 0x9f35.
  // Using the function setscreenlayer(layer) will re-calculate using CONIO_SCREEN_TEXT and CONIO_SCREEN_BASE
  // based on the values of VERA_L0_MAPBASE or VERA_L1_MAPBASE, mapping the base address of the selected layer.
  // The function setscreenlayermapbase(layer,mapbase) allows to configure bit 16:9 of the
  // mapbase address of the time map in VRAM of the selected layer VERA_L0_MAPBASE or VERA_L1_MAPBASE.
  .label CONIO_SCREEN_TEXT_1 = $3f
.segment Code
  // __start
__start: {
    // __start::__init1
    // __ma unsigned byte conio_screen_width = 0
    // [1] conio_screen_width = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z conio_screen_width
    // __ma unsigned byte conio_screen_height = 0
    // [2] conio_screen_height = 0 -- vbuz1=vbuc1 
    sta.z conio_screen_height
    // __ma unsigned byte conio_screen_layer = 1
    // [3] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // __ma word conio_width = 0
    // [4] conio_width = 0 -- vwuz1=vwuc1 
    lda #<0
    sta.z conio_width
    sta.z conio_width+1
    // __ma word conio_height = 0
    // [5] conio_height = 0 -- vwuz1=vwuc1 
    sta.z conio_height
    sta.z conio_height+1
    // __ma byte conio_rowshift = 0
    // [6] conio_rowshift = 0 -- vbuz1=vbuc1 
    sta.z conio_rowshift
    // __ma word conio_rowskip = 0
    // [7] conio_rowskip = 0 -- vwuz1=vwuc1 
    sta.z conio_rowskip
    sta.z conio_rowskip+1
    // #pragma constructor_for(conio_x16_init, cputc, clrscr, cscroll)
    // [8] call conio_x16_init
    jsr conio_x16_init
    // [9] phi from __start::__init1 to __start::@1 [phi:__start::__init1->__start::@1]
    // __start::@1
    // [10] call main
    // [65] phi from __start::@1 to main [phi:__start::@1->main]
    jsr main
    // __start::@return
    // [11] return 
    rts
}
  // conio_x16_init
// Set initial cursor position
conio_x16_init: {
    // Position cursor at current line
    .label BASIC_CURSOR_LINE = $d6
    .label line = $37
    // char line = *BASIC_CURSOR_LINE
    // [12] conio_x16_init::line#0 = *conio_x16_init::BASIC_CURSOR_LINE -- vbuz1=_deref_pbuc1 
    lda.z BASIC_CURSOR_LINE
    sta.z line
    // vera_layer_mode_text(1,(dword)0x00000,(dword)0x0F800,128,64,8,8,16)
    // [13] call vera_layer_mode_text
    // [86] phi from conio_x16_init to vera_layer_mode_text [phi:conio_x16_init->vera_layer_mode_text]
    jsr vera_layer_mode_text
    // [14] phi from conio_x16_init to conio_x16_init::@3 [phi:conio_x16_init->conio_x16_init::@3]
    // conio_x16_init::@3
    // screensize(&conio_screen_width, &conio_screen_height)
    // [15] call screensize
    jsr screensize
    // [16] phi from conio_x16_init::@3 to conio_x16_init::@4 [phi:conio_x16_init::@3->conio_x16_init::@4]
    // conio_x16_init::@4
    // screenlayer(1)
    // [17] call screenlayer
    jsr screenlayer
    // [18] phi from conio_x16_init::@4 to conio_x16_init::@5 [phi:conio_x16_init::@4->conio_x16_init::@5]
    // conio_x16_init::@5
    // vera_layer_set_textcolor(1, WHITE)
    // [19] call vera_layer_set_textcolor
    jsr vera_layer_set_textcolor
    // [20] phi from conio_x16_init::@5 to conio_x16_init::@6 [phi:conio_x16_init::@5->conio_x16_init::@6]
    // conio_x16_init::@6
    // vera_layer_set_backcolor(1, BLUE)
    // [21] call vera_layer_set_backcolor
    jsr vera_layer_set_backcolor
    // [22] phi from conio_x16_init::@6 to conio_x16_init::@7 [phi:conio_x16_init::@6->conio_x16_init::@7]
    // conio_x16_init::@7
    // vera_layer_set_mapbase(0,0x20)
    // [23] call vera_layer_set_mapbase
    // [142] phi from conio_x16_init::@7 to vera_layer_set_mapbase [phi:conio_x16_init::@7->vera_layer_set_mapbase]
    // [142] phi vera_layer_set_mapbase::mapbase#3 = $20 [phi:conio_x16_init::@7->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #$20
    // [142] phi vera_layer_set_mapbase::layer#3 = 0 [phi:conio_x16_init::@7->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #0
    jsr vera_layer_set_mapbase
    // [24] phi from conio_x16_init::@7 to conio_x16_init::@8 [phi:conio_x16_init::@7->conio_x16_init::@8]
    // conio_x16_init::@8
    // vera_layer_set_mapbase(1,0x00)
    // [25] call vera_layer_set_mapbase
    // [142] phi from conio_x16_init::@8 to vera_layer_set_mapbase [phi:conio_x16_init::@8->vera_layer_set_mapbase]
    // [142] phi vera_layer_set_mapbase::mapbase#3 = 0 [phi:conio_x16_init::@8->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #0
    // [142] phi vera_layer_set_mapbase::layer#3 = 1 [phi:conio_x16_init::@8->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #1
    jsr vera_layer_set_mapbase
    // conio_x16_init::@9
    // if(line>=CONIO_HEIGHT)
    // [26] if(conio_x16_init::line#0<conio_screen_height) goto conio_x16_init::@1 -- vbuz1_lt_vbuz2_then_la1 
    lda.z line
    cmp.z conio_screen_height
    bcc __b1
    // conio_x16_init::@2
    // line=CONIO_HEIGHT-1
    // [27] conio_x16_init::line#1 = conio_screen_height - 1 -- vbuz1=vbuz2_minus_1 
    ldx.z conio_screen_height
    dex
    stx.z line
    // [28] phi from conio_x16_init::@2 conio_x16_init::@9 to conio_x16_init::@1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1]
    // [28] phi conio_x16_init::line#3 = conio_x16_init::line#1 [phi:conio_x16_init::@2/conio_x16_init::@9->conio_x16_init::@1#0] -- register_copy 
    // conio_x16_init::@1
  __b1:
    // gotoxy(0, line)
    // [29] gotoxy::y#1 = conio_x16_init::line#3 -- vbuxx=vbuz1 
    ldx.z line
    // [30] call gotoxy
    // [147] phi from conio_x16_init::@1 to gotoxy [phi:conio_x16_init::@1->gotoxy]
    // [147] phi gotoxy::y#3 = gotoxy::y#1 [phi:conio_x16_init::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    // conio_x16_init::@return
    // }
    // [31] return 
    rts
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward. Scrolls the entire screen if needed
// void cputc(__zp($24) char c)
cputc: {
    .const OFFSET_STACK_C = 0
    .label __16 = 2
    .label c = $24
    .label conio_addr = 6
    // [33] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C) -- vbuz1=_stackidxbyte_vbuc1 
    tsx
    lda STACK_BASE+OFFSET_STACK_C,x
    sta.z c
    // char color = vera_layer_get_color( conio_screen_layer)
    // [34] vera_layer_get_color::layer#0 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [35] call vera_layer_get_color
    // [160] phi from cputc to vera_layer_get_color [phi:cputc->vera_layer_get_color]
    // [160] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#0 [phi:cputc->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // char color = vera_layer_get_color( conio_screen_layer)
    // [36] vera_layer_get_color::return#3 = vera_layer_get_color::return#2
    // cputc::@7
    // [37] cputc::color#0 = vera_layer_get_color::return#3 -- vbuxx=vbuaa 
    tax
    // char* conio_addr = CONIO_SCREEN_TEXT + conio_line_text[conio_screen_layer]
    // [38] cputc::$15 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [39] cputc::conio_addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[cputc::$15] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z conio_addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z conio_addr+1
    // conio_cursor_x[conio_screen_layer] << 1
    // [40] cputc::$2 = conio_cursor_x[conio_screen_layer] << 1 -- vbuaa=pbuc1_derefidx_vbuz1_rol_1 
    ldy.z conio_screen_layer
    lda conio_cursor_x,y
    asl
    // conio_addr += conio_cursor_x[conio_screen_layer] << 1
    // [41] cputc::conio_addr#1 = cputc::conio_addr#0 + cputc::$2 -- pbuz1=pbuz1_plus_vbuaa 
    clc
    adc.z conio_addr
    sta.z conio_addr
    bcc !+
    inc.z conio_addr+1
  !:
    // if(c=='\n')
    // [42] if(cputc::c#0==' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1
    // cputc::@2
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [43] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(conio_addr)
    // [44] cputc::$4 = byte0  cputc::conio_addr#1 -- vbuaa=_byte0_pbuz1 
    lda.z conio_addr
    // *VERA_ADDRX_L = BYTE0(conio_addr)
    // [45] *VERA_ADDRX_L = cputc::$4 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(conio_addr)
    // [46] cputc::$5 = byte1  cputc::conio_addr#1 -- vbuaa=_byte1_pbuz1 
    lda.z conio_addr+1
    // *VERA_ADDRX_M = BYTE1(conio_addr)
    // [47] *VERA_ADDRX_M = cputc::$5 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // CONIO_SCREEN_BANK | VERA_INC_1
    // [48] cputc::$6 = CONIO_SCREEN_BANK#11 | VERA_INC_1 -- vbuaa=vbuz1_bor_vbuc1 
    lda #VERA_INC_1
    ora.z CONIO_SCREEN_BANK
    // *VERA_ADDRX_H = CONIO_SCREEN_BANK | VERA_INC_1
    // [49] *VERA_ADDRX_H = cputc::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // *VERA_DATA0 = c
    // [50] *VERA_DATA0 = cputc::c#0 -- _deref_pbuc1=vbuz1 
    lda.z c
    sta VERA_DATA0
    // *VERA_DATA0 = color
    // [51] *VERA_DATA0 = cputc::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // conio_cursor_x[conio_screen_layer]++;
    // [52] conio_cursor_x[conio_screen_layer] = ++ conio_cursor_x[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_x,x
    // byte scroll_enable = conio_scroll_enable[conio_screen_layer]
    // [53] cputc::scroll_enable#0 = conio_scroll_enable[conio_screen_layer] -- vbuaa=pbuc1_derefidx_vbuz1 
    ldy.z conio_screen_layer
    lda conio_scroll_enable,y
    // if(scroll_enable)
    // [54] if(0!=cputc::scroll_enable#0) goto cputc::@5 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b5
    // cputc::@3
    // (unsigned int)conio_cursor_x[conio_screen_layer] == conio_width
    // [55] cputc::$16 = (unsigned int)conio_cursor_x[conio_screen_layer] -- vwuz1=_word_pbuc1_derefidx_vbuz2 
    lda conio_cursor_x,y
    sta.z __16
    lda #0
    sta.z __16+1
    // if((unsigned int)conio_cursor_x[conio_screen_layer] == conio_width)
    // [56] if(cputc::$16!=conio_width) goto cputc::@return -- vwuz1_neq_vwuz2_then_la1 
    cmp.z conio_width+1
    bne __breturn
    lda.z __16
    cmp.z conio_width
    bne __breturn
    // [57] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
    // cputc::@4
    // cputln()
    // [58] call cputln
    jsr cputln
    // cputc::@return
  __breturn:
    // }
    // [59] return 
    rts
    // cputc::@5
  __b5:
    // if(conio_cursor_x[conio_screen_layer] == CONIO_WIDTH)
    // [60] if(conio_cursor_x[conio_screen_layer]!=conio_screen_width) goto cputc::@return -- pbuc1_derefidx_vbuz1_neq_vbuz2_then_la1 
    lda.z conio_screen_width
    ldy.z conio_screen_layer
    cmp conio_cursor_x,y
    bne __breturn
    // [61] phi from cputc::@5 to cputc::@6 [phi:cputc::@5->cputc::@6]
    // cputc::@6
    // cputln()
    // [62] call cputln
    jsr cputln
    rts
    // [63] phi from cputc::@7 to cputc::@1 [phi:cputc::@7->cputc::@1]
    // cputc::@1
  __b1:
    // cputln()
    // [64] call cputln
    jsr cputln
    rts
}
  // main
main: {
    // RAM Bank where sprite is loaded
    .label BANK_SPRITE = $12000
    // VRAM address of sprite
    .label VRAM_SPRITE = $10000
    .label SPRITE_ATTR = $41
    // vera_layer_set_text_color_mode( 1, VERA_LAYER_CONFIG_16C )
    // [66] call vera_layer_set_text_color_mode
    // [179] phi from main to vera_layer_set_text_color_mode [phi:main->vera_layer_set_text_color_mode]
    // [179] phi vera_layer_set_text_color_mode::layer#3 = 1 [phi:main->vera_layer_set_text_color_mode#0] -- vbuaa=vbuc1 
    lda #1
    jsr vera_layer_set_text_color_mode
    // [67] phi from main to main::@1 [phi:main->main::@1]
    // main::@1
    // screenlayer(1)
    // [68] call screenlayer
    jsr screenlayer
    // [69] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
    // main::@2
    // clrscr()
    // [70] call clrscr
    jsr clrscr
    // [71] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // printf("\n\nsprite banked file load and display demo.\n")
    // [72] call printf_str
    // [217] phi from main::@3 to printf_str [phi:main::@3->printf_str]
    jsr printf_str
    // main::@4
    // struct VERA_SPRITE SPRITE_ATTR = { WORD0(VRAM_SPRITE/32)|VERA_SPRITE_8BPP, 320-32, 240-32, 0x0c, 0xf1 }
    // [73] *(&main::SPRITE_ATTR) = memcpy(*(&$0), struct VERA_SPRITE, SIZEOF_STRUCT_VERA_SPRITE) -- _deref_pssc1=_deref_pssc2_memcpy_vbuc3 
    ldy #SIZEOF_STRUCT_VERA_SPRITE
  !:
    lda __0-1,y
    sta SPRITE_ATTR-1,y
    dey
    bne !-
    // char status = load_to_bank(8, "SPRITE", BANK_SPRITE )
    // [74] call load_to_bank
    jsr load_to_bank
    // [75] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
    // main::@5
    // memcpy_bank_to_vram(VERA_PALETTE+32, BANK_SPRITE-2, 32)
    // [76] call memcpy_bank_to_vram
    // [235] phi from main::@5 to memcpy_bank_to_vram [phi:main::@5->memcpy_bank_to_vram]
    // [235] phi memcpy_bank_to_vram::num#2 = $20 [phi:main::@5->memcpy_bank_to_vram#0] -- vduz1=vbuc1 
    lda #$20
    sta.z memcpy_bank_to_vram.num
    lda #0
    sta.z memcpy_bank_to_vram.num+1
    sta.z memcpy_bank_to_vram.num+2
    sta.z memcpy_bank_to_vram.num+3
    // [235] phi memcpy_bank_to_vram::beg#0 = main::BANK_SPRITE-2 [phi:main::@5->memcpy_bank_to_vram#1] -- vduz1=vduc1 
    lda #<BANK_SPRITE-2
    sta.z memcpy_bank_to_vram.beg
    lda #>BANK_SPRITE-2
    sta.z memcpy_bank_to_vram.beg+1
    lda #<BANK_SPRITE-2>>$10
    sta.z memcpy_bank_to_vram.beg+2
    lda #>BANK_SPRITE-2>>$10
    sta.z memcpy_bank_to_vram.beg+3
    // [235] phi memcpy_bank_to_vram::vdest#2 = VERA_PALETTE+$20 [phi:main::@5->memcpy_bank_to_vram#2] -- vduz1=vduc1 
    lda #<VERA_PALETTE+$20
    sta.z memcpy_bank_to_vram.vdest
    lda #>VERA_PALETTE+$20
    sta.z memcpy_bank_to_vram.vdest+1
    lda #<VERA_PALETTE+$20>>$10
    sta.z memcpy_bank_to_vram.vdest+2
    lda #>VERA_PALETTE+$20>>$10
    sta.z memcpy_bank_to_vram.vdest+3
    jsr memcpy_bank_to_vram
    // [77] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
    // main::@6
    // memcpy_bank_to_vram(VRAM_SPRITE, BANK_SPRITE+32-2, 64*32)
    // [78] call memcpy_bank_to_vram
    // [235] phi from main::@6 to memcpy_bank_to_vram [phi:main::@6->memcpy_bank_to_vram]
    // [235] phi memcpy_bank_to_vram::num#2 = (unsigned int)$40*$20 [phi:main::@6->memcpy_bank_to_vram#0] -- vduz1=vduc1 
    lda #<$40*$20
    sta.z memcpy_bank_to_vram.num
    lda #>$40*$20
    sta.z memcpy_bank_to_vram.num+1
    lda #<$40*$20>>$10
    sta.z memcpy_bank_to_vram.num+2
    lda #>$40*$20>>$10
    sta.z memcpy_bank_to_vram.num+3
    // [235] phi memcpy_bank_to_vram::beg#0 = main::BANK_SPRITE+$20-2 [phi:main::@6->memcpy_bank_to_vram#1] -- vduz1=vduc1 
    lda #<BANK_SPRITE+$20-2
    sta.z memcpy_bank_to_vram.beg
    lda #>BANK_SPRITE+$20-2
    sta.z memcpy_bank_to_vram.beg+1
    lda #<BANK_SPRITE+$20-2>>$10
    sta.z memcpy_bank_to_vram.beg+2
    lda #>BANK_SPRITE+$20-2>>$10
    sta.z memcpy_bank_to_vram.beg+3
    // [235] phi memcpy_bank_to_vram::vdest#2 = main::VRAM_SPRITE [phi:main::@6->memcpy_bank_to_vram#2] -- vduz1=vduc1 
    lda #<VRAM_SPRITE
    sta.z memcpy_bank_to_vram.vdest
    lda #>VRAM_SPRITE
    sta.z memcpy_bank_to_vram.vdest+1
    lda #<VRAM_SPRITE>>$10
    sta.z memcpy_bank_to_vram.vdest+2
    lda #>VRAM_SPRITE>>$10
    sta.z memcpy_bank_to_vram.vdest+3
    jsr memcpy_bank_to_vram
    // main::@7
    // SPRITE_ATTR.ADDR = WORD0(VRAM_SPRITE/32)|VERA_SPRITE_4BPP
    // [79] *((unsigned int *)&main::SPRITE_ATTR) = word0 main::VRAM_SPRITE/$20 -- _deref_pwuc1=vwuc2 
    lda #<VRAM_SPRITE/$20&$ffff
    sta.z SPRITE_ATTR
    lda #>VRAM_SPRITE/$20&$ffff
    sta.z SPRITE_ATTR+1
    // SPRITE_ATTR.X = 100
    // [80] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X) = $64 -- _deref_pwuc1=vbuc2 
    lda #<$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X
    lda #>$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_X+1
    // SPRITE_ATTR.Y = 100
    // [81] *((unsigned int *)&main::SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y) = $64 -- _deref_pwuc1=vbuc2 
    lda #<$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y
    lda #>$64
    sta.z SPRITE_ATTR+OFFSET_STRUCT_VERA_SPRITE_Y+1
    // memcpy_to_vram(BYTE2(VERA_SPRITE_ATTR), (char*)WORD0(VERA_SPRITE_ATTR), &SPRITE_ATTR, sizeof(SPRITE_ATTR))
    // [82] call memcpy_to_vram
    jsr memcpy_to_vram
    // main::@8
    // *VERA_CTRL &= ~VERA_DCSEL
    // [83] *VERA_CTRL = *VERA_CTRL & ~VERA_DCSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Enable sprites
    lda #VERA_DCSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // *VERA_DC_VIDEO |= VERA_SPRITES_ENABLE
    // [84] *VERA_DC_VIDEO = *VERA_DC_VIDEO | VERA_SPRITES_ENABLE -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    lda #VERA_SPRITES_ENABLE
    ora VERA_DC_VIDEO
    sta VERA_DC_VIDEO
    // main::@return
    // }
    // [85] return 
    rts
  .segment Data
    s: .text @"\n\nsprite banked file load and display demo.\n"
    .byte 0
    filename: .text "SPRITE"
    .byte 0
}
.segment Code
  // vera_layer_mode_text
// Set a vera layer in text mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_mode: The color mode, which can be 16 or 256.
// void vera_layer_mode_text(char layer, unsigned long mapbase_address, unsigned long tilebase_address, unsigned int mapwidth, unsigned int mapheight, char tilewidth, char tileheight, unsigned int color_mode)
vera_layer_mode_text: {
    .label layer = 1
    .label mapbase_address = 0
    .label tilebase_address = $f800
    // vera_layer_mode_tile( layer, mapbase_address, tilebase_address, mapwidth, mapheight, tilewidth, tileheight, 1 )
    // [87] call vera_layer_mode_tile
    // [273] phi from vera_layer_mode_text to vera_layer_mode_tile [phi:vera_layer_mode_text->vera_layer_mode_tile]
    jsr vera_layer_mode_tile
    // [88] phi from vera_layer_mode_text to vera_layer_mode_text::@1 [phi:vera_layer_mode_text->vera_layer_mode_text::@1]
    // vera_layer_mode_text::@1
    // vera_layer_set_text_color_mode( layer, VERA_LAYER_CONFIG_16C )
    // [89] call vera_layer_set_text_color_mode
    // [179] phi from vera_layer_mode_text::@1 to vera_layer_set_text_color_mode [phi:vera_layer_mode_text::@1->vera_layer_set_text_color_mode]
    // [179] phi vera_layer_set_text_color_mode::layer#3 = vera_layer_mode_text::layer#0 [phi:vera_layer_mode_text::@1->vera_layer_set_text_color_mode#0] -- vbuaa=vbuc1 
    lda #layer
    jsr vera_layer_set_text_color_mode
    // vera_layer_mode_text::@return
    // }
    // [90] return 
    rts
}
  // screensize
// Return the current screen size.
// void screensize(char *x, char *y)
screensize: {
    .label x = conio_screen_width
    .label y = conio_screen_height
    // char hscale = (*VERA_DC_HSCALE) >> 7
    // [91] screensize::hscale#0 = *VERA_DC_HSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    // VERA returns in VERA_DC_HSCALE the value of 128 when 80 columns is used in text mode,
    // and the value of 64 when 40 columns is used in text mode.
    // Basically, 40 columns mode in the VERA is a double scan mode.
    // Same for the VERA_DC_VSCALE mode, but then the subdivision is 60 or 30 rows.
    // I still need to test the other modes, but this will suffice for now for the pure text modes.
    lda VERA_DC_HSCALE
    rol
    rol
    and #1
    // 40 << hscale
    // [92] screensize::$1 = $28 << screensize::hscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$28
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // *x = 40 << hscale
    // [93] *screensize::x#0 = screensize::$1 -- _deref_pbuc1=vbuaa 
    sta.z x
    // char vscale = (*VERA_DC_VSCALE) >> 7
    // [94] screensize::vscale#0 = *VERA_DC_VSCALE >> 7 -- vbuaa=_deref_pbuc1_ror_7 
    lda VERA_DC_VSCALE
    rol
    rol
    and #1
    // 30 << vscale
    // [95] screensize::$3 = $1e << screensize::vscale#0 -- vbuaa=vbuc1_rol_vbuaa 
    tay
    lda #$1e
    cpy #0
    beq !e+
  !:
    asl
    dey
    bne !-
  !e:
    // *y = 30 << vscale
    // [96] *screensize::y#0 = screensize::$3 -- _deref_pbuc1=vbuaa 
    sta.z y
    // screensize::@return
    // }
    // [97] return 
    rts
}
  // screenlayer
// Set the layer with which the conio will interact.
// - layer: value of 0 or 1.
// void screenlayer(char layer)
screenlayer: {
    .label __2 = $1c
    .label __4 = $11
    .label __5 = $1e
    .label vera_layer_get_width1_config = $1a
    .label vera_layer_get_width1_return = $1c
    .label vera_layer_get_height1_config = $25
    .label vera_layer_get_height1_return = $1e
    // conio_screen_layer = layer
    // [98] conio_screen_layer = 1 -- vbuz1=vbuc1 
    lda #1
    sta.z conio_screen_layer
    // vera_layer_get_mapbase_bank(conio_screen_layer)
    // [99] vera_layer_get_mapbase_bank::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    tay
    // [100] call vera_layer_get_mapbase_bank
    jsr vera_layer_get_mapbase_bank
    // [101] vera_layer_get_mapbase_bank::return#2 = vera_layer_get_mapbase_bank::return#0
    // screenlayer::@3
    // [102] CONIO_SCREEN_BANK#14 = vera_layer_get_mapbase_bank::return#2
    // vera_layer_get_mapbase_offset(conio_screen_layer)
    // [103] vera_layer_get_mapbase_offset::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [104] call vera_layer_get_mapbase_offset
    jsr vera_layer_get_mapbase_offset
    // [105] vera_layer_get_mapbase_offset::return#2 = vera_layer_get_mapbase_offset::return#0
    // screenlayer::@4
    // [106] CONIO_SCREEN_TEXT#16 = vera_layer_get_mapbase_offset::return#2 -- vwuz1=vwuz2 
    lda.z vera_layer_get_mapbase_offset.return
    sta.z CONIO_SCREEN_TEXT_1
    lda.z vera_layer_get_mapbase_offset.return+1
    sta.z CONIO_SCREEN_TEXT_1+1
    // vera_layer_get_width(conio_screen_layer)
    // [107] screenlayer::vera_layer_get_width1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // screenlayer::vera_layer_get_width1
    // byte* config = vera_layer_config[layer]
    // [108] screenlayer::vera_layer_get_width1_$2 = screenlayer::vera_layer_get_width1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [109] screenlayer::vera_layer_get_width1_config#0 = vera_layer_config[screenlayer::vera_layer_get_width1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_width1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_width1_config+1
    // *config & VERA_LAYER_WIDTH_MASK
    // [110] screenlayer::vera_layer_get_width1_$0 = *screenlayer::vera_layer_get_width1_config#0 & VERA_LAYER_WIDTH_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_WIDTH_MASK
    ldy #0
    and (vera_layer_get_width1_config),y
    // (*config & VERA_LAYER_WIDTH_MASK) >> 4
    // [111] screenlayer::vera_layer_get_width1_$1 = screenlayer::vera_layer_get_width1_$0 >> 4 -- vbuaa=vbuaa_ror_4 
    lsr
    lsr
    lsr
    lsr
    // return VERA_LAYER_WIDTH[ (*config & VERA_LAYER_WIDTH_MASK) >> 4];
    // [112] screenlayer::vera_layer_get_width1_$3 = screenlayer::vera_layer_get_width1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [113] screenlayer::vera_layer_get_width1_return#0 = VERA_LAYER_WIDTH[screenlayer::vera_layer_get_width1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_WIDTH,y
    sta.z vera_layer_get_width1_return
    lda VERA_LAYER_WIDTH+1,y
    sta.z vera_layer_get_width1_return+1
    // screenlayer::vera_layer_get_width1_@return
    // }
    // [114] screenlayer::vera_layer_get_width1_return#1 = screenlayer::vera_layer_get_width1_return#0
    // screenlayer::@1
    // vera_layer_get_width(conio_screen_layer)
    // [115] screenlayer::$2 = screenlayer::vera_layer_get_width1_return#1
    // conio_width = vera_layer_get_width(conio_screen_layer)
    // [116] conio_width = screenlayer::$2 -- vwuz1=vwuz2 
    lda.z __2
    sta.z conio_width
    lda.z __2+1
    sta.z conio_width+1
    // vera_layer_get_rowshift(conio_screen_layer)
    // [117] vera_layer_get_rowshift::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [118] call vera_layer_get_rowshift
    jsr vera_layer_get_rowshift
    // [119] vera_layer_get_rowshift::return#2 = vera_layer_get_rowshift::return#0
    // screenlayer::@5
    // [120] screenlayer::$3 = vera_layer_get_rowshift::return#2
    // conio_rowshift = vera_layer_get_rowshift(conio_screen_layer)
    // [121] conio_rowshift = screenlayer::$3 -- vbuz1=vbuaa 
    sta.z conio_rowshift
    // vera_layer_get_rowskip(conio_screen_layer)
    // [122] vera_layer_get_rowskip::layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // [123] call vera_layer_get_rowskip
    jsr vera_layer_get_rowskip
    // [124] vera_layer_get_rowskip::return#2 = vera_layer_get_rowskip::return#0
    // screenlayer::@6
    // [125] screenlayer::$4 = vera_layer_get_rowskip::return#2
    // conio_rowskip = vera_layer_get_rowskip(conio_screen_layer)
    // [126] conio_rowskip = screenlayer::$4 -- vwuz1=vwuz2 
    lda.z __4
    sta.z conio_rowskip
    lda.z __4+1
    sta.z conio_rowskip+1
    // vera_layer_get_height(conio_screen_layer)
    // [127] screenlayer::vera_layer_get_height1_layer#0 = conio_screen_layer -- vbuaa=vbuz1 
    lda.z conio_screen_layer
    // screenlayer::vera_layer_get_height1
    // byte* config = vera_layer_config[layer]
    // [128] screenlayer::vera_layer_get_height1_$2 = screenlayer::vera_layer_get_height1_layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [129] screenlayer::vera_layer_get_height1_config#0 = vera_layer_config[screenlayer::vera_layer_get_height1_$2] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z vera_layer_get_height1_config
    lda vera_layer_config+1,y
    sta.z vera_layer_get_height1_config+1
    // *config & VERA_LAYER_HEIGHT_MASK
    // [130] screenlayer::vera_layer_get_height1_$0 = *screenlayer::vera_layer_get_height1_config#0 & VERA_LAYER_HEIGHT_MASK -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_HEIGHT_MASK
    ldy #0
    and (vera_layer_get_height1_config),y
    // (*config & VERA_LAYER_HEIGHT_MASK) >> 6
    // [131] screenlayer::vera_layer_get_height1_$1 = screenlayer::vera_layer_get_height1_$0 >> 6 -- vbuaa=vbuaa_ror_6 
    rol
    rol
    rol
    and #3
    // return VERA_LAYER_HEIGHT[ (*config & VERA_LAYER_HEIGHT_MASK) >> 6];
    // [132] screenlayer::vera_layer_get_height1_$3 = screenlayer::vera_layer_get_height1_$1 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [133] screenlayer::vera_layer_get_height1_return#0 = VERA_LAYER_HEIGHT[screenlayer::vera_layer_get_height1_$3] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda VERA_LAYER_HEIGHT,y
    sta.z vera_layer_get_height1_return
    lda VERA_LAYER_HEIGHT+1,y
    sta.z vera_layer_get_height1_return+1
    // screenlayer::vera_layer_get_height1_@return
    // }
    // [134] screenlayer::vera_layer_get_height1_return#1 = screenlayer::vera_layer_get_height1_return#0
    // screenlayer::@2
    // vera_layer_get_height(conio_screen_layer)
    // [135] screenlayer::$5 = screenlayer::vera_layer_get_height1_return#1
    // conio_height = vera_layer_get_height(conio_screen_layer)
    // [136] conio_height = screenlayer::$5 -- vwuz1=vwuz2 
    lda.z __5
    sta.z conio_height
    lda.z __5+1
    sta.z conio_height+1
    // screenlayer::@return
    // }
    // [137] return 
    rts
}
  // vera_layer_set_textcolor
// Set the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15) when the VERA works in 16x16 color text mode.
//   An 8 bit value (decimal between 0 and 255) when the VERA works in 256 text mode.
//   Note that on the VERA, the transparent color has value 0.
// char vera_layer_set_textcolor(char layer, char color)
vera_layer_set_textcolor: {
    .const layer = 1
    // vera_layer_textcolor[layer] = color
    // [138] *(vera_layer_textcolor+vera_layer_set_textcolor::layer#0) = WHITE -- _deref_pbuc1=vbuc2 
    lda #WHITE
    sta vera_layer_textcolor+layer
    // vera_layer_set_textcolor::@return
    // }
    // [139] return 
    rts
}
  // vera_layer_set_backcolor
// Set the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - color: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// char vera_layer_set_backcolor(char layer, char color)
vera_layer_set_backcolor: {
    .const layer = 1
    // vera_layer_backcolor[layer] = color
    // [140] *(vera_layer_backcolor+vera_layer_set_backcolor::layer#0) = BLUE -- _deref_pbuc1=vbuc2 
    lda #BLUE
    sta vera_layer_backcolor+layer
    // vera_layer_set_backcolor::@return
    // }
    // [141] return 
    rts
}
  // vera_layer_set_mapbase
// Set the base of the map layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - mapbase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// void vera_layer_set_mapbase(__register(A) char layer, __register(X) char mapbase)
vera_layer_set_mapbase: {
    .label addr = $1c
    // byte* addr = vera_layer_mapbase[layer]
    // [143] vera_layer_set_mapbase::$0 = vera_layer_set_mapbase::layer#3 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [144] vera_layer_set_mapbase::addr#0 = vera_layer_mapbase[vera_layer_set_mapbase::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_mapbase,y
    sta.z addr
    lda vera_layer_mapbase+1,y
    sta.z addr+1
    // *addr = mapbase
    // [145] *vera_layer_set_mapbase::addr#0 = vera_layer_set_mapbase::mapbase#3 -- _deref_pbuz1=vbuxx 
    txa
    ldy #0
    sta (addr),y
    // vera_layer_set_mapbase::@return
    // }
    // [146] return 
    rts
}
  // gotoxy
// Set the cursor to the specified position
// void gotoxy(char x, __register(X) char y)
gotoxy: {
    .label __6 = $11
    .label line_offset = $11
    // if(y>CONIO_HEIGHT)
    // [148] if(gotoxy::y#3<=conio_screen_height) goto gotoxy::@4 -- vbuxx_le_vbuz1_then_la1 
    lda.z conio_screen_height
    stx.z $ff
    cmp.z $ff
    bcs __b1
    // [150] phi from gotoxy to gotoxy::@1 [phi:gotoxy->gotoxy::@1]
    // [150] phi gotoxy::y#4 = 0 [phi:gotoxy->gotoxy::@1#0] -- vbuxx=vbuc1 
    ldx #0
    // [149] phi from gotoxy to gotoxy::@4 [phi:gotoxy->gotoxy::@4]
    // gotoxy::@4
    // [150] phi from gotoxy::@4 to gotoxy::@1 [phi:gotoxy::@4->gotoxy::@1]
    // [150] phi gotoxy::y#4 = gotoxy::y#3 [phi:gotoxy::@4->gotoxy::@1#0] -- register_copy 
    // gotoxy::@1
  __b1:
    // if(x>=CONIO_WIDTH)
    // [151] if(0<conio_screen_width) goto gotoxy::@2 -- 0_lt_vbuz1_then_la1 
    lda.z conio_screen_width
    // [152] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
    // gotoxy::@3
    // gotoxy::@2
    // conio_cursor_x[conio_screen_layer] = x
    // [153] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // conio_cursor_y[conio_screen_layer] = y
    // [154] conio_cursor_y[conio_screen_layer] = gotoxy::y#4 -- pbuc1_derefidx_vbuz1=vbuxx 
    txa
    sta conio_cursor_y,y
    // unsigned int line_offset = (unsigned int)y << conio_rowshift
    // [155] gotoxy::$6 = (unsigned int)gotoxy::y#4 -- vwuz1=_word_vbuxx 
    txa
    sta.z __6
    lda #0
    sta.z __6+1
    // [156] gotoxy::line_offset#0 = gotoxy::$6 << conio_rowshift -- vwuz1=vwuz1_rol_vbuz2 
    ldy.z conio_rowshift
    beq !e+
  !:
    asl.z line_offset
    rol.z line_offset+1
    dey
    bne !-
  !e:
    // conio_line_text[conio_screen_layer] = line_offset
    // [157] gotoxy::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [158] conio_line_text[gotoxy::$5] = gotoxy::line_offset#0 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z line_offset
    sta conio_line_text,y
    lda.z line_offset+1
    sta conio_line_text+1,y
    // gotoxy::@return
    // }
    // [159] return 
    rts
}
  // vera_layer_get_color
// Get the text and back color for text output in 16 color mode.
// - layer: Value of 0 or 1.
// - return: an 8 bit value with bit 7:4 containing the back color and bit 3:0 containing the front color.
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// __register(A) char vera_layer_get_color(__register(X) char layer)
vera_layer_get_color: {
    .label addr = $a
    // byte* addr = vera_layer_config[layer]
    // [161] vera_layer_get_color::$3 = vera_layer_get_color::layer#2 << 1 -- vbuaa=vbuxx_rol_1 
    txa
    asl
    // [162] vera_layer_get_color::addr#0 = vera_layer_config[vera_layer_get_color::$3] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // *addr & VERA_LAYER_CONFIG_256C
    // [163] vera_layer_get_color::$0 = *vera_layer_get_color::addr#0 & VERA_LAYER_CONFIG_256C -- vbuaa=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C
    ldy #0
    and (addr),y
    // if( *addr & VERA_LAYER_CONFIG_256C )
    // [164] if(0!=vera_layer_get_color::$0) goto vera_layer_get_color::@1 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b1
    // vera_layer_get_color::@2
    // vera_layer_backcolor[layer] << 4
    // [165] vera_layer_get_color::$1 = vera_layer_backcolor[vera_layer_get_color::layer#2] << 4 -- vbuaa=pbuc1_derefidx_vbuxx_rol_4 
    lda vera_layer_backcolor,x
    asl
    asl
    asl
    asl
    // return ((vera_layer_backcolor[layer] << 4) | vera_layer_textcolor[layer]);
    // [166] vera_layer_get_color::return#1 = vera_layer_get_color::$1 | vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=vbuaa_bor_pbuc1_derefidx_vbuxx 
    ora vera_layer_textcolor,x
    // [167] phi from vera_layer_get_color::@1 vera_layer_get_color::@2 to vera_layer_get_color::@return [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return]
    // [167] phi vera_layer_get_color::return#2 = vera_layer_get_color::return#0 [phi:vera_layer_get_color::@1/vera_layer_get_color::@2->vera_layer_get_color::@return#0] -- register_copy 
    // vera_layer_get_color::@return
    // }
    // [168] return 
    rts
    // vera_layer_get_color::@1
  __b1:
    // return (vera_layer_textcolor[layer]);
    // [169] vera_layer_get_color::return#0 = vera_layer_textcolor[vera_layer_get_color::layer#2] -- vbuaa=pbuc1_derefidx_vbuxx 
    lda vera_layer_textcolor,x
    rts
}
  // cputln
// Print a newline
cputln: {
    .label temp = $a
    // word temp = conio_line_text[conio_screen_layer]
    // [170] cputln::$2 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [171] cputln::temp#0 = conio_line_text[cputln::$2] -- vwuz1=pwuc1_derefidx_vbuaa 
    // TODO: This needs to be optimized! other variations don't compile because of sections not available!
    tay
    lda conio_line_text,y
    sta.z temp
    lda conio_line_text+1,y
    sta.z temp+1
    // temp += conio_rowskip
    // [172] cputln::temp#1 = cputln::temp#0 + conio_rowskip -- vwuz1=vwuz1_plus_vwuz2 
    clc
    lda.z temp
    adc.z conio_rowskip
    sta.z temp
    lda.z temp+1
    adc.z conio_rowskip+1
    sta.z temp+1
    // conio_line_text[conio_screen_layer] = temp
    // [173] cputln::$3 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [174] conio_line_text[cputln::$3] = cputln::temp#1 -- pwuc1_derefidx_vbuaa=vwuz1 
    tay
    lda.z temp
    sta conio_line_text,y
    lda.z temp+1
    sta conio_line_text+1,y
    // conio_cursor_x[conio_screen_layer] = 0
    // [175] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // conio_cursor_y[conio_screen_layer]++;
    // [176] conio_cursor_y[conio_screen_layer] = ++ conio_cursor_y[conio_screen_layer] -- pbuc1_derefidx_vbuz1=_inc_pbuc1_derefidx_vbuz1 
    ldx.z conio_screen_layer
    inc conio_cursor_y,x
    // cscroll()
    // [177] call cscroll
    jsr cscroll
    // cputln::@return
    // }
    // [178] return 
    rts
}
  // vera_layer_set_text_color_mode
// Set the configuration of the layer text color mode.
// - layer: Value of 0 or 1.
// - color_mode: Specifies the color mode to be VERA_LAYER_CONFIG_16 or VERA_LAYER_CONFIG_256 for text mode.
// void vera_layer_set_text_color_mode(__register(A) char layer, char color_mode)
vera_layer_set_text_color_mode: {
    .label addr = $25
    // byte* addr = vera_layer_config[layer]
    // [180] vera_layer_set_text_color_mode::$0 = vera_layer_set_text_color_mode::layer#3 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [181] vera_layer_set_text_color_mode::addr#0 = vera_layer_config[vera_layer_set_text_color_mode::$0] -- pbuz1=qbuc1_derefidx_vbuaa 
    tay
    lda vera_layer_config,y
    sta.z addr
    lda vera_layer_config+1,y
    sta.z addr+1
    // *addr &= ~VERA_LAYER_CONFIG_256C
    // [182] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 & ~VERA_LAYER_CONFIG_256C -- _deref_pbuz1=_deref_pbuz1_band_vbuc1 
    lda #VERA_LAYER_CONFIG_256C^$ff
    ldy #0
    and (addr),y
    sta (addr),y
    // *addr |= color_mode
    // [183] *vera_layer_set_text_color_mode::addr#0 = *vera_layer_set_text_color_mode::addr#0 -- _deref_pbuz1=_deref_pbuz1 
    lda (addr),y
    sta (addr),y
    // vera_layer_set_text_color_mode::@return
    // }
    // [184] return 
    rts
}
  // clrscr
// clears the screen and moves the cursor to the upper left-hand corner of the screen.
clrscr: {
    .label __1 = $f
    .label line_text = $20
    .label color = $f
    .label l = $24
    // char* line_text = CONIO_SCREEN_TEXT
    // [185] clrscr::line_text#0 = (char *)CONIO_SCREEN_TEXT#16 -- pbuz1=pbuz2 
    lda.z CONIO_SCREEN_TEXT_1
    sta.z line_text
    lda.z CONIO_SCREEN_TEXT_1+1
    sta.z line_text+1
    // vera_layer_get_backcolor(conio_screen_layer)
    // [186] vera_layer_get_backcolor::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [187] call vera_layer_get_backcolor
    jsr vera_layer_get_backcolor
    // [188] vera_layer_get_backcolor::return#2 = vera_layer_get_backcolor::return#0
    // clrscr::@7
    // [189] clrscr::$0 = vera_layer_get_backcolor::return#2
    // vera_layer_get_backcolor(conio_screen_layer) << 4
    // [190] clrscr::$1 = clrscr::$0 << 4 -- vbuz1=vbuaa_rol_4 
    asl
    asl
    asl
    asl
    sta.z __1
    // vera_layer_get_textcolor(conio_screen_layer)
    // [191] vera_layer_get_textcolor::layer#0 = conio_screen_layer -- vbuyy=vbuz1 
    ldy.z conio_screen_layer
    // [192] call vera_layer_get_textcolor
    jsr vera_layer_get_textcolor
    // [193] vera_layer_get_textcolor::return#2 = vera_layer_get_textcolor::return#0
    // clrscr::@8
    // [194] clrscr::$2 = vera_layer_get_textcolor::return#2
    // char color = ( vera_layer_get_backcolor(conio_screen_layer) << 4 ) | vera_layer_get_textcolor(conio_screen_layer)
    // [195] clrscr::color#0 = clrscr::$1 | clrscr::$2 -- vbuz1=vbuz1_bor_vbuaa 
    ora.z color
    sta.z color
    // [196] phi from clrscr::@8 to clrscr::@1 [phi:clrscr::@8->clrscr::@1]
    // [196] phi clrscr::line_text#2 = clrscr::line_text#0 [phi:clrscr::@8->clrscr::@1#0] -- register_copy 
    // [196] phi clrscr::l#2 = 0 [phi:clrscr::@8->clrscr::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta.z l
    // clrscr::@1
  __b1:
    // for( char l=0;l<conio_height; l++ )
    // [197] if(clrscr::l#2<conio_height) goto clrscr::@2 -- vbuz1_lt_vwuz2_then_la1 
    lda.z conio_height+1
    bne __b2
    lda.z l
    cmp.z conio_height
    bcc __b2
    // clrscr::@3
    // conio_cursor_x[conio_screen_layer] = 0
    // [198] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // conio_cursor_y[conio_screen_layer] = 0
    // [199] conio_cursor_y[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    sta conio_cursor_y,y
    // conio_line_text[conio_screen_layer] = 0
    // [200] clrscr::$9 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    tya
    asl
    // [201] conio_line_text[clrscr::$9] = 0 -- pwuc1_derefidx_vbuaa=vbuc2 
    tay
    lda #0
    sta conio_line_text,y
    sta conio_line_text+1,y
    // clrscr::@return
    // }
    // [202] return 
    rts
    // clrscr::@2
  __b2:
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [203] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(ch)
    // [204] clrscr::$5 = byte0  clrscr::line_text#2 -- vbuaa=_byte0_pbuz1 
    lda.z line_text
    // *VERA_ADDRX_L = BYTE0(ch)
    // [205] *VERA_ADDRX_L = clrscr::$5 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(ch)
    // [206] clrscr::$6 = byte1  clrscr::line_text#2 -- vbuaa=_byte1_pbuz1 
    lda.z line_text+1
    // *VERA_ADDRX_M = BYTE1(ch)
    // [207] *VERA_ADDRX_M = clrscr::$6 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // CONIO_SCREEN_BANK | VERA_INC_1
    // [208] clrscr::$7 = CONIO_SCREEN_BANK#14 | VERA_INC_1 -- vbuaa=vbuxx_bor_vbuc1 
    txa
    ora #VERA_INC_1
    // *VERA_ADDRX_H = CONIO_SCREEN_BANK | VERA_INC_1
    // [209] *VERA_ADDRX_H = clrscr::$7 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // [210] phi from clrscr::@2 to clrscr::@4 [phi:clrscr::@2->clrscr::@4]
    // [210] phi clrscr::c#2 = 0 [phi:clrscr::@2->clrscr::@4#0] -- vbuyy=vbuc1 
    ldy #0
    // clrscr::@4
  __b4:
    // for( char c=0;c<conio_width; c++ )
    // [211] if(clrscr::c#2<conio_width) goto clrscr::@5 -- vbuyy_lt_vwuz1_then_la1 
    lda.z conio_width+1
    bne __b5
    cpy.z conio_width
    bcc __b5
    // clrscr::@6
    // line_text += conio_rowskip
    // [212] clrscr::line_text#1 = clrscr::line_text#2 + conio_rowskip -- pbuz1=pbuz1_plus_vwuz2 
    clc
    lda.z line_text
    adc.z conio_rowskip
    sta.z line_text
    lda.z line_text+1
    adc.z conio_rowskip+1
    sta.z line_text+1
    // for( char l=0;l<conio_height; l++ )
    // [213] clrscr::l#1 = ++ clrscr::l#2 -- vbuz1=_inc_vbuz1 
    inc.z l
    // [196] phi from clrscr::@6 to clrscr::@1 [phi:clrscr::@6->clrscr::@1]
    // [196] phi clrscr::line_text#2 = clrscr::line_text#1 [phi:clrscr::@6->clrscr::@1#0] -- register_copy 
    // [196] phi clrscr::l#2 = clrscr::l#1 [phi:clrscr::@6->clrscr::@1#1] -- register_copy 
    jmp __b1
    // clrscr::@5
  __b5:
    // *VERA_DATA0 = ' '
    // [214] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    lda #' '
    sta VERA_DATA0
    // *VERA_DATA0 = color
    // [215] *VERA_DATA0 = clrscr::color#0 -- _deref_pbuc1=vbuz1 
    lda.z color
    sta VERA_DATA0
    // for( char c=0;c<conio_width; c++ )
    // [216] clrscr::c#1 = ++ clrscr::c#2 -- vbuyy=_inc_vbuyy 
    iny
    // [210] phi from clrscr::@5 to clrscr::@4 [phi:clrscr::@5->clrscr::@4]
    // [210] phi clrscr::c#2 = clrscr::c#1 [phi:clrscr::@5->clrscr::@4#0] -- register_copy 
    jmp __b4
}
  // printf_str
/// Print a NUL-terminated string
// void printf_str(void (*putc)(char), __zp($20) const char *s)
printf_str: {
    .label s = $20
    // [218] phi from printf_str to printf_str::@1 [phi:printf_str->printf_str::@1]
    // [218] phi printf_str::s#2 = main::s [phi:printf_str->printf_str::@1#0] -- pbuz1=pbuc1 
    lda #<main.s
    sta.z s
    lda #>main.s
    sta.z s+1
    // printf_str::@1
  __b1:
    // while(c=*s++)
    // [219] printf_str::c#1 = *printf_str::s#2 -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [220] printf_str::s#0 = ++ printf_str::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [221] if(0!=printf_str::c#1) goto printf_str::@2 -- 0_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // printf_str::@return
    // }
    // [222] return 
    rts
    // printf_str::@2
  __b2:
    // putc(c)
    // [223] stackpush(char) = printf_str::c#1 -- _stackpushbyte_=vbuaa 
    pha
    // [224] callexecute cputc  -- call_vprc1 
    jsr cputc
    // sideeffect stackpullbytes(1) -- _stackpullbyte_1 
    pla
    // [218] phi from printf_str::@2 to printf_str::@1 [phi:printf_str::@2->printf_str::@1]
    // [218] phi printf_str::s#2 = printf_str::s#0 [phi:printf_str::@2->printf_str::@1#0] -- register_copy 
    jmp __b1
}
  // load_to_bank
// Load a file into one of the 256 8KB RAM banks.
// - device: The device to load from
// - filename: The file name
// - address: The absolute address in banked memory to load the file too
// - returns: 0xff: Success, other: Kernal Error Code (https://commodore.ca/manuals/pdfs/commodore_error_messages.pdf)
// Note: This function only works if the entire file fits within the selected bank. The function cannot load to multiple banks.
// char load_to_bank(char device, char *filename, unsigned long address)
load_to_bank: {
    .const device = 8
    .const bank = (<main.BANK_SPRITE>>$10)<<3|(>main.BANK_SPRITE)>>5
    // setnam(filename)
    // [226] setnam::filename = main::filename -- pbuz1=pbuc1 
    lda #<main.filename
    sta.z setnam.filename
    lda #>main.filename
    sta.z setnam.filename+1
    // [227] call setnam
    jsr setnam
    // load_to_bank::@1
    // setlfs(device)
    // [228] setlfs::device = load_to_bank::device#0 -- vbuz1=vbuc1 
    lda #device
    sta.z setlfs.device
    // [229] call setlfs
    jsr setlfs
    // load_to_bank::@2
    // VIA1->PORT_A = (char)bank
    // [230] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = load_to_bank::bank#0 -- _deref_pbuc1=vbuc2 
    lda #bank
    sta VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A
    // load(addr, 0)
    // [231] load::address = (char *)0+$a000 -- pbuz1=pbuc1 
    lda #<0+$a000
    sta.z load.address
    lda #>0+$a000
    sta.z load.address+1
    // [232] load::verify = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z load.verify
    // [233] call load
    jsr load
    // load_to_bank::@return
    // }
    // [234] return 
    rts
}
  // memcpy_bank_to_vram
// Copy block of memory (from banked RAM to VRAM)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination in VRAM.
// - vdest: absolute address in VRAM
// - src: absolute address in the banked RAM  of the CX16.
// - num: dword of the number of bytes to copy
// Note: This function can switch RAM bank during copying to copy data from multiple RAM banks.
// void memcpy_bank_to_vram(__zp($38) unsigned long vdest, unsigned long src, __zp($33) unsigned long num)
memcpy_bank_to_vram: {
    .label __5 = $f
    .label __9 = $20
    .label beg = $27
    .label end = $33
    // select the bank
    .label addr = $20
    .label pos = $27
    .label vdest = $38
    .label num = $33
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [236] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(vdest)
    // [237] memcpy_bank_to_vram::$0 = byte0  memcpy_bank_to_vram::vdest#2 -- vbuaa=_byte0_vduz1 
    lda.z vdest
    // *VERA_ADDRX_L = BYTE0(vdest)
    // [238] *VERA_ADDRX_L = memcpy_bank_to_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(vdest)
    // [239] memcpy_bank_to_vram::$1 = byte1  memcpy_bank_to_vram::vdest#2 -- vbuaa=_byte1_vduz1 
    lda.z vdest+1
    // *VERA_ADDRX_M = BYTE1(vdest)
    // [240] *VERA_ADDRX_M = memcpy_bank_to_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // BYTE2(vdest)
    // [241] memcpy_bank_to_vram::$2 = byte2  memcpy_bank_to_vram::vdest#2 -- vbuaa=_byte2_vduz1 
    lda.z vdest+2
    // *VERA_ADDRX_H = BYTE2(vdest)
    // [242] *VERA_ADDRX_H = memcpy_bank_to_vram::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_H
    // *VERA_ADDRX_H |= VERA_INC_1
    // [243] *VERA_ADDRX_H = *VERA_ADDRX_H | VERA_INC_1 -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    lda #VERA_INC_1
    ora VERA_ADDRX_H
    sta VERA_ADDRX_H
    // unsigned long end = src+num
    // [244] memcpy_bank_to_vram::end#0 = memcpy_bank_to_vram::beg#0 + memcpy_bank_to_vram::num#2 -- vduz1=vduz2_plus_vduz1 
    clc
    lda.z end
    adc.z beg
    sta.z end
    lda.z end+1
    adc.z beg+1
    sta.z end+1
    lda.z end+2
    adc.z beg+2
    sta.z end+2
    lda.z end+3
    adc.z beg+3
    sta.z end+3
    // BYTE2(beg)
    // [245] memcpy_bank_to_vram::$4 = byte2  memcpy_bank_to_vram::beg#0 -- vbuaa=_byte2_vduz1 
    lda.z beg+2
    // BYTE2(beg)<<3
    // [246] memcpy_bank_to_vram::$5 = memcpy_bank_to_vram::$4 << 3 -- vbuz1=vbuaa_rol_3 
    asl
    asl
    asl
    sta.z __5
    // BYTE1(beg)
    // [247] memcpy_bank_to_vram::$6 = byte1  memcpy_bank_to_vram::beg#0 -- vbuaa=_byte1_vduz1 
    lda.z beg+1
    // BYTE1(beg)>>5
    // [248] memcpy_bank_to_vram::$7 = memcpy_bank_to_vram::$6 >> 5 -- vbuaa=vbuaa_ror_5 
    lsr
    lsr
    lsr
    lsr
    lsr
    // char bank = BYTE2(beg)<<3 | BYTE1(beg)>>5
    // [249] memcpy_bank_to_vram::bank#0 = memcpy_bank_to_vram::$5 | memcpy_bank_to_vram::$7 -- vbuxx=vbuz1_bor_vbuaa 
    ora.z __5
    tax
    // WORD0(beg)
    // [250] memcpy_bank_to_vram::$9 = word0  memcpy_bank_to_vram::beg#0 -- vwuz1=_word0_vduz2 
    lda.z beg
    sta.z __9
    lda.z beg+1
    sta.z __9+1
    // WORD0(beg)&0x1FFF
    // [251] memcpy_bank_to_vram::addr#0 = memcpy_bank_to_vram::$9 & $1fff -- vwuz1=vwuz1_band_vwuc1 
    lda.z addr
    and #<$1fff
    sta.z addr
    lda.z addr+1
    and #>$1fff
    sta.z addr+1
    // addr += 0xA000
    // [252] memcpy_bank_to_vram::addr#1 = (char *)memcpy_bank_to_vram::addr#0 + $a000 -- pbuz1=pbuz1_plus_vwuc1 
    // stip off the top 3 bits, which are representing the bank of the word!
    lda.z addr
    clc
    adc #<$a000
    sta.z addr
    lda.z addr+1
    adc #>$a000
    sta.z addr+1
    // VIA1->PORT_A = (char)bank
    // [253] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = memcpy_bank_to_vram::bank#0 -- _deref_pbuc1=vbuxx 
    stx VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A
    // [254] phi from memcpy_bank_to_vram memcpy_bank_to_vram::@3 to memcpy_bank_to_vram::@1 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1]
  __b1:
    // [254] phi memcpy_bank_to_vram::bank#2 = memcpy_bank_to_vram::bank#0 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1#0] -- register_copy 
    // [254] phi memcpy_bank_to_vram::addr#4 = memcpy_bank_to_vram::addr#1 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1#1] -- register_copy 
    // [254] phi memcpy_bank_to_vram::pos#2 = memcpy_bank_to_vram::beg#0 [phi:memcpy_bank_to_vram/memcpy_bank_to_vram::@3->memcpy_bank_to_vram::@1#2] -- register_copy 
  // select the bank
    // memcpy_bank_to_vram::@1
    // for(unsigned long pos=beg; pos<end; pos++)
    // [255] if(memcpy_bank_to_vram::pos#2<memcpy_bank_to_vram::end#0) goto memcpy_bank_to_vram::@2 -- vduz1_lt_vduz2_then_la1 
    lda.z pos+3
    cmp.z end+3
    bcc __b2
    bne !+
    lda.z pos+2
    cmp.z end+2
    bcc __b2
    bne !+
    lda.z pos+1
    cmp.z end+1
    bcc __b2
    bne !+
    lda.z pos
    cmp.z end
    bcc __b2
  !:
    // memcpy_bank_to_vram::@return
    // }
    // [256] return 
    rts
    // memcpy_bank_to_vram::@2
  __b2:
    // if(addr == 0xC000)
    // [257] if(memcpy_bank_to_vram::addr#4!=$c000) goto memcpy_bank_to_vram::@3 -- pbuz1_neq_vwuc1_then_la1 
    lda.z addr+1
    cmp #>$c000
    bne __b3
    lda.z addr
    cmp #<$c000
    bne __b3
    // memcpy_bank_to_vram::@4
    // VIA1->PORT_A = (char)++bank;
    // [258] memcpy_bank_to_vram::bank#1 = ++ memcpy_bank_to_vram::bank#2 -- vbuxx=_inc_vbuxx 
    inx
    // VIA1->PORT_A = (char)++bank
    // [259] *((char *)VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A) = memcpy_bank_to_vram::bank#1 -- _deref_pbuc1=vbuxx 
    stx VIA1+OFFSET_STRUCT_MOS6522_VIA_PORT_A
    // [260] phi from memcpy_bank_to_vram::@4 to memcpy_bank_to_vram::@3 [phi:memcpy_bank_to_vram::@4->memcpy_bank_to_vram::@3]
    // [260] phi memcpy_bank_to_vram::bank#5 = memcpy_bank_to_vram::bank#1 [phi:memcpy_bank_to_vram::@4->memcpy_bank_to_vram::@3#0] -- register_copy 
    // [260] phi memcpy_bank_to_vram::addr#5 = (char *) 40960 [phi:memcpy_bank_to_vram::@4->memcpy_bank_to_vram::@3#1] -- pbuz1=pbuc1 
    lda #<$a000
    sta.z addr
    lda #>$a000
    sta.z addr+1
    // [260] phi from memcpy_bank_to_vram::@2 to memcpy_bank_to_vram::@3 [phi:memcpy_bank_to_vram::@2->memcpy_bank_to_vram::@3]
    // [260] phi memcpy_bank_to_vram::bank#5 = memcpy_bank_to_vram::bank#2 [phi:memcpy_bank_to_vram::@2->memcpy_bank_to_vram::@3#0] -- register_copy 
    // [260] phi memcpy_bank_to_vram::addr#5 = memcpy_bank_to_vram::addr#4 [phi:memcpy_bank_to_vram::@2->memcpy_bank_to_vram::@3#1] -- register_copy 
    // memcpy_bank_to_vram::@3
  __b3:
    // *VERA_DATA0 = *addr
    // [261] *VERA_DATA0 = *memcpy_bank_to_vram::addr#5 -- _deref_pbuc1=_deref_pbuz1 
    ldy #0
    lda (addr),y
    sta VERA_DATA0
    // addr++;
    // [262] memcpy_bank_to_vram::addr#2 = ++ memcpy_bank_to_vram::addr#5 -- pbuz1=_inc_pbuz1 
    inc.z addr
    bne !+
    inc.z addr+1
  !:
    // for(unsigned long pos=beg; pos<end; pos++)
    // [263] memcpy_bank_to_vram::pos#1 = ++ memcpy_bank_to_vram::pos#2 -- vduz1=_inc_vduz1 
    inc.z pos
    bne !+
    inc.z pos+1
    bne !+
    inc.z pos+2
    bne !+
    inc.z pos+3
  !:
    jmp __b1
}
  // memcpy_to_vram
// Copy block of memory (from RAM to VRAM)
// Copies the values of num bytes from the location pointed to by source directly to the memory block pointed to by destination in VRAM.
// - vbank: Which 64K VRAM bank to put data into (0/1)
// - vdest: The destination address in VRAM
// - src: The source address in RAM
// - num: The number of bytes to copy
// void memcpy_to_vram(char vbank, void *vdest, void *src, unsigned int num)
memcpy_to_vram: {
    .const vbank = <VERA_SPRITE_ATTR>>$10
    .label vdest = VERA_SPRITE_ATTR&$ffff
    .label src = main.SPRITE_ATTR
    // Transfer the data
    .label end = src+SIZEOF_STRUCT_VERA_SPRITE
    .label s = $20
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [264] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // *VERA_ADDRX_L = BYTE0(vdest)
    // [265] *VERA_ADDRX_L = 0 -- _deref_pbuc1=vbuc2 
    // Set address
    lda #0
    sta VERA_ADDRX_L
    // *VERA_ADDRX_M = BYTE1(vdest)
    // [266] *VERA_ADDRX_M = byte1 memcpy_to_vram::vdest#0 -- _deref_pbuc1=vbuc2 
    lda #>vdest
    sta VERA_ADDRX_M
    // *VERA_ADDRX_H = VERA_INC_1 | vbank
    // [267] *VERA_ADDRX_H = VERA_INC_1|memcpy_to_vram::vbank#0 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1|vbank
    sta VERA_ADDRX_H
    // [268] phi from memcpy_to_vram to memcpy_to_vram::@1 [phi:memcpy_to_vram->memcpy_to_vram::@1]
    // [268] phi memcpy_to_vram::s#2 = (char *)memcpy_to_vram::src#0 [phi:memcpy_to_vram->memcpy_to_vram::@1#0] -- pbuz1=pbuc1 
    lda #<src
    sta.z s
    lda #>src
    sta.z s+1
    // memcpy_to_vram::@1
  __b1:
    // for(char *s = src; s!=end; s++)
    // [269] if(memcpy_to_vram::s#2!=memcpy_to_vram::end#0) goto memcpy_to_vram::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z s+1
    cmp #>end
    bne __b2
    lda.z s
    cmp #<end
    bne __b2
    // memcpy_to_vram::@return
    // }
    // [270] return 
    rts
    // memcpy_to_vram::@2
  __b2:
    // *VERA_DATA0 = *s
    // [271] *VERA_DATA0 = *memcpy_to_vram::s#2 -- _deref_pbuc1=_deref_pbuz1 
    ldy #0
    lda (s),y
    sta VERA_DATA0
    // for(char *s = src; s!=end; s++)
    // [272] memcpy_to_vram::s#1 = ++ memcpy_to_vram::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [268] phi from memcpy_to_vram::@2 to memcpy_to_vram::@1 [phi:memcpy_to_vram::@2->memcpy_to_vram::@1]
    // [268] phi memcpy_to_vram::s#2 = memcpy_to_vram::s#1 [phi:memcpy_to_vram::@2->memcpy_to_vram::@1#0] -- register_copy 
    jmp __b1
}
  // vera_layer_mode_tile
// Set a vera layer in tile mode and configure the:
// - layer: Value of 0 or 1.
// - mapbase_address: A dword typed address (4 bytes), that specifies the full address of the map base.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective mapbase vera register.
//   Note that the register only specifies bits 16:9 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 512 bytes.
// - tilebase_address: A dword typed address (4 bytes), that specifies the base address of the tile map.
//   The function does the translation from the dword that contains the 17 bit address,
//   to the respective tilebase vera register.
//   Note that the resulting vera register holds only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// - mapwidth: The width of the map in number of tiles.
// - mapheight: The height of the map in number of tiles.
// - tilewidth: The width of a tile, which can be 8 or 16 pixels.
// - tileheight: The height of a tile, which can be 8 or 16 pixels.
// - color_depth: The color depth in bits per pixel (BPP), which can be 1, 2, 4 or 8.
// void vera_layer_mode_tile(char layer, unsigned long mapbase_address, unsigned long tilebase_address, unsigned int mapwidth, unsigned int mapheight, char tilewidth, char tileheight, char color_depth)
vera_layer_mode_tile: {
    .const mapbase = 0
    .label tilebase_address = vera_layer_mode_text.tilebase_address>>1
    // config
    .label config = VERA_LAYER_WIDTH_128|VERA_LAYER_HEIGHT_64
    // vera_layer_mode_tile::@1
    // vera_layer_rowshift[layer] = 8
    // [274] *(vera_layer_rowshift+vera_layer_mode_text::layer#0) = 8 -- _deref_pbuc1=vbuc2 
    lda #8
    sta vera_layer_rowshift+vera_layer_mode_text.layer
    // vera_layer_rowskip[layer] = 256
    // [275] *(vera_layer_rowskip+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = $100 -- _deref_pwuc1=vwuc2 
    lda #<$100
    sta vera_layer_rowskip+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT
    lda #>$100
    sta vera_layer_rowskip+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT+1
    // [276] phi from vera_layer_mode_tile::@1 to vera_layer_mode_tile::@2 [phi:vera_layer_mode_tile::@1->vera_layer_mode_tile::@2]
    // vera_layer_mode_tile::@2
    // vera_layer_set_config(layer, config)
    // [277] call vera_layer_set_config
    jsr vera_layer_set_config
    // vera_layer_mode_tile::@4
    // vera_mapbase_offset[layer] = WORD0(mapbase_address)
    // [278] *(vera_mapbase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = 0 -- _deref_pwuc1=vwuc2 
    // mapbase
    lda #<0
    sta vera_mapbase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT
    sta vera_mapbase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT+1
    // vera_mapbase_bank[layer] = BYTE2(mapbase_address)
    // [279] *(vera_mapbase_bank+vera_layer_mode_text::layer#0) = 0 -- _deref_pbuc1=vbuc2 
    sta vera_mapbase_bank+vera_layer_mode_text.layer
    // vera_mapbase_address[layer] = mapbase_address
    // [280] *(vera_mapbase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::mapbase_address#0 -- _deref_pduc1=vduc2 
    lda #<vera_layer_mode_text.mapbase_address
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG
    lda #>vera_layer_mode_text.mapbase_address
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+1
    lda #<vera_layer_mode_text.mapbase_address>>$10
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+2
    lda #>vera_layer_mode_text.mapbase_address>>$10
    sta vera_mapbase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+3
    // vera_layer_set_mapbase(layer,mapbase)
    // [281] call vera_layer_set_mapbase
    // [142] phi from vera_layer_mode_tile::@4 to vera_layer_set_mapbase [phi:vera_layer_mode_tile::@4->vera_layer_set_mapbase]
    // [142] phi vera_layer_set_mapbase::mapbase#3 = vera_layer_mode_tile::mapbase#0 [phi:vera_layer_mode_tile::@4->vera_layer_set_mapbase#0] -- vbuxx=vbuc1 
    ldx #mapbase
    // [142] phi vera_layer_set_mapbase::layer#3 = vera_layer_mode_text::layer#0 [phi:vera_layer_mode_tile::@4->vera_layer_set_mapbase#1] -- vbuaa=vbuc1 
    lda #vera_layer_mode_text.layer
    jsr vera_layer_set_mapbase
    // vera_layer_mode_tile::@5
    // vera_tilebase_offset[layer] = WORD0(tilebase_address)
    // [282] *(vera_tilebase_offset+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_INT) = word0 vera_layer_mode_text::tilebase_address#0 -- _deref_pwuc1=vwuc2 
    // tilebase
    lda #<vera_layer_mode_text.tilebase_address&$ffff
    sta vera_tilebase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT
    lda #>vera_layer_mode_text.tilebase_address&$ffff
    sta vera_tilebase_offset+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_INT+1
    // vera_tilebase_bank[layer] = BYTE2(tilebase_address)
    // [283] *(vera_tilebase_bank+vera_layer_mode_text::layer#0) = 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta vera_tilebase_bank+vera_layer_mode_text.layer
    // vera_tilebase_address[layer] = tilebase_address
    // [284] *(vera_tilebase_address+vera_layer_mode_text::layer#0*SIZEOF_UNSIGNED_LONG) = vera_layer_mode_text::tilebase_address#0 -- _deref_pduc1=vduc2 
    lda #<vera_layer_mode_text.tilebase_address
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG
    lda #>vera_layer_mode_text.tilebase_address
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+1
    lda #<vera_layer_mode_text.tilebase_address>>$10
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+2
    lda #>vera_layer_mode_text.tilebase_address>>$10
    sta vera_tilebase_address+vera_layer_mode_text.layer*SIZEOF_UNSIGNED_LONG+3
    // [285] phi from vera_layer_mode_tile::@5 to vera_layer_mode_tile::@3 [phi:vera_layer_mode_tile::@5->vera_layer_mode_tile::@3]
    // vera_layer_mode_tile::@3
    // vera_layer_set_tilebase(layer,tilebase)
    // [286] call vera_layer_set_tilebase
    jsr vera_layer_set_tilebase
    // vera_layer_mode_tile::@return
    // }
    // [287] return 
    rts
}
  // vera_layer_get_mapbase_bank
// Get the map base bank of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Bank in vera vram.
// __register(X) char vera_layer_get_mapbase_bank(__register(Y) char layer)
vera_layer_get_mapbase_bank: {
    // return vera_mapbase_bank[layer];
    // [288] vera_layer_get_mapbase_bank::return#0 = vera_mapbase_bank[vera_layer_get_mapbase_bank::layer#0] -- vbuxx=pbuc1_derefidx_vbuyy 
    ldx vera_mapbase_bank,y
    // vera_layer_get_mapbase_bank::@return
    // }
    // [289] return 
    rts
}
  // vera_layer_get_mapbase_offset
// Get the map base lower 16-bit address (offset) of the tiles for the layer.
// - layer: Value of 0 or 1.
// - return: Offset in vera vram of the specified bank.
// __zp($1a) unsigned int vera_layer_get_mapbase_offset(__register(A) char layer)
vera_layer_get_mapbase_offset: {
    .label return = $1a
    // return vera_mapbase_offset[layer];
    // [290] vera_layer_get_mapbase_offset::$0 = vera_layer_get_mapbase_offset::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [291] vera_layer_get_mapbase_offset::return#0 = vera_mapbase_offset[vera_layer_get_mapbase_offset::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_mapbase_offset,y
    sta.z return
    lda vera_mapbase_offset+1,y
    sta.z return+1
    // vera_layer_get_mapbase_offset::@return
    // }
    // [292] return 
    rts
}
  // vera_layer_get_rowshift
// Get the bit shift value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Rowshift value to calculate fast from a y value to line offset in tile mode.
// __register(A) char vera_layer_get_rowshift(__register(Y) char layer)
vera_layer_get_rowshift: {
    // return vera_layer_rowshift[layer];
    // [293] vera_layer_get_rowshift::return#0 = vera_layer_rowshift[vera_layer_get_rowshift::layer#0] -- vbuaa=pbuc1_derefidx_vbuyy 
    lda vera_layer_rowshift,y
    // vera_layer_get_rowshift::@return
    // }
    // [294] return 
    rts
}
  // vera_layer_get_rowskip
// Get the value required to skip a whole line fast.
// - layer: Value of 0 or 1.
// - return: Skip value to calculate fast from a y value to line offset in tile mode.
// __zp($11) unsigned int vera_layer_get_rowskip(__register(A) char layer)
vera_layer_get_rowskip: {
    .label return = $11
    // return vera_layer_rowskip[layer];
    // [295] vera_layer_get_rowskip::$0 = vera_layer_get_rowskip::layer#0 << 1 -- vbuaa=vbuaa_rol_1 
    asl
    // [296] vera_layer_get_rowskip::return#0 = vera_layer_rowskip[vera_layer_get_rowskip::$0] -- vwuz1=pwuc1_derefidx_vbuaa 
    tay
    lda vera_layer_rowskip,y
    sta.z return
    lda vera_layer_rowskip+1,y
    sta.z return+1
    // vera_layer_get_rowskip::@return
    // }
    // [297] return 
    rts
}
  // cscroll
// Scroll the entire screen if the cursor is beyond the last line
cscroll: {
    // if(conio_cursor_y[conio_screen_layer]>=CONIO_HEIGHT)
    // [298] if(conio_cursor_y[conio_screen_layer]<conio_screen_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vbuz2_then_la1 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    cmp.z conio_screen_height
    bcc __b3
    // cscroll::@1
    // if(conio_scroll_enable[conio_screen_layer])
    // [299] if(0!=conio_scroll_enable[conio_screen_layer]) goto cscroll::@4 -- 0_neq_pbuc1_derefidx_vbuz1_then_la1 
    lda conio_scroll_enable,y
    cmp #0
    bne __b4
    // cscroll::@2
    // if(conio_cursor_y[conio_screen_layer]>=conio_height)
    // [300] if(conio_cursor_y[conio_screen_layer]<conio_height) goto cscroll::@return -- pbuc1_derefidx_vbuz1_lt_vwuz2_then_la1 
    lda conio_cursor_y,y
    ldy.z conio_height+1
    bne __b3
    cmp.z conio_height
    // [301] phi from cscroll::@2 to cscroll::@3 [phi:cscroll::@2->cscroll::@3]
    // cscroll::@3
  __b3:
    // cscroll::@return
    // }
    // [302] return 
    rts
    // [303] phi from cscroll::@1 to cscroll::@4 [phi:cscroll::@1->cscroll::@4]
    // cscroll::@4
  __b4:
    // insertup()
    // [304] call insertup
    jsr insertup
    // cscroll::@5
    // gotoxy( 0, CONIO_HEIGHT-1)
    // [305] gotoxy::y#2 = conio_screen_height - 1 -- vbuxx=vbuz1_minus_1 
    ldx.z conio_screen_height
    dex
    // [306] call gotoxy
    // [147] phi from cscroll::@5 to gotoxy [phi:cscroll::@5->gotoxy]
    // [147] phi gotoxy::y#3 = gotoxy::y#2 [phi:cscroll::@5->gotoxy#0] -- register_copy 
    jsr gotoxy
    rts
}
  // vera_layer_get_backcolor
// Get the back color for text output. The old back text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// __register(A) char vera_layer_get_backcolor(__register(Y) char layer)
vera_layer_get_backcolor: {
    // return vera_layer_backcolor[layer];
    // [307] vera_layer_get_backcolor::return#0 = vera_layer_backcolor[vera_layer_get_backcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuyy 
    lda vera_layer_backcolor,y
    // vera_layer_get_backcolor::@return
    // }
    // [308] return 
    rts
}
  // vera_layer_get_textcolor
// Get the front color for text output. The old front text color setting is returned.
// - layer: Value of 0 or 1.
// - return: a 4 bit value ( decimal between 0 and 15).
//   This will only work when the VERA is in 16 color mode!
//   Note that on the VERA, the transparent color has value 0.
// __register(A) char vera_layer_get_textcolor(__register(Y) char layer)
vera_layer_get_textcolor: {
    // return vera_layer_textcolor[layer];
    // [309] vera_layer_get_textcolor::return#0 = vera_layer_textcolor[vera_layer_get_textcolor::layer#0] -- vbuaa=pbuc1_derefidx_vbuyy 
    lda vera_layer_textcolor,y
    // vera_layer_get_textcolor::@return
    // }
    // [310] return 
    rts
}
  // setnam
// Kernal SETNAM function
// SETNAM. Set file name parameters.
// void setnam(__zp($30) char * volatile filename)
setnam: {
    .label filename = $30
    .label filename_len = $2b
    .label __0 = 2
    // strlen(filename)
    // [311] strlen::str#0 = setnam::filename -- pbuz1=pbuz2 
    lda.z filename
    sta.z strlen.str
    lda.z filename+1
    sta.z strlen.str+1
    // [312] call strlen
    // [344] phi from setnam to strlen [phi:setnam->strlen]
    jsr strlen
    // strlen(filename)
    // [313] strlen::return#0 = strlen::len#2
    // setnam::@1
    // [314] setnam::$0 = strlen::return#0
    // char filename_len = (char)strlen(filename)
    // [315] setnam::filename_len = (char)setnam::$0 -- vbuz1=_byte_vwuz2 
    lda.z __0
    sta.z filename_len
    // asm
    // asm { ldafilename_len ldxfilename ldyfilename+1 jsr$ffbd  }
    ldx filename
    ldy filename+1
    jsr $ffbd
    // setnam::@return
    // }
    // [317] return 
    rts
}
  // setlfs
// SETLFS. Set file parameters.
// void setlfs(__zp($32) volatile char device)
setlfs: {
    .label device = $32
    // asm
    // asm { ldxdevice lda#1 ldy#0 jsr$ffba  }
    ldx device
    lda #1
    ldy #0
    jsr $ffba
    // setlfs::@return
    // }
    // [319] return 
    rts
}
  // load
// LOAD. Load or verify file. (Must call SETLFS and SETNAM beforehands.)
// - verify: 0 = Load, 1-255 = Verify
//
// Returns a status, 0xff: Success other: Kernal Error Code
// char load(__zp($3d) char * volatile address, __zp($3c) volatile char verify)
load: {
    .label address = $3d
    .label verify = $3c
    .label status = $2c
    // char status
    // [320] load::status = 0 -- vbuz1=vbuc1 
    lda #0
    sta.z status
    // asm
    // asm { ldxaddress ldyaddress+1 ldaverify jsr$ffd5 bcserror lda#$ff error: stastatus  }
    ldx address
    ldy address+1
    lda verify
    jsr $ffd5
    bcs error
    lda #$ff
  error:
    sta status
    // load::@return
    // }
    // [322] return 
    rts
}
  // vera_layer_set_config
// Set the configuration of the layer.
// - layer: Value of 0 or 1.
// - config: Specifies the modes which are specified using T256C / 'Bitmap Mode' / 'Color Depth'.
// void vera_layer_set_config(char layer, char config)
vera_layer_set_config: {
    .label addr = $1e
    // byte* addr = vera_layer_config[layer]
    // [323] vera_layer_set_config::addr#0 = *(vera_layer_config+vera_layer_mode_text::layer#0*SIZEOF_POINTER) -- pbuz1=_deref_qbuc1 
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER
    sta.z addr
    lda vera_layer_config+vera_layer_mode_text.layer*SIZEOF_POINTER+1
    sta.z addr+1
    // *addr = config
    // [324] *vera_layer_set_config::addr#0 = vera_layer_mode_tile::config#10 -- _deref_pbuz1=vbuc1 
    lda #vera_layer_mode_tile.config
    ldy #0
    sta (addr),y
    // vera_layer_set_config::@return
    // }
    // [325] return 
    rts
}
  // vera_layer_set_tilebase
// Set the base of the tiles for the layer with which the conio will interact.
// - layer: Value of 0 or 1.
// - tilebase: Specifies the base address of the tile map.
//   Note that the register only specifies bits 16:11 of the address,
//   so the resulting address in the VERA VRAM is always aligned to a multiple of 2048 bytes!
// void vera_layer_set_tilebase(char layer, char tilebase)
vera_layer_set_tilebase: {
    .label addr = $1a
    // byte* addr = vera_layer_tilebase[layer]
    // [326] vera_layer_set_tilebase::addr#0 = *(vera_layer_tilebase+vera_layer_mode_text::layer#0*SIZEOF_POINTER) -- pbuz1=_deref_qbuc1 
    lda vera_layer_tilebase+vera_layer_mode_text.layer*SIZEOF_POINTER
    sta.z addr
    lda vera_layer_tilebase+vera_layer_mode_text.layer*SIZEOF_POINTER+1
    sta.z addr+1
    // *addr = tilebase
    // [327] *vera_layer_set_tilebase::addr#0 = byte1 vera_layer_mode_tile::tilebase_address#0&VERA_LAYER_TILEBASE_MASK -- _deref_pbuz1=vbuc1 
    lda #(>vera_layer_mode_tile.tilebase_address)&VERA_LAYER_TILEBASE_MASK
    ldy #0
    sta (addr),y
    // vera_layer_set_tilebase::@return
    // }
    // [328] return 
    rts
}
  // insertup
// Insert a new line, and scroll the upper part of the screen up.
insertup: {
    .label cy = $f
    .label width = $e
    .label line = 8
    .label start = 8
    // unsigned byte cy = conio_cursor_y[conio_screen_layer]
    // [329] insertup::cy#0 = conio_cursor_y[conio_screen_layer] -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z conio_screen_layer
    lda conio_cursor_y,y
    sta.z cy
    // unsigned byte width = CONIO_WIDTH * 2
    // [330] insertup::width#0 = conio_screen_width << 1 -- vbuz1=vbuz2_rol_1 
    lda.z conio_screen_width
    asl
    sta.z width
    // [331] phi from insertup to insertup::@1 [phi:insertup->insertup::@1]
    // [331] phi insertup::i#2 = 1 [phi:insertup->insertup::@1#0] -- vbuxx=vbuc1 
    ldx #1
    // insertup::@1
  __b1:
    // for(unsigned byte i=1; i<=cy; i++)
    // [332] if(insertup::i#2<=insertup::cy#0) goto insertup::@2 -- vbuxx_le_vbuz1_then_la1 
    lda.z cy
    stx.z $ff
    cmp.z $ff
    bcs __b2
    // [333] phi from insertup::@1 to insertup::@3 [phi:insertup::@1->insertup::@3]
    // insertup::@3
    // clearline()
    // [334] call clearline
    jsr clearline
    // insertup::@return
    // }
    // [335] return 
    rts
    // insertup::@2
  __b2:
    // i-1
    // [336] insertup::$3 = insertup::i#2 - 1 -- vbuaa=vbuxx_minus_1 
    txa
    sec
    sbc #1
    // unsigned int line = (i-1) << conio_rowshift
    // [337] insertup::line#0 = insertup::$3 << conio_rowshift -- vwuz1=vbuaa_rol_vbuz2 
    ldy.z conio_rowshift
    sta.z line
    lda #0
    sta.z line+1
    cpy #0
    beq !e+
  !:
    asl.z line
    rol.z line+1
    dey
    bne !-
  !e:
    // unsigned char* start = CONIO_SCREEN_TEXT + line
    // [338] insertup::start#0 = CONIO_SCREEN_TEXT#11 + insertup::line#0 -- pbuz1=pbuz2_plus_vwuz1 
    clc
    lda.z start
    adc.z CONIO_SCREEN_TEXT
    sta.z start
    lda.z start+1
    adc.z CONIO_SCREEN_TEXT+1
    sta.z start+1
    // start+conio_rowskip
    // [339] memcpy_in_vram::src#0 = insertup::start#0 + conio_rowskip -- pbuz1=pbuz2_plus_vwuz3 
    lda.z start
    clc
    adc.z conio_rowskip
    sta.z memcpy_in_vram.src
    lda.z start+1
    adc.z conio_rowskip+1
    sta.z memcpy_in_vram.src+1
    // memcpy_in_vram(0, start, VERA_INC_1,  0, start+conio_rowskip, VERA_INC_1, width)
    // [340] memcpy_in_vram::dest#0 = (void *)insertup::start#0
    // [341] memcpy_in_vram::num#0 = insertup::width#0 -- vwuz1=vbuz2 
    lda.z width
    sta.z memcpy_in_vram.num
    lda #0
    sta.z memcpy_in_vram.num+1
    // [342] call memcpy_in_vram
    jsr memcpy_in_vram
    // insertup::@4
    // for(unsigned byte i=1; i<=cy; i++)
    // [343] insertup::i#1 = ++ insertup::i#2 -- vbuxx=_inc_vbuxx 
    inx
    // [331] phi from insertup::@4 to insertup::@1 [phi:insertup::@4->insertup::@1]
    // [331] phi insertup::i#2 = insertup::i#1 [phi:insertup::@4->insertup::@1#0] -- register_copy 
    jmp __b1
}
  // strlen
// Computes the length of the string str up to but not including the terminating null character.
// __zp(2) unsigned int strlen(__zp(6) char *str)
strlen: {
    .label str = 6
    .label return = 2
    .label len = 2
    // [345] phi from strlen to strlen::@1 [phi:strlen->strlen::@1]
    // [345] phi strlen::len#2 = 0 [phi:strlen->strlen::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z len
    sta.z len+1
    // [345] phi strlen::str#2 = strlen::str#0 [phi:strlen->strlen::@1#1] -- register_copy 
    // strlen::@1
  __b1:
    // while(*str)
    // [346] if(0!=*strlen::str#2) goto strlen::@2 -- 0_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // strlen::@return
    // }
    // [347] return 
    rts
    // strlen::@2
  __b2:
    // len++;
    // [348] strlen::len#1 = ++ strlen::len#2 -- vwuz1=_inc_vwuz1 
    inc.z len
    bne !+
    inc.z len+1
  !:
    // str++;
    // [349] strlen::str#1 = ++ strlen::str#2 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    // [345] phi from strlen::@2 to strlen::@1 [phi:strlen::@2->strlen::@1]
    // [345] phi strlen::len#2 = strlen::len#1 [phi:strlen::@2->strlen::@1#0] -- register_copy 
    // [345] phi strlen::str#2 = strlen::str#1 [phi:strlen::@2->strlen::@1#1] -- register_copy 
    jmp __b1
}
  // clearline
clearline: {
    .label addr = $c
    .label c = 6
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [350] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // byte* addr = CONIO_SCREEN_TEXT + conio_line_text[conio_screen_layer]
    // [351] clearline::$5 = conio_screen_layer << 1 -- vbuaa=vbuz1_rol_1 
    lda.z conio_screen_layer
    asl
    // [352] clearline::addr#0 = CONIO_SCREEN_TEXT#11 + conio_line_text[clearline::$5] -- pbuz1=pbuz2_plus_pwuc1_derefidx_vbuaa 
    // Set address
    tay
    clc
    lda.z CONIO_SCREEN_TEXT
    adc conio_line_text,y
    sta.z addr
    lda.z CONIO_SCREEN_TEXT+1
    adc conio_line_text+1,y
    sta.z addr+1
    // BYTE0(addr)
    // [353] clearline::$1 = byte0  clearline::addr#0 -- vbuaa=_byte0_pbuz1 
    lda.z addr
    // *VERA_ADDRX_L = BYTE0(addr)
    // [354] *VERA_ADDRX_L = clearline::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_L
    // BYTE1(addr)
    // [355] clearline::$2 = byte1  clearline::addr#0 -- vbuaa=_byte1_pbuz1 
    lda.z addr+1
    // *VERA_ADDRX_M = BYTE1(addr)
    // [356] *VERA_ADDRX_M = clearline::$2 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // *VERA_ADDRX_H = VERA_INC_1
    // [357] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // char color = vera_layer_get_color( conio_screen_layer)
    // [358] vera_layer_get_color::layer#1 = conio_screen_layer -- vbuxx=vbuz1 
    ldx.z conio_screen_layer
    // [359] call vera_layer_get_color
    // [160] phi from clearline to vera_layer_get_color [phi:clearline->vera_layer_get_color]
    // [160] phi vera_layer_get_color::layer#2 = vera_layer_get_color::layer#1 [phi:clearline->vera_layer_get_color#0] -- register_copy 
    jsr vera_layer_get_color
    // char color = vera_layer_get_color( conio_screen_layer)
    // [360] vera_layer_get_color::return#4 = vera_layer_get_color::return#2
    // clearline::@4
    // [361] clearline::color#0 = vera_layer_get_color::return#4 -- vbuxx=vbuaa 
    tax
    // [362] phi from clearline::@4 to clearline::@1 [phi:clearline::@4->clearline::@1]
    // [362] phi clearline::c#2 = 0 [phi:clearline::@4->clearline::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z c
    sta.z c+1
    // clearline::@1
  __b1:
    // for( unsigned int c=0;c<CONIO_WIDTH; c++ )
    // [363] if(clearline::c#2<conio_screen_width) goto clearline::@2 -- vwuz1_lt_vbuz2_then_la1 
    lda.z c+1
    bne !+
    lda.z c
    cmp.z conio_screen_width
    bcc __b2
  !:
    // clearline::@3
    // conio_cursor_x[conio_screen_layer] = 0
    // [364] conio_cursor_x[conio_screen_layer] = 0 -- pbuc1_derefidx_vbuz1=vbuc2 
    lda #0
    ldy.z conio_screen_layer
    sta conio_cursor_x,y
    // clearline::@return
    // }
    // [365] return 
    rts
    // clearline::@2
  __b2:
    // *VERA_DATA0 = ' '
    // [366] *VERA_DATA0 = ' ' -- _deref_pbuc1=vbuc2 
    // Set data
    lda #' '
    sta VERA_DATA0
    // *VERA_DATA0 = color
    // [367] *VERA_DATA0 = clearline::color#0 -- _deref_pbuc1=vbuxx 
    stx VERA_DATA0
    // for( unsigned int c=0;c<CONIO_WIDTH; c++ )
    // [368] clearline::c#1 = ++ clearline::c#2 -- vwuz1=_inc_vwuz1 
    inc.z c
    bne !+
    inc.z c+1
  !:
    // [362] phi from clearline::@2 to clearline::@1 [phi:clearline::@2->clearline::@1]
    // [362] phi clearline::c#2 = clearline::c#1 [phi:clearline::@2->clearline::@1#0] -- register_copy 
    jmp __b1
}
  // memcpy_in_vram
// Copy block of memory (from VRAM to VRAM)
// Copies the values from the location pointed by src to the location pointed by dest.
// The method uses the VERA access ports 0 and 1 to copy data from and to in VRAM.
// - src_bank:  64K VRAM bank number to copy from (0/1).
// - src: pointer to the location to copy from. Note that the address is a 16 bit value!
// - src_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - dest_bank:  64K VRAM bank number to copy to (0/1).
// - dest: pointer to the location to copy to. Note that the address is a 16 bit value!
// - dest_increment: the increment indicator, VERA needs this because addressing increment is automated by VERA at each access.
// - num: The number of bytes to copy
// void memcpy_in_vram(char dest_bank, __zp(8) void *dest, char dest_increment, char src_bank, __zp($c) char *src, char src_increment, __zp(4) unsigned int num)
memcpy_in_vram: {
    .label i = 2
    .label dest = 8
    .label src = $c
    .label num = 4
    // *VERA_CTRL &= ~VERA_ADDRSEL
    // [369] *VERA_CTRL = *VERA_CTRL & ~VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_band_vbuc2 
    // Select DATA0
    lda #VERA_ADDRSEL^$ff
    and VERA_CTRL
    sta VERA_CTRL
    // BYTE0(src)
    // [370] memcpy_in_vram::$0 = byte0  (void *)memcpy_in_vram::src#0 -- vbuaa=_byte0_pvoz1 
    lda.z src
    // *VERA_ADDRX_L = BYTE0(src)
    // [371] *VERA_ADDRX_L = memcpy_in_vram::$0 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(src)
    // [372] memcpy_in_vram::$1 = byte1  (void *)memcpy_in_vram::src#0 -- vbuaa=_byte1_pvoz1 
    lda.z src+1
    // *VERA_ADDRX_M = BYTE1(src)
    // [373] *VERA_ADDRX_M = memcpy_in_vram::$1 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // *VERA_ADDRX_H = src_increment | src_bank
    // [374] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // *VERA_CTRL |= VERA_ADDRSEL
    // [375] *VERA_CTRL = *VERA_CTRL | VERA_ADDRSEL -- _deref_pbuc1=_deref_pbuc1_bor_vbuc2 
    // Select DATA1
    lda #VERA_ADDRSEL
    ora VERA_CTRL
    sta VERA_CTRL
    // BYTE0(dest)
    // [376] memcpy_in_vram::$3 = byte0  memcpy_in_vram::dest#0 -- vbuaa=_byte0_pvoz1 
    lda.z dest
    // *VERA_ADDRX_L = BYTE0(dest)
    // [377] *VERA_ADDRX_L = memcpy_in_vram::$3 -- _deref_pbuc1=vbuaa 
    // Set address
    sta VERA_ADDRX_L
    // BYTE1(dest)
    // [378] memcpy_in_vram::$4 = byte1  memcpy_in_vram::dest#0 -- vbuaa=_byte1_pvoz1 
    lda.z dest+1
    // *VERA_ADDRX_M = BYTE1(dest)
    // [379] *VERA_ADDRX_M = memcpy_in_vram::$4 -- _deref_pbuc1=vbuaa 
    sta VERA_ADDRX_M
    // *VERA_ADDRX_H = dest_increment | dest_bank
    // [380] *VERA_ADDRX_H = VERA_INC_1 -- _deref_pbuc1=vbuc2 
    lda #VERA_INC_1
    sta VERA_ADDRX_H
    // [381] phi from memcpy_in_vram to memcpy_in_vram::@1 [phi:memcpy_in_vram->memcpy_in_vram::@1]
    // [381] phi memcpy_in_vram::i#2 = 0 [phi:memcpy_in_vram->memcpy_in_vram::@1#0] -- vwuz1=vwuc1 
    lda #<0
    sta.z i
    sta.z i+1
  // Transfer the data
    // memcpy_in_vram::@1
  __b1:
    // for(unsigned int i=0; i<num; i++)
    // [382] if(memcpy_in_vram::i#2<memcpy_in_vram::num#0) goto memcpy_in_vram::@2 -- vwuz1_lt_vwuz2_then_la1 
    lda.z i+1
    cmp.z num+1
    bcc __b2
    bne !+
    lda.z i
    cmp.z num
    bcc __b2
  !:
    // memcpy_in_vram::@return
    // }
    // [383] return 
    rts
    // memcpy_in_vram::@2
  __b2:
    // *VERA_DATA1 = *VERA_DATA0
    // [384] *VERA_DATA1 = *VERA_DATA0 -- _deref_pbuc1=_deref_pbuc2 
    lda VERA_DATA0
    sta VERA_DATA1
    // for(unsigned int i=0; i<num; i++)
    // [385] memcpy_in_vram::i#1 = ++ memcpy_in_vram::i#2 -- vwuz1=_inc_vwuz1 
    inc.z i
    bne !+
    inc.z i+1
  !:
    // [381] phi from memcpy_in_vram::@2 to memcpy_in_vram::@1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1]
    // [381] phi memcpy_in_vram::i#2 = memcpy_in_vram::i#1 [phi:memcpy_in_vram::@2->memcpy_in_vram::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
.segment Data
  VERA_LAYER_WIDTH: .word $20, $40, $80, $100
  VERA_LAYER_HEIGHT: .word $20, $40, $80, $100
  /// --- VERA function encapsulation ---
  vera_mapbase_offset: .word 0, 0
  vera_mapbase_bank: .byte 0, 0
  vera_mapbase_address: .dword 0, 0
  vera_tilebase_offset: .word 0, 0
  vera_tilebase_bank: .byte 0, 0
  vera_tilebase_address: .dword 0, 0
  vera_layer_rowshift: .byte 0, 0
  vera_layer_rowskip: .word 0, 0
  vera_layer_config: .word VERA_L0_CONFIG, VERA_L1_CONFIG
  vera_layer_mapbase: .word VERA_L0_MAPBASE, VERA_L1_MAPBASE
  vera_layer_tilebase: .word VERA_L0_TILEBASE, VERA_L1_TILEBASE
  vera_layer_textcolor: .byte WHITE, WHITE
  vera_layer_backcolor: .byte BLUE, BLUE
  // The number of bytes on the screen
  // The current cursor x-position
  conio_cursor_x: .byte 0, 0
  // The current cursor y-position
  conio_cursor_y: .byte 0, 0
  // The current text cursor line start
  conio_line_text: .word 0, 0
  // Is scrolling enabled when outputting beyond the end of the screen (1: yes, 0: no).
  // If disabled the cursor just moves back to (0,0) instead
  conio_scroll_enable: .byte 1, 1
.segment Sprite
SPRITE_PIXELS:
.var pic = LoadPicture("ship.png")
    // palette: rgb->idx
    .var palette = Hashtable()
    // RGB value for each palette index
    .var palList = List()
    // Next palette index
    .var nxt_idx = 0;
    // Extract palette while outputting pixels as palete index values
    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x++) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx = palette.get(rgb)
            .if(idx==null) {
                .eval idx = nxt_idx++;
                .eval palette.put(rgb,idx);
                .eval palList.add(rgb)
            }
        }
    }
    .if(nxt_idx>16) .error "Image has too many colours "+nxt_idx

    .for(var i=0;i<16;i++) {
        .var rgb = palList.get(i)
        .var red = floor(rgb / [256*256])
        .var green = floor(rgb/256) & 255
        .var blue = rgb & 255
        // bits 4-8: green, bits 0-3 blue
        .byte green&$f0  | blue/16
        // bits bits 0-3 red
        .byte red/16
    }

    .for (var y=0; y<64; y++) {
        .for (var x=0;x<64; x+=2) {
            // Find palette index (add if not known)
            .var rgb = pic.getPixel(x,y);
            .var idx1 = palette.get(rgb)
            .if(idx1==null) {
                .printnow "unknown rgb value!"
            }
            // Find palette index (add if not known)
            .eval rgb = pic.getPixel(x+1,y);
            .var idx2 = palette.get(rgb)
            .if(idx2==null) {
                .printnow "unknown rgb value!"
            }
            .byte idx1*16+idx2;
        }
    }

.segment Data
  __0: .word (main.VRAM_SPRITE/$20&$ffff)|VERA_SPRITE_8BPP, $140-$20, $f0-$20
  .byte $c, $f1

