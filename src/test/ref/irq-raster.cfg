@begin: scope:[]  from
  [0] phi()
  to:@2
@2: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @2
  [3] phi()
main: scope:[main]  from @2
  asm { sei  }
  [5] *((const byte*) CIA1_INTERRUPT#0) ← (const byte) CIA_INTERRUPT_CLEAR#0
  [6] *((const byte*) VIC_CONTROL#0) ← *((const byte*) VIC_CONTROL#0) | (byte/word/signed word/dword/signed dword) 128
  [7] *((const byte*) RASTER#0) ← (byte/signed byte/word/signed word/dword/signed dword) 0
  [8] *((const byte*) IRQ_ENABLE#0) ← (const byte) IRQ_RASTER#0
  [9] *((const void()**) KERNEL_IRQ#0) ← &interrupt(KERNEL_MIN)(void()) irq()
  asm { cli  }
  to:main::@return
main::@return: scope:[main]  from main
  [11] return 
  to:@return
irq: scope:[irq]  from
  [12] *((const byte*) BGCOL#0) ← (const byte) WHITE#0
  [13] *((const byte*) BGCOL#0) ← (const byte) BLACK#0
  [14] *((const byte*) IRQ_STATUS#0) ← (const byte) IRQ_RASTER#0
  to:irq::@return
irq::@return: scope:[irq]  from irq
  [15] return 
  to:@return
