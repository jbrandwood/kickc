@begin: scope:[]  from
  to:@1
@1: scope:[]  from @begin
  [0] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @1
main: scope:[main]  from @1
  asm { sei }
  [2] *((const byte*) PROCPORT#0) ← (byte) 50 [ ] ( main:0 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@5
  [3] (byte*) main::charset4#10 ← phi( main/(const byte*) CHARSET4#0 main::@5/(byte*) main::charset4#1 ) [ main::chargen#10 main::charset4#10 ] ( main:0 [ main::chargen#10 main::charset4#10 ] )
  [3] (byte*) main::chargen#10 ← phi( main/(const byte*) CHARGEN#0 main::@5/(byte*) main::chargen#1 ) [ main::chargen#10 main::charset4#10 ] ( main:0 [ main::chargen#10 main::charset4#10 ] )
  [4] (byte*) main::chargen1#0 ← (byte*) main::chargen#10 + (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 ] )
  [5] (byte~) main::$1 ← *((byte*) main::chargen#10) & (byte) 96 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$1 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$1 ] )
  [6] (byte~) main::$2 ← *((byte*) main::chargen1#0) & (byte) 96 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$1 main::$2 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$1 main::$2 ] )
  [7] (byte~) main::$3 ← (byte~) main::$2 >> (byte) 2 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$1 main::$3 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$1 main::$3 ] )
  [8] (byte~) main::$4 ← (byte~) main::$1 | (byte~) main::$3 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$4 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$4 ] )
  [9] (byte~) main::$5 ← (byte~) main::$4 >> (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$5 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$5 ] )
  [10] (byte~) main::$6 ← (byte~) main::$5 >> (byte) 2 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$6 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::$6 ] )
  [11] (byte) main::bits#0 ← (const byte[]) bits_count#0 *idx (byte~) main::$6 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits#0 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits#0 ] )
  [12] if((byte) main::bits#0<(byte) 2) goto main::@2 [ main::chargen#10 main::charset4#10 main::chargen1#0 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 ] )
  to:main::@7
main::@7: scope:[main]  from main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@7
  [13] (byte) main::bits_gen#9 ← phi( main::@1/(byte) 0 main::@7/(byte) 0+(byte) 1 ) [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#9 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#9 ] )
  [14] (byte) main::bits_gen#1 ← (byte) main::bits_gen#9 << (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 ] )
  [15] (byte~) main::$12 ← *((byte*) main::chargen#10) & (byte) 24 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$12 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$12 ] )
  [16] (byte~) main::$13 ← *((byte*) main::chargen1#0) & (byte) 24 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$12 main::$13 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$12 main::$13 ] )
  [17] (byte~) main::$14 ← (byte~) main::$13 >> (byte) 2 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$12 main::$14 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$12 main::$14 ] )
  [18] (byte~) main::$15 ← (byte~) main::$12 | (byte~) main::$14 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$15 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$15 ] )
  [19] (byte~) main::$16 ← (byte~) main::$15 >> (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$16 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::$16 ] )
  [20] (byte) main::bits#1 ← (const byte[]) bits_count#0 *idx (byte~) main::$16 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::bits#1 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 main::bits#1 ] )
  [21] if((byte) main::bits#1<(byte) 2) goto main::@3 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#1 ] )
  to:main::@8
main::@8: scope:[main]  from main::@2
  [22] (byte) main::bits_gen#4 ← (byte) main::bits_gen#1 + (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#4 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#4 ] )
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@8
  [23] (byte) main::bits_gen#11 ← phi( main::@2/(byte) main::bits_gen#1 main::@8/(byte) main::bits_gen#4 ) [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#11 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#11 ] )
  [24] (byte) main::bits_gen#14 ← (byte) main::bits_gen#11 << (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 ] )
  [25] (byte~) main::$22 ← *((byte*) main::chargen#10) & (byte) 6 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$22 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$22 ] )
  [26] (byte~) main::$23 ← (byte~) main::$22 << (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$23 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$23 ] )
  [27] (byte~) main::$24 ← *((byte*) main::chargen1#0) & (byte) 6 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$23 main::$24 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$23 main::$24 ] )
  [28] (byte~) main::$25 ← (byte~) main::$24 >> (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$23 main::$25 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$23 main::$25 ] )
  [29] (byte~) main::$26 ← (byte~) main::$23 | (byte~) main::$25 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$26 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::$26 ] )
  [30] (byte) main::bits#2 ← (const byte[]) bits_count#0 *idx (byte~) main::$26 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::bits#2 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 main::bits#2 ] )
  [31] if((byte) main::bits#2<(byte) 2) goto main::@4 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#14 ] )
  to:main::@9
main::@9: scope:[main]  from main::@3
  [32] (byte) main::bits_gen#6 ← (byte) main::bits_gen#14 + (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#6 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#6 ] )
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@9
  [33] (byte) main::bits_gen#13 ← phi( main::@3/(byte) main::bits_gen#14 main::@9/(byte) main::bits_gen#6 ) [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#13 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#13 ] )
  [34] (byte) main::bits_gen#16 ← (byte) main::bits_gen#13 << (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#16 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#16 ] )
  [35] (byte~) main::$32 ← *((byte*) main::chargen#10) & (byte) 1 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#16 main::$32 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#16 main::$32 ] )
  [36] (byte~) main::$33 ← (byte~) main::$32 << (byte) 2 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#16 main::$33 ] ( main:0 [ main::chargen#10 main::charset4#10 main::chargen1#0 main::bits_gen#16 main::$33 ] )
  [37] (byte~) main::$34 ← *((byte*) main::chargen1#0) & (byte) 1 [ main::chargen#10 main::charset4#10 main::bits_gen#16 main::$33 main::$34 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#16 main::$33 main::$34 ] )
  [38] (byte~) main::$35 ← (byte~) main::$33 | (byte~) main::$34 [ main::chargen#10 main::charset4#10 main::bits_gen#16 main::$35 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#16 main::$35 ] )
  [39] (byte) main::bits#3 ← (const byte[]) bits_count#0 *idx (byte~) main::$35 [ main::chargen#10 main::charset4#10 main::bits_gen#16 main::bits#3 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#16 main::bits#3 ] )
  [40] if((byte) main::bits#3<(byte) 2) goto main::@5 [ main::chargen#10 main::charset4#10 main::bits_gen#16 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#16 ] )
  to:main::@10
main::@10: scope:[main]  from main::@4
  [41] (byte) main::bits_gen#8 ← (byte) main::bits_gen#16 + (byte) 1 [ main::chargen#10 main::charset4#10 main::bits_gen#8 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#8 ] )
  to:main::@5
main::@5: scope:[main]  from main::@10 main::@4
  [42] (byte) main::bits_gen#15 ← phi( main::@10/(byte) main::bits_gen#8 main::@4/(byte) main::bits_gen#16 ) [ main::chargen#10 main::charset4#10 main::bits_gen#15 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#15 ] )
  [43] (byte) main::bits_gen#7 ← (byte) main::bits_gen#15 << (byte) 1 [ main::chargen#10 main::charset4#10 main::bits_gen#7 ] ( main:0 [ main::chargen#10 main::charset4#10 main::bits_gen#7 ] )
  [44] *((byte*) main::charset4#10) ← (byte) main::bits_gen#7 [ main::chargen#10 main::charset4#10 ] ( main:0 [ main::chargen#10 main::charset4#10 ] )
  [45] (byte*) main::charset4#1 ← ++ (byte*) main::charset4#10 [ main::chargen#10 main::charset4#1 ] ( main:0 [ main::chargen#10 main::charset4#1 ] )
  [46] (byte*) main::chargen#1 ← (byte*) main::chargen#10 + (byte) 2 [ main::chargen#1 main::charset4#1 ] ( main:0 [ main::chargen#1 main::charset4#1 ] )
  [47] if((byte*) main::chargen#1<(const byte*) CHARGEN#0+(word) 2048) goto main::@1 [ main::chargen#1 main::charset4#1 ] ( main:0 [ main::chargen#1 main::charset4#1 ] )
  to:main::@11
main::@11: scope:[main]  from main::@5
  [48] *((const byte*) PROCPORT#0) ← (byte) 55 [ ] ( main:0 [ ] )
  asm { cli }
  to:main::@6
main::@6: scope:[main]  from main::@11 main::@6
  [50] (byte) main::i#2 ← phi( main::@11/(byte) 0 main::@6/(byte) main::i#1 ) [ main::i#2 ] ( main:0 [ main::i#2 ] )
  [51] *((const byte*) SCREEN#0 + (byte) main::i#2) ← (byte) main::i#2 [ main::i#2 ] ( main:0 [ main::i#2 ] )
  [52] (byte) main::i#1 ← ++ (byte) main::i#2 [ main::i#1 ] ( main:0 [ main::i#1 ] )
  [53] if((byte) main::i#1!=(byte) 0) goto main::@6 [ main::i#1 ] ( main:0 [ main::i#1 ] )
  to:main::@12
main::@12: scope:[main]  from main::@6
  [54] *((const byte*) D018#0) ← (byte) 25 [ ] ( main:0 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@12
  [55] return  [ ] ( main:0 [ ] )
  to:@return
