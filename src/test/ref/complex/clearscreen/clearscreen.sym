(label) @1
(label) @2
(label) @3
(label) @4
(label) @begin
(label) @end
(const byte) BORDER_XPOS_LEFT BORDER_XPOS_LEFT = (byte) $18
(const word) BORDER_XPOS_RIGHT BORDER_XPOS_RIGHT = (word) $158
(const byte) BORDER_YPOS_BOTTOM BORDER_YPOS_BOTTOM = (byte) $fa
(const byte) BORDER_YPOS_TOP BORDER_YPOS_TOP = (byte) $32
(const byte*) CHARGEN CHARGEN = (byte*) 53248
(const byte*) CIA1_INTERRUPT CIA1_INTERRUPT = (byte*) 56333
(const byte) CIA_INTERRUPT_CLEAR CIA_INTERRUPT_CLEAR = (byte) $7f
(const byte*) COLS COLS = (byte*) 55296
(const word[CORDIC_ITERATIONS_16]) CORDIC_ATAN2_ANGLES_16 CORDIC_ATAN2_ANGLES_16 = kickasm {{ .for (var i=0; i<CORDIC_ITERATIONS_16; i++)
        .word 256*2*256*atan(1/pow(2,i))/PI/2
 }}
(const byte) CORDIC_ITERATIONS_16 CORDIC_ITERATIONS_16 = (byte) $f
(const void()**) HARDWARE_IRQ HARDWARE_IRQ = (void()**) 65534
(byte*) HEAP_TOP
(const byte*) HEAP_TOP#0 HEAP_TOP = (byte*) 40960
(const byte*) IRQ_ENABLE IRQ_ENABLE = (byte*) 53274
(const byte) IRQ_RASTER IRQ_RASTER = (byte) 1
(const byte*) IRQ_STATUS IRQ_STATUS = (byte*) 53273
(const byte) LIGHT_BLUE LIGHT_BLUE = (byte) $e
(const byte) NOT_FOUND NOT_FOUND = (byte) $ff
(const byte) NUM_PROCESSING NUM_PROCESSING = (byte) 8
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_COL OFFSET_STRUCT_PROCESSINGSPRITE_COL = (byte) $a
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_ID OFFSET_STRUCT_PROCESSINGSPRITE_ID = (byte) 8
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_PTR OFFSET_STRUCT_PROCESSINGSPRITE_PTR = (byte) 9
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_SCREENPTR OFFSET_STRUCT_PROCESSINGSPRITE_SCREENPTR = (byte) $c
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_STATUS OFFSET_STRUCT_PROCESSINGSPRITE_STATUS = (byte) $b
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VX OFFSET_STRUCT_PROCESSINGSPRITE_VX = (byte) 4
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_VY OFFSET_STRUCT_PROCESSINGSPRITE_VY = (byte) 6
(const byte) OFFSET_STRUCT_PROCESSINGSPRITE_Y OFFSET_STRUCT_PROCESSINGSPRITE_Y = (byte) 2
(const struct ProcessingSprite[NUM_PROCESSING]) PROCESSING PROCESSING = { fill( NUM_PROCESSING, 0) }
(const byte*) PROCPORT PROCPORT = (byte*) 1
(const byte*) PROCPORT_DDR PROCPORT_DDR = (byte*) 0
(const byte) PROCPORT_DDR_MEMORY_MASK PROCPORT_DDR_MEMORY_MASK = (byte) 7
(const byte) PROCPORT_RAM_CHARROM PROCPORT_RAM_CHARROM = (byte) 1
(const byte) PROCPORT_RAM_IO PROCPORT_RAM_IO = (byte) 5
(byte) ProcessingChar::dist
(byte) ProcessingChar::x
(byte) ProcessingChar::y
(byte) ProcessingSprite::col
(byte) ProcessingSprite::id
(byte) ProcessingSprite::ptr
(byte*) ProcessingSprite::screenPtr
(byte) ProcessingSprite::status
(word) ProcessingSprite::vx
(word) ProcessingSprite::vy
(word) ProcessingSprite::x
(word) ProcessingSprite::y
(const byte) RADIX::BINARY BINARY = (number) 2
(const byte) RADIX::DECIMAL DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL OCTAL = (number) 8
(const byte*) RASTER RASTER = (byte*) 53266
(const byte) RASTER_IRQ_MIDDLE RASTER_IRQ_MIDDLE = (byte) $ff
(const byte) RASTER_IRQ_TOP RASTER_IRQ_TOP = (byte) $30
(const byte*) SCREEN SCREEN = (byte*) 1024
(byte*) SCREEN_COPY
(void*) SCREEN_COPY#0 SCREEN_COPY zp ZP_WORD:7 0.0273972602739726
(byte*) SCREEN_DIST
(void*) SCREEN_DIST#0 SCREEN_DIST zp ZP_WORD:9 0.028169014084507043
(const byte*) SPRITES_COLS SPRITES_COLS = (byte*) 53287
(const byte*) SPRITES_ENABLE SPRITES_ENABLE = (byte*) 53269
(const byte*) SPRITES_EXPAND_X SPRITES_EXPAND_X = (byte*) 53277
(const byte*) SPRITES_EXPAND_Y SPRITES_EXPAND_Y = (byte*) 53271
(const byte*) SPRITES_MC SPRITES_MC = (byte*) 53276
(const byte*) SPRITES_XMSB SPRITES_XMSB = (byte*) 53264
(const byte*) SPRITES_XPOS SPRITES_XPOS = (byte*) 53248
(const byte*) SPRITES_YPOS SPRITES_YPOS = (byte*) 53249
(const byte*) SPRITE_DATA SPRITE_DATA = (byte*) 8192
(const word) SPRITE_PTRS SPRITE_PTRS = (word) $3f8
(const byte) STATUS_FREE STATUS_FREE = (byte) 0
(const byte) STATUS_NEW STATUS_NEW = (byte) 1
(const byte) STATUS_PROCESSING STATUS_PROCESSING = (byte) 2
(const byte*) VIC_CONTROL VIC_CONTROL = (byte*) 53265
(const word[$28]) VXSIN VXSIN = kickasm {{ .for(var i=0; i<40; i++) {
      .word -sin(toRadians([i*360]/40))*4
    }
 }}
(const word[$19]) VYSIN VYSIN = kickasm {{ .for(var i=0; i<25; i++) {
      .word -sin(toRadians([i*360]/25))*4
    }
 }}
(const word) XPOS_LEFTMOST XPOS_LEFTMOST = (word)(const byte) BORDER_XPOS_LEFT-(byte) 8<<(byte) 4
(const word) XPOS_RIGHTMOST XPOS_RIGHTMOST = (const word) BORDER_XPOS_RIGHT<<(byte) 4
(const word) YPOS_BOTTOMMOST YPOS_BOTTOMMOST = (word)(const byte) BORDER_YPOS_BOTTOM<<(byte) 4
(const word) YPOS_TOPMOST YPOS_TOPMOST = (word)(const byte) BORDER_YPOS_TOP-(byte) 8<<(byte) 4
(word()) atan2_16((signed word) atan2_16::x , (signed word) atan2_16::y)
(signed word~) atan2_16::$2 $2 zp ZP_WORD:12 4.0
(byte~) atan2_16::$23 reg byte a 2002.0
(byte~) atan2_16::$24 reg byte a 2002.0
(signed word~) atan2_16::$7 $7 zp ZP_WORD:14 4.0
(label) atan2_16::@1
(label) atan2_16::@10
(label) atan2_16::@11
(label) atan2_16::@12
(label) atan2_16::@13
(label) atan2_16::@14
(label) atan2_16::@15
(label) atan2_16::@16
(label) atan2_16::@17
(label) atan2_16::@18
(label) atan2_16::@19
(label) atan2_16::@2
(label) atan2_16::@20
(label) atan2_16::@21
(label) atan2_16::@3
(label) atan2_16::@4
(label) atan2_16::@5
(label) atan2_16::@6
(label) atan2_16::@7
(label) atan2_16::@8
(label) atan2_16::@9
(label) atan2_16::@return
(word) atan2_16::angle
(word) atan2_16::angle#1 angle zp ZP_WORD:16 3.0
(word) atan2_16::angle#11 angle zp ZP_WORD:16 4.0
(word) atan2_16::angle#12 angle zp ZP_WORD:16 190.66666666666666
(word) atan2_16::angle#13 angle zp ZP_WORD:16 1334.6666666666667
(word) atan2_16::angle#2 angle zp ZP_WORD:16 2002.0
(word) atan2_16::angle#3 angle zp ZP_WORD:16 2002.0
(word) atan2_16::angle#4 angle zp ZP_WORD:16 4.0
(word) atan2_16::angle#5 angle zp ZP_WORD:16 4.0
(word) atan2_16::angle#6 angle zp ZP_WORD:16 2004.0
(byte) atan2_16::i
(byte) atan2_16::i#1 reg byte x 1501.5
(byte) atan2_16::i#2 reg byte x 208.54166666666669
(word) atan2_16::return
(word) atan2_16::return#0 return zp ZP_WORD:16 34.99999999999999
(word) atan2_16::return#2 return zp ZP_WORD:16 202.0
(byte) atan2_16::shift
(byte) atan2_16::shift#1 reg byte y 20002.0
(byte) atan2_16::shift#2 reg byte y 8001.25
(byte~) atan2_16::shift#5 reg byte y 667.3333333333334
(signed word) atan2_16::x
(signed word) atan2_16::x#0 x zp ZP_WORD:26 2.8684210526315796
(signed word) atan2_16::xd
(signed word) atan2_16::xd#1 xd zp ZP_WORD:21 6667.333333333333
(signed word~) atan2_16::xd#10 xd zp ZP_WORD:21 1001.0
(signed word) atan2_16::xd#2 xd zp ZP_WORD:21 1001.0
(signed word) atan2_16::xd#3 xd zp ZP_WORD:21 7668.333333333332
(signed word) atan2_16::xd#5 xd zp ZP_WORD:21 1001.0
(signed word) atan2_16::xi
(signed word) atan2_16::xi#0 xi zp ZP_WORD:14 6.0
(signed word) atan2_16::xi#1 xi zp ZP_WORD:14 500.5
(signed word~) atan2_16::xi#13 xi zp ZP_WORD:14 4.0
(signed word) atan2_16::xi#2 xi zp ZP_WORD:14 500.5
(signed word) atan2_16::xi#3 xi zp ZP_WORD:14 267.0666666666667
(signed word) atan2_16::xi#8 xi zp ZP_WORD:14 1001.0
(signed word) atan2_16::y
(signed word) atan2_16::y#0 y zp ZP_WORD:28 2.724999999999999
(signed word) atan2_16::yd
(signed word) atan2_16::yd#1 yd zp ZP_WORD:19 10001.0
(signed word~) atan2_16::yd#10 yd zp ZP_WORD:19 2002.0
(signed word) atan2_16::yd#2 yd zp ZP_WORD:19 2002.0
(signed word) atan2_16::yd#3 yd zp ZP_WORD:19 4601.0
(signed word) atan2_16::yd#5 yd zp ZP_WORD:19 2002.0
(signed word) atan2_16::yi
(signed word) atan2_16::yi#0 yi zp ZP_WORD:12 1.2000000000000002
(signed word) atan2_16::yi#1 yi zp ZP_WORD:12 667.3333333333334
(signed word~) atan2_16::yi#16 yi zp ZP_WORD:12 4.0
(signed word) atan2_16::yi#2 yi zp ZP_WORD:12 667.3333333333334
(signed word) atan2_16::yi#3 yi zp ZP_WORD:12 353.4117647058823
(signed word) atan2_16::yi#8 yi zp ZP_WORD:12 1001.0
(struct ProcessingChar()) getCharToProcess()
(byte*~) getCharToProcess::$10 $10 zp ZP_WORD:24 4.0
(word) getCharToProcess::$12 $12 zp ZP_WORD:26 4.0
(word) getCharToProcess::$13 $13 zp ZP_WORD:24 4.0
(word~) getCharToProcess::$8 $8 zp ZP_WORD:24 3.0
(word~) getCharToProcess::$9 $9 zp ZP_WORD:24 4.0
(label) getCharToProcess::@1
(label) getCharToProcess::@10
(label) getCharToProcess::@11
(label) getCharToProcess::@12
(label) getCharToProcess::@2
(label) getCharToProcess::@3
(label) getCharToProcess::@4
(label) getCharToProcess::@5
(label) getCharToProcess::@6
(label) getCharToProcess::@7
(label) getCharToProcess::@8
(label) getCharToProcess::@9
(label) getCharToProcess::@return
(byte) getCharToProcess::closest_dist
(byte~) getCharToProcess::closest_dist#10 closest_dist zp ZP_BYTE:18 202.0
(byte~) getCharToProcess::closest_dist#12 closest_dist zp ZP_BYTE:18 2002.0
(byte) getCharToProcess::closest_dist#2 closest_dist zp ZP_BYTE:18 1026.25
(byte) getCharToProcess::closest_dist#8 closest_dist zp ZP_BYTE:18 202.0
(byte) getCharToProcess::closest_x
(byte) getCharToProcess::closest_x#7 closest_x zp ZP_BYTE:23 517.3333333333334
(byte) getCharToProcess::closest_x#9 closest_x zp ZP_BYTE:23 202.0
(byte) getCharToProcess::closest_y
(byte) getCharToProcess::closest_y#7 closest_y zp ZP_BYTE:11 517.3333333333334
(byte) getCharToProcess::closest_y#9 closest_y zp ZP_BYTE:11 202.0
(byte) getCharToProcess::dist
(byte) getCharToProcess::dist#0 reg byte x 750.75
(byte*) getCharToProcess::dist_line
(byte*) getCharToProcess::dist_line#0 dist_line zp ZP_WORD:3 4.0
(byte*) getCharToProcess::dist_line#1 dist_line zp ZP_WORD:3 50.5
(byte*) getCharToProcess::dist_line#6 dist_line zp ZP_WORD:3 86.07142857142857
(struct ProcessingChar) getCharToProcess::return
(byte) getCharToProcess::return_dist
(byte) getCharToProcess::return_dist#0 reg byte x 7.333333333333333
(byte) getCharToProcess::return_dist#1 reg byte x 228.7777777777778
(byte~) getCharToProcess::return_dist#5 reg byte x 2002.0
(byte~) getCharToProcess::return_dist#6 reg byte x 2002.0
(byte) getCharToProcess::return_x
(byte) getCharToProcess::return_x#0 reg byte y 7.333333333333333
(byte) getCharToProcess::return_x#1 return_x zp ZP_BYTE:23 228.7777777777778
(byte~) getCharToProcess::return_x#7 return_x zp ZP_BYTE:23 1001.0
(byte) getCharToProcess::return_y
(byte) getCharToProcess::return_y#0 reg byte a 7.333333333333333
(byte) getCharToProcess::return_y#1 return_y zp ZP_BYTE:11 216.6315789473684
(byte~) getCharToProcess::return_y#7 return_y zp ZP_BYTE:11 2002.0
(byte*) getCharToProcess::screen_line
(byte*) getCharToProcess::screen_line#0 screen_line zp ZP_WORD:28 2.0
(byte*) getCharToProcess::screen_line#1 screen_line zp ZP_WORD:28 40.4
(byte*) getCharToProcess::screen_line#4 screen_line zp ZP_WORD:28 92.6923076923077
(byte) getCharToProcess::x
(byte) getCharToProcess::x#1 reg byte y 1001.0
(byte) getCharToProcess::x#2 reg byte y 556.1111111111111
(byte) getCharToProcess::y
(byte) getCharToProcess::y#1 y zp ZP_BYTE:2 101.0
(byte) getCharToProcess::y#7 y zp ZP_BYTE:2 80.2
(byte*) heap_head
(byte*) heap_head#1 heap_head zp ZP_WORD:24 1.0
(byte*) heap_head#5 heap_head zp ZP_WORD:24 4.0
(void()) initSprites()
(label) initSprites::@1
(label) initSprites::@2
(label) initSprites::@3
(label) initSprites::@4
(label) initSprites::@return
(byte) initSprites::i
(byte) initSprites::i#1 reg byte x 16.5
(byte) initSprites::i#2 reg byte x 16.5
(byte*) initSprites::sp
(byte*) initSprites::sp#1 sp zp ZP_WORD:28 22.0
(byte*) initSprites::sp#2 sp zp ZP_WORD:28 14.666666666666666
(void()) init_angle_screen((byte*) init_angle_screen::screen)
(word~) init_angle_screen::$11 $11 zp ZP_WORD:16 202.0
(byte~) init_angle_screen::$13 reg byte a 202.0
(byte~) init_angle_screen::$14 reg byte a 202.0
(byte~) init_angle_screen::$15 reg byte a 202.0
(byte~) init_angle_screen::$3 reg byte a 202.0
(byte~) init_angle_screen::$4 reg byte a 202.0
(byte~) init_angle_screen::$7 reg byte a 202.0
(label) init_angle_screen::@1
(label) init_angle_screen::@2
(label) init_angle_screen::@3
(label) init_angle_screen::@4
(label) init_angle_screen::@5
(label) init_angle_screen::@return
(byte) init_angle_screen::ang_w
(byte) init_angle_screen::ang_w#0 ang_w zp ZP_BYTE:30 84.16666666666666
(word) init_angle_screen::angle_w
(word) init_angle_screen::angle_w#0 angle_w zp ZP_WORD:16 202.0
(byte*) init_angle_screen::screen
(byte*) init_angle_screen::screen#0 screen zp ZP_WORD:24 3.0
(byte*) init_angle_screen::screen_bottomline
(byte*) init_angle_screen::screen_bottomline#0 screen_bottomline zp ZP_WORD:24 4.0
(byte*) init_angle_screen::screen_bottomline#1 screen_bottomline zp ZP_WORD:24 7.333333333333333
(byte*) init_angle_screen::screen_bottomline#6 screen_bottomline zp ZP_WORD:24 9.04
(byte*) init_angle_screen::screen_topline
(byte*) init_angle_screen::screen_topline#0 screen_topline zp ZP_WORD:3 2.0
(byte*) init_angle_screen::screen_topline#1 screen_topline zp ZP_WORD:3 5.5
(byte*) init_angle_screen::screen_topline#6 screen_topline zp ZP_WORD:3 9.416666666666666
(byte) init_angle_screen::x
(byte) init_angle_screen::x#1 x zp ZP_BYTE:18 101.0
(byte) init_angle_screen::x#2 x zp ZP_BYTE:18 28.857142857142858
(byte) init_angle_screen::xb
(byte) init_angle_screen::xb#1 xb zp ZP_BYTE:23 202.0
(byte) init_angle_screen::xb#2 xb zp ZP_BYTE:23 18.363636363636363
(signed word) init_angle_screen::xw
(word) init_angle_screen::xw#0 xw zp ZP_WORD:26 33.666666666666664
(byte) init_angle_screen::y
(byte) init_angle_screen::y#1 y zp ZP_BYTE:2 16.5
(byte) init_angle_screen::y#5 y zp ZP_BYTE:2 4.730769230769231
(signed word) init_angle_screen::yw
(word) init_angle_screen::yw#0 yw zp ZP_WORD:28 50.5
interrupt(HARDWARE_ALL)(void()) irqBottom()
(label) irqBottom::@1
(label) irqBottom::@2
(label) irqBottom::@return
(byte) irqBottom::i
interrupt(HARDWARE_ALL)(void()) irqTop()
(label) irqTop::@1
(label) irqTop::@return
(byte) irqTop::i
(byte) irqTop::i1
(void()) main()
(byte~) main::$17 reg byte x 12.222222222222221
(byte) main::$27 reg byte a 22.0
(byte) main::$28 reg byte a 22.0
(byte) main::$29 reg byte a 22.0
(byte) main::$30 reg byte a 22.0
(struct ProcessingChar~) main::$9
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(byte) main::center_dist
(byte) main::center_dist#0 reg byte a 22.0
(byte) main::center_x
(byte) main::center_x#0 reg byte y 5.5
(byte) main::center_y
(byte) main::center_y#0 center_y zp ZP_BYTE:11 5.5
(byte*) main::dst
(byte*) main::dst#0 dst zp ZP_WORD:3 4.0
(byte*) main::dst#1 dst zp ZP_WORD:3 22.0
(byte*) main::dst#2 dst zp ZP_WORD:3 8.75
(byte) main::i
(byte) main::i#1 i zp ZP_BYTE:2 16.5
(byte) main::i#2 i zp ZP_BYTE:2 3.6666666666666665
(byte*) main::src
(byte*) main::src#1 src zp ZP_WORD:28 11.0
(byte*) main::src#2 src zp ZP_WORD:28 14.666666666666666
(void*()) malloc((word) malloc::size)
(label) malloc::@return
(byte*) malloc::mem
(byte*) malloc::mem#0 mem zp ZP_WORD:9 0.8
(void*) malloc::return
(word) malloc::size
(void()) processChars()
(byte~) processChars::$11 reg byte a 22.0
(byte~) processChars::$12 reg byte a 22.0
(byte~) processChars::$14 reg byte a 22.0
(word~) processChars::$15 $15 zp ZP_WORD:36 11.0
(byte~) processChars::$17 reg byte x 6.6000000000000005
(word~) processChars::$25 $25 zp ZP_WORD:34 11.0
(byte~) processChars::$26 reg byte a 22.0
(byte~) processChars::$30 reg byte a 22.0
(byte~) processChars::$33 reg byte a 22.0
(byte~) processChars::$37 reg byte a 22.0
(byte~) processChars::$38 reg byte a 22.0
(byte~) processChars::$39 reg byte a 22.0
(byte) processChars::$67 reg byte a 22.0
(byte) processChars::$68 reg byte a 22.0
(byte) processChars::$69 reg byte a 22.0
(byte) processChars::$70 reg byte a 22.0
(label) processChars::@1
(label) processChars::@10
(label) processChars::@11
(label) processChars::@12
(label) processChars::@13
(label) processChars::@14
(label) processChars::@2
(label) processChars::@3
(label) processChars::@4
(label) processChars::@5
(label) processChars::@6
(label) processChars::@7
(label) processChars::@8
(label) processChars::@9
(label) processChars::@return
(byte) processChars::bitmask
(byte) processChars::bitmask#0 bitmask zp ZP_BYTE:33 2.2
(byte) processChars::i
(byte) processChars::i#1 i zp ZP_BYTE:5 16.5
(byte) processChars::i#10 i zp ZP_BYTE:5 1.4042553191489362
(byte) processChars::numActive
(byte) processChars::numActive#1 numActive zp ZP_BYTE:6 22.0
(byte) processChars::numActive#10 numActive zp ZP_BYTE:6 0.7333333333333333
(byte) processChars::numActive#3 numActive zp ZP_BYTE:6 11.0
(struct ProcessingSprite*) processChars::processing
(struct ProcessingSprite*) processChars::processing#0 processing zp ZP_WORD:31 0.3142857142857143
(byte) processChars::xchar
(byte) processChars::xchar#0 reg byte a 22.0
(word) processChars::xpos
(word) processChars::xpos#0 xpos zp ZP_WORD:34 2.0625
(byte) processChars::ychar
(byte) processChars::ychar#0 reg byte a 22.0
(byte) processChars::ypos
(byte) processChars::ypos#0 ypos zp ZP_BYTE:38 2.75
(void()) setupRasterIrq((word) setupRasterIrq::raster , (void()*) setupRasterIrq::irqRoutine)
(label) setupRasterIrq::@1
(label) setupRasterIrq::@2
(label) setupRasterIrq::@return
(void()*) setupRasterIrq::irqRoutine
(const void()*) setupRasterIrq::irqRoutine#0 irqRoutine = &interrupt(HARDWARE_ALL)(void()) irqTop()
(word) setupRasterIrq::raster
(void()) startProcessing((byte) startProcessing::center_x , (byte) startProcessing::center_y , (byte) startProcessing::center_dist)
(word~) startProcessing::$0 $0 zp ZP_WORD:12 3.0
(word~) startProcessing::$1 $1 zp ZP_WORD:12 4.0
(word~) startProcessing::$11 $11 zp ZP_WORD:19 4.0
(word~) startProcessing::$12 $12 zp ZP_WORD:19 4.0
(word~) startProcessing::$13 $13 zp ZP_WORD:19 4.0
(word~) startProcessing::$15 $15 zp ZP_WORD:21 4.0
(word~) startProcessing::$16 $16 zp ZP_WORD:21 4.0
(word~) startProcessing::$17 $17 zp ZP_WORD:21 4.0
(byte~) startProcessing::$22 reg byte a 2.0
(word~) startProcessing::$23 $23 zp ZP_WORD:24 0.5
(byte~) startProcessing::$30 reg byte a 2002.0
(byte~) startProcessing::$31 reg byte x 2.2222222222222228
(byte) startProcessing::$42 reg byte a 2002.0
(byte) startProcessing::$43 reg byte a 2002.0
(byte) startProcessing::$44 reg byte a 2002.0
(byte) startProcessing::$45 reg byte a 2002.0
(word) startProcessing::$47 $47 zp ZP_WORD:14 4.0
(word) startProcessing::$48 $48 zp ZP_WORD:12 4.0
(word~) startProcessing::$5 $5 zp ZP_WORD:3 4.0
(byte) startProcessing::$50 reg byte a 4.0
(byte) startProcessing::$51 reg byte a 4.0
(byte) startProcessing::$52 reg byte a 4.0
(byte) startProcessing::$53 reg byte a 4.0
(word~) startProcessing::$6 $6 zp ZP_WORD:3 4.0
(word~) startProcessing::$8 $8 zp ZP_WORD:28 4.0
(word~) startProcessing::$9 $9 zp ZP_WORD:28 4.0
(label) startProcessing::@1
(label) startProcessing::@2
(label) startProcessing::@3
(label) startProcessing::@4
(label) startProcessing::@5
(label) startProcessing::@6
(label) startProcessing::@7
(label) startProcessing::@8
(label) startProcessing::@9
(label) startProcessing::@return
(struct ProcessingChar) startProcessing::center
(byte) startProcessing::center_dist
(byte) startProcessing::center_x
(byte) startProcessing::center_x#0 center_x zp ZP_BYTE:30 0.30952380952380953
(byte) startProcessing::center_y
(byte) startProcessing::center_y#0 center_y zp ZP_BYTE:11 0.24444444444444444
(byte) startProcessing::ch
(byte) startProcessing::ch#0 reg byte a 2.0
(byte*) startProcessing::chargenData
(byte*) startProcessing::chargenData#0 chargenData zp ZP_WORD:28 1.3333333333333333
(byte*) startProcessing::chargenData#1 chargenData zp ZP_WORD:28 67.33333333333333
(byte*) startProcessing::chargenData#2 chargenData zp ZP_WORD:28 101.66666666666666
(byte*) startProcessing::colPtr
(byte*) startProcessing::colPtr#0 colPtr zp ZP_WORD:16 4.0
(byte) startProcessing::freeIdx
(byte) startProcessing::freeIdx#2 freeIdx zp ZP_BYTE:2 28.0
(byte) startProcessing::freeIdx#6 reg byte x 20.2
(byte~) startProcessing::freeIdx#7 reg byte x 202.0
(byte~) startProcessing::freeIdx#8 freeIdx zp ZP_BYTE:2 202.0
(byte) startProcessing::i
(byte) startProcessing::i#1 i zp ZP_BYTE:2 1501.5
(byte) startProcessing::i#2 i zp ZP_BYTE:2 858.0
(byte) startProcessing::i1
(byte) startProcessing::i1#1 reg byte x 151.5
(byte) startProcessing::i1#2 reg byte x 50.5
(word) startProcessing::offset
(word) startProcessing::offset#0 offset zp ZP_WORD:12 2.0
(byte*) startProcessing::screenPtr
(byte*) startProcessing::screenPtr#0 screenPtr zp ZP_WORD:12 0.14285714285714285
(byte) startProcessing::spriteCol
(byte) startProcessing::spriteCol#0 spriteCol zp ZP_BYTE:18 0.0975609756097561
(byte*) startProcessing::spriteData
(byte*) startProcessing::spriteData#0 spriteData zp ZP_WORD:3 0.5714285714285714
(byte*) startProcessing::spriteData#1 spriteData zp ZP_WORD:3 50.5
(byte*) startProcessing::spriteData#2 spriteData zp ZP_WORD:3 152.5
(byte) startProcessing::spriteIdx
(byte) startProcessing::spritePtr
(byte) startProcessing::spritePtr#0 spritePtr zp ZP_BYTE:23 0.3076923076923077
(word) startProcessing::spriteX
(word) startProcessing::spriteX#0 spriteX zp ZP_WORD:19 0.3076923076923077
(word) startProcessing::spriteY
(word) startProcessing::spriteY#0 spriteY zp ZP_WORD:21 0.4

reg byte x [ startProcessing::freeIdx#6 startProcessing::freeIdx#7 ]
reg byte x [ startProcessing::i1#2 startProcessing::i1#1 ]
reg byte y [ getCharToProcess::x#2 getCharToProcess::x#1 ]
reg byte x [ getCharToProcess::return_dist#1 getCharToProcess::return_dist#5 getCharToProcess::return_dist#6 getCharToProcess::dist#0 ]
reg byte x [ initSprites::i#2 initSprites::i#1 ]
zp ZP_BYTE:2 [ init_angle_screen::y#5 init_angle_screen::y#1 getCharToProcess::y#7 getCharToProcess::y#1 startProcessing::freeIdx#2 startProcessing::freeIdx#8 startProcessing::i#2 startProcessing::i#1 main::i#2 main::i#1 ]
zp ZP_WORD:3 [ init_angle_screen::screen_topline#6 init_angle_screen::screen_topline#0 init_angle_screen::screen_topline#1 getCharToProcess::dist_line#6 getCharToProcess::dist_line#0 getCharToProcess::dist_line#1 startProcessing::spriteData#2 startProcessing::spriteData#0 startProcessing::spriteData#1 startProcessing::$6 startProcessing::$5 main::dst#2 main::dst#0 main::dst#1 ]
reg byte x [ atan2_16::i#2 atan2_16::i#1 ]
reg byte y [ atan2_16::shift#2 atan2_16::shift#5 atan2_16::shift#1 ]
zp ZP_BYTE:5 [ processChars::i#10 processChars::i#1 ]
zp ZP_BYTE:6 [ processChars::numActive#10 processChars::numActive#3 processChars::numActive#1 ]
zp ZP_WORD:7 [ SCREEN_COPY#0 ]
zp ZP_WORD:9 [ SCREEN_DIST#0 malloc::mem#0 ]
reg byte a [ main::$27 ]
reg byte a [ main::$28 ]
reg byte a [ main::$29 ]
reg byte a [ main::$30 ]
reg byte x [ main::$17 ]
reg byte y [ getCharToProcess::return_x#0 ]
reg byte a [ getCharToProcess::return_y#0 ]
reg byte x [ getCharToProcess::return_dist#0 ]
reg byte y [ main::center_x#0 ]
zp ZP_BYTE:11 [ main::center_y#0 startProcessing::center_y#0 getCharToProcess::closest_y#7 getCharToProcess::closest_y#9 getCharToProcess::return_y#1 getCharToProcess::return_y#7 ]
reg byte a [ main::center_dist#0 ]
reg byte a [ startProcessing::$42 ]
reg byte a [ startProcessing::$43 ]
reg byte a [ startProcessing::$44 ]
reg byte a [ startProcessing::$45 ]
reg byte a [ startProcessing::$30 ]
zp ZP_WORD:12 [ startProcessing::$0 startProcessing::$48 startProcessing::$1 startProcessing::offset#0 startProcessing::screenPtr#0 atan2_16::yi#3 atan2_16::yi#8 atan2_16::yi#0 atan2_16::yi#16 atan2_16::$2 atan2_16::yi#1 atan2_16::yi#2 ]
zp ZP_WORD:14 [ startProcessing::$47 atan2_16::xi#3 atan2_16::xi#8 atan2_16::xi#0 atan2_16::xi#13 atan2_16::$7 atan2_16::xi#1 atan2_16::xi#2 ]
zp ZP_WORD:16 [ startProcessing::colPtr#0 atan2_16::angle#6 atan2_16::angle#12 atan2_16::angle#13 atan2_16::angle#2 atan2_16::angle#3 atan2_16::return#0 atan2_16::angle#5 atan2_16::angle#11 atan2_16::angle#1 atan2_16::angle#4 atan2_16::return#2 init_angle_screen::angle_w#0 init_angle_screen::$11 ]
zp ZP_BYTE:18 [ startProcessing::spriteCol#0 init_angle_screen::x#2 init_angle_screen::x#1 getCharToProcess::closest_dist#2 getCharToProcess::closest_dist#8 getCharToProcess::closest_dist#10 getCharToProcess::closest_dist#12 ]
reg byte a [ startProcessing::ch#0 ]
zp ZP_WORD:19 [ startProcessing::$11 startProcessing::$12 startProcessing::$13 startProcessing::spriteX#0 atan2_16::yd#5 atan2_16::yd#3 atan2_16::yd#10 atan2_16::yd#1 atan2_16::yd#2 ]
zp ZP_WORD:21 [ startProcessing::$15 startProcessing::$16 startProcessing::$17 startProcessing::spriteY#0 atan2_16::xd#5 atan2_16::xd#3 atan2_16::xd#10 atan2_16::xd#1 atan2_16::xd#2 ]
zp ZP_BYTE:23 [ startProcessing::spritePtr#0 init_angle_screen::xb#2 init_angle_screen::xb#1 getCharToProcess::closest_x#7 getCharToProcess::closest_x#9 getCharToProcess::return_x#1 getCharToProcess::return_x#7 ]
reg byte a [ startProcessing::$22 ]
reg byte a [ startProcessing::$50 ]
reg byte a [ startProcessing::$51 ]
reg byte a [ startProcessing::$52 ]
reg byte a [ startProcessing::$53 ]
reg byte x [ startProcessing::$31 ]
zp ZP_WORD:24 [ getCharToProcess::$8 getCharToProcess::$13 getCharToProcess::$9 getCharToProcess::$10 startProcessing::$23 heap_head#5 heap_head#1 init_angle_screen::screen_bottomline#6 init_angle_screen::screen_bottomline#0 init_angle_screen::screen_bottomline#1 init_angle_screen::screen#0 ]
reg byte a [ init_angle_screen::$3 ]
reg byte a [ init_angle_screen::$4 ]
zp ZP_WORD:26 [ init_angle_screen::xw#0 atan2_16::x#0 getCharToProcess::$12 ]
reg byte a [ init_angle_screen::$7 ]
zp ZP_WORD:28 [ init_angle_screen::yw#0 atan2_16::y#0 initSprites::sp#2 initSprites::sp#1 getCharToProcess::screen_line#4 getCharToProcess::screen_line#0 getCharToProcess::screen_line#1 startProcessing::chargenData#2 startProcessing::chargenData#0 startProcessing::chargenData#1 startProcessing::$9 startProcessing::$8 main::src#2 main::src#1 ]
zp ZP_BYTE:30 [ init_angle_screen::ang_w#0 startProcessing::center_x#0 ]
reg byte a [ init_angle_screen::$13 ]
reg byte a [ init_angle_screen::$14 ]
reg byte a [ init_angle_screen::$15 ]
reg byte a [ atan2_16::$24 ]
reg byte a [ atan2_16::$23 ]
reg byte a [ processChars::$67 ]
reg byte a [ processChars::$68 ]
reg byte a [ processChars::$69 ]
reg byte a [ processChars::$70 ]
reg byte a [ processChars::$37 ]
zp ZP_WORD:31 [ processChars::processing#0 ]
zp ZP_BYTE:33 [ processChars::bitmask#0 ]
zp ZP_WORD:34 [ processChars::xpos#0 processChars::$25 ]
reg byte a [ processChars::$11 ]
reg byte a [ processChars::$12 ]
reg byte x [ processChars::$17 ]
reg byte a [ processChars::$14 ]
zp ZP_WORD:36 [ processChars::$15 ]
zp ZP_BYTE:38 [ processChars::ypos#0 ]
reg byte a [ processChars::$26 ]
reg byte a [ processChars::xchar#0 ]
reg byte a [ processChars::$38 ]
reg byte a [ processChars::$30 ]
reg byte a [ processChars::ychar#0 ]
reg byte a [ processChars::$39 ]
reg byte a [ processChars::$33 ]
