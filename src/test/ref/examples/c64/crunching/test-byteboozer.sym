__constant char BYTEBOOZER[] = kickasm {{ .const B2_ZP_BASE = $fc
    #import "byteboozer_decrunch.asm"
 }}
__constant char CRUNCHED_SPRITE[] = kickasm(  uses SPRITE) {{ .modify B2() {
	    .pc = SPRITE
        .var pic = LoadPicture("sprite.png", List().add($000000, $ffffff))
        .for (var y=0; y<21; y++)
            .for (var x=0;x<3; x++)
                .byte pic.getSinglecolorByte(x,y)
    }
 }}
__constant char * const DEFAULT_SCREEN = (char *) 1024
__constant const char GREEN = 5
__constant const unsigned int OFFSET_SPRITE_PTRS = $3f8
__constant char OFFSET_STRUCT_MOS6569_VICII_SPRITES_ENABLE = $15
__constant char * const SPRITE = (char *) 8192
__constant char * const SPRITES_COLOR = (char *) 53287
__constant char * const SPRITES_PTR = DEFAULT_SCREEN+OFFSET_SPRITE_PTRS
__constant char * const SPRITES_XPOS = (char *) 53248
__constant char * const SPRITES_YPOS = (char *) 53249
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
void byteboozer_decrunch(char * volatile crunched)
__loadstore char * volatile byteboozer_decrunch::crunched // zp[2]:2 2.0
void main()
char main::toSpritePtr1_return
__constant char main::toSpritePtr1_return#0 = (char)(unsigned int)SPRITE/$40 // toSpritePtr1_return
char *main::toSpritePtr1_sprite

zp[2]:2 [ byteboozer_decrunch::crunched ]
