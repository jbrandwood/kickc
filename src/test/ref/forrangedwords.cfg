@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [5] (word) main::w#2 ← phi( main/(byte) 0 main::@1/(word) main::w#1 )
  [6] (byte~) main::$0 ← < (word) main::w#2
  [7] *((const byte*) main::SCREEN#0) ← (byte~) main::$0
  [8] (byte~) main::$1 ← > (word) main::w#2
  [9] *((const byte*) main::SCREEN#0+(byte) 1) ← (byte~) main::$1
  [10] (word) main::w#1 ← ++ (word) main::w#2
  [11] if((word) main::w#1!=(byte) 0) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [12] (signed word) main::sw#2 ← phi( main::@1/(signed word) -$7fff main::@2/(signed word) main::sw#1 )
  [13] (byte~) main::$3 ← < (signed word) main::sw#2
  [14] *((const byte*) main::SCREEN#0+(byte) 3) ← (byte~) main::$3
  [15] (byte~) main::$4 ← > (signed word) main::sw#2
  [16] *((const byte*) main::SCREEN#0+(byte) 4) ← (byte~) main::$4
  [17] (signed word) main::sw#1 ← ++ (signed word) main::sw#2
  [18] if((signed word) main::sw#1!=(signed word) $7fff) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@2
  [19] return 
  to:@return
