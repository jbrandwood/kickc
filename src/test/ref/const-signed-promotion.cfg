@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [5] (byte) main::i#2 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@1/(byte) main::i#1 )
  [6] (byte~) main::$0 ← (byte) main::i#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [7] *((const signed word[3]) world#0 + (byte~) main::$0) ← (word/signed word/dword/signed dword) $190
  [8] (byte) main::i#1 ← ++ (byte) main::i#2
  [9] if((byte) main::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 3) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [10] *((const signed word*) main::screen#0) ← *((const signed word[3]) world#0)
  to:main::@return
main::@return: scope:[main]  from main::@2
  [11] return 
  to:@return
