@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call memset 
  to:main::@return
main::@return: scope:[main]  from main
  [6] return 
  to:@return
memset: scope:[memset]  from main
  [7] phi()
  to:memset::@2
memset::@2: scope:[memset]  from memset memset::@1
  [8] (byte*) memset::dst#4 ← phi( memset::@1/(byte*) memset::dst#1 memset/(byte*)(const void*) memset::str#0 )
  [9] *((byte*) memset::dst#4) ← (const byte) memset::c#0
  [10] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#4
  to:memset::@1
memset::@1: scope:[memset]  from memset::@2
  [11] if((byte*) memset::dst#1!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [12] return 
  to:@return
