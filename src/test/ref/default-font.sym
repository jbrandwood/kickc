(label) @1
(label) @begin
(label) @end
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = (byte*) 1024
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@return
(byte) main::ch
(byte) main::ch#1 ch zp ZP_BYTE:3 35.5
(byte) main::ch#2 ch zp ZP_BYTE:3 104.66666666666666
(byte) main::ch#3 ch zp ZP_BYTE:3 22.0
(byte*) main::screen
(byte*) main::screen#1 screen zp ZP_WORD:4 53.25
(byte*) main::screen#2 screen zp ZP_WORD:4 7.333333333333333
(byte*) main::screen#3 screen zp ZP_WORD:4 157.0
(byte*) main::screen#5 screen zp ZP_WORD:4 22.0
(byte) main::x
(byte) main::x#1 x zp ZP_BYTE:2 16.5
(byte) main::x#4 x zp ZP_BYTE:2 2.75
(byte) main::y
(byte) main::y#1 reg byte x 151.5
(byte) main::y#2 reg byte x 50.5
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp ZP_WORD:4 22.0
(byte*) memset::dst#2 dst zp ZP_WORD:4 14.666666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) SCREEN#0

zp ZP_BYTE:2 [ main::x#4 main::x#1 ]
zp ZP_BYTE:3 [ main::ch#2 main::ch#3 main::ch#1 ]
reg byte x [ main::y#2 main::y#1 ]
zp ZP_WORD:4 [ memset::dst#2 memset::dst#1 main::screen#3 main::screen#5 main::screen#2 main::screen#1 ]
