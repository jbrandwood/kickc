@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::i#2 ← phi( main/(byte) 0 main::@3/(byte) main::i#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [6] (byte) main::i#1 ← ++ (byte) main::i#2
  [7] call getfn 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [8] phi()
  [9] call fn1 
  to:main::@1

(void()) fn1()
fn1: scope:[fn1]  from main::@3
  [10] *((const byte*) fn1::BORDERCOL) ← ++ *((const byte*) fn1::BORDERCOL)
  to:fn1::@return
fn1::@return: scope:[fn1]  from fn1
  [11] return 
  to:@return

(void()*()) getfn((byte) getfn::b)
getfn: scope:[getfn]  from main::@2
  [12] phi()
  to:getfn::@return
getfn::@return: scope:[getfn]  from getfn
  [13] return 
  to:@return
