@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] (byte*) sample#0 ← (const byte*) SAMPLE
  to:@2
@2: scope:[]  from @1
  [2] phi()
  [3] call main 
  to:@end
@end: scope:[]  from @2
  [4] phi()

(void()) main()
main: scope:[main]  from @2
  asm { lda#$ff sta$d406 sta$d40d sta$d414 lda#$49 sta$d404 sta$d40b sta$d412  }
  asm { sei  }
  [7] *((const byte*) CIA2_INTERRUPT) ← (const byte) CIA_INTERRUPT_CLEAR
  [8] *((const void()**) KERNEL_NMI) ← &interrupt(HARDWARE_ALL)(void()) nmi()
  [9] *((const word*) CIA2_TIMER_A) ← (byte) $88
  [10] *((const byte*) CIA2_INTERRUPT) ← (byte) $81
  [11] *((const byte*) CIA2_TIMER_A_CONTROL) ← (byte) 1
  asm { cli  }
  to:main::@return
main::@return: scope:[main]  from main
  [13] return 
  to:@return

interrupt(HARDWARE_ALL)(void()) nmi2()
nmi2: scope:[nmi2]  from
  [14] *((const byte*) BORDERCOL) ← ++ *((const byte*) BORDERCOL)
  asm { ldaCIA2_INTERRUPT  }
  [16] (byte~) nmi2::$1 ← *((byte*) sample#0) >> (byte) 4
  [17] *((const byte*) SID_VOLUME) ← (byte~) nmi2::$1
  [18] (byte*) sample#1 ← ++ (byte*) sample#0
  [19] (byte~) nmi2::$2 ← > (byte*) sample#1
  [20] if((byte~) nmi2::$2!=>(const byte*) SAMPLE+(word) $6100) goto nmi2::@1
  to:nmi2::@2
nmi2::@2: scope:[nmi2]  from nmi2
  [21] (byte*) sample#2 ← (const byte*) SAMPLE
  to:nmi2::@1
nmi2::@1: scope:[nmi2]  from nmi2 nmi2::@2
  [22] (byte*) sample#3 ← phi( nmi2/(byte*) sample#1 nmi2::@2/(byte*) sample#2 )
  [23] *((const void()**) KERNEL_NMI) ← &interrupt(HARDWARE_ALL)(void()) nmi()
  [24] *((const byte*) BORDERCOL) ← -- *((const byte*) BORDERCOL)
  to:nmi2::@return
nmi2::@return: scope:[nmi2]  from nmi2::@1
  [25] return 
  to:@return

interrupt(HARDWARE_ALL)(void()) nmi()
nmi: scope:[nmi]  from
  [26] *((const byte*) BORDERCOL) ← ++ *((const byte*) BORDERCOL)
  asm { ldaCIA2_INTERRUPT  }
  [28] (byte~) nmi::$1 ← *((byte*) sample#0) & (byte) $f
  [29] *((const byte*) SID_VOLUME) ← (byte~) nmi::$1
  [30] *((const void()**) KERNEL_NMI) ← &interrupt(HARDWARE_ALL)(void()) nmi2()
  [31] *((const byte*) BORDERCOL) ← -- *((const byte*) BORDERCOL)
  to:nmi::@return
nmi::@return: scope:[nmi]  from nmi
  [32] return 
  to:@return
