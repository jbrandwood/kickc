__constant char * const DEFAULT_COLORRAM = (char *) 2048
__constant char * const DEFAULT_SCREEN = (char *) 3072
__constant char FADE[$10] = { 2, $12, $22, $32, $42, $52, $62, $72, $76, $66, $56, $46, $36, $26, $16, 6 }
__constant char OFFSET_STRUCT_MOS7360_TED_BG_COLOR = $15
__constant char OFFSET_STRUCT_MOS7360_TED_BORDER_COLOR = $19
__constant char OFFSET_STRUCT_MOS7360_TED_RASTER_LO = $1d
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant struct MOS7360_TED * const TED = (struct MOS7360_TED *) 65280
__constant char VISITS[$3e8] = { fill( $3e8, 0) }
void main()
unsigned int main::$10 // zp[2]:11 22.0
char main::$12 // reg byte a 22.0
char main::$13 // reg byte a 22.0
char main::$18 // reg byte a 22.0
unsigned int main::$24 // zp[2]:5 16.5
unsigned int main::$29 // zp[2]:7 22.0
unsigned int main::$3 // zp[2]:5 22.0
unsigned int main::$30 // zp[2]:5 22.0
char *main::$6 // zp[2]:9 22.0
char *main::$8 // zp[2]:5 11.0
char main::$9 // reg byte a 22.0
char main::cnt
char main::cnt#0 // reg byte y 11.0
unsigned int main::offset
unsigned int main::offset#0 // offset zp[2]:5 8.25
char main::rnd
char main::rnd#0 // reg byte y 14.666666666666666
char main::x
char main::x#1 // reg byte x 11.0
char main::x#10 // reg byte x 184.5
char main::x#11 // reg byte x 6.357142857142859
char main::x#2 // reg byte x 11.0
char main::y
char main::y#1 // y zp[1]:2 11.0
char main::y#10 // y zp[1]:2 184.5
char main::y#11 // y zp[1]:2 5.964285714285716
char main::y#2 // y zp[1]:2 11.0
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#5 // reg byte x 14.428571428571429
char *memset::dst
char *memset::dst#1 // dst zp[2]:3 202.0
char *memset::dst#2 // dst zp[2]:3 138.33333333333331
char *memset::dst#4 // dst zp[2]:3 22.0
char *memset::end
char *memset::end#0 // end zp[2]:13 18.666666666666664
unsigned int memset::num
void *memset::return
void *memset::str
void *memset::str#4 // str zp[2]:3
unsigned int rand()
unsigned int rand::$0 // zp[2]:13 202.0
unsigned int rand::$1 // zp[2]:15 202.0
unsigned int rand::$2 // zp[2]:17 202.0
unsigned int rand::return
unsigned int rand::return#0 // return zp[2]:11 37.33333333333333
unsigned int rand::return#2 // return zp[2]:11 22.0
unsigned int rand_state
unsigned int rand_state#0 // rand_state zp[2]:3 151.5
unsigned int rand_state#1 // rand_state zp[2]:3 151.5
unsigned int rand_state#10 // rand_state zp[2]:3 11.222222222222223
unsigned int rand_state#12 // rand_state zp[2]:3 23.307692307692307

zp[1]:2 [ main::y#11 main::y#10 main::y#2 main::y#1 ]
reg byte x [ main::x#11 main::x#10 main::x#2 main::x#1 ]
zp[2]:3 [ memset::str#4 memset::dst#2 memset::dst#4 memset::dst#1 rand_state#12 rand_state#10 rand_state#0 rand_state#1 ]
reg byte x [ memset::c#5 ]
zp[2]:5 [ main::$24 main::$30 main::$3 main::offset#0 main::$8 ]
zp[2]:7 [ main::$29 ]
zp[2]:9 [ main::$6 ]
reg byte y [ main::cnt#0 ]
reg byte a [ main::$9 ]
zp[2]:11 [ rand::return#2 main::$10 rand::return#0 ]
reg byte y [ main::rnd#0 ]
reg byte a [ main::$12 ]
reg byte a [ main::$13 ]
reg byte a [ main::$18 ]
zp[2]:13 [ rand::$0 memset::end#0 ]
zp[2]:15 [ rand::$1 ]
zp[2]:17 [ rand::$2 ]
