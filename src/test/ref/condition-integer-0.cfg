@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@2
main::@2: scope:[main]  from main
  [5] *((const byte*) SCREEN) ← (byte) '+'
  to:main::@1
main::@1: scope:[main]  from main::@2
  [6] *((const byte*) SCREEN+(byte) 1) ← (byte) ' '
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@4
  [7] (byte) main::idx#10 ← phi( main::@1/(byte) 2 main::@4/(byte) main::idx#11 )
  [7] (byte) main::i#2 ← phi( main::@1/(byte) 0 main::@4/(byte) main::i#1 )
  [8] if((byte) 0==(byte) main::i#2) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@3
  [9] *((const byte*) SCREEN + (byte) main::idx#10) ← (byte) '+'
  [10] (byte) main::idx#4 ← ++ (byte) main::idx#10
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@5
  [11] (byte) main::idx#11 ← phi( main::@3/(byte) main::idx#10 main::@5/(byte) main::idx#4 )
  [12] (byte) main::i#1 ← ++ (byte) main::i#2
  [13] if((byte) main::i#1!=(byte) 3) goto main::@3
  to:main::@6
main::@6: scope:[main]  from main::@4
  [14] *((const byte*) SCREEN + (byte) main::idx#11) ← (byte) ' '
  [15] (byte) main::idx#5 ← ++ (byte) main::idx#11
  to:main::@7
main::@7: scope:[main]  from main::@6 main::@8
  [16] (byte) main::idx#12 ← phi( main::@8/(byte) main::idx#17 main::@6/(byte) main::idx#5 )
  [16] (word) main::i1#2 ← phi( main::@8/(word) main::i1#1 main::@6/(word) 0 )
  [17] if((byte) 0==(word) main::i1#2) goto main::@8
  to:main::@9
main::@9: scope:[main]  from main::@7
  [18] *((const byte*) SCREEN + (byte) main::idx#12) ← (byte) '+'
  [19] (byte) main::idx#6 ← ++ (byte) main::idx#12
  to:main::@8
main::@8: scope:[main]  from main::@7 main::@9
  [20] (byte) main::idx#17 ← phi( main::@9/(byte) main::idx#6 main::@7/(byte) main::idx#12 )
  [21] (word) main::i1#1 ← ++ (word) main::i1#2
  [22] if((word) main::i1#1!=(byte) 3) goto main::@7
  to:main::@return
main::@return: scope:[main]  from main::@8
  [23] return 
  to:@return
