constant byte* const BG_COLOR = (byte*) 53281
constant const byte BLACK = 0
constant byte* const COLS = (byte*) 55296
constant const byte JMP = $4c
constant byte* MESSAGE[]  = "hello world!"
constant const byte NOP = $ea
constant byte* const RASTER = (byte*) 53266
constant byte* const SCREEN = (byte*) 1024
constant struct SysCall* SYSCALLS[]  = { { xjmp: JMP, syscall: &syscall1, xnop: NOP }, { xjmp: JMP, syscall: &syscall2, xnop: NOP } }
constant struct SysCall* SYSCALL_RESET[]  = { { xjmp: JMP, syscall: &main, xnop: NOP } }
constant byte* const VICII_MEMORY = (byte*) 53272
constant const byte WHITE = 1
void main()
byte* main::msg
byte* main::msg#1 msg zp[2]:2 22.0
byte* main::msg#2 msg zp[2]:2 11.0
byte* main::sc
byte* main::sc#1 sc zp[2]:4 11.0
byte* main::sc#2 sc zp[2]:4 11.0
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
byte memset::c#4 reg byte x 14.428571428571429
byte* memset::dst
byte* memset::dst#1 dst zp[2]:6 202.0
byte* memset::dst#2 dst zp[2]:6 138.33333333333331
byte* memset::dst#4 dst zp[2]:6 22.0
byte* memset::end
byte* memset::end#0 end zp[2]:8 18.666666666666664
word memset::num
void* memset::return
void* memset::str
void* memset::str#3 str zp[2]:6
void syscall1()
void syscall2()

zp[2]:2 [ main::msg#2 main::msg#1 ]
zp[2]:4 [ main::sc#2 main::sc#1 ]
zp[2]:6 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte x [ memset::c#4 ]
zp[2]:8 [ memset::end#0 ]
