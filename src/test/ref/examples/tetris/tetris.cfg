@begin: scope:[]  from
  [0] phi()
  to:@16
@16: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @16
  [3] phi()
main: scope:[main]  from @16
  [4] phi()
  [5] call init 
  to:main::@41
main::@41: scope:[main]  from main
  [6] phi()
  [7] call render_playfield 
  to:main::@42
main::@42: scope:[main]  from main::@41
  [8] phi()
  [9] call render_current 
  to:main::@1
main::@1: scope:[main]  from main::@15 main::@42 main::@49
  [10] (byte) current_xpos#12 ← phi( main::@15/(byte) current_xpos#15 main::@42/(byte/signed byte/word/signed word/dword/signed dword) 3 main::@49/(byte) current_xpos#15 )
  [10] (byte) current_ypos#13 ← phi( main::@15/(byte) current_ypos#17 main::@42/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@49/(byte) current_ypos#17 )
  [10] (byte) current_movedown_counter#14 ← phi( main::@15/(byte) current_movedown_counter#16 main::@42/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@49/(byte) current_movedown_counter#16 )
  [10] (byte) keyboard_events_size#19 ← phi( main::@15/(byte) keyboard_events_size#16 main::@42/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@49/(byte) keyboard_events_size#16 )
  [10] (byte) current_piece_orientation#11 ← phi( main::@15/(byte) current_piece_orientation#21 main::@42/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@49/(byte) current_piece_orientation#21 )
  to:main::@4
main::@4: scope:[main]  from main::@1 main::@4
  [11] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 255) goto main::@4
  to:main::@7
main::@7: scope:[main]  from main::@4 main::@7
  [12] if(*((const byte*) RASTER#0)!=(byte/word/signed word/dword/signed dword) 254) goto main::@7
  to:main::@9
main::@9: scope:[main]  from main::@7
  [13] phi()
  [14] call keyboard_event_scan 
  to:main::@44
main::@44: scope:[main]  from main::@9
  [15] phi()
  [16] call keyboard_event_get 
  [17] (byte) keyboard_event_get::return#3 ← (byte) keyboard_event_get::return#2
  to:main::@45
main::@45: scope:[main]  from main::@44
  [18] (byte) main::key_event#0 ← (byte) keyboard_event_get::return#3
  [19] (byte) current_movedown_counter#1 ← ++ (byte) current_movedown_counter#14
  [20] if((byte) main::key_event#0!=(const byte) KEY_SPACE#0) goto main::@10
  to:main::@29
main::@29: scope:[main]  from main::@45
  [21] phi()
  to:main::@10
main::@10: scope:[main]  from main::@29 main::@45
  [22] (byte) main::movedown#10 ← phi( main::@29/(byte/signed byte/word/signed word/dword/signed dword) 1 main::@45/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [23] call keyboard_event_pressed 
  [24] (byte) keyboard_event_pressed::return#12 ← (byte) keyboard_event_pressed::return#11
  to:main::@46
main::@46: scope:[main]  from main::@10
  [25] (byte~) main::$9 ← (byte) keyboard_event_pressed::return#12
  [26] if((byte~) main::$9==(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@11
  to:main::@30
main::@30: scope:[main]  from main::@46
  [27] if((byte) current_movedown_counter#1<(const byte) current_movedown_rate_fast#0) goto main::@11
  to:main::@31
main::@31: scope:[main]  from main::@30
  [28] (byte) main::movedown#2 ← ++ (byte) main::movedown#10
  to:main::@11
main::@11: scope:[main]  from main::@30 main::@31 main::@46
  [29] (byte) main::movedown#7 ← phi( main::@30/(byte) main::movedown#10 main::@31/(byte) main::movedown#2 main::@46/(byte) main::movedown#10 )
  [30] if((byte) current_movedown_counter#1<(const byte) current_movedown_rate#0) goto main::@13
  to:main::@32
main::@32: scope:[main]  from main::@11
  [31] (byte) main::movedown#3 ← ++ (byte) main::movedown#7
  to:main::@13
main::@13: scope:[main]  from main::@11 main::@32
  [32] (byte) main::movedown#6 ← phi( main::@11/(byte) main::movedown#7 main::@32/(byte) main::movedown#3 )
  [33] if((byte) main::movedown#6==(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@14
  to:main::@33
main::@33: scope:[main]  from main::@13
  [34] phi()
  [35] call current_movedown 
  to:main::@14
main::@14: scope:[main]  from main::@13 main::@33
  [36] (byte) current_ypos#17 ← phi( main::@13/(byte) current_ypos#13 main::@33/(byte) current_ypos#10 )
  [36] (byte) current_movedown_counter#16 ← phi( main::@13/(byte) current_movedown_counter#1 main::@33/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [36] (byte) main::render#13 ← phi( main::@13/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@33/(byte/signed byte/word/signed word/dword/signed dword) 1 )
  [37] (byte~) main::$19 ← (byte) main::key_event#0 & (byte/word/signed word/dword/signed dword) 128
  [38] if((byte~) main::$19!=(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@15
  to:main::@34
main::@34: scope:[main]  from main::@14
  [39] if((byte) main::key_event#0!=(const byte) KEY_COMMA#0) goto main::@16
  to:main::@35
main::@35: scope:[main]  from main::@34
  [40] (byte) current_xpos#1 ← -- (byte) current_xpos#12
  [41] (byte) main::render#2 ← ++ (byte) main::render#13
  to:main::@16
main::@16: scope:[main]  from main::@34 main::@35
  [42] (byte) main::render#16 ← phi( main::@34/(byte) main::render#13 main::@35/(byte) main::render#2 )
  [42] (byte) current_xpos#11 ← phi( main::@34/(byte) current_xpos#12 main::@35/(byte) current_xpos#1 )
  [43] if((byte) main::key_event#0!=(const byte) KEY_DOT#0) goto main::@17
  to:main::@36
main::@36: scope:[main]  from main::@16
  [44] (byte) current_xpos#2 ← ++ (byte) current_xpos#11
  [45] (byte) main::render#3 ← ++ (byte) main::render#16
  to:main::@17
main::@17: scope:[main]  from main::@16 main::@36
  [46] (byte) current_xpos#34 ← phi( main::@16/(byte) current_xpos#11 main::@36/(byte) current_xpos#2 )
  [46] (byte) main::render#10 ← phi( main::@16/(byte) main::render#16 main::@36/(byte) main::render#3 )
  [47] if((byte) main::key_event#0!=(const byte) KEY_Z#0) goto main::@18
  to:main::@37
main::@37: scope:[main]  from main::@17
  [48] (byte/signed word/word/dword/signed dword~) main::$28 ← (byte) current_piece_orientation#11 - (byte/signed byte/word/signed word/dword/signed dword) 16
  [49] (byte) current_piece_orientation#2 ← (byte/signed word/word/dword/signed dword~) main::$28 & (byte/signed byte/word/signed word/dword/signed dword) 63
  [50] (byte) main::render#4 ← ++ (byte) main::render#10
  to:main::@18
main::@18: scope:[main]  from main::@17 main::@37
  [51] (byte) main::render#11 ← phi( main::@17/(byte) main::render#10 main::@37/(byte) main::render#4 )
  [51] (byte) current_piece_orientation#10 ← phi( main::@17/(byte) current_piece_orientation#11 main::@37/(byte) current_piece_orientation#2 )
  [52] if((byte) main::key_event#0!=(const byte) KEY_X#0) goto main::@15
  to:main::@38
main::@38: scope:[main]  from main::@18
  [53] (byte/signed word/word/dword/signed dword~) main::$32 ← (byte) current_piece_orientation#10 + (byte/signed byte/word/signed word/dword/signed dword) 16
  [54] (byte) current_piece_orientation#3 ← (byte/signed word/word/dword/signed dword~) main::$32 & (byte/signed byte/word/signed word/dword/signed dword) 63
  [55] (byte) main::render#5 ← ++ (byte) main::render#11
  to:main::@15
main::@15: scope:[main]  from main::@14 main::@18 main::@38
  [56] (byte) current_xpos#15 ← phi( main::@14/(byte) current_xpos#12 main::@18/(byte) current_xpos#34 main::@38/(byte) current_xpos#34 )
  [56] (byte) current_piece_orientation#21 ← phi( main::@14/(byte) current_piece_orientation#11 main::@18/(byte) current_piece_orientation#10 main::@38/(byte) current_piece_orientation#3 )
  [56] (byte) main::render#7 ← phi( main::@14/(byte) main::render#13 main::@18/(byte) main::render#11 main::@38/(byte) main::render#5 )
  [57] if((byte) main::render#7==(byte/signed byte/word/signed word/dword/signed dword) 0) goto main::@1
  to:main::@39
main::@39: scope:[main]  from main::@15
  [58] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  [59] call render_playfield 
  to:main::@48
main::@48: scope:[main]  from main::@39
  [60] (byte~) current_piece_orientation#66 ← (byte) current_piece_orientation#21
  [61] (byte~) current_ypos#62 ← (byte) current_ypos#17
  [62] (byte~) current_xpos#64 ← (byte) current_xpos#15
  [63] call render_current 
  to:main::@49
main::@49: scope:[main]  from main::@48
  [64] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:main::@1
render_current: scope:[render_current]  from main::@42 main::@48
  [65] (byte) current_xpos#26 ← phi( main::@42/(byte/signed byte/word/signed word/dword/signed dword) 3 main::@48/(byte~) current_xpos#64 )
  [65] (byte) current_ypos#14 ← phi( main::@42/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@48/(byte~) current_ypos#62 )
  [65] (byte) current_piece_orientation#13 ← phi( main::@42/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@48/(byte~) current_piece_orientation#66 )
  [66] (byte*) render_current::current_piece_gfx#0 ← (const byte[4*4*4]) piece_t#0 + (byte) current_piece_orientation#13
  to:render_current::@1
render_current::@1: scope:[render_current]  from render_current render_current::@7
  [67] (byte) render_current::i#3 ← phi( render_current/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@7/(byte) render_current::i#1 )
  [67] (byte) render_current::l#2 ← phi( render_current/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@7/(byte) render_current::l#1 )
  [68] (byte~) render_current::$1 ← (byte) current_ypos#14 + (byte) render_current::l#2
  [69] (byte~) render_current::$2 ← (byte~) render_current::$1 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [70] (byte*) render_current::screen_line#0 ← *((const byte*[20]) screen_lines#0 + (byte~) render_current::$2)
  to:render_current::@2
render_current::@2: scope:[render_current]  from render_current::@1 render_current::@3
  [71] (byte) render_current::c#2 ← phi( render_current::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 render_current::@3/(byte) render_current::c#1 )
  [71] (byte) render_current::i#2 ← phi( render_current::@1/(byte) render_current::i#3 render_current::@3/(byte) render_current::i#1 )
  [72] (byte) render_current::current_cell#0 ← *((byte*) render_current::current_piece_gfx#0 + (byte) render_current::i#2)
  [73] (byte) render_current::i#1 ← ++ (byte) render_current::i#2
  [74] if((byte) render_current::current_cell#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto render_current::@3
  to:render_current::@5
render_current::@5: scope:[render_current]  from render_current::@2
  [75] (byte) render_current::xpos#0 ← (byte) current_xpos#26 + (byte) render_current::c#2
  [76] if((byte) render_current::xpos#0>=(byte/signed byte/word/signed word/dword/signed dword) 10) goto render_current::@3
  to:render_current::@6
render_current::@6: scope:[render_current]  from render_current::@5
  [77] *((byte*) render_current::screen_line#0 + (byte) render_current::xpos#0) ← (byte) render_current::current_cell#0
  to:render_current::@3
render_current::@3: scope:[render_current]  from render_current::@2 render_current::@5 render_current::@6
  [78] (byte) render_current::c#1 ← ++ (byte) render_current::c#2
  [79] if((byte) render_current::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_current::@2
  to:render_current::@7
render_current::@7: scope:[render_current]  from render_current::@3
  [80] (byte) render_current::l#1 ← ++ (byte) render_current::l#2
  [81] if((byte) render_current::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 4) goto render_current::@1
  to:render_current::@return
render_current::@return: scope:[render_current]  from render_current::@7
  [82] return 
  to:@return
render_playfield: scope:[render_playfield]  from main::@39 main::@41
  [83] phi()
  to:render_playfield::@1
render_playfield::@1: scope:[render_playfield]  from render_playfield render_playfield::@3
  [84] (byte) render_playfield::i#3 ← phi( render_playfield/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@3/(byte) render_playfield::i#1 )
  [84] (byte) render_playfield::l#2 ← phi( render_playfield/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@3/(byte) render_playfield::l#1 )
  [85] (byte~) render_playfield::$0 ← (byte) render_playfield::l#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [86] (byte*) render_playfield::line#0 ← *((const byte*[20]) screen_lines#0 + (byte~) render_playfield::$0)
  to:render_playfield::@2
render_playfield::@2: scope:[render_playfield]  from render_playfield::@1 render_playfield::@2
  [87] (byte) render_playfield::i#2 ← phi( render_playfield::@1/(byte) render_playfield::i#3 render_playfield::@2/(byte) render_playfield::i#1 )
  [87] (byte) render_playfield::c#2 ← phi( render_playfield::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 render_playfield::@2/(byte) render_playfield::c#1 )
  [88] (byte*~) render_playfield::$1 ← (byte*) render_playfield::line#0 + (byte) render_playfield::c#2
  [89] *((byte*~) render_playfield::$1) ← *((const byte[20*10]) playfield#0 + (byte) render_playfield::i#2)
  [90] (byte) render_playfield::i#1 ← ++ (byte) render_playfield::i#2
  [91] (byte) render_playfield::c#1 ← ++ (byte) render_playfield::c#2
  [92] if((byte) render_playfield::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 10) goto render_playfield::@2
  to:render_playfield::@3
render_playfield::@3: scope:[render_playfield]  from render_playfield::@2
  [93] (byte) render_playfield::l#1 ← ++ (byte) render_playfield::l#2
  [94] if((byte) render_playfield::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 20) goto render_playfield::@1
  to:render_playfield::@return
render_playfield::@return: scope:[render_playfield]  from render_playfield::@3
  [95] return 
  to:@return
current_movedown: scope:[current_movedown]  from main::@33
  [96] (byte) current_ypos#10 ← ++ (byte) current_ypos#13
  to:current_movedown::@return
current_movedown::@return: scope:[current_movedown]  from current_movedown
  [97] return 
  to:@return
keyboard_event_pressed: scope:[keyboard_event_pressed]  from keyboard_event_scan::@10 keyboard_event_scan::@11 keyboard_event_scan::@20 keyboard_event_scan::@9 main::@10
  [98] (byte) keyboard_event_pressed::keycode#5 ← phi( keyboard_event_scan::@10/(const byte) KEY_CTRL#0 keyboard_event_scan::@11/(const byte) KEY_COMMODORE#0 keyboard_event_scan::@20/(const byte) KEY_LSHIFT#0 keyboard_event_scan::@9/(const byte) KEY_RSHIFT#0 main::@10/(const byte) KEY_SPACE#0 )
  [99] (byte~) keyboard_event_pressed::$0 ← (byte) keyboard_event_pressed::keycode#5 >> (byte/signed byte/word/signed word/dword/signed dword) 3
  [100] (byte) keyboard_event_pressed::row_bits#0 ← *((const byte[8]) keyboard_scan_values#0 + (byte~) keyboard_event_pressed::$0)
  [101] (byte~) keyboard_event_pressed::$1 ← (byte) keyboard_event_pressed::keycode#5 & (byte/signed byte/word/signed word/dword/signed dword) 7
  [102] (byte) keyboard_event_pressed::return#11 ← (byte) keyboard_event_pressed::row_bits#0 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte~) keyboard_event_pressed::$1)
  to:keyboard_event_pressed::@return
keyboard_event_pressed::@return: scope:[keyboard_event_pressed]  from keyboard_event_pressed
  [103] return 
  to:@return
keyboard_event_get: scope:[keyboard_event_get]  from main::@44
  [104] if((byte) keyboard_events_size#13==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_get::@return
  to:keyboard_event_get::@3
keyboard_event_get::@3: scope:[keyboard_event_get]  from keyboard_event_get
  [105] (byte) keyboard_events_size#4 ← -- (byte) keyboard_events_size#13
  [106] (byte) keyboard_event_get::return#1 ← *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#4)
  to:keyboard_event_get::@return
keyboard_event_get::@return: scope:[keyboard_event_get]  from keyboard_event_get keyboard_event_get::@3
  [107] (byte) keyboard_events_size#16 ← phi( keyboard_event_get/(byte) keyboard_events_size#13 keyboard_event_get::@3/(byte) keyboard_events_size#4 )
  [107] (byte) keyboard_event_get::return#2 ← phi( keyboard_event_get/(byte/word/signed word/dword/signed dword) 255 keyboard_event_get::@3/(byte) keyboard_event_get::return#1 )
  [108] return 
  to:@return
keyboard_event_scan: scope:[keyboard_event_scan]  from main::@9
  [109] phi()
  to:keyboard_event_scan::@1
keyboard_event_scan::@1: scope:[keyboard_event_scan]  from keyboard_event_scan keyboard_event_scan::@3
  [110] (byte) keyboard_events_size#29 ← phi( keyboard_event_scan/(byte) keyboard_events_size#19 keyboard_event_scan::@3/(byte) keyboard_events_size#13 )
  [110] (byte) keyboard_event_scan::keycode#11 ← phi( keyboard_event_scan/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@3/(byte) keyboard_event_scan::keycode#14 )
  [110] (byte) keyboard_event_scan::row#2 ← phi( keyboard_event_scan/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@3/(byte) keyboard_event_scan::row#1 )
  [111] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_event_scan::row#2
  [112] call keyboard_matrix_read 
  [113] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
  to:keyboard_event_scan::@25
keyboard_event_scan::@25: scope:[keyboard_event_scan]  from keyboard_event_scan::@1
  [114] (byte) keyboard_event_scan::row_scan#0 ← (byte) keyboard_matrix_read::return#2
  [115] if((byte) keyboard_event_scan::row_scan#0!=*((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2)) goto keyboard_event_scan::@4
  to:keyboard_event_scan::@13
keyboard_event_scan::@13: scope:[keyboard_event_scan]  from keyboard_event_scan::@25
  [116] (byte) keyboard_event_scan::keycode#1 ← (byte) keyboard_event_scan::keycode#11 + (byte/signed byte/word/signed word/dword/signed dword) 8
  to:keyboard_event_scan::@3
keyboard_event_scan::@3: scope:[keyboard_event_scan]  from keyboard_event_scan::@13 keyboard_event_scan::@19
  [117] (byte) keyboard_events_size#13 ← phi( keyboard_event_scan::@13/(byte) keyboard_events_size#29 keyboard_event_scan::@19/(byte) keyboard_events_size#30 )
  [117] (byte) keyboard_event_scan::keycode#14 ← phi( keyboard_event_scan::@13/(byte) keyboard_event_scan::keycode#1 keyboard_event_scan::@19/(byte) keyboard_event_scan::keycode#15 )
  [118] (byte) keyboard_event_scan::row#1 ← ++ (byte) keyboard_event_scan::row#2
  [119] if((byte) keyboard_event_scan::row#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@1
  to:keyboard_event_scan::@20
keyboard_event_scan::@20: scope:[keyboard_event_scan]  from keyboard_event_scan::@3
  [120] phi()
  [121] call keyboard_event_pressed 
  [122] (byte) keyboard_event_pressed::return#0 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@26
keyboard_event_scan::@26: scope:[keyboard_event_scan]  from keyboard_event_scan::@20
  [123] (byte~) keyboard_event_scan::$14 ← (byte) keyboard_event_pressed::return#0
  [124] if((byte~) keyboard_event_scan::$14==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@9
  to:keyboard_event_scan::@21
keyboard_event_scan::@21: scope:[keyboard_event_scan]  from keyboard_event_scan::@26
  [125] phi()
  to:keyboard_event_scan::@9
keyboard_event_scan::@9: scope:[keyboard_event_scan]  from keyboard_event_scan::@21 keyboard_event_scan::@26
  [126] phi()
  [127] call keyboard_event_pressed 
  [128] (byte) keyboard_event_pressed::return#1 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@27
keyboard_event_scan::@27: scope:[keyboard_event_scan]  from keyboard_event_scan::@9
  [129] (byte~) keyboard_event_scan::$18 ← (byte) keyboard_event_pressed::return#1
  [130] if((byte~) keyboard_event_scan::$18==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@10
  to:keyboard_event_scan::@22
keyboard_event_scan::@22: scope:[keyboard_event_scan]  from keyboard_event_scan::@27
  [131] phi()
  to:keyboard_event_scan::@10
keyboard_event_scan::@10: scope:[keyboard_event_scan]  from keyboard_event_scan::@22 keyboard_event_scan::@27
  [132] phi()
  [133] call keyboard_event_pressed 
  [134] (byte) keyboard_event_pressed::return#2 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@28
keyboard_event_scan::@28: scope:[keyboard_event_scan]  from keyboard_event_scan::@10
  [135] (byte~) keyboard_event_scan::$22 ← (byte) keyboard_event_pressed::return#2
  [136] if((byte~) keyboard_event_scan::$22==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@11
  to:keyboard_event_scan::@23
keyboard_event_scan::@23: scope:[keyboard_event_scan]  from keyboard_event_scan::@28
  [137] phi()
  to:keyboard_event_scan::@11
keyboard_event_scan::@11: scope:[keyboard_event_scan]  from keyboard_event_scan::@23 keyboard_event_scan::@28
  [138] phi()
  [139] call keyboard_event_pressed 
  [140] (byte) keyboard_event_pressed::return#10 ← (byte) keyboard_event_pressed::return#11
  to:keyboard_event_scan::@29
keyboard_event_scan::@29: scope:[keyboard_event_scan]  from keyboard_event_scan::@11
  [141] (byte~) keyboard_event_scan::$26 ← (byte) keyboard_event_pressed::return#10
  [142] if((byte~) keyboard_event_scan::$26==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@return
  to:keyboard_event_scan::@24
keyboard_event_scan::@24: scope:[keyboard_event_scan]  from keyboard_event_scan::@29
  [143] phi()
  to:keyboard_event_scan::@return
keyboard_event_scan::@return: scope:[keyboard_event_scan]  from keyboard_event_scan::@24 keyboard_event_scan::@29
  [144] return 
  to:@return
keyboard_event_scan::@4: scope:[keyboard_event_scan]  from keyboard_event_scan::@25 keyboard_event_scan::@5
  [145] (byte) keyboard_events_size#10 ← phi( keyboard_event_scan::@25/(byte) keyboard_events_size#29 keyboard_event_scan::@5/(byte) keyboard_events_size#30 )
  [145] (byte) keyboard_event_scan::keycode#10 ← phi( keyboard_event_scan::@25/(byte) keyboard_event_scan::keycode#11 keyboard_event_scan::@5/(byte) keyboard_event_scan::keycode#15 )
  [145] (byte) keyboard_event_scan::col#2 ← phi( keyboard_event_scan::@25/(byte/signed byte/word/signed word/dword/signed dword) 0 keyboard_event_scan::@5/(byte) keyboard_event_scan::col#1 )
  [146] (byte~) keyboard_event_scan::$3 ← (byte) keyboard_event_scan::row_scan#0 ^ *((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2)
  [147] (byte~) keyboard_event_scan::$4 ← (byte~) keyboard_event_scan::$3 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_event_scan::col#2)
  [148] if((byte~) keyboard_event_scan::$4==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@5
  to:keyboard_event_scan::@15
keyboard_event_scan::@15: scope:[keyboard_event_scan]  from keyboard_event_scan::@4
  [149] if((byte) keyboard_events_size#10==(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@5
  to:keyboard_event_scan::@16
keyboard_event_scan::@16: scope:[keyboard_event_scan]  from keyboard_event_scan::@15
  [150] (byte) keyboard_event_scan::event_type#0 ← (byte) keyboard_event_scan::row_scan#0 & *((const byte[8]) keyboard_matrix_col_bitmask#0 + (byte) keyboard_event_scan::col#2)
  [151] if((byte) keyboard_event_scan::event_type#0==(byte/signed byte/word/signed word/dword/signed dword) 0) goto keyboard_event_scan::@7
  to:keyboard_event_scan::@17
keyboard_event_scan::@17: scope:[keyboard_event_scan]  from keyboard_event_scan::@16
  [152] *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#10) ← (byte) keyboard_event_scan::keycode#10
  [153] (byte) keyboard_events_size#2 ← ++ (byte) keyboard_events_size#10
  to:keyboard_event_scan::@5
keyboard_event_scan::@5: scope:[keyboard_event_scan]  from keyboard_event_scan::@15 keyboard_event_scan::@17 keyboard_event_scan::@4 keyboard_event_scan::@7
  [154] (byte) keyboard_events_size#30 ← phi( keyboard_event_scan::@17/(byte) keyboard_events_size#2 keyboard_event_scan::@4/(byte) keyboard_events_size#10 keyboard_event_scan::@15/(byte) keyboard_events_size#10 keyboard_event_scan::@7/(byte) keyboard_events_size#1 )
  [155] (byte) keyboard_event_scan::keycode#15 ← ++ (byte) keyboard_event_scan::keycode#10
  [156] (byte) keyboard_event_scan::col#1 ← ++ (byte) keyboard_event_scan::col#2
  [157] if((byte) keyboard_event_scan::col#1!=(byte/signed byte/word/signed word/dword/signed dword) 8) goto keyboard_event_scan::@4
  to:keyboard_event_scan::@19
keyboard_event_scan::@19: scope:[keyboard_event_scan]  from keyboard_event_scan::@5
  [158] *((const byte[8]) keyboard_scan_values#0 + (byte) keyboard_event_scan::row#2) ← (byte) keyboard_event_scan::row_scan#0
  to:keyboard_event_scan::@3
keyboard_event_scan::@7: scope:[keyboard_event_scan]  from keyboard_event_scan::@16
  [159] (byte/word/dword~) keyboard_event_scan::$11 ← (byte) keyboard_event_scan::keycode#10 | (byte/signed byte/word/signed word/dword/signed dword) 64
  [160] *((const byte[8]) keyboard_events#0 + (byte) keyboard_events_size#10) ← (byte/word/dword~) keyboard_event_scan::$11
  [161] (byte) keyboard_events_size#1 ← ++ (byte) keyboard_events_size#10
  to:keyboard_event_scan::@5
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_event_scan::@1
  [162] *((const byte*) CIA1_PORT_A#0) ← *((const byte[8]) keyboard_matrix_row_bitmask#0 + (byte) keyboard_matrix_read::rowid#0)
  [163] (byte) keyboard_matrix_read::return#0 ← ~ *((const byte*) CIA1_PORT_B#0)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [164] return 
  to:@return
init: scope:[init]  from main
  [165] phi()
  [166] call fill 
  to:init::@7
init::@7: scope:[init]  from init
  [167] phi()
  [168] call fill 
  to:init::@1
init::@1: scope:[init]  from init::@1 init::@7
  [169] (byte*) init::li#2 ← phi( init::@1/(byte*) init::li#1 init::@7/(const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 40+(byte/signed byte/word/signed word/dword/signed dword) 15 )
  [169] (byte) init::i#2 ← phi( init::@1/(byte) init::i#1 init::@7/(byte/signed byte/word/signed word/dword/signed dword) 0 )
  [170] (byte~) init::$4 ← (byte) init::i#2 << (byte/signed byte/word/signed word/dword/signed dword) 1
  [171] *((const byte*[20]) screen_lines#0 + (byte~) init::$4) ← (byte*) init::li#2
  [172] (byte*) init::li#1 ← (byte*) init::li#2 + (byte/signed byte/word/signed word/dword/signed dword) 40
  [173] (byte) init::i#1 ← ++ (byte) init::i#2
  [174] if((byte) init::i#1!=(byte/signed byte/word/signed word/dword/signed dword) 20) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1 init::@5
  [175] (byte) init::l#4 ← phi( init::@1/(byte/signed byte/word/signed word/dword/signed dword) 0 init::@5/(byte) init::l#1 )
  [175] (byte*) init::line#4 ← phi( init::@1/(const byte*) COLS#0+(byte/signed byte/word/signed word/dword/signed dword) 14 init::@5/(byte*) init::line#1 )
  to:init::@3
init::@3: scope:[init]  from init::@2 init::@3
  [176] (byte) init::c#2 ← phi( init::@2/(byte/signed byte/word/signed word/dword/signed dword) 0 init::@3/(byte) init::c#1 )
  [177] (byte*~) init::$7 ← (byte*) init::line#4 + (byte) init::c#2
  [178] *((byte*~) init::$7) ← (const byte) DARK_GREY#0
  [179] (byte) init::c#1 ← ++ (byte) init::c#2
  [180] if((byte) init::c#1!=(byte/signed byte/word/signed word/dword/signed dword) 12) goto init::@3
  to:init::@5
init::@5: scope:[init]  from init::@3
  [181] (byte*) init::line#1 ← (byte*) init::line#4 + (byte/signed byte/word/signed word/dword/signed dword) 40
  [182] (byte) init::l#1 ← ++ (byte) init::l#4
  [183] if((byte) init::l#1!=(byte/signed byte/word/signed word/dword/signed dword) 22) goto init::@2
  to:init::@return
init::@return: scope:[init]  from init::@5
  [184] return 
  to:@return
fill: scope:[fill]  from init init::@7
  [185] (byte) fill::val#3 ← phi( init/(byte/word/signed word/dword/signed dword) 160 init::@7/(const byte) BLACK#0 )
  [185] (byte*) fill::addr#0 ← phi( init/(const byte*) SCREEN#0 init::@7/(const byte*) COLS#0 )
  [186] (byte*) fill::end#0 ← (byte*) fill::addr#0 + (word/signed word/dword/signed dword) 1000
  to:fill::@1
fill::@1: scope:[fill]  from fill fill::@1
  [187] (byte*) fill::addr#2 ← phi( fill/(byte*) fill::addr#0 fill::@1/(byte*) fill::addr#1 )
  [188] *((byte*) fill::addr#2) ← (byte) fill::val#3
  [189] (byte*) fill::addr#1 ← ++ (byte*) fill::addr#2
  [190] if((byte*) fill::addr#1!=(byte*) fill::end#0) goto fill::@1
  to:fill::@return
fill::@return: scope:[fill]  from fill::@1
  [191] return 
  to:@return
