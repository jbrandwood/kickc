@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::toD0181
main::toD0181: scope:[main]  from main
  [5] phi()
  to:main::@7
main::@7: scope:[main]  from main::toD0181
  [6] *((const byte*) D018#0) ← (const byte) main::toD0181_return#0
  to:main::@1
main::@1: scope:[main]  from main::@5 main::@7
  [7] (byte) main::c#6 ← phi( main::@5/(byte) main::c#1 main::@7/(byte) 0 )
  [7] (byte*) main::charset#5 ← phi( main::@5/(byte*) main::charset#1 main::@7/(const byte*) CHARSET#0 )
  [7] (byte*) main::proto_hi#6 ← phi( main::@5/(byte*) main::proto_hi#1 main::@7/(const byte[]) FONT_HEX_PROTO#0 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@4
  [8] (byte) main::c1#4 ← phi( main::@1/(byte) 0 main::@4/(byte) main::c1#1 )
  [8] (byte*) main::charset#4 ← phi( main::@1/(byte*) main::charset#5 main::@4/(byte*) main::charset#1 )
  [8] (byte*) main::proto_lo#4 ← phi( main::@1/(const byte[]) FONT_HEX_PROTO#0 main::@4/(byte*) main::proto_lo#1 )
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@3
  [9] (byte) main::i#2 ← phi( main::@2/(byte) 0 main::@3/(byte) main::i#1 )
  [10] (byte~) main::$1 ← *((byte*) main::proto_hi#6 + (byte) main::i#2) << (byte) 3
  [11] (byte~) main::$2 ← (byte~) main::$1 | *((byte*) main::proto_lo#4 + (byte) main::i#2)
  [12] *((byte*) main::charset#4 + (byte) main::i#2) ← (byte~) main::$2
  [13] (byte) main::i#1 ← ++ (byte) main::i#2
  [14] if((byte) main::i#1!=(byte) 5) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@3
  [15] *((byte*) main::charset#4 + (byte) 5) ← (byte) 0
  [16] *((byte*) main::charset#4 + (byte) 6) ← (byte) 0
  [17] *((byte*) main::charset#4 + (byte) 7) ← (byte) 0
  [18] (byte*) main::proto_lo#1 ← (byte*) main::proto_lo#4 + (byte) 5
  [19] (byte*) main::charset#1 ← (byte*) main::charset#4 + (byte) 8
  [20] (byte) main::c1#1 ← ++ (byte) main::c1#4
  [21] if((byte) main::c1#1!=(byte) $10) goto main::@2
  to:main::@5
main::@5: scope:[main]  from main::@4
  [22] (byte*) main::proto_hi#1 ← (byte*) main::proto_hi#6 + (byte) 5
  [23] (byte) main::c#1 ← ++ (byte) main::c#6
  [24] if((byte) main::c#1!=(byte) $10) goto main::@1
  to:main::@6
main::@6: scope:[main]  from main::@5 main::@6
  [25] (byte) main::c2#2 ← phi( main::@5/(byte) 0 main::@6/(byte) main::c2#1 )
  [26] *((const byte*) SCREEN#0 + (byte) main::c2#2) ← (byte) main::c2#2
  [27] (byte) main::c2#1 ← ++ (byte) main::c2#2
  [28] if((byte) main::c2#1!=(byte) 0) goto main::@6
  to:main::@return
main::@return: scope:[main]  from main::@6
  [29] return 
  to:@return
