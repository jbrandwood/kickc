Fixing pointer addition (word*~) bsearch16u::$7 ← (word*) bsearch16u::items + (byte~) bsearch16u::$6
Fixing pointer addition (word*~) bsearch16u::$15 ← (word*) bsearch16u::pivot + (number) 1
Fixing pointer addition (word*~) bsearch16u::$1 ← (word*) bsearch16u::items - (number) 1
Fixing pointer array-indexing *((word*) utoa::digit_values + (byte) utoa::digit)
Fixing pointer array-indexing *((dword*) ultoa::digit_values + (byte) ultoa::digit)
Warning! Adding boolean cast to non-boolean condition *((byte*) strcpy::src)
Warning! Adding boolean cast to non-boolean condition *((byte*) print_str_lines::str)
Warning! Adding boolean cast to non-boolean condition (byte) print_str_lines::ch
Warning! Adding boolean cast to non-boolean condition *((byte*) print_str::str)
Warning! Adding boolean cast to non-boolean condition *((byte*) print_str_at::str)
Warning! Adding boolean cast to non-boolean sub-expression (byte) print_str_lines::ch
Identified constant variable (byte*) HEAP_TOP
Inlined call (byte~) vicSelectGfxBank::$0 ← call toDd00 (byte*) vicSelectGfxBank::gfx 
Culled Empty Block (label) @1
Culled Empty Block (label) @2
Culled Empty Block (label) @3
Culled Empty Block (label) @4
Culled Empty Block (label) @5
Culled Empty Block (label) @6
Culled Empty Block (label) memset::@7
Culled Empty Block (label) memset::@6
Culled Empty Block (label) memset::@8
Culled Empty Block (label) memset::@9
Culled Empty Block (label) memset::@3
Culled Empty Block (label) @7
Culled Empty Block (label) @8
Culled Empty Block (label) @9
Culled Empty Block (label) @10
Culled Empty Block (label) @11
Culled Empty Block (label) @12
Culled Empty Block (label) @13
Culled Empty Block (label) @14
Culled Empty Block (label) @15
Culled Empty Block (label) @17
Culled Empty Block (label) @18
Culled Empty Block (label) print_str::@4
Culled Empty Block (label) print_str::@3
Culled Empty Block (label) print_str::@5
Culled Empty Block (label) print_str::@6
Culled Empty Block (label) @19
Culled Empty Block (label) @20
Culled Empty Block (label) @21
Culled Empty Block (label) @22
Culled Empty Block (label) @23
Culled Empty Block (label) @24
Culled Empty Block (label) @25
Culled Empty Block (label) @26
Culled Empty Block (label) @27
Culled Empty Block (label) @28
Culled Empty Block (label) @29
Culled Empty Block (label) @30
Culled Empty Block (label) @31
Culled Empty Block (label) @32
Culled Empty Block (label) @34
Culled Empty Block (label) @35
Culled Empty Block (label) @36
Culled Empty Block (label) @37
Culled Empty Block (label) @38
Culled Empty Block (label) @39
Culled Empty Block (label) main::@4
Culled Empty Block (label) main::@3
Culled Empty Block (label) main::@5
Culled Empty Block (label) main::@6
Culled Empty Block (label) @41

CONTROL FLOW GRAPH SSA
@begin: scope:[]  from
  (byte*) PROCPORT_DDR ← ((byte*)) (number) 0
  (byte) PROCPORT_DDR_MEMORY_MASK ← (number) 7
  (byte*) PROCPORT ← ((byte*)) (number) 1
  (byte) PROCPORT_RAM_ALL ← (number) 0
  (byte) PROCPORT_RAM_IO ← (number) 5
  (byte) PROCPORT_RAM_CHARROM ← (number) 1
  (byte) PROCPORT_KERNEL_IO ← (number) 6
  (byte) PROCPORT_BASIC_KERNEL_IO ← (number) 7
  to:@16

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  (byte) memset::c#4 ← phi( print_cls/(byte) memset::c#0 )
  (void*) memset::str#3 ← phi( print_cls/(void*) memset::str#0 )
  (word) memset::num#1 ← phi( print_cls/(word) memset::num#0 )
  (bool~) memset::$0 ← (word) memset::num#1 > (number) 0
  (bool~) memset::$1 ← ! (bool~) memset::$0
  if((bool~) memset::$1) goto memset::@1
  to:memset::@2
memset::@1: scope:[memset]  from memset memset::@4
  (void*) memset::str#1 ← phi( memset/(void*) memset::str#3 memset::@4/(void*) memset::str#4 )
  (void*) memset::return#0 ← (void*) memset::str#1
  to:memset::@return
memset::@2: scope:[memset]  from memset
  (byte) memset::c#3 ← phi( memset/(byte) memset::c#4 )
  (word) memset::num#2 ← phi( memset/(word) memset::num#1 )
  (void*) memset::str#2 ← phi( memset/(void*) memset::str#3 )
  (byte*~) memset::$2 ← ((byte*)) (void*) memset::str#2
  (byte*~) memset::$3 ← (byte*~) memset::$2 + (word) memset::num#2
  (byte*) memset::end#0 ← (byte*~) memset::$3
  (byte*) memset::dst#0 ← ((byte*)) (void*) memset::str#2
  to:memset::@4
memset::@4: scope:[memset]  from memset::@2 memset::@5
  (byte) memset::c#2 ← phi( memset::@2/(byte) memset::c#3 memset::@5/(byte) memset::c#1 )
  (void*) memset::str#4 ← phi( memset::@2/(void*) memset::str#2 memset::@5/(void*) memset::str#5 )
  (byte*) memset::end#1 ← phi( memset::@2/(byte*) memset::end#0 memset::@5/(byte*) memset::end#2 )
  (byte*) memset::dst#2 ← phi( memset::@2/(byte*) memset::dst#0 memset::@5/(byte*) memset::dst#1 )
  (bool~) memset::$4 ← (byte*) memset::dst#2 != (byte*) memset::end#1
  if((bool~) memset::$4) goto memset::@5
  to:memset::@1
memset::@5: scope:[memset]  from memset::@4
  (void*) memset::str#5 ← phi( memset::@4/(void*) memset::str#4 )
  (byte*) memset::end#2 ← phi( memset::@4/(byte*) memset::end#1 )
  (byte*) memset::dst#3 ← phi( memset::@4/(byte*) memset::dst#2 )
  (byte) memset::c#1 ← phi( memset::@4/(byte) memset::c#2 )
  *((byte*) memset::dst#3) ← (byte) memset::c#1
  (byte*) memset::dst#1 ← ++ (byte*) memset::dst#3
  to:memset::@4
memset::@return: scope:[memset]  from memset::@1
  (void*) memset::return#3 ← phi( memset::@1/(void*) memset::return#0 )
  (void*) memset::return#1 ← (void*) memset::return#3
  return 
  to:@return
@16: scope:[]  from @begin
  (byte*) print_screen#0 ← ((byte*)) (number) $400
  (byte*) print_line_cursor#0 ← (byte*) print_screen#0
  (byte*) print_char_cursor#0 ← (byte*) print_line_cursor#0
  to:@33

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from main::@7 testProcport testProcport::@10 testProcport::@12 testProcport::@14 testProcport::@2 testProcport::@4 testProcport::@6 testProcport::@8
  (byte*) print_char_cursor#121 ← phi( main::@7/(byte*) print_char_cursor#12 testProcport/(byte*) print_char_cursor#119 testProcport::@10/(byte*) print_char_cursor#48 testProcport::@12/(byte*) print_char_cursor#50 testProcport::@14/(byte*) print_char_cursor#52 testProcport::@2/(byte*) print_char_cursor#40 testProcport::@4/(byte*) print_char_cursor#42 testProcport::@6/(byte*) print_char_cursor#44 testProcport::@8/(byte*) print_char_cursor#46 )
  (byte*) print_str::str#12 ← phi( main::@7/(byte*) print_str::str#1 testProcport/(byte*) print_str::str#2 testProcport::@10/(byte*) print_str::str#7 testProcport::@12/(byte*) print_str::str#8 testProcport::@14/(byte*) print_str::str#9 testProcport::@2/(byte*) print_str::str#3 testProcport::@4/(byte*) print_str::str#4 testProcport::@6/(byte*) print_str::str#5 testProcport::@8/(byte*) print_str::str#6 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (byte*) print_char_cursor#114 ← phi( print_str/(byte*) print_char_cursor#121 print_str::@2/(byte*) print_char_cursor#1 )
  (byte*) print_str::str#10 ← phi( print_str/(byte*) print_str::str#12 print_str::@2/(byte*) print_str::str#0 )
  (bool~) print_str::$0 ← (number) 0 != *((byte*) print_str::str#10)
  if((bool~) print_str::$0) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  (byte*) print_char_cursor#58 ← phi( print_str::@1/(byte*) print_char_cursor#114 )
  (byte*) print_str::str#11 ← phi( print_str::@1/(byte*) print_str::str#10 )
  *((byte*) print_char_cursor#58) ← *((byte*) print_str::str#11)
  (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#58
  (byte*) print_str::str#0 ← ++ (byte*) print_str::str#11
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  (byte*) print_char_cursor#59 ← phi( print_str::@1/(byte*) print_char_cursor#114 )
  (byte*) print_char_cursor#2 ← (byte*) print_char_cursor#59
  return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from main::@8 testProcport::@16
  (byte*) print_char_cursor#115 ← phi( main::@8/(byte*) print_char_cursor#13 testProcport::@16/(byte*) print_char_cursor#54 )
  (byte*) print_line_cursor#67 ← phi( main::@8/(byte*) print_line_cursor#69 testProcport::@16/(byte*) print_line_cursor#71 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*) print_char_cursor#60 ← phi( print_ln/(byte*) print_char_cursor#115 print_ln::@1/(byte*) print_char_cursor#60 )
  (byte*) print_line_cursor#34 ← phi( print_ln/(byte*) print_line_cursor#67 print_ln::@1/(byte*) print_line_cursor#1 )
  (byte*~) print_ln::$0 ← (byte*) print_line_cursor#34 + (number) $28
  (byte*) print_line_cursor#1 ← (byte*~) print_ln::$0
  (bool~) print_ln::$1 ← (byte*) print_line_cursor#1 < (byte*) print_char_cursor#60
  if((bool~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) print_line_cursor#35 ← phi( print_ln::@1/(byte*) print_line_cursor#1 )
  (byte*) print_char_cursor#3 ← (byte*) print_line_cursor#35
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  (byte*) print_char_cursor#61 ← phi( print_ln::@2/(byte*) print_char_cursor#3 )
  (byte*) print_line_cursor#36 ← phi( print_ln::@2/(byte*) print_line_cursor#35 )
  (byte*) print_line_cursor#2 ← (byte*) print_line_cursor#36
  (byte*) print_char_cursor#4 ← (byte*) print_char_cursor#61
  return 
  to:@return
@33: scope:[]  from @16
  (byte*) print_screen#6 ← phi( @16/(byte*) print_screen#0 )
  (byte*) print_char_cursor#124 ← phi( @16/(byte*) print_char_cursor#0 )
  (byte*) print_line_cursor#76 ← phi( @16/(byte*) print_line_cursor#0 )
  (byte[]) print_hextab ← (const string) $0
  to:@40

(void()) print_byte((byte) print_byte::b)
print_byte: scope:[print_byte]  from testProcport::@1 testProcport::@11 testProcport::@13 testProcport::@15 testProcport::@3 testProcport::@5 testProcport::@7 testProcport::@9
  (byte*) print_char_cursor#116 ← phi( testProcport::@1/(byte*) print_char_cursor#39 testProcport::@11/(byte*) print_char_cursor#49 testProcport::@13/(byte*) print_char_cursor#51 testProcport::@15/(byte*) print_char_cursor#53 testProcport::@3/(byte*) print_char_cursor#41 testProcport::@5/(byte*) print_char_cursor#43 testProcport::@7/(byte*) print_char_cursor#45 testProcport::@9/(byte*) print_char_cursor#47 )
  (byte) print_byte::b#8 ← phi( testProcport::@1/(byte) print_byte::b#0 testProcport::@11/(byte) print_byte::b#5 testProcport::@13/(byte) print_byte::b#6 testProcport::@15/(byte) print_byte::b#7 testProcport::@3/(byte) print_byte::b#1 testProcport::@5/(byte) print_byte::b#2 testProcport::@7/(byte) print_byte::b#3 testProcport::@9/(byte) print_byte::b#4 )
  (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (number) 4
  (byte) print_char::ch#0 ← *((byte[]) print_hextab + (byte~) print_byte::$0)
  call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  (byte) print_byte::b#9 ← phi( print_byte/(byte) print_byte::b#8 )
  (byte*) print_char_cursor#62 ← phi( print_byte/(byte*) print_char_cursor#9 )
  (byte*) print_char_cursor#5 ← (byte*) print_char_cursor#62
  (number~) print_byte::$2 ← (byte) print_byte::b#9 & (number) $f
  (byte) print_char::ch#1 ← *((byte[]) print_hextab + (number~) print_byte::$2)
  call print_char 
  to:print_byte::@2
print_byte::@2: scope:[print_byte]  from print_byte::@1
  (byte*) print_char_cursor#63 ← phi( print_byte::@1/(byte*) print_char_cursor#9 )
  (byte*) print_char_cursor#6 ← (byte*) print_char_cursor#63
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@2
  (byte*) print_char_cursor#64 ← phi( print_byte::@2/(byte*) print_char_cursor#6 )
  (byte*) print_char_cursor#7 ← (byte*) print_char_cursor#64
  return 
  to:@return

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_byte print_byte::@1
  (byte*) print_char_cursor#65 ← phi( print_byte/(byte*) print_char_cursor#116 print_byte::@1/(byte*) print_char_cursor#5 )
  (byte) print_char::ch#2 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 )
  *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2
  (byte*) print_char_cursor#8 ← ++ (byte*) print_char_cursor#65
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  (byte*) print_char_cursor#66 ← phi( print_char/(byte*) print_char_cursor#8 )
  (byte*) print_char_cursor#9 ← (byte*) print_char_cursor#66
  return 
  to:@return

(void()) print_cls()
print_cls: scope:[print_cls]  from main
  (byte*) print_screen#1 ← phi( main/(byte*) print_screen#3 )
  (void*) memset::str#0 ← (void*)(byte*) print_screen#1
  (byte) memset::c#0 ← (byte) ' '
  (word) memset::num#0 ← (number) $3e8
  call memset 
  (void*) memset::return#2 ← (void*) memset::return#1
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls
  (byte*) print_screen#2 ← phi( print_cls/(byte*) print_screen#1 )
  (byte*) print_line_cursor#3 ← (byte*) print_screen#2
  (byte*) print_char_cursor#10 ← (byte*) print_line_cursor#3
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  (byte*) print_char_cursor#67 ← phi( print_cls::@1/(byte*) print_char_cursor#10 )
  (byte*) print_line_cursor#37 ← phi( print_cls::@1/(byte*) print_line_cursor#3 )
  (byte*) print_line_cursor#4 ← (byte*) print_line_cursor#37
  (byte*) print_char_cursor#11 ← (byte*) print_char_cursor#67
  return 
  to:@return
@40: scope:[]  from @33
  (byte*) print_screen#5 ← phi( @33/(byte*) print_screen#6 )
  (byte*) print_char_cursor#123 ← phi( @33/(byte*) print_char_cursor#124 )
  (byte*) print_line_cursor#75 ← phi( @33/(byte*) print_line_cursor#76 )
  (byte*) BASIC_ROM ← ((byte*)) (number) $a000
  (byte*) KERNAL_ROM ← ((byte*)) (number) $e000
  (byte*) IO_RAM ← ((byte*)) (number) $d000
  (byte*) SCREEN ← ((byte*)) (number) $400
  to:@42

(void()) main()
main: scope:[main]  from @42
  (byte*) print_char_cursor#117 ← phi( @42/(byte*) print_char_cursor#120 )
  (byte*) print_line_cursor#68 ← phi( @42/(byte*) print_line_cursor#72 )
  (byte*) print_screen#3 ← phi( @42/(byte*) print_screen#4 )
  asm { sei  }
  *((byte*) PROCPORT_DDR) ← (byte) PROCPORT_DDR_MEMORY_MASK
  *((byte*) PROCPORT) ← (byte) PROCPORT_RAM_ALL
  *((byte*) BASIC_ROM) ← (number) $a0
  *((byte*) KERNAL_ROM) ← (number) $e0
  *((byte*) IO_RAM) ← (number) $d0
  *((byte*) PROCPORT_DDR) ← (byte) PROCPORT_DDR_MEMORY_MASK
  *((byte*) PROCPORT) ← (byte) PROCPORT_BASIC_KERNEL_IO
  *((byte*) IO_RAM) ← (number) $dd
  call print_cls 
  to:main::@7
main::@7: scope:[main]  from main
  (byte*) print_char_cursor#68 ← phi( main/(byte*) print_char_cursor#11 )
  (byte*) print_line_cursor#38 ← phi( main/(byte*) print_line_cursor#4 )
  (byte*) print_line_cursor#5 ← (byte*) print_line_cursor#38
  (byte*) print_char_cursor#12 ← (byte*) print_char_cursor#68
  (byte*) print_str::str#1 ← (const string) main::str
  call print_str 
  to:main::@8
main::@8: scope:[main]  from main::@7
  (byte*) print_line_cursor#69 ← phi( main::@7/(byte*) print_line_cursor#5 )
  (byte*) print_char_cursor#69 ← phi( main::@7/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#13 ← (byte*) print_char_cursor#69
  call print_ln 
  to:main::@9
main::@9: scope:[main]  from main::@8
  (byte*) print_char_cursor#70 ← phi( main::@8/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#39 ← phi( main::@8/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#6 ← (byte*) print_line_cursor#39
  (byte*) print_char_cursor#14 ← (byte*) print_char_cursor#70
  (byte) testProcport::ddr#0 ← (byte) PROCPORT_DDR_MEMORY_MASK
  (byte) testProcport::port#0 ← (byte) PROCPORT_RAM_ALL
  (byte) testProcport::ddr2#0 ← (byte) PROCPORT_DDR_MEMORY_MASK
  call testProcport 
  to:main::@10
main::@10: scope:[main]  from main::@9
  (byte*) print_line_cursor#40 ← phi( main::@9/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#71 ← phi( main::@9/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#15 ← (byte*) print_char_cursor#71
  (byte*) print_line_cursor#7 ← (byte*) print_line_cursor#40
  (byte) testProcport::ddr#1 ← (byte) PROCPORT_DDR_MEMORY_MASK
  (byte) testProcport::port#1 ← (byte) PROCPORT_RAM_IO
  (byte) testProcport::ddr2#1 ← (byte) PROCPORT_DDR_MEMORY_MASK
  call testProcport 
  to:main::@11
main::@11: scope:[main]  from main::@10
  (byte*) print_line_cursor#41 ← phi( main::@10/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#72 ← phi( main::@10/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#16 ← (byte*) print_char_cursor#72
  (byte*) print_line_cursor#8 ← (byte*) print_line_cursor#41
  (byte) testProcport::ddr#2 ← (byte) PROCPORT_DDR_MEMORY_MASK
  (byte) testProcport::port#2 ← (byte) PROCPORT_RAM_CHARROM
  (byte) testProcport::ddr2#2 ← (byte) PROCPORT_DDR_MEMORY_MASK
  call testProcport 
  to:main::@12
main::@12: scope:[main]  from main::@11
  (byte*) print_line_cursor#42 ← phi( main::@11/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#73 ← phi( main::@11/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#17 ← (byte*) print_char_cursor#73
  (byte*) print_line_cursor#9 ← (byte*) print_line_cursor#42
  (byte) testProcport::ddr#3 ← (byte) PROCPORT_DDR_MEMORY_MASK
  (byte) testProcport::port#3 ← (byte) PROCPORT_KERNEL_IO
  (byte) testProcport::ddr2#3 ← (byte) PROCPORT_DDR_MEMORY_MASK
  call testProcport 
  to:main::@13
main::@13: scope:[main]  from main::@12
  (byte*) print_line_cursor#43 ← phi( main::@12/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#74 ← phi( main::@12/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#18 ← (byte*) print_char_cursor#74
  (byte*) print_line_cursor#10 ← (byte*) print_line_cursor#43
  (byte) testProcport::ddr#4 ← (byte) PROCPORT_DDR_MEMORY_MASK
  (byte) testProcport::port#4 ← (byte) PROCPORT_BASIC_KERNEL_IO
  (byte) testProcport::ddr2#4 ← (byte) PROCPORT_DDR_MEMORY_MASK
  call testProcport 
  to:main::@14
main::@14: scope:[main]  from main::@13
  (byte*) print_line_cursor#44 ← phi( main::@13/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#75 ← phi( main::@13/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#19 ← (byte*) print_char_cursor#75
  (byte*) print_line_cursor#11 ← (byte*) print_line_cursor#44
  (byte) testProcport::ddr#5 ← (number) 0
  (byte) testProcport::port#5 ← (number) 0
  (byte) testProcport::ddr2#5 ← (number) 0
  call testProcport 
  to:main::@15
main::@15: scope:[main]  from main::@14
  (byte*) print_line_cursor#45 ← phi( main::@14/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#76 ← phi( main::@14/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#20 ← (byte*) print_char_cursor#76
  (byte*) print_line_cursor#12 ← (byte*) print_line_cursor#45
  (byte) testProcport::ddr#6 ← (number) $ff
  (byte) testProcport::port#6 ← (number) 0
  (byte) testProcport::ddr2#6 ← (number) 0
  call testProcport 
  to:main::@16
main::@16: scope:[main]  from main::@15
  (byte*) print_line_cursor#46 ← phi( main::@15/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#77 ← phi( main::@15/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#21 ← (byte*) print_char_cursor#77
  (byte*) print_line_cursor#13 ← (byte*) print_line_cursor#46
  (byte) testProcport::ddr#7 ← (number) $ff
  (byte) testProcport::port#7 ← (number) $ff
  (byte) testProcport::ddr2#7 ← (number) 0
  call testProcport 
  to:main::@17
main::@17: scope:[main]  from main::@16
  (byte*) print_line_cursor#47 ← phi( main::@16/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#78 ← phi( main::@16/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#22 ← (byte*) print_char_cursor#78
  (byte*) print_line_cursor#14 ← (byte*) print_line_cursor#47
  (byte) testProcport::ddr#8 ← (number) $ff
  (byte) testProcport::port#8 ← (number) 0
  (byte) testProcport::ddr2#8 ← (number) $ff
  call testProcport 
  to:main::@18
main::@18: scope:[main]  from main::@17
  (byte*) print_line_cursor#48 ← phi( main::@17/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#79 ← phi( main::@17/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#23 ← (byte*) print_char_cursor#79
  (byte*) print_line_cursor#15 ← (byte*) print_line_cursor#48
  (byte) testProcport::ddr#9 ← (number) $ff
  (byte) testProcport::port#9 ← (number) $55
  (byte) testProcport::ddr2#9 ← (number) $ff
  call testProcport 
  to:main::@19
main::@19: scope:[main]  from main::@18
  (byte*) print_line_cursor#49 ← phi( main::@18/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#80 ← phi( main::@18/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#24 ← (byte*) print_char_cursor#80
  (byte*) print_line_cursor#16 ← (byte*) print_line_cursor#49
  (byte) testProcport::ddr#10 ← (number) $ff
  (byte) testProcport::port#10 ← (number) $aa
  (byte) testProcport::ddr2#10 ← (number) $ff
  call testProcport 
  to:main::@20
main::@20: scope:[main]  from main::@19
  (byte*) print_line_cursor#50 ← phi( main::@19/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#81 ← phi( main::@19/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#25 ← (byte*) print_char_cursor#81
  (byte*) print_line_cursor#17 ← (byte*) print_line_cursor#50
  (byte) testProcport::ddr#11 ← (number) $ff
  (byte) testProcport::port#11 ← (number) $ff
  (byte) testProcport::ddr2#11 ← (number) $ff
  call testProcport 
  to:main::@21
main::@21: scope:[main]  from main::@20
  (byte*) print_line_cursor#51 ← phi( main::@20/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#82 ← phi( main::@20/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#26 ← (byte*) print_char_cursor#82
  (byte*) print_line_cursor#18 ← (byte*) print_line_cursor#51
  (byte) testProcport::ddr#12 ← (number) $55
  (byte) testProcport::port#12 ← (number) 0
  (byte) testProcport::ddr2#12 ← (number) $55
  call testProcport 
  to:main::@22
main::@22: scope:[main]  from main::@21
  (byte*) print_line_cursor#52 ← phi( main::@21/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#83 ← phi( main::@21/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#27 ← (byte*) print_char_cursor#83
  (byte*) print_line_cursor#19 ← (byte*) print_line_cursor#52
  (byte) testProcport::ddr#13 ← (number) $55
  (byte) testProcport::port#13 ← (number) $55
  (byte) testProcport::ddr2#13 ← (number) $55
  call testProcport 
  to:main::@23
main::@23: scope:[main]  from main::@22
  (byte*) print_line_cursor#53 ← phi( main::@22/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#84 ← phi( main::@22/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#28 ← (byte*) print_char_cursor#84
  (byte*) print_line_cursor#20 ← (byte*) print_line_cursor#53
  (byte) testProcport::ddr#14 ← (number) $55
  (byte) testProcport::port#14 ← (number) $ff
  (byte) testProcport::ddr2#14 ← (number) $55
  call testProcport 
  to:main::@24
main::@24: scope:[main]  from main::@23
  (byte*) print_line_cursor#54 ← phi( main::@23/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#85 ← phi( main::@23/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#29 ← (byte*) print_char_cursor#85
  (byte*) print_line_cursor#21 ← (byte*) print_line_cursor#54
  (byte) testProcport::ddr#15 ← (number) $aa
  (byte) testProcport::port#15 ← (number) 0
  (byte) testProcport::ddr2#15 ← (number) $aa
  call testProcport 
  to:main::@25
main::@25: scope:[main]  from main::@24
  (byte*) print_line_cursor#55 ← phi( main::@24/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#86 ← phi( main::@24/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#30 ← (byte*) print_char_cursor#86
  (byte*) print_line_cursor#22 ← (byte*) print_line_cursor#55
  (byte) testProcport::ddr#16 ← (number) $aa
  (byte) testProcport::port#16 ← (number) $ff
  (byte) testProcport::ddr2#16 ← (number) $aa
  call testProcport 
  to:main::@26
main::@26: scope:[main]  from main::@25
  (byte*) print_line_cursor#56 ← phi( main::@25/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#87 ← phi( main::@25/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#31 ← (byte*) print_char_cursor#87
  (byte*) print_line_cursor#23 ← (byte*) print_line_cursor#56
  (byte) testProcport::ddr#17 ← (number) $aa
  (byte) testProcport::port#17 ← (number) $aa
  (byte) testProcport::ddr2#17 ← (number) $aa
  call testProcport 
  to:main::@27
main::@27: scope:[main]  from main::@26
  (byte*) print_line_cursor#57 ← phi( main::@26/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#88 ← phi( main::@26/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#32 ← (byte*) print_char_cursor#88
  (byte*) print_line_cursor#24 ← (byte*) print_line_cursor#57
  (byte) testProcport::ddr#18 ← (number) $ff
  (byte) testProcport::port#18 ← (number) $d0
  (byte) testProcport::ddr2#18 ← (number) 0
  call testProcport 
  to:main::@28
main::@28: scope:[main]  from main::@27
  (byte*) print_line_cursor#58 ← phi( main::@27/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#89 ← phi( main::@27/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#33 ← (byte*) print_char_cursor#89
  (byte*) print_line_cursor#25 ← (byte*) print_line_cursor#58
  (byte) testProcport::ddr#19 ← (number) $ff
  (byte) testProcport::port#19 ← (number) $55
  (byte) testProcport::ddr2#19 ← (number) $55
  call testProcport 
  to:main::@29
main::@29: scope:[main]  from main::@28
  (byte*) print_line_cursor#59 ← phi( main::@28/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#90 ← phi( main::@28/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#34 ← (byte*) print_char_cursor#90
  (byte*) print_line_cursor#26 ← (byte*) print_line_cursor#59
  (byte) testProcport::ddr#20 ← (number) $17
  (byte) testProcport::port#20 ← (number) $15
  (byte) testProcport::ddr2#20 ← (number) $15
  call testProcport 
  to:main::@30
main::@30: scope:[main]  from main::@29
  (byte*) print_line_cursor#60 ← phi( main::@29/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#91 ← phi( main::@29/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#35 ← (byte*) print_char_cursor#91
  (byte*) print_line_cursor#27 ← (byte*) print_line_cursor#60
  (byte) testProcport::ddr#21 ← (number) $17
  (byte) testProcport::port#21 ← (number) $15
  (byte) testProcport::ddr2#21 ← (number) $17
  call testProcport 
  to:main::@31
main::@31: scope:[main]  from main::@30
  (byte*) print_line_cursor#61 ← phi( main::@30/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#92 ← phi( main::@30/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#36 ← (byte*) print_char_cursor#92
  (byte*) print_line_cursor#28 ← (byte*) print_line_cursor#61
  (byte) testProcport::ddr#22 ← (number) $17
  (byte) testProcport::port#22 ← (number) $17
  (byte) testProcport::ddr2#22 ← (number) $17
  call testProcport 
  to:main::@32
main::@32: scope:[main]  from main::@31
  (byte*) print_line_cursor#62 ← phi( main::@31/(byte*) print_line_cursor#32 )
  (byte*) print_char_cursor#93 ← phi( main::@31/(byte*) print_char_cursor#56 )
  (byte*) print_char_cursor#37 ← (byte*) print_char_cursor#93
  (byte*) print_line_cursor#29 ← (byte*) print_line_cursor#62
  asm { cli  }
  *((byte*) PROCPORT_DDR) ← (byte) PROCPORT_DDR_MEMORY_MASK
  *((byte*) PROCPORT) ← (byte) PROCPORT_BASIC_KERNEL_IO
  to:main::@1
main::@1: scope:[main]  from main::@2 main::@32
  (byte*) print_char_cursor#118 ← phi( main::@2/(byte*) print_char_cursor#122 main::@32/(byte*) print_char_cursor#37 )
  (byte*) print_line_cursor#70 ← phi( main::@2/(byte*) print_line_cursor#73 main::@32/(byte*) print_line_cursor#29 )
  if(true) goto main::@2
  to:main::@return
main::@2: scope:[main]  from main::@1
  (byte*) print_char_cursor#122 ← phi( main::@1/(byte*) print_char_cursor#118 )
  (byte*) print_line_cursor#73 ← phi( main::@1/(byte*) print_line_cursor#70 )
  (byte*~) main::$29 ← (byte*) SCREEN + (number) $3e7
  *((byte*~) main::$29) ← ++ *((byte*~) main::$29)
  to:main::@1
main::@return: scope:[main]  from main::@1
  (byte*) print_char_cursor#94 ← phi( main::@1/(byte*) print_char_cursor#118 )
  (byte*) print_line_cursor#63 ← phi( main::@1/(byte*) print_line_cursor#70 )
  (byte*) print_line_cursor#30 ← (byte*) print_line_cursor#63
  (byte*) print_char_cursor#38 ← (byte*) print_char_cursor#94
  return 
  to:@return

(void()) testProcport((byte) testProcport::ddr , (byte) testProcport::port , (byte) testProcport::ddr2)
testProcport: scope:[testProcport]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@20 main::@21 main::@22 main::@23 main::@24 main::@25 main::@26 main::@27 main::@28 main::@29 main::@30 main::@31 main::@9
  (byte*) print_line_cursor#91 ← phi( main::@10/(byte*) print_line_cursor#7 main::@11/(byte*) print_line_cursor#8 main::@12/(byte*) print_line_cursor#9 main::@13/(byte*) print_line_cursor#10 main::@14/(byte*) print_line_cursor#11 main::@15/(byte*) print_line_cursor#12 main::@16/(byte*) print_line_cursor#13 main::@17/(byte*) print_line_cursor#14 main::@18/(byte*) print_line_cursor#15 main::@19/(byte*) print_line_cursor#16 main::@20/(byte*) print_line_cursor#17 main::@21/(byte*) print_line_cursor#18 main::@22/(byte*) print_line_cursor#19 main::@23/(byte*) print_line_cursor#20 main::@24/(byte*) print_line_cursor#21 main::@25/(byte*) print_line_cursor#22 main::@26/(byte*) print_line_cursor#23 main::@27/(byte*) print_line_cursor#24 main::@28/(byte*) print_line_cursor#25 main::@29/(byte*) print_line_cursor#26 main::@30/(byte*) print_line_cursor#27 main::@31/(byte*) print_line_cursor#28 main::@9/(byte*) print_line_cursor#6 )
  (byte*) print_char_cursor#119 ← phi( main::@10/(byte*) print_char_cursor#15 main::@11/(byte*) print_char_cursor#16 main::@12/(byte*) print_char_cursor#17 main::@13/(byte*) print_char_cursor#18 main::@14/(byte*) print_char_cursor#19 main::@15/(byte*) print_char_cursor#20 main::@16/(byte*) print_char_cursor#21 main::@17/(byte*) print_char_cursor#22 main::@18/(byte*) print_char_cursor#23 main::@19/(byte*) print_char_cursor#24 main::@20/(byte*) print_char_cursor#25 main::@21/(byte*) print_char_cursor#26 main::@22/(byte*) print_char_cursor#27 main::@23/(byte*) print_char_cursor#28 main::@24/(byte*) print_char_cursor#29 main::@25/(byte*) print_char_cursor#30 main::@26/(byte*) print_char_cursor#31 main::@27/(byte*) print_char_cursor#32 main::@28/(byte*) print_char_cursor#33 main::@29/(byte*) print_char_cursor#34 main::@30/(byte*) print_char_cursor#35 main::@31/(byte*) print_char_cursor#36 main::@9/(byte*) print_char_cursor#14 )
  (byte) testProcport::ddr2#23 ← phi( main::@10/(byte) testProcport::ddr2#1 main::@11/(byte) testProcport::ddr2#2 main::@12/(byte) testProcport::ddr2#3 main::@13/(byte) testProcport::ddr2#4 main::@14/(byte) testProcport::ddr2#5 main::@15/(byte) testProcport::ddr2#6 main::@16/(byte) testProcport::ddr2#7 main::@17/(byte) testProcport::ddr2#8 main::@18/(byte) testProcport::ddr2#9 main::@19/(byte) testProcport::ddr2#10 main::@20/(byte) testProcport::ddr2#11 main::@21/(byte) testProcport::ddr2#12 main::@22/(byte) testProcport::ddr2#13 main::@23/(byte) testProcport::ddr2#14 main::@24/(byte) testProcport::ddr2#15 main::@25/(byte) testProcport::ddr2#16 main::@26/(byte) testProcport::ddr2#17 main::@27/(byte) testProcport::ddr2#18 main::@28/(byte) testProcport::ddr2#19 main::@29/(byte) testProcport::ddr2#20 main::@30/(byte) testProcport::ddr2#21 main::@31/(byte) testProcport::ddr2#22 main::@9/(byte) testProcport::ddr2#0 )
  (byte) testProcport::port#23 ← phi( main::@10/(byte) testProcport::port#1 main::@11/(byte) testProcport::port#2 main::@12/(byte) testProcport::port#3 main::@13/(byte) testProcport::port#4 main::@14/(byte) testProcport::port#5 main::@15/(byte) testProcport::port#6 main::@16/(byte) testProcport::port#7 main::@17/(byte) testProcport::port#8 main::@18/(byte) testProcport::port#9 main::@19/(byte) testProcport::port#10 main::@20/(byte) testProcport::port#11 main::@21/(byte) testProcport::port#12 main::@22/(byte) testProcport::port#13 main::@23/(byte) testProcport::port#14 main::@24/(byte) testProcport::port#15 main::@25/(byte) testProcport::port#16 main::@26/(byte) testProcport::port#17 main::@27/(byte) testProcport::port#18 main::@28/(byte) testProcport::port#19 main::@29/(byte) testProcport::port#20 main::@30/(byte) testProcport::port#21 main::@31/(byte) testProcport::port#22 main::@9/(byte) testProcport::port#0 )
  (byte) testProcport::ddr#23 ← phi( main::@10/(byte) testProcport::ddr#1 main::@11/(byte) testProcport::ddr#2 main::@12/(byte) testProcport::ddr#3 main::@13/(byte) testProcport::ddr#4 main::@14/(byte) testProcport::ddr#5 main::@15/(byte) testProcport::ddr#6 main::@16/(byte) testProcport::ddr#7 main::@17/(byte) testProcport::ddr#8 main::@18/(byte) testProcport::ddr#9 main::@19/(byte) testProcport::ddr#10 main::@20/(byte) testProcport::ddr#11 main::@21/(byte) testProcport::ddr#12 main::@22/(byte) testProcport::ddr#13 main::@23/(byte) testProcport::ddr#14 main::@24/(byte) testProcport::ddr#15 main::@25/(byte) testProcport::ddr#16 main::@26/(byte) testProcport::ddr#17 main::@27/(byte) testProcport::ddr#18 main::@28/(byte) testProcport::ddr#19 main::@29/(byte) testProcport::ddr#20 main::@30/(byte) testProcport::ddr#21 main::@31/(byte) testProcport::ddr#22 main::@9/(byte) testProcport::ddr#0 )
  *((byte*) PROCPORT_DDR) ← (number) $ff
  *((byte*) PROCPORT) ← (number) 0
  *((byte*) PROCPORT_DDR) ← (byte) testProcport::ddr#23
  *((byte*) PROCPORT) ← (byte) testProcport::port#23
  *((byte*) PROCPORT_DDR) ← (byte) testProcport::ddr2#23
  (byte*) print_str::str#2 ← (const string) testProcport::str
  call print_str 
  to:testProcport::@1
testProcport::@1: scope:[testProcport]  from testProcport
  (byte*) print_line_cursor#90 ← phi( testProcport/(byte*) print_line_cursor#91 )
  (byte) testProcport::ddr2#28 ← phi( testProcport/(byte) testProcport::ddr2#23 )
  (byte) testProcport::port#26 ← phi( testProcport/(byte) testProcport::port#23 )
  (byte) testProcport::ddr#24 ← phi( testProcport/(byte) testProcport::ddr#23 )
  (byte*) print_char_cursor#95 ← phi( testProcport/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#39 ← (byte*) print_char_cursor#95
  (byte) print_byte::b#0 ← (byte) testProcport::ddr#24
  call print_byte 
  to:testProcport::@2
testProcport::@2: scope:[testProcport]  from testProcport::@1
  (byte*) print_line_cursor#89 ← phi( testProcport::@1/(byte*) print_line_cursor#90 )
  (byte) testProcport::ddr2#27 ← phi( testProcport::@1/(byte) testProcport::ddr2#28 )
  (byte) testProcport::port#25 ← phi( testProcport::@1/(byte) testProcport::port#26 )
  (byte*) print_char_cursor#96 ← phi( testProcport::@1/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#40 ← (byte*) print_char_cursor#96
  (byte*) print_str::str#3 ← (const string) testProcport::str1
  call print_str 
  to:testProcport::@3
testProcport::@3: scope:[testProcport]  from testProcport::@2
  (byte*) print_line_cursor#88 ← phi( testProcport::@2/(byte*) print_line_cursor#89 )
  (byte) testProcport::ddr2#26 ← phi( testProcport::@2/(byte) testProcport::ddr2#27 )
  (byte) testProcport::port#24 ← phi( testProcport::@2/(byte) testProcport::port#25 )
  (byte*) print_char_cursor#97 ← phi( testProcport::@2/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#41 ← (byte*) print_char_cursor#97
  (byte) print_byte::b#1 ← (byte) testProcport::port#24
  call print_byte 
  to:testProcport::@4
testProcport::@4: scope:[testProcport]  from testProcport::@3
  (byte*) print_line_cursor#87 ← phi( testProcport::@3/(byte*) print_line_cursor#88 )
  (byte) testProcport::ddr2#25 ← phi( testProcport::@3/(byte) testProcport::ddr2#26 )
  (byte*) print_char_cursor#98 ← phi( testProcport::@3/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#42 ← (byte*) print_char_cursor#98
  (byte*) print_str::str#4 ← (const string) testProcport::str2
  call print_str 
  to:testProcport::@5
testProcport::@5: scope:[testProcport]  from testProcport::@4
  (byte*) print_line_cursor#86 ← phi( testProcport::@4/(byte*) print_line_cursor#87 )
  (byte) testProcport::ddr2#24 ← phi( testProcport::@4/(byte) testProcport::ddr2#25 )
  (byte*) print_char_cursor#99 ← phi( testProcport::@4/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#43 ← (byte*) print_char_cursor#99
  (byte) print_byte::b#2 ← (byte) testProcport::ddr2#24
  call print_byte 
  to:testProcport::@6
testProcport::@6: scope:[testProcport]  from testProcport::@5
  (byte*) print_line_cursor#85 ← phi( testProcport::@5/(byte*) print_line_cursor#86 )
  (byte*) print_char_cursor#100 ← phi( testProcport::@5/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#44 ← (byte*) print_char_cursor#100
  (byte*) print_str::str#5 ← (const string) testProcport::str3
  call print_str 
  to:testProcport::@7
testProcport::@7: scope:[testProcport]  from testProcport::@6
  (byte*) print_line_cursor#84 ← phi( testProcport::@6/(byte*) print_line_cursor#85 )
  (byte*) print_char_cursor#101 ← phi( testProcport::@6/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#45 ← (byte*) print_char_cursor#101
  (byte) print_byte::b#3 ← *((byte*) PROCPORT_DDR)
  call print_byte 
  to:testProcport::@8
testProcport::@8: scope:[testProcport]  from testProcport::@7
  (byte*) print_line_cursor#83 ← phi( testProcport::@7/(byte*) print_line_cursor#84 )
  (byte*) print_char_cursor#102 ← phi( testProcport::@7/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#46 ← (byte*) print_char_cursor#102
  (byte*) print_str::str#6 ← (const string) testProcport::str4
  call print_str 
  to:testProcport::@9
testProcport::@9: scope:[testProcport]  from testProcport::@8
  (byte*) print_line_cursor#82 ← phi( testProcport::@8/(byte*) print_line_cursor#83 )
  (byte*) print_char_cursor#103 ← phi( testProcport::@8/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#47 ← (byte*) print_char_cursor#103
  (byte) print_byte::b#4 ← *((byte*) PROCPORT)
  call print_byte 
  to:testProcport::@10
testProcport::@10: scope:[testProcport]  from testProcport::@9
  (byte*) print_line_cursor#81 ← phi( testProcport::@9/(byte*) print_line_cursor#82 )
  (byte*) print_char_cursor#104 ← phi( testProcport::@9/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#48 ← (byte*) print_char_cursor#104
  (byte*) print_str::str#7 ← (const string) testProcport::str5
  call print_str 
  to:testProcport::@11
testProcport::@11: scope:[testProcport]  from testProcport::@10
  (byte*) print_line_cursor#80 ← phi( testProcport::@10/(byte*) print_line_cursor#81 )
  (byte*) print_char_cursor#105 ← phi( testProcport::@10/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#49 ← (byte*) print_char_cursor#105
  (byte) print_byte::b#5 ← *((byte*) BASIC_ROM)
  call print_byte 
  to:testProcport::@12
testProcport::@12: scope:[testProcport]  from testProcport::@11
  (byte*) print_line_cursor#79 ← phi( testProcport::@11/(byte*) print_line_cursor#80 )
  (byte*) print_char_cursor#106 ← phi( testProcport::@11/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#50 ← (byte*) print_char_cursor#106
  (byte*) print_str::str#8 ← (const string) testProcport::str6
  call print_str 
  to:testProcport::@13
testProcport::@13: scope:[testProcport]  from testProcport::@12
  (byte*) print_line_cursor#78 ← phi( testProcport::@12/(byte*) print_line_cursor#79 )
  (byte*) print_char_cursor#107 ← phi( testProcport::@12/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#51 ← (byte*) print_char_cursor#107
  (byte) print_byte::b#6 ← *((byte*) IO_RAM)
  call print_byte 
  to:testProcport::@14
testProcport::@14: scope:[testProcport]  from testProcport::@13
  (byte*) print_line_cursor#77 ← phi( testProcport::@13/(byte*) print_line_cursor#78 )
  (byte*) print_char_cursor#108 ← phi( testProcport::@13/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#52 ← (byte*) print_char_cursor#108
  (byte*) print_str::str#9 ← (const string) testProcport::str7
  call print_str 
  to:testProcport::@15
testProcport::@15: scope:[testProcport]  from testProcport::@14
  (byte*) print_line_cursor#74 ← phi( testProcport::@14/(byte*) print_line_cursor#77 )
  (byte*) print_char_cursor#109 ← phi( testProcport::@14/(byte*) print_char_cursor#2 )
  (byte*) print_char_cursor#53 ← (byte*) print_char_cursor#109
  (byte) print_byte::b#7 ← *((byte*) KERNAL_ROM)
  call print_byte 
  to:testProcport::@16
testProcport::@16: scope:[testProcport]  from testProcport::@15
  (byte*) print_line_cursor#71 ← phi( testProcport::@15/(byte*) print_line_cursor#74 )
  (byte*) print_char_cursor#110 ← phi( testProcport::@15/(byte*) print_char_cursor#7 )
  (byte*) print_char_cursor#54 ← (byte*) print_char_cursor#110
  call print_ln 
  to:testProcport::@17
testProcport::@17: scope:[testProcport]  from testProcport::@16
  (byte*) print_char_cursor#111 ← phi( testProcport::@16/(byte*) print_char_cursor#4 )
  (byte*) print_line_cursor#64 ← phi( testProcport::@16/(byte*) print_line_cursor#2 )
  (byte*) print_line_cursor#31 ← (byte*) print_line_cursor#64
  (byte*) print_char_cursor#55 ← (byte*) print_char_cursor#111
  to:testProcport::@return
testProcport::@return: scope:[testProcport]  from testProcport::@17
  (byte*) print_line_cursor#65 ← phi( testProcport::@17/(byte*) print_line_cursor#31 )
  (byte*) print_char_cursor#112 ← phi( testProcport::@17/(byte*) print_char_cursor#55 )
  (byte*) print_char_cursor#56 ← (byte*) print_char_cursor#112
  (byte*) print_line_cursor#32 ← (byte*) print_line_cursor#65
  return 
  to:@return
@42: scope:[]  from @40
  (byte*) print_screen#4 ← phi( @40/(byte*) print_screen#5 )
  (byte*) print_char_cursor#120 ← phi( @40/(byte*) print_char_cursor#123 )
  (byte*) print_line_cursor#72 ← phi( @40/(byte*) print_line_cursor#75 )
  call main 
  to:@43
@43: scope:[]  from @42
  (byte*) print_char_cursor#113 ← phi( @42/(byte*) print_char_cursor#38 )
  (byte*) print_line_cursor#66 ← phi( @42/(byte*) print_line_cursor#30 )
  (byte*) print_line_cursor#33 ← (byte*) print_line_cursor#66
  (byte*) print_char_cursor#57 ← (byte*) print_char_cursor#113
  to:@end
@end: scope:[]  from @43

SYMBOL TABLE SSA
(const string) $0 = (string) "0123456789abcdef"z
(label) @16
(label) @33
(label) @40
(label) @42
(label) @43
(label) @begin
(label) @end
(byte*) BASIC_ROM
(byte*) IO_RAM
(byte*) KERNAL_ROM
(byte*) PROCPORT
(byte) PROCPORT_BASIC_KERNEL_IO
(byte*) PROCPORT_DDR
(byte) PROCPORT_DDR_MEMORY_MASK
(byte) PROCPORT_KERNEL_IO
(byte) PROCPORT_RAM_ALL
(byte) PROCPORT_RAM_CHARROM
(byte) PROCPORT_RAM_IO
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(byte*) SCREEN
(void()) main()
(byte*~) main::$29
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@30
(label) main::@31
(label) main::@32
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(const string) main::str = (string) "ddr port ddr2 $00 $01 $a000 $d000 $e000"
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(bool~) memset::$0
(bool~) memset::$1
(byte*~) memset::$2
(byte*~) memset::$3
(bool~) memset::$4
(label) memset::@1
(label) memset::@2
(label) memset::@4
(label) memset::@5
(label) memset::@return
(byte) memset::c
(byte) memset::c#0
(byte) memset::c#1
(byte) memset::c#2
(byte) memset::c#3
(byte) memset::c#4
(byte*) memset::dst
(byte*) memset::dst#0
(byte*) memset::dst#1
(byte*) memset::dst#2
(byte*) memset::dst#3
(byte*) memset::end
(byte*) memset::end#0
(byte*) memset::end#1
(byte*) memset::end#2
(word) memset::num
(word) memset::num#0
(word) memset::num#1
(word) memset::num#2
(void*) memset::return
(void*) memset::return#0
(void*) memset::return#1
(void*) memset::return#2
(void*) memset::return#3
(void*) memset::str
(void*) memset::str#0
(void*) memset::str#1
(void*) memset::str#2
(void*) memset::str#3
(void*) memset::str#4
(void*) memset::str#5
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(number~) print_byte::$2
(label) print_byte::@1
(label) print_byte::@2
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0
(byte) print_byte::b#1
(byte) print_byte::b#2
(byte) print_byte::b#3
(byte) print_byte::b#4
(byte) print_byte::b#5
(byte) print_byte::b#6
(byte) print_byte::b#7
(byte) print_byte::b#8
(byte) print_byte::b#9
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0
(byte) print_char::ch#1
(byte) print_char::ch#2
(byte*) print_char_cursor
(byte*) print_char_cursor#0
(byte*) print_char_cursor#1
(byte*) print_char_cursor#10
(byte*) print_char_cursor#100
(byte*) print_char_cursor#101
(byte*) print_char_cursor#102
(byte*) print_char_cursor#103
(byte*) print_char_cursor#104
(byte*) print_char_cursor#105
(byte*) print_char_cursor#106
(byte*) print_char_cursor#107
(byte*) print_char_cursor#108
(byte*) print_char_cursor#109
(byte*) print_char_cursor#11
(byte*) print_char_cursor#110
(byte*) print_char_cursor#111
(byte*) print_char_cursor#112
(byte*) print_char_cursor#113
(byte*) print_char_cursor#114
(byte*) print_char_cursor#115
(byte*) print_char_cursor#116
(byte*) print_char_cursor#117
(byte*) print_char_cursor#118
(byte*) print_char_cursor#119
(byte*) print_char_cursor#12
(byte*) print_char_cursor#120
(byte*) print_char_cursor#121
(byte*) print_char_cursor#122
(byte*) print_char_cursor#123
(byte*) print_char_cursor#124
(byte*) print_char_cursor#13
(byte*) print_char_cursor#14
(byte*) print_char_cursor#15
(byte*) print_char_cursor#16
(byte*) print_char_cursor#17
(byte*) print_char_cursor#18
(byte*) print_char_cursor#19
(byte*) print_char_cursor#2
(byte*) print_char_cursor#20
(byte*) print_char_cursor#21
(byte*) print_char_cursor#22
(byte*) print_char_cursor#23
(byte*) print_char_cursor#24
(byte*) print_char_cursor#25
(byte*) print_char_cursor#26
(byte*) print_char_cursor#27
(byte*) print_char_cursor#28
(byte*) print_char_cursor#29
(byte*) print_char_cursor#3
(byte*) print_char_cursor#30
(byte*) print_char_cursor#31
(byte*) print_char_cursor#32
(byte*) print_char_cursor#33
(byte*) print_char_cursor#34
(byte*) print_char_cursor#35
(byte*) print_char_cursor#36
(byte*) print_char_cursor#37
(byte*) print_char_cursor#38
(byte*) print_char_cursor#39
(byte*) print_char_cursor#4
(byte*) print_char_cursor#40
(byte*) print_char_cursor#41
(byte*) print_char_cursor#42
(byte*) print_char_cursor#43
(byte*) print_char_cursor#44
(byte*) print_char_cursor#45
(byte*) print_char_cursor#46
(byte*) print_char_cursor#47
(byte*) print_char_cursor#48
(byte*) print_char_cursor#49
(byte*) print_char_cursor#5
(byte*) print_char_cursor#50
(byte*) print_char_cursor#51
(byte*) print_char_cursor#52
(byte*) print_char_cursor#53
(byte*) print_char_cursor#54
(byte*) print_char_cursor#55
(byte*) print_char_cursor#56
(byte*) print_char_cursor#57
(byte*) print_char_cursor#58
(byte*) print_char_cursor#59
(byte*) print_char_cursor#6
(byte*) print_char_cursor#60
(byte*) print_char_cursor#61
(byte*) print_char_cursor#62
(byte*) print_char_cursor#63
(byte*) print_char_cursor#64
(byte*) print_char_cursor#65
(byte*) print_char_cursor#66
(byte*) print_char_cursor#67
(byte*) print_char_cursor#68
(byte*) print_char_cursor#69
(byte*) print_char_cursor#7
(byte*) print_char_cursor#70
(byte*) print_char_cursor#71
(byte*) print_char_cursor#72
(byte*) print_char_cursor#73
(byte*) print_char_cursor#74
(byte*) print_char_cursor#75
(byte*) print_char_cursor#76
(byte*) print_char_cursor#77
(byte*) print_char_cursor#78
(byte*) print_char_cursor#79
(byte*) print_char_cursor#8
(byte*) print_char_cursor#80
(byte*) print_char_cursor#81
(byte*) print_char_cursor#82
(byte*) print_char_cursor#83
(byte*) print_char_cursor#84
(byte*) print_char_cursor#85
(byte*) print_char_cursor#86
(byte*) print_char_cursor#87
(byte*) print_char_cursor#88
(byte*) print_char_cursor#89
(byte*) print_char_cursor#9
(byte*) print_char_cursor#90
(byte*) print_char_cursor#91
(byte*) print_char_cursor#92
(byte*) print_char_cursor#93
(byte*) print_char_cursor#94
(byte*) print_char_cursor#95
(byte*) print_char_cursor#96
(byte*) print_char_cursor#97
(byte*) print_char_cursor#98
(byte*) print_char_cursor#99
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte[]) print_hextab
(byte*) print_line_cursor
(byte*) print_line_cursor#0
(byte*) print_line_cursor#1
(byte*) print_line_cursor#10
(byte*) print_line_cursor#11
(byte*) print_line_cursor#12
(byte*) print_line_cursor#13
(byte*) print_line_cursor#14
(byte*) print_line_cursor#15
(byte*) print_line_cursor#16
(byte*) print_line_cursor#17
(byte*) print_line_cursor#18
(byte*) print_line_cursor#19
(byte*) print_line_cursor#2
(byte*) print_line_cursor#20
(byte*) print_line_cursor#21
(byte*) print_line_cursor#22
(byte*) print_line_cursor#23
(byte*) print_line_cursor#24
(byte*) print_line_cursor#25
(byte*) print_line_cursor#26
(byte*) print_line_cursor#27
(byte*) print_line_cursor#28
(byte*) print_line_cursor#29
(byte*) print_line_cursor#3
(byte*) print_line_cursor#30
(byte*) print_line_cursor#31
(byte*) print_line_cursor#32
(byte*) print_line_cursor#33
(byte*) print_line_cursor#34
(byte*) print_line_cursor#35
(byte*) print_line_cursor#36
(byte*) print_line_cursor#37
(byte*) print_line_cursor#38
(byte*) print_line_cursor#39
(byte*) print_line_cursor#4
(byte*) print_line_cursor#40
(byte*) print_line_cursor#41
(byte*) print_line_cursor#42
(byte*) print_line_cursor#43
(byte*) print_line_cursor#44
(byte*) print_line_cursor#45
(byte*) print_line_cursor#46
(byte*) print_line_cursor#47
(byte*) print_line_cursor#48
(byte*) print_line_cursor#49
(byte*) print_line_cursor#5
(byte*) print_line_cursor#50
(byte*) print_line_cursor#51
(byte*) print_line_cursor#52
(byte*) print_line_cursor#53
(byte*) print_line_cursor#54
(byte*) print_line_cursor#55
(byte*) print_line_cursor#56
(byte*) print_line_cursor#57
(byte*) print_line_cursor#58
(byte*) print_line_cursor#59
(byte*) print_line_cursor#6
(byte*) print_line_cursor#60
(byte*) print_line_cursor#61
(byte*) print_line_cursor#62
(byte*) print_line_cursor#63
(byte*) print_line_cursor#64
(byte*) print_line_cursor#65
(byte*) print_line_cursor#66
(byte*) print_line_cursor#67
(byte*) print_line_cursor#68
(byte*) print_line_cursor#69
(byte*) print_line_cursor#7
(byte*) print_line_cursor#70
(byte*) print_line_cursor#71
(byte*) print_line_cursor#72
(byte*) print_line_cursor#73
(byte*) print_line_cursor#74
(byte*) print_line_cursor#75
(byte*) print_line_cursor#76
(byte*) print_line_cursor#77
(byte*) print_line_cursor#78
(byte*) print_line_cursor#79
(byte*) print_line_cursor#8
(byte*) print_line_cursor#80
(byte*) print_line_cursor#81
(byte*) print_line_cursor#82
(byte*) print_line_cursor#83
(byte*) print_line_cursor#84
(byte*) print_line_cursor#85
(byte*) print_line_cursor#86
(byte*) print_line_cursor#87
(byte*) print_line_cursor#88
(byte*) print_line_cursor#89
(byte*) print_line_cursor#9
(byte*) print_line_cursor#90
(byte*) print_line_cursor#91
(void()) print_ln()
(byte*~) print_ln::$0
(bool~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(byte*) print_screen
(byte*) print_screen#0
(byte*) print_screen#1
(byte*) print_screen#2
(byte*) print_screen#3
(byte*) print_screen#4
(byte*) print_screen#5
(byte*) print_screen#6
(void()) print_str((byte*) print_str::str)
(bool~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0
(byte*) print_str::str#1
(byte*) print_str::str#10
(byte*) print_str::str#11
(byte*) print_str::str#12
(byte*) print_str::str#2
(byte*) print_str::str#3
(byte*) print_str::str#4
(byte*) print_str::str#5
(byte*) print_str::str#6
(byte*) print_str::str#7
(byte*) print_str::str#8
(byte*) print_str::str#9
(void()) testProcport((byte) testProcport::ddr , (byte) testProcport::port , (byte) testProcport::ddr2)
(label) testProcport::@1
(label) testProcport::@10
(label) testProcport::@11
(label) testProcport::@12
(label) testProcport::@13
(label) testProcport::@14
(label) testProcport::@15
(label) testProcport::@16
(label) testProcport::@17
(label) testProcport::@2
(label) testProcport::@3
(label) testProcport::@4
(label) testProcport::@5
(label) testProcport::@6
(label) testProcport::@7
(label) testProcport::@8
(label) testProcport::@9
(label) testProcport::@return
(byte) testProcport::ddr
(byte) testProcport::ddr#0
(byte) testProcport::ddr#1
(byte) testProcport::ddr#10
(byte) testProcport::ddr#11
(byte) testProcport::ddr#12
(byte) testProcport::ddr#13
(byte) testProcport::ddr#14
(byte) testProcport::ddr#15
(byte) testProcport::ddr#16
(byte) testProcport::ddr#17
(byte) testProcport::ddr#18
(byte) testProcport::ddr#19
(byte) testProcport::ddr#2
(byte) testProcport::ddr#20
(byte) testProcport::ddr#21
(byte) testProcport::ddr#22
(byte) testProcport::ddr#23
(byte) testProcport::ddr#24
(byte) testProcport::ddr#3
(byte) testProcport::ddr#4
(byte) testProcport::ddr#5
(byte) testProcport::ddr#6
(byte) testProcport::ddr#7
(byte) testProcport::ddr#8
(byte) testProcport::ddr#9
(byte) testProcport::ddr2
(byte) testProcport::ddr2#0
(byte) testProcport::ddr2#1
(byte) testProcport::ddr2#10
(byte) testProcport::ddr2#11
(byte) testProcport::ddr2#12
(byte) testProcport::ddr2#13
(byte) testProcport::ddr2#14
(byte) testProcport::ddr2#15
(byte) testProcport::ddr2#16
(byte) testProcport::ddr2#17
(byte) testProcport::ddr2#18
(byte) testProcport::ddr2#19
(byte) testProcport::ddr2#2
(byte) testProcport::ddr2#20
(byte) testProcport::ddr2#21
(byte) testProcport::ddr2#22
(byte) testProcport::ddr2#23
(byte) testProcport::ddr2#24
(byte) testProcport::ddr2#25
(byte) testProcport::ddr2#26
(byte) testProcport::ddr2#27
(byte) testProcport::ddr2#28
(byte) testProcport::ddr2#3
(byte) testProcport::ddr2#4
(byte) testProcport::ddr2#5
(byte) testProcport::ddr2#6
(byte) testProcport::ddr2#7
(byte) testProcport::ddr2#8
(byte) testProcport::ddr2#9
(byte) testProcport::port
(byte) testProcport::port#0
(byte) testProcport::port#1
(byte) testProcport::port#10
(byte) testProcport::port#11
(byte) testProcport::port#12
(byte) testProcport::port#13
(byte) testProcport::port#14
(byte) testProcport::port#15
(byte) testProcport::port#16
(byte) testProcport::port#17
(byte) testProcport::port#18
(byte) testProcport::port#19
(byte) testProcport::port#2
(byte) testProcport::port#20
(byte) testProcport::port#21
(byte) testProcport::port#22
(byte) testProcport::port#23
(byte) testProcport::port#24
(byte) testProcport::port#25
(byte) testProcport::port#26
(byte) testProcport::port#3
(byte) testProcport::port#4
(byte) testProcport::port#5
(byte) testProcport::port#6
(byte) testProcport::port#7
(byte) testProcport::port#8
(byte) testProcport::port#9
(const string) testProcport::str = (string) " "
(const string) testProcport::str1 = (string) "   "
(const string) testProcport::str2 = (string) "   "
(const string) testProcport::str3 = (string) "  "
(const string) testProcport::str4 = (string) "  "
(const string) testProcport::str5 = (string) "    "
(const string) testProcport::str6 = (string) "    "
(const string) testProcport::str7 = (string) "    "

Adding number conversion cast (unumber) 7 in (byte) PROCPORT_DDR_MEMORY_MASK ← (number) 7
Adding number conversion cast (unumber) 0 in (byte) PROCPORT_RAM_ALL ← (number) 0
Adding number conversion cast (unumber) 5 in (byte) PROCPORT_RAM_IO ← (number) 5
Adding number conversion cast (unumber) 1 in (byte) PROCPORT_RAM_CHARROM ← (number) 1
Adding number conversion cast (unumber) 6 in (byte) PROCPORT_KERNEL_IO ← (number) 6
Adding number conversion cast (unumber) 7 in (byte) PROCPORT_BASIC_KERNEL_IO ← (number) 7
Adding number conversion cast (unumber) 0 in (bool~) memset::$0 ← (word) memset::num#1 > (number) 0
Adding number conversion cast (unumber) 0 in (bool~) print_str::$0 ← (number) 0 != *((byte*) print_str::str#10)
Adding number conversion cast (unumber) $28 in (byte*~) print_ln::$0 ← (byte*) print_line_cursor#34 + (number) $28
Adding number conversion cast (unumber) 4 in (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (number) 4
Adding number conversion cast (unumber) $f in (number~) print_byte::$2 ← (byte) print_byte::b#9 & (number) $f
Adding number conversion cast (unumber) print_byte::$2 in (number~) print_byte::$2 ← (byte) print_byte::b#9 & (unumber)(number) $f
Adding number conversion cast (unumber) $3e8 in (word) memset::num#0 ← (number) $3e8
Adding number conversion cast (unumber) $a0 in *((byte*) BASIC_ROM) ← (number) $a0
Adding number conversion cast (unumber) $e0 in *((byte*) KERNAL_ROM) ← (number) $e0
Adding number conversion cast (unumber) $d0 in *((byte*) IO_RAM) ← (number) $d0
Adding number conversion cast (unumber) $dd in *((byte*) IO_RAM) ← (number) $dd
Adding number conversion cast (unumber) 0 in (byte) testProcport::ddr#5 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) testProcport::port#5 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) testProcport::ddr2#5 ← (number) 0
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#6 ← (number) $ff
Adding number conversion cast (unumber) 0 in (byte) testProcport::port#6 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) testProcport::ddr2#6 ← (number) 0
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#7 ← (number) $ff
Adding number conversion cast (unumber) $ff in (byte) testProcport::port#7 ← (number) $ff
Adding number conversion cast (unumber) 0 in (byte) testProcport::ddr2#7 ← (number) 0
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#8 ← (number) $ff
Adding number conversion cast (unumber) 0 in (byte) testProcport::port#8 ← (number) 0
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr2#8 ← (number) $ff
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#9 ← (number) $ff
Adding number conversion cast (unumber) $55 in (byte) testProcport::port#9 ← (number) $55
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr2#9 ← (number) $ff
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#10 ← (number) $ff
Adding number conversion cast (unumber) $aa in (byte) testProcport::port#10 ← (number) $aa
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr2#10 ← (number) $ff
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#11 ← (number) $ff
Adding number conversion cast (unumber) $ff in (byte) testProcport::port#11 ← (number) $ff
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr2#11 ← (number) $ff
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr#12 ← (number) $55
Adding number conversion cast (unumber) 0 in (byte) testProcport::port#12 ← (number) 0
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr2#12 ← (number) $55
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr#13 ← (number) $55
Adding number conversion cast (unumber) $55 in (byte) testProcport::port#13 ← (number) $55
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr2#13 ← (number) $55
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr#14 ← (number) $55
Adding number conversion cast (unumber) $ff in (byte) testProcport::port#14 ← (number) $ff
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr2#14 ← (number) $55
Adding number conversion cast (unumber) $aa in (byte) testProcport::ddr#15 ← (number) $aa
Adding number conversion cast (unumber) 0 in (byte) testProcport::port#15 ← (number) 0
Adding number conversion cast (unumber) $aa in (byte) testProcport::ddr2#15 ← (number) $aa
Adding number conversion cast (unumber) $aa in (byte) testProcport::ddr#16 ← (number) $aa
Adding number conversion cast (unumber) $ff in (byte) testProcport::port#16 ← (number) $ff
Adding number conversion cast (unumber) $aa in (byte) testProcport::ddr2#16 ← (number) $aa
Adding number conversion cast (unumber) $aa in (byte) testProcport::ddr#17 ← (number) $aa
Adding number conversion cast (unumber) $aa in (byte) testProcport::port#17 ← (number) $aa
Adding number conversion cast (unumber) $aa in (byte) testProcport::ddr2#17 ← (number) $aa
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#18 ← (number) $ff
Adding number conversion cast (unumber) $d0 in (byte) testProcport::port#18 ← (number) $d0
Adding number conversion cast (unumber) 0 in (byte) testProcport::ddr2#18 ← (number) 0
Adding number conversion cast (unumber) $ff in (byte) testProcport::ddr#19 ← (number) $ff
Adding number conversion cast (unumber) $55 in (byte) testProcport::port#19 ← (number) $55
Adding number conversion cast (unumber) $55 in (byte) testProcport::ddr2#19 ← (number) $55
Adding number conversion cast (unumber) $17 in (byte) testProcport::ddr#20 ← (number) $17
Adding number conversion cast (unumber) $15 in (byte) testProcport::port#20 ← (number) $15
Adding number conversion cast (unumber) $15 in (byte) testProcport::ddr2#20 ← (number) $15
Adding number conversion cast (unumber) $17 in (byte) testProcport::ddr#21 ← (number) $17
Adding number conversion cast (unumber) $15 in (byte) testProcport::port#21 ← (number) $15
Adding number conversion cast (unumber) $17 in (byte) testProcport::ddr2#21 ← (number) $17
Adding number conversion cast (unumber) $17 in (byte) testProcport::ddr#22 ← (number) $17
Adding number conversion cast (unumber) $17 in (byte) testProcport::port#22 ← (number) $17
Adding number conversion cast (unumber) $17 in (byte) testProcport::ddr2#22 ← (number) $17
Adding number conversion cast (unumber) $3e7 in (byte*~) main::$29 ← (byte*) SCREEN + (number) $3e7
Adding number conversion cast (unumber) $ff in *((byte*) PROCPORT_DDR) ← (number) $ff
Adding number conversion cast (unumber) 0 in *((byte*) PROCPORT) ← (number) 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast (byte*) PROCPORT_DDR ← (byte*)(number) 0
Inlining cast (byte) PROCPORT_DDR_MEMORY_MASK ← (unumber)(number) 7
Inlining cast (byte*) PROCPORT ← (byte*)(number) 1
Inlining cast (byte) PROCPORT_RAM_ALL ← (unumber)(number) 0
Inlining cast (byte) PROCPORT_RAM_IO ← (unumber)(number) 5
Inlining cast (byte) PROCPORT_RAM_CHARROM ← (unumber)(number) 1
Inlining cast (byte) PROCPORT_KERNEL_IO ← (unumber)(number) 6
Inlining cast (byte) PROCPORT_BASIC_KERNEL_IO ← (unumber)(number) 7
Inlining cast (byte*~) memset::$2 ← (byte*)(void*) memset::str#2
Inlining cast (byte*) memset::dst#0 ← (byte*)(void*) memset::str#2
Inlining cast (byte*) print_screen#0 ← (byte*)(number) $400
Inlining cast (word) memset::num#0 ← (unumber)(number) $3e8
Inlining cast (byte*) BASIC_ROM ← (byte*)(number) $a000
Inlining cast (byte*) KERNAL_ROM ← (byte*)(number) $e000
Inlining cast (byte*) IO_RAM ← (byte*)(number) $d000
Inlining cast (byte*) SCREEN ← (byte*)(number) $400
Inlining cast *((byte*) BASIC_ROM) ← (unumber)(number) $a0
Inlining cast *((byte*) KERNAL_ROM) ← (unumber)(number) $e0
Inlining cast *((byte*) IO_RAM) ← (unumber)(number) $d0
Inlining cast *((byte*) IO_RAM) ← (unumber)(number) $dd
Inlining cast (byte) testProcport::ddr#5 ← (unumber)(number) 0
Inlining cast (byte) testProcport::port#5 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr2#5 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr#6 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#6 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr2#6 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr#7 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#7 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr2#7 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr#8 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#8 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr2#8 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr#9 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#9 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr2#9 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr#10 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#10 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::ddr2#10 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr#11 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#11 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr2#11 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr#12 ← (unumber)(number) $55
Inlining cast (byte) testProcport::port#12 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr2#12 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr#13 ← (unumber)(number) $55
Inlining cast (byte) testProcport::port#13 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr2#13 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr#14 ← (unumber)(number) $55
Inlining cast (byte) testProcport::port#14 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr2#14 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr#15 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::port#15 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr2#15 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::ddr#16 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::port#16 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::ddr2#16 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::ddr#17 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::port#17 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::ddr2#17 ← (unumber)(number) $aa
Inlining cast (byte) testProcport::ddr#18 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#18 ← (unumber)(number) $d0
Inlining cast (byte) testProcport::ddr2#18 ← (unumber)(number) 0
Inlining cast (byte) testProcport::ddr#19 ← (unumber)(number) $ff
Inlining cast (byte) testProcport::port#19 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr2#19 ← (unumber)(number) $55
Inlining cast (byte) testProcport::ddr#20 ← (unumber)(number) $17
Inlining cast (byte) testProcport::port#20 ← (unumber)(number) $15
Inlining cast (byte) testProcport::ddr2#20 ← (unumber)(number) $15
Inlining cast (byte) testProcport::ddr#21 ← (unumber)(number) $17
Inlining cast (byte) testProcport::port#21 ← (unumber)(number) $15
Inlining cast (byte) testProcport::ddr2#21 ← (unumber)(number) $17
Inlining cast (byte) testProcport::ddr#22 ← (unumber)(number) $17
Inlining cast (byte) testProcport::port#22 ← (unumber)(number) $17
Inlining cast (byte) testProcport::ddr2#22 ← (unumber)(number) $17
Inlining cast *((byte*) PROCPORT_DDR) ← (unumber)(number) $ff
Inlining cast *((byte*) PROCPORT) ← (unumber)(number) 0
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 0
Simplifying constant integer cast 7
Simplifying constant pointer cast (byte*) 1
Simplifying constant integer cast 0
Simplifying constant integer cast 5
Simplifying constant integer cast 1
Simplifying constant integer cast 6
Simplifying constant integer cast 7
Simplifying constant integer cast 0
Simplifying constant pointer cast (byte*) 1024
Simplifying constant integer cast 0
Simplifying constant integer cast $28
Simplifying constant integer cast 4
Simplifying constant integer cast $f
Simplifying constant integer cast $3e8
Simplifying constant pointer cast (byte*) 40960
Simplifying constant pointer cast (byte*) 57344
Simplifying constant pointer cast (byte*) 53248
Simplifying constant pointer cast (byte*) 1024
Simplifying constant integer cast $a0
Simplifying constant integer cast $e0
Simplifying constant integer cast $d0
Simplifying constant integer cast $dd
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast $55
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast $aa
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast $ff
Simplifying constant integer cast $55
Simplifying constant integer cast 0
Simplifying constant integer cast $55
Simplifying constant integer cast $55
Simplifying constant integer cast $55
Simplifying constant integer cast $55
Simplifying constant integer cast $55
Simplifying constant integer cast $ff
Simplifying constant integer cast $55
Simplifying constant integer cast $aa
Simplifying constant integer cast 0
Simplifying constant integer cast $aa
Simplifying constant integer cast $aa
Simplifying constant integer cast $ff
Simplifying constant integer cast $aa
Simplifying constant integer cast $aa
Simplifying constant integer cast $aa
Simplifying constant integer cast $aa
Simplifying constant integer cast $ff
Simplifying constant integer cast $d0
Simplifying constant integer cast 0
Simplifying constant integer cast $ff
Simplifying constant integer cast $55
Simplifying constant integer cast $55
Simplifying constant integer cast $17
Simplifying constant integer cast $15
Simplifying constant integer cast $15
Simplifying constant integer cast $17
Simplifying constant integer cast $15
Simplifying constant integer cast $17
Simplifying constant integer cast $17
Simplifying constant integer cast $17
Simplifying constant integer cast $17
Simplifying constant integer cast $3e7
Simplifying constant integer cast $ff
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 5
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $28
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) $f
Finalized unsigned number type (word) $3e8
Finalized unsigned number type (byte) $a0
Finalized unsigned number type (byte) $e0
Finalized unsigned number type (byte) $d0
Finalized unsigned number type (byte) $dd
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $aa
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $d0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $55
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) $15
Finalized unsigned number type (byte) $15
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) $15
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) $17
Finalized unsigned number type (byte) $17
Finalized unsigned number type (word) $3e7
Finalized unsigned number type (byte) $ff
Finalized unsigned number type (byte) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in (unumber~) print_byte::$2 ← (byte) print_byte::b#9 & (byte) $f
Inversing boolean not [10] (bool~) memset::$1 ← (word) memset::num#1 <= (byte) 0 from [9] (bool~) memset::$0 ← (word) memset::num#1 > (byte) 0
Successful SSA optimization Pass2UnaryNotSimplification
Alias (void*) memset::return#0 = (void*) memset::str#1 (void*) memset::return#3 (void*) memset::return#1 
Alias (void*) memset::str#2 = (void*) memset::str#3 
Alias (word) memset::num#1 = (word) memset::num#2 
Alias (byte) memset::c#3 = (byte) memset::c#4 
Alias (byte*) memset::end#0 = (byte*~) memset::$3 
Alias (byte) memset::c#1 = (byte) memset::c#2 
Alias (byte*) memset::dst#2 = (byte*) memset::dst#3 
Alias (byte*) memset::end#1 = (byte*) memset::end#2 
Alias (void*) memset::str#4 = (void*) memset::str#5 
Alias (byte*) print_line_cursor#0 = (byte*) print_screen#0 (byte*) print_char_cursor#0 (byte*) print_line_cursor#76 (byte*) print_char_cursor#124 (byte*) print_screen#6 (byte*) print_line_cursor#75 (byte*) print_char_cursor#123 (byte*) print_screen#5 (byte*) print_line_cursor#72 (byte*) print_char_cursor#120 (byte*) print_screen#4 
Alias (byte*) print_str::str#10 = (byte*) print_str::str#11 
Alias (byte*) print_char_cursor#114 = (byte*) print_char_cursor#58 (byte*) print_char_cursor#59 (byte*) print_char_cursor#2 
Alias (byte*) print_line_cursor#1 = (byte*~) print_ln::$0 (byte*) print_line_cursor#35 (byte*) print_char_cursor#3 (byte*) print_line_cursor#36 (byte*) print_char_cursor#61 (byte*) print_line_cursor#2 (byte*) print_char_cursor#4 
Alias (byte) print_byte::b#8 = (byte) print_byte::b#9 
Alias (byte*) print_char_cursor#5 = (byte*) print_char_cursor#62 
Alias (byte*) print_char_cursor#6 = (byte*) print_char_cursor#63 (byte*) print_char_cursor#64 (byte*) print_char_cursor#7 
Alias (byte*) print_char_cursor#66 = (byte*) print_char_cursor#8 (byte*) print_char_cursor#9 
Alias (byte*) print_line_cursor#3 = (byte*) print_screen#2 (byte*) print_screen#1 (byte*) print_char_cursor#10 (byte*) print_line_cursor#37 (byte*) print_char_cursor#67 (byte*) print_line_cursor#4 (byte*) print_char_cursor#11 
Alias (byte*) print_line_cursor#38 = (byte*) print_line_cursor#5 (byte*) print_line_cursor#69 
Alias (byte*) print_char_cursor#12 = (byte*) print_char_cursor#68 
Alias (byte*) print_char_cursor#13 = (byte*) print_char_cursor#69 
Alias (byte*) print_line_cursor#39 = (byte*) print_line_cursor#6 
Alias (byte*) print_char_cursor#14 = (byte*) print_char_cursor#70 
Alias (byte*) print_char_cursor#15 = (byte*) print_char_cursor#71 
Alias (byte*) print_line_cursor#40 = (byte*) print_line_cursor#7 
Alias (byte*) print_char_cursor#16 = (byte*) print_char_cursor#72 
Alias (byte*) print_line_cursor#41 = (byte*) print_line_cursor#8 
Alias (byte*) print_char_cursor#17 = (byte*) print_char_cursor#73 
Alias (byte*) print_line_cursor#42 = (byte*) print_line_cursor#9 
Alias (byte*) print_char_cursor#18 = (byte*) print_char_cursor#74 
Alias (byte*) print_line_cursor#10 = (byte*) print_line_cursor#43 
Alias (byte*) print_char_cursor#19 = (byte*) print_char_cursor#75 
Alias (byte*) print_line_cursor#11 = (byte*) print_line_cursor#44 
Alias (byte*) print_char_cursor#20 = (byte*) print_char_cursor#76 
Alias (byte*) print_line_cursor#12 = (byte*) print_line_cursor#45 
Alias (byte*) print_char_cursor#21 = (byte*) print_char_cursor#77 
Alias (byte*) print_line_cursor#13 = (byte*) print_line_cursor#46 
Alias (byte*) print_char_cursor#22 = (byte*) print_char_cursor#78 
Alias (byte*) print_line_cursor#14 = (byte*) print_line_cursor#47 
Alias (byte*) print_char_cursor#23 = (byte*) print_char_cursor#79 
Alias (byte*) print_line_cursor#15 = (byte*) print_line_cursor#48 
Alias (byte*) print_char_cursor#24 = (byte*) print_char_cursor#80 
Alias (byte*) print_line_cursor#16 = (byte*) print_line_cursor#49 
Alias (byte*) print_char_cursor#25 = (byte*) print_char_cursor#81 
Alias (byte*) print_line_cursor#17 = (byte*) print_line_cursor#50 
Alias (byte*) print_char_cursor#26 = (byte*) print_char_cursor#82 
Alias (byte*) print_line_cursor#18 = (byte*) print_line_cursor#51 
Alias (byte*) print_char_cursor#27 = (byte*) print_char_cursor#83 
Alias (byte*) print_line_cursor#19 = (byte*) print_line_cursor#52 
Alias (byte*) print_char_cursor#28 = (byte*) print_char_cursor#84 
Alias (byte*) print_line_cursor#20 = (byte*) print_line_cursor#53 
Alias (byte*) print_char_cursor#29 = (byte*) print_char_cursor#85 
Alias (byte*) print_line_cursor#21 = (byte*) print_line_cursor#54 
Alias (byte*) print_char_cursor#30 = (byte*) print_char_cursor#86 
Alias (byte*) print_line_cursor#22 = (byte*) print_line_cursor#55 
Alias (byte*) print_char_cursor#31 = (byte*) print_char_cursor#87 
Alias (byte*) print_line_cursor#23 = (byte*) print_line_cursor#56 
Alias (byte*) print_char_cursor#32 = (byte*) print_char_cursor#88 
Alias (byte*) print_line_cursor#24 = (byte*) print_line_cursor#57 
Alias (byte*) print_char_cursor#33 = (byte*) print_char_cursor#89 
Alias (byte*) print_line_cursor#25 = (byte*) print_line_cursor#58 
Alias (byte*) print_char_cursor#34 = (byte*) print_char_cursor#90 
Alias (byte*) print_line_cursor#26 = (byte*) print_line_cursor#59 
Alias (byte*) print_char_cursor#35 = (byte*) print_char_cursor#91 
Alias (byte*) print_line_cursor#27 = (byte*) print_line_cursor#60 
Alias (byte*) print_char_cursor#36 = (byte*) print_char_cursor#92 
Alias (byte*) print_line_cursor#28 = (byte*) print_line_cursor#61 
Alias (byte*) print_char_cursor#37 = (byte*) print_char_cursor#93 
Alias (byte*) print_line_cursor#29 = (byte*) print_line_cursor#62 
Alias (byte*) print_line_cursor#30 = (byte*) print_line_cursor#73 (byte*) print_line_cursor#70 (byte*) print_line_cursor#63 
Alias (byte*) print_char_cursor#118 = (byte*) print_char_cursor#122 (byte*) print_char_cursor#94 (byte*) print_char_cursor#38 
Alias (byte) testProcport::ddr#23 = (byte) testProcport::ddr#24 
Alias (byte) testProcport::port#23 = (byte) testProcport::port#26 (byte) testProcport::port#25 (byte) testProcport::port#24 
Alias (byte) testProcport::ddr2#23 = (byte) testProcport::ddr2#28 (byte) testProcport::ddr2#27 (byte) testProcport::ddr2#26 (byte) testProcport::ddr2#25 (byte) testProcport::ddr2#24 
Alias (byte*) print_line_cursor#71 = (byte*) print_line_cursor#90 (byte*) print_line_cursor#91 (byte*) print_line_cursor#89 (byte*) print_line_cursor#88 (byte*) print_line_cursor#87 (byte*) print_line_cursor#86 (byte*) print_line_cursor#85 (byte*) print_line_cursor#84 (byte*) print_line_cursor#83 (byte*) print_line_cursor#82 (byte*) print_line_cursor#81 (byte*) print_line_cursor#80 (byte*) print_line_cursor#79 (byte*) print_line_cursor#78 (byte*) print_line_cursor#77 (byte*) print_line_cursor#74 
Alias (byte*) print_char_cursor#39 = (byte*) print_char_cursor#95 
Alias (byte*) print_char_cursor#40 = (byte*) print_char_cursor#96 
Alias (byte*) print_char_cursor#41 = (byte*) print_char_cursor#97 
Alias (byte*) print_char_cursor#42 = (byte*) print_char_cursor#98 
Alias (byte*) print_char_cursor#43 = (byte*) print_char_cursor#99 
Alias (byte*) print_char_cursor#100 = (byte*) print_char_cursor#44 
Alias (byte*) print_char_cursor#101 = (byte*) print_char_cursor#45 
Alias (byte*) print_char_cursor#102 = (byte*) print_char_cursor#46 
Alias (byte*) print_char_cursor#103 = (byte*) print_char_cursor#47 
Alias (byte*) print_char_cursor#104 = (byte*) print_char_cursor#48 
Alias (byte*) print_char_cursor#105 = (byte*) print_char_cursor#49 
Alias (byte*) print_char_cursor#106 = (byte*) print_char_cursor#50 
Alias (byte*) print_char_cursor#107 = (byte*) print_char_cursor#51 
Alias (byte*) print_char_cursor#108 = (byte*) print_char_cursor#52 
Alias (byte*) print_char_cursor#109 = (byte*) print_char_cursor#53 
Alias (byte*) print_char_cursor#110 = (byte*) print_char_cursor#54 
Alias (byte*) print_line_cursor#31 = (byte*) print_line_cursor#64 (byte*) print_line_cursor#65 (byte*) print_line_cursor#32 
Alias (byte*) print_char_cursor#111 = (byte*) print_char_cursor#55 (byte*) print_char_cursor#112 (byte*) print_char_cursor#56 
Alias (byte*) print_line_cursor#33 = (byte*) print_line_cursor#66 
Alias (byte*) print_char_cursor#113 = (byte*) print_char_cursor#57 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values (word) memset::num#1 (word) memset::num#0
Identical Phi Values (void*) memset::str#2 (void*) memset::str#0
Identical Phi Values (byte) memset::c#3 (byte) memset::c#0
Identical Phi Values (byte*) memset::end#1 (byte*) memset::end#0
Identical Phi Values (void*) memset::str#4 (void*) memset::str#2
Identical Phi Values (byte) memset::c#1 (byte) memset::c#3
Identical Phi Values (byte*) print_char_cursor#60 (byte*) print_char_cursor#115
Identical Phi Values (byte*) print_char_cursor#5 (byte*) print_char_cursor#66
Identical Phi Values (byte*) print_char_cursor#6 (byte*) print_char_cursor#66
Identical Phi Values (byte*) print_line_cursor#3 (byte*) print_screen#3
Identical Phi Values (byte*) print_screen#3 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_line_cursor#68 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_char_cursor#117 (byte*) print_line_cursor#0
Identical Phi Values (byte*) print_line_cursor#38 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#12 (byte*) print_line_cursor#3
Identical Phi Values (byte*) print_char_cursor#13 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_line_cursor#39 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#14 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#15 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#40 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#16 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#41 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#17 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#42 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#18 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#10 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#19 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#11 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#20 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#12 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#21 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#13 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#22 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#14 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#23 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#15 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#24 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#16 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#25 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#17 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#26 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#18 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#27 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#19 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#28 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#20 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#29 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#21 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#30 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#22 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#31 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#23 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#32 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#24 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#33 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#25 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#34 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#26 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#35 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#27 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#36 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#28 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_char_cursor#37 (byte*) print_char_cursor#111
Identical Phi Values (byte*) print_line_cursor#29 (byte*) print_line_cursor#31
Identical Phi Values (byte*) print_line_cursor#30 (byte*) print_line_cursor#29
Identical Phi Values (byte*) print_char_cursor#118 (byte*) print_char_cursor#37
Identical Phi Values (byte*) print_char_cursor#39 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#40 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#41 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#42 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#43 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#100 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#101 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#102 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#103 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#104 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#105 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#106 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#107 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#108 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_char_cursor#109 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#110 (byte*) print_char_cursor#6
Identical Phi Values (byte*) print_line_cursor#31 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_char_cursor#111 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_line_cursor#33 (byte*) print_line_cursor#30
Identical Phi Values (byte*) print_char_cursor#113 (byte*) print_char_cursor#118
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values (void*) memset::return#0 (void*) memset::str#0
Identical Phi Values (byte*) print_char_cursor#116 (byte*) print_char_cursor#114
Identical Phi Values (byte*) print_char_cursor#119 (byte*) print_line_cursor#1
Identical Phi Values (byte*) print_line_cursor#71 (byte*) print_line_cursor#1
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition (bool~) memset::$1 [11] if((word) memset::num#0<=(byte) 0) goto memset::@1
Simple Condition (bool~) memset::$4 [21] if((byte*) memset::dst#2!=(byte*) memset::end#0) goto memset::@5
Simple Condition (bool~) print_str::$0 [34] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2
Simple Condition (bool~) print_ln::$1 [47] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant (const byte*) PROCPORT_DDR = (byte*) 0
Constant (const byte) PROCPORT_DDR_MEMORY_MASK = 7
Constant (const byte*) PROCPORT = (byte*) 1
Constant (const byte) PROCPORT_RAM_ALL = 0
Constant (const byte) PROCPORT_RAM_IO = 5
Constant (const byte) PROCPORT_RAM_CHARROM = 1
Constant (const byte) PROCPORT_KERNEL_IO = 6
Constant (const byte) PROCPORT_BASIC_KERNEL_IO = 7
Constant (const byte*) print_line_cursor#0 = (byte*) 1024
Constant (const byte[]) print_hextab = $0
Constant (const byte) memset::c#0 = ' '
Constant (const word) memset::num#0 = $3e8
Constant (const byte*) BASIC_ROM = (byte*) 40960
Constant (const byte*) KERNAL_ROM = (byte*) 57344
Constant (const byte*) IO_RAM = (byte*) 53248
Constant (const byte*) SCREEN = (byte*) 1024
Constant (const byte*) print_str::str#1 = main::str
Constant (const byte) testProcport::ddr#5 = 0
Constant (const byte) testProcport::port#5 = 0
Constant (const byte) testProcport::ddr2#5 = 0
Constant (const byte) testProcport::ddr#6 = $ff
Constant (const byte) testProcport::port#6 = 0
Constant (const byte) testProcport::ddr2#6 = 0
Constant (const byte) testProcport::ddr#7 = $ff
Constant (const byte) testProcport::port#7 = $ff
Constant (const byte) testProcport::ddr2#7 = 0
Constant (const byte) testProcport::ddr#8 = $ff
Constant (const byte) testProcport::port#8 = 0
Constant (const byte) testProcport::ddr2#8 = $ff
Constant (const byte) testProcport::ddr#9 = $ff
Constant (const byte) testProcport::port#9 = $55
Constant (const byte) testProcport::ddr2#9 = $ff
Constant (const byte) testProcport::ddr#10 = $ff
Constant (const byte) testProcport::port#10 = $aa
Constant (const byte) testProcport::ddr2#10 = $ff
Constant (const byte) testProcport::ddr#11 = $ff
Constant (const byte) testProcport::port#11 = $ff
Constant (const byte) testProcport::ddr2#11 = $ff
Constant (const byte) testProcport::ddr#12 = $55
Constant (const byte) testProcport::port#12 = 0
Constant (const byte) testProcport::ddr2#12 = $55
Constant (const byte) testProcport::ddr#13 = $55
Constant (const byte) testProcport::port#13 = $55
Constant (const byte) testProcport::ddr2#13 = $55
Constant (const byte) testProcport::ddr#14 = $55
Constant (const byte) testProcport::port#14 = $ff
Constant (const byte) testProcport::ddr2#14 = $55
Constant (const byte) testProcport::ddr#15 = $aa
Constant (const byte) testProcport::port#15 = 0
Constant (const byte) testProcport::ddr2#15 = $aa
Constant (const byte) testProcport::ddr#16 = $aa
Constant (const byte) testProcport::port#16 = $ff
Constant (const byte) testProcport::ddr2#16 = $aa
Constant (const byte) testProcport::ddr#17 = $aa
Constant (const byte) testProcport::port#17 = $aa
Constant (const byte) testProcport::ddr2#17 = $aa
Constant (const byte) testProcport::ddr#18 = $ff
Constant (const byte) testProcport::port#18 = $d0
Constant (const byte) testProcport::ddr2#18 = 0
Constant (const byte) testProcport::ddr#19 = $ff
Constant (const byte) testProcport::port#19 = $55
Constant (const byte) testProcport::ddr2#19 = $55
Constant (const byte) testProcport::ddr#20 = $17
Constant (const byte) testProcport::port#20 = $15
Constant (const byte) testProcport::ddr2#20 = $15
Constant (const byte) testProcport::ddr#21 = $17
Constant (const byte) testProcport::port#21 = $15
Constant (const byte) testProcport::ddr2#21 = $17
Constant (const byte) testProcport::ddr#22 = $17
Constant (const byte) testProcport::port#22 = $17
Constant (const byte) testProcport::ddr2#22 = $17
Constant (const byte*) print_str::str#2 = testProcport::str
Constant (const byte*) print_str::str#3 = testProcport::str1
Constant (const byte*) print_str::str#4 = testProcport::str2
Constant (const byte*) print_str::str#5 = testProcport::str3
Constant (const byte*) print_str::str#6 = testProcport::str4
Constant (const byte*) print_str::str#7 = testProcport::str5
Constant (const byte*) print_str::str#8 = testProcport::str6
Constant (const byte*) print_str::str#9 = testProcport::str7
Successful SSA optimization Pass2ConstantIdentification
Constant (const byte) testProcport::ddr#0 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::port#0 = PROCPORT_RAM_ALL
Constant (const byte) testProcport::ddr2#0 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::ddr#1 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::port#1 = PROCPORT_RAM_IO
Constant (const byte) testProcport::ddr2#1 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::ddr#2 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::port#2 = PROCPORT_RAM_CHARROM
Constant (const byte) testProcport::ddr2#2 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::ddr#3 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::port#3 = PROCPORT_KERNEL_IO
Constant (const byte) testProcport::ddr2#3 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::ddr#4 = PROCPORT_DDR_MEMORY_MASK
Constant (const byte) testProcport::port#4 = PROCPORT_BASIC_KERNEL_IO
Constant (const byte) testProcport::ddr2#4 = PROCPORT_DDR_MEMORY_MASK
Successful SSA optimization Pass2ConstantIdentification
Constant value identified (void*)print_line_cursor#0 in [77] (void*) memset::str#0 ← (void*)(const byte*) print_line_cursor#0
Successful SSA optimization Pass2ConstantValues
if() condition always false - eliminating [11] if((const word) memset::num#0<=(byte) 0) goto memset::@1
if() condition always true - replacing block destination [281] if(true) goto main::@2
Successful SSA optimization Pass2ConstantIfs
Successful SSA optimization Pass2ConstantStringConsolidation
Eliminating unused variable (void*) memset::return#2 and assignment [34] (void*) memset::return#2 ← (void*) memset::str#0
Successful SSA optimization PassNEliminateUnusedVars
Removing unused block main::@return
Successful SSA optimization Pass2EliminateUnusedBlocks
Constant right-side identified [73] (byte*~) main::$29 ← (const byte*) SCREEN + (word) $3e7
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const void*) memset::str#0 = (void*)print_line_cursor#0
Constant (const byte*) main::$29 = SCREEN+$3e7
Successful SSA optimization Pass2ConstantIdentification
Constant value identified (byte*)memset::str#0 in [0] (byte*~) memset::$2 ← (byte*)(const void*) memset::str#0
Constant value identified (byte*)memset::str#0 in [2] (byte*) memset::dst#0 ← (byte*)(const void*) memset::str#0
Successful SSA optimization Pass2ConstantValues
Constant (const byte*) memset::$2 = (byte*)memset::str#0
Constant (const byte*) memset::dst#0 = (byte*)memset::str#0
Successful SSA optimization Pass2ConstantIdentification
Constant right-side identified [0] (byte*) memset::end#0 ← (const byte*) memset::$2 + (const word) memset::num#0
Successful SSA optimization Pass2ConstantRValueConsolidation
Constant (const byte*) memset::end#0 = memset::$2+memset::num#0
Successful SSA optimization Pass2ConstantIdentification
Inlining constant with var siblings (const byte*) memset::dst#0
Inlining constant with var siblings (const byte*) print_str::str#1
Inlining constant with var siblings (const byte*) print_str::str#2
Inlining constant with var siblings (const byte*) print_str::str#3
Inlining constant with var siblings (const byte*) print_str::str#4
Inlining constant with var siblings (const byte*) print_str::str#5
Inlining constant with var siblings (const byte*) print_str::str#6
Inlining constant with var siblings (const byte*) print_str::str#7
Inlining constant with var siblings (const byte*) print_str::str#8
Inlining constant with var siblings (const byte*) print_str::str#9
Inlining constant with var siblings (const byte) testProcport::ddr#5
Inlining constant with var siblings (const byte) testProcport::port#5
Inlining constant with var siblings (const byte) testProcport::ddr2#5
Inlining constant with var siblings (const byte) testProcport::ddr#6
Inlining constant with var siblings (const byte) testProcport::port#6
Inlining constant with var siblings (const byte) testProcport::ddr2#6
Inlining constant with var siblings (const byte) testProcport::ddr#7
Inlining constant with var siblings (const byte) testProcport::port#7
Inlining constant with var siblings (const byte) testProcport::ddr2#7
Inlining constant with var siblings (const byte) testProcport::ddr#8
Inlining constant with var siblings (const byte) testProcport::port#8
Inlining constant with var siblings (const byte) testProcport::ddr2#8
Inlining constant with var siblings (const byte) testProcport::ddr#9
Inlining constant with var siblings (const byte) testProcport::port#9
Inlining constant with var siblings (const byte) testProcport::ddr2#9
Inlining constant with var siblings (const byte) testProcport::ddr#10
Inlining constant with var siblings (const byte) testProcport::port#10
Inlining constant with var siblings (const byte) testProcport::ddr2#10
Inlining constant with var siblings (const byte) testProcport::ddr#11
Inlining constant with var siblings (const byte) testProcport::port#11
Inlining constant with var siblings (const byte) testProcport::ddr2#11
Inlining constant with var siblings (const byte) testProcport::ddr#12
Inlining constant with var siblings (const byte) testProcport::port#12
Inlining constant with var siblings (const byte) testProcport::ddr2#12
Inlining constant with var siblings (const byte) testProcport::ddr#13
Inlining constant with var siblings (const byte) testProcport::port#13
Inlining constant with var siblings (const byte) testProcport::ddr2#13
Inlining constant with var siblings (const byte) testProcport::ddr#14
Inlining constant with var siblings (const byte) testProcport::port#14
Inlining constant with var siblings (const byte) testProcport::ddr2#14
Inlining constant with var siblings (const byte) testProcport::ddr#15
Inlining constant with var siblings (const byte) testProcport::port#15
Inlining constant with var siblings (const byte) testProcport::ddr2#15
Inlining constant with var siblings (const byte) testProcport::ddr#16
Inlining constant with var siblings (const byte) testProcport::port#16
Inlining constant with var siblings (const byte) testProcport::ddr2#16
Inlining constant with var siblings (const byte) testProcport::ddr#17
Inlining constant with var siblings (const byte) testProcport::port#17
Inlining constant with var siblings (const byte) testProcport::ddr2#17
Inlining constant with var siblings (const byte) testProcport::ddr#18
Inlining constant with var siblings (const byte) testProcport::port#18
Inlining constant with var siblings (const byte) testProcport::ddr2#18
Inlining constant with var siblings (const byte) testProcport::ddr#19
Inlining constant with var siblings (const byte) testProcport::port#19
Inlining constant with var siblings (const byte) testProcport::ddr2#19
Inlining constant with var siblings (const byte) testProcport::ddr#20
Inlining constant with var siblings (const byte) testProcport::port#20
Inlining constant with var siblings (const byte) testProcport::ddr2#20
Inlining constant with var siblings (const byte) testProcport::ddr#21
Inlining constant with var siblings (const byte) testProcport::port#21
Inlining constant with var siblings (const byte) testProcport::ddr2#21
Inlining constant with var siblings (const byte) testProcport::ddr#22
Inlining constant with var siblings (const byte) testProcport::port#22
Inlining constant with var siblings (const byte) testProcport::ddr2#22
Inlining constant with var siblings (const byte) testProcport::ddr#0
Inlining constant with var siblings (const byte) testProcport::port#0
Inlining constant with var siblings (const byte) testProcport::ddr2#0
Inlining constant with var siblings (const byte) testProcport::ddr#1
Inlining constant with var siblings (const byte) testProcport::port#1
Inlining constant with var siblings (const byte) testProcport::ddr2#1
Inlining constant with var siblings (const byte) testProcport::ddr#2
Inlining constant with var siblings (const byte) testProcport::port#2
Inlining constant with var siblings (const byte) testProcport::ddr2#2
Inlining constant with var siblings (const byte) testProcport::ddr#3
Inlining constant with var siblings (const byte) testProcport::port#3
Inlining constant with var siblings (const byte) testProcport::ddr2#3
Inlining constant with var siblings (const byte) testProcport::ddr#4
Inlining constant with var siblings (const byte) testProcport::port#4
Inlining constant with var siblings (const byte) testProcport::ddr2#4
Inlining constant with var siblings (const byte*) print_line_cursor#0
Constant inlined testProcport::port#21 = (byte) $15
Constant inlined testProcport::port#22 = (byte) $17
Constant inlined testProcport::port#20 = (byte) $15
Constant inlined $0 = (const byte[]) print_hextab
Constant inlined testProcport::port#0 = (const byte) PROCPORT_RAM_ALL
Constant inlined testProcport::port#7 = (byte) $ff
Constant inlined testProcport::port#8 = (byte) 0
Constant inlined testProcport::port#5 = (byte) 0
Constant inlined testProcport::port#6 = (byte) 0
Constant inlined testProcport::port#3 = (const byte) PROCPORT_KERNEL_IO
Constant inlined testProcport::port#18 = (byte) $d0
Constant inlined testProcport::port#4 = (const byte) PROCPORT_BASIC_KERNEL_IO
Constant inlined testProcport::port#19 = (byte) $55
Constant inlined testProcport::port#1 = (const byte) PROCPORT_RAM_IO
Constant inlined testProcport::port#2 = (const byte) PROCPORT_RAM_CHARROM
Constant inlined print_line_cursor#0 = (byte*) 1024
Constant inlined print_str::str#9 = (const string) testProcport::str5
Constant inlined print_str::str#4 = (const string) testProcport::str1
Constant inlined print_str::str#3 = (const string) testProcport::str1
Constant inlined print_str::str#2 = (const string) testProcport::str
Constant inlined memset::dst#0 = (byte*)(const void*) memset::str#0
Constant inlined print_str::str#1 = (const string) main::str
Constant inlined print_str::str#8 = (const string) testProcport::str5
Constant inlined print_str::str#7 = (const string) testProcport::str5
Constant inlined print_str::str#6 = (const string) testProcport::str3
Constant inlined print_str::str#5 = (const string) testProcport::str3
Constant inlined testProcport::ddr#6 = (byte) $ff
Constant inlined testProcport::ddr#7 = (byte) $ff
Constant inlined testProcport::ddr#8 = (byte) $ff
Constant inlined testProcport::ddr#9 = (byte) $ff
Constant inlined testProcport::ddr#2 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr#3 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr#4 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr#5 = (byte) 0
Constant inlined testProcport::ddr#0 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr#1 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr2#19 = (byte) $55
Constant inlined testProcport::ddr2#17 = (byte) $aa
Constant inlined testProcport::ddr2#18 = (byte) 0
Constant inlined testProcport::ddr#16 = (byte) $aa
Constant inlined testProcport::ddr#15 = (byte) $aa
Constant inlined testProcport::str2 = (const string) testProcport::str1
Constant inlined memset::$2 = (byte*)(const void*) memset::str#0
Constant inlined testProcport::ddr#14 = (byte) $55
Constant inlined testProcport::ddr#13 = (byte) $55
Constant inlined testProcport::str4 = (const string) testProcport::str3
Constant inlined testProcport::ddr#12 = (byte) $55
Constant inlined testProcport::ddr2#22 = (byte) $17
Constant inlined testProcport::ddr#11 = (byte) $ff
Constant inlined testProcport::str6 = (const string) testProcport::str5
Constant inlined testProcport::ddr#10 = (byte) $ff
Constant inlined testProcport::ddr2#20 = (byte) $15
Constant inlined testProcport::str7 = (const string) testProcport::str5
Constant inlined testProcport::ddr2#21 = (byte) $17
Constant inlined testProcport::port#14 = (byte) $ff
Constant inlined testProcport::port#15 = (byte) 0
Constant inlined testProcport::port#16 = (byte) $ff
Constant inlined testProcport::port#17 = (byte) $aa
Constant inlined testProcport::port#10 = (byte) $aa
Constant inlined testProcport::port#11 = (byte) $ff
Constant inlined testProcport::port#9 = (byte) $55
Constant inlined testProcport::port#12 = (byte) 0
Constant inlined testProcport::port#13 = (byte) $55
Constant inlined testProcport::ddr#19 = (byte) $ff
Constant inlined testProcport::ddr#18 = (byte) $ff
Constant inlined testProcport::ddr#17 = (byte) $aa
Constant inlined testProcport::ddr2#9 = (byte) $ff
Constant inlined testProcport::ddr2#15 = (byte) $aa
Constant inlined testProcport::ddr2#8 = (byte) $ff
Constant inlined testProcport::ddr2#16 = (byte) $aa
Constant inlined testProcport::ddr2#7 = (byte) 0
Constant inlined testProcport::ddr2#13 = (byte) $55
Constant inlined testProcport::ddr2#6 = (byte) 0
Constant inlined testProcport::ddr2#14 = (byte) $55
Constant inlined testProcport::ddr2#5 = (byte) 0
Constant inlined testProcport::ddr2#11 = (byte) $ff
Constant inlined testProcport::ddr2#4 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr2#12 = (byte) $55
Constant inlined testProcport::ddr#22 = (byte) $17
Constant inlined testProcport::ddr2#3 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined main::$29 = (const byte*) SCREEN+(word) $3e7
Constant inlined testProcport::ddr#21 = (byte) $17
Constant inlined testProcport::ddr2#2 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr2#10 = (byte) $ff
Constant inlined testProcport::ddr#20 = (byte) $17
Constant inlined testProcport::ddr2#1 = (const byte) PROCPORT_DDR_MEMORY_MASK
Constant inlined testProcport::ddr2#0 = (const byte) PROCPORT_DDR_MEMORY_MASK
Successful SSA optimization Pass2ConstantInlining
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @16
Adding NOP phi() at start of @33
Adding NOP phi() at start of @40
Adding NOP phi() at start of @42
Adding NOP phi() at start of @43
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@12
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::@14
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@21
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of testProcport::@17
Adding NOP phi() at start of print_ln::@2
Adding NOP phi() at start of print_byte::@2
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of print_cls::@1
Adding NOP phi() at start of memset
Adding NOP phi() at start of memset::@2
Adding NOP phi() at start of memset::@1
CALL GRAPH
Calls in [] to main:5 
Calls in [main] to print_cls:17 print_str:19 print_ln:21 testProcport:23 testProcport:25 testProcport:27 testProcport:29 testProcport:31 testProcport:33 testProcport:35 testProcport:37 testProcport:39 testProcport:41 testProcport:43 testProcport:45 testProcport:47 testProcport:49 testProcport:51 testProcport:53 testProcport:55 testProcport:57 testProcport:59 testProcport:61 testProcport:63 testProcport:65 testProcport:67 
Calls in [testProcport] to print_str:80 print_byte:83 print_str:85 print_byte:88 print_str:90 print_byte:93 print_str:95 print_byte:98 print_str:100 print_byte:103 print_str:105 print_byte:108 print_str:110 print_byte:113 print_str:115 print_byte:118 print_ln:121 
Calls in [print_byte] to print_char:137 print_char:142 
Calls in [print_cls] to memset:161 

Created 14 initial phi equivalence classes
Coalesced [20] print_char_cursor#135 ← print_char_cursor#114
Not coalescing [79] print_char_cursor#125 ← print_line_cursor#1
Coalesced [82] print_byte::b#10 ← print_byte::b#0
Coalesced [84] print_char_cursor#129 ← print_char_cursor#66
Coalesced [87] print_byte::b#14 ← print_byte::b#1
Coalesced (already) [89] print_char_cursor#130 ← print_char_cursor#66
Coalesced [92] print_byte::b#15 ← print_byte::b#2
Coalesced (already) [94] print_char_cursor#131 ← print_char_cursor#66
Coalesced [97] print_byte::b#16 ← print_byte::b#3
Coalesced (already) [99] print_char_cursor#132 ← print_char_cursor#66
Coalesced [102] print_byte::b#17 ← print_byte::b#4
Coalesced (already) [104] print_char_cursor#126 ← print_char_cursor#66
Coalesced [107] print_byte::b#11 ← print_byte::b#5
Coalesced (already) [109] print_char_cursor#127 ← print_char_cursor#66
Coalesced [112] print_byte::b#12 ← print_byte::b#6
Coalesced (already) [114] print_char_cursor#128 ← print_char_cursor#66
Coalesced [117] print_byte::b#13 ← print_byte::b#7
Coalesced [119] print_line_cursor#92 ← print_line_cursor#1
Coalesced [120] print_char_cursor#136 ← print_char_cursor#66
Coalesced [125] print_line_cursor#93 ← print_line_cursor#67
Coalesced (already) [131] print_line_cursor#94 ← print_line_cursor#1
Coalesced [135] print_char::ch#3 ← print_char::ch#0
Coalesced [136] print_char_cursor#137 ← print_char_cursor#114
Coalesced [140] print_char::ch#4 ← print_char::ch#1
Coalesced (already) [141] print_char_cursor#138 ← print_char_cursor#66
Coalesced [150] print_str::str#13 ← print_str::str#12
Coalesced (already) [151] print_char_cursor#133 ← print_char_cursor#121
Coalesced [158] print_str::str#14 ← print_str::str#0
Coalesced [159] print_char_cursor#134 ← print_char_cursor#1
Coalesced [172] memset::dst#4 ← memset::dst#1
Coalesced down to 9 phi equivalence classes
Culled Empty Block (label) @16
Culled Empty Block (label) @33
Culled Empty Block (label) @40
Culled Empty Block (label) @43
Culled Empty Block (label) main::@1
Culled Empty Block (label) testProcport::@17
Culled Empty Block (label) print_ln::@2
Culled Empty Block (label) print_ln::@3
Culled Empty Block (label) print_byte::@2
Culled Empty Block (label) print_cls::@1
Culled Empty Block (label) memset::@2
Culled Empty Block (label) memset::@1
Renumbering block @42 to @1
Renumbering block memset::@4 to memset::@1
Renumbering block memset::@5 to memset::@2
Renumbering block main::@2 to main::@1
Renumbering block main::@7 to main::@2
Renumbering block main::@8 to main::@3
Renumbering block main::@9 to main::@4
Renumbering block main::@10 to main::@5
Renumbering block main::@11 to main::@6
Renumbering block main::@12 to main::@7
Renumbering block main::@13 to main::@8
Renumbering block main::@14 to main::@9
Renumbering block main::@15 to main::@10
Renumbering block main::@16 to main::@11
Renumbering block main::@17 to main::@12
Renumbering block main::@18 to main::@13
Renumbering block main::@19 to main::@14
Renumbering block main::@20 to main::@15
Renumbering block main::@21 to main::@16
Renumbering block main::@22 to main::@17
Renumbering block main::@23 to main::@18
Renumbering block main::@24 to main::@19
Renumbering block main::@25 to main::@20
Renumbering block main::@26 to main::@21
Renumbering block main::@27 to main::@22
Renumbering block main::@28 to main::@23
Renumbering block main::@29 to main::@24
Renumbering block main::@30 to main::@25
Renumbering block main::@31 to main::@26
Renumbering block main::@32 to main::@27
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @1
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@5
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of main::@8
Adding NOP phi() at start of main::@9
Adding NOP phi() at start of main::@10
Adding NOP phi() at start of main::@11
Adding NOP phi() at start of main::@12
Adding NOP phi() at start of main::@13
Adding NOP phi() at start of main::@14
Adding NOP phi() at start of main::@15
Adding NOP phi() at start of main::@16
Adding NOP phi() at start of main::@17
Adding NOP phi() at start of main::@18
Adding NOP phi() at start of main::@19
Adding NOP phi() at start of main::@20
Adding NOP phi() at start of main::@21
Adding NOP phi() at start of main::@22
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of testProcport::@2
Adding NOP phi() at start of testProcport::@4
Adding NOP phi() at start of testProcport::@6
Adding NOP phi() at start of testProcport::@8
Adding NOP phi() at start of testProcport::@10
Adding NOP phi() at start of testProcport::@12
Adding NOP phi() at start of testProcport::@14
Adding NOP phi() at start of testProcport::@16
Adding NOP phi() at start of print_cls
Adding NOP phi() at start of memset

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  asm { sei  }
  [5] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK
  [6] *((const byte*) PROCPORT) ← (const byte) PROCPORT_RAM_ALL
  [7] *((const byte*) BASIC_ROM) ← (byte) $a0
  [8] *((const byte*) KERNAL_ROM) ← (byte) $e0
  [9] *((const byte*) IO_RAM) ← (byte) $d0
  [10] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK
  [11] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO
  [12] *((const byte*) IO_RAM) ← (byte) $dd
  [13] call print_cls 
  to:main::@2
main::@2: scope:[main]  from main
  [14] phi()
  [15] call print_str 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [16] phi()
  [17] call print_ln 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [18] phi()
  [19] call testProcport 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [20] phi()
  [21] call testProcport 
  to:main::@6
main::@6: scope:[main]  from main::@5
  [22] phi()
  [23] call testProcport 
  to:main::@7
main::@7: scope:[main]  from main::@6
  [24] phi()
  [25] call testProcport 
  to:main::@8
main::@8: scope:[main]  from main::@7
  [26] phi()
  [27] call testProcport 
  to:main::@9
main::@9: scope:[main]  from main::@8
  [28] phi()
  [29] call testProcport 
  to:main::@10
main::@10: scope:[main]  from main::@9
  [30] phi()
  [31] call testProcport 
  to:main::@11
main::@11: scope:[main]  from main::@10
  [32] phi()
  [33] call testProcport 
  to:main::@12
main::@12: scope:[main]  from main::@11
  [34] phi()
  [35] call testProcport 
  to:main::@13
main::@13: scope:[main]  from main::@12
  [36] phi()
  [37] call testProcport 
  to:main::@14
main::@14: scope:[main]  from main::@13
  [38] phi()
  [39] call testProcport 
  to:main::@15
main::@15: scope:[main]  from main::@14
  [40] phi()
  [41] call testProcport 
  to:main::@16
main::@16: scope:[main]  from main::@15
  [42] phi()
  [43] call testProcport 
  to:main::@17
main::@17: scope:[main]  from main::@16
  [44] phi()
  [45] call testProcport 
  to:main::@18
main::@18: scope:[main]  from main::@17
  [46] phi()
  [47] call testProcport 
  to:main::@19
main::@19: scope:[main]  from main::@18
  [48] phi()
  [49] call testProcport 
  to:main::@20
main::@20: scope:[main]  from main::@19
  [50] phi()
  [51] call testProcport 
  to:main::@21
main::@21: scope:[main]  from main::@20
  [52] phi()
  [53] call testProcport 
  to:main::@22
main::@22: scope:[main]  from main::@21
  [54] phi()
  [55] call testProcport 
  to:main::@23
main::@23: scope:[main]  from main::@22
  [56] phi()
  [57] call testProcport 
  to:main::@24
main::@24: scope:[main]  from main::@23
  [58] phi()
  [59] call testProcport 
  to:main::@25
main::@25: scope:[main]  from main::@24
  [60] phi()
  [61] call testProcport 
  to:main::@26
main::@26: scope:[main]  from main::@25
  [62] phi()
  [63] call testProcport 
  to:main::@27
main::@27: scope:[main]  from main::@26
  asm { cli  }
  [65] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK
  [66] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO
  to:main::@1
main::@1: scope:[main]  from main::@1 main::@27
  [67] *((const byte*) SCREEN+(word) $3e7) ← ++ *((const byte*) SCREEN+(word) $3e7)
  to:main::@1

(void()) testProcport((byte) testProcport::ddr , (byte) testProcport::port , (byte) testProcport::ddr2)
testProcport: scope:[testProcport]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@20 main::@21 main::@22 main::@23 main::@24 main::@25 main::@26 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [68] (byte) testProcport::ddr2#23 ← phi( main::@5/(const byte) PROCPORT_DDR_MEMORY_MASK main::@6/(const byte) PROCPORT_DDR_MEMORY_MASK main::@7/(const byte) PROCPORT_DDR_MEMORY_MASK main::@8/(const byte) PROCPORT_DDR_MEMORY_MASK main::@9/(byte) 0 main::@10/(byte) 0 main::@11/(byte) 0 main::@12/(byte) $ff main::@13/(byte) $ff main::@14/(byte) $ff main::@15/(byte) $ff main::@16/(byte) $55 main::@17/(byte) $55 main::@18/(byte) $55 main::@19/(byte) $aa main::@20/(byte) $aa main::@21/(byte) $aa main::@22/(byte) 0 main::@23/(byte) $55 main::@24/(byte) $15 main::@25/(byte) $17 main::@26/(byte) $17 main::@4/(const byte) PROCPORT_DDR_MEMORY_MASK )
  [68] (byte) testProcport::port#23 ← phi( main::@5/(const byte) PROCPORT_RAM_IO main::@6/(const byte) PROCPORT_RAM_CHARROM main::@7/(const byte) PROCPORT_KERNEL_IO main::@8/(const byte) PROCPORT_BASIC_KERNEL_IO main::@9/(byte) 0 main::@10/(byte) 0 main::@11/(byte) $ff main::@12/(byte) 0 main::@13/(byte) $55 main::@14/(byte) $aa main::@15/(byte) $ff main::@16/(byte) 0 main::@17/(byte) $55 main::@18/(byte) $ff main::@19/(byte) 0 main::@20/(byte) $ff main::@21/(byte) $aa main::@22/(byte) $d0 main::@23/(byte) $55 main::@24/(byte) $15 main::@25/(byte) $15 main::@26/(byte) $17 main::@4/(const byte) PROCPORT_RAM_ALL )
  [68] (byte) testProcport::ddr#23 ← phi( main::@5/(const byte) PROCPORT_DDR_MEMORY_MASK main::@6/(const byte) PROCPORT_DDR_MEMORY_MASK main::@7/(const byte) PROCPORT_DDR_MEMORY_MASK main::@8/(const byte) PROCPORT_DDR_MEMORY_MASK main::@9/(byte) 0 main::@10/(byte) $ff main::@11/(byte) $ff main::@12/(byte) $ff main::@13/(byte) $ff main::@14/(byte) $ff main::@15/(byte) $ff main::@16/(byte) $55 main::@17/(byte) $55 main::@18/(byte) $55 main::@19/(byte) $aa main::@20/(byte) $aa main::@21/(byte) $aa main::@22/(byte) $ff main::@23/(byte) $ff main::@24/(byte) $17 main::@25/(byte) $17 main::@26/(byte) $17 main::@4/(const byte) PROCPORT_DDR_MEMORY_MASK )
  [69] *((const byte*) PROCPORT_DDR) ← (byte) $ff
  [70] *((const byte*) PROCPORT) ← (byte) 0
  [71] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr#23
  [72] *((const byte*) PROCPORT) ← (byte) testProcport::port#23
  [73] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr2#23
  [74] (byte*~) print_char_cursor#125 ← (byte*) print_line_cursor#1
  [75] call print_str 
  to:testProcport::@1
testProcport::@1: scope:[testProcport]  from testProcport
  [76] (byte) print_byte::b#0 ← (byte) testProcport::ddr#23
  [77] call print_byte 
  to:testProcport::@2
testProcport::@2: scope:[testProcport]  from testProcport::@1
  [78] phi()
  [79] call print_str 
  to:testProcport::@3
testProcport::@3: scope:[testProcport]  from testProcport::@2
  [80] (byte) print_byte::b#1 ← (byte) testProcport::port#23
  [81] call print_byte 
  to:testProcport::@4
testProcport::@4: scope:[testProcport]  from testProcport::@3
  [82] phi()
  [83] call print_str 
  to:testProcport::@5
testProcport::@5: scope:[testProcport]  from testProcport::@4
  [84] (byte) print_byte::b#2 ← (byte) testProcport::ddr2#23
  [85] call print_byte 
  to:testProcport::@6
testProcport::@6: scope:[testProcport]  from testProcport::@5
  [86] phi()
  [87] call print_str 
  to:testProcport::@7
testProcport::@7: scope:[testProcport]  from testProcport::@6
  [88] (byte) print_byte::b#3 ← *((const byte*) PROCPORT_DDR)
  [89] call print_byte 
  to:testProcport::@8
testProcport::@8: scope:[testProcport]  from testProcport::@7
  [90] phi()
  [91] call print_str 
  to:testProcport::@9
testProcport::@9: scope:[testProcport]  from testProcport::@8
  [92] (byte) print_byte::b#4 ← *((const byte*) PROCPORT)
  [93] call print_byte 
  to:testProcport::@10
testProcport::@10: scope:[testProcport]  from testProcport::@9
  [94] phi()
  [95] call print_str 
  to:testProcport::@11
testProcport::@11: scope:[testProcport]  from testProcport::@10
  [96] (byte) print_byte::b#5 ← *((const byte*) BASIC_ROM)
  [97] call print_byte 
  to:testProcport::@12
testProcport::@12: scope:[testProcport]  from testProcport::@11
  [98] phi()
  [99] call print_str 
  to:testProcport::@13
testProcport::@13: scope:[testProcport]  from testProcport::@12
  [100] (byte) print_byte::b#6 ← *((const byte*) IO_RAM)
  [101] call print_byte 
  to:testProcport::@14
testProcport::@14: scope:[testProcport]  from testProcport::@13
  [102] phi()
  [103] call print_str 
  to:testProcport::@15
testProcport::@15: scope:[testProcport]  from testProcport::@14
  [104] (byte) print_byte::b#7 ← *((const byte*) KERNAL_ROM)
  [105] call print_byte 
  to:testProcport::@16
testProcport::@16: scope:[testProcport]  from testProcport::@15
  [106] phi()
  [107] call print_ln 
  to:testProcport::@return
testProcport::@return: scope:[testProcport]  from testProcport::@16
  [108] return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from main::@3 testProcport::@16
  [109] (byte*) print_char_cursor#115 ← phi( main::@3/(byte*) print_char_cursor#114 testProcport::@16/(byte*) print_char_cursor#66 )
  [109] (byte*) print_line_cursor#67 ← phi( main::@3/(byte*) 1024 testProcport::@16/(byte*) print_line_cursor#1 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [110] (byte*) print_line_cursor#34 ← phi( print_ln/(byte*) print_line_cursor#67 print_ln::@1/(byte*) print_line_cursor#1 )
  [111] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#34 + (byte) $28
  [112] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [113] return 
  to:@return

(void()) print_byte((byte) print_byte::b)
print_byte: scope:[print_byte]  from testProcport::@1 testProcport::@11 testProcport::@13 testProcport::@15 testProcport::@3 testProcport::@5 testProcport::@7 testProcport::@9
  [114] (byte) print_byte::b#8 ← phi( testProcport::@1/(byte) print_byte::b#0 testProcport::@11/(byte) print_byte::b#5 testProcport::@13/(byte) print_byte::b#6 testProcport::@15/(byte) print_byte::b#7 testProcport::@3/(byte) print_byte::b#1 testProcport::@5/(byte) print_byte::b#2 testProcport::@7/(byte) print_byte::b#3 testProcport::@9/(byte) print_byte::b#4 )
  [115] (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (byte) 4
  [116] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0)
  [117] call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [118] (byte~) print_byte::$2 ← (byte) print_byte::b#8 & (byte) $f
  [119] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2)
  [120] call print_char 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [121] return 
  to:@return

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_byte print_byte::@1
  [122] (byte*) print_char_cursor#65 ← phi( print_byte/(byte*) print_char_cursor#114 print_byte::@1/(byte*) print_char_cursor#66 )
  [122] (byte) print_char::ch#2 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 )
  [123] *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2
  [124] (byte*) print_char_cursor#66 ← ++ (byte*) print_char_cursor#65
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [125] return 
  to:@return

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from main::@2 testProcport testProcport::@10 testProcport::@12 testProcport::@14 testProcport::@2 testProcport::@4 testProcport::@6 testProcport::@8
  [126] (byte*) print_char_cursor#121 ← phi( main::@2/(byte*) 1024 testProcport/(byte*~) print_char_cursor#125 testProcport::@10/(byte*) print_char_cursor#66 testProcport::@12/(byte*) print_char_cursor#66 testProcport::@14/(byte*) print_char_cursor#66 testProcport::@2/(byte*) print_char_cursor#66 testProcport::@4/(byte*) print_char_cursor#66 testProcport::@6/(byte*) print_char_cursor#66 testProcport::@8/(byte*) print_char_cursor#66 )
  [126] (byte*) print_str::str#12 ← phi( main::@2/(const string) main::str testProcport/(const string) testProcport::str testProcport::@10/(const string) testProcport::str5 testProcport::@12/(const string) testProcport::str5 testProcport::@14/(const string) testProcport::str5 testProcport::@2/(const string) testProcport::str1 testProcport::@4/(const string) testProcport::str1 testProcport::@6/(const string) testProcport::str3 testProcport::@8/(const string) testProcport::str3 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [127] (byte*) print_char_cursor#114 ← phi( print_str/(byte*) print_char_cursor#121 print_str::@2/(byte*) print_char_cursor#1 )
  [127] (byte*) print_str::str#10 ← phi( print_str/(byte*) print_str::str#12 print_str::@2/(byte*) print_str::str#0 )
  [128] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [129] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [130] *((byte*) print_char_cursor#114) ← *((byte*) print_str::str#10)
  [131] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#114
  [132] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#10
  to:print_str::@1

(void()) print_cls()
print_cls: scope:[print_cls]  from main
  [133] phi()
  [134] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [135] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  [136] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [137] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@2/(byte*) memset::dst#1 )
  [138] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [139] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [140] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [141] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@1


VARIABLE REGISTER WEIGHTS
(void()) main()
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(byte) memset::c
(byte*) memset::dst
(byte*) memset::dst#1 22.0
(byte*) memset::dst#2 14.666666666666666
(byte*) memset::end
(word) memset::num
(void*) memset::return
(void*) memset::str
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 4.0
(byte~) print_byte::$2 4.0
(byte) print_byte::b
(byte) print_byte::b#0 4.0
(byte) print_byte::b#1 4.0
(byte) print_byte::b#2 4.0
(byte) print_byte::b#3 4.0
(byte) print_byte::b#4 4.0
(byte) print_byte::b#5 4.0
(byte) print_byte::b#6 4.0
(byte) print_byte::b#7 4.0
(byte) print_byte::b#8 5.0
(void()) print_char((byte) print_char::ch)
(byte) print_char::ch
(byte) print_char::ch#0 4.0
(byte) print_char::ch#1 4.0
(byte) print_char::ch#2 6.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 11.0
(byte*) print_char_cursor#114 1.5599999999999998
(byte*) print_char_cursor#115 3.75
(byte*) print_char_cursor#121 18.0
(byte*~) print_char_cursor#125 4.0
(byte*) print_char_cursor#65 4.0
(byte*) print_char_cursor#66 0.8695652173913042
(void()) print_cls()
(byte*) print_line_cursor
(byte*) print_line_cursor#1 0.4111111111111111
(byte*) print_line_cursor#34 24.0
(byte*) print_line_cursor#67 4.0
(void()) print_ln()
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(byte*) print_str::str
(byte*) print_str::str#0 22.0
(byte*) print_str::str#10 11.5
(byte*) print_str::str#12 2.0
(void()) testProcport((byte) testProcport::ddr , (byte) testProcport::port , (byte) testProcport::ddr2)
(byte) testProcport::ddr
(byte) testProcport::ddr#23 0.5
(byte) testProcport::ddr2
(byte) testProcport::ddr2#23 0.25
(byte) testProcport::port
(byte) testProcport::port#23 0.3333333333333333

Initial phi equivalence classes
[ testProcport::ddr#23 ]
[ testProcport::port#23 ]
[ testProcport::ddr2#23 ]
[ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ]
[ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ]
[ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
[ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ]
[ print_str::str#10 print_str::str#12 print_str::str#0 ]
[ memset::dst#2 memset::dst#1 ]
Added variable print_byte::$0 to zero page equivalence class [ print_byte::$0 ]
Added variable print_byte::$2 to zero page equivalence class [ print_byte::$2 ]
Complete equivalence classes
[ testProcport::ddr#23 ]
[ testProcport::port#23 ]
[ testProcport::ddr2#23 ]
[ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ]
[ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ]
[ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
[ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ]
[ print_str::str#10 print_str::str#12 print_str::str#0 ]
[ memset::dst#2 memset::dst#1 ]
[ print_byte::$0 ]
[ print_byte::$2 ]
Allocated zp[1]:2 [ testProcport::ddr#23 ]
Allocated zp[1]:3 [ testProcport::port#23 ]
Allocated zp[1]:4 [ testProcport::ddr2#23 ]
Allocated zp[2]:5 [ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ]
Allocated zp[1]:7 [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ]
Allocated zp[1]:8 [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
Allocated zp[2]:9 [ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ]
Allocated zp[2]:11 [ print_str::str#10 print_str::str#12 print_str::str#0 ]
Allocated zp[2]:13 [ memset::dst#2 memset::dst#1 ]
Allocated zp[1]:15 [ print_byte::$0 ]
Allocated zp[1]:16 [ print_byte::$2 ]

INITIAL ASM
Target platform is c64basic / MOS6502X
  // File Comments
// Test the functionality of the C64 processor port ($00/$01)
// Tests by setting the value of the processor port - and then printing out values of $00/$01/$a000/$d000/$e000
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__bbegin)
.pc = $80d "Program"
  // Global Constants & labels
  // Processor port data direction register
  .label PROCPORT_DDR = 0
  // Mask for PROCESSOR_PORT_DDR which allows only memory configuration to be written
  .const PROCPORT_DDR_MEMORY_MASK = 7
  // Processor Port Register controlling RAM/ROM configuration and the datasette
  .label PROCPORT = 1
  // RAM in all three areas $A000, $D000, $E000
  .const PROCPORT_RAM_ALL = 0
  // RAM in $A000, $E000 I/O in $D000
  .const PROCPORT_RAM_IO = 5
  // RAM in $A000, $E000 CHAR ROM in $D000
  .const PROCPORT_RAM_CHARROM = 1
  // RAM in $A000, I/O in $D000, KERNEL in $E000
  .const PROCPORT_KERNEL_IO = 6
  // BASIC in $A000, I/O in $D000, KERNEL in $E000
  .const PROCPORT_BASIC_KERNEL_IO = 7
  .label BASIC_ROM = $a000
  .label KERNAL_ROM = $e000
  .label IO_RAM = $d000
  .label SCREEN = $400
  .label print_char_cursor = 9
  .label print_line_cursor = 5
  // @begin
__bbegin:
  // [1] phi from @begin to @1 [phi:@begin->@1]
__b1_from___bbegin:
  jmp __b1
  // @1
__b1:
  // [2] call main 
  jsr main
  // [3] phi from @1 to @end [phi:@1->@end]
__bend_from___b1:
  jmp __bend
  // @end
__bend:
  // main
main: {
    // asm { sei  }
    // Avoid interrupts
    sei
    // [5] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    // Write recognizable values into memory
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // [6] *((const byte*) PROCPORT) ← (const byte) PROCPORT_RAM_ALL -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_RAM_ALL
    sta PROCPORT
    // [7] *((const byte*) BASIC_ROM) ← (byte) $a0 -- _deref_pbuc1=vbuc2 
    lda #$a0
    sta BASIC_ROM
    // [8] *((const byte*) KERNAL_ROM) ← (byte) $e0 -- _deref_pbuc1=vbuc2 
    lda #$e0
    sta KERNAL_ROM
    // [9] *((const byte*) IO_RAM) ← (byte) $d0 -- _deref_pbuc1=vbuc2 
    lda #$d0
    sta IO_RAM
    // [10] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // [11] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta PROCPORT
    // [12] *((const byte*) IO_RAM) ← (byte) $dd -- _deref_pbuc1=vbuc2 
    lda #$dd
    sta IO_RAM
    // [13] call print_cls 
    // [133] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
    // [14] phi from main to main::@2 [phi:main->main::@2]
  __b2_from_main:
    jmp __b2
    // main::@2
  __b2:
    // [15] call print_str 
    // [126] phi from main::@2 to print_str [phi:main::@2->print_str]
  print_str_from___b2:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) 1024 [phi:main::@2->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [126] phi (byte*) print_str::str#12 = (const string) main::str [phi:main::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [16] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [17] call print_ln 
    // [109] phi from main::@3 to print_ln [phi:main::@3->print_ln]
  print_ln_from___b3:
    // [109] phi (byte*) print_char_cursor#115 = (byte*) print_char_cursor#114 [phi:main::@3->print_ln#0] -- register_copy 
    // [109] phi (byte*) print_line_cursor#67 = (byte*) 1024 [phi:main::@3->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor
    lda #>$400
    sta.z print_line_cursor+1
    jsr print_ln
    // [18] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [19] call testProcport 
    // [68] phi from main::@4 to testProcport [phi:main::@4->testProcport]
  testProcport_from___b4:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@4->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_ALL [phi:main::@4->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_ALL
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@4->testProcport#2] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr
    jsr testProcport
    // [20] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [21] call testProcport 
    // [68] phi from main::@5 to testProcport [phi:main::@5->testProcport]
  testProcport_from___b5:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@5->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_IO [phi:main::@5->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@5->testProcport#2] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr
    jsr testProcport
    // [22] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [23] call testProcport 
    // [68] phi from main::@6 to testProcport [phi:main::@6->testProcport]
  testProcport_from___b6:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@6->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_CHARROM [phi:main::@6->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_CHARROM
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@6->testProcport#2] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr
    jsr testProcport
    // [24] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
  __b7_from___b6:
    jmp __b7
    // main::@7
  __b7:
    // [25] call testProcport 
    // [68] phi from main::@7 to testProcport [phi:main::@7->testProcport]
  testProcport_from___b7:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@7->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_KERNEL_IO [phi:main::@7->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_KERNEL_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@7->testProcport#2] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr
    jsr testProcport
    // [26] phi from main::@7 to main::@8 [phi:main::@7->main::@8]
  __b8_from___b7:
    jmp __b8
    // main::@8
  __b8:
    // [27] call testProcport 
    // [68] phi from main::@8 to testProcport [phi:main::@8->testProcport]
  testProcport_from___b8:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@8->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_BASIC_KERNEL_IO [phi:main::@8->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@8->testProcport#2] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr
    jsr testProcport
    // [28] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
  __b9_from___b8:
    jmp __b9
    // main::@9
  __b9:
    // [29] call testProcport 
    // [68] phi from main::@9 to testProcport [phi:main::@9->testProcport]
  testProcport_from___b9:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@9->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@9->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) 0 [phi:main::@9->testProcport#2] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr
    jsr testProcport
    // [30] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
  __b10_from___b9:
    jmp __b10
    // main::@10
  __b10:
    // [31] call testProcport 
    // [68] phi from main::@10 to testProcport [phi:main::@10->testProcport]
  testProcport_from___b10:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@10->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@10->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@10->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [32] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
  __b11_from___b10:
    jmp __b11
    // main::@11
  __b11:
    // [33] call testProcport 
    // [68] phi from main::@11 to testProcport [phi:main::@11->testProcport]
  testProcport_from___b11:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@11->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@11->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@11->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [34] phi from main::@11 to main::@12 [phi:main::@11->main::@12]
  __b12_from___b11:
    jmp __b12
    // main::@12
  __b12:
    // [35] call testProcport 
    // [68] phi from main::@12 to testProcport [phi:main::@12->testProcport]
  testProcport_from___b12:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@12->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@12->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@12->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [36] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
  __b13_from___b12:
    jmp __b13
    // main::@13
  __b13:
    // [37] call testProcport 
    // [68] phi from main::@13 to testProcport [phi:main::@13->testProcport]
  testProcport_from___b13:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@13->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@13->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@13->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [38] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
  __b14_from___b13:
    jmp __b14
    // main::@14
  __b14:
    // [39] call testProcport 
    // [68] phi from main::@14 to testProcport [phi:main::@14->testProcport]
  testProcport_from___b14:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@14->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $aa [phi:main::@14->testProcport#1] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@14->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [40] phi from main::@14 to main::@15 [phi:main::@14->main::@15]
  __b15_from___b14:
    jmp __b15
    // main::@15
  __b15:
    // [41] call testProcport 
    // [68] phi from main::@15 to testProcport [phi:main::@15->testProcport]
  testProcport_from___b15:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@15->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@15->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@15->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [42] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
  __b16_from___b15:
    jmp __b16
    // main::@16
  __b16:
    // [43] call testProcport 
    // [68] phi from main::@16 to testProcport [phi:main::@16->testProcport]
  testProcport_from___b16:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@16->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@16->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@16->testProcport#2] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr
    jsr testProcport
    // [44] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
  __b17_from___b16:
    jmp __b17
    // main::@17
  __b17:
    // [45] call testProcport 
    // [68] phi from main::@17 to testProcport [phi:main::@17->testProcport]
  testProcport_from___b17:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@17->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@17->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@17->testProcport#2] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr
    jsr testProcport
    // [46] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [47] call testProcport 
    // [68] phi from main::@18 to testProcport [phi:main::@18->testProcport]
  testProcport_from___b18:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@18->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@18->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@18->testProcport#2] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr
    jsr testProcport
    // [48] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
  __b19_from___b18:
    jmp __b19
    // main::@19
  __b19:
    // [49] call testProcport 
    // [68] phi from main::@19 to testProcport [phi:main::@19->testProcport]
  testProcport_from___b19:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@19->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@19->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@19->testProcport#2] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr
    jsr testProcport
    // [50] phi from main::@19 to main::@20 [phi:main::@19->main::@20]
  __b20_from___b19:
    jmp __b20
    // main::@20
  __b20:
    // [51] call testProcport 
    // [68] phi from main::@20 to testProcport [phi:main::@20->testProcport]
  testProcport_from___b20:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@20->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@20->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@20->testProcport#2] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr
    jsr testProcport
    // [52] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
  __b21_from___b20:
    jmp __b21
    // main::@21
  __b21:
    // [53] call testProcport 
    // [68] phi from main::@21 to testProcport [phi:main::@21->testProcport]
  testProcport_from___b21:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@21->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $aa [phi:main::@21->testProcport#1] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@21->testProcport#2] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr
    jsr testProcport
    // [54] phi from main::@21 to main::@22 [phi:main::@21->main::@22]
  __b22_from___b21:
    jmp __b22
    // main::@22
  __b22:
    // [55] call testProcport 
    // [68] phi from main::@22 to testProcport [phi:main::@22->testProcport]
  testProcport_from___b22:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@22->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $d0 [phi:main::@22->testProcport#1] -- vbuz1=vbuc1 
    lda #$d0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@22->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [56] phi from main::@22 to main::@23 [phi:main::@22->main::@23]
  __b23_from___b22:
    jmp __b23
    // main::@23
  __b23:
    // [57] call testProcport 
    // [68] phi from main::@23 to testProcport [phi:main::@23->testProcport]
  testProcport_from___b23:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@23->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@23->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@23->testProcport#2] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr
    jsr testProcport
    // [58] phi from main::@23 to main::@24 [phi:main::@23->main::@24]
  __b24_from___b23:
    jmp __b24
    // main::@24
  __b24:
    // [59] call testProcport 
    // [68] phi from main::@24 to testProcport [phi:main::@24->testProcport]
  testProcport_from___b24:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $15 [phi:main::@24->testProcport#0] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $15 [phi:main::@24->testProcport#1] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@24->testProcport#2] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr
    jsr testProcport
    // [60] phi from main::@24 to main::@25 [phi:main::@24->main::@25]
  __b25_from___b24:
    jmp __b25
    // main::@25
  __b25:
    // [61] call testProcport 
    // [68] phi from main::@25 to testProcport [phi:main::@25->testProcport]
  testProcport_from___b25:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $17 [phi:main::@25->testProcport#0] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $15 [phi:main::@25->testProcport#1] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@25->testProcport#2] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr
    jsr testProcport
    // [62] phi from main::@25 to main::@26 [phi:main::@25->main::@26]
  __b26_from___b25:
    jmp __b26
    // main::@26
  __b26:
    // [63] call testProcport 
    // [68] phi from main::@26 to testProcport [phi:main::@26->testProcport]
  testProcport_from___b26:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $17 [phi:main::@26->testProcport#0] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $17 [phi:main::@26->testProcport#1] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@26->testProcport#2] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr
    jsr testProcport
    jmp __b27
    // main::@27
  __b27:
    // asm { cli  }
    // Enable interrupts
    cli
    // [65] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    // Return to normal settings
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // [66] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta PROCPORT
    jmp __b1
    // main::@1
  __b1:
    // [67] *((const byte*) SCREEN+(word) $3e7) ← ++ *((const byte*) SCREEN+(word) $3e7) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc SCREEN+$3e7
    jmp __b1
    str: .text "ddr port ddr2 $00 $01 $a000 $d000 $e000"
    .byte 0
}
  // testProcport
// testProcport(byte zeropage(2) ddr, byte zeropage(3) port, byte zeropage(4) ddr2)
testProcport: {
    .label ddr = 2
    .label port = 3
    .label ddr2 = 4
    // [69] *((const byte*) PROCPORT_DDR) ← (byte) $ff -- _deref_pbuc1=vbuc2 
    lda #$ff
    sta PROCPORT_DDR
    // [70] *((const byte*) PROCPORT) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta PROCPORT
    // [71] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr#23 -- _deref_pbuc1=vbuz1 
    lda.z ddr
    sta PROCPORT_DDR
    // [72] *((const byte*) PROCPORT) ← (byte) testProcport::port#23 -- _deref_pbuc1=vbuz1 
    lda.z port
    sta PROCPORT
    // [73] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr2#23 -- _deref_pbuc1=vbuz1 
    lda.z ddr2
    sta PROCPORT_DDR
    // [74] (byte*~) print_char_cursor#125 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [75] call print_str 
    // [126] phi from testProcport to print_str [phi:testProcport->print_str]
  print_str_from_testProcport:
    // [126] phi (byte*) print_char_cursor#121 = (byte*~) print_char_cursor#125 [phi:testProcport->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str [phi:testProcport->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    jmp __b1
    // testProcport::@1
  __b1:
    // [76] (byte) print_byte::b#0 ← (byte) testProcport::ddr#23 -- vbuz1=vbuz2 
    lda.z ddr
    sta.z print_byte.b
    // [77] call print_byte 
    // [114] phi from testProcport::@1 to print_byte [phi:testProcport::@1->print_byte]
  print_byte_from___b1:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#0 [phi:testProcport::@1->print_byte#0] -- register_copy 
    jsr print_byte
    // [78] phi from testProcport::@1 to testProcport::@2 [phi:testProcport::@1->testProcport::@2]
  __b2_from___b1:
    jmp __b2
    // testProcport::@2
  __b2:
    // [79] call print_str 
    // [126] phi from testProcport::@2 to print_str [phi:testProcport::@2->print_str]
  print_str_from___b2:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@2->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str1 [phi:testProcport::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    jmp __b3
    // testProcport::@3
  __b3:
    // [80] (byte) print_byte::b#1 ← (byte) testProcport::port#23 -- vbuz1=vbuz2 
    lda.z port
    sta.z print_byte.b
    // [81] call print_byte 
    // [114] phi from testProcport::@3 to print_byte [phi:testProcport::@3->print_byte]
  print_byte_from___b3:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#1 [phi:testProcport::@3->print_byte#0] -- register_copy 
    jsr print_byte
    // [82] phi from testProcport::@3 to testProcport::@4 [phi:testProcport::@3->testProcport::@4]
  __b4_from___b3:
    jmp __b4
    // testProcport::@4
  __b4:
    // [83] call print_str 
    // [126] phi from testProcport::@4 to print_str [phi:testProcport::@4->print_str]
  print_str_from___b4:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@4->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str1 [phi:testProcport::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    jmp __b5
    // testProcport::@5
  __b5:
    // [84] (byte) print_byte::b#2 ← (byte) testProcport::ddr2#23 -- vbuz1=vbuz2 
    lda.z ddr2
    sta.z print_byte.b
    // [85] call print_byte 
    // [114] phi from testProcport::@5 to print_byte [phi:testProcport::@5->print_byte]
  print_byte_from___b5:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#2 [phi:testProcport::@5->print_byte#0] -- register_copy 
    jsr print_byte
    // [86] phi from testProcport::@5 to testProcport::@6 [phi:testProcport::@5->testProcport::@6]
  __b6_from___b5:
    jmp __b6
    // testProcport::@6
  __b6:
    // [87] call print_str 
    // [126] phi from testProcport::@6 to print_str [phi:testProcport::@6->print_str]
  print_str_from___b6:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@6->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str3 [phi:testProcport::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    jmp __b7
    // testProcport::@7
  __b7:
    // [88] (byte) print_byte::b#3 ← *((const byte*) PROCPORT_DDR) -- vbuz1=_deref_pbuc1 
    lda PROCPORT_DDR
    sta.z print_byte.b
    // [89] call print_byte 
    // [114] phi from testProcport::@7 to print_byte [phi:testProcport::@7->print_byte]
  print_byte_from___b7:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#3 [phi:testProcport::@7->print_byte#0] -- register_copy 
    jsr print_byte
    // [90] phi from testProcport::@7 to testProcport::@8 [phi:testProcport::@7->testProcport::@8]
  __b8_from___b7:
    jmp __b8
    // testProcport::@8
  __b8:
    // [91] call print_str 
    // [126] phi from testProcport::@8 to print_str [phi:testProcport::@8->print_str]
  print_str_from___b8:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@8->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str3 [phi:testProcport::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    jmp __b9
    // testProcport::@9
  __b9:
    // [92] (byte) print_byte::b#4 ← *((const byte*) PROCPORT) -- vbuz1=_deref_pbuc1 
    lda PROCPORT
    sta.z print_byte.b
    // [93] call print_byte 
    // [114] phi from testProcport::@9 to print_byte [phi:testProcport::@9->print_byte]
  print_byte_from___b9:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#4 [phi:testProcport::@9->print_byte#0] -- register_copy 
    jsr print_byte
    // [94] phi from testProcport::@9 to testProcport::@10 [phi:testProcport::@9->testProcport::@10]
  __b10_from___b9:
    jmp __b10
    // testProcport::@10
  __b10:
    // [95] call print_str 
    // [126] phi from testProcport::@10 to print_str [phi:testProcport::@10->print_str]
  print_str_from___b10:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@10->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    jmp __b11
    // testProcport::@11
  __b11:
    // [96] (byte) print_byte::b#5 ← *((const byte*) BASIC_ROM) -- vbuz1=_deref_pbuc1 
    lda BASIC_ROM
    sta.z print_byte.b
    // [97] call print_byte 
    // [114] phi from testProcport::@11 to print_byte [phi:testProcport::@11->print_byte]
  print_byte_from___b11:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#5 [phi:testProcport::@11->print_byte#0] -- register_copy 
    jsr print_byte
    // [98] phi from testProcport::@11 to testProcport::@12 [phi:testProcport::@11->testProcport::@12]
  __b12_from___b11:
    jmp __b12
    // testProcport::@12
  __b12:
    // [99] call print_str 
    // [126] phi from testProcport::@12 to print_str [phi:testProcport::@12->print_str]
  print_str_from___b12:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@12->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@12->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    jmp __b13
    // testProcport::@13
  __b13:
    // [100] (byte) print_byte::b#6 ← *((const byte*) IO_RAM) -- vbuz1=_deref_pbuc1 
    lda IO_RAM
    sta.z print_byte.b
    // [101] call print_byte 
    // [114] phi from testProcport::@13 to print_byte [phi:testProcport::@13->print_byte]
  print_byte_from___b13:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#6 [phi:testProcport::@13->print_byte#0] -- register_copy 
    jsr print_byte
    // [102] phi from testProcport::@13 to testProcport::@14 [phi:testProcport::@13->testProcport::@14]
  __b14_from___b13:
    jmp __b14
    // testProcport::@14
  __b14:
    // [103] call print_str 
    // [126] phi from testProcport::@14 to print_str [phi:testProcport::@14->print_str]
  print_str_from___b14:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@14->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@14->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    jmp __b15
    // testProcport::@15
  __b15:
    // [104] (byte) print_byte::b#7 ← *((const byte*) KERNAL_ROM) -- vbuz1=_deref_pbuc1 
    lda KERNAL_ROM
    sta.z print_byte.b
    // [105] call print_byte 
    // [114] phi from testProcport::@15 to print_byte [phi:testProcport::@15->print_byte]
  print_byte_from___b15:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#7 [phi:testProcport::@15->print_byte#0] -- register_copy 
    jsr print_byte
    // [106] phi from testProcport::@15 to testProcport::@16 [phi:testProcport::@15->testProcport::@16]
  __b16_from___b15:
    jmp __b16
    // testProcport::@16
  __b16:
    // [107] call print_ln 
    // [109] phi from testProcport::@16 to print_ln [phi:testProcport::@16->print_ln]
  print_ln_from___b16:
    // [109] phi (byte*) print_char_cursor#115 = (byte*) print_char_cursor#66 [phi:testProcport::@16->print_ln#0] -- register_copy 
    // [109] phi (byte*) print_line_cursor#67 = (byte*) print_line_cursor#1 [phi:testProcport::@16->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // testProcport::@return
  __breturn:
    // [108] return 
    rts
    str: .text " "
    .byte 0
    str1: .text "   "
    .byte 0
    str3: .text "  "
    .byte 0
    str5: .text "    "
    .byte 0
}
  // print_ln
// Print a newline
print_ln: {
    // [110] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b1:
    // [110] phi (byte*) print_line_cursor#34 = (byte*) print_line_cursor#67 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [111] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#34 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // [112] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1_from___b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1_from___b1
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [113] return 
    rts
}
  // print_byte
// Print a byte as HEX
// print_byte(byte zeropage(7) b)
print_byte: {
    .label __0 = $f
    .label __2 = $10
    .label b = 7
    // [115] (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (byte) 4 -- vbuz1=vbuz2_ror_4 
    lda.z b
    lsr
    lsr
    lsr
    lsr
    sta.z __0
    // [116] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __0
    lda print_hextab,y
    sta.z print_char.ch
    // [117] call print_char 
    // [122] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
    // [122] phi (byte*) print_char_cursor#65 = (byte*) print_char_cursor#114 [phi:print_byte->print_char#0] -- register_copy 
    // [122] phi (byte) print_char::ch#2 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_byte::@1
  __b1:
    // [118] (byte~) print_byte::$2 ← (byte) print_byte::b#8 & (byte) $f -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and.z b
    sta.z __2
    // [119] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy.z __2
    lda print_hextab,y
    sta.z print_char.ch
    // [120] call print_char 
    // [122] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from___b1:
    // [122] phi (byte*) print_char_cursor#65 = (byte*) print_char_cursor#66 [phi:print_byte::@1->print_char#0] -- register_copy 
    // [122] phi (byte) print_char::ch#2 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_byte::@return
  __breturn:
    // [121] return 
    rts
}
  // print_char
// Print a single char
// print_char(byte zeropage(8) ch)
print_char: {
    .label ch = 8
    // [123] *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2 -- _deref_pbuz1=vbuz2 
    lda.z ch
    ldy #0
    sta (print_char_cursor),y
    // [124] (byte*) print_char_cursor#66 ← ++ (byte*) print_char_cursor#65 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [125] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zeropage($b) str)
print_str: {
    .label str = $b
    // [127] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  __b1_from_print_str:
  __b1_from___b2:
    // [127] phi (byte*) print_char_cursor#114 = (byte*) print_char_cursor#121 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
    // [127] phi (byte*) print_str::str#10 = (byte*) print_str::str#12 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [128] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [129] return 
    rts
    // print_str::@2
  __b2:
    // [130] *((byte*) print_char_cursor#114) ← *((byte*) print_str::str#10) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (print_char_cursor),y
    // [131] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#114 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // [132] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#10 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b2
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [134] call memset 
    // [136] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [135] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = $400
    .label end = str+num
    .label dst = $d
    // [137] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [137] phi (byte*) memset::dst#2 = (byte*)(const void*) memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [138] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [139] return 
    rts
    // memset::@2
  __b2:
    // [140] *((byte*) memset::dst#2) ← (const byte) memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [141] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [137] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [137] phi (byte*) memset::dst#2 = (byte*) memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
  print_hextab: .text "0123456789abcdef"

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [5] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [6] *((const byte*) PROCPORT) ← (const byte) PROCPORT_RAM_ALL [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [7] *((const byte*) BASIC_ROM) ← (byte) $a0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [8] *((const byte*) KERNAL_ROM) ← (byte) $e0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [9] *((const byte*) IO_RAM) ← (byte) $d0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [10] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [11] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [12] *((const byte*) IO_RAM) ← (byte) $dd [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [65] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [66] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [69] *((const byte*) PROCPORT_DDR) ← (byte) $ff [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ( main:2::testProcport:19 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:21 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:23 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:25 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:27 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:29 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:31 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:33 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:35 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:37 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:39 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:41 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:43 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:45 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:47 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:49 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:51 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:53 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:55 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:57 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:59 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:61 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:63 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:2 [ testProcport::ddr#23 ]
Removing always clobbered register reg byte a as potential for zp[1]:3 [ testProcport::port#23 ]
Removing always clobbered register reg byte a as potential for zp[1]:4 [ testProcport::ddr2#23 ]
Statement [70] *((const byte*) PROCPORT) ← (byte) 0 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ( main:2::testProcport:19 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:21 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:23 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:25 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:27 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:29 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:31 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:33 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:35 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:37 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:39 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:41 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:43 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:45 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:47 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:49 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:51 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:53 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:55 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:57 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:59 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:61 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:63 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [74] (byte*~) print_char_cursor#125 ← (byte*) print_line_cursor#1 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] ( main:2::testProcport:19 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:21 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:23 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:25 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:27 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:29 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:31 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:33 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:35 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:37 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:39 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:41 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:43 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:45 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:47 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:49 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:51 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:53 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:55 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:57 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:59 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:61 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:63 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [111] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#34 + (byte) $28 [ print_line_cursor#1 print_char_cursor#115 ] ( main:2::print_ln:17 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:19::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:21::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:23::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:25::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:27::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:29::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:31::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:33::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:35::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:37::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:39::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:41::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:43::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:45::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:47::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:49::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:51::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:53::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:55::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:57::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:59::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:61::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:63::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] ) always clobbers reg byte a 
Statement [112] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1 [ print_line_cursor#1 print_char_cursor#115 ] ( main:2::print_ln:17 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:19::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:21::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:23::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:25::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:27::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:29::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:31::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:33::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:35::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:37::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:39::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:41::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:43::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:45::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:47::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:49::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:51::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:53::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:55::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:57::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:59::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:61::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:63::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] ) always clobbers reg byte a 
Statement [115] (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (byte) 4 [ print_char_cursor#114 print_byte::b#8 print_byte::$0 ] ( main:2::testProcport:19::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:7 [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ]
Statement [118] (byte~) print_byte::$2 ← (byte) print_byte::b#8 & (byte) $f [ print_char_cursor#66 print_byte::$2 ] ( main:2::testProcport:19::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] ) always clobbers reg byte a 
Statement [123] *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2 [ print_char_cursor#65 ] ( main:2::testProcport:19::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:3 [ testProcport::port#23 ]
Removing always clobbered register reg byte y as potential for zp[1]:4 [ testProcport::ddr2#23 ]
Removing always clobbered register reg byte y as potential for zp[1]:7 [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ]
Statement [128] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2 [ print_char_cursor#114 print_str::str#10 ] ( main:2::print_str:15 [ print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp[1]:2 [ testProcport::ddr#23 ]
Statement [130] *((byte*) print_char_cursor#114) ← *((byte*) print_str::str#10) [ print_char_cursor#114 print_str::str#10 ] ( main:2::print_str:15 [ print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] ) always clobbers reg byte a reg byte y 
Statement [138] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 [ memset::dst#2 ] ( main:2::print_cls:13::memset:134 [ memset::dst#2 ] ) always clobbers reg byte a 
Statement [140] *((byte*) memset::dst#2) ← (const byte) memset::c#0 [ memset::dst#2 ] ( main:2::print_cls:13::memset:134 [ memset::dst#2 ] ) always clobbers reg byte a reg byte y 
Statement [5] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [6] *((const byte*) PROCPORT) ← (const byte) PROCPORT_RAM_ALL [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [7] *((const byte*) BASIC_ROM) ← (byte) $a0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [8] *((const byte*) KERNAL_ROM) ← (byte) $e0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [9] *((const byte*) IO_RAM) ← (byte) $d0 [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [10] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [11] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [12] *((const byte*) IO_RAM) ← (byte) $dd [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [65] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [66] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO [ ] ( main:2 [ ] ) always clobbers reg byte a 
Statement [69] *((const byte*) PROCPORT_DDR) ← (byte) $ff [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ( main:2::testProcport:19 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:21 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:23 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:25 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:27 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:29 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:31 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:33 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:35 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:37 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:39 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:41 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:43 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:45 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:47 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:49 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:51 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:53 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:55 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:57 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:59 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:61 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:63 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [70] *((const byte*) PROCPORT) ← (byte) 0 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ( main:2::testProcport:19 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:21 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:23 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:25 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:27 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:29 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:31 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:33 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:35 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:37 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:39 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:41 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:43 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:45 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:47 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:49 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:51 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:53 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:55 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:57 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:59 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:61 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] main:2::testProcport:63 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [74] (byte*~) print_char_cursor#125 ← (byte*) print_line_cursor#1 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] ( main:2::testProcport:19 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:21 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:23 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:25 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:27 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:29 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:31 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:33 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:35 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:37 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:39 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:41 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:43 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:45 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:47 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:49 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:51 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:53 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:55 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:57 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:59 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:61 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] main:2::testProcport:63 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_char_cursor#125 print_line_cursor#1 ] ) always clobbers reg byte a 
Statement [111] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#34 + (byte) $28 [ print_line_cursor#1 print_char_cursor#115 ] ( main:2::print_ln:17 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:19::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:21::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:23::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:25::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:27::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:29::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:31::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:33::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:35::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:37::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:39::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:41::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:43::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:45::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:47::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:49::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:51::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:53::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:55::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:57::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:59::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:61::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:63::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] ) always clobbers reg byte a 
Statement [112] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1 [ print_line_cursor#1 print_char_cursor#115 ] ( main:2::print_ln:17 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:19::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:21::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:23::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:25::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:27::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:29::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:31::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:33::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:35::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:37::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:39::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:41::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:43::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:45::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:47::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:49::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:51::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:53::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:55::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:57::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:59::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:61::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] main:2::testProcport:63::print_ln:107 [ print_line_cursor#1 print_char_cursor#115 ] ) always clobbers reg byte a 
Statement [115] (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (byte) 4 [ print_char_cursor#114 print_byte::b#8 print_byte::$0 ] ( main:2::testProcport:19::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:85 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:89 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:93 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:97 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:101 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:19::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:21::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:23::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:25::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:27::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:29::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:31::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:33::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:35::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:37::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:39::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:41::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:43::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:45::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:47::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:49::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:51::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:53::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:55::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:57::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:59::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:61::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] main:2::testProcport:63::print_byte:105 [ print_line_cursor#1 print_char_cursor#114 print_byte::b#8 print_byte::$0 ] ) always clobbers reg byte a 
Statement [118] (byte~) print_byte::$2 ← (byte) print_byte::b#8 & (byte) $f [ print_char_cursor#66 print_byte::$2 ] ( main:2::testProcport:19::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:77 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:81 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:85 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:89 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:93 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:97 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:101 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:19::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:21::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:23::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:25::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:27::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:29::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:31::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:33::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:35::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:37::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:39::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:41::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:43::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:45::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:47::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:49::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:51::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:53::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:55::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:57::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:59::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:61::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] main:2::testProcport:63::print_byte:105 [ print_line_cursor#1 print_char_cursor#66 print_byte::$2 ] ) always clobbers reg byte a 
Statement [123] *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2 [ print_char_cursor#65 ] ( main:2::testProcport:19::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:77::print_char:117 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:81::print_char:117 [ testProcport::ddr2#23 print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:85::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:89::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:93::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:97::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:101::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:21::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:23::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:25::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:27::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:29::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:31::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:33::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:35::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:37::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:39::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:41::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:43::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:45::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:47::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:49::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:51::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:53::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:55::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:57::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:59::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:61::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:63::print_byte:105::print_char:117 [ print_line_cursor#1 print_byte::b#8 print_char_cursor#65 ] main:2::testProcport:19::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:77::print_char:120 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:81::print_char:120 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:85::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:89::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:93::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:97::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:101::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:19::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:21::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:23::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:25::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:27::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:29::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:31::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:33::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:35::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:37::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:39::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:41::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:43::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:45::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:47::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:49::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:51::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:53::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:55::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:57::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:59::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:61::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] main:2::testProcport:63::print_byte:105::print_char:120 [ print_line_cursor#1 print_char_cursor#65 ] ) always clobbers reg byte y 
Statement [128] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2 [ print_char_cursor#114 print_str::str#10 ] ( main:2::print_str:15 [ print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] ) always clobbers reg byte a reg byte y 
Statement [130] *((byte*) print_char_cursor#114) ← *((byte*) print_str::str#10) [ print_char_cursor#114 print_str::str#10 ] ( main:2::print_str:15 [ print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:75 [ testProcport::ddr#23 testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:79 [ testProcport::port#23 testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:83 [ testProcport::ddr2#23 print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:87 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:91 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:95 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:99 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:19::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:21::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:23::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:25::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:27::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:29::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:31::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:33::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:35::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:37::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:39::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:41::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:43::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:45::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:47::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:49::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:51::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:53::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:55::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:57::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:59::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:61::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] main:2::testProcport:63::print_str:103 [ print_line_cursor#1 print_char_cursor#114 print_str::str#10 ] ) always clobbers reg byte a reg byte y 
Statement [138] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 [ memset::dst#2 ] ( main:2::print_cls:13::memset:134 [ memset::dst#2 ] ) always clobbers reg byte a 
Statement [140] *((byte*) memset::dst#2) ← (const byte) memset::c#0 [ memset::dst#2 ] ( main:2::print_cls:13::memset:134 [ memset::dst#2 ] ) always clobbers reg byte a reg byte y 
Potential registers zp[1]:2 [ testProcport::ddr#23 ] : zp[1]:2 , reg byte x , 
Potential registers zp[1]:3 [ testProcport::port#23 ] : zp[1]:3 , reg byte x , 
Potential registers zp[1]:4 [ testProcport::ddr2#23 ] : zp[1]:4 , reg byte x , 
Potential registers zp[2]:5 [ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ] : zp[2]:5 , 
Potential registers zp[1]:7 [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ] : zp[1]:7 , reg byte x , 
Potential registers zp[1]:8 [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ] : zp[1]:8 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:9 [ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ] : zp[2]:9 , 
Potential registers zp[2]:11 [ print_str::str#10 print_str::str#12 print_str::str#0 ] : zp[2]:11 , 
Potential registers zp[2]:13 [ memset::dst#2 memset::dst#1 ] : zp[2]:13 , 
Potential registers zp[1]:15 [ print_byte::$0 ] : zp[1]:15 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:16 [ print_byte::$2 ] : zp[1]:16 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [] 43.18: zp[2]:9 [ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ] 28.41: zp[2]:5 [ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ] 
Uplift Scope [print_byte] 37: zp[1]:7 [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ] 4: zp[1]:15 [ print_byte::$0 ] 4: zp[1]:16 [ print_byte::$2 ] 
Uplift Scope [memset] 36.67: zp[2]:13 [ memset::dst#2 memset::dst#1 ] 
Uplift Scope [print_str] 35.5: zp[2]:11 [ print_str::str#10 print_str::str#12 print_str::str#0 ] 
Uplift Scope [print_char] 14: zp[1]:8 [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ] 
Uplift Scope [testProcport] 0.5: zp[1]:2 [ testProcport::ddr#23 ] 0.33: zp[1]:3 [ testProcport::port#23 ] 0.25: zp[1]:4 [ testProcport::ddr2#23 ] 
Uplift Scope [RADIX] 
Uplift Scope [print_ln] 
Uplift Scope [print_cls] 
Uplift Scope [main] 

Uplifting [] best 2856 combination zp[2]:9 [ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ] zp[2]:5 [ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ] 
Uplifting [print_byte] best 2820 combination reg byte x [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ] reg byte a [ print_byte::$0 ] reg byte x [ print_byte::$2 ] 
Uplifting [memset] best 2820 combination zp[2]:13 [ memset::dst#2 memset::dst#1 ] 
Uplifting [print_str] best 2820 combination zp[2]:11 [ print_str::str#10 print_str::str#12 print_str::str#0 ] 
Uplifting [print_char] best 2811 combination reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ] 
Uplifting [testProcport] best 2736 combination reg byte x [ testProcport::ddr#23 ] zp[1]:3 [ testProcport::port#23 ] zp[1]:4 [ testProcport::ddr2#23 ] 
Uplifting [RADIX] best 2736 combination 
Uplifting [print_ln] best 2736 combination 
Uplifting [print_cls] best 2736 combination 
Uplifting [main] best 2736 combination 
Attempting to uplift remaining variables inzp[1]:3 [ testProcport::port#23 ]
Uplifting [testProcport] best 2736 combination zp[1]:3 [ testProcport::port#23 ] 
Attempting to uplift remaining variables inzp[1]:4 [ testProcport::ddr2#23 ]
Uplifting [testProcport] best 2736 combination zp[1]:4 [ testProcport::ddr2#23 ] 
Coalescing zero page register [ zp[2]:13 [ memset::dst#2 memset::dst#1 ] ] with [ zp[2]:5 [ print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ] ]
Allocated (was zp[1]:3) zp[1]:2 [ testProcport::port#23 ]
Allocated (was zp[1]:4) zp[1]:3 [ testProcport::ddr2#23 ]
Allocated (was zp[2]:9) zp[2]:4 [ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ]
Allocated (was zp[2]:11) zp[2]:6 [ print_str::str#10 print_str::str#12 print_str::str#0 ]
Allocated (was zp[2]:13) zp[2]:8 [ memset::dst#2 memset::dst#1 print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Test the functionality of the C64 processor port ($00/$01)
// Tests by setting the value of the processor port - and then printing out values of $00/$01/$a000/$d000/$e000
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__bbegin)
.pc = $80d "Program"
  // Global Constants & labels
  // Processor port data direction register
  .label PROCPORT_DDR = 0
  // Mask for PROCESSOR_PORT_DDR which allows only memory configuration to be written
  .const PROCPORT_DDR_MEMORY_MASK = 7
  // Processor Port Register controlling RAM/ROM configuration and the datasette
  .label PROCPORT = 1
  // RAM in all three areas $A000, $D000, $E000
  .const PROCPORT_RAM_ALL = 0
  // RAM in $A000, $E000 I/O in $D000
  .const PROCPORT_RAM_IO = 5
  // RAM in $A000, $E000 CHAR ROM in $D000
  .const PROCPORT_RAM_CHARROM = 1
  // RAM in $A000, I/O in $D000, KERNEL in $E000
  .const PROCPORT_KERNEL_IO = 6
  // BASIC in $A000, I/O in $D000, KERNEL in $E000
  .const PROCPORT_BASIC_KERNEL_IO = 7
  .label BASIC_ROM = $a000
  .label KERNAL_ROM = $e000
  .label IO_RAM = $d000
  .label SCREEN = $400
  .label print_char_cursor = 4
  .label print_line_cursor = 8
  // @begin
__bbegin:
  // [1] phi from @begin to @1 [phi:@begin->@1]
__b1_from___bbegin:
  jmp __b1
  // @1
__b1:
  // [2] call main 
  jsr main
  // [3] phi from @1 to @end [phi:@1->@end]
__bend_from___b1:
  jmp __bend
  // @end
__bend:
  // main
main: {
    // asm { sei  }
    // Avoid interrupts
    sei
    // [5] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    // Write recognizable values into memory
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // [6] *((const byte*) PROCPORT) ← (const byte) PROCPORT_RAM_ALL -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_RAM_ALL
    sta PROCPORT
    // [7] *((const byte*) BASIC_ROM) ← (byte) $a0 -- _deref_pbuc1=vbuc2 
    lda #$a0
    sta BASIC_ROM
    // [8] *((const byte*) KERNAL_ROM) ← (byte) $e0 -- _deref_pbuc1=vbuc2 
    lda #$e0
    sta KERNAL_ROM
    // [9] *((const byte*) IO_RAM) ← (byte) $d0 -- _deref_pbuc1=vbuc2 
    lda #$d0
    sta IO_RAM
    // [10] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // [11] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta PROCPORT
    // [12] *((const byte*) IO_RAM) ← (byte) $dd -- _deref_pbuc1=vbuc2 
    lda #$dd
    sta IO_RAM
    // [13] call print_cls 
    // [133] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
    // [14] phi from main to main::@2 [phi:main->main::@2]
  __b2_from_main:
    jmp __b2
    // main::@2
  __b2:
    // [15] call print_str 
    // [126] phi from main::@2 to print_str [phi:main::@2->print_str]
  print_str_from___b2:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) 1024 [phi:main::@2->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [126] phi (byte*) print_str::str#12 = (const string) main::str [phi:main::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [16] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  __b3_from___b2:
    jmp __b3
    // main::@3
  __b3:
    // [17] call print_ln 
    // [109] phi from main::@3 to print_ln [phi:main::@3->print_ln]
  print_ln_from___b3:
    // [109] phi (byte*) print_char_cursor#115 = (byte*) print_char_cursor#114 [phi:main::@3->print_ln#0] -- register_copy 
    // [109] phi (byte*) print_line_cursor#67 = (byte*) 1024 [phi:main::@3->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor
    lda #>$400
    sta.z print_line_cursor+1
    jsr print_ln
    // [18] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [19] call testProcport 
    // [68] phi from main::@4 to testProcport [phi:main::@4->testProcport]
  testProcport_from___b4:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@4->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_ALL [phi:main::@4->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_ALL
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@4->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [20] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
  __b5_from___b4:
    jmp __b5
    // main::@5
  __b5:
    // [21] call testProcport 
    // [68] phi from main::@5 to testProcport [phi:main::@5->testProcport]
  testProcport_from___b5:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@5->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_IO [phi:main::@5->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@5->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [22] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
  __b6_from___b5:
    jmp __b6
    // main::@6
  __b6:
    // [23] call testProcport 
    // [68] phi from main::@6 to testProcport [phi:main::@6->testProcport]
  testProcport_from___b6:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@6->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_CHARROM [phi:main::@6->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_CHARROM
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@6->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [24] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
  __b7_from___b6:
    jmp __b7
    // main::@7
  __b7:
    // [25] call testProcport 
    // [68] phi from main::@7 to testProcport [phi:main::@7->testProcport]
  testProcport_from___b7:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@7->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_KERNEL_IO [phi:main::@7->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_KERNEL_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@7->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [26] phi from main::@7 to main::@8 [phi:main::@7->main::@8]
  __b8_from___b7:
    jmp __b8
    // main::@8
  __b8:
    // [27] call testProcport 
    // [68] phi from main::@8 to testProcport [phi:main::@8->testProcport]
  testProcport_from___b8:
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@8->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_BASIC_KERNEL_IO [phi:main::@8->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@8->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [28] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
  __b9_from___b8:
    jmp __b9
    // main::@9
  __b9:
    // [29] call testProcport 
    // [68] phi from main::@9 to testProcport [phi:main::@9->testProcport]
  testProcport_from___b9:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@9->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@9->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) 0 [phi:main::@9->testProcport#2] -- vbuxx=vbuc1 
    ldx #0
    jsr testProcport
    // [30] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
  __b10_from___b9:
    jmp __b10
    // main::@10
  __b10:
    // [31] call testProcport 
    // [68] phi from main::@10 to testProcport [phi:main::@10->testProcport]
  testProcport_from___b10:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@10->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@10->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@10->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [32] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
  __b11_from___b10:
    jmp __b11
    // main::@11
  __b11:
    // [33] call testProcport 
    // [68] phi from main::@11 to testProcport [phi:main::@11->testProcport]
  testProcport_from___b11:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@11->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@11->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@11->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [34] phi from main::@11 to main::@12 [phi:main::@11->main::@12]
  __b12_from___b11:
    jmp __b12
    // main::@12
  __b12:
    // [35] call testProcport 
    // [68] phi from main::@12 to testProcport [phi:main::@12->testProcport]
  testProcport_from___b12:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@12->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@12->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@12->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [36] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
  __b13_from___b12:
    jmp __b13
    // main::@13
  __b13:
    // [37] call testProcport 
    // [68] phi from main::@13 to testProcport [phi:main::@13->testProcport]
  testProcport_from___b13:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@13->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@13->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@13->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [38] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
  __b14_from___b13:
    jmp __b14
    // main::@14
  __b14:
    // [39] call testProcport 
    // [68] phi from main::@14 to testProcport [phi:main::@14->testProcport]
  testProcport_from___b14:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@14->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $aa [phi:main::@14->testProcport#1] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@14->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [40] phi from main::@14 to main::@15 [phi:main::@14->main::@15]
  __b15_from___b14:
    jmp __b15
    // main::@15
  __b15:
    // [41] call testProcport 
    // [68] phi from main::@15 to testProcport [phi:main::@15->testProcport]
  testProcport_from___b15:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@15->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@15->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@15->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [42] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
  __b16_from___b15:
    jmp __b16
    // main::@16
  __b16:
    // [43] call testProcport 
    // [68] phi from main::@16 to testProcport [phi:main::@16->testProcport]
  testProcport_from___b16:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@16->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@16->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@16->testProcport#2] -- vbuxx=vbuc1 
    ldx #$55
    jsr testProcport
    // [44] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
  __b17_from___b16:
    jmp __b17
    // main::@17
  __b17:
    // [45] call testProcport 
    // [68] phi from main::@17 to testProcport [phi:main::@17->testProcport]
  testProcport_from___b17:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@17->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@17->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@17->testProcport#2] -- vbuxx=vbuc1 
    ldx #$55
    jsr testProcport
    // [46] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
  __b18_from___b17:
    jmp __b18
    // main::@18
  __b18:
    // [47] call testProcport 
    // [68] phi from main::@18 to testProcport [phi:main::@18->testProcport]
  testProcport_from___b18:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@18->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@18->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@18->testProcport#2] -- vbuxx=vbuc1 
    ldx #$55
    jsr testProcport
    // [48] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
  __b19_from___b18:
    jmp __b19
    // main::@19
  __b19:
    // [49] call testProcport 
    // [68] phi from main::@19 to testProcport [phi:main::@19->testProcport]
  testProcport_from___b19:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@19->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@19->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@19->testProcport#2] -- vbuxx=vbuc1 
    ldx #$aa
    jsr testProcport
    // [50] phi from main::@19 to main::@20 [phi:main::@19->main::@20]
  __b20_from___b19:
    jmp __b20
    // main::@20
  __b20:
    // [51] call testProcport 
    // [68] phi from main::@20 to testProcport [phi:main::@20->testProcport]
  testProcport_from___b20:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@20->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@20->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@20->testProcport#2] -- vbuxx=vbuc1 
    ldx #$aa
    jsr testProcport
    // [52] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
  __b21_from___b20:
    jmp __b21
    // main::@21
  __b21:
    // [53] call testProcport 
    // [68] phi from main::@21 to testProcport [phi:main::@21->testProcport]
  testProcport_from___b21:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@21->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $aa [phi:main::@21->testProcport#1] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@21->testProcport#2] -- vbuxx=vbuc1 
    ldx #$aa
    jsr testProcport
    // [54] phi from main::@21 to main::@22 [phi:main::@21->main::@22]
  __b22_from___b21:
    jmp __b22
    // main::@22
  __b22:
    // [55] call testProcport 
    // [68] phi from main::@22 to testProcport [phi:main::@22->testProcport]
  testProcport_from___b22:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@22->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $d0 [phi:main::@22->testProcport#1] -- vbuz1=vbuc1 
    lda #$d0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@22->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [56] phi from main::@22 to main::@23 [phi:main::@22->main::@23]
  __b23_from___b22:
    jmp __b23
    // main::@23
  __b23:
    // [57] call testProcport 
    // [68] phi from main::@23 to testProcport [phi:main::@23->testProcport]
  testProcport_from___b23:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@23->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@23->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@23->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [58] phi from main::@23 to main::@24 [phi:main::@23->main::@24]
  __b24_from___b23:
    jmp __b24
    // main::@24
  __b24:
    // [59] call testProcport 
    // [68] phi from main::@24 to testProcport [phi:main::@24->testProcport]
  testProcport_from___b24:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $15 [phi:main::@24->testProcport#0] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $15 [phi:main::@24->testProcport#1] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@24->testProcport#2] -- vbuxx=vbuc1 
    ldx #$17
    jsr testProcport
    // [60] phi from main::@24 to main::@25 [phi:main::@24->main::@25]
  __b25_from___b24:
    jmp __b25
    // main::@25
  __b25:
    // [61] call testProcport 
    // [68] phi from main::@25 to testProcport [phi:main::@25->testProcport]
  testProcport_from___b25:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $17 [phi:main::@25->testProcport#0] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $15 [phi:main::@25->testProcport#1] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@25->testProcport#2] -- vbuxx=vbuc1 
    ldx #$17
    jsr testProcport
    // [62] phi from main::@25 to main::@26 [phi:main::@25->main::@26]
  __b26_from___b25:
    jmp __b26
    // main::@26
  __b26:
    // [63] call testProcport 
    // [68] phi from main::@26 to testProcport [phi:main::@26->testProcport]
  testProcport_from___b26:
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $17 [phi:main::@26->testProcport#0] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $17 [phi:main::@26->testProcport#1] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@26->testProcport#2] -- vbuxx=vbuc1 
    ldx #$17
    jsr testProcport
    jmp __b27
    // main::@27
  __b27:
    // asm { cli  }
    // Enable interrupts
    cli
    // [65] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    // Return to normal settings
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // [66] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta PROCPORT
    jmp __b1
    // main::@1
  __b1:
    // [67] *((const byte*) SCREEN+(word) $3e7) ← ++ *((const byte*) SCREEN+(word) $3e7) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc SCREEN+$3e7
    jmp __b1
    str: .text "ddr port ddr2 $00 $01 $a000 $d000 $e000"
    .byte 0
}
  // testProcport
// testProcport(byte register(X) ddr, byte zeropage(2) port, byte zeropage(3) ddr2)
testProcport: {
    .label port = 2
    .label ddr2 = 3
    // [69] *((const byte*) PROCPORT_DDR) ← (byte) $ff -- _deref_pbuc1=vbuc2 
    lda #$ff
    sta PROCPORT_DDR
    // [70] *((const byte*) PROCPORT) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta PROCPORT
    // [71] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr#23 -- _deref_pbuc1=vbuxx 
    stx PROCPORT_DDR
    // [72] *((const byte*) PROCPORT) ← (byte) testProcport::port#23 -- _deref_pbuc1=vbuz1 
    lda.z port
    sta PROCPORT
    // [73] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr2#23 -- _deref_pbuc1=vbuz1 
    lda.z ddr2
    sta PROCPORT_DDR
    // [74] (byte*~) print_char_cursor#125 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // [75] call print_str 
    // [126] phi from testProcport to print_str [phi:testProcport->print_str]
  print_str_from_testProcport:
    // [126] phi (byte*) print_char_cursor#121 = (byte*~) print_char_cursor#125 [phi:testProcport->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str [phi:testProcport->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    jmp __b1
    // testProcport::@1
  __b1:
    // [76] (byte) print_byte::b#0 ← (byte) testProcport::ddr#23
    // [77] call print_byte 
    // [114] phi from testProcport::@1 to print_byte [phi:testProcport::@1->print_byte]
  print_byte_from___b1:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#0 [phi:testProcport::@1->print_byte#0] -- register_copy 
    jsr print_byte
    // [78] phi from testProcport::@1 to testProcport::@2 [phi:testProcport::@1->testProcport::@2]
  __b2_from___b1:
    jmp __b2
    // testProcport::@2
  __b2:
    // [79] call print_str 
    // [126] phi from testProcport::@2 to print_str [phi:testProcport::@2->print_str]
  print_str_from___b2:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@2->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str1 [phi:testProcport::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    jmp __b3
    // testProcport::@3
  __b3:
    // [80] (byte) print_byte::b#1 ← (byte) testProcport::port#23 -- vbuxx=vbuz1 
    ldx.z port
    // [81] call print_byte 
    // [114] phi from testProcport::@3 to print_byte [phi:testProcport::@3->print_byte]
  print_byte_from___b3:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#1 [phi:testProcport::@3->print_byte#0] -- register_copy 
    jsr print_byte
    // [82] phi from testProcport::@3 to testProcport::@4 [phi:testProcport::@3->testProcport::@4]
  __b4_from___b3:
    jmp __b4
    // testProcport::@4
  __b4:
    // [83] call print_str 
    // [126] phi from testProcport::@4 to print_str [phi:testProcport::@4->print_str]
  print_str_from___b4:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@4->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str1 [phi:testProcport::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    jmp __b5
    // testProcport::@5
  __b5:
    // [84] (byte) print_byte::b#2 ← (byte) testProcport::ddr2#23 -- vbuxx=vbuz1 
    ldx.z ddr2
    // [85] call print_byte 
    // [114] phi from testProcport::@5 to print_byte [phi:testProcport::@5->print_byte]
  print_byte_from___b5:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#2 [phi:testProcport::@5->print_byte#0] -- register_copy 
    jsr print_byte
    // [86] phi from testProcport::@5 to testProcport::@6 [phi:testProcport::@5->testProcport::@6]
  __b6_from___b5:
    jmp __b6
    // testProcport::@6
  __b6:
    // [87] call print_str 
    // [126] phi from testProcport::@6 to print_str [phi:testProcport::@6->print_str]
  print_str_from___b6:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@6->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str3 [phi:testProcport::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    jmp __b7
    // testProcport::@7
  __b7:
    // [88] (byte) print_byte::b#3 ← *((const byte*) PROCPORT_DDR) -- vbuxx=_deref_pbuc1 
    ldx PROCPORT_DDR
    // [89] call print_byte 
    // [114] phi from testProcport::@7 to print_byte [phi:testProcport::@7->print_byte]
  print_byte_from___b7:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#3 [phi:testProcport::@7->print_byte#0] -- register_copy 
    jsr print_byte
    // [90] phi from testProcport::@7 to testProcport::@8 [phi:testProcport::@7->testProcport::@8]
  __b8_from___b7:
    jmp __b8
    // testProcport::@8
  __b8:
    // [91] call print_str 
    // [126] phi from testProcport::@8 to print_str [phi:testProcport::@8->print_str]
  print_str_from___b8:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@8->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str3 [phi:testProcport::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    jmp __b9
    // testProcport::@9
  __b9:
    // [92] (byte) print_byte::b#4 ← *((const byte*) PROCPORT) -- vbuxx=_deref_pbuc1 
    ldx PROCPORT
    // [93] call print_byte 
    // [114] phi from testProcport::@9 to print_byte [phi:testProcport::@9->print_byte]
  print_byte_from___b9:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#4 [phi:testProcport::@9->print_byte#0] -- register_copy 
    jsr print_byte
    // [94] phi from testProcport::@9 to testProcport::@10 [phi:testProcport::@9->testProcport::@10]
  __b10_from___b9:
    jmp __b10
    // testProcport::@10
  __b10:
    // [95] call print_str 
    // [126] phi from testProcport::@10 to print_str [phi:testProcport::@10->print_str]
  print_str_from___b10:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@10->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    jmp __b11
    // testProcport::@11
  __b11:
    // [96] (byte) print_byte::b#5 ← *((const byte*) BASIC_ROM) -- vbuxx=_deref_pbuc1 
    ldx BASIC_ROM
    // [97] call print_byte 
    // [114] phi from testProcport::@11 to print_byte [phi:testProcport::@11->print_byte]
  print_byte_from___b11:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#5 [phi:testProcport::@11->print_byte#0] -- register_copy 
    jsr print_byte
    // [98] phi from testProcport::@11 to testProcport::@12 [phi:testProcport::@11->testProcport::@12]
  __b12_from___b11:
    jmp __b12
    // testProcport::@12
  __b12:
    // [99] call print_str 
    // [126] phi from testProcport::@12 to print_str [phi:testProcport::@12->print_str]
  print_str_from___b12:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@12->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@12->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    jmp __b13
    // testProcport::@13
  __b13:
    // [100] (byte) print_byte::b#6 ← *((const byte*) IO_RAM) -- vbuxx=_deref_pbuc1 
    ldx IO_RAM
    // [101] call print_byte 
    // [114] phi from testProcport::@13 to print_byte [phi:testProcport::@13->print_byte]
  print_byte_from___b13:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#6 [phi:testProcport::@13->print_byte#0] -- register_copy 
    jsr print_byte
    // [102] phi from testProcport::@13 to testProcport::@14 [phi:testProcport::@13->testProcport::@14]
  __b14_from___b13:
    jmp __b14
    // testProcport::@14
  __b14:
    // [103] call print_str 
    // [126] phi from testProcport::@14 to print_str [phi:testProcport::@14->print_str]
  print_str_from___b14:
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@14->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@14->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    jmp __b15
    // testProcport::@15
  __b15:
    // [104] (byte) print_byte::b#7 ← *((const byte*) KERNAL_ROM) -- vbuxx=_deref_pbuc1 
    ldx KERNAL_ROM
    // [105] call print_byte 
    // [114] phi from testProcport::@15 to print_byte [phi:testProcport::@15->print_byte]
  print_byte_from___b15:
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#7 [phi:testProcport::@15->print_byte#0] -- register_copy 
    jsr print_byte
    // [106] phi from testProcport::@15 to testProcport::@16 [phi:testProcport::@15->testProcport::@16]
  __b16_from___b15:
    jmp __b16
    // testProcport::@16
  __b16:
    // [107] call print_ln 
    // [109] phi from testProcport::@16 to print_ln [phi:testProcport::@16->print_ln]
  print_ln_from___b16:
    // [109] phi (byte*) print_char_cursor#115 = (byte*) print_char_cursor#66 [phi:testProcport::@16->print_ln#0] -- register_copy 
    // [109] phi (byte*) print_line_cursor#67 = (byte*) print_line_cursor#1 [phi:testProcport::@16->print_ln#1] -- register_copy 
    jsr print_ln
    jmp __breturn
    // testProcport::@return
  __breturn:
    // [108] return 
    rts
    str: .text " "
    .byte 0
    str1: .text "   "
    .byte 0
    str3: .text "  "
    .byte 0
    str5: .text "    "
    .byte 0
}
  // print_ln
// Print a newline
print_ln: {
    // [110] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  __b1_from_print_ln:
  __b1_from___b1:
    // [110] phi (byte*) print_line_cursor#34 = (byte*) print_line_cursor#67 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp __b1
    // print_ln::@1
  __b1:
    // [111] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#34 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // [112] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1_from___b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1_from___b1
  !:
    jmp __breturn
    // print_ln::@return
  __breturn:
    // [113] return 
    rts
}
  // print_byte
// Print a byte as HEX
// print_byte(byte register(X) b)
print_byte: {
    // [115] (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (byte) 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [116] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [117] call print_char 
    // [122] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
    // [122] phi (byte*) print_char_cursor#65 = (byte*) print_char_cursor#114 [phi:print_byte->print_char#0] -- register_copy 
    // [122] phi (byte) print_char::ch#2 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp __b1
    // print_byte::@1
  __b1:
    // [118] (byte~) print_byte::$2 ← (byte) print_byte::b#8 & (byte) $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // [119] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2) -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [120] call print_char 
    // [122] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from___b1:
    // [122] phi (byte*) print_char_cursor#65 = (byte*) print_char_cursor#66 [phi:print_byte::@1->print_char#0] -- register_copy 
    // [122] phi (byte) print_char::ch#2 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp __breturn
    // print_byte::@return
  __breturn:
    // [121] return 
    rts
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // [123] *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // [124] (byte*) print_char_cursor#66 ← ++ (byte*) print_char_cursor#65 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    jmp __breturn
    // print_char::@return
  __breturn:
    // [125] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zeropage(6) str)
print_str: {
    .label str = 6
    // [127] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  __b1_from_print_str:
  __b1_from___b2:
    // [127] phi (byte*) print_char_cursor#114 = (byte*) print_char_cursor#121 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
    // [127] phi (byte*) print_str::str#10 = (byte*) print_str::str#12 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp __b1
    // print_str::@1
  __b1:
    // [128] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    jmp __breturn
    // print_str::@return
  __breturn:
    // [129] return 
    rts
    // print_str::@2
  __b2:
    // [130] *((byte*) print_char_cursor#114) ← *((byte*) print_str::str#10) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (print_char_cursor),y
    // [131] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#114 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // [132] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#10 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1_from___b2
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // [134] call memset 
    // [136] phi from print_cls to memset [phi:print_cls->memset]
  memset_from_print_cls:
    jsr memset
    jmp __breturn
    // print_cls::@return
  __breturn:
    // [135] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = $400
    .label end = str+num
    .label dst = 8
    // [137] phi from memset to memset::@1 [phi:memset->memset::@1]
  __b1_from_memset:
    // [137] phi (byte*) memset::dst#2 = (byte*)(const void*) memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    jmp __b1
    // memset::@1
  __b1:
    // [138] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    jmp __breturn
    // memset::@return
  __breturn:
    // [139] return 
    rts
    // memset::@2
  __b2:
    // [140] *((byte*) memset::dst#2) ← (const byte) memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // [141] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [137] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
  __b1_from___b2:
    // [137] phi (byte*) memset::dst#2 = (byte*) memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
  print_hextab: .text "0123456789abcdef"

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __bend
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __b16
Removing instruction jmp __b17
Removing instruction jmp __b18
Removing instruction jmp __b19
Removing instruction jmp __b20
Removing instruction jmp __b21
Removing instruction jmp __b22
Removing instruction jmp __b23
Removing instruction jmp __b24
Removing instruction jmp __b25
Removing instruction jmp __b26
Removing instruction jmp __b27
Removing instruction jmp __b1
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b5
Removing instruction jmp __b6
Removing instruction jmp __b7
Removing instruction jmp __b8
Removing instruction jmp __b9
Removing instruction jmp __b10
Removing instruction jmp __b11
Removing instruction jmp __b12
Removing instruction jmp __b13
Removing instruction jmp __b14
Removing instruction jmp __b15
Removing instruction jmp __b16
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction lda #0
Replacing instruction ldx #0 with TAX
Removing instruction lda #0
Replacing instruction ldx #$ff with TAX
Removing instruction lda #$ff
Replacing instruction ldx #$ff with TAX
Removing instruction lda #$55
Replacing instruction ldx #$55 with TAX
Removing instruction lda #$aa
Replacing instruction ldx #$aa with TAX
Removing instruction lda #$55
Removing instruction lda #$15
Removing instruction lda #$17
Replacing instruction ldx #$17 with TAX
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label __bbegin with __b1
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b1 with __b1
Replacing label __b1_from___b2 with __b1
Removing instruction __bbegin:
Removing instruction __b1_from___bbegin:
Removing instruction __bend_from___b1:
Removing instruction __b2_from_main:
Removing instruction print_str_from___b2:
Removing instruction __b3_from___b2:
Removing instruction print_ln_from___b3:
Removing instruction __b4_from___b3:
Removing instruction testProcport_from___b4:
Removing instruction __b5_from___b4:
Removing instruction testProcport_from___b5:
Removing instruction __b6_from___b5:
Removing instruction testProcport_from___b6:
Removing instruction __b7_from___b6:
Removing instruction testProcport_from___b7:
Removing instruction __b8_from___b7:
Removing instruction testProcport_from___b8:
Removing instruction __b9_from___b8:
Removing instruction testProcport_from___b9:
Removing instruction __b10_from___b9:
Removing instruction testProcport_from___b10:
Removing instruction __b11_from___b10:
Removing instruction testProcport_from___b11:
Removing instruction __b12_from___b11:
Removing instruction testProcport_from___b12:
Removing instruction __b13_from___b12:
Removing instruction testProcport_from___b13:
Removing instruction __b14_from___b13:
Removing instruction testProcport_from___b14:
Removing instruction __b15_from___b14:
Removing instruction testProcport_from___b15:
Removing instruction __b16_from___b15:
Removing instruction testProcport_from___b16:
Removing instruction __b17_from___b16:
Removing instruction testProcport_from___b17:
Removing instruction __b18_from___b17:
Removing instruction testProcport_from___b18:
Removing instruction __b19_from___b18:
Removing instruction testProcport_from___b19:
Removing instruction __b20_from___b19:
Removing instruction testProcport_from___b20:
Removing instruction __b21_from___b20:
Removing instruction testProcport_from___b21:
Removing instruction __b22_from___b21:
Removing instruction testProcport_from___b22:
Removing instruction __b23_from___b22:
Removing instruction testProcport_from___b23:
Removing instruction __b24_from___b23:
Removing instruction testProcport_from___b24:
Removing instruction __b25_from___b24:
Removing instruction testProcport_from___b25:
Removing instruction __b26_from___b25:
Removing instruction testProcport_from___b26:
Removing instruction print_byte_from___b1:
Removing instruction __b2_from___b1:
Removing instruction print_str_from___b2:
Removing instruction __b4_from___b3:
Removing instruction print_str_from___b4:
Removing instruction __b6_from___b5:
Removing instruction print_str_from___b6:
Removing instruction __b8_from___b7:
Removing instruction print_str_from___b8:
Removing instruction __b10_from___b9:
Removing instruction print_str_from___b10:
Removing instruction __b12_from___b11:
Removing instruction print_str_from___b12:
Removing instruction __b14_from___b13:
Removing instruction print_str_from___b14:
Removing instruction __b16_from___b15:
Removing instruction print_ln_from___b16:
Removing instruction __b1_from_print_ln:
Removing instruction __b1_from___b1:
Removing instruction __b1_from_print_str:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __bend:
Removing instruction print_cls_from_main:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction __b12:
Removing instruction __b13:
Removing instruction __b14:
Removing instruction __b15:
Removing instruction __b16:
Removing instruction __b17:
Removing instruction __b18:
Removing instruction __b19:
Removing instruction __b20:
Removing instruction __b21:
Removing instruction __b22:
Removing instruction __b23:
Removing instruction __b24:
Removing instruction __b25:
Removing instruction __b26:
Removing instruction __b27:
Removing instruction print_str_from_testProcport:
Removing instruction __b1:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction print_byte_from___b3:
Removing instruction __b4:
Removing instruction __b5:
Removing instruction print_byte_from___b5:
Removing instruction __b6:
Removing instruction __b7:
Removing instruction print_byte_from___b7:
Removing instruction __b8:
Removing instruction __b9:
Removing instruction print_byte_from___b9:
Removing instruction __b10:
Removing instruction __b11:
Removing instruction print_byte_from___b11:
Removing instruction __b12:
Removing instruction __b13:
Removing instruction print_byte_from___b13:
Removing instruction __b14:
Removing instruction __b15:
Removing instruction print_byte_from___b15:
Removing instruction __b16:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction print_char_from_print_byte:
Removing instruction __b1:
Removing instruction print_char_from___b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction memset_from_print_cls:
Removing instruction __breturn:
Removing instruction __b1_from_memset:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Succesful ASM optimization Pass5UnusedLabelElimination
Updating BasicUpstart to call main directly
Removing instruction jsr main
Succesful ASM optimization Pass5SkipBegin
Removing instruction __b1:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
(label) @1
(label) @begin
(label) @end
(const byte*) BASIC_ROM = (byte*) 40960
(const byte*) IO_RAM = (byte*) 53248
(const byte*) KERNAL_ROM = (byte*) 57344
(const byte*) PROCPORT = (byte*) 1
(const byte) PROCPORT_BASIC_KERNEL_IO = (byte) 7
(const byte*) PROCPORT_DDR = (byte*) 0
(const byte) PROCPORT_DDR_MEMORY_MASK = (byte) 7
(const byte) PROCPORT_KERNEL_IO = (byte) 6
(const byte) PROCPORT_RAM_ALL = (byte) 0
(const byte) PROCPORT_RAM_CHARROM = (byte) 1
(const byte) PROCPORT_RAM_IO = (byte) 5
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const byte*) SCREEN = (byte*) 1024
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(const string) main::str = (string) "ddr port ddr2 $00 $01 $a000 $d000 $e000"
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:8 22.0
(byte*) memset::dst#2 dst zp[2]:8 14.666666666666666
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(byte*) 1024
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte x 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 4.0
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#2 reg byte x 4.0
(byte) print_byte::b#3 reg byte x 4.0
(byte) print_byte::b#4 reg byte x 4.0
(byte) print_byte::b#5 reg byte x 4.0
(byte) print_byte::b#6 reg byte x 4.0
(byte) print_byte::b#7 reg byte x 4.0
(byte) print_byte::b#8 reg byte x 5.0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#2 reg byte a 6.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:4 11.0
(byte*) print_char_cursor#114 print_char_cursor zp[2]:4 1.5599999999999998
(byte*) print_char_cursor#115 print_char_cursor zp[2]:4 3.75
(byte*) print_char_cursor#121 print_char_cursor zp[2]:4 18.0
(byte*~) print_char_cursor#125 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#65 print_char_cursor zp[2]:4 4.0
(byte*) print_char_cursor#66 print_char_cursor zp[2]:4 0.8695652173913042
(void()) print_cls()
(label) print_cls::@return
(const byte[]) print_hextab = (string) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#1 print_line_cursor zp[2]:8 0.4111111111111111
(byte*) print_line_cursor#34 print_line_cursor zp[2]:8 24.0
(byte*) print_line_cursor#67 print_line_cursor zp[2]:8 4.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:6 22.0
(byte*) print_str::str#10 str zp[2]:6 11.5
(byte*) print_str::str#12 str zp[2]:6 2.0
(void()) testProcport((byte) testProcport::ddr , (byte) testProcport::port , (byte) testProcport::ddr2)
(label) testProcport::@1
(label) testProcport::@10
(label) testProcport::@11
(label) testProcport::@12
(label) testProcport::@13
(label) testProcport::@14
(label) testProcport::@15
(label) testProcport::@16
(label) testProcport::@2
(label) testProcport::@3
(label) testProcport::@4
(label) testProcport::@5
(label) testProcport::@6
(label) testProcport::@7
(label) testProcport::@8
(label) testProcport::@9
(label) testProcport::@return
(byte) testProcport::ddr
(byte) testProcport::ddr#23 reg byte x 0.5
(byte) testProcport::ddr2
(byte) testProcport::ddr2#23 ddr2 zp[1]:3 0.25
(byte) testProcport::port
(byte) testProcport::port#23 port zp[1]:2 0.3333333333333333
(const string) testProcport::str = (string) " "
(const string) testProcport::str1 = (string) "   "
(const string) testProcport::str3 = (string) "  "
(const string) testProcport::str5 = (string) "    "

reg byte x [ testProcport::ddr#23 ]
zp[1]:2 [ testProcport::port#23 ]
zp[1]:3 [ testProcport::ddr2#23 ]
reg byte x [ print_byte::b#8 print_byte::b#0 print_byte::b#5 print_byte::b#6 print_byte::b#7 print_byte::b#1 print_byte::b#2 print_byte::b#3 print_byte::b#4 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp[2]:4 [ print_char_cursor#121 print_char_cursor#125 print_char_cursor#65 print_char_cursor#115 print_char_cursor#114 print_char_cursor#66 print_char_cursor#1 ]
zp[2]:6 [ print_str::str#10 print_str::str#12 print_str::str#0 ]
zp[2]:8 [ memset::dst#2 memset::dst#1 print_line_cursor#34 print_line_cursor#67 print_line_cursor#1 ]
reg byte a [ print_byte::$0 ]
reg byte x [ print_byte::$2 ]


FINAL ASSEMBLER
Score: 2364

  // File Comments
// Test the functionality of the C64 processor port ($00/$01)
// Tests by setting the value of the processor port - and then printing out values of $00/$01/$a000/$d000/$e000
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  // Processor port data direction register
  .label PROCPORT_DDR = 0
  // Mask for PROCESSOR_PORT_DDR which allows only memory configuration to be written
  .const PROCPORT_DDR_MEMORY_MASK = 7
  // Processor Port Register controlling RAM/ROM configuration and the datasette
  .label PROCPORT = 1
  // RAM in all three areas $A000, $D000, $E000
  .const PROCPORT_RAM_ALL = 0
  // RAM in $A000, $E000 I/O in $D000
  .const PROCPORT_RAM_IO = 5
  // RAM in $A000, $E000 CHAR ROM in $D000
  .const PROCPORT_RAM_CHARROM = 1
  // RAM in $A000, I/O in $D000, KERNEL in $E000
  .const PROCPORT_KERNEL_IO = 6
  // BASIC in $A000, I/O in $D000, KERNEL in $E000
  .const PROCPORT_BASIC_KERNEL_IO = 7
  .label BASIC_ROM = $a000
  .label KERNAL_ROM = $e000
  .label IO_RAM = $d000
  .label SCREEN = $400
  .label print_char_cursor = 4
  .label print_line_cursor = 8
  // @begin
  // [1] phi from @begin to @1 [phi:@begin->@1]
  // @1
  // [2] call main 
  // [3] phi from @1 to @end [phi:@1->@end]
  // @end
  // main
main: {
    // asm
    // asm { sei  }
    // Avoid interrupts
    sei
    // *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
    // [5] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    // Write recognizable values into memory
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // *PROCPORT = PROCPORT_RAM_ALL
    // [6] *((const byte*) PROCPORT) ← (const byte) PROCPORT_RAM_ALL -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_RAM_ALL
    sta PROCPORT
    // *BASIC_ROM = $a0
    // [7] *((const byte*) BASIC_ROM) ← (byte) $a0 -- _deref_pbuc1=vbuc2 
    lda #$a0
    sta BASIC_ROM
    // *KERNAL_ROM = $e0
    // [8] *((const byte*) KERNAL_ROM) ← (byte) $e0 -- _deref_pbuc1=vbuc2 
    lda #$e0
    sta KERNAL_ROM
    // *IO_RAM = $d0
    // [9] *((const byte*) IO_RAM) ← (byte) $d0 -- _deref_pbuc1=vbuc2 
    lda #$d0
    sta IO_RAM
    // *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
    // [10] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // *PROCPORT = PROCPORT_BASIC_KERNEL_IO
    // [11] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta PROCPORT
    // *IO_RAM = $dd
    // [12] *((const byte*) IO_RAM) ← (byte) $dd -- _deref_pbuc1=vbuc2 
    lda #$dd
    sta IO_RAM
    // print_cls()
    // [13] call print_cls 
    // [133] phi from main to print_cls [phi:main->print_cls]
    jsr print_cls
    // [14] phi from main to main::@2 [phi:main->main::@2]
    // main::@2
    // print_str("ddr port ddr2 $00 $01 $a000 $d000 $e000")
    // [15] call print_str 
    // [126] phi from main::@2 to print_str [phi:main::@2->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) 1024 [phi:main::@2->print_str#0] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_char_cursor
    lda #>$400
    sta.z print_char_cursor+1
    // [126] phi (byte*) print_str::str#12 = (const string) main::str [phi:main::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // [16] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
    // main::@3
    // print_ln()
    // [17] call print_ln 
    // [109] phi from main::@3 to print_ln [phi:main::@3->print_ln]
    // [109] phi (byte*) print_char_cursor#115 = (byte*) print_char_cursor#114 [phi:main::@3->print_ln#0] -- register_copy 
    // [109] phi (byte*) print_line_cursor#67 = (byte*) 1024 [phi:main::@3->print_ln#1] -- pbuz1=pbuc1 
    lda #<$400
    sta.z print_line_cursor
    lda #>$400
    sta.z print_line_cursor+1
    jsr print_ln
    // [18] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
    // main::@4
    // testProcport(PROCPORT_DDR_MEMORY_MASK, PROCPORT_RAM_ALL, PROCPORT_DDR_MEMORY_MASK)
    // [19] call testProcport 
    // [68] phi from main::@4 to testProcport [phi:main::@4->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@4->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_ALL [phi:main::@4->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_ALL
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@4->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [20] phi from main::@4 to main::@5 [phi:main::@4->main::@5]
    // main::@5
    // testProcport(PROCPORT_DDR_MEMORY_MASK, PROCPORT_RAM_IO, PROCPORT_DDR_MEMORY_MASK)
    // [21] call testProcport 
    // [68] phi from main::@5 to testProcport [phi:main::@5->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@5->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_IO [phi:main::@5->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@5->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [22] phi from main::@5 to main::@6 [phi:main::@5->main::@6]
    // main::@6
    // testProcport(PROCPORT_DDR_MEMORY_MASK, PROCPORT_RAM_CHARROM, PROCPORT_DDR_MEMORY_MASK)
    // [23] call testProcport 
    // [68] phi from main::@6 to testProcport [phi:main::@6->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@6->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_RAM_CHARROM [phi:main::@6->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_RAM_CHARROM
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@6->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [24] phi from main::@6 to main::@7 [phi:main::@6->main::@7]
    // main::@7
    // testProcport(PROCPORT_DDR_MEMORY_MASK, PROCPORT_KERNEL_IO, PROCPORT_DDR_MEMORY_MASK)
    // [25] call testProcport 
    // [68] phi from main::@7 to testProcport [phi:main::@7->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@7->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_KERNEL_IO [phi:main::@7->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_KERNEL_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@7->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [26] phi from main::@7 to main::@8 [phi:main::@7->main::@8]
    // main::@8
    // testProcport(PROCPORT_DDR_MEMORY_MASK, PROCPORT_BASIC_KERNEL_IO, PROCPORT_DDR_MEMORY_MASK)
    // [27] call testProcport 
    // [68] phi from main::@8 to testProcport [phi:main::@8->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@8->testProcport#0] -- vbuz1=vbuc1 
    lda #PROCPORT_DDR_MEMORY_MASK
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (const byte) PROCPORT_BASIC_KERNEL_IO [phi:main::@8->testProcport#1] -- vbuz1=vbuc1 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (const byte) PROCPORT_DDR_MEMORY_MASK [phi:main::@8->testProcport#2] -- vbuxx=vbuc1 
    ldx #PROCPORT_DDR_MEMORY_MASK
    jsr testProcport
    // [28] phi from main::@8 to main::@9 [phi:main::@8->main::@9]
    // main::@9
    // testProcport($00, $00, $00)
    // [29] call testProcport 
    // [68] phi from main::@9 to testProcport [phi:main::@9->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@9->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@9->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) 0 [phi:main::@9->testProcport#2] -- vbuxx=vbuc1 
    tax
    jsr testProcport
    // [30] phi from main::@9 to main::@10 [phi:main::@9->main::@10]
    // main::@10
    // testProcport($ff, $00, $00)
    // [31] call testProcport 
    // [68] phi from main::@10 to testProcport [phi:main::@10->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@10->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@10->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@10->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [32] phi from main::@10 to main::@11 [phi:main::@10->main::@11]
    // main::@11
    // testProcport($ff, $ff, $00)
    // [33] call testProcport 
    // [68] phi from main::@11 to testProcport [phi:main::@11->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@11->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@11->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@11->testProcport#2] -- vbuxx=vbuc1 
    tax
    jsr testProcport
    // [34] phi from main::@11 to main::@12 [phi:main::@11->main::@12]
    // main::@12
    // testProcport($ff, $00, $ff)
    // [35] call testProcport 
    // [68] phi from main::@12 to testProcport [phi:main::@12->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@12->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@12->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@12->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [36] phi from main::@12 to main::@13 [phi:main::@12->main::@13]
    // main::@13
    // testProcport($ff, $55, $ff)
    // [37] call testProcport 
    // [68] phi from main::@13 to testProcport [phi:main::@13->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@13->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@13->testProcport#1] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@13->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [38] phi from main::@13 to main::@14 [phi:main::@13->main::@14]
    // main::@14
    // testProcport($ff, $aa, $ff)
    // [39] call testProcport 
    // [68] phi from main::@14 to testProcport [phi:main::@14->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@14->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $aa [phi:main::@14->testProcport#1] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@14->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [40] phi from main::@14 to main::@15 [phi:main::@14->main::@15]
    // main::@15
    // testProcport($ff, $ff, $ff)
    // [41] call testProcport 
    // [68] phi from main::@15 to testProcport [phi:main::@15->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $ff [phi:main::@15->testProcport#0] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@15->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@15->testProcport#2] -- vbuxx=vbuc1 
    tax
    jsr testProcport
    // [42] phi from main::@15 to main::@16 [phi:main::@15->main::@16]
    // main::@16
    // testProcport($55, $00, $55)
    // [43] call testProcport 
    // [68] phi from main::@16 to testProcport [phi:main::@16->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@16->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@16->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@16->testProcport#2] -- vbuxx=vbuc1 
    ldx #$55
    jsr testProcport
    // [44] phi from main::@16 to main::@17 [phi:main::@16->main::@17]
    // main::@17
    // testProcport($55, $55, $55)
    // [45] call testProcport 
    // [68] phi from main::@17 to testProcport [phi:main::@17->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@17->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@17->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@17->testProcport#2] -- vbuxx=vbuc1 
    tax
    jsr testProcport
    // [46] phi from main::@17 to main::@18 [phi:main::@17->main::@18]
    // main::@18
    // testProcport($55, $ff, $55)
    // [47] call testProcport 
    // [68] phi from main::@18 to testProcport [phi:main::@18->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@18->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@18->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $55 [phi:main::@18->testProcport#2] -- vbuxx=vbuc1 
    ldx #$55
    jsr testProcport
    // [48] phi from main::@18 to main::@19 [phi:main::@18->main::@19]
    // main::@19
    // testProcport($aa, $00, $aa)
    // [49] call testProcport 
    // [68] phi from main::@19 to testProcport [phi:main::@19->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@19->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) 0 [phi:main::@19->testProcport#1] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@19->testProcport#2] -- vbuxx=vbuc1 
    ldx #$aa
    jsr testProcport
    // [50] phi from main::@19 to main::@20 [phi:main::@19->main::@20]
    // main::@20
    // testProcport($aa, $ff, $aa)
    // [51] call testProcport 
    // [68] phi from main::@20 to testProcport [phi:main::@20->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@20->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $ff [phi:main::@20->testProcport#1] -- vbuz1=vbuc1 
    lda #$ff
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@20->testProcport#2] -- vbuxx=vbuc1 
    ldx #$aa
    jsr testProcport
    // [52] phi from main::@20 to main::@21 [phi:main::@20->main::@21]
    // main::@21
    // testProcport($aa, $aa, $aa)
    // [53] call testProcport 
    // [68] phi from main::@21 to testProcport [phi:main::@21->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $aa [phi:main::@21->testProcport#0] -- vbuz1=vbuc1 
    lda #$aa
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $aa [phi:main::@21->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $aa [phi:main::@21->testProcport#2] -- vbuxx=vbuc1 
    tax
    jsr testProcport
    // [54] phi from main::@21 to main::@22 [phi:main::@21->main::@22]
    // main::@22
    // testProcport($ff, $d0, $00)
    // [55] call testProcport 
    // [68] phi from main::@22 to testProcport [phi:main::@22->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) 0 [phi:main::@22->testProcport#0] -- vbuz1=vbuc1 
    lda #0
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $d0 [phi:main::@22->testProcport#1] -- vbuz1=vbuc1 
    lda #$d0
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@22->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [56] phi from main::@22 to main::@23 [phi:main::@22->main::@23]
    // main::@23
    // testProcport($ff, $55, $55)
    // [57] call testProcport 
    // [68] phi from main::@23 to testProcport [phi:main::@23->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $55 [phi:main::@23->testProcport#0] -- vbuz1=vbuc1 
    lda #$55
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $55 [phi:main::@23->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $ff [phi:main::@23->testProcport#2] -- vbuxx=vbuc1 
    ldx #$ff
    jsr testProcport
    // [58] phi from main::@23 to main::@24 [phi:main::@23->main::@24]
    // main::@24
    // testProcport($17, $15, $15)
    // [59] call testProcport 
    // [68] phi from main::@24 to testProcport [phi:main::@24->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $15 [phi:main::@24->testProcport#0] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $15 [phi:main::@24->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@24->testProcport#2] -- vbuxx=vbuc1 
    ldx #$17
    jsr testProcport
    // [60] phi from main::@24 to main::@25 [phi:main::@24->main::@25]
    // main::@25
    // testProcport($17, $15, $17)
    // [61] call testProcport 
    // [68] phi from main::@25 to testProcport [phi:main::@25->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $17 [phi:main::@25->testProcport#0] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $15 [phi:main::@25->testProcport#1] -- vbuz1=vbuc1 
    lda #$15
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@25->testProcport#2] -- vbuxx=vbuc1 
    ldx #$17
    jsr testProcport
    // [62] phi from main::@25 to main::@26 [phi:main::@25->main::@26]
    // main::@26
    // testProcport($17, $17, $17)
    // [63] call testProcport 
    // [68] phi from main::@26 to testProcport [phi:main::@26->testProcport]
    // [68] phi (byte) testProcport::ddr2#23 = (byte) $17 [phi:main::@26->testProcport#0] -- vbuz1=vbuc1 
    lda #$17
    sta.z testProcport.ddr2
    // [68] phi (byte) testProcport::port#23 = (byte) $17 [phi:main::@26->testProcport#1] -- vbuz1=vbuc1 
    sta.z testProcport.port
    // [68] phi (byte) testProcport::ddr#23 = (byte) $17 [phi:main::@26->testProcport#2] -- vbuxx=vbuc1 
    tax
    jsr testProcport
    // main::@27
    // asm
    // asm { cli  }
    // Enable interrupts
    cli
    // *PROCPORT_DDR = PROCPORT_DDR_MEMORY_MASK
    // [65] *((const byte*) PROCPORT_DDR) ← (const byte) PROCPORT_DDR_MEMORY_MASK -- _deref_pbuc1=vbuc2 
    // Return to normal settings
    lda #PROCPORT_DDR_MEMORY_MASK
    sta PROCPORT_DDR
    // *PROCPORT = PROCPORT_BASIC_KERNEL_IO
    // [66] *((const byte*) PROCPORT) ← (const byte) PROCPORT_BASIC_KERNEL_IO -- _deref_pbuc1=vbuc2 
    lda #PROCPORT_BASIC_KERNEL_IO
    sta PROCPORT
    // main::@1
  __b1:
    // (*(SCREEN+999))++;
    // [67] *((const byte*) SCREEN+(word) $3e7) ← ++ *((const byte*) SCREEN+(word) $3e7) -- _deref_pbuc1=_inc__deref_pbuc1 
    inc SCREEN+$3e7
    jmp __b1
    str: .text "ddr port ddr2 $00 $01 $a000 $d000 $e000"
    .byte 0
}
  // testProcport
// testProcport(byte register(X) ddr, byte zeropage(2) port, byte zeropage(3) ddr2)
testProcport: {
    .label port = 2
    .label ddr2 = 3
    // *PROCPORT_DDR = $ff
    // [69] *((const byte*) PROCPORT_DDR) ← (byte) $ff -- _deref_pbuc1=vbuc2 
    lda #$ff
    sta PROCPORT_DDR
    // *PROCPORT = $00
    // [70] *((const byte*) PROCPORT) ← (byte) 0 -- _deref_pbuc1=vbuc2 
    lda #0
    sta PROCPORT
    // *PROCPORT_DDR = ddr
    // [71] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr#23 -- _deref_pbuc1=vbuxx 
    stx PROCPORT_DDR
    // *PROCPORT = port
    // [72] *((const byte*) PROCPORT) ← (byte) testProcport::port#23 -- _deref_pbuc1=vbuz1 
    lda.z port
    sta PROCPORT
    // *PROCPORT_DDR = ddr2
    // [73] *((const byte*) PROCPORT_DDR) ← (byte) testProcport::ddr2#23 -- _deref_pbuc1=vbuz1 
    lda.z ddr2
    sta PROCPORT_DDR
    // [74] (byte*~) print_char_cursor#125 ← (byte*) print_line_cursor#1 -- pbuz1=pbuz2 
    lda.z print_line_cursor
    sta.z print_char_cursor
    lda.z print_line_cursor+1
    sta.z print_char_cursor+1
    // print_str(" ")
    // [75] call print_str 
    // [126] phi from testProcport to print_str [phi:testProcport->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*~) print_char_cursor#125 [phi:testProcport->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str [phi:testProcport->print_str#1] -- pbuz1=pbuc1 
    lda #<str
    sta.z print_str.str
    lda #>str
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@1
    // print_byte(ddr)
    // [76] (byte) print_byte::b#0 ← (byte) testProcport::ddr#23
    // [77] call print_byte 
    // [114] phi from testProcport::@1 to print_byte [phi:testProcport::@1->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#0 [phi:testProcport::@1->print_byte#0] -- register_copy 
    jsr print_byte
    // [78] phi from testProcport::@1 to testProcport::@2 [phi:testProcport::@1->testProcport::@2]
    // testProcport::@2
    // print_str("   ")
    // [79] call print_str 
    // [126] phi from testProcport::@2 to print_str [phi:testProcport::@2->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@2->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str1 [phi:testProcport::@2->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@3
    // print_byte(port)
    // [80] (byte) print_byte::b#1 ← (byte) testProcport::port#23 -- vbuxx=vbuz1 
    ldx.z port
    // [81] call print_byte 
    // [114] phi from testProcport::@3 to print_byte [phi:testProcport::@3->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#1 [phi:testProcport::@3->print_byte#0] -- register_copy 
    jsr print_byte
    // [82] phi from testProcport::@3 to testProcport::@4 [phi:testProcport::@3->testProcport::@4]
    // testProcport::@4
    // print_str("   ")
    // [83] call print_str 
    // [126] phi from testProcport::@4 to print_str [phi:testProcport::@4->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@4->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str1 [phi:testProcport::@4->print_str#1] -- pbuz1=pbuc1 
    lda #<str1
    sta.z print_str.str
    lda #>str1
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@5
    // print_byte(ddr2)
    // [84] (byte) print_byte::b#2 ← (byte) testProcport::ddr2#23 -- vbuxx=vbuz1 
    ldx.z ddr2
    // [85] call print_byte 
    // [114] phi from testProcport::@5 to print_byte [phi:testProcport::@5->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#2 [phi:testProcport::@5->print_byte#0] -- register_copy 
    jsr print_byte
    // [86] phi from testProcport::@5 to testProcport::@6 [phi:testProcport::@5->testProcport::@6]
    // testProcport::@6
    // print_str("  ")
    // [87] call print_str 
    // [126] phi from testProcport::@6 to print_str [phi:testProcport::@6->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@6->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str3 [phi:testProcport::@6->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@7
    // print_byte(*PROCPORT_DDR)
    // [88] (byte) print_byte::b#3 ← *((const byte*) PROCPORT_DDR) -- vbuxx=_deref_pbuc1 
    ldx PROCPORT_DDR
    // [89] call print_byte 
    // [114] phi from testProcport::@7 to print_byte [phi:testProcport::@7->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#3 [phi:testProcport::@7->print_byte#0] -- register_copy 
    jsr print_byte
    // [90] phi from testProcport::@7 to testProcport::@8 [phi:testProcport::@7->testProcport::@8]
    // testProcport::@8
    // print_str("  ")
    // [91] call print_str 
    // [126] phi from testProcport::@8 to print_str [phi:testProcport::@8->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@8->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str3 [phi:testProcport::@8->print_str#1] -- pbuz1=pbuc1 
    lda #<str3
    sta.z print_str.str
    lda #>str3
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@9
    // print_byte(*PROCPORT)
    // [92] (byte) print_byte::b#4 ← *((const byte*) PROCPORT) -- vbuxx=_deref_pbuc1 
    ldx PROCPORT
    // [93] call print_byte 
    // [114] phi from testProcport::@9 to print_byte [phi:testProcport::@9->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#4 [phi:testProcport::@9->print_byte#0] -- register_copy 
    jsr print_byte
    // [94] phi from testProcport::@9 to testProcport::@10 [phi:testProcport::@9->testProcport::@10]
    // testProcport::@10
    // print_str("    ")
    // [95] call print_str 
    // [126] phi from testProcport::@10 to print_str [phi:testProcport::@10->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@10->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@10->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@11
    // print_byte(*BASIC_ROM)
    // [96] (byte) print_byte::b#5 ← *((const byte*) BASIC_ROM) -- vbuxx=_deref_pbuc1 
    ldx BASIC_ROM
    // [97] call print_byte 
    // [114] phi from testProcport::@11 to print_byte [phi:testProcport::@11->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#5 [phi:testProcport::@11->print_byte#0] -- register_copy 
    jsr print_byte
    // [98] phi from testProcport::@11 to testProcport::@12 [phi:testProcport::@11->testProcport::@12]
    // testProcport::@12
    // print_str("    ")
    // [99] call print_str 
    // [126] phi from testProcport::@12 to print_str [phi:testProcport::@12->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@12->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@12->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@13
    // print_byte(*IO_RAM)
    // [100] (byte) print_byte::b#6 ← *((const byte*) IO_RAM) -- vbuxx=_deref_pbuc1 
    ldx IO_RAM
    // [101] call print_byte 
    // [114] phi from testProcport::@13 to print_byte [phi:testProcport::@13->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#6 [phi:testProcport::@13->print_byte#0] -- register_copy 
    jsr print_byte
    // [102] phi from testProcport::@13 to testProcport::@14 [phi:testProcport::@13->testProcport::@14]
    // testProcport::@14
    // print_str("    ")
    // [103] call print_str 
    // [126] phi from testProcport::@14 to print_str [phi:testProcport::@14->print_str]
    // [126] phi (byte*) print_char_cursor#121 = (byte*) print_char_cursor#66 [phi:testProcport::@14->print_str#0] -- register_copy 
    // [126] phi (byte*) print_str::str#12 = (const string) testProcport::str5 [phi:testProcport::@14->print_str#1] -- pbuz1=pbuc1 
    lda #<str5
    sta.z print_str.str
    lda #>str5
    sta.z print_str.str+1
    jsr print_str
    // testProcport::@15
    // print_byte(*KERNAL_ROM)
    // [104] (byte) print_byte::b#7 ← *((const byte*) KERNAL_ROM) -- vbuxx=_deref_pbuc1 
    ldx KERNAL_ROM
    // [105] call print_byte 
    // [114] phi from testProcport::@15 to print_byte [phi:testProcport::@15->print_byte]
    // [114] phi (byte) print_byte::b#8 = (byte) print_byte::b#7 [phi:testProcport::@15->print_byte#0] -- register_copy 
    jsr print_byte
    // [106] phi from testProcport::@15 to testProcport::@16 [phi:testProcport::@15->testProcport::@16]
    // testProcport::@16
    // print_ln()
    // [107] call print_ln 
    // [109] phi from testProcport::@16 to print_ln [phi:testProcport::@16->print_ln]
    // [109] phi (byte*) print_char_cursor#115 = (byte*) print_char_cursor#66 [phi:testProcport::@16->print_ln#0] -- register_copy 
    // [109] phi (byte*) print_line_cursor#67 = (byte*) print_line_cursor#1 [phi:testProcport::@16->print_ln#1] -- register_copy 
    jsr print_ln
    // testProcport::@return
    // }
    // [108] return 
    rts
    str: .text " "
    .byte 0
    str1: .text "   "
    .byte 0
    str3: .text "  "
    .byte 0
    str5: .text "    "
    .byte 0
}
  // print_ln
// Print a newline
print_ln: {
    // [110] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
    // [110] phi (byte*) print_line_cursor#34 = (byte*) print_line_cursor#67 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    // print_ln::@1
  __b1:
    // print_line_cursor + $28
    // [111] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#34 + (byte) $28 -- pbuz1=pbuz1_plus_vbuc1 
    lda #$28
    clc
    adc.z print_line_cursor
    sta.z print_line_cursor
    bcc !+
    inc.z print_line_cursor+1
  !:
    // while (print_line_cursor<print_char_cursor)
    // [112] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#115) goto print_ln::@1 -- pbuz1_lt_pbuz2_then_la1 
    lda.z print_line_cursor+1
    cmp.z print_char_cursor+1
    bcc __b1
    bne !+
    lda.z print_line_cursor
    cmp.z print_char_cursor
    bcc __b1
  !:
    // print_ln::@return
    // }
    // [113] return 
    rts
}
  // print_byte
// Print a byte as HEX
// print_byte(byte register(X) b)
print_byte: {
    // b>>4
    // [115] (byte~) print_byte::$0 ← (byte) print_byte::b#8 >> (byte) 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // print_char(print_hextab[b>>4])
    // [116] (byte) print_char::ch#0 ← *((const byte[]) print_hextab + (byte~) print_byte::$0) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda print_hextab,y
    // [117] call print_char 
    // [122] phi from print_byte to print_char [phi:print_byte->print_char]
    // [122] phi (byte*) print_char_cursor#65 = (byte*) print_char_cursor#114 [phi:print_byte->print_char#0] -- register_copy 
    // [122] phi (byte) print_char::ch#2 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    // print_byte::@1
    // b&$f
    // [118] (byte~) print_byte::$2 ← (byte) print_byte::b#8 & (byte) $f -- vbuxx=vbuxx_band_vbuc1 
    lda #$f
    axs #0
    // print_char(print_hextab[b&$f])
    // [119] (byte) print_char::ch#1 ← *((const byte[]) print_hextab + (byte~) print_byte::$2) -- vbuaa=pbuc1_derefidx_vbuxx 
    lda print_hextab,x
    // [120] call print_char 
    // [122] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
    // [122] phi (byte*) print_char_cursor#65 = (byte*) print_char_cursor#66 [phi:print_byte::@1->print_char#0] -- register_copy 
    // [122] phi (byte) print_char::ch#2 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    // print_byte::@return
    // }
    // [121] return 
    rts
}
  // print_char
// Print a single char
// print_char(byte register(A) ch)
print_char: {
    // *(print_char_cursor++) = ch
    // [123] *((byte*) print_char_cursor#65) ← (byte) print_char::ch#2 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (print_char_cursor),y
    // *(print_char_cursor++) = ch;
    // [124] (byte*) print_char_cursor#66 ← ++ (byte*) print_char_cursor#65 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // print_char::@return
    // }
    // [125] return 
    rts
}
  // print_str
// Print a zero-terminated string
// print_str(byte* zeropage(6) str)
print_str: {
    .label str = 6
    // [127] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
    // [127] phi (byte*) print_char_cursor#114 = (byte*) print_char_cursor#121 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
    // [127] phi (byte*) print_str::str#10 = (byte*) print_str::str#12 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    // print_str::@1
  __b1:
    // while(*str)
    // [128] if((byte) 0!=*((byte*) print_str::str#10)) goto print_str::@2 -- vbuc1_neq__deref_pbuz1_then_la1 
    ldy #0
    lda (str),y
    cmp #0
    bne __b2
    // print_str::@return
    // }
    // [129] return 
    rts
    // print_str::@2
  __b2:
    // *(print_char_cursor++) = *(str++)
    // [130] *((byte*) print_char_cursor#114) ← *((byte*) print_str::str#10) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    sta (print_char_cursor),y
    // *(print_char_cursor++) = *(str++);
    // [131] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#114 -- pbuz1=_inc_pbuz1 
    inc.z print_char_cursor
    bne !+
    inc.z print_char_cursor+1
  !:
    // [132] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#10 -- pbuz1=_inc_pbuz1 
    inc.z str
    bne !+
    inc.z str+1
  !:
    jmp __b1
}
  // print_cls
// Clear the screen. Also resets current line/char cursor.
print_cls: {
    // memset(print_screen, ' ', 1000)
    // [134] call memset 
    // [136] phi from print_cls to memset [phi:print_cls->memset]
    jsr memset
    // print_cls::@return
    // }
    // [135] return 
    rts
}
  // memset
// Copies the character c (an unsigned char) to the first num characters of the object pointed to by the argument str.
memset: {
    .const c = ' '
    .const num = $3e8
    .label str = $400
    .label end = str+num
    .label dst = 8
    // [137] phi from memset to memset::@1 [phi:memset->memset::@1]
    // [137] phi (byte*) memset::dst#2 = (byte*)(const void*) memset::str#0 [phi:memset->memset::@1#0] -- pbuz1=pbuc1 
    lda #<str
    sta.z dst
    lda #>str
    sta.z dst+1
    // memset::@1
  __b1:
    // for(char* dst = str; dst!=end; dst++)
    // [138] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2 -- pbuz1_neq_pbuc1_then_la1 
    lda.z dst+1
    cmp #>end
    bne __b2
    lda.z dst
    cmp #<end
    bne __b2
    // memset::@return
    // }
    // [139] return 
    rts
    // memset::@2
  __b2:
    // *dst = c
    // [140] *((byte*) memset::dst#2) ← (const byte) memset::c#0 -- _deref_pbuz1=vbuc1 
    lda #c
    ldy #0
    sta (dst),y
    // for(char* dst = str; dst!=end; dst++)
    // [141] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2 -- pbuz1=_inc_pbuz1 
    inc.z dst
    bne !+
    inc.z dst+1
  !:
    // [137] phi from memset::@2 to memset::@1 [phi:memset::@2->memset::@1]
    // [137] phi (byte*) memset::dst#2 = (byte*) memset::dst#1 [phi:memset::@2->memset::@1#0] -- register_copy 
    jmp __b1
}
  // File Data
  print_hextab: .text "0123456789abcdef"

