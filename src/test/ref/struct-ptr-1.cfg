
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@1/(byte) main::i#1 )
  [2] (byte~) main::$2 ← (byte) main::i#2 << (byte) 1
  [3] *((byte*)(const struct Point*) points + (byte~) main::$2) ← (byte) main::i#2
  [4] (byte~) main::$4 ← (byte) main::i#2 + (byte) 4
  [5] *((byte*)(const struct Point*) points+(const nomodify byte) OFFS_Y + (byte~) main::$2) ← (byte~) main::$4
  [6] (byte) main::i#1 ← ++ (byte) main::i#2
  [7] if((byte) main::i#1!=(byte) 4) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [8] (byte) main::i1#2 ← phi( main::@1/(byte) 0 main::@2/(byte) main::i1#1 )
  [9] (byte~) main::$8 ← (byte) main::i1#2 << (byte) 1
  [10] *((const nomodify byte*) main::SCREEN + (byte) main::i1#2) ← *((byte*)(const struct Point*) points + (byte~) main::$8)
  [11] *((const nomodify byte*) main::SCREEN+(byte) $28 + (byte) main::i1#2) ← *((byte*)(const struct Point*) points+(const nomodify byte) OFFS_Y + (byte~) main::$8)
  [12] (byte) main::i1#1 ← ++ (byte) main::i1#2
  [13] if((byte) main::i1#1!=(byte) 4) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@2
  [14] return 
  to:@return
