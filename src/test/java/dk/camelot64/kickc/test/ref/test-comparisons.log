PARSING src/test/java/dk/camelot64/kickc/test/test-comparisons.kc
import "print.kc"

void main() {
    print_cls();
    byte a = 7;
    for( byte i : 0..4 ) {
        byte r;
        byte b = $ce-a;
        byte[5] cs = { $07, $c7, $37, $97, $67 };
        r = '-'; if(a<b) r='+'; printu(a, "< @", b, r);
        r = '-'; if(a<$37) r='+'; printu(a, "< @", $37, r);
        r = '-'; if(a<cs[i]) r='+'; printu(a, "< @", cs[i], r);
        r = '-'; if(a<a) r='+'; printu(a, "< @", a, r);
        print_ln();
        r = '-'; if(a>b) r='+'; printu(a, "> @", b, r);
        r = '-'; if(a>$37) r='+'; printu(a, "> @", $37, r);
        r = '-'; if(a>cs[i]) r='+'; printu(a, "> @", cs[i], r);
        r = '-'; if(a>a) r='+'; printu(a, "> @", a, r);
        print_ln();
        r = '-'; if(a<=b) r='+'; printu(a, "<=@", b, r);
        r = '-'; if(a<=$37) r='+'; printu(a, "<=@", $37, r);
        r = '-'; if(a<=cs[i]) r='+'; printu(a, "<=@", cs[i], r);
        r = '-'; if(a<=a) r='+'; printu(a, "<=@", a, r);
        print_ln();
        r = '-'; if(a>=b) r='+'; printu(a, ">=@", b, r);
        r = '-'; if(a>=$37) r='+'; printu(a, ">=@", $37, r);
        r = '-'; if(a>=cs[i]) r='+'; printu(a, ">=@", cs[i], r);
        r = '-'; if(a>=a) r='+'; printu(a, ">=@", a, r);
        print_ln();
        r = '-'; if(a==b) r='+'; printu(a, "==@", b, r);
        r = '-'; if(a==$37) r='+'; printu(a, "==@", $37, r);
        r = '-'; if(a==cs[i]) r='+'; printu(a, "==@", cs[i], r);
        r = '-'; if(a==a) r='+'; printu(a, "==@", a, r);
        print_ln();
        a=a+$30;
    }
    do {
        // nothing;
    } while(true);
}


void printu(byte a, byte[] op, byte b, byte res) {
    print_char(' ');
    print_byte(a);
    print_str(op);
    print_byte(b);
    print_char(' ');
    print_char(res);
}

Importing print.kc
PARSING src/test/java/dk/camelot64/kickc/test/print.kc

byte* line_cursor = $0400;
byte* char_cursor = line_cursor;

// Print a zero-terminated string
void print_str(byte* str) {
    while(*str!='@') {
        *(char_cursor++) = *(str++);
    }
}

// Print a newline
void print_ln() {
    do {
        line_cursor = line_cursor + $28;
    } while (line_cursor<char_cursor);
    char_cursor = line_cursor;
}

// Print a signed word as HEX
void print_sword(signed word w) {
    if(w<0) {
        print_char('-');
        w = -w;
    }
    print_word((word)w);
}

// Print a signed byte as HEX
void print_sbyte(signed byte b) {
    if(b<0) {
        print_char('-');
        b = -b;
    }
    print_byte((byte)b);
}

// Print a word as HEX
void print_word(word w) {
    print_byte(>w);
    print_byte(<w);
}

// Print a byte as HEX
void print_byte(byte b) {
    // Table of hexadecimal digits
    const byte[] hextab = "0123456789abcdef";
    print_char(hextab[b>>4]);
    print_char(hextab[b&$f]);
}

// Print a single char
void print_char(byte ch) {
    *(char_cursor++) = ch;
}

// Clear the screen
void print_cls() {
    for(byte* sc=$0400; sc!=$0400+1000; sc++) {
        *sc = ' ';
    }
}



Adding pre/post-modifier (byte*) char_cursor ← ++ (byte*) char_cursor
Adding pre/post-modifier (byte*) print_str::str ← ++ (byte*) print_str::str
Adding pre/post-modifier (byte*) char_cursor ← ++ (byte*) char_cursor
Adding pre/post-modifier (byte*) print_cls::sc ← ++ (byte*) print_cls::sc

STATEMENTS
  (byte*) line_cursor ← (word/signed word) 1024
  (byte*) char_cursor ← (byte*) line_cursor
proc (void()) print_str((byte*) print_str::str)
print_str::@1:
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  goto print_str::@3
print_str::@2:
  *((byte*) char_cursor) ← *((byte*) print_str::str)
  (byte*) char_cursor ← ++ (byte*) char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  goto print_str::@1
print_str::@3:
print_str::@return:
  return 
endproc // print_str()
proc (void()) print_ln()
print_ln::@1:
  (byte*~) print_ln::$0 ← (byte*) line_cursor + (byte/signed byte/word/signed word) 40
  (byte*) line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor < (byte*) char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  (byte*) char_cursor ← (byte*) line_cursor
print_ln::@return:
  return 
endproc // print_ln()
proc (void()) print_sword((signed word) print_sword::w)
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
print_sword::@1:
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
print_sword::@return:
  return 
endproc // print_sword()
proc (void()) print_sbyte((signed byte) print_sbyte::b)
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
print_sbyte::@1:
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
print_sbyte::@return:
  return 
endproc // print_sbyte()
proc (void()) print_word((word) print_word::w)
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
print_word::@return:
  return 
endproc // print_word()
proc (void()) print_byte((byte) print_byte::b)
  (byte[]) print_byte::hextab ← (string) "0123456789abcdef"
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$2) 
print_byte::@return:
  return 
endproc // print_byte()
proc (void()) print_char((byte) print_char::ch)
  *((byte*) char_cursor) ← (byte) print_char::ch
  (byte*) char_cursor ← ++ (byte*) char_cursor
print_char::@return:
  return 
endproc // print_char()
proc (void()) print_cls()
  (byte*) print_cls::sc ← (word/signed word) 1024
print_cls::@1:
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (word/signed word~) print_cls::$0 ← (word/signed word) 1024 + (word/signed word) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (word/signed word~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
print_cls::@return:
  return 
endproc // print_cls()
proc (void()) main()
  (void~) main::$0 ← call print_cls 
  (byte) main::a ← (byte/signed byte/word/signed word) 7
  (byte) main::i ← (byte/signed byte/word/signed word) 0
main::@1:
  (byte/signed byte/word/signed word~) main::$1 ← (byte/word/signed word) 206 - (byte) main::a
  (byte) main::b ← (byte/signed byte/word/signed word~) main::$1
  (byte[5]) main::cs ← { (byte/signed byte/word/signed word) 7, (byte/word/signed word) 199, (byte/signed byte/word/signed word) 55, (byte/word/signed word) 151, (byte/signed byte/word/signed word) 103 }
  (byte) main::r ← (byte) '-'
  (boolean~) main::$2 ← (byte) main::a < (byte) main::b
  (boolean~) main::$3 ← ! (boolean~) main::$2
  if((boolean~) main::$3) goto main::@2
  (byte) main::r ← (byte) '+'
main::@2:
  (void~) main::$4 ← call printu (byte) main::a (string) "< @" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$5 ← (byte) main::a < (byte/signed byte/word/signed word) 55
  (boolean~) main::$6 ← ! (boolean~) main::$5
  if((boolean~) main::$6) goto main::@3
  (byte) main::r ← (byte) '+'
main::@3:
  (void~) main::$7 ← call printu (byte) main::a (string) "< @" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$8 ← (byte) main::a < *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$9 ← ! (boolean~) main::$8
  if((boolean~) main::$9) goto main::@4
  (byte) main::r ← (byte) '+'
main::@4:
  (void~) main::$10 ← call printu (byte) main::a (string) "< @" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$11 ← (byte) main::a < (byte) main::a
  (boolean~) main::$12 ← ! (boolean~) main::$11
  if((boolean~) main::$12) goto main::@5
  (byte) main::r ← (byte) '+'
main::@5:
  (void~) main::$13 ← call printu (byte) main::a (string) "< @" (byte) main::a (byte) main::r 
  (void~) main::$14 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$15 ← (byte) main::a > (byte) main::b
  (boolean~) main::$16 ← ! (boolean~) main::$15
  if((boolean~) main::$16) goto main::@6
  (byte) main::r ← (byte) '+'
main::@6:
  (void~) main::$17 ← call printu (byte) main::a (string) "> @" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$18 ← (byte) main::a > (byte/signed byte/word/signed word) 55
  (boolean~) main::$19 ← ! (boolean~) main::$18
  if((boolean~) main::$19) goto main::@7
  (byte) main::r ← (byte) '+'
main::@7:
  (void~) main::$20 ← call printu (byte) main::a (string) "> @" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$21 ← (byte) main::a > *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$22 ← ! (boolean~) main::$21
  if((boolean~) main::$22) goto main::@8
  (byte) main::r ← (byte) '+'
main::@8:
  (void~) main::$23 ← call printu (byte) main::a (string) "> @" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$24 ← (byte) main::a > (byte) main::a
  (boolean~) main::$25 ← ! (boolean~) main::$24
  if((boolean~) main::$25) goto main::@9
  (byte) main::r ← (byte) '+'
main::@9:
  (void~) main::$26 ← call printu (byte) main::a (string) "> @" (byte) main::a (byte) main::r 
  (void~) main::$27 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$28 ← (byte) main::a <= (byte) main::b
  (boolean~) main::$29 ← ! (boolean~) main::$28
  if((boolean~) main::$29) goto main::@10
  (byte) main::r ← (byte) '+'
main::@10:
  (void~) main::$30 ← call printu (byte) main::a (string) "<=@" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$31 ← (byte) main::a <= (byte/signed byte/word/signed word) 55
  (boolean~) main::$32 ← ! (boolean~) main::$31
  if((boolean~) main::$32) goto main::@11
  (byte) main::r ← (byte) '+'
main::@11:
  (void~) main::$33 ← call printu (byte) main::a (string) "<=@" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$34 ← (byte) main::a <= *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$35 ← ! (boolean~) main::$34
  if((boolean~) main::$35) goto main::@12
  (byte) main::r ← (byte) '+'
main::@12:
  (void~) main::$36 ← call printu (byte) main::a (string) "<=@" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$37 ← (byte) main::a <= (byte) main::a
  (boolean~) main::$38 ← ! (boolean~) main::$37
  if((boolean~) main::$38) goto main::@13
  (byte) main::r ← (byte) '+'
main::@13:
  (void~) main::$39 ← call printu (byte) main::a (string) "<=@" (byte) main::a (byte) main::r 
  (void~) main::$40 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$41 ← (byte) main::a >= (byte) main::b
  (boolean~) main::$42 ← ! (boolean~) main::$41
  if((boolean~) main::$42) goto main::@14
  (byte) main::r ← (byte) '+'
main::@14:
  (void~) main::$43 ← call printu (byte) main::a (string) ">=@" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$44 ← (byte) main::a >= (byte/signed byte/word/signed word) 55
  (boolean~) main::$45 ← ! (boolean~) main::$44
  if((boolean~) main::$45) goto main::@15
  (byte) main::r ← (byte) '+'
main::@15:
  (void~) main::$46 ← call printu (byte) main::a (string) ">=@" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$47 ← (byte) main::a >= *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$48 ← ! (boolean~) main::$47
  if((boolean~) main::$48) goto main::@16
  (byte) main::r ← (byte) '+'
main::@16:
  (void~) main::$49 ← call printu (byte) main::a (string) ">=@" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$50 ← (byte) main::a >= (byte) main::a
  (boolean~) main::$51 ← ! (boolean~) main::$50
  if((boolean~) main::$51) goto main::@17
  (byte) main::r ← (byte) '+'
main::@17:
  (void~) main::$52 ← call printu (byte) main::a (string) ">=@" (byte) main::a (byte) main::r 
  (void~) main::$53 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$54 ← (byte) main::a == (byte) main::b
  (boolean~) main::$55 ← ! (boolean~) main::$54
  if((boolean~) main::$55) goto main::@18
  (byte) main::r ← (byte) '+'
main::@18:
  (void~) main::$56 ← call printu (byte) main::a (string) "==@" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$57 ← (byte) main::a == (byte/signed byte/word/signed word) 55
  (boolean~) main::$58 ← ! (boolean~) main::$57
  if((boolean~) main::$58) goto main::@19
  (byte) main::r ← (byte) '+'
main::@19:
  (void~) main::$59 ← call printu (byte) main::a (string) "==@" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$60 ← (byte) main::a == *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$61 ← ! (boolean~) main::$60
  if((boolean~) main::$61) goto main::@20
  (byte) main::r ← (byte) '+'
main::@20:
  (void~) main::$62 ← call printu (byte) main::a (string) "==@" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$63 ← (byte) main::a == (byte) main::a
  (boolean~) main::$64 ← ! (boolean~) main::$63
  if((boolean~) main::$64) goto main::@21
  (byte) main::r ← (byte) '+'
main::@21:
  (void~) main::$65 ← call printu (byte) main::a (string) "==@" (byte) main::a (byte) main::r 
  (void~) main::$66 ← call print_ln 
  (byte/word~) main::$67 ← (byte) main::a + (byte/signed byte/word/signed word) 48
  (byte) main::a ← (byte/word~) main::$67
  (byte) main::i ← ++ (byte) main::i
  (boolean~) main::$68 ← (byte) main::i != (byte/signed byte/word/signed word) 5
  if((boolean~) main::$68) goto main::@1
main::@22:
  if(true) goto main::@22
main::@return:
  return 
endproc // main()
proc (void()) printu((byte) printu::a , (byte[]) printu::op , (byte) printu::b , (byte) printu::res)
  (void~) printu::$0 ← call print_char (byte) ' ' 
  (void~) printu::$1 ← call print_byte (byte) printu::a 
  (void~) printu::$2 ← call print_str (byte[]) printu::op 
  (void~) printu::$3 ← call print_byte (byte) printu::b 
  (void~) printu::$4 ← call print_char (byte) ' ' 
  (void~) printu::$5 ← call print_char (byte) printu::res 
printu::@return:
  return 
endproc // printu()
  call main 

SYMBOLS
(byte*) char_cursor
(byte*) line_cursor
(void()) main()
(void~) main::$0
(byte/signed byte/word/signed word~) main::$1
(void~) main::$10
(boolean~) main::$11
(boolean~) main::$12
(void~) main::$13
(void~) main::$14
(boolean~) main::$15
(boolean~) main::$16
(void~) main::$17
(boolean~) main::$18
(boolean~) main::$19
(boolean~) main::$2
(void~) main::$20
(boolean~) main::$21
(boolean~) main::$22
(void~) main::$23
(boolean~) main::$24
(boolean~) main::$25
(void~) main::$26
(void~) main::$27
(boolean~) main::$28
(boolean~) main::$29
(boolean~) main::$3
(void~) main::$30
(boolean~) main::$31
(boolean~) main::$32
(void~) main::$33
(boolean~) main::$34
(boolean~) main::$35
(void~) main::$36
(boolean~) main::$37
(boolean~) main::$38
(void~) main::$39
(void~) main::$4
(void~) main::$40
(boolean~) main::$41
(boolean~) main::$42
(void~) main::$43
(boolean~) main::$44
(boolean~) main::$45
(void~) main::$46
(boolean~) main::$47
(boolean~) main::$48
(void~) main::$49
(boolean~) main::$5
(boolean~) main::$50
(boolean~) main::$51
(void~) main::$52
(void~) main::$53
(boolean~) main::$54
(boolean~) main::$55
(void~) main::$56
(boolean~) main::$57
(boolean~) main::$58
(void~) main::$59
(boolean~) main::$6
(boolean~) main::$60
(boolean~) main::$61
(void~) main::$62
(boolean~) main::$63
(boolean~) main::$64
(void~) main::$65
(void~) main::$66
(byte/word~) main::$67
(boolean~) main::$68
(void~) main::$7
(boolean~) main::$8
(boolean~) main::$9
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(byte) main::a
(byte) main::b
(byte[5]) main::cs
(byte) main::i
(byte) main::r
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(void~) print_byte::$1
(byte~) print_byte::$2
(void~) print_byte::$3
(label) print_byte::@return
(byte) print_byte::b
(byte[]) print_byte::hextab
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(void()) print_cls()
(word/signed word~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@return
(void()) print_sbyte((signed byte) print_sbyte::b)
(boolean~) print_sbyte::$0
(boolean~) print_sbyte::$1
(void~) print_sbyte::$2
(signed byte~) print_sbyte::$3
(byte~) print_sbyte::$4
(void~) print_sbyte::$5
(label) print_sbyte::@1
(label) print_sbyte::@return
(signed byte) print_sbyte::b
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(void()) print_sword((signed word) print_sword::w)
(boolean~) print_sword::$0
(boolean~) print_sword::$1
(void~) print_sword::$2
(signed word~) print_sword::$3
(word~) print_sword::$4
(void~) print_sword::$5
(label) print_sword::@1
(label) print_sword::@return
(signed word) print_sword::w
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(void~) print_word::$1
(byte~) print_word::$2
(void~) print_word::$3
(label) print_word::@return
(word) print_word::w
(void()) printu((byte) printu::a , (byte[]) printu::op , (byte) printu::b , (byte) printu::res)
(void~) printu::$0
(void~) printu::$1
(void~) printu::$2
(void~) printu::$3
(void~) printu::$4
(void~) printu::$5
(label) printu::@return
(byte) printu::a
(byte) printu::b
(byte[]) printu::op
(byte) printu::res

Promoting word/signed word to byte* in line_cursor ← ((byte*)) 1024
Promoting word/signed word to byte* in print_cls::sc ← ((byte*)) 1024
INITIAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) line_cursor ← ((byte*)) (word/signed word) 1024
  (byte*) char_cursor ← (byte*) line_cursor
  to:@1
print_str: scope:[print_str]  from
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@4
print_str::@2: scope:[print_str]  from print_str::@1 print_str::@5
  *((byte*) char_cursor) ← *((byte*) print_str::str)
  (byte*) char_cursor ← ++ (byte*) char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  to:print_str::@1
print_str::@4: scope:[print_str]  from print_str::@1
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@4 print_str::@6
  to:print_str::@return
print_str::@5: scope:[print_str]  from
  to:print_str::@2
print_str::@6: scope:[print_str]  from
  to:print_str::@3
print_str::@return: scope:[print_str]  from print_str::@3
  return 
  to:@return
@1: scope:[]  from @begin
  to:@2
print_ln: scope:[print_ln]  from
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*~) print_ln::$0 ← (byte*) line_cursor + (byte/signed byte/word/signed word) 40
  (byte*) line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor < (byte*) char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) char_cursor ← (byte*) line_cursor
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  return 
  to:@return
@2: scope:[]  from @1
  to:@3
print_sword: scope:[print_sword]  from
  (boolean~) print_sword::$0 ← (signed word) print_sword::w < (byte/signed byte/word/signed word) 0
  (boolean~) print_sword::$1 ← ! (boolean~) print_sword::$0
  if((boolean~) print_sword::$1) goto print_sword::@1
  to:print_sword::@2
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@2
  (word~) print_sword::$4 ← ((word)) (signed word) print_sword::w
  (void~) print_sword::$5 ← call print_word (word~) print_sword::$4 
  to:print_sword::@return
print_sword::@2: scope:[print_sword]  from print_sword
  (void~) print_sword::$2 ← call print_char (byte) '-' 
  (signed word~) print_sword::$3 ← - (signed word) print_sword::w
  (signed word) print_sword::w ← (signed word~) print_sword::$3
  to:print_sword::@1
print_sword::@return: scope:[print_sword]  from print_sword::@1
  return 
  to:@return
@3: scope:[]  from @2
  to:@4
print_sbyte: scope:[print_sbyte]  from
  (boolean~) print_sbyte::$0 ← (signed byte) print_sbyte::b < (byte/signed byte/word/signed word) 0
  (boolean~) print_sbyte::$1 ← ! (boolean~) print_sbyte::$0
  if((boolean~) print_sbyte::$1) goto print_sbyte::@1
  to:print_sbyte::@2
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte print_sbyte::@2
  (byte~) print_sbyte::$4 ← ((byte)) (signed byte) print_sbyte::b
  (void~) print_sbyte::$5 ← call print_byte (byte~) print_sbyte::$4 
  to:print_sbyte::@return
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte
  (void~) print_sbyte::$2 ← call print_char (byte) '-' 
  (signed byte~) print_sbyte::$3 ← - (signed byte) print_sbyte::b
  (signed byte) print_sbyte::b ← (signed byte~) print_sbyte::$3
  to:print_sbyte::@1
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@1
  return 
  to:@return
@4: scope:[]  from @3
  to:@5
print_word: scope:[print_word]  from
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word
  return 
  to:@return
@5: scope:[]  from @4
  to:@6
print_byte: scope:[print_byte]  from
  (byte[]) print_byte::hextab ← (string) "0123456789abcdef"
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word) 4
  (void~) print_byte::$1 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$0) 
  (byte~) print_byte::$2 ← (byte) print_byte::b & (byte/signed byte/word/signed word) 15
  (void~) print_byte::$3 ← call print_char *((byte[]) print_byte::hextab + (byte~) print_byte::$2) 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte
  return 
  to:@return
@6: scope:[]  from @5
  to:@7
print_char: scope:[print_char]  from
  *((byte*) char_cursor) ← (byte) print_char::ch
  (byte*) char_cursor ← ++ (byte*) char_cursor
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  return 
  to:@return
@7: scope:[]  from @6
  to:@8
print_cls: scope:[print_cls]  from
  (byte*) print_cls::sc ← ((byte*)) (word/signed word) 1024
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  *((byte*) print_cls::sc) ← (byte) ' '
  (byte*) print_cls::sc ← ++ (byte*) print_cls::sc
  (word/signed word~) print_cls::$0 ← (word/signed word) 1024 + (word/signed word) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc != (word/signed word~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@2
print_cls::@2: scope:[print_cls]  from print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@2
  return 
  to:@return
@8: scope:[]  from @7
  to:@9
main: scope:[main]  from
  (void~) main::$0 ← call print_cls 
  (byte) main::a ← (byte/signed byte/word/signed word) 7
  (byte) main::i ← (byte/signed byte/word/signed word) 0
  to:main::@1
main::@1: scope:[main]  from main main::@21
  (byte/signed byte/word/signed word~) main::$1 ← (byte/word/signed word) 206 - (byte) main::a
  (byte) main::b ← (byte/signed byte/word/signed word~) main::$1
  (byte[5]) main::cs ← { (byte/signed byte/word/signed word) 7, (byte/word/signed word) 199, (byte/signed byte/word/signed word) 55, (byte/word/signed word) 151, (byte/signed byte/word/signed word) 103 }
  (byte) main::r ← (byte) '-'
  (boolean~) main::$2 ← (byte) main::a < (byte) main::b
  (boolean~) main::$3 ← ! (boolean~) main::$2
  if((boolean~) main::$3) goto main::@2
  to:main::@23
main::@2: scope:[main]  from main::@1 main::@23
  (void~) main::$4 ← call printu (byte) main::a (string) "< @" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$5 ← (byte) main::a < (byte/signed byte/word/signed word) 55
  (boolean~) main::$6 ← ! (boolean~) main::$5
  if((boolean~) main::$6) goto main::@3
  to:main::@24
main::@23: scope:[main]  from main::@1
  (byte) main::r ← (byte) '+'
  to:main::@2
main::@3: scope:[main]  from main::@2 main::@24
  (void~) main::$7 ← call printu (byte) main::a (string) "< @" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$8 ← (byte) main::a < *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$9 ← ! (boolean~) main::$8
  if((boolean~) main::$9) goto main::@4
  to:main::@25
main::@24: scope:[main]  from main::@2
  (byte) main::r ← (byte) '+'
  to:main::@3
main::@4: scope:[main]  from main::@25 main::@3
  (void~) main::$10 ← call printu (byte) main::a (string) "< @" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$11 ← (byte) main::a < (byte) main::a
  (boolean~) main::$12 ← ! (boolean~) main::$11
  if((boolean~) main::$12) goto main::@5
  to:main::@26
main::@25: scope:[main]  from main::@3
  (byte) main::r ← (byte) '+'
  to:main::@4
main::@5: scope:[main]  from main::@26 main::@4
  (void~) main::$13 ← call printu (byte) main::a (string) "< @" (byte) main::a (byte) main::r 
  (void~) main::$14 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$15 ← (byte) main::a > (byte) main::b
  (boolean~) main::$16 ← ! (boolean~) main::$15
  if((boolean~) main::$16) goto main::@6
  to:main::@27
main::@26: scope:[main]  from main::@4
  (byte) main::r ← (byte) '+'
  to:main::@5
main::@6: scope:[main]  from main::@27 main::@5
  (void~) main::$17 ← call printu (byte) main::a (string) "> @" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$18 ← (byte) main::a > (byte/signed byte/word/signed word) 55
  (boolean~) main::$19 ← ! (boolean~) main::$18
  if((boolean~) main::$19) goto main::@7
  to:main::@28
main::@27: scope:[main]  from main::@5
  (byte) main::r ← (byte) '+'
  to:main::@6
main::@7: scope:[main]  from main::@28 main::@6
  (void~) main::$20 ← call printu (byte) main::a (string) "> @" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$21 ← (byte) main::a > *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$22 ← ! (boolean~) main::$21
  if((boolean~) main::$22) goto main::@8
  to:main::@29
main::@28: scope:[main]  from main::@6
  (byte) main::r ← (byte) '+'
  to:main::@7
main::@8: scope:[main]  from main::@29 main::@7
  (void~) main::$23 ← call printu (byte) main::a (string) "> @" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$24 ← (byte) main::a > (byte) main::a
  (boolean~) main::$25 ← ! (boolean~) main::$24
  if((boolean~) main::$25) goto main::@9
  to:main::@30
main::@29: scope:[main]  from main::@7
  (byte) main::r ← (byte) '+'
  to:main::@8
main::@9: scope:[main]  from main::@30 main::@8
  (void~) main::$26 ← call printu (byte) main::a (string) "> @" (byte) main::a (byte) main::r 
  (void~) main::$27 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$28 ← (byte) main::a <= (byte) main::b
  (boolean~) main::$29 ← ! (boolean~) main::$28
  if((boolean~) main::$29) goto main::@10
  to:main::@31
main::@30: scope:[main]  from main::@8
  (byte) main::r ← (byte) '+'
  to:main::@9
main::@10: scope:[main]  from main::@31 main::@9
  (void~) main::$30 ← call printu (byte) main::a (string) "<=@" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$31 ← (byte) main::a <= (byte/signed byte/word/signed word) 55
  (boolean~) main::$32 ← ! (boolean~) main::$31
  if((boolean~) main::$32) goto main::@11
  to:main::@32
main::@31: scope:[main]  from main::@9
  (byte) main::r ← (byte) '+'
  to:main::@10
main::@11: scope:[main]  from main::@10 main::@32
  (void~) main::$33 ← call printu (byte) main::a (string) "<=@" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$34 ← (byte) main::a <= *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$35 ← ! (boolean~) main::$34
  if((boolean~) main::$35) goto main::@12
  to:main::@33
main::@32: scope:[main]  from main::@10
  (byte) main::r ← (byte) '+'
  to:main::@11
main::@12: scope:[main]  from main::@11 main::@33
  (void~) main::$36 ← call printu (byte) main::a (string) "<=@" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$37 ← (byte) main::a <= (byte) main::a
  (boolean~) main::$38 ← ! (boolean~) main::$37
  if((boolean~) main::$38) goto main::@13
  to:main::@34
main::@33: scope:[main]  from main::@11
  (byte) main::r ← (byte) '+'
  to:main::@12
main::@13: scope:[main]  from main::@12 main::@34
  (void~) main::$39 ← call printu (byte) main::a (string) "<=@" (byte) main::a (byte) main::r 
  (void~) main::$40 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$41 ← (byte) main::a >= (byte) main::b
  (boolean~) main::$42 ← ! (boolean~) main::$41
  if((boolean~) main::$42) goto main::@14
  to:main::@35
main::@34: scope:[main]  from main::@12
  (byte) main::r ← (byte) '+'
  to:main::@13
main::@14: scope:[main]  from main::@13 main::@35
  (void~) main::$43 ← call printu (byte) main::a (string) ">=@" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$44 ← (byte) main::a >= (byte/signed byte/word/signed word) 55
  (boolean~) main::$45 ← ! (boolean~) main::$44
  if((boolean~) main::$45) goto main::@15
  to:main::@36
main::@35: scope:[main]  from main::@13
  (byte) main::r ← (byte) '+'
  to:main::@14
main::@15: scope:[main]  from main::@14 main::@36
  (void~) main::$46 ← call printu (byte) main::a (string) ">=@" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$47 ← (byte) main::a >= *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$48 ← ! (boolean~) main::$47
  if((boolean~) main::$48) goto main::@16
  to:main::@37
main::@36: scope:[main]  from main::@14
  (byte) main::r ← (byte) '+'
  to:main::@15
main::@16: scope:[main]  from main::@15 main::@37
  (void~) main::$49 ← call printu (byte) main::a (string) ">=@" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$50 ← (byte) main::a >= (byte) main::a
  (boolean~) main::$51 ← ! (boolean~) main::$50
  if((boolean~) main::$51) goto main::@17
  to:main::@38
main::@37: scope:[main]  from main::@15
  (byte) main::r ← (byte) '+'
  to:main::@16
main::@17: scope:[main]  from main::@16 main::@38
  (void~) main::$52 ← call printu (byte) main::a (string) ">=@" (byte) main::a (byte) main::r 
  (void~) main::$53 ← call print_ln 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$54 ← (byte) main::a == (byte) main::b
  (boolean~) main::$55 ← ! (boolean~) main::$54
  if((boolean~) main::$55) goto main::@18
  to:main::@39
main::@38: scope:[main]  from main::@16
  (byte) main::r ← (byte) '+'
  to:main::@17
main::@18: scope:[main]  from main::@17 main::@39
  (void~) main::$56 ← call printu (byte) main::a (string) "==@" (byte) main::b (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$57 ← (byte) main::a == (byte/signed byte/word/signed word) 55
  (boolean~) main::$58 ← ! (boolean~) main::$57
  if((boolean~) main::$58) goto main::@19
  to:main::@40
main::@39: scope:[main]  from main::@17
  (byte) main::r ← (byte) '+'
  to:main::@18
main::@19: scope:[main]  from main::@18 main::@40
  (void~) main::$59 ← call printu (byte) main::a (string) "==@" (byte/signed byte/word/signed word) 55 (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$60 ← (byte) main::a == *((byte[5]) main::cs + (byte) main::i)
  (boolean~) main::$61 ← ! (boolean~) main::$60
  if((boolean~) main::$61) goto main::@20
  to:main::@41
main::@40: scope:[main]  from main::@18
  (byte) main::r ← (byte) '+'
  to:main::@19
main::@20: scope:[main]  from main::@19 main::@41
  (void~) main::$62 ← call printu (byte) main::a (string) "==@" *((byte[5]) main::cs + (byte) main::i) (byte) main::r 
  (byte) main::r ← (byte) '-'
  (boolean~) main::$63 ← (byte) main::a == (byte) main::a
  (boolean~) main::$64 ← ! (boolean~) main::$63
  if((boolean~) main::$64) goto main::@21
  to:main::@42
main::@41: scope:[main]  from main::@19
  (byte) main::r ← (byte) '+'
  to:main::@20
main::@21: scope:[main]  from main::@20 main::@42
  (void~) main::$65 ← call printu (byte) main::a (string) "==@" (byte) main::a (byte) main::r 
  (void~) main::$66 ← call print_ln 
  (byte/word~) main::$67 ← (byte) main::a + (byte/signed byte/word/signed word) 48
  (byte) main::a ← (byte/word~) main::$67
  (byte) main::i ← ++ (byte) main::i
  (boolean~) main::$68 ← (byte) main::i != (byte/signed byte/word/signed word) 5
  if((boolean~) main::$68) goto main::@1
  to:main::@43
main::@42: scope:[main]  from main::@20
  (byte) main::r ← (byte) '+'
  to:main::@21
main::@43: scope:[main]  from main::@21
  to:main::@22
main::@22: scope:[main]  from main::@22 main::@43
  if(true) goto main::@22
  to:main::@44
main::@44: scope:[main]  from main::@22
  to:main::@return
main::@return: scope:[main]  from main::@44
  return 
  to:@return
@9: scope:[]  from @8
  to:@10
printu: scope:[printu]  from
  (void~) printu::$0 ← call print_char (byte) ' ' 
  (void~) printu::$1 ← call print_byte (byte) printu::a 
  (void~) printu::$2 ← call print_str (byte[]) printu::op 
  (void~) printu::$3 ← call print_byte (byte) printu::b 
  (void~) printu::$4 ← call print_char (byte) ' ' 
  (void~) printu::$5 ← call print_char (byte) printu::res 
  to:printu::@return
printu::@return: scope:[printu]  from printu
  return 
  to:@return
@10: scope:[]  from @9
  call main 
  to:@end
@end: scope:[]  from @10

Removing unused procedure print_sword
Removing unused procedure print_sbyte
Removing unused procedure print_word
Eliminating unused variable - keeping the call (void~) print_byte::$1
Eliminating unused variable - keeping the call (void~) print_byte::$3
Eliminating unused variable - keeping the call (void~) main::$0
Eliminating unused variable - keeping the call (void~) main::$4
Eliminating unused variable - keeping the call (void~) main::$7
Eliminating unused variable - keeping the call (void~) main::$10
Eliminating unused variable - keeping the call (void~) main::$13
Eliminating unused variable - keeping the call (void~) main::$14
Eliminating unused variable - keeping the call (void~) main::$17
Eliminating unused variable - keeping the call (void~) main::$20
Eliminating unused variable - keeping the call (void~) main::$23
Eliminating unused variable - keeping the call (void~) main::$26
Eliminating unused variable - keeping the call (void~) main::$27
Eliminating unused variable - keeping the call (void~) main::$30
Eliminating unused variable - keeping the call (void~) main::$33
Eliminating unused variable - keeping the call (void~) main::$36
Eliminating unused variable - keeping the call (void~) main::$39
Eliminating unused variable - keeping the call (void~) main::$40
Eliminating unused variable - keeping the call (void~) main::$43
Eliminating unused variable - keeping the call (void~) main::$46
Eliminating unused variable - keeping the call (void~) main::$49
Eliminating unused variable - keeping the call (void~) main::$52
Eliminating unused variable - keeping the call (void~) main::$53
Eliminating unused variable - keeping the call (void~) main::$56
Eliminating unused variable - keeping the call (void~) main::$59
Eliminating unused variable - keeping the call (void~) main::$62
Eliminating unused variable - keeping the call (void~) main::$65
Eliminating unused variable - keeping the call (void~) main::$66
Eliminating unused variable - keeping the call (void~) printu::$0
Eliminating unused variable - keeping the call (void~) printu::$1
Eliminating unused variable - keeping the call (void~) printu::$2
Eliminating unused variable - keeping the call (void~) printu::$3
Eliminating unused variable - keeping the call (void~) printu::$4
Eliminating unused variable - keeping the call (void~) printu::$5
Creating constant string variable for inline (const string) print_byte::$4 "0123456789abcdef"
Creating constant string variable for inline (const string) main::op "< @"
Creating constant string variable for inline (const string) main::op1 "< @"
Creating constant string variable for inline (const string) main::op2 "< @"
Creating constant string variable for inline (const string) main::op3 "< @"
Creating constant string variable for inline (const string) main::op4 "> @"
Creating constant string variable for inline (const string) main::op5 "> @"
Creating constant string variable for inline (const string) main::op6 "> @"
Creating constant string variable for inline (const string) main::op7 "> @"
Creating constant string variable for inline (const string) main::op8 "<=@"
Creating constant string variable for inline (const string) main::op9 "<=@"
Creating constant string variable for inline (const string) main::op10 "<=@"
Creating constant string variable for inline (const string) main::op11 "<=@"
Creating constant string variable for inline (const string) main::op12 ">=@"
Creating constant string variable for inline (const string) main::op13 ">=@"
Creating constant string variable for inline (const string) main::op14 ">=@"
Creating constant string variable for inline (const string) main::op15 ">=@"
Creating constant string variable for inline (const string) main::op16 "==@"
Creating constant string variable for inline (const string) main::op17 "==@"
Creating constant string variable for inline (const string) main::op18 "==@"
Creating constant string variable for inline (const string) main::op19 "==@"
Removing empty block print_str::@4
Removing empty block print_str::@3
Removing empty block print_str::@5
Removing empty block print_str::@6
Removing empty block @1
Removing empty block @2
Removing empty block @3
Removing empty block @4
Removing empty block @5
Removing empty block @6
Removing empty block @7
Removing empty block print_cls::@2
Removing empty block @8
Removing empty block main::@43
Removing empty block main::@44
Removing empty block @9
PROCEDURE MODIFY VARIABLE ANALYSIS
print_str modifies char_cursor
print_ln modifies line_cursor
print_ln modifies char_cursor
print_byte modifies char_cursor
print_char modifies char_cursor
main modifies char_cursor
main modifies line_cursor
printu modifies char_cursor

Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...

CONTROL FLOW GRAPH SSA WITH ASSIGNMENT CALL & RETURN
@begin: scope:[]  from
  (byte*) line_cursor#0 ← ((byte*)) (word/signed word) 1024
  (byte*) char_cursor#0 ← (byte*) line_cursor#0
  to:@10
print_str: scope:[print_str]  from printu::@2
  (byte*) char_cursor#113 ← phi( printu::@2/(byte*) char_cursor#37 )
  (byte*) print_str::str#4 ← phi( printu::@2/(byte*) print_str::str#1 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (byte*) char_cursor#87 ← phi( print_str/(byte*) char_cursor#113 print_str::@2/(byte*) char_cursor#1 )
  (byte*) print_str::str#2 ← phi( print_str/(byte*) print_str::str#4 print_str::@2/(byte*) print_str::str#0 )
  (boolean~) print_str::$0 ← *((byte*) print_str::str#2) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@return
print_str::@2: scope:[print_str]  from print_str::@1
  (byte*) char_cursor#44 ← phi( print_str::@1/(byte*) char_cursor#87 )
  (byte*) print_str::str#3 ← phi( print_str::@1/(byte*) print_str::str#2 )
  *((byte*) char_cursor#44) ← *((byte*) print_str::str#3)
  (byte*) char_cursor#1 ← ++ (byte*) char_cursor#44
  (byte*) print_str::str#0 ← ++ (byte*) print_str::str#3
  to:print_str::@1
print_str::@return: scope:[print_str]  from print_str::@1
  (byte*) char_cursor#45 ← phi( print_str::@1/(byte*) char_cursor#87 )
  (byte*) char_cursor#2 ← (byte*) char_cursor#45
  return 
  to:@return
print_ln: scope:[print_ln]  from main::@49 main::@54 main::@59 main::@64 main::@69
  (byte*) char_cursor#88 ← phi( main::@49/(byte*) char_cursor#13 main::@54/(byte*) char_cursor#18 main::@59/(byte*) char_cursor#23 main::@64/(byte*) char_cursor#28 main::@69/(byte*) char_cursor#33 )
  (byte*) line_cursor#20 ← phi( main::@49/(byte*) line_cursor#21 main::@54/(byte*) line_cursor#22 main::@59/(byte*) line_cursor#23 main::@64/(byte*) line_cursor#24 main::@69/(byte*) line_cursor#25 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*) char_cursor#46 ← phi( print_ln/(byte*) char_cursor#88 print_ln::@1/(byte*) char_cursor#46 )
  (byte*) line_cursor#10 ← phi( print_ln/(byte*) line_cursor#20 print_ln::@1/(byte*) line_cursor#1 )
  (byte*~) print_ln::$0 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40
  (byte*) line_cursor#1 ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor#1 < (byte*) char_cursor#46
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) line_cursor#11 ← phi( print_ln::@1/(byte*) line_cursor#1 )
  (byte*) char_cursor#3 ← (byte*) line_cursor#11
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  (byte*) char_cursor#47 ← phi( print_ln::@2/(byte*) char_cursor#3 )
  (byte*) line_cursor#12 ← phi( print_ln::@2/(byte*) line_cursor#11 )
  (byte*) line_cursor#2 ← (byte*) line_cursor#12
  (byte*) char_cursor#4 ← (byte*) char_cursor#47
  return 
  to:@return
print_byte: scope:[print_byte]  from printu::@1 printu::@3
  (byte*) char_cursor#89 ← phi( printu::@1/(byte*) char_cursor#36 printu::@3/(byte*) char_cursor#38 )
  (byte) print_byte::b#2 ← phi( printu::@1/(byte) print_byte::b#0 printu::@3/(byte) print_byte::b#1 )
  (byte[]) print_byte::hextab#0 ← (const string) print_byte::$4
  (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word) 4
  (byte) print_char::ch#0 ← *((byte[]) print_byte::hextab#0 + (byte~) print_byte::$0)
  call print_char param-assignment
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  (byte) print_byte::b#3 ← phi( print_byte/(byte) print_byte::b#2 )
  (byte*) char_cursor#48 ← phi( print_byte/(byte*) char_cursor#9 )
  (byte*) char_cursor#5 ← (byte*) char_cursor#48
  (byte~) print_byte::$2 ← (byte) print_byte::b#3 & (byte/signed byte/word/signed word) 15
  (byte) print_char::ch#1 ← *((byte[]) print_byte::hextab#0 + (byte~) print_byte::$2)
  call print_char param-assignment
  to:print_byte::@2
print_byte::@2: scope:[print_byte]  from print_byte::@1
  (byte*) char_cursor#49 ← phi( print_byte::@1/(byte*) char_cursor#9 )
  (byte*) char_cursor#6 ← (byte*) char_cursor#49
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@2
  (byte*) char_cursor#50 ← phi( print_byte::@2/(byte*) char_cursor#6 )
  (byte*) char_cursor#7 ← (byte*) char_cursor#50
  return 
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 printu printu::@4 printu::@5
  (byte*) char_cursor#51 ← phi( print_byte/(byte*) char_cursor#89 print_byte::@1/(byte*) char_cursor#5 printu/(byte*) char_cursor#90 printu::@4/(byte*) char_cursor#39 printu::@5/(byte*) char_cursor#40 )
  (byte) print_char::ch#5 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 printu/(byte) print_char::ch#2 printu::@4/(byte) print_char::ch#3 printu::@5/(byte) print_char::ch#4 )
  *((byte*) char_cursor#51) ← (byte) print_char::ch#5
  (byte*) char_cursor#8 ← ++ (byte*) char_cursor#51
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  (byte*) char_cursor#52 ← phi( print_char/(byte*) char_cursor#8 )
  (byte*) char_cursor#9 ← (byte*) char_cursor#52
  return 
  to:@return
print_cls: scope:[print_cls]  from main
  (byte*) print_cls::sc#0 ← ((byte*)) (word/signed word) 1024
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  (byte*) print_cls::sc#2 ← phi( print_cls/(byte*) print_cls::sc#0 print_cls::@1/(byte*) print_cls::sc#1 )
  *((byte*) print_cls::sc#2) ← (byte) ' '
  (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2
  (word/signed word~) print_cls::$0 ← (word/signed word) 1024 + (word/signed word) 1000
  (boolean~) print_cls::$1 ← (byte*) print_cls::sc#1 != (word/signed word~) print_cls::$0
  if((boolean~) print_cls::$1) goto print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  return 
  to:@return
main: scope:[main]  from @10
  (byte*) line_cursor#85 ← phi( @10/(byte*) line_cursor#27 )
  (byte*) char_cursor#136 ← phi( @10/(byte*) char_cursor#112 )
  call print_cls param-assignment
  to:main::@45
main::@45: scope:[main]  from main
  (byte*) line_cursor#84 ← phi( main/(byte*) line_cursor#85 )
  (byte*) char_cursor#135 ← phi( main/(byte*) char_cursor#136 )
  (byte) main::a#0 ← (byte/signed byte/word/signed word) 7
  (byte) main::i#0 ← (byte/signed byte/word/signed word) 0
  to:main::@1
main::@1: scope:[main]  from main::@45 main::@70
  (byte*) line_cursor#78 ← phi( main::@45/(byte*) line_cursor#84 main::@70/(byte*) line_cursor#7 )
  (byte) main::i#42 ← phi( main::@45/(byte) main::i#0 main::@70/(byte) main::i#1 )
  (byte*) char_cursor#114 ← phi( main::@45/(byte*) char_cursor#135 main::@70/(byte*) char_cursor#34 )
  (byte) main::a#2 ← phi( main::@45/(byte) main::a#0 main::@70/(byte) main::a#1 )
  (byte/signed byte/word/signed word~) main::$1 ← (byte/word/signed word) 206 - (byte) main::a#2
  (byte) main::b#0 ← (byte/signed byte/word/signed word~) main::$1
  (byte[5]) main::cs#0 ← { (byte/signed byte/word/signed word) 7, (byte/word/signed word) 199, (byte/signed byte/word/signed word) 55, (byte/word/signed word) 151, (byte/signed byte/word/signed word) 103 }
  (byte) main::r#0 ← (byte) '-'
  (boolean~) main::$2 ← (byte) main::a#2 < (byte) main::b#0
  (boolean~) main::$3 ← ! (boolean~) main::$2
  if((boolean~) main::$3) goto main::@2
  to:main::@23
main::@2: scope:[main]  from main::@1 main::@23
  (byte*) line_cursor#73 ← phi( main::@1/(byte*) line_cursor#78 main::@23/(byte*) line_cursor#79 )
  (byte) main::i#35 ← phi( main::@1/(byte) main::i#42 main::@23/(byte) main::i#43 )
  (byte*) char_cursor#91 ← phi( main::@1/(byte*) char_cursor#114 main::@23/(byte*) char_cursor#115 )
  (byte) main::r#40 ← phi( main::@1/(byte) main::r#0 main::@23/(byte) main::r#2 )
  (byte) main::b#1 ← phi( main::@1/(byte) main::b#0 main::@23/(byte) main::b#10 )
  (byte) main::a#3 ← phi( main::@1/(byte) main::a#2 main::@23/(byte) main::a#43 )
  (byte) printu::a#0 ← (byte) main::a#3
  (byte[]) printu::op#0 ← (const string) main::op
  (byte) printu::b#0 ← (byte) main::b#1
  (byte) printu::res#0 ← (byte) main::r#40
  call printu param-assignment
  to:main::@46
main::@46: scope:[main]  from main::@2
  (byte) main::b#48 ← phi( main::@2/(byte) main::b#1 )
  (byte*) line_cursor#64 ← phi( main::@2/(byte*) line_cursor#73 )
  (byte) main::i#25 ← phi( main::@2/(byte) main::i#35 )
  (byte) main::a#4 ← phi( main::@2/(byte) main::a#3 )
  (byte*) char_cursor#53 ← phi( main::@2/(byte*) char_cursor#42 )
  (byte*) char_cursor#10 ← (byte*) char_cursor#53
  (byte) main::r#1 ← (byte) '-'
  (boolean~) main::$5 ← (byte) main::a#4 < (byte/signed byte/word/signed word) 55
  (boolean~) main::$6 ← ! (boolean~) main::$5
  if((boolean~) main::$6) goto main::@3
  to:main::@24
main::@23: scope:[main]  from main::@1
  (byte*) line_cursor#79 ← phi( main::@1/(byte*) line_cursor#78 )
  (byte) main::i#43 ← phi( main::@1/(byte) main::i#42 )
  (byte*) char_cursor#115 ← phi( main::@1/(byte*) char_cursor#114 )
  (byte) main::b#10 ← phi( main::@1/(byte) main::b#0 )
  (byte) main::a#43 ← phi( main::@1/(byte) main::a#2 )
  (byte) main::r#2 ← (byte) '+'
  to:main::@2
main::@3: scope:[main]  from main::@24 main::@46
  (byte) main::b#43 ← phi( main::@24/(byte) main::b#47 main::@46/(byte) main::b#48 )
  (byte*) line_cursor#58 ← phi( main::@24/(byte*) line_cursor#63 main::@46/(byte*) line_cursor#64 )
  (byte) main::i#13 ← phi( main::@24/(byte) main::i#24 main::@46/(byte) main::i#25 )
  (byte*) char_cursor#92 ← phi( main::@24/(byte*) char_cursor#116 main::@46/(byte*) char_cursor#10 )
  (byte) main::r#41 ← phi( main::@24/(byte) main::r#4 main::@46/(byte) main::r#1 )
  (byte) main::a#5 ← phi( main::@24/(byte) main::a#44 main::@46/(byte) main::a#4 )
  (byte) printu::a#1 ← (byte) main::a#5
  (byte[]) printu::op#1 ← (const string) main::op1
  (byte) printu::b#1 ← (byte/signed byte/word/signed word) 55
  (byte) printu::res#1 ← (byte) main::r#41
  call printu param-assignment
  to:main::@47
main::@47: scope:[main]  from main::@3
  (byte) main::b#36 ← phi( main::@3/(byte) main::b#43 )
  (byte*) line_cursor#49 ← phi( main::@3/(byte*) line_cursor#58 )
  (byte) main::i#2 ← phi( main::@3/(byte) main::i#13 )
  (byte) main::a#6 ← phi( main::@3/(byte) main::a#5 )
  (byte*) char_cursor#54 ← phi( main::@3/(byte*) char_cursor#42 )
  (byte*) char_cursor#11 ← (byte*) char_cursor#54
  (byte) main::r#3 ← (byte) '-'
  (boolean~) main::$8 ← (byte) main::a#6 < *((byte[5]) main::cs#0 + (byte) main::i#2)
  (boolean~) main::$9 ← ! (boolean~) main::$8
  if((boolean~) main::$9) goto main::@4
  to:main::@25
main::@24: scope:[main]  from main::@46
  (byte) main::b#47 ← phi( main::@46/(byte) main::b#48 )
  (byte*) line_cursor#63 ← phi( main::@46/(byte*) line_cursor#64 )
  (byte) main::i#24 ← phi( main::@46/(byte) main::i#25 )
  (byte*) char_cursor#116 ← phi( main::@46/(byte*) char_cursor#10 )
  (byte) main::a#44 ← phi( main::@46/(byte) main::a#4 )
  (byte) main::r#4 ← (byte) '+'
  to:main::@3
main::@4: scope:[main]  from main::@25 main::@47
  (byte) main::b#31 ← phi( main::@25/(byte) main::b#35 main::@47/(byte) main::b#36 )
  (byte*) line_cursor#43 ← phi( main::@25/(byte*) line_cursor#48 main::@47/(byte*) line_cursor#49 )
  (byte*) char_cursor#93 ← phi( main::@25/(byte*) char_cursor#117 main::@47/(byte*) char_cursor#11 )
  (byte) main::r#42 ← phi( main::@25/(byte) main::r#6 main::@47/(byte) main::r#3 )
  (byte) main::i#3 ← phi( main::@25/(byte) main::i#14 main::@47/(byte) main::i#2 )
  (byte) main::a#7 ← phi( main::@25/(byte) main::a#45 main::@47/(byte) main::a#6 )
  (byte) printu::a#2 ← (byte) main::a#7
  (byte[]) printu::op#2 ← (const string) main::op2
  (byte) printu::b#2 ← *((byte[5]) main::cs#0 + (byte) main::i#3)
  (byte) printu::res#2 ← (byte) main::r#42
  call printu param-assignment
  to:main::@48
main::@48: scope:[main]  from main::@4
  (byte) main::i#61 ← phi( main::@4/(byte) main::i#3 )
  (byte) main::b#24 ← phi( main::@4/(byte) main::b#31 )
  (byte*) line_cursor#34 ← phi( main::@4/(byte*) line_cursor#43 )
  (byte) main::a#8 ← phi( main::@4/(byte) main::a#7 )
  (byte*) char_cursor#55 ← phi( main::@4/(byte*) char_cursor#42 )
  (byte*) char_cursor#12 ← (byte*) char_cursor#55
  (byte) main::r#5 ← (byte) '-'
  (boolean~) main::$11 ← (byte) main::a#8 < (byte) main::a#8
  (boolean~) main::$12 ← ! (boolean~) main::$11
  if((boolean~) main::$12) goto main::@5
  to:main::@26
main::@25: scope:[main]  from main::@47
  (byte) main::b#35 ← phi( main::@47/(byte) main::b#36 )
  (byte*) line_cursor#48 ← phi( main::@47/(byte*) line_cursor#49 )
  (byte*) char_cursor#117 ← phi( main::@47/(byte*) char_cursor#11 )
  (byte) main::i#14 ← phi( main::@47/(byte) main::i#2 )
  (byte) main::a#45 ← phi( main::@47/(byte) main::a#6 )
  (byte) main::r#6 ← (byte) '+'
  to:main::@4
main::@5: scope:[main]  from main::@26 main::@48
  (byte) main::i#56 ← phi( main::@26/(byte) main::i#60 main::@48/(byte) main::i#61 )
  (byte) main::b#19 ← phi( main::@26/(byte) main::b#23 main::@48/(byte) main::b#24 )
  (byte*) line_cursor#28 ← phi( main::@26/(byte*) line_cursor#33 main::@48/(byte*) line_cursor#34 )
  (byte*) char_cursor#94 ← phi( main::@26/(byte*) char_cursor#118 main::@48/(byte*) char_cursor#12 )
  (byte) main::r#43 ← phi( main::@26/(byte) main::r#8 main::@48/(byte) main::r#5 )
  (byte) main::a#9 ← phi( main::@26/(byte) main::a#46 main::@48/(byte) main::a#8 )
  (byte) printu::a#3 ← (byte) main::a#9
  (byte[]) printu::op#3 ← (const string) main::op3
  (byte) printu::b#3 ← (byte) main::a#9
  (byte) printu::res#3 ← (byte) main::r#43
  call printu param-assignment
  to:main::@49
main::@49: scope:[main]  from main::@5
  (byte) main::i#52 ← phi( main::@5/(byte) main::i#56 )
  (byte) main::b#11 ← phi( main::@5/(byte) main::b#19 )
  (byte) main::a#47 ← phi( main::@5/(byte) main::a#9 )
  (byte*) line_cursor#21 ← phi( main::@5/(byte*) line_cursor#28 )
  (byte*) char_cursor#56 ← phi( main::@5/(byte*) char_cursor#42 )
  (byte*) char_cursor#13 ← (byte*) char_cursor#56
  call print_ln param-assignment
  to:main::@50
main::@50: scope:[main]  from main::@49
  (byte) main::i#45 ← phi( main::@49/(byte) main::i#52 )
  (byte) main::b#2 ← phi( main::@49/(byte) main::b#11 )
  (byte) main::a#10 ← phi( main::@49/(byte) main::a#47 )
  (byte*) char_cursor#57 ← phi( main::@49/(byte*) char_cursor#4 )
  (byte*) line_cursor#13 ← phi( main::@49/(byte*) line_cursor#2 )
  (byte*) line_cursor#3 ← (byte*) line_cursor#13
  (byte*) char_cursor#14 ← (byte*) char_cursor#57
  (byte) main::r#7 ← (byte) '-'
  (boolean~) main::$15 ← (byte) main::a#10 > (byte) main::b#2
  (boolean~) main::$16 ← ! (boolean~) main::$15
  if((boolean~) main::$16) goto main::@6
  to:main::@27
main::@26: scope:[main]  from main::@48
  (byte) main::i#60 ← phi( main::@48/(byte) main::i#61 )
  (byte) main::b#23 ← phi( main::@48/(byte) main::b#24 )
  (byte*) line_cursor#33 ← phi( main::@48/(byte*) line_cursor#34 )
  (byte*) char_cursor#118 ← phi( main::@48/(byte*) char_cursor#12 )
  (byte) main::a#46 ← phi( main::@48/(byte) main::a#8 )
  (byte) main::r#8 ← (byte) '+'
  to:main::@5
main::@6: scope:[main]  from main::@27 main::@50
  (byte*) line_cursor#74 ← phi( main::@27/(byte*) line_cursor#80 main::@50/(byte*) line_cursor#3 )
  (byte) main::i#36 ← phi( main::@27/(byte) main::i#44 main::@50/(byte) main::i#45 )
  (byte*) char_cursor#95 ← phi( main::@27/(byte*) char_cursor#119 main::@50/(byte*) char_cursor#14 )
  (byte) main::r#44 ← phi( main::@27/(byte) main::r#10 main::@50/(byte) main::r#7 )
  (byte) main::b#3 ← phi( main::@27/(byte) main::b#12 main::@50/(byte) main::b#2 )
  (byte) main::a#11 ← phi( main::@27/(byte) main::a#48 main::@50/(byte) main::a#10 )
  (byte) printu::a#4 ← (byte) main::a#11
  (byte[]) printu::op#4 ← (const string) main::op4
  (byte) printu::b#4 ← (byte) main::b#3
  (byte) printu::res#4 ← (byte) main::r#44
  call printu param-assignment
  to:main::@51
main::@51: scope:[main]  from main::@6
  (byte) main::b#50 ← phi( main::@6/(byte) main::b#3 )
  (byte*) line_cursor#66 ← phi( main::@6/(byte*) line_cursor#74 )
  (byte) main::i#27 ← phi( main::@6/(byte) main::i#36 )
  (byte) main::a#12 ← phi( main::@6/(byte) main::a#11 )
  (byte*) char_cursor#58 ← phi( main::@6/(byte*) char_cursor#42 )
  (byte*) char_cursor#15 ← (byte*) char_cursor#58
  (byte) main::r#9 ← (byte) '-'
  (boolean~) main::$18 ← (byte) main::a#12 > (byte/signed byte/word/signed word) 55
  (boolean~) main::$19 ← ! (boolean~) main::$18
  if((boolean~) main::$19) goto main::@7
  to:main::@28
main::@27: scope:[main]  from main::@50
  (byte*) line_cursor#80 ← phi( main::@50/(byte*) line_cursor#3 )
  (byte) main::i#44 ← phi( main::@50/(byte) main::i#45 )
  (byte*) char_cursor#119 ← phi( main::@50/(byte*) char_cursor#14 )
  (byte) main::b#12 ← phi( main::@50/(byte) main::b#2 )
  (byte) main::a#48 ← phi( main::@50/(byte) main::a#10 )
  (byte) main::r#10 ← (byte) '+'
  to:main::@6
main::@7: scope:[main]  from main::@28 main::@51
  (byte) main::b#44 ← phi( main::@28/(byte) main::b#49 main::@51/(byte) main::b#50 )
  (byte*) line_cursor#59 ← phi( main::@28/(byte*) line_cursor#65 main::@51/(byte*) line_cursor#66 )
  (byte) main::i#15 ← phi( main::@28/(byte) main::i#26 main::@51/(byte) main::i#27 )
  (byte*) char_cursor#96 ← phi( main::@28/(byte*) char_cursor#120 main::@51/(byte*) char_cursor#15 )
  (byte) main::r#45 ← phi( main::@28/(byte) main::r#12 main::@51/(byte) main::r#9 )
  (byte) main::a#13 ← phi( main::@28/(byte) main::a#49 main::@51/(byte) main::a#12 )
  (byte) printu::a#5 ← (byte) main::a#13
  (byte[]) printu::op#5 ← (const string) main::op5
  (byte) printu::b#5 ← (byte/signed byte/word/signed word) 55
  (byte) printu::res#5 ← (byte) main::r#45
  call printu param-assignment
  to:main::@52
main::@52: scope:[main]  from main::@7
  (byte) main::b#38 ← phi( main::@7/(byte) main::b#44 )
  (byte*) line_cursor#51 ← phi( main::@7/(byte*) line_cursor#59 )
  (byte) main::i#4 ← phi( main::@7/(byte) main::i#15 )
  (byte) main::a#14 ← phi( main::@7/(byte) main::a#13 )
  (byte*) char_cursor#59 ← phi( main::@7/(byte*) char_cursor#42 )
  (byte*) char_cursor#16 ← (byte*) char_cursor#59
  (byte) main::r#11 ← (byte) '-'
  (boolean~) main::$21 ← (byte) main::a#14 > *((byte[5]) main::cs#0 + (byte) main::i#4)
  (boolean~) main::$22 ← ! (boolean~) main::$21
  if((boolean~) main::$22) goto main::@8
  to:main::@29
main::@28: scope:[main]  from main::@51
  (byte) main::b#49 ← phi( main::@51/(byte) main::b#50 )
  (byte*) line_cursor#65 ← phi( main::@51/(byte*) line_cursor#66 )
  (byte) main::i#26 ← phi( main::@51/(byte) main::i#27 )
  (byte*) char_cursor#120 ← phi( main::@51/(byte*) char_cursor#15 )
  (byte) main::a#49 ← phi( main::@51/(byte) main::a#12 )
  (byte) main::r#12 ← (byte) '+'
  to:main::@7
main::@8: scope:[main]  from main::@29 main::@52
  (byte) main::b#32 ← phi( main::@29/(byte) main::b#37 main::@52/(byte) main::b#38 )
  (byte*) line_cursor#44 ← phi( main::@29/(byte*) line_cursor#50 main::@52/(byte*) line_cursor#51 )
  (byte*) char_cursor#97 ← phi( main::@29/(byte*) char_cursor#121 main::@52/(byte*) char_cursor#16 )
  (byte) main::r#46 ← phi( main::@29/(byte) main::r#14 main::@52/(byte) main::r#11 )
  (byte) main::i#5 ← phi( main::@29/(byte) main::i#16 main::@52/(byte) main::i#4 )
  (byte) main::a#15 ← phi( main::@29/(byte) main::a#50 main::@52/(byte) main::a#14 )
  (byte) printu::a#6 ← (byte) main::a#15
  (byte[]) printu::op#6 ← (const string) main::op6
  (byte) printu::b#6 ← *((byte[5]) main::cs#0 + (byte) main::i#5)
  (byte) printu::res#6 ← (byte) main::r#46
  call printu param-assignment
  to:main::@53
main::@53: scope:[main]  from main::@8
  (byte) main::i#63 ← phi( main::@8/(byte) main::i#5 )
  (byte) main::b#26 ← phi( main::@8/(byte) main::b#32 )
  (byte*) line_cursor#36 ← phi( main::@8/(byte*) line_cursor#44 )
  (byte) main::a#16 ← phi( main::@8/(byte) main::a#15 )
  (byte*) char_cursor#60 ← phi( main::@8/(byte*) char_cursor#42 )
  (byte*) char_cursor#17 ← (byte*) char_cursor#60
  (byte) main::r#13 ← (byte) '-'
  (boolean~) main::$24 ← (byte) main::a#16 > (byte) main::a#16
  (boolean~) main::$25 ← ! (boolean~) main::$24
  if((boolean~) main::$25) goto main::@9
  to:main::@30
main::@29: scope:[main]  from main::@52
  (byte) main::b#37 ← phi( main::@52/(byte) main::b#38 )
  (byte*) line_cursor#50 ← phi( main::@52/(byte*) line_cursor#51 )
  (byte*) char_cursor#121 ← phi( main::@52/(byte*) char_cursor#16 )
  (byte) main::i#16 ← phi( main::@52/(byte) main::i#4 )
  (byte) main::a#50 ← phi( main::@52/(byte) main::a#14 )
  (byte) main::r#14 ← (byte) '+'
  to:main::@8
main::@9: scope:[main]  from main::@30 main::@53
  (byte) main::i#57 ← phi( main::@30/(byte) main::i#62 main::@53/(byte) main::i#63 )
  (byte) main::b#20 ← phi( main::@30/(byte) main::b#25 main::@53/(byte) main::b#26 )
  (byte*) line_cursor#29 ← phi( main::@30/(byte*) line_cursor#35 main::@53/(byte*) line_cursor#36 )
  (byte*) char_cursor#98 ← phi( main::@30/(byte*) char_cursor#122 main::@53/(byte*) char_cursor#17 )
  (byte) main::r#47 ← phi( main::@30/(byte) main::r#16 main::@53/(byte) main::r#13 )
  (byte) main::a#17 ← phi( main::@30/(byte) main::a#51 main::@53/(byte) main::a#16 )
  (byte) printu::a#7 ← (byte) main::a#17
  (byte[]) printu::op#7 ← (const string) main::op7
  (byte) printu::b#7 ← (byte) main::a#17
  (byte) printu::res#7 ← (byte) main::r#47
  call printu param-assignment
  to:main::@54
main::@54: scope:[main]  from main::@9
  (byte) main::i#53 ← phi( main::@9/(byte) main::i#57 )
  (byte) main::b#13 ← phi( main::@9/(byte) main::b#20 )
  (byte) main::a#52 ← phi( main::@9/(byte) main::a#17 )
  (byte*) line_cursor#22 ← phi( main::@9/(byte*) line_cursor#29 )
  (byte*) char_cursor#61 ← phi( main::@9/(byte*) char_cursor#42 )
  (byte*) char_cursor#18 ← (byte*) char_cursor#61
  call print_ln param-assignment
  to:main::@55
main::@55: scope:[main]  from main::@54
  (byte) main::i#47 ← phi( main::@54/(byte) main::i#53 )
  (byte) main::b#4 ← phi( main::@54/(byte) main::b#13 )
  (byte) main::a#18 ← phi( main::@54/(byte) main::a#52 )
  (byte*) char_cursor#62 ← phi( main::@54/(byte*) char_cursor#4 )
  (byte*) line_cursor#14 ← phi( main::@54/(byte*) line_cursor#2 )
  (byte*) line_cursor#4 ← (byte*) line_cursor#14
  (byte*) char_cursor#19 ← (byte*) char_cursor#62
  (byte) main::r#15 ← (byte) '-'
  (boolean~) main::$28 ← (byte) main::a#18 <= (byte) main::b#4
  (boolean~) main::$29 ← ! (boolean~) main::$28
  if((boolean~) main::$29) goto main::@10
  to:main::@31
main::@30: scope:[main]  from main::@53
  (byte) main::i#62 ← phi( main::@53/(byte) main::i#63 )
  (byte) main::b#25 ← phi( main::@53/(byte) main::b#26 )
  (byte*) line_cursor#35 ← phi( main::@53/(byte*) line_cursor#36 )
  (byte*) char_cursor#122 ← phi( main::@53/(byte*) char_cursor#17 )
  (byte) main::a#51 ← phi( main::@53/(byte) main::a#16 )
  (byte) main::r#16 ← (byte) '+'
  to:main::@9
main::@10: scope:[main]  from main::@31 main::@55
  (byte*) line_cursor#75 ← phi( main::@31/(byte*) line_cursor#81 main::@55/(byte*) line_cursor#4 )
  (byte) main::i#37 ← phi( main::@31/(byte) main::i#46 main::@55/(byte) main::i#47 )
  (byte*) char_cursor#99 ← phi( main::@31/(byte*) char_cursor#123 main::@55/(byte*) char_cursor#19 )
  (byte) main::r#48 ← phi( main::@31/(byte) main::r#18 main::@55/(byte) main::r#15 )
  (byte) main::b#5 ← phi( main::@31/(byte) main::b#14 main::@55/(byte) main::b#4 )
  (byte) main::a#19 ← phi( main::@31/(byte) main::a#53 main::@55/(byte) main::a#18 )
  (byte) printu::a#8 ← (byte) main::a#19
  (byte[]) printu::op#8 ← (const string) main::op8
  (byte) printu::b#8 ← (byte) main::b#5
  (byte) printu::res#8 ← (byte) main::r#48
  call printu param-assignment
  to:main::@56
main::@56: scope:[main]  from main::@10
  (byte) main::b#52 ← phi( main::@10/(byte) main::b#5 )
  (byte*) line_cursor#68 ← phi( main::@10/(byte*) line_cursor#75 )
  (byte) main::i#29 ← phi( main::@10/(byte) main::i#37 )
  (byte) main::a#20 ← phi( main::@10/(byte) main::a#19 )
  (byte*) char_cursor#63 ← phi( main::@10/(byte*) char_cursor#42 )
  (byte*) char_cursor#20 ← (byte*) char_cursor#63
  (byte) main::r#17 ← (byte) '-'
  (boolean~) main::$31 ← (byte) main::a#20 <= (byte/signed byte/word/signed word) 55
  (boolean~) main::$32 ← ! (boolean~) main::$31
  if((boolean~) main::$32) goto main::@11
  to:main::@32
main::@31: scope:[main]  from main::@55
  (byte*) line_cursor#81 ← phi( main::@55/(byte*) line_cursor#4 )
  (byte) main::i#46 ← phi( main::@55/(byte) main::i#47 )
  (byte*) char_cursor#123 ← phi( main::@55/(byte*) char_cursor#19 )
  (byte) main::b#14 ← phi( main::@55/(byte) main::b#4 )
  (byte) main::a#53 ← phi( main::@55/(byte) main::a#18 )
  (byte) main::r#18 ← (byte) '+'
  to:main::@10
main::@11: scope:[main]  from main::@32 main::@56
  (byte) main::b#45 ← phi( main::@32/(byte) main::b#51 main::@56/(byte) main::b#52 )
  (byte*) line_cursor#60 ← phi( main::@32/(byte*) line_cursor#67 main::@56/(byte*) line_cursor#68 )
  (byte) main::i#17 ← phi( main::@32/(byte) main::i#28 main::@56/(byte) main::i#29 )
  (byte*) char_cursor#100 ← phi( main::@32/(byte*) char_cursor#124 main::@56/(byte*) char_cursor#20 )
  (byte) main::r#49 ← phi( main::@32/(byte) main::r#20 main::@56/(byte) main::r#17 )
  (byte) main::a#21 ← phi( main::@32/(byte) main::a#54 main::@56/(byte) main::a#20 )
  (byte) printu::a#9 ← (byte) main::a#21
  (byte[]) printu::op#9 ← (const string) main::op9
  (byte) printu::b#9 ← (byte/signed byte/word/signed word) 55
  (byte) printu::res#9 ← (byte) main::r#49
  call printu param-assignment
  to:main::@57
main::@57: scope:[main]  from main::@11
  (byte) main::b#40 ← phi( main::@11/(byte) main::b#45 )
  (byte*) line_cursor#53 ← phi( main::@11/(byte*) line_cursor#60 )
  (byte) main::i#6 ← phi( main::@11/(byte) main::i#17 )
  (byte) main::a#22 ← phi( main::@11/(byte) main::a#21 )
  (byte*) char_cursor#64 ← phi( main::@11/(byte*) char_cursor#42 )
  (byte*) char_cursor#21 ← (byte*) char_cursor#64
  (byte) main::r#19 ← (byte) '-'
  (boolean~) main::$34 ← (byte) main::a#22 <= *((byte[5]) main::cs#0 + (byte) main::i#6)
  (boolean~) main::$35 ← ! (boolean~) main::$34
  if((boolean~) main::$35) goto main::@12
  to:main::@33
main::@32: scope:[main]  from main::@56
  (byte) main::b#51 ← phi( main::@56/(byte) main::b#52 )
  (byte*) line_cursor#67 ← phi( main::@56/(byte*) line_cursor#68 )
  (byte) main::i#28 ← phi( main::@56/(byte) main::i#29 )
  (byte*) char_cursor#124 ← phi( main::@56/(byte*) char_cursor#20 )
  (byte) main::a#54 ← phi( main::@56/(byte) main::a#20 )
  (byte) main::r#20 ← (byte) '+'
  to:main::@11
main::@12: scope:[main]  from main::@33 main::@57
  (byte) main::b#33 ← phi( main::@33/(byte) main::b#39 main::@57/(byte) main::b#40 )
  (byte*) line_cursor#45 ← phi( main::@33/(byte*) line_cursor#52 main::@57/(byte*) line_cursor#53 )
  (byte*) char_cursor#101 ← phi( main::@33/(byte*) char_cursor#125 main::@57/(byte*) char_cursor#21 )
  (byte) main::r#50 ← phi( main::@33/(byte) main::r#22 main::@57/(byte) main::r#19 )
  (byte) main::i#7 ← phi( main::@33/(byte) main::i#18 main::@57/(byte) main::i#6 )
  (byte) main::a#23 ← phi( main::@33/(byte) main::a#55 main::@57/(byte) main::a#22 )
  (byte) printu::a#10 ← (byte) main::a#23
  (byte[]) printu::op#10 ← (const string) main::op10
  (byte) printu::b#10 ← *((byte[5]) main::cs#0 + (byte) main::i#7)
  (byte) printu::res#10 ← (byte) main::r#50
  call printu param-assignment
  to:main::@58
main::@58: scope:[main]  from main::@12
  (byte) main::i#65 ← phi( main::@12/(byte) main::i#7 )
  (byte) main::b#28 ← phi( main::@12/(byte) main::b#33 )
  (byte*) line_cursor#38 ← phi( main::@12/(byte*) line_cursor#45 )
  (byte) main::a#24 ← phi( main::@12/(byte) main::a#23 )
  (byte*) char_cursor#65 ← phi( main::@12/(byte*) char_cursor#42 )
  (byte*) char_cursor#22 ← (byte*) char_cursor#65
  (byte) main::r#21 ← (byte) '-'
  (boolean~) main::$37 ← (byte) main::a#24 <= (byte) main::a#24
  (boolean~) main::$38 ← ! (boolean~) main::$37
  if((boolean~) main::$38) goto main::@13
  to:main::@34
main::@33: scope:[main]  from main::@57
  (byte) main::b#39 ← phi( main::@57/(byte) main::b#40 )
  (byte*) line_cursor#52 ← phi( main::@57/(byte*) line_cursor#53 )
  (byte*) char_cursor#125 ← phi( main::@57/(byte*) char_cursor#21 )
  (byte) main::i#18 ← phi( main::@57/(byte) main::i#6 )
  (byte) main::a#55 ← phi( main::@57/(byte) main::a#22 )
  (byte) main::r#22 ← (byte) '+'
  to:main::@12
main::@13: scope:[main]  from main::@34 main::@58
  (byte) main::i#58 ← phi( main::@34/(byte) main::i#64 main::@58/(byte) main::i#65 )
  (byte) main::b#21 ← phi( main::@34/(byte) main::b#27 main::@58/(byte) main::b#28 )
  (byte*) line_cursor#30 ← phi( main::@34/(byte*) line_cursor#37 main::@58/(byte*) line_cursor#38 )
  (byte*) char_cursor#102 ← phi( main::@34/(byte*) char_cursor#126 main::@58/(byte*) char_cursor#22 )
  (byte) main::r#51 ← phi( main::@34/(byte) main::r#24 main::@58/(byte) main::r#21 )
  (byte) main::a#25 ← phi( main::@34/(byte) main::a#56 main::@58/(byte) main::a#24 )
  (byte) printu::a#11 ← (byte) main::a#25
  (byte[]) printu::op#11 ← (const string) main::op11
  (byte) printu::b#11 ← (byte) main::a#25
  (byte) printu::res#11 ← (byte) main::r#51
  call printu param-assignment
  to:main::@59
main::@59: scope:[main]  from main::@13
  (byte) main::i#54 ← phi( main::@13/(byte) main::i#58 )
  (byte) main::b#15 ← phi( main::@13/(byte) main::b#21 )
  (byte) main::a#57 ← phi( main::@13/(byte) main::a#25 )
  (byte*) line_cursor#23 ← phi( main::@13/(byte*) line_cursor#30 )
  (byte*) char_cursor#66 ← phi( main::@13/(byte*) char_cursor#42 )
  (byte*) char_cursor#23 ← (byte*) char_cursor#66
  call print_ln param-assignment
  to:main::@60
main::@60: scope:[main]  from main::@59
  (byte) main::i#49 ← phi( main::@59/(byte) main::i#54 )
  (byte) main::b#6 ← phi( main::@59/(byte) main::b#15 )
  (byte) main::a#26 ← phi( main::@59/(byte) main::a#57 )
  (byte*) char_cursor#67 ← phi( main::@59/(byte*) char_cursor#4 )
  (byte*) line_cursor#15 ← phi( main::@59/(byte*) line_cursor#2 )
  (byte*) line_cursor#5 ← (byte*) line_cursor#15
  (byte*) char_cursor#24 ← (byte*) char_cursor#67
  (byte) main::r#23 ← (byte) '-'
  (boolean~) main::$41 ← (byte) main::a#26 >= (byte) main::b#6
  (boolean~) main::$42 ← ! (boolean~) main::$41
  if((boolean~) main::$42) goto main::@14
  to:main::@35
main::@34: scope:[main]  from main::@58
  (byte) main::i#64 ← phi( main::@58/(byte) main::i#65 )
  (byte) main::b#27 ← phi( main::@58/(byte) main::b#28 )
  (byte*) line_cursor#37 ← phi( main::@58/(byte*) line_cursor#38 )
  (byte*) char_cursor#126 ← phi( main::@58/(byte*) char_cursor#22 )
  (byte) main::a#56 ← phi( main::@58/(byte) main::a#24 )
  (byte) main::r#24 ← (byte) '+'
  to:main::@13
main::@14: scope:[main]  from main::@35 main::@60
  (byte*) line_cursor#76 ← phi( main::@35/(byte*) line_cursor#82 main::@60/(byte*) line_cursor#5 )
  (byte) main::i#38 ← phi( main::@35/(byte) main::i#48 main::@60/(byte) main::i#49 )
  (byte*) char_cursor#103 ← phi( main::@35/(byte*) char_cursor#127 main::@60/(byte*) char_cursor#24 )
  (byte) main::r#52 ← phi( main::@35/(byte) main::r#26 main::@60/(byte) main::r#23 )
  (byte) main::b#7 ← phi( main::@35/(byte) main::b#16 main::@60/(byte) main::b#6 )
  (byte) main::a#27 ← phi( main::@35/(byte) main::a#58 main::@60/(byte) main::a#26 )
  (byte) printu::a#12 ← (byte) main::a#27
  (byte[]) printu::op#12 ← (const string) main::op12
  (byte) printu::b#12 ← (byte) main::b#7
  (byte) printu::res#12 ← (byte) main::r#52
  call printu param-assignment
  to:main::@61
main::@61: scope:[main]  from main::@14
  (byte) main::b#54 ← phi( main::@14/(byte) main::b#7 )
  (byte*) line_cursor#70 ← phi( main::@14/(byte*) line_cursor#76 )
  (byte) main::i#31 ← phi( main::@14/(byte) main::i#38 )
  (byte) main::a#28 ← phi( main::@14/(byte) main::a#27 )
  (byte*) char_cursor#68 ← phi( main::@14/(byte*) char_cursor#42 )
  (byte*) char_cursor#25 ← (byte*) char_cursor#68
  (byte) main::r#25 ← (byte) '-'
  (boolean~) main::$44 ← (byte) main::a#28 >= (byte/signed byte/word/signed word) 55
  (boolean~) main::$45 ← ! (boolean~) main::$44
  if((boolean~) main::$45) goto main::@15
  to:main::@36
main::@35: scope:[main]  from main::@60
  (byte*) line_cursor#82 ← phi( main::@60/(byte*) line_cursor#5 )
  (byte) main::i#48 ← phi( main::@60/(byte) main::i#49 )
  (byte*) char_cursor#127 ← phi( main::@60/(byte*) char_cursor#24 )
  (byte) main::b#16 ← phi( main::@60/(byte) main::b#6 )
  (byte) main::a#58 ← phi( main::@60/(byte) main::a#26 )
  (byte) main::r#26 ← (byte) '+'
  to:main::@14
main::@15: scope:[main]  from main::@36 main::@61
  (byte) main::b#46 ← phi( main::@36/(byte) main::b#53 main::@61/(byte) main::b#54 )
  (byte*) line_cursor#61 ← phi( main::@36/(byte*) line_cursor#69 main::@61/(byte*) line_cursor#70 )
  (byte) main::i#19 ← phi( main::@36/(byte) main::i#30 main::@61/(byte) main::i#31 )
  (byte*) char_cursor#104 ← phi( main::@36/(byte*) char_cursor#128 main::@61/(byte*) char_cursor#25 )
  (byte) main::r#53 ← phi( main::@36/(byte) main::r#28 main::@61/(byte) main::r#25 )
  (byte) main::a#29 ← phi( main::@36/(byte) main::a#59 main::@61/(byte) main::a#28 )
  (byte) printu::a#13 ← (byte) main::a#29
  (byte[]) printu::op#13 ← (const string) main::op13
  (byte) printu::b#13 ← (byte/signed byte/word/signed word) 55
  (byte) printu::res#13 ← (byte) main::r#53
  call printu param-assignment
  to:main::@62
main::@62: scope:[main]  from main::@15
  (byte) main::b#42 ← phi( main::@15/(byte) main::b#46 )
  (byte*) line_cursor#55 ← phi( main::@15/(byte*) line_cursor#61 )
  (byte) main::i#8 ← phi( main::@15/(byte) main::i#19 )
  (byte) main::a#30 ← phi( main::@15/(byte) main::a#29 )
  (byte*) char_cursor#69 ← phi( main::@15/(byte*) char_cursor#42 )
  (byte*) char_cursor#26 ← (byte*) char_cursor#69
  (byte) main::r#27 ← (byte) '-'
  (boolean~) main::$47 ← (byte) main::a#30 >= *((byte[5]) main::cs#0 + (byte) main::i#8)
  (boolean~) main::$48 ← ! (boolean~) main::$47
  if((boolean~) main::$48) goto main::@16
  to:main::@37
main::@36: scope:[main]  from main::@61
  (byte) main::b#53 ← phi( main::@61/(byte) main::b#54 )
  (byte*) line_cursor#69 ← phi( main::@61/(byte*) line_cursor#70 )
  (byte) main::i#30 ← phi( main::@61/(byte) main::i#31 )
  (byte*) char_cursor#128 ← phi( main::@61/(byte*) char_cursor#25 )
  (byte) main::a#59 ← phi( main::@61/(byte) main::a#28 )
  (byte) main::r#28 ← (byte) '+'
  to:main::@15
main::@16: scope:[main]  from main::@37 main::@62
  (byte) main::b#34 ← phi( main::@37/(byte) main::b#41 main::@62/(byte) main::b#42 )
  (byte*) line_cursor#46 ← phi( main::@37/(byte*) line_cursor#54 main::@62/(byte*) line_cursor#55 )
  (byte*) char_cursor#105 ← phi( main::@37/(byte*) char_cursor#129 main::@62/(byte*) char_cursor#26 )
  (byte) main::r#54 ← phi( main::@37/(byte) main::r#30 main::@62/(byte) main::r#27 )
  (byte) main::i#9 ← phi( main::@37/(byte) main::i#20 main::@62/(byte) main::i#8 )
  (byte) main::a#31 ← phi( main::@37/(byte) main::a#60 main::@62/(byte) main::a#30 )
  (byte) printu::a#14 ← (byte) main::a#31
  (byte[]) printu::op#14 ← (const string) main::op14
  (byte) printu::b#14 ← *((byte[5]) main::cs#0 + (byte) main::i#9)
  (byte) printu::res#14 ← (byte) main::r#54
  call printu param-assignment
  to:main::@63
main::@63: scope:[main]  from main::@16
  (byte) main::i#67 ← phi( main::@16/(byte) main::i#9 )
  (byte) main::b#30 ← phi( main::@16/(byte) main::b#34 )
  (byte*) line_cursor#40 ← phi( main::@16/(byte*) line_cursor#46 )
  (byte) main::a#32 ← phi( main::@16/(byte) main::a#31 )
  (byte*) char_cursor#70 ← phi( main::@16/(byte*) char_cursor#42 )
  (byte*) char_cursor#27 ← (byte*) char_cursor#70
  (byte) main::r#29 ← (byte) '-'
  (boolean~) main::$50 ← (byte) main::a#32 >= (byte) main::a#32
  (boolean~) main::$51 ← ! (boolean~) main::$50
  if((boolean~) main::$51) goto main::@17
  to:main::@38
main::@37: scope:[main]  from main::@62
  (byte) main::b#41 ← phi( main::@62/(byte) main::b#42 )
  (byte*) line_cursor#54 ← phi( main::@62/(byte*) line_cursor#55 )
  (byte*) char_cursor#129 ← phi( main::@62/(byte*) char_cursor#26 )
  (byte) main::i#20 ← phi( main::@62/(byte) main::i#8 )
  (byte) main::a#60 ← phi( main::@62/(byte) main::a#30 )
  (byte) main::r#30 ← (byte) '+'
  to:main::@16
main::@17: scope:[main]  from main::@38 main::@63
  (byte) main::i#59 ← phi( main::@38/(byte) main::i#66 main::@63/(byte) main::i#67 )
  (byte) main::b#22 ← phi( main::@38/(byte) main::b#29 main::@63/(byte) main::b#30 )
  (byte*) line_cursor#31 ← phi( main::@38/(byte*) line_cursor#39 main::@63/(byte*) line_cursor#40 )
  (byte*) char_cursor#106 ← phi( main::@38/(byte*) char_cursor#130 main::@63/(byte*) char_cursor#27 )
  (byte) main::r#55 ← phi( main::@38/(byte) main::r#32 main::@63/(byte) main::r#29 )
  (byte) main::a#33 ← phi( main::@38/(byte) main::a#61 main::@63/(byte) main::a#32 )
  (byte) printu::a#15 ← (byte) main::a#33
  (byte[]) printu::op#15 ← (const string) main::op15
  (byte) printu::b#15 ← (byte) main::a#33
  (byte) printu::res#15 ← (byte) main::r#55
  call printu param-assignment
  to:main::@64
main::@64: scope:[main]  from main::@17
  (byte) main::i#55 ← phi( main::@17/(byte) main::i#59 )
  (byte) main::b#17 ← phi( main::@17/(byte) main::b#22 )
  (byte) main::a#62 ← phi( main::@17/(byte) main::a#33 )
  (byte*) line_cursor#24 ← phi( main::@17/(byte*) line_cursor#31 )
  (byte*) char_cursor#71 ← phi( main::@17/(byte*) char_cursor#42 )
  (byte*) char_cursor#28 ← (byte*) char_cursor#71
  call print_ln param-assignment
  to:main::@65
main::@65: scope:[main]  from main::@64
  (byte) main::i#51 ← phi( main::@64/(byte) main::i#55 )
  (byte) main::b#8 ← phi( main::@64/(byte) main::b#17 )
  (byte) main::a#34 ← phi( main::@64/(byte) main::a#62 )
  (byte*) char_cursor#72 ← phi( main::@64/(byte*) char_cursor#4 )
  (byte*) line_cursor#16 ← phi( main::@64/(byte*) line_cursor#2 )
  (byte*) line_cursor#6 ← (byte*) line_cursor#16
  (byte*) char_cursor#29 ← (byte*) char_cursor#72
  (byte) main::r#31 ← (byte) '-'
  (boolean~) main::$54 ← (byte) main::a#34 == (byte) main::b#8
  (boolean~) main::$55 ← ! (boolean~) main::$54
  if((boolean~) main::$55) goto main::@18
  to:main::@39
main::@38: scope:[main]  from main::@63
  (byte) main::i#66 ← phi( main::@63/(byte) main::i#67 )
  (byte) main::b#29 ← phi( main::@63/(byte) main::b#30 )
  (byte*) line_cursor#39 ← phi( main::@63/(byte*) line_cursor#40 )
  (byte*) char_cursor#130 ← phi( main::@63/(byte*) char_cursor#27 )
  (byte) main::a#61 ← phi( main::@63/(byte) main::a#32 )
  (byte) main::r#32 ← (byte) '+'
  to:main::@17
main::@18: scope:[main]  from main::@39 main::@65
  (byte*) line_cursor#77 ← phi( main::@39/(byte*) line_cursor#83 main::@65/(byte*) line_cursor#6 )
  (byte) main::i#39 ← phi( main::@39/(byte) main::i#50 main::@65/(byte) main::i#51 )
  (byte*) char_cursor#107 ← phi( main::@39/(byte*) char_cursor#131 main::@65/(byte*) char_cursor#29 )
  (byte) main::r#56 ← phi( main::@39/(byte) main::r#34 main::@65/(byte) main::r#31 )
  (byte) main::b#9 ← phi( main::@39/(byte) main::b#18 main::@65/(byte) main::b#8 )
  (byte) main::a#35 ← phi( main::@39/(byte) main::a#63 main::@65/(byte) main::a#34 )
  (byte) printu::a#16 ← (byte) main::a#35
  (byte[]) printu::op#16 ← (const string) main::op16
  (byte) printu::b#16 ← (byte) main::b#9
  (byte) printu::res#16 ← (byte) main::r#56
  call printu param-assignment
  to:main::@66
main::@66: scope:[main]  from main::@18
  (byte*) line_cursor#72 ← phi( main::@18/(byte*) line_cursor#77 )
  (byte) main::i#33 ← phi( main::@18/(byte) main::i#39 )
  (byte) main::a#36 ← phi( main::@18/(byte) main::a#35 )
  (byte*) char_cursor#73 ← phi( main::@18/(byte*) char_cursor#42 )
  (byte*) char_cursor#30 ← (byte*) char_cursor#73
  (byte) main::r#33 ← (byte) '-'
  (boolean~) main::$57 ← (byte) main::a#36 == (byte/signed byte/word/signed word) 55
  (boolean~) main::$58 ← ! (boolean~) main::$57
  if((boolean~) main::$58) goto main::@19
  to:main::@40
main::@39: scope:[main]  from main::@65
  (byte*) line_cursor#83 ← phi( main::@65/(byte*) line_cursor#6 )
  (byte) main::i#50 ← phi( main::@65/(byte) main::i#51 )
  (byte*) char_cursor#131 ← phi( main::@65/(byte*) char_cursor#29 )
  (byte) main::b#18 ← phi( main::@65/(byte) main::b#8 )
  (byte) main::a#63 ← phi( main::@65/(byte) main::a#34 )
  (byte) main::r#34 ← (byte) '+'
  to:main::@18
main::@19: scope:[main]  from main::@40 main::@66
  (byte*) line_cursor#62 ← phi( main::@40/(byte*) line_cursor#71 main::@66/(byte*) line_cursor#72 )
  (byte) main::i#21 ← phi( main::@40/(byte) main::i#32 main::@66/(byte) main::i#33 )
  (byte*) char_cursor#108 ← phi( main::@40/(byte*) char_cursor#132 main::@66/(byte*) char_cursor#30 )
  (byte) main::r#57 ← phi( main::@40/(byte) main::r#36 main::@66/(byte) main::r#33 )
  (byte) main::a#37 ← phi( main::@40/(byte) main::a#64 main::@66/(byte) main::a#36 )
  (byte) printu::a#17 ← (byte) main::a#37
  (byte[]) printu::op#17 ← (const string) main::op17
  (byte) printu::b#17 ← (byte/signed byte/word/signed word) 55
  (byte) printu::res#17 ← (byte) main::r#57
  call printu param-assignment
  to:main::@67
main::@67: scope:[main]  from main::@19
  (byte*) line_cursor#57 ← phi( main::@19/(byte*) line_cursor#62 )
  (byte) main::i#10 ← phi( main::@19/(byte) main::i#21 )
  (byte) main::a#38 ← phi( main::@19/(byte) main::a#37 )
  (byte*) char_cursor#74 ← phi( main::@19/(byte*) char_cursor#42 )
  (byte*) char_cursor#31 ← (byte*) char_cursor#74
  (byte) main::r#35 ← (byte) '-'
  (boolean~) main::$60 ← (byte) main::a#38 == *((byte[5]) main::cs#0 + (byte) main::i#10)
  (boolean~) main::$61 ← ! (boolean~) main::$60
  if((boolean~) main::$61) goto main::@20
  to:main::@41
main::@40: scope:[main]  from main::@66
  (byte*) line_cursor#71 ← phi( main::@66/(byte*) line_cursor#72 )
  (byte) main::i#32 ← phi( main::@66/(byte) main::i#33 )
  (byte*) char_cursor#132 ← phi( main::@66/(byte*) char_cursor#30 )
  (byte) main::a#64 ← phi( main::@66/(byte) main::a#36 )
  (byte) main::r#36 ← (byte) '+'
  to:main::@19
main::@20: scope:[main]  from main::@41 main::@67
  (byte*) line_cursor#47 ← phi( main::@41/(byte*) line_cursor#56 main::@67/(byte*) line_cursor#57 )
  (byte*) char_cursor#109 ← phi( main::@41/(byte*) char_cursor#133 main::@67/(byte*) char_cursor#31 )
  (byte) main::r#58 ← phi( main::@41/(byte) main::r#38 main::@67/(byte) main::r#35 )
  (byte) main::i#11 ← phi( main::@41/(byte) main::i#22 main::@67/(byte) main::i#10 )
  (byte) main::a#39 ← phi( main::@41/(byte) main::a#65 main::@67/(byte) main::a#38 )
  (byte) printu::a#18 ← (byte) main::a#39
  (byte[]) printu::op#18 ← (const string) main::op18
  (byte) printu::b#18 ← *((byte[5]) main::cs#0 + (byte) main::i#11)
  (byte) printu::res#18 ← (byte) main::r#58
  call printu param-assignment
  to:main::@68
main::@68: scope:[main]  from main::@20
  (byte) main::i#41 ← phi( main::@20/(byte) main::i#11 )
  (byte*) line_cursor#42 ← phi( main::@20/(byte*) line_cursor#47 )
  (byte) main::a#40 ← phi( main::@20/(byte) main::a#39 )
  (byte*) char_cursor#75 ← phi( main::@20/(byte*) char_cursor#42 )
  (byte*) char_cursor#32 ← (byte*) char_cursor#75
  (byte) main::r#37 ← (byte) '-'
  (boolean~) main::$63 ← (byte) main::a#40 == (byte) main::a#40
  (boolean~) main::$64 ← ! (boolean~) main::$63
  if((boolean~) main::$64) goto main::@21
  to:main::@42
main::@41: scope:[main]  from main::@67
  (byte*) line_cursor#56 ← phi( main::@67/(byte*) line_cursor#57 )
  (byte*) char_cursor#133 ← phi( main::@67/(byte*) char_cursor#31 )
  (byte) main::i#22 ← phi( main::@67/(byte) main::i#10 )
  (byte) main::a#65 ← phi( main::@67/(byte) main::a#38 )
  (byte) main::r#38 ← (byte) '+'
  to:main::@20
main::@21: scope:[main]  from main::@42 main::@68
  (byte) main::i#34 ← phi( main::@42/(byte) main::i#40 main::@68/(byte) main::i#41 )
  (byte*) line_cursor#32 ← phi( main::@42/(byte*) line_cursor#41 main::@68/(byte*) line_cursor#42 )
  (byte*) char_cursor#110 ← phi( main::@42/(byte*) char_cursor#134 main::@68/(byte*) char_cursor#32 )
  (byte) main::r#59 ← phi( main::@42/(byte) main::r#39 main::@68/(byte) main::r#37 )
  (byte) main::a#41 ← phi( main::@42/(byte) main::a#66 main::@68/(byte) main::a#40 )
  (byte) printu::a#19 ← (byte) main::a#41
  (byte[]) printu::op#19 ← (const string) main::op19
  (byte) printu::b#19 ← (byte) main::a#41
  (byte) printu::res#19 ← (byte) main::r#59
  call printu param-assignment
  to:main::@69
main::@69: scope:[main]  from main::@21
  (byte) main::i#23 ← phi( main::@21/(byte) main::i#34 )
  (byte) main::a#67 ← phi( main::@21/(byte) main::a#41 )
  (byte*) line_cursor#25 ← phi( main::@21/(byte*) line_cursor#32 )
  (byte*) char_cursor#76 ← phi( main::@21/(byte*) char_cursor#42 )
  (byte*) char_cursor#33 ← (byte*) char_cursor#76
  call print_ln param-assignment
  to:main::@70
main::@70: scope:[main]  from main::@69
  (byte) main::i#12 ← phi( main::@69/(byte) main::i#23 )
  (byte) main::a#42 ← phi( main::@69/(byte) main::a#67 )
  (byte*) char_cursor#77 ← phi( main::@69/(byte*) char_cursor#4 )
  (byte*) line_cursor#17 ← phi( main::@69/(byte*) line_cursor#2 )
  (byte*) line_cursor#7 ← (byte*) line_cursor#17
  (byte*) char_cursor#34 ← (byte*) char_cursor#77
  (byte/word~) main::$67 ← (byte) main::a#42 + (byte/signed byte/word/signed word) 48
  (byte) main::a#1 ← (byte/word~) main::$67
  (byte) main::i#1 ← ++ (byte) main::i#12
  (boolean~) main::$68 ← (byte) main::i#1 != (byte/signed byte/word/signed word) 5
  if((boolean~) main::$68) goto main::@1
  to:main::@22
main::@42: scope:[main]  from main::@68
  (byte) main::i#40 ← phi( main::@68/(byte) main::i#41 )
  (byte*) line_cursor#41 ← phi( main::@68/(byte*) line_cursor#42 )
  (byte*) char_cursor#134 ← phi( main::@68/(byte*) char_cursor#32 )
  (byte) main::a#66 ← phi( main::@68/(byte) main::a#40 )
  (byte) main::r#39 ← (byte) '+'
  to:main::@21
main::@22: scope:[main]  from main::@22 main::@70
  (byte*) line_cursor#26 ← phi( main::@22/(byte*) line_cursor#26 main::@70/(byte*) line_cursor#7 )
  (byte*) char_cursor#111 ← phi( main::@22/(byte*) char_cursor#111 main::@70/(byte*) char_cursor#34 )
  if(true) goto main::@22
  to:main::@return
main::@return: scope:[main]  from main::@22
  (byte*) line_cursor#18 ← phi( main::@22/(byte*) line_cursor#26 )
  (byte*) char_cursor#78 ← phi( main::@22/(byte*) char_cursor#111 )
  (byte*) char_cursor#35 ← (byte*) char_cursor#78
  (byte*) line_cursor#8 ← (byte*) line_cursor#18
  return 
  to:@return
printu: scope:[printu]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  (byte) printu::res#25 ← phi( main::@10/(byte) printu::res#8 main::@11/(byte) printu::res#9 main::@12/(byte) printu::res#10 main::@13/(byte) printu::res#11 main::@14/(byte) printu::res#12 main::@15/(byte) printu::res#13 main::@16/(byte) printu::res#14 main::@17/(byte) printu::res#15 main::@18/(byte) printu::res#16 main::@19/(byte) printu::res#17 main::@2/(byte) printu::res#0 main::@20/(byte) printu::res#18 main::@21/(byte) printu::res#19 main::@3/(byte) printu::res#1 main::@4/(byte) printu::res#2 main::@5/(byte) printu::res#3 main::@6/(byte) printu::res#4 main::@7/(byte) printu::res#5 main::@8/(byte) printu::res#6 main::@9/(byte) printu::res#7 )
  (byte) printu::b#23 ← phi( main::@10/(byte) printu::b#8 main::@11/(byte) printu::b#9 main::@12/(byte) printu::b#10 main::@13/(byte) printu::b#11 main::@14/(byte) printu::b#12 main::@15/(byte) printu::b#13 main::@16/(byte) printu::b#14 main::@17/(byte) printu::b#15 main::@18/(byte) printu::b#16 main::@19/(byte) printu::b#17 main::@2/(byte) printu::b#0 main::@20/(byte) printu::b#18 main::@21/(byte) printu::b#19 main::@3/(byte) printu::b#1 main::@4/(byte) printu::b#2 main::@5/(byte) printu::b#3 main::@6/(byte) printu::b#4 main::@7/(byte) printu::b#5 main::@8/(byte) printu::b#6 main::@9/(byte) printu::b#7 )
  (byte[]) printu::op#22 ← phi( main::@10/(byte[]) printu::op#8 main::@11/(byte[]) printu::op#9 main::@12/(byte[]) printu::op#10 main::@13/(byte[]) printu::op#11 main::@14/(byte[]) printu::op#12 main::@15/(byte[]) printu::op#13 main::@16/(byte[]) printu::op#14 main::@17/(byte[]) printu::op#15 main::@18/(byte[]) printu::op#16 main::@19/(byte[]) printu::op#17 main::@2/(byte[]) printu::op#0 main::@20/(byte[]) printu::op#18 main::@21/(byte[]) printu::op#19 main::@3/(byte[]) printu::op#1 main::@4/(byte[]) printu::op#2 main::@5/(byte[]) printu::op#3 main::@6/(byte[]) printu::op#4 main::@7/(byte[]) printu::op#5 main::@8/(byte[]) printu::op#6 main::@9/(byte[]) printu::op#7 )
  (byte) printu::a#21 ← phi( main::@10/(byte) printu::a#8 main::@11/(byte) printu::a#9 main::@12/(byte) printu::a#10 main::@13/(byte) printu::a#11 main::@14/(byte) printu::a#12 main::@15/(byte) printu::a#13 main::@16/(byte) printu::a#14 main::@17/(byte) printu::a#15 main::@18/(byte) printu::a#16 main::@19/(byte) printu::a#17 main::@2/(byte) printu::a#0 main::@20/(byte) printu::a#18 main::@21/(byte) printu::a#19 main::@3/(byte) printu::a#1 main::@4/(byte) printu::a#2 main::@5/(byte) printu::a#3 main::@6/(byte) printu::a#4 main::@7/(byte) printu::a#5 main::@8/(byte) printu::a#6 main::@9/(byte) printu::a#7 )
  (byte*) char_cursor#90 ← phi( main::@10/(byte*) char_cursor#99 main::@11/(byte*) char_cursor#100 main::@12/(byte*) char_cursor#101 main::@13/(byte*) char_cursor#102 main::@14/(byte*) char_cursor#103 main::@15/(byte*) char_cursor#104 main::@16/(byte*) char_cursor#105 main::@17/(byte*) char_cursor#106 main::@18/(byte*) char_cursor#107 main::@19/(byte*) char_cursor#108 main::@2/(byte*) char_cursor#91 main::@20/(byte*) char_cursor#109 main::@21/(byte*) char_cursor#110 main::@3/(byte*) char_cursor#92 main::@4/(byte*) char_cursor#93 main::@5/(byte*) char_cursor#94 main::@6/(byte*) char_cursor#95 main::@7/(byte*) char_cursor#96 main::@8/(byte*) char_cursor#97 main::@9/(byte*) char_cursor#98 )
  (byte) print_char::ch#2 ← (byte) ' '
  call print_char param-assignment
  to:printu::@1
printu::@1: scope:[printu]  from printu
  (byte) printu::res#24 ← phi( printu/(byte) printu::res#25 )
  (byte) printu::b#22 ← phi( printu/(byte) printu::b#23 )
  (byte[]) printu::op#21 ← phi( printu/(byte[]) printu::op#22 )
  (byte) printu::a#20 ← phi( printu/(byte) printu::a#21 )
  (byte*) char_cursor#79 ← phi( printu/(byte*) char_cursor#9 )
  (byte*) char_cursor#36 ← (byte*) char_cursor#79
  (byte) print_byte::b#0 ← (byte) printu::a#20
  call print_byte param-assignment
  to:printu::@2
printu::@2: scope:[printu]  from printu::@1
  (byte) printu::res#23 ← phi( printu::@1/(byte) printu::res#24 )
  (byte) printu::b#21 ← phi( printu::@1/(byte) printu::b#22 )
  (byte[]) printu::op#20 ← phi( printu::@1/(byte[]) printu::op#21 )
  (byte*) char_cursor#80 ← phi( printu::@1/(byte*) char_cursor#7 )
  (byte*) char_cursor#37 ← (byte*) char_cursor#80
  (byte*) print_str::str#1 ← (byte[]) printu::op#20
  call print_str param-assignment
  to:printu::@3
printu::@3: scope:[printu]  from printu::@2
  (byte) printu::res#22 ← phi( printu::@2/(byte) printu::res#23 )
  (byte) printu::b#20 ← phi( printu::@2/(byte) printu::b#21 )
  (byte*) char_cursor#81 ← phi( printu::@2/(byte*) char_cursor#2 )
  (byte*) char_cursor#38 ← (byte*) char_cursor#81
  (byte) print_byte::b#1 ← (byte) printu::b#20
  call print_byte param-assignment
  to:printu::@4
printu::@4: scope:[printu]  from printu::@3
  (byte) printu::res#21 ← phi( printu::@3/(byte) printu::res#22 )
  (byte*) char_cursor#82 ← phi( printu::@3/(byte*) char_cursor#7 )
  (byte*) char_cursor#39 ← (byte*) char_cursor#82
  (byte) print_char::ch#3 ← (byte) ' '
  call print_char param-assignment
  to:printu::@5
printu::@5: scope:[printu]  from printu::@4
  (byte) printu::res#20 ← phi( printu::@4/(byte) printu::res#21 )
  (byte*) char_cursor#83 ← phi( printu::@4/(byte*) char_cursor#9 )
  (byte*) char_cursor#40 ← (byte*) char_cursor#83
  (byte) print_char::ch#4 ← (byte) printu::res#20
  call print_char param-assignment
  to:printu::@6
printu::@6: scope:[printu]  from printu::@5
  (byte*) char_cursor#84 ← phi( printu::@5/(byte*) char_cursor#9 )
  (byte*) char_cursor#41 ← (byte*) char_cursor#84
  to:printu::@return
printu::@return: scope:[printu]  from printu::@6
  (byte*) char_cursor#85 ← phi( printu::@6/(byte*) char_cursor#41 )
  (byte*) char_cursor#42 ← (byte*) char_cursor#85
  return 
  to:@return
@10: scope:[]  from @begin
  (byte*) line_cursor#27 ← phi( @begin/(byte*) line_cursor#0 )
  (byte*) char_cursor#112 ← phi( @begin/(byte*) char_cursor#0 )
  call main param-assignment
  to:@11
@11: scope:[]  from @10
  (byte*) line_cursor#19 ← phi( @10/(byte*) line_cursor#8 )
  (byte*) char_cursor#86 ← phi( @10/(byte*) char_cursor#35 )
  (byte*) char_cursor#43 ← (byte*) char_cursor#86
  (byte*) line_cursor#9 ← (byte*) line_cursor#19
  to:@end
@end: scope:[]  from @11

SYMBOL TABLE SSA
(label) @10
(label) @11
(label) @begin
(label) @end
(byte*) char_cursor
(byte*) char_cursor#0
(byte*) char_cursor#1
(byte*) char_cursor#10
(byte*) char_cursor#100
(byte*) char_cursor#101
(byte*) char_cursor#102
(byte*) char_cursor#103
(byte*) char_cursor#104
(byte*) char_cursor#105
(byte*) char_cursor#106
(byte*) char_cursor#107
(byte*) char_cursor#108
(byte*) char_cursor#109
(byte*) char_cursor#11
(byte*) char_cursor#110
(byte*) char_cursor#111
(byte*) char_cursor#112
(byte*) char_cursor#113
(byte*) char_cursor#114
(byte*) char_cursor#115
(byte*) char_cursor#116
(byte*) char_cursor#117
(byte*) char_cursor#118
(byte*) char_cursor#119
(byte*) char_cursor#12
(byte*) char_cursor#120
(byte*) char_cursor#121
(byte*) char_cursor#122
(byte*) char_cursor#123
(byte*) char_cursor#124
(byte*) char_cursor#125
(byte*) char_cursor#126
(byte*) char_cursor#127
(byte*) char_cursor#128
(byte*) char_cursor#129
(byte*) char_cursor#13
(byte*) char_cursor#130
(byte*) char_cursor#131
(byte*) char_cursor#132
(byte*) char_cursor#133
(byte*) char_cursor#134
(byte*) char_cursor#135
(byte*) char_cursor#136
(byte*) char_cursor#14
(byte*) char_cursor#15
(byte*) char_cursor#16
(byte*) char_cursor#17
(byte*) char_cursor#18
(byte*) char_cursor#19
(byte*) char_cursor#2
(byte*) char_cursor#20
(byte*) char_cursor#21
(byte*) char_cursor#22
(byte*) char_cursor#23
(byte*) char_cursor#24
(byte*) char_cursor#25
(byte*) char_cursor#26
(byte*) char_cursor#27
(byte*) char_cursor#28
(byte*) char_cursor#29
(byte*) char_cursor#3
(byte*) char_cursor#30
(byte*) char_cursor#31
(byte*) char_cursor#32
(byte*) char_cursor#33
(byte*) char_cursor#34
(byte*) char_cursor#35
(byte*) char_cursor#36
(byte*) char_cursor#37
(byte*) char_cursor#38
(byte*) char_cursor#39
(byte*) char_cursor#4
(byte*) char_cursor#40
(byte*) char_cursor#41
(byte*) char_cursor#42
(byte*) char_cursor#43
(byte*) char_cursor#44
(byte*) char_cursor#45
(byte*) char_cursor#46
(byte*) char_cursor#47
(byte*) char_cursor#48
(byte*) char_cursor#49
(byte*) char_cursor#5
(byte*) char_cursor#50
(byte*) char_cursor#51
(byte*) char_cursor#52
(byte*) char_cursor#53
(byte*) char_cursor#54
(byte*) char_cursor#55
(byte*) char_cursor#56
(byte*) char_cursor#57
(byte*) char_cursor#58
(byte*) char_cursor#59
(byte*) char_cursor#6
(byte*) char_cursor#60
(byte*) char_cursor#61
(byte*) char_cursor#62
(byte*) char_cursor#63
(byte*) char_cursor#64
(byte*) char_cursor#65
(byte*) char_cursor#66
(byte*) char_cursor#67
(byte*) char_cursor#68
(byte*) char_cursor#69
(byte*) char_cursor#7
(byte*) char_cursor#70
(byte*) char_cursor#71
(byte*) char_cursor#72
(byte*) char_cursor#73
(byte*) char_cursor#74
(byte*) char_cursor#75
(byte*) char_cursor#76
(byte*) char_cursor#77
(byte*) char_cursor#78
(byte*) char_cursor#79
(byte*) char_cursor#8
(byte*) char_cursor#80
(byte*) char_cursor#81
(byte*) char_cursor#82
(byte*) char_cursor#83
(byte*) char_cursor#84
(byte*) char_cursor#85
(byte*) char_cursor#86
(byte*) char_cursor#87
(byte*) char_cursor#88
(byte*) char_cursor#89
(byte*) char_cursor#9
(byte*) char_cursor#90
(byte*) char_cursor#91
(byte*) char_cursor#92
(byte*) char_cursor#93
(byte*) char_cursor#94
(byte*) char_cursor#95
(byte*) char_cursor#96
(byte*) char_cursor#97
(byte*) char_cursor#98
(byte*) char_cursor#99
(byte*) line_cursor
(byte*) line_cursor#0
(byte*) line_cursor#1
(byte*) line_cursor#10
(byte*) line_cursor#11
(byte*) line_cursor#12
(byte*) line_cursor#13
(byte*) line_cursor#14
(byte*) line_cursor#15
(byte*) line_cursor#16
(byte*) line_cursor#17
(byte*) line_cursor#18
(byte*) line_cursor#19
(byte*) line_cursor#2
(byte*) line_cursor#20
(byte*) line_cursor#21
(byte*) line_cursor#22
(byte*) line_cursor#23
(byte*) line_cursor#24
(byte*) line_cursor#25
(byte*) line_cursor#26
(byte*) line_cursor#27
(byte*) line_cursor#28
(byte*) line_cursor#29
(byte*) line_cursor#3
(byte*) line_cursor#30
(byte*) line_cursor#31
(byte*) line_cursor#32
(byte*) line_cursor#33
(byte*) line_cursor#34
(byte*) line_cursor#35
(byte*) line_cursor#36
(byte*) line_cursor#37
(byte*) line_cursor#38
(byte*) line_cursor#39
(byte*) line_cursor#4
(byte*) line_cursor#40
(byte*) line_cursor#41
(byte*) line_cursor#42
(byte*) line_cursor#43
(byte*) line_cursor#44
(byte*) line_cursor#45
(byte*) line_cursor#46
(byte*) line_cursor#47
(byte*) line_cursor#48
(byte*) line_cursor#49
(byte*) line_cursor#5
(byte*) line_cursor#50
(byte*) line_cursor#51
(byte*) line_cursor#52
(byte*) line_cursor#53
(byte*) line_cursor#54
(byte*) line_cursor#55
(byte*) line_cursor#56
(byte*) line_cursor#57
(byte*) line_cursor#58
(byte*) line_cursor#59
(byte*) line_cursor#6
(byte*) line_cursor#60
(byte*) line_cursor#61
(byte*) line_cursor#62
(byte*) line_cursor#63
(byte*) line_cursor#64
(byte*) line_cursor#65
(byte*) line_cursor#66
(byte*) line_cursor#67
(byte*) line_cursor#68
(byte*) line_cursor#69
(byte*) line_cursor#7
(byte*) line_cursor#70
(byte*) line_cursor#71
(byte*) line_cursor#72
(byte*) line_cursor#73
(byte*) line_cursor#74
(byte*) line_cursor#75
(byte*) line_cursor#76
(byte*) line_cursor#77
(byte*) line_cursor#78
(byte*) line_cursor#79
(byte*) line_cursor#8
(byte*) line_cursor#80
(byte*) line_cursor#81
(byte*) line_cursor#82
(byte*) line_cursor#83
(byte*) line_cursor#84
(byte*) line_cursor#85
(byte*) line_cursor#9
(void()) main()
(byte/signed byte/word/signed word~) main::$1
(boolean~) main::$11
(boolean~) main::$12
(boolean~) main::$15
(boolean~) main::$16
(boolean~) main::$18
(boolean~) main::$19
(boolean~) main::$2
(boolean~) main::$21
(boolean~) main::$22
(boolean~) main::$24
(boolean~) main::$25
(boolean~) main::$28
(boolean~) main::$29
(boolean~) main::$3
(boolean~) main::$31
(boolean~) main::$32
(boolean~) main::$34
(boolean~) main::$35
(boolean~) main::$37
(boolean~) main::$38
(boolean~) main::$41
(boolean~) main::$42
(boolean~) main::$44
(boolean~) main::$45
(boolean~) main::$47
(boolean~) main::$48
(boolean~) main::$5
(boolean~) main::$50
(boolean~) main::$51
(boolean~) main::$54
(boolean~) main::$55
(boolean~) main::$57
(boolean~) main::$58
(boolean~) main::$6
(boolean~) main::$60
(boolean~) main::$61
(boolean~) main::$63
(boolean~) main::$64
(byte/word~) main::$67
(boolean~) main::$68
(boolean~) main::$8
(boolean~) main::$9
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@3
(label) main::@30
(label) main::@31
(label) main::@32
(label) main::@33
(label) main::@34
(label) main::@35
(label) main::@36
(label) main::@37
(label) main::@38
(label) main::@39
(label) main::@4
(label) main::@40
(label) main::@41
(label) main::@42
(label) main::@45
(label) main::@46
(label) main::@47
(label) main::@48
(label) main::@49
(label) main::@5
(label) main::@50
(label) main::@51
(label) main::@52
(label) main::@53
(label) main::@54
(label) main::@55
(label) main::@56
(label) main::@57
(label) main::@58
(label) main::@59
(label) main::@6
(label) main::@60
(label) main::@61
(label) main::@62
(label) main::@63
(label) main::@64
(label) main::@65
(label) main::@66
(label) main::@67
(label) main::@68
(label) main::@69
(label) main::@7
(label) main::@70
(label) main::@8
(label) main::@9
(label) main::@return
(byte) main::a
(byte) main::a#0
(byte) main::a#1
(byte) main::a#10
(byte) main::a#11
(byte) main::a#12
(byte) main::a#13
(byte) main::a#14
(byte) main::a#15
(byte) main::a#16
(byte) main::a#17
(byte) main::a#18
(byte) main::a#19
(byte) main::a#2
(byte) main::a#20
(byte) main::a#21
(byte) main::a#22
(byte) main::a#23
(byte) main::a#24
(byte) main::a#25
(byte) main::a#26
(byte) main::a#27
(byte) main::a#28
(byte) main::a#29
(byte) main::a#3
(byte) main::a#30
(byte) main::a#31
(byte) main::a#32
(byte) main::a#33
(byte) main::a#34
(byte) main::a#35
(byte) main::a#36
(byte) main::a#37
(byte) main::a#38
(byte) main::a#39
(byte) main::a#4
(byte) main::a#40
(byte) main::a#41
(byte) main::a#42
(byte) main::a#43
(byte) main::a#44
(byte) main::a#45
(byte) main::a#46
(byte) main::a#47
(byte) main::a#48
(byte) main::a#49
(byte) main::a#5
(byte) main::a#50
(byte) main::a#51
(byte) main::a#52
(byte) main::a#53
(byte) main::a#54
(byte) main::a#55
(byte) main::a#56
(byte) main::a#57
(byte) main::a#58
(byte) main::a#59
(byte) main::a#6
(byte) main::a#60
(byte) main::a#61
(byte) main::a#62
(byte) main::a#63
(byte) main::a#64
(byte) main::a#65
(byte) main::a#66
(byte) main::a#67
(byte) main::a#7
(byte) main::a#8
(byte) main::a#9
(byte) main::b
(byte) main::b#0
(byte) main::b#1
(byte) main::b#10
(byte) main::b#11
(byte) main::b#12
(byte) main::b#13
(byte) main::b#14
(byte) main::b#15
(byte) main::b#16
(byte) main::b#17
(byte) main::b#18
(byte) main::b#19
(byte) main::b#2
(byte) main::b#20
(byte) main::b#21
(byte) main::b#22
(byte) main::b#23
(byte) main::b#24
(byte) main::b#25
(byte) main::b#26
(byte) main::b#27
(byte) main::b#28
(byte) main::b#29
(byte) main::b#3
(byte) main::b#30
(byte) main::b#31
(byte) main::b#32
(byte) main::b#33
(byte) main::b#34
(byte) main::b#35
(byte) main::b#36
(byte) main::b#37
(byte) main::b#38
(byte) main::b#39
(byte) main::b#4
(byte) main::b#40
(byte) main::b#41
(byte) main::b#42
(byte) main::b#43
(byte) main::b#44
(byte) main::b#45
(byte) main::b#46
(byte) main::b#47
(byte) main::b#48
(byte) main::b#49
(byte) main::b#5
(byte) main::b#50
(byte) main::b#51
(byte) main::b#52
(byte) main::b#53
(byte) main::b#54
(byte) main::b#6
(byte) main::b#7
(byte) main::b#8
(byte) main::b#9
(byte[5]) main::cs
(byte[5]) main::cs#0
(byte) main::i
(byte) main::i#0
(byte) main::i#1
(byte) main::i#10
(byte) main::i#11
(byte) main::i#12
(byte) main::i#13
(byte) main::i#14
(byte) main::i#15
(byte) main::i#16
(byte) main::i#17
(byte) main::i#18
(byte) main::i#19
(byte) main::i#2
(byte) main::i#20
(byte) main::i#21
(byte) main::i#22
(byte) main::i#23
(byte) main::i#24
(byte) main::i#25
(byte) main::i#26
(byte) main::i#27
(byte) main::i#28
(byte) main::i#29
(byte) main::i#3
(byte) main::i#30
(byte) main::i#31
(byte) main::i#32
(byte) main::i#33
(byte) main::i#34
(byte) main::i#35
(byte) main::i#36
(byte) main::i#37
(byte) main::i#38
(byte) main::i#39
(byte) main::i#4
(byte) main::i#40
(byte) main::i#41
(byte) main::i#42
(byte) main::i#43
(byte) main::i#44
(byte) main::i#45
(byte) main::i#46
(byte) main::i#47
(byte) main::i#48
(byte) main::i#49
(byte) main::i#5
(byte) main::i#50
(byte) main::i#51
(byte) main::i#52
(byte) main::i#53
(byte) main::i#54
(byte) main::i#55
(byte) main::i#56
(byte) main::i#57
(byte) main::i#58
(byte) main::i#59
(byte) main::i#6
(byte) main::i#60
(byte) main::i#61
(byte) main::i#62
(byte) main::i#63
(byte) main::i#64
(byte) main::i#65
(byte) main::i#66
(byte) main::i#67
(byte) main::i#7
(byte) main::i#8
(byte) main::i#9
(const string) main::op = (string) "< @"
(const string) main::op1 = (string) "< @"
(const string) main::op10 = (string) "<=@"
(const string) main::op11 = (string) "<=@"
(const string) main::op12 = (string) ">=@"
(const string) main::op13 = (string) ">=@"
(const string) main::op14 = (string) ">=@"
(const string) main::op15 = (string) ">=@"
(const string) main::op16 = (string) "==@"
(const string) main::op17 = (string) "==@"
(const string) main::op18 = (string) "==@"
(const string) main::op19 = (string) "==@"
(const string) main::op2 = (string) "< @"
(const string) main::op3 = (string) "< @"
(const string) main::op4 = (string) "> @"
(const string) main::op5 = (string) "> @"
(const string) main::op6 = (string) "> @"
(const string) main::op7 = (string) "> @"
(const string) main::op8 = (string) "<=@"
(const string) main::op9 = (string) "<=@"
(byte) main::r
(byte) main::r#0
(byte) main::r#1
(byte) main::r#10
(byte) main::r#11
(byte) main::r#12
(byte) main::r#13
(byte) main::r#14
(byte) main::r#15
(byte) main::r#16
(byte) main::r#17
(byte) main::r#18
(byte) main::r#19
(byte) main::r#2
(byte) main::r#20
(byte) main::r#21
(byte) main::r#22
(byte) main::r#23
(byte) main::r#24
(byte) main::r#25
(byte) main::r#26
(byte) main::r#27
(byte) main::r#28
(byte) main::r#29
(byte) main::r#3
(byte) main::r#30
(byte) main::r#31
(byte) main::r#32
(byte) main::r#33
(byte) main::r#34
(byte) main::r#35
(byte) main::r#36
(byte) main::r#37
(byte) main::r#38
(byte) main::r#39
(byte) main::r#4
(byte) main::r#40
(byte) main::r#41
(byte) main::r#42
(byte) main::r#43
(byte) main::r#44
(byte) main::r#45
(byte) main::r#46
(byte) main::r#47
(byte) main::r#48
(byte) main::r#49
(byte) main::r#5
(byte) main::r#50
(byte) main::r#51
(byte) main::r#52
(byte) main::r#53
(byte) main::r#54
(byte) main::r#55
(byte) main::r#56
(byte) main::r#57
(byte) main::r#58
(byte) main::r#59
(byte) main::r#6
(byte) main::r#7
(byte) main::r#8
(byte) main::r#9
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(byte~) print_byte::$2
(const string) print_byte::$4 = (string) "0123456789abcdef"
(label) print_byte::@1
(label) print_byte::@2
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0
(byte) print_byte::b#1
(byte) print_byte::b#2
(byte) print_byte::b#3
(byte[]) print_byte::hextab
(byte[]) print_byte::hextab#0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0
(byte) print_char::ch#1
(byte) print_char::ch#2
(byte) print_char::ch#3
(byte) print_char::ch#4
(byte) print_char::ch#5
(void()) print_cls()
(word/signed word~) print_cls::$0
(boolean~) print_cls::$1
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#0
(byte*) print_cls::sc#1
(byte*) print_cls::sc#2
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@2
(label) print_ln::@return
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0
(byte*) print_str::str#1
(byte*) print_str::str#2
(byte*) print_str::str#3
(byte*) print_str::str#4
(void()) printu((byte) printu::a , (byte[]) printu::op , (byte) printu::b , (byte) printu::res)
(label) printu::@1
(label) printu::@2
(label) printu::@3
(label) printu::@4
(label) printu::@5
(label) printu::@6
(label) printu::@return
(byte) printu::a
(byte) printu::a#0
(byte) printu::a#1
(byte) printu::a#10
(byte) printu::a#11
(byte) printu::a#12
(byte) printu::a#13
(byte) printu::a#14
(byte) printu::a#15
(byte) printu::a#16
(byte) printu::a#17
(byte) printu::a#18
(byte) printu::a#19
(byte) printu::a#2
(byte) printu::a#20
(byte) printu::a#21
(byte) printu::a#3
(byte) printu::a#4
(byte) printu::a#5
(byte) printu::a#6
(byte) printu::a#7
(byte) printu::a#8
(byte) printu::a#9
(byte) printu::b
(byte) printu::b#0
(byte) printu::b#1
(byte) printu::b#10
(byte) printu::b#11
(byte) printu::b#12
(byte) printu::b#13
(byte) printu::b#14
(byte) printu::b#15
(byte) printu::b#16
(byte) printu::b#17
(byte) printu::b#18
(byte) printu::b#19
(byte) printu::b#2
(byte) printu::b#20
(byte) printu::b#21
(byte) printu::b#22
(byte) printu::b#23
(byte) printu::b#3
(byte) printu::b#4
(byte) printu::b#5
(byte) printu::b#6
(byte) printu::b#7
(byte) printu::b#8
(byte) printu::b#9
(byte[]) printu::op
(byte[]) printu::op#0
(byte[]) printu::op#1
(byte[]) printu::op#10
(byte[]) printu::op#11
(byte[]) printu::op#12
(byte[]) printu::op#13
(byte[]) printu::op#14
(byte[]) printu::op#15
(byte[]) printu::op#16
(byte[]) printu::op#17
(byte[]) printu::op#18
(byte[]) printu::op#19
(byte[]) printu::op#2
(byte[]) printu::op#20
(byte[]) printu::op#21
(byte[]) printu::op#22
(byte[]) printu::op#3
(byte[]) printu::op#4
(byte[]) printu::op#5
(byte[]) printu::op#6
(byte[]) printu::op#7
(byte[]) printu::op#8
(byte[]) printu::op#9
(byte) printu::res
(byte) printu::res#0
(byte) printu::res#1
(byte) printu::res#10
(byte) printu::res#11
(byte) printu::res#12
(byte) printu::res#13
(byte) printu::res#14
(byte) printu::res#15
(byte) printu::res#16
(byte) printu::res#17
(byte) printu::res#18
(byte) printu::res#19
(byte) printu::res#2
(byte) printu::res#20
(byte) printu::res#21
(byte) printu::res#22
(byte) printu::res#23
(byte) printu::res#24
(byte) printu::res#25
(byte) printu::res#3
(byte) printu::res#4
(byte) printu::res#5
(byte) printu::res#6
(byte) printu::res#7
(byte) printu::res#8
(byte) printu::res#9

OPTIMIZING CONTROL FLOW GRAPH
Inversing boolean not (boolean~) main::$3 ← (byte) main::a#2 >= (byte) main::b#0 from (boolean~) main::$2 ← (byte) main::a#2 < (byte) main::b#0
Inversing boolean not (boolean~) main::$6 ← (byte) main::a#4 >= (byte/signed byte/word/signed word) 55 from (boolean~) main::$5 ← (byte) main::a#4 < (byte/signed byte/word/signed word) 55
Inversing boolean not (boolean~) main::$9 ← (byte) main::a#6 >= *((byte[5]) main::cs#0 + (byte) main::i#2) from (boolean~) main::$8 ← (byte) main::a#6 < *((byte[5]) main::cs#0 + (byte) main::i#2)
Inversing boolean not (boolean~) main::$12 ← (byte) main::a#8 >= (byte) main::a#8 from (boolean~) main::$11 ← (byte) main::a#8 < (byte) main::a#8
Inversing boolean not (boolean~) main::$16 ← (byte) main::a#10 <= (byte) main::b#2 from (boolean~) main::$15 ← (byte) main::a#10 > (byte) main::b#2
Inversing boolean not (boolean~) main::$19 ← (byte) main::a#12 <= (byte/signed byte/word/signed word) 55 from (boolean~) main::$18 ← (byte) main::a#12 > (byte/signed byte/word/signed word) 55
Inversing boolean not (boolean~) main::$22 ← (byte) main::a#14 <= *((byte[5]) main::cs#0 + (byte) main::i#4) from (boolean~) main::$21 ← (byte) main::a#14 > *((byte[5]) main::cs#0 + (byte) main::i#4)
Inversing boolean not (boolean~) main::$25 ← (byte) main::a#16 <= (byte) main::a#16 from (boolean~) main::$24 ← (byte) main::a#16 > (byte) main::a#16
Inversing boolean not (boolean~) main::$29 ← (byte) main::a#18 > (byte) main::b#4 from (boolean~) main::$28 ← (byte) main::a#18 <= (byte) main::b#4
Inversing boolean not (boolean~) main::$32 ← (byte) main::a#20 > (byte/signed byte/word/signed word) 55 from (boolean~) main::$31 ← (byte) main::a#20 <= (byte/signed byte/word/signed word) 55
Inversing boolean not (boolean~) main::$35 ← (byte) main::a#22 > *((byte[5]) main::cs#0 + (byte) main::i#6) from (boolean~) main::$34 ← (byte) main::a#22 <= *((byte[5]) main::cs#0 + (byte) main::i#6)
Inversing boolean not (boolean~) main::$38 ← (byte) main::a#24 > (byte) main::a#24 from (boolean~) main::$37 ← (byte) main::a#24 <= (byte) main::a#24
Inversing boolean not (boolean~) main::$42 ← (byte) main::a#26 < (byte) main::b#6 from (boolean~) main::$41 ← (byte) main::a#26 >= (byte) main::b#6
Inversing boolean not (boolean~) main::$45 ← (byte) main::a#28 < (byte/signed byte/word/signed word) 55 from (boolean~) main::$44 ← (byte) main::a#28 >= (byte/signed byte/word/signed word) 55
Inversing boolean not (boolean~) main::$48 ← (byte) main::a#30 < *((byte[5]) main::cs#0 + (byte) main::i#8) from (boolean~) main::$47 ← (byte) main::a#30 >= *((byte[5]) main::cs#0 + (byte) main::i#8)
Inversing boolean not (boolean~) main::$51 ← (byte) main::a#32 < (byte) main::a#32 from (boolean~) main::$50 ← (byte) main::a#32 >= (byte) main::a#32
Inversing boolean not (boolean~) main::$55 ← (byte) main::a#34 != (byte) main::b#8 from (boolean~) main::$54 ← (byte) main::a#34 == (byte) main::b#8
Inversing boolean not (boolean~) main::$58 ← (byte) main::a#36 != (byte/signed byte/word/signed word) 55 from (boolean~) main::$57 ← (byte) main::a#36 == (byte/signed byte/word/signed word) 55
Inversing boolean not (boolean~) main::$61 ← (byte) main::a#38 != *((byte[5]) main::cs#0 + (byte) main::i#10) from (boolean~) main::$60 ← (byte) main::a#38 == *((byte[5]) main::cs#0 + (byte) main::i#10)
Inversing boolean not (boolean~) main::$64 ← (byte) main::a#40 != (byte) main::a#40 from (boolean~) main::$63 ← (byte) main::a#40 == (byte) main::a#40
Succesful SSA optimization Pass2UnaryNotSimplification
Not aliassing across scopes: print_str::str#4 print_str::str#1
Not aliassing across scopes: char_cursor#113 char_cursor#37
Not aliassing across scopes: line_cursor#20 line_cursor#21
Not aliassing across scopes: char_cursor#88 char_cursor#13
Not aliassing across scopes: print_byte::b#2 print_byte::b#0
Not aliassing across scopes: char_cursor#89 char_cursor#36
Not aliassing across scopes: char_cursor#48 char_cursor#9
Not aliassing across scopes: char_cursor#49 char_cursor#9
Not aliassing across scopes: print_char::ch#5 print_char::ch#0
Not aliassing across scopes: char_cursor#51 char_cursor#89
Not aliassing across scopes: char_cursor#136 char_cursor#112
Not aliassing across scopes: line_cursor#85 line_cursor#27
Not aliassing across scopes: printu::a#0 main::a#3
Not aliassing across scopes: printu::b#0 main::b#1
Not aliassing across scopes: printu::res#0 main::r#40
Not aliassing across scopes: char_cursor#53 char_cursor#42
Not aliassing across scopes: printu::a#1 main::a#5
Not aliassing across scopes: printu::res#1 main::r#41
Not aliassing across scopes: char_cursor#54 char_cursor#42
Not aliassing across scopes: printu::a#2 main::a#7
Not aliassing across scopes: printu::res#2 main::r#42
Not aliassing across scopes: char_cursor#55 char_cursor#42
Not aliassing across scopes: printu::a#3 main::a#9
Not aliassing across scopes: printu::b#3 main::a#9
Not aliassing across scopes: printu::res#3 main::r#43
Not aliassing across scopes: char_cursor#56 char_cursor#42
Not aliassing across scopes: line_cursor#13 line_cursor#2
Not aliassing across scopes: char_cursor#57 char_cursor#4
Not aliassing across scopes: printu::a#4 main::a#11
Not aliassing across scopes: printu::b#4 main::b#3
Not aliassing across scopes: printu::res#4 main::r#44
Not aliassing across scopes: char_cursor#58 char_cursor#42
Not aliassing across scopes: printu::a#5 main::a#13
Not aliassing across scopes: printu::res#5 main::r#45
Not aliassing across scopes: char_cursor#59 char_cursor#42
Not aliassing across scopes: printu::a#6 main::a#15
Not aliassing across scopes: printu::res#6 main::r#46
Not aliassing across scopes: char_cursor#60 char_cursor#42
Not aliassing across scopes: printu::a#7 main::a#17
Not aliassing across scopes: printu::b#7 main::a#17
Not aliassing across scopes: printu::res#7 main::r#47
Not aliassing across scopes: char_cursor#61 char_cursor#42
Not aliassing across scopes: line_cursor#14 line_cursor#2
Not aliassing across scopes: char_cursor#62 char_cursor#4
Not aliassing across scopes: printu::a#8 main::a#19
Not aliassing across scopes: printu::b#8 main::b#5
Not aliassing across scopes: printu::res#8 main::r#48
Not aliassing across scopes: char_cursor#63 char_cursor#42
Not aliassing across scopes: printu::a#9 main::a#21
Not aliassing across scopes: printu::res#9 main::r#49
Not aliassing across scopes: char_cursor#64 char_cursor#42
Not aliassing across scopes: printu::a#10 main::a#23
Not aliassing across scopes: printu::res#10 main::r#50
Not aliassing across scopes: char_cursor#65 char_cursor#42
Not aliassing across scopes: printu::a#11 main::a#25
Not aliassing across scopes: printu::b#11 main::a#25
Not aliassing across scopes: printu::res#11 main::r#51
Not aliassing across scopes: char_cursor#66 char_cursor#42
Not aliassing across scopes: line_cursor#15 line_cursor#2
Not aliassing across scopes: char_cursor#67 char_cursor#4
Not aliassing across scopes: printu::a#12 main::a#27
Not aliassing across scopes: printu::b#12 main::b#7
Not aliassing across scopes: printu::res#12 main::r#52
Not aliassing across scopes: char_cursor#68 char_cursor#42
Not aliassing across scopes: printu::a#13 main::a#29
Not aliassing across scopes: printu::res#13 main::r#53
Not aliassing across scopes: char_cursor#69 char_cursor#42
Not aliassing across scopes: printu::a#14 main::a#31
Not aliassing across scopes: printu::res#14 main::r#54
Not aliassing across scopes: char_cursor#70 char_cursor#42
Not aliassing across scopes: printu::a#15 main::a#33
Not aliassing across scopes: printu::b#15 main::a#33
Not aliassing across scopes: printu::res#15 main::r#55
Not aliassing across scopes: char_cursor#71 char_cursor#42
Not aliassing across scopes: line_cursor#16 line_cursor#2
Not aliassing across scopes: char_cursor#72 char_cursor#4
Not aliassing across scopes: printu::a#16 main::a#35
Not aliassing across scopes: printu::b#16 main::b#9
Not aliassing across scopes: printu::res#16 main::r#56
Not aliassing across scopes: char_cursor#73 char_cursor#42
Not aliassing across scopes: printu::a#17 main::a#37
Not aliassing across scopes: printu::res#17 main::r#57
Not aliassing across scopes: char_cursor#74 char_cursor#42
Not aliassing across scopes: printu::a#18 main::a#39
Not aliassing across scopes: printu::res#18 main::r#58
Not aliassing across scopes: char_cursor#75 char_cursor#42
Not aliassing across scopes: printu::a#19 main::a#41
Not aliassing across scopes: printu::b#19 main::a#41
Not aliassing across scopes: printu::res#19 main::r#59
Not aliassing across scopes: char_cursor#76 char_cursor#42
Not aliassing across scopes: line_cursor#17 line_cursor#2
Not aliassing across scopes: char_cursor#77 char_cursor#4
Not aliassing identity: char_cursor#111 char_cursor#111
Not aliassing identity: line_cursor#26 line_cursor#26
Not aliassing across scopes: char_cursor#90 char_cursor#99
Not aliassing across scopes: printu::a#21 printu::a#8
Not aliassing across scopes: printu::op#22 printu::op#8
Not aliassing across scopes: printu::b#23 printu::b#8
Not aliassing across scopes: printu::res#25 printu::res#8
Not aliassing across scopes: char_cursor#79 char_cursor#9
Not aliassing across scopes: print_byte::b#0 printu::a#20
Not aliassing across scopes: char_cursor#80 char_cursor#7
Not aliassing across scopes: print_str::str#1 printu::op#20
Not aliassing across scopes: char_cursor#81 char_cursor#2
Not aliassing across scopes: print_byte::b#1 printu::b#20
Not aliassing across scopes: char_cursor#82 char_cursor#7
Not aliassing across scopes: char_cursor#83 char_cursor#9
Not aliassing across scopes: print_char::ch#4 printu::res#20
Not aliassing across scopes: char_cursor#84 char_cursor#9
Not aliassing across scopes: char_cursor#86 char_cursor#35
Not aliassing across scopes: line_cursor#19 line_cursor#8
Alias (byte*) char_cursor#0 = (byte*) line_cursor#0 (byte*) char_cursor#112 (byte*) line_cursor#27 
Alias (byte*) print_str::str#2 = (byte*) print_str::str#3 
Alias (byte*) char_cursor#2 = (byte*) char_cursor#44 (byte*) char_cursor#87 (byte*) char_cursor#45 
Alias (byte*) line_cursor#1 = (byte*~) print_ln::$0 (byte*) line_cursor#11 (byte*) char_cursor#3 (byte*) line_cursor#12 (byte*) char_cursor#47 (byte*) line_cursor#2 (byte*) char_cursor#4 
Alias (byte) print_byte::b#2 = (byte) print_byte::b#3 
Alias (byte*) char_cursor#48 = (byte*) char_cursor#5 
Alias (byte*) char_cursor#49 = (byte*) char_cursor#6 (byte*) char_cursor#50 (byte*) char_cursor#7 
Alias (byte*) char_cursor#52 = (byte*) char_cursor#8 (byte*) char_cursor#9 
Alias (byte*) char_cursor#135 = (byte*) char_cursor#136 
Alias (byte*) line_cursor#84 = (byte*) line_cursor#85 
Alias (byte) main::b#0 = (byte/signed byte/word/signed word~) main::$1 (byte) main::b#10 
Alias (byte) main::a#3 = (byte) main::a#4 (byte) main::a#44 
Alias (byte) main::i#24 = (byte) main::i#25 (byte) main::i#35 
Alias (byte*) line_cursor#63 = (byte*) line_cursor#64 (byte*) line_cursor#73 
Alias (byte) main::b#1 = (byte) main::b#48 (byte) main::b#47 
Alias (byte*) char_cursor#10 = (byte*) char_cursor#53 (byte*) char_cursor#116 
Alias (byte) main::a#2 = (byte) main::a#43 
Alias (byte*) char_cursor#114 = (byte*) char_cursor#115 
Alias (byte) main::i#42 = (byte) main::i#43 
Alias (byte*) line_cursor#78 = (byte*) line_cursor#79 
Alias (byte) main::a#45 = (byte) main::a#6 (byte) main::a#5 
Alias (byte) main::i#13 = (byte) main::i#2 (byte) main::i#14 
Alias (byte*) line_cursor#48 = (byte*) line_cursor#49 (byte*) line_cursor#58 
Alias (byte) main::b#35 = (byte) main::b#36 (byte) main::b#43 
Alias (byte*) char_cursor#11 = (byte*) char_cursor#54 (byte*) char_cursor#117 
Alias (byte) main::a#46 = (byte) main::a#8 (byte) main::a#7 
Alias (byte*) line_cursor#33 = (byte*) line_cursor#34 (byte*) line_cursor#43 
Alias (byte) main::b#23 = (byte) main::b#24 (byte) main::b#31 
Alias (byte) main::i#3 = (byte) main::i#61 (byte) main::i#60 
Alias (byte*) char_cursor#118 = (byte*) char_cursor#12 (byte*) char_cursor#55 
Alias (byte*) line_cursor#21 = (byte*) line_cursor#28 
Alias (byte) main::a#10 = (byte) main::a#47 (byte) main::a#9 (byte) main::a#48 
Alias (byte) main::b#11 = (byte) main::b#19 (byte) main::b#2 (byte) main::b#12 
Alias (byte) main::i#44 = (byte) main::i#52 (byte) main::i#56 (byte) main::i#45 
Alias (byte*) char_cursor#13 = (byte*) char_cursor#56 
Alias (byte*) line_cursor#13 = (byte*) line_cursor#3 (byte*) line_cursor#80 
Alias (byte*) char_cursor#119 = (byte*) char_cursor#14 (byte*) char_cursor#57 
Alias (byte) main::a#11 = (byte) main::a#12 (byte) main::a#49 
Alias (byte) main::i#26 = (byte) main::i#27 (byte) main::i#36 
Alias (byte*) line_cursor#65 = (byte*) line_cursor#66 (byte*) line_cursor#74 
Alias (byte) main::b#3 = (byte) main::b#50 (byte) main::b#49 
Alias (byte*) char_cursor#120 = (byte*) char_cursor#15 (byte*) char_cursor#58 
Alias (byte) main::a#13 = (byte) main::a#14 (byte) main::a#50 
Alias (byte) main::i#15 = (byte) main::i#4 (byte) main::i#16 
Alias (byte*) line_cursor#50 = (byte*) line_cursor#51 (byte*) line_cursor#59 
Alias (byte) main::b#37 = (byte) main::b#38 (byte) main::b#44 
Alias (byte*) char_cursor#121 = (byte*) char_cursor#16 (byte*) char_cursor#59 
Alias (byte) main::a#15 = (byte) main::a#16 (byte) main::a#51 
Alias (byte*) line_cursor#35 = (byte*) line_cursor#36 (byte*) line_cursor#44 
Alias (byte) main::b#25 = (byte) main::b#26 (byte) main::b#32 
Alias (byte) main::i#5 = (byte) main::i#63 (byte) main::i#62 
Alias (byte*) char_cursor#122 = (byte*) char_cursor#17 (byte*) char_cursor#60 
Alias (byte*) line_cursor#22 = (byte*) line_cursor#29 
Alias (byte) main::a#17 = (byte) main::a#52 (byte) main::a#18 (byte) main::a#53 
Alias (byte) main::b#13 = (byte) main::b#20 (byte) main::b#4 (byte) main::b#14 
Alias (byte) main::i#46 = (byte) main::i#53 (byte) main::i#57 (byte) main::i#47 
Alias (byte*) char_cursor#18 = (byte*) char_cursor#61 
Alias (byte*) line_cursor#14 = (byte*) line_cursor#4 (byte*) line_cursor#81 
Alias (byte*) char_cursor#123 = (byte*) char_cursor#19 (byte*) char_cursor#62 
Alias (byte) main::a#19 = (byte) main::a#20 (byte) main::a#54 
Alias (byte) main::i#28 = (byte) main::i#29 (byte) main::i#37 
Alias (byte*) line_cursor#67 = (byte*) line_cursor#68 (byte*) line_cursor#75 
Alias (byte) main::b#5 = (byte) main::b#52 (byte) main::b#51 
Alias (byte*) char_cursor#124 = (byte*) char_cursor#20 (byte*) char_cursor#63 
Alias (byte) main::a#21 = (byte) main::a#22 (byte) main::a#55 
Alias (byte) main::i#17 = (byte) main::i#6 (byte) main::i#18 
Alias (byte*) line_cursor#52 = (byte*) line_cursor#53 (byte*) line_cursor#60 
Alias (byte) main::b#39 = (byte) main::b#40 (byte) main::b#45 
Alias (byte*) char_cursor#125 = (byte*) char_cursor#21 (byte*) char_cursor#64 
Alias (byte) main::a#23 = (byte) main::a#24 (byte) main::a#56 
Alias (byte*) line_cursor#37 = (byte*) line_cursor#38 (byte*) line_cursor#45 
Alias (byte) main::b#27 = (byte) main::b#28 (byte) main::b#33 
Alias (byte) main::i#64 = (byte) main::i#65 (byte) main::i#7 
Alias (byte*) char_cursor#126 = (byte*) char_cursor#22 (byte*) char_cursor#65 
Alias (byte*) line_cursor#23 = (byte*) line_cursor#30 
Alias (byte) main::a#25 = (byte) main::a#57 (byte) main::a#26 (byte) main::a#58 
Alias (byte) main::b#15 = (byte) main::b#21 (byte) main::b#6 (byte) main::b#16 
Alias (byte) main::i#48 = (byte) main::i#54 (byte) main::i#58 (byte) main::i#49 
Alias (byte*) char_cursor#23 = (byte*) char_cursor#66 
Alias (byte*) line_cursor#15 = (byte*) line_cursor#5 (byte*) line_cursor#82 
Alias (byte*) char_cursor#127 = (byte*) char_cursor#24 (byte*) char_cursor#67 
Alias (byte) main::a#27 = (byte) main::a#28 (byte) main::a#59 
Alias (byte) main::i#30 = (byte) main::i#31 (byte) main::i#38 
Alias (byte*) line_cursor#69 = (byte*) line_cursor#70 (byte*) line_cursor#76 
Alias (byte) main::b#53 = (byte) main::b#54 (byte) main::b#7 
Alias (byte*) char_cursor#128 = (byte*) char_cursor#25 (byte*) char_cursor#68 
Alias (byte) main::a#29 = (byte) main::a#30 (byte) main::a#60 
Alias (byte) main::i#19 = (byte) main::i#8 (byte) main::i#20 
Alias (byte*) line_cursor#54 = (byte*) line_cursor#55 (byte*) line_cursor#61 
Alias (byte) main::b#41 = (byte) main::b#42 (byte) main::b#46 
Alias (byte*) char_cursor#129 = (byte*) char_cursor#26 (byte*) char_cursor#69 
Alias (byte) main::a#31 = (byte) main::a#32 (byte) main::a#61 
Alias (byte*) line_cursor#39 = (byte*) line_cursor#40 (byte*) line_cursor#46 
Alias (byte) main::b#29 = (byte) main::b#30 (byte) main::b#34 
Alias (byte) main::i#66 = (byte) main::i#67 (byte) main::i#9 
Alias (byte*) char_cursor#130 = (byte*) char_cursor#27 (byte*) char_cursor#70 
Alias (byte*) line_cursor#24 = (byte*) line_cursor#31 
Alias (byte) main::a#33 = (byte) main::a#62 (byte) main::a#34 (byte) main::a#63 
Alias (byte) main::b#17 = (byte) main::b#22 (byte) main::b#8 (byte) main::b#18 
Alias (byte) main::i#50 = (byte) main::i#55 (byte) main::i#59 (byte) main::i#51 
Alias (byte*) char_cursor#28 = (byte*) char_cursor#71 
Alias (byte*) line_cursor#16 = (byte*) line_cursor#6 (byte*) line_cursor#83 
Alias (byte*) char_cursor#131 = (byte*) char_cursor#29 (byte*) char_cursor#72 
Alias (byte) main::a#35 = (byte) main::a#36 (byte) main::a#64 
Alias (byte) main::i#32 = (byte) main::i#33 (byte) main::i#39 
Alias (byte*) line_cursor#71 = (byte*) line_cursor#72 (byte*) line_cursor#77 
Alias (byte*) char_cursor#132 = (byte*) char_cursor#30 (byte*) char_cursor#73 
Alias (byte) main::a#37 = (byte) main::a#38 (byte) main::a#65 
Alias (byte) main::i#10 = (byte) main::i#21 (byte) main::i#22 
Alias (byte*) line_cursor#56 = (byte*) line_cursor#57 (byte*) line_cursor#62 
Alias (byte*) char_cursor#133 = (byte*) char_cursor#31 (byte*) char_cursor#74 
Alias (byte) main::a#39 = (byte) main::a#40 (byte) main::a#66 
Alias (byte*) line_cursor#41 = (byte*) line_cursor#42 (byte*) line_cursor#47 
Alias (byte) main::i#11 = (byte) main::i#41 (byte) main::i#40 
Alias (byte*) char_cursor#134 = (byte*) char_cursor#32 (byte*) char_cursor#75 
Alias (byte*) line_cursor#25 = (byte*) line_cursor#32 
Alias (byte) main::a#41 = (byte) main::a#67 (byte) main::a#42 
Alias (byte) main::i#12 = (byte) main::i#23 (byte) main::i#34 
Alias (byte*) char_cursor#33 = (byte*) char_cursor#76 
Alias (byte*) line_cursor#17 = (byte*) line_cursor#7 
Alias (byte*) char_cursor#34 = (byte*) char_cursor#77 
Alias (byte) main::a#1 = (byte/word~) main::$67 
Alias (byte*) char_cursor#111 = (byte*) char_cursor#78 (byte*) char_cursor#35 
Alias (byte*) line_cursor#18 = (byte*) line_cursor#26 (byte*) line_cursor#8 
Alias (byte) printu::a#20 = (byte) printu::a#21 
Alias (byte[]) printu::op#20 = (byte[]) printu::op#21 (byte[]) printu::op#22 
Alias (byte) printu::b#20 = (byte) printu::b#22 (byte) printu::b#23 (byte) printu::b#21 
Alias (byte) printu::res#20 = (byte) printu::res#24 (byte) printu::res#25 (byte) printu::res#23 (byte) printu::res#22 (byte) printu::res#21 
Alias (byte*) char_cursor#36 = (byte*) char_cursor#79 
Alias (byte*) char_cursor#37 = (byte*) char_cursor#80 
Alias (byte*) char_cursor#38 = (byte*) char_cursor#81 
Alias (byte*) char_cursor#39 = (byte*) char_cursor#82 
Alias (byte*) char_cursor#40 = (byte*) char_cursor#83 
Alias (byte*) char_cursor#41 = (byte*) char_cursor#84 (byte*) char_cursor#85 (byte*) char_cursor#42 
Alias (byte*) char_cursor#43 = (byte*) char_cursor#86 
Alias (byte*) line_cursor#19 = (byte*) line_cursor#9 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: print_str::str#4 print_str::str#1
Not aliassing across scopes: char_cursor#113 char_cursor#37
Not aliassing across scopes: line_cursor#20 line_cursor#21
Not aliassing across scopes: char_cursor#88 char_cursor#13
Not aliassing across scopes: print_byte::b#2 print_byte::b#0
Not aliassing across scopes: char_cursor#89 char_cursor#36
Not aliassing across scopes: char_cursor#48 char_cursor#52
Not aliassing across scopes: char_cursor#49 char_cursor#52
Not aliassing across scopes: print_char::ch#5 print_char::ch#0
Not aliassing across scopes: char_cursor#51 char_cursor#89
Not aliassing across scopes: char_cursor#135 char_cursor#0
Not aliassing across scopes: line_cursor#84 char_cursor#0
Not aliassing across scopes: printu::a#0 main::a#3
Not aliassing across scopes: printu::b#0 main::b#1
Not aliassing across scopes: printu::res#0 main::r#40
Not aliassing across scopes: char_cursor#10 char_cursor#41
Not aliassing across scopes: printu::a#1 main::a#45
Not aliassing across scopes: printu::res#1 main::r#41
Not aliassing across scopes: char_cursor#11 char_cursor#41
Not aliassing across scopes: printu::a#2 main::a#46
Not aliassing across scopes: printu::res#2 main::r#42
Not aliassing across scopes: char_cursor#118 char_cursor#41
Not aliassing across scopes: printu::a#3 main::a#10
Not aliassing across scopes: printu::b#3 main::a#10
Not aliassing across scopes: printu::res#3 main::r#43
Not aliassing across scopes: char_cursor#13 char_cursor#41
Not aliassing across scopes: line_cursor#13 line_cursor#1
Not aliassing across scopes: char_cursor#119 line_cursor#1
Not aliassing across scopes: printu::a#4 main::a#11
Not aliassing across scopes: printu::b#4 main::b#3
Not aliassing across scopes: printu::res#4 main::r#44
Not aliassing across scopes: char_cursor#120 char_cursor#41
Not aliassing across scopes: printu::a#5 main::a#13
Not aliassing across scopes: printu::res#5 main::r#45
Not aliassing across scopes: char_cursor#121 char_cursor#41
Not aliassing across scopes: printu::a#6 main::a#15
Not aliassing across scopes: printu::res#6 main::r#46
Not aliassing across scopes: char_cursor#122 char_cursor#41
Not aliassing across scopes: printu::a#7 main::a#17
Not aliassing across scopes: printu::b#7 main::a#17
Not aliassing across scopes: printu::res#7 main::r#47
Not aliassing across scopes: char_cursor#18 char_cursor#41
Not aliassing across scopes: line_cursor#14 line_cursor#1
Not aliassing across scopes: char_cursor#123 line_cursor#1
Not aliassing across scopes: printu::a#8 main::a#19
Not aliassing across scopes: printu::b#8 main::b#5
Not aliassing across scopes: printu::res#8 main::r#48
Not aliassing across scopes: char_cursor#124 char_cursor#41
Not aliassing across scopes: printu::a#9 main::a#21
Not aliassing across scopes: printu::res#9 main::r#49
Not aliassing across scopes: char_cursor#125 char_cursor#41
Not aliassing across scopes: printu::a#10 main::a#23
Not aliassing across scopes: printu::res#10 main::r#50
Not aliassing across scopes: char_cursor#126 char_cursor#41
Not aliassing across scopes: printu::a#11 main::a#25
Not aliassing across scopes: printu::b#11 main::a#25
Not aliassing across scopes: printu::res#11 main::r#51
Not aliassing across scopes: char_cursor#23 char_cursor#41
Not aliassing across scopes: line_cursor#15 line_cursor#1
Not aliassing across scopes: char_cursor#127 line_cursor#1
Not aliassing across scopes: printu::a#12 main::a#27
Not aliassing across scopes: printu::b#12 main::b#53
Not aliassing across scopes: printu::res#12 main::r#52
Not aliassing across scopes: char_cursor#128 char_cursor#41
Not aliassing across scopes: printu::a#13 main::a#29
Not aliassing across scopes: printu::res#13 main::r#53
Not aliassing across scopes: char_cursor#129 char_cursor#41
Not aliassing across scopes: printu::a#14 main::a#31
Not aliassing across scopes: printu::res#14 main::r#54
Not aliassing across scopes: char_cursor#130 char_cursor#41
Not aliassing across scopes: printu::a#15 main::a#33
Not aliassing across scopes: printu::b#15 main::a#33
Not aliassing across scopes: printu::res#15 main::r#55
Not aliassing across scopes: char_cursor#28 char_cursor#41
Not aliassing across scopes: line_cursor#16 line_cursor#1
Not aliassing across scopes: char_cursor#131 line_cursor#1
Not aliassing across scopes: printu::a#16 main::a#35
Not aliassing across scopes: printu::b#16 main::b#9
Not aliassing across scopes: printu::res#16 main::r#56
Not aliassing across scopes: char_cursor#132 char_cursor#41
Not aliassing across scopes: printu::a#17 main::a#37
Not aliassing across scopes: printu::res#17 main::r#57
Not aliassing across scopes: char_cursor#133 char_cursor#41
Not aliassing across scopes: printu::a#18 main::a#39
Not aliassing across scopes: printu::res#18 main::r#58
Not aliassing across scopes: char_cursor#134 char_cursor#41
Not aliassing across scopes: printu::a#19 main::a#41
Not aliassing across scopes: printu::b#19 main::a#41
Not aliassing across scopes: printu::res#19 main::r#59
Not aliassing across scopes: char_cursor#33 char_cursor#41
Not aliassing across scopes: line_cursor#17 line_cursor#1
Not aliassing across scopes: char_cursor#34 line_cursor#1
Not aliassing identity: char_cursor#111 char_cursor#111
Not aliassing identity: line_cursor#18 line_cursor#18
Not aliassing across scopes: char_cursor#90 char_cursor#99
Not aliassing across scopes: printu::a#20 printu::a#8
Not aliassing across scopes: printu::op#20 printu::op#8
Not aliassing across scopes: printu::b#20 printu::b#8
Not aliassing across scopes: printu::res#20 printu::res#8
Not aliassing across scopes: char_cursor#36 char_cursor#52
Not aliassing across scopes: print_byte::b#0 printu::a#20
Not aliassing across scopes: char_cursor#37 char_cursor#49
Not aliassing across scopes: print_str::str#1 printu::op#20
Not aliassing across scopes: char_cursor#38 char_cursor#2
Not aliassing across scopes: print_byte::b#1 printu::b#20
Not aliassing across scopes: char_cursor#39 char_cursor#49
Not aliassing across scopes: char_cursor#40 char_cursor#52
Not aliassing across scopes: print_char::ch#4 printu::res#20
Not aliassing across scopes: char_cursor#41 char_cursor#52
Not aliassing across scopes: char_cursor#43 char_cursor#111
Not aliassing across scopes: line_cursor#19 line_cursor#18
Alias (byte) main::a#10 = (byte) main::a#3 (byte) main::a#2 (byte) main::a#45 (byte) main::a#46 (byte) main::a#11 (byte) main::a#13 (byte) main::a#15 (byte) main::a#17 (byte) main::a#19 (byte) main::a#21 (byte) main::a#23 (byte) main::a#25 (byte) main::a#27 (byte) main::a#29 (byte) main::a#31 (byte) main::a#33 (byte) main::a#35 (byte) main::a#37 (byte) main::a#39 (byte) main::a#41 
Alias (byte) main::b#0 = (byte) main::b#1 (byte) main::b#35 (byte) main::b#23 (byte) main::b#11 (byte) main::b#3 (byte) main::b#37 (byte) main::b#25 (byte) main::b#13 (byte) main::b#5 (byte) main::b#39 (byte) main::b#27 (byte) main::b#15 (byte) main::b#53 (byte) main::b#41 (byte) main::b#29 (byte) main::b#17 (byte) main::b#9 
Alias (byte*) char_cursor#114 = (byte*) char_cursor#91 
Alias (byte) main::i#10 = (byte) main::i#24 (byte) main::i#42 (byte) main::i#13 (byte) main::i#3 (byte) main::i#44 (byte) main::i#26 (byte) main::i#15 (byte) main::i#5 (byte) main::i#46 (byte) main::i#28 (byte) main::i#17 (byte) main::i#64 (byte) main::i#48 (byte) main::i#30 (byte) main::i#19 (byte) main::i#66 (byte) main::i#50 (byte) main::i#32 (byte) main::i#11 (byte) main::i#12 
Alias (byte*) line_cursor#21 = (byte*) line_cursor#63 (byte*) line_cursor#78 (byte*) line_cursor#48 (byte*) line_cursor#33 
Alias (byte*) char_cursor#10 = (byte*) char_cursor#92 
Alias (byte*) char_cursor#11 = (byte*) char_cursor#93 
Alias (byte*) char_cursor#118 = (byte*) char_cursor#94 
Alias (byte*) char_cursor#119 = (byte*) char_cursor#95 
Alias (byte*) line_cursor#13 = (byte*) line_cursor#65 (byte*) line_cursor#50 (byte*) line_cursor#35 (byte*) line_cursor#22 
Alias (byte*) char_cursor#120 = (byte*) char_cursor#96 
Alias (byte*) char_cursor#121 = (byte*) char_cursor#97 
Alias (byte*) char_cursor#122 = (byte*) char_cursor#98 
Alias (byte*) char_cursor#123 = (byte*) char_cursor#99 
Alias (byte*) line_cursor#14 = (byte*) line_cursor#67 (byte*) line_cursor#52 (byte*) line_cursor#37 (byte*) line_cursor#23 
Alias (byte*) char_cursor#100 = (byte*) char_cursor#124 
Alias (byte*) char_cursor#101 = (byte*) char_cursor#125 
Alias (byte*) char_cursor#102 = (byte*) char_cursor#126 
Alias (byte*) char_cursor#103 = (byte*) char_cursor#127 
Alias (byte*) line_cursor#15 = (byte*) line_cursor#69 (byte*) line_cursor#54 (byte*) line_cursor#39 (byte*) line_cursor#24 
Alias (byte*) char_cursor#104 = (byte*) char_cursor#128 
Alias (byte*) char_cursor#105 = (byte*) char_cursor#129 
Alias (byte*) char_cursor#106 = (byte*) char_cursor#130 
Alias (byte*) char_cursor#107 = (byte*) char_cursor#131 
Alias (byte*) line_cursor#16 = (byte*) line_cursor#71 (byte*) line_cursor#56 (byte*) line_cursor#41 (byte*) line_cursor#25 
Alias (byte*) char_cursor#108 = (byte*) char_cursor#132 
Alias (byte*) char_cursor#109 = (byte*) char_cursor#133 
Alias (byte*) char_cursor#110 = (byte*) char_cursor#134 
Succesful SSA optimization Pass2AliasElimination
Not aliassing across scopes: print_str::str#4 print_str::str#1
Not aliassing across scopes: char_cursor#113 char_cursor#37
Not aliassing across scopes: line_cursor#20 line_cursor#21
Not aliassing across scopes: char_cursor#88 char_cursor#13
Not aliassing across scopes: print_byte::b#2 print_byte::b#0
Not aliassing across scopes: char_cursor#89 char_cursor#36
Not aliassing across scopes: char_cursor#48 char_cursor#52
Not aliassing across scopes: char_cursor#49 char_cursor#52
Not aliassing across scopes: print_char::ch#5 print_char::ch#0
Not aliassing across scopes: char_cursor#51 char_cursor#89
Not aliassing across scopes: char_cursor#135 char_cursor#0
Not aliassing across scopes: line_cursor#84 char_cursor#0
Not aliassing across scopes: printu::a#0 main::a#10
Not aliassing across scopes: printu::b#0 main::b#0
Not aliassing across scopes: printu::res#0 main::r#40
Not aliassing across scopes: char_cursor#10 char_cursor#41
Not aliassing across scopes: printu::a#1 main::a#10
Not aliassing across scopes: printu::res#1 main::r#41
Not aliassing across scopes: char_cursor#11 char_cursor#41
Not aliassing across scopes: printu::a#2 main::a#10
Not aliassing across scopes: printu::res#2 main::r#42
Not aliassing across scopes: char_cursor#118 char_cursor#41
Not aliassing across scopes: printu::a#3 main::a#10
Not aliassing across scopes: printu::b#3 main::a#10
Not aliassing across scopes: printu::res#3 main::r#43
Not aliassing across scopes: char_cursor#13 char_cursor#41
Not aliassing across scopes: line_cursor#13 line_cursor#1
Not aliassing across scopes: char_cursor#119 line_cursor#1
Not aliassing across scopes: printu::a#4 main::a#10
Not aliassing across scopes: printu::b#4 main::b#0
Not aliassing across scopes: printu::res#4 main::r#44
Not aliassing across scopes: char_cursor#120 char_cursor#41
Not aliassing across scopes: printu::a#5 main::a#10
Not aliassing across scopes: printu::res#5 main::r#45
Not aliassing across scopes: char_cursor#121 char_cursor#41
Not aliassing across scopes: printu::a#6 main::a#10
Not aliassing across scopes: printu::res#6 main::r#46
Not aliassing across scopes: char_cursor#122 char_cursor#41
Not aliassing across scopes: printu::a#7 main::a#10
Not aliassing across scopes: printu::b#7 main::a#10
Not aliassing across scopes: printu::res#7 main::r#47
Not aliassing across scopes: char_cursor#18 char_cursor#41
Not aliassing across scopes: line_cursor#14 line_cursor#1
Not aliassing across scopes: char_cursor#123 line_cursor#1
Not aliassing across scopes: printu::a#8 main::a#10
Not aliassing across scopes: printu::b#8 main::b#0
Not aliassing across scopes: printu::res#8 main::r#48
Not aliassing across scopes: char_cursor#100 char_cursor#41
Not aliassing across scopes: printu::a#9 main::a#10
Not aliassing across scopes: printu::res#9 main::r#49
Not aliassing across scopes: char_cursor#101 char_cursor#41
Not aliassing across scopes: printu::a#10 main::a#10
Not aliassing across scopes: printu::res#10 main::r#50
Not aliassing across scopes: char_cursor#102 char_cursor#41
Not aliassing across scopes: printu::a#11 main::a#10
Not aliassing across scopes: printu::b#11 main::a#10
Not aliassing across scopes: printu::res#11 main::r#51
Not aliassing across scopes: char_cursor#23 char_cursor#41
Not aliassing across scopes: line_cursor#15 line_cursor#1
Not aliassing across scopes: char_cursor#103 line_cursor#1
Not aliassing across scopes: printu::a#12 main::a#10
Not aliassing across scopes: printu::b#12 main::b#0
Not aliassing across scopes: printu::res#12 main::r#52
Not aliassing across scopes: char_cursor#104 char_cursor#41
Not aliassing across scopes: printu::a#13 main::a#10
Not aliassing across scopes: printu::res#13 main::r#53
Not aliassing across scopes: char_cursor#105 char_cursor#41
Not aliassing across scopes: printu::a#14 main::a#10
Not aliassing across scopes: printu::res#14 main::r#54
Not aliassing across scopes: char_cursor#106 char_cursor#41
Not aliassing across scopes: printu::a#15 main::a#10
Not aliassing across scopes: printu::b#15 main::a#10
Not aliassing across scopes: printu::res#15 main::r#55
Not aliassing across scopes: char_cursor#28 char_cursor#41
Not aliassing across scopes: line_cursor#16 line_cursor#1
Not aliassing across scopes: char_cursor#107 line_cursor#1
Not aliassing across scopes: printu::a#16 main::a#10
Not aliassing across scopes: printu::b#16 main::b#0
Not aliassing across scopes: printu::res#16 main::r#56
Not aliassing across scopes: char_cursor#108 char_cursor#41
Not aliassing across scopes: printu::a#17 main::a#10
Not aliassing across scopes: printu::res#17 main::r#57
Not aliassing across scopes: char_cursor#109 char_cursor#41
Not aliassing across scopes: printu::a#18 main::a#10
Not aliassing across scopes: printu::res#18 main::r#58
Not aliassing across scopes: char_cursor#110 char_cursor#41
Not aliassing across scopes: printu::a#19 main::a#10
Not aliassing across scopes: printu::b#19 main::a#10
Not aliassing across scopes: printu::res#19 main::r#59
Not aliassing across scopes: char_cursor#33 char_cursor#41
Not aliassing across scopes: line_cursor#17 line_cursor#1
Not aliassing across scopes: char_cursor#34 line_cursor#1
Not aliassing identity: char_cursor#111 char_cursor#111
Not aliassing identity: line_cursor#18 line_cursor#18
Not aliassing across scopes: char_cursor#90 char_cursor#123
Not aliassing across scopes: printu::a#20 printu::a#8
Not aliassing across scopes: printu::op#20 printu::op#8
Not aliassing across scopes: printu::b#20 printu::b#8
Not aliassing across scopes: printu::res#20 printu::res#8
Not aliassing across scopes: char_cursor#36 char_cursor#52
Not aliassing across scopes: print_byte::b#0 printu::a#20
Not aliassing across scopes: char_cursor#37 char_cursor#49
Not aliassing across scopes: print_str::str#1 printu::op#20
Not aliassing across scopes: char_cursor#38 char_cursor#2
Not aliassing across scopes: print_byte::b#1 printu::b#20
Not aliassing across scopes: char_cursor#39 char_cursor#49
Not aliassing across scopes: char_cursor#40 char_cursor#52
Not aliassing across scopes: print_char::ch#4 printu::res#20
Not aliassing across scopes: char_cursor#41 char_cursor#52
Not aliassing across scopes: char_cursor#43 char_cursor#111
Not aliassing across scopes: line_cursor#19 line_cursor#18
Self Phi Eliminated (byte*) char_cursor#46
Self Phi Eliminated (byte*) char_cursor#111
Self Phi Eliminated (byte*) line_cursor#18
Succesful SSA optimization Pass2SelfPhiElimination
Redundant Phi (byte*) print_str::str#4 (byte*) print_str::str#1
Redundant Phi (byte*) char_cursor#113 (byte*) char_cursor#37
Redundant Phi (byte*) char_cursor#46 (byte*) char_cursor#88
Redundant Phi (byte*) char_cursor#48 (byte*) char_cursor#52
Redundant Phi (byte*) char_cursor#49 (byte*) char_cursor#52
Redundant Phi (byte*) char_cursor#135 (byte*) char_cursor#0
Redundant Phi (byte*) line_cursor#84 (byte*) char_cursor#0
Redundant Phi (byte*) char_cursor#10 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#11 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#118 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#13 (byte*) char_cursor#41
Redundant Phi (byte*) line_cursor#13 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#119 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#120 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#121 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#122 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#18 (byte*) char_cursor#41
Redundant Phi (byte*) line_cursor#14 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#123 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#100 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#101 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#102 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#23 (byte*) char_cursor#41
Redundant Phi (byte*) line_cursor#15 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#103 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#104 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#105 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#106 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#28 (byte*) char_cursor#41
Redundant Phi (byte*) line_cursor#16 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#107 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#108 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#109 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#110 (byte*) char_cursor#41
Redundant Phi (byte*) char_cursor#33 (byte*) char_cursor#41
Redundant Phi (byte*) line_cursor#17 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#34 (byte*) line_cursor#1
Redundant Phi (byte*) char_cursor#111 (byte*) char_cursor#34
Redundant Phi (byte*) line_cursor#18 (byte*) line_cursor#17
Redundant Phi (byte*) char_cursor#36 (byte*) char_cursor#52
Redundant Phi (byte*) char_cursor#37 (byte*) char_cursor#49
Redundant Phi (byte*) char_cursor#38 (byte*) char_cursor#2
Redundant Phi (byte*) char_cursor#39 (byte*) char_cursor#49
Redundant Phi (byte*) char_cursor#40 (byte*) char_cursor#52
Redundant Phi (byte*) char_cursor#41 (byte*) char_cursor#52
Redundant Phi (byte*) char_cursor#43 (byte*) char_cursor#111
Redundant Phi (byte*) line_cursor#19 (byte*) line_cursor#18
Succesful SSA optimization Pass2RedundantPhiElimination
Redundant Phi (byte*) char_cursor#88 (byte*) char_cursor#52
Succesful SSA optimization Pass2RedundantPhiElimination
Simple Condition (boolean~) print_str::$0 if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2
Simple Condition (boolean~) print_ln::$1 if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1
Simple Condition (boolean~) print_cls::$1 if((byte*) print_cls::sc#1!=(word/signed word~) print_cls::$0) goto print_cls::@1
Simple Condition (boolean~) main::$3 if((byte) main::a#10>=(byte) main::b#0) goto main::@2
Simple Condition (boolean~) main::$6 if((byte) main::a#10>=(byte/signed byte/word/signed word) 55) goto main::@3
Simple Condition (boolean~) main::$9 if((byte) main::a#10>=*((byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4
Simple Condition (boolean~) main::$12 if((byte) main::a#10>=(byte) main::a#10) goto main::@5
Simple Condition (boolean~) main::$16 if((byte) main::a#10<=(byte) main::b#0) goto main::@6
Simple Condition (boolean~) main::$19 if((byte) main::a#10<=(byte/signed byte/word/signed word) 55) goto main::@7
Simple Condition (boolean~) main::$22 if((byte) main::a#10<=*((byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8
Simple Condition (boolean~) main::$25 if((byte) main::a#10<=(byte) main::a#10) goto main::@9
Simple Condition (boolean~) main::$29 if((byte) main::a#10>(byte) main::b#0) goto main::@10
Simple Condition (boolean~) main::$32 if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11
Simple Condition (boolean~) main::$35 if((byte) main::a#10>*((byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12
Simple Condition (boolean~) main::$38 if((byte) main::a#10>(byte) main::a#10) goto main::@13
Simple Condition (boolean~) main::$42 if((byte) main::a#10<(byte) main::b#0) goto main::@14
Simple Condition (boolean~) main::$45 if((byte) main::a#10<(byte/signed byte/word/signed word) 55) goto main::@15
Simple Condition (boolean~) main::$48 if((byte) main::a#10<*((byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16
Simple Condition (boolean~) main::$51 if((byte) main::a#10<(byte) main::a#10) goto main::@17
Simple Condition (boolean~) main::$55 if((byte) main::a#10!=(byte) main::b#0) goto main::@18
Simple Condition (boolean~) main::$58 if((byte) main::a#10!=(byte/signed byte/word/signed word) 55) goto main::@19
Simple Condition (boolean~) main::$61 if((byte) main::a#10!=*((byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20
Simple Condition (boolean~) main::$64 if((byte) main::a#10!=(byte) main::a#10) goto main::@21
Simple Condition (boolean~) main::$68 if((byte) main::i#1!=(byte/signed byte/word/signed word) 5) goto main::@1
Succesful SSA optimization Pass2ConditionalJumpSimplification
Constant (const byte*) char_cursor#0 = ((byte*))1024
Constant (const string) print_byte::hextab#0 = print_byte::$4
Constant (const byte*) print_cls::sc#0 = ((byte*))1024
Constant (const word/signed word) print_cls::$0 = 1024+1000
Constant (const byte) main::a#0 = 7
Constant (const byte) main::i#0 = 0
Constant (const byte[5]) main::cs#0 = { 7, 199, 55, 151, 103 }
Constant (const byte) main::r#0 = '-'
Constant (const string) printu::op#0 = main::op
Constant (const byte) main::r#1 = '-'
Constant (const byte) main::r#2 = '+'
Constant (const string) printu::op#1 = main::op1
Constant (const byte) printu::b#1 = 55
Constant (const byte) main::r#3 = '-'
Constant (const byte) main::r#4 = '+'
Constant (const string) printu::op#2 = main::op2
Constant (const byte) main::r#5 = '-'
Constant (const byte) main::r#6 = '+'
Constant (const string) printu::op#3 = main::op3
Constant (const byte) main::r#7 = '-'
Constant (const byte) main::r#8 = '+'
Constant (const string) printu::op#4 = main::op4
Constant (const byte) main::r#9 = '-'
Constant (const byte) main::r#10 = '+'
Constant (const string) printu::op#5 = main::op5
Constant (const byte) printu::b#5 = 55
Constant (const byte) main::r#11 = '-'
Constant (const byte) main::r#12 = '+'
Constant (const string) printu::op#6 = main::op6
Constant (const byte) main::r#13 = '-'
Constant (const byte) main::r#14 = '+'
Constant (const string) printu::op#7 = main::op7
Constant (const byte) main::r#15 = '-'
Constant (const byte) main::r#16 = '+'
Constant (const string) printu::op#8 = main::op8
Constant (const byte) main::r#17 = '-'
Constant (const byte) main::r#18 = '+'
Constant (const string) printu::op#9 = main::op9
Constant (const byte) printu::b#9 = 55
Constant (const byte) main::r#19 = '-'
Constant (const byte) main::r#20 = '+'
Constant (const string) printu::op#10 = main::op10
Constant (const byte) main::r#21 = '-'
Constant (const byte) main::r#22 = '+'
Constant (const string) printu::op#11 = main::op11
Constant (const byte) main::r#23 = '-'
Constant (const byte) main::r#24 = '+'
Constant (const string) printu::op#12 = main::op12
Constant (const byte) main::r#25 = '-'
Constant (const byte) main::r#26 = '+'
Constant (const string) printu::op#13 = main::op13
Constant (const byte) printu::b#13 = 55
Constant (const byte) main::r#27 = '-'
Constant (const byte) main::r#28 = '+'
Constant (const string) printu::op#14 = main::op14
Constant (const byte) main::r#29 = '-'
Constant (const byte) main::r#30 = '+'
Constant (const string) printu::op#15 = main::op15
Constant (const byte) main::r#31 = '-'
Constant (const byte) main::r#32 = '+'
Constant (const string) printu::op#16 = main::op16
Constant (const byte) main::r#33 = '-'
Constant (const byte) main::r#34 = '+'
Constant (const string) printu::op#17 = main::op17
Constant (const byte) printu::b#17 = 55
Constant (const byte) main::r#35 = '-'
Constant (const byte) main::r#36 = '+'
Constant (const string) printu::op#18 = main::op18
Constant (const byte) main::r#37 = '-'
Constant (const byte) main::r#38 = '+'
Constant (const string) printu::op#19 = main::op19
Constant (const byte) main::r#39 = '+'
Constant (const byte) print_char::ch#2 = ' '
Constant (const byte) print_char::ch#3 = ' '
Succesful SSA optimization Pass2ConstantIdentification
Multiple usages for variable. Not optimizing sub-constant (byte) main::a#10
Culled Empty Block (label) print_ln::@2
Culled Empty Block (label) print_byte::@2
Culled Empty Block (label) main::@45
Not culling empty block because it shares successor with its predecessor. (label) main::@23
Not culling empty block because it shares successor with its predecessor. (label) main::@24
Not culling empty block because it shares successor with its predecessor. (label) main::@25
Not culling empty block because it shares successor with its predecessor. (label) main::@26
Not culling empty block because it shares successor with its predecessor. (label) main::@27
Not culling empty block because it shares successor with its predecessor. (label) main::@28
Not culling empty block because it shares successor with its predecessor. (label) main::@29
Not culling empty block because it shares successor with its predecessor. (label) main::@30
Not culling empty block because it shares successor with its predecessor. (label) main::@31
Not culling empty block because it shares successor with its predecessor. (label) main::@32
Not culling empty block because it shares successor with its predecessor. (label) main::@33
Not culling empty block because it shares successor with its predecessor. (label) main::@34
Not culling empty block because it shares successor with its predecessor. (label) main::@35
Not culling empty block because it shares successor with its predecessor. (label) main::@36
Not culling empty block because it shares successor with its predecessor. (label) main::@37
Not culling empty block because it shares successor with its predecessor. (label) main::@38
Not culling empty block because it shares successor with its predecessor. (label) main::@39
Not culling empty block because it shares successor with its predecessor. (label) main::@40
Not culling empty block because it shares successor with its predecessor. (label) main::@41
Not culling empty block because it shares successor with its predecessor. (label) main::@42
Culled Empty Block (label) printu::@6
Culled Empty Block (label) @11
Succesful SSA optimization Pass2CullEmptyBlocks
Not culling empty block because it shares successor with its predecessor. (label) main::@23
Not culling empty block because it shares successor with its predecessor. (label) main::@24
Not culling empty block because it shares successor with its predecessor. (label) main::@25
Not culling empty block because it shares successor with its predecessor. (label) main::@26
Not culling empty block because it shares successor with its predecessor. (label) main::@27
Not culling empty block because it shares successor with its predecessor. (label) main::@28
Not culling empty block because it shares successor with its predecessor. (label) main::@29
Not culling empty block because it shares successor with its predecessor. (label) main::@30
Not culling empty block because it shares successor with its predecessor. (label) main::@31
Not culling empty block because it shares successor with its predecessor. (label) main::@32
Not culling empty block because it shares successor with its predecessor. (label) main::@33
Not culling empty block because it shares successor with its predecessor. (label) main::@34
Not culling empty block because it shares successor with its predecessor. (label) main::@35
Not culling empty block because it shares successor with its predecessor. (label) main::@36
Not culling empty block because it shares successor with its predecessor. (label) main::@37
Not culling empty block because it shares successor with its predecessor. (label) main::@38
Not culling empty block because it shares successor with its predecessor. (label) main::@39
Not culling empty block because it shares successor with its predecessor. (label) main::@40
Not culling empty block because it shares successor with its predecessor. (label) main::@41
Not culling empty block because it shares successor with its predecessor. (label) main::@42
Not aliassing across scopes: print_str::str#2 print_str::str#1
Not aliassing across scopes: char_cursor#2 char_cursor#52
Not aliassing across scopes: line_cursor#20 line_cursor#21
Not aliassing across scopes: print_byte::b#2 print_byte::b#0
Not aliassing across scopes: char_cursor#89 char_cursor#52
Not aliassing across scopes: print_char::ch#5 print_char::ch#0
Not aliassing across scopes: char_cursor#51 char_cursor#89
Not aliassing across scopes: printu::a#0 main::a#10
Not aliassing across scopes: printu::b#0 main::b#0
Not aliassing across scopes: printu::res#0 main::r#40
Not aliassing across scopes: printu::a#1 main::a#10
Not aliassing across scopes: printu::res#1 main::r#41
Not aliassing across scopes: printu::a#2 main::a#10
Not aliassing across scopes: printu::res#2 main::r#42
Not aliassing across scopes: printu::a#3 main::a#10
Not aliassing across scopes: printu::b#3 main::a#10
Not aliassing across scopes: printu::res#3 main::r#43
Not aliassing across scopes: printu::a#4 main::a#10
Not aliassing across scopes: printu::b#4 main::b#0
Not aliassing across scopes: printu::res#4 main::r#44
Not aliassing across scopes: printu::a#5 main::a#10
Not aliassing across scopes: printu::res#5 main::r#45
Not aliassing across scopes: printu::a#6 main::a#10
Not aliassing across scopes: printu::res#6 main::r#46
Not aliassing across scopes: printu::a#7 main::a#10
Not aliassing across scopes: printu::b#7 main::a#10
Not aliassing across scopes: printu::res#7 main::r#47
Not aliassing across scopes: printu::a#8 main::a#10
Not aliassing across scopes: printu::b#8 main::b#0
Not aliassing across scopes: printu::res#8 main::r#48
Not aliassing across scopes: printu::a#9 main::a#10
Not aliassing across scopes: printu::res#9 main::r#49
Not aliassing across scopes: printu::a#10 main::a#10
Not aliassing across scopes: printu::res#10 main::r#50
Not aliassing across scopes: printu::a#11 main::a#10
Not aliassing across scopes: printu::b#11 main::a#10
Not aliassing across scopes: printu::res#11 main::r#51
Not aliassing across scopes: printu::a#12 main::a#10
Not aliassing across scopes: printu::b#12 main::b#0
Not aliassing across scopes: printu::res#12 main::r#52
Not aliassing across scopes: printu::a#13 main::a#10
Not aliassing across scopes: printu::res#13 main::r#53
Not aliassing across scopes: printu::a#14 main::a#10
Not aliassing across scopes: printu::res#14 main::r#54
Not aliassing across scopes: printu::a#15 main::a#10
Not aliassing across scopes: printu::b#15 main::a#10
Not aliassing across scopes: printu::res#15 main::r#55
Not aliassing across scopes: printu::a#16 main::a#10
Not aliassing across scopes: printu::b#16 main::b#0
Not aliassing across scopes: printu::res#16 main::r#56
Not aliassing across scopes: printu::a#17 main::a#10
Not aliassing across scopes: printu::res#17 main::r#57
Not aliassing across scopes: printu::a#18 main::a#10
Not aliassing across scopes: printu::res#18 main::r#58
Not aliassing across scopes: printu::a#19 main::a#10
Not aliassing across scopes: printu::b#19 main::a#10
Not aliassing across scopes: printu::res#19 main::r#59
Not aliassing across scopes: char_cursor#90 line_cursor#1
Not aliassing across scopes: printu::a#20 printu::a#8
Not aliassing across scopes: printu::b#20 printu::b#8
Not aliassing across scopes: printu::res#20 printu::res#8
Not aliassing across scopes: print_byte::b#0 printu::a#20
Not aliassing across scopes: print_str::str#1 printu::op#20
Not aliassing across scopes: print_byte::b#1 printu::b#20
Not aliassing across scopes: print_char::ch#4 printu::res#20
Multiple usages for variable. Not optimizing sub-constant (byte) main::a#10
Not culling empty block because it shares successor with its predecessor. (label) main::@23
Not culling empty block because it shares successor with its predecessor. (label) main::@24
Not culling empty block because it shares successor with its predecessor. (label) main::@25
Not culling empty block because it shares successor with its predecessor. (label) main::@26
Not culling empty block because it shares successor with its predecessor. (label) main::@27
Not culling empty block because it shares successor with its predecessor. (label) main::@28
Not culling empty block because it shares successor with its predecessor. (label) main::@29
Not culling empty block because it shares successor with its predecessor. (label) main::@30
Not culling empty block because it shares successor with its predecessor. (label) main::@31
Not culling empty block because it shares successor with its predecessor. (label) main::@32
Not culling empty block because it shares successor with its predecessor. (label) main::@33
Not culling empty block because it shares successor with its predecessor. (label) main::@34
Not culling empty block because it shares successor with its predecessor. (label) main::@35
Not culling empty block because it shares successor with its predecessor. (label) main::@36
Not culling empty block because it shares successor with its predecessor. (label) main::@37
Not culling empty block because it shares successor with its predecessor. (label) main::@38
Not culling empty block because it shares successor with its predecessor. (label) main::@39
Not culling empty block because it shares successor with its predecessor. (label) main::@40
Not culling empty block because it shares successor with its predecessor. (label) main::@41
Not culling empty block because it shares successor with its predecessor. (label) main::@42
Not aliassing across scopes: print_str::str#2 print_str::str#1
Not aliassing across scopes: char_cursor#2 char_cursor#52
Not aliassing across scopes: line_cursor#20 line_cursor#21
Not aliassing across scopes: print_byte::b#2 print_byte::b#0
Not aliassing across scopes: char_cursor#89 char_cursor#52
Not aliassing across scopes: print_char::ch#5 print_char::ch#0
Not aliassing across scopes: char_cursor#51 char_cursor#89
Not aliassing across scopes: printu::a#0 main::a#10
Not aliassing across scopes: printu::b#0 main::b#0
Not aliassing across scopes: printu::res#0 main::r#40
Not aliassing across scopes: printu::a#1 main::a#10
Not aliassing across scopes: printu::res#1 main::r#41
Not aliassing across scopes: printu::a#2 main::a#10
Not aliassing across scopes: printu::res#2 main::r#42
Not aliassing across scopes: printu::a#3 main::a#10
Not aliassing across scopes: printu::b#3 main::a#10
Not aliassing across scopes: printu::res#3 main::r#43
Not aliassing across scopes: printu::a#4 main::a#10
Not aliassing across scopes: printu::b#4 main::b#0
Not aliassing across scopes: printu::res#4 main::r#44
Not aliassing across scopes: printu::a#5 main::a#10
Not aliassing across scopes: printu::res#5 main::r#45
Not aliassing across scopes: printu::a#6 main::a#10
Not aliassing across scopes: printu::res#6 main::r#46
Not aliassing across scopes: printu::a#7 main::a#10
Not aliassing across scopes: printu::b#7 main::a#10
Not aliassing across scopes: printu::res#7 main::r#47
Not aliassing across scopes: printu::a#8 main::a#10
Not aliassing across scopes: printu::b#8 main::b#0
Not aliassing across scopes: printu::res#8 main::r#48
Not aliassing across scopes: printu::a#9 main::a#10
Not aliassing across scopes: printu::res#9 main::r#49
Not aliassing across scopes: printu::a#10 main::a#10
Not aliassing across scopes: printu::res#10 main::r#50
Not aliassing across scopes: printu::a#11 main::a#10
Not aliassing across scopes: printu::b#11 main::a#10
Not aliassing across scopes: printu::res#11 main::r#51
Not aliassing across scopes: printu::a#12 main::a#10
Not aliassing across scopes: printu::b#12 main::b#0
Not aliassing across scopes: printu::res#12 main::r#52
Not aliassing across scopes: printu::a#13 main::a#10
Not aliassing across scopes: printu::res#13 main::r#53
Not aliassing across scopes: printu::a#14 main::a#10
Not aliassing across scopes: printu::res#14 main::r#54
Not aliassing across scopes: printu::a#15 main::a#10
Not aliassing across scopes: printu::b#15 main::a#10
Not aliassing across scopes: printu::res#15 main::r#55
Not aliassing across scopes: printu::a#16 main::a#10
Not aliassing across scopes: printu::b#16 main::b#0
Not aliassing across scopes: printu::res#16 main::r#56
Not aliassing across scopes: printu::a#17 main::a#10
Not aliassing across scopes: printu::res#17 main::r#57
Not aliassing across scopes: printu::a#18 main::a#10
Not aliassing across scopes: printu::res#18 main::r#58
Not aliassing across scopes: printu::a#19 main::a#10
Not aliassing across scopes: printu::b#19 main::a#10
Not aliassing across scopes: printu::res#19 main::r#59
Not aliassing across scopes: char_cursor#90 line_cursor#1
Not aliassing across scopes: printu::a#20 printu::a#8
Not aliassing across scopes: printu::b#20 printu::b#8
Not aliassing across scopes: printu::res#20 printu::res#8
Not aliassing across scopes: print_byte::b#0 printu::a#20
Not aliassing across scopes: print_str::str#1 printu::op#20
Not aliassing across scopes: print_byte::b#1 printu::b#20
Not aliassing across scopes: print_char::ch#4 printu::res#20
Multiple usages for variable. Not optimizing sub-constant (byte) main::a#10
OPTIMIZING CONTROL FLOW GRAPH
Inlining constant with var siblings (const byte) print_char::ch#2
Inlining constant with var siblings (const byte) print_char::ch#2
Inlining constant with var siblings (const byte) print_char::ch#2
Inlining constant with var siblings (const byte) print_char::ch#2
Inlining constant with different constant siblings (const byte) print_char::ch#2
Inlining constant with var siblings (const byte) print_char::ch#3
Inlining constant with var siblings (const byte) print_char::ch#3
Inlining constant with var siblings (const byte) print_char::ch#3
Inlining constant with var siblings (const byte) print_char::ch#3
Inlining constant with different constant siblings (const byte) print_char::ch#3
Inlining constant with var siblings (const byte*) print_cls::sc#0
Inlining constant with var siblings (const byte*) print_cls::sc#0
Inlining constant with var siblings (const byte) main::a#0
Inlining constant with var siblings (const byte) main::a#0
Inlining constant with var siblings (const byte) main::i#0
Inlining constant with var siblings (const byte) main::i#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with different constant siblings (const byte) main::r#0
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with different constant siblings (const byte) main::r#1
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with different constant siblings (const byte) main::r#2
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with different constant siblings (const byte) main::r#3
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with different constant siblings (const byte) main::r#4
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with different constant siblings (const byte) main::r#5
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with different constant siblings (const byte) main::r#6
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with different constant siblings (const byte) main::r#7
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with different constant siblings (const byte) main::r#8
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with different constant siblings (const byte) main::r#9
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with different constant siblings (const byte) main::r#10
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with different constant siblings (const byte) main::r#11
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with different constant siblings (const byte) main::r#12
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with different constant siblings (const byte) main::r#13
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with different constant siblings (const byte) main::r#14
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with different constant siblings (const byte) main::r#15
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with different constant siblings (const byte) main::r#16
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with different constant siblings (const byte) main::r#17
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with different constant siblings (const byte) main::r#18
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with different constant siblings (const byte) main::r#19
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with different constant siblings (const byte) main::r#20
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with different constant siblings (const byte) main::r#21
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with different constant siblings (const byte) main::r#22
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with different constant siblings (const byte) main::r#23
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with different constant siblings (const byte) main::r#24
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with different constant siblings (const byte) main::r#25
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with different constant siblings (const byte) main::r#26
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with different constant siblings (const byte) main::r#27
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with different constant siblings (const byte) main::r#28
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with different constant siblings (const byte) main::r#29
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with different constant siblings (const byte) main::r#30
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with different constant siblings (const byte) main::r#31
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with different constant siblings (const byte) main::r#32
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with different constant siblings (const byte) main::r#33
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with different constant siblings (const byte) main::r#34
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with different constant siblings (const byte) main::r#35
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with different constant siblings (const byte) main::r#36
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with different constant siblings (const byte) main::r#37
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with different constant siblings (const byte) main::r#38
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with var siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with different constant siblings (const byte) main::r#39
Inlining constant with var siblings (const string) printu::op#0
Inlining constant with var siblings (const string) printu::op#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const byte) printu::b#1
Inlining constant with var siblings (const string) printu::op#2
Inlining constant with var siblings (const string) printu::op#3
Inlining constant with var siblings (const string) printu::op#4
Inlining constant with var siblings (const string) printu::op#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const byte) printu::b#5
Inlining constant with var siblings (const string) printu::op#6
Inlining constant with var siblings (const string) printu::op#7
Inlining constant with var siblings (const string) printu::op#8
Inlining constant with var siblings (const string) printu::op#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const byte) printu::b#9
Inlining constant with var siblings (const string) printu::op#10
Inlining constant with var siblings (const string) printu::op#11
Inlining constant with var siblings (const string) printu::op#12
Inlining constant with var siblings (const string) printu::op#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const byte) printu::b#13
Inlining constant with var siblings (const string) printu::op#14
Inlining constant with var siblings (const string) printu::op#15
Inlining constant with var siblings (const string) printu::op#16
Inlining constant with var siblings (const string) printu::op#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const byte) printu::b#17
Inlining constant with var siblings (const string) printu::op#18
Inlining constant with var siblings (const string) printu::op#19
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Inlining constant with var siblings (const byte*) char_cursor#0
Constant inlined printu::op#0 = (const string) main::op
Constant inlined printu::op#1 = (const string) main::op1
Constant inlined printu::op#8 = (const string) main::op8
Constant inlined printu::op#9 = (const string) main::op9
Constant inlined printu::op#6 = (const string) main::op6
Constant inlined main::r#39 = (byte) '+'
Constant inlined printu::op#7 = (const string) main::op7
Constant inlined printu::op#4 = (const string) main::op4
Constant inlined printu::op#5 = (const string) main::op5
Constant inlined printu::op#2 = (const string) main::op2
Constant inlined printu::op#3 = (const string) main::op3
Constant inlined main::r#33 = (byte) '-'
Constant inlined main::r#34 = (byte) '+'
Constant inlined main::r#31 = (byte) '-'
Constant inlined main::r#32 = (byte) '+'
Constant inlined main::r#37 = (byte) '-'
Constant inlined main::r#38 = (byte) '+'
Constant inlined main::r#35 = (byte) '-'
Constant inlined main::r#36 = (byte) '+'
Constant inlined main::r#30 = (byte) '+'
Constant inlined printu::b#17 = (byte/signed byte/word/signed word) 55
Constant inlined printu::b#13 = (byte/signed byte/word/signed word) 55
Constant inlined print_cls::$0 = (word/signed word) 1024+(word/signed word) 1000
Constant inlined printu::op#17 = (const string) main::op17
Constant inlined main::r#19 = (byte) '-'
Constant inlined printu::op#18 = (const string) main::op18
Constant inlined printu::op#19 = (const string) main::op19
Constant inlined main::r#17 = (byte) '-'
Constant inlined main::r#18 = (byte) '+'
Constant inlined main::a#0 = (byte/signed byte/word/signed word) 7
Constant inlined main::r#11 = (byte) '-'
Constant inlined main::r#12 = (byte) '+'
Constant inlined main::r#10 = (byte) '+'
Constant inlined main::r#15 = (byte) '-'
Constant inlined main::r#16 = (byte) '+'
Constant inlined main::r#13 = (byte) '-'
Constant inlined main::r#14 = (byte) '+'
Constant inlined main::i#0 = (byte/signed byte/word/signed word) 0
Constant inlined main::r#0 = (byte) '-'
Constant inlined main::r#1 = (byte) '-'
Constant inlined main::r#8 = (byte) '+'
Constant inlined main::r#9 = (byte) '-'
Constant inlined main::r#6 = (byte) '+'
Constant inlined main::r#28 = (byte) '+'
Constant inlined main::r#7 = (byte) '-'
Constant inlined main::r#29 = (byte) '-'
Constant inlined print_cls::sc#0 = ((byte*))(word/signed word) 1024
Constant inlined main::r#4 = (byte) '+'
Constant inlined printu::b#9 = (byte/signed byte/word/signed word) 55
Constant inlined main::r#5 = (byte) '-'
Constant inlined main::r#2 = (byte) '+'
Constant inlined main::r#3 = (byte) '-'
Constant inlined print_char::ch#3 = (byte) ' '
Constant inlined main::r#22 = (byte) '+'
Constant inlined printu::b#5 = (byte/signed byte/word/signed word) 55
Constant inlined printu::op#10 = (const string) main::op10
Constant inlined print_char::ch#2 = (byte) ' '
Constant inlined main::r#23 = (byte) '-'
Constant inlined printu::op#11 = (const string) main::op11
Constant inlined main::r#20 = (byte) '+'
Constant inlined printu::op#12 = (const string) main::op12
Constant inlined main::r#21 = (byte) '-'
Constant inlined printu::op#13 = (const string) main::op13
Constant inlined main::r#26 = (byte) '+'
Constant inlined printu::b#1 = (byte/signed byte/word/signed word) 55
Constant inlined printu::op#14 = (const string) main::op14
Constant inlined main::r#27 = (byte) '-'
Constant inlined printu::op#15 = (const string) main::op15
Constant inlined main::r#24 = (byte) '+'
Constant inlined printu::op#16 = (const string) main::op16
Constant inlined main::r#25 = (byte) '-'
Constant inlined char_cursor#0 = ((byte*))(word/signed word) 1024
Constant inlined print_byte::$4 = (const string) print_byte::hextab#0
Succesful SSA optimization Pass2ConstantInlining
Block Sequence Planned @begin @10 @end main main::@1 main::@23 main::@2 main::@46 main::@24 main::@3 main::@47 main::@25 main::@4 main::@48 main::@26 main::@5 main::@49 main::@50 main::@27 main::@6 main::@51 main::@28 main::@7 main::@52 main::@29 main::@8 main::@53 main::@30 main::@9 main::@54 main::@55 main::@31 main::@10 main::@56 main::@32 main::@11 main::@57 main::@33 main::@12 main::@58 main::@34 main::@13 main::@59 main::@60 main::@35 main::@14 main::@61 main::@36 main::@15 main::@62 main::@37 main::@16 main::@63 main::@38 main::@17 main::@64 main::@65 main::@39 main::@18 main::@66 main::@40 main::@19 main::@67 main::@41 main::@20 main::@68 main::@42 main::@21 main::@69 main::@70 main::@22 main::@return print_ln print_ln::@1 print_ln::@return printu printu::@1 printu::@2 printu::@3 printu::@4 printu::@5 printu::@return print_char print_char::@return print_byte print_byte::@1 print_byte::@return print_str print_str::@1 print_str::@return print_str::@2 print_cls print_cls::@1 print_cls::@return 
Added new block during phi lifting main::@71(between main::@70 and main::@1)
Added new block during phi lifting print_ln::@3(between print_ln::@1 and print_ln::@1)
Added new block during phi lifting print_cls::@3(between print_cls::@1 and print_cls::@1)
Block Sequence Planned @begin @10 @end main main::@1 main::@23 main::@2 main::@46 main::@24 main::@3 main::@47 main::@25 main::@4 main::@48 main::@26 main::@5 main::@49 main::@50 main::@27 main::@6 main::@51 main::@28 main::@7 main::@52 main::@29 main::@8 main::@53 main::@30 main::@9 main::@54 main::@55 main::@31 main::@10 main::@56 main::@32 main::@11 main::@57 main::@33 main::@12 main::@58 main::@34 main::@13 main::@59 main::@60 main::@35 main::@14 main::@61 main::@36 main::@15 main::@62 main::@37 main::@16 main::@63 main::@38 main::@17 main::@64 main::@65 main::@39 main::@18 main::@66 main::@40 main::@19 main::@67 main::@41 main::@20 main::@68 main::@42 main::@21 main::@69 main::@70 main::@22 main::@return main::@71 print_ln print_ln::@1 print_ln::@return print_ln::@3 printu printu::@1 printu::@2 printu::@3 printu::@4 printu::@5 printu::@return print_char print_char::@return print_byte print_byte::@1 print_byte::@return print_str print_str::@1 print_str::@return print_str::@2 print_cls print_cls::@1 print_cls::@return print_cls::@3 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @10
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@36
Adding NOP phi() at start of main::@37
Adding NOP phi() at start of main::@38
Adding NOP phi() at start of main::@39
Adding NOP phi() at start of main::@40
Adding NOP phi() at start of main::@41
Adding NOP phi() at start of main::@42
Adding NOP phi() at start of print_cls
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to print_cls:5 printu:18 printu:27 printu:38 printu:49 print_ln:51 printu:62 printu:71 printu:82 printu:93 print_ln:95 printu:106 printu:115 printu:126 printu:137 print_ln:139 printu:150 printu:159 printu:170 printu:181 print_ln:183 printu:194 printu:203 printu:214 printu:225 print_ln:227 
Calls in [printu] to print_char:246 print_byte:250 print_str:252 print_byte:256 print_char:258 print_char:262 
Calls in [print_byte] to print_char:273 print_char:278 

Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Created 38 initial phi equivalence classes
Coalesced [14] char_cursor#148 ← char_cursor#114
Coalesced [15] printu::a#32 ← printu::a#0
Coalesced [16] printu::b#31 ← printu::b#0
Coalesced [17] printu::res#36 ← printu::res#0
Coalesced [24] char_cursor#151 ← char_cursor#52
Coalesced [25] printu::a#35 ← printu::a#1
Coalesced [26] printu::res#39 ← printu::res#1
Coalesced (already) [34] char_cursor#152 ← char_cursor#52
Coalesced [35] printu::a#36 ← printu::a#2
Coalesced [36] printu::b#34 ← printu::b#2
Coalesced [37] printu::res#40 ← printu::res#2
Coalesced (already) [45] char_cursor#153 ← char_cursor#52
Coalesced [46] printu::a#37 ← printu::a#3
Coalesced [47] printu::b#35 ← printu::b#3
Coalesced [48] printu::res#41 ← printu::res#3
Coalesced [50] line_cursor#87 ← line_cursor#21
Not coalescing [58] char_cursor#154 ← line_cursor#1
Coalesced [59] printu::a#38 ← printu::a#4
Coalesced [60] printu::b#36 ← printu::b#4
Coalesced [61] printu::res#42 ← printu::res#4
Coalesced (already) [68] char_cursor#155 ← char_cursor#52
Coalesced [69] printu::a#39 ← printu::a#5
Coalesced [70] printu::res#43 ← printu::res#5
Coalesced (already) [78] char_cursor#156 ← char_cursor#52
Coalesced [79] printu::a#40 ← printu::a#6
Coalesced [80] printu::b#37 ← printu::b#6
Coalesced [81] printu::res#44 ← printu::res#6
Coalesced (already) [89] char_cursor#157 ← char_cursor#52
Coalesced [90] printu::a#41 ← printu::a#7
Coalesced [91] printu::b#38 ← printu::b#7
Coalesced [92] printu::res#45 ← printu::res#7
Coalesced [94] line_cursor#88 ← line_cursor#1
Not coalescing [102] char_cursor#138 ← line_cursor#1
Coalesced [103] printu::a#22 ← printu::a#8
Coalesced [104] printu::b#24 ← printu::b#8
Coalesced [105] printu::res#26 ← printu::res#8
Coalesced (already) [112] char_cursor#139 ← char_cursor#52
Coalesced [113] printu::a#23 ← printu::a#9
Coalesced [114] printu::res#27 ← printu::res#9
Coalesced (already) [122] char_cursor#140 ← char_cursor#52
Coalesced [123] printu::a#24 ← printu::a#10
Coalesced [124] printu::b#25 ← printu::b#10
Coalesced [125] printu::res#28 ← printu::res#10
Coalesced (already) [133] char_cursor#141 ← char_cursor#52
Coalesced [134] printu::a#25 ← printu::a#11
Coalesced [135] printu::b#26 ← printu::b#11
Coalesced [136] printu::res#29 ← printu::res#11
Coalesced (already) [138] line_cursor#89 ← line_cursor#1
Not coalescing [146] char_cursor#142 ← line_cursor#1
Coalesced [147] printu::a#26 ← printu::a#12
Coalesced [148] printu::b#27 ← printu::b#12
Coalesced [149] printu::res#30 ← printu::res#12
Coalesced (already) [156] char_cursor#143 ← char_cursor#52
Coalesced [157] printu::a#27 ← printu::a#13
Coalesced [158] printu::res#31 ← printu::res#13
Coalesced (already) [166] char_cursor#144 ← char_cursor#52
Coalesced [167] printu::a#28 ← printu::a#14
Coalesced [168] printu::b#28 ← printu::b#14
Coalesced [169] printu::res#32 ← printu::res#14
Coalesced (already) [177] char_cursor#145 ← char_cursor#52
Coalesced [178] printu::a#29 ← printu::a#15
Coalesced [179] printu::b#29 ← printu::b#15
Coalesced [180] printu::res#33 ← printu::res#15
Coalesced (already) [182] line_cursor#90 ← line_cursor#1
Not coalescing [190] char_cursor#146 ← line_cursor#1
Coalesced [191] printu::a#30 ← printu::a#16
Coalesced [192] printu::b#30 ← printu::b#16
Coalesced [193] printu::res#34 ← printu::res#16
Coalesced (already) [200] char_cursor#147 ← char_cursor#52
Coalesced [201] printu::a#31 ← printu::a#17
Coalesced [202] printu::res#35 ← printu::res#17
Coalesced (already) [210] char_cursor#149 ← char_cursor#52
Coalesced [211] printu::a#33 ← printu::a#18
Coalesced [212] printu::b#32 ← printu::b#18
Coalesced [213] printu::res#37 ← printu::res#18
Coalesced (already) [221] char_cursor#150 ← char_cursor#52
Coalesced [222] printu::a#34 ← printu::a#19
Coalesced [223] printu::b#33 ← printu::b#19
Coalesced [224] printu::res#38 ← printu::res#19
Coalesced (already) [226] line_cursor#91 ← line_cursor#1
Coalesced [233] main::a#68 ← main::a#1
Not coalescing [234] char_cursor#137 ← line_cursor#1
Coalesced [235] main::i#68 ← main::i#1
Coalesced (already) [236] line_cursor#86 ← line_cursor#1
Coalesced [238] line_cursor#92 ← line_cursor#20
Coalesced (already) [243] line_cursor#93 ← line_cursor#1
Coalesced [245] char_cursor#160 ← char_cursor#90
Coalesced [248] print_byte::b#4 ← print_byte::b#0
Coalesced [249] char_cursor#163 ← char_cursor#52
Coalesced [254] print_byte::b#5 ← print_byte::b#1
Coalesced [255] char_cursor#164 ← char_cursor#2
Coalesced (already) [257] char_cursor#161 ← char_cursor#52
Coalesced [260] print_char::ch#8 ← print_char::ch#4
Coalesced (already) [261] char_cursor#162 ← char_cursor#52
Coalesced [271] print_char::ch#6 ← print_char::ch#0
Coalesced (already) [272] char_cursor#158 ← char_cursor#89
Coalesced [276] print_char::ch#7 ← print_char::ch#1
Coalesced (already) [277] char_cursor#159 ← char_cursor#52
Coalesced [280] print_str::str#5 ← print_str::str#1
Coalesced (already) [281] char_cursor#165 ← char_cursor#52
Coalesced [288] print_str::str#6 ← print_str::str#0
Coalesced [289] char_cursor#166 ← char_cursor#1
Coalesced [296] print_cls::sc#3 ← print_cls::sc#1
Coalesced down to 32 phi equivalence classes
Not culling empty block because it shares successor with its predecessor. (label) main::@23
Not culling empty block because it shares successor with its predecessor. (label) main::@24
Not culling empty block because it shares successor with its predecessor. (label) main::@25
Not culling empty block because it shares successor with its predecessor. (label) main::@26
Not culling empty block because it shares successor with its predecessor. (label) main::@27
Not culling empty block because it shares successor with its predecessor. (label) main::@28
Not culling empty block because it shares successor with its predecessor. (label) main::@29
Not culling empty block because it shares successor with its predecessor. (label) main::@30
Not culling empty block because it shares successor with its predecessor. (label) main::@31
Not culling empty block because it shares successor with its predecessor. (label) main::@32
Not culling empty block because it shares successor with its predecessor. (label) main::@33
Not culling empty block because it shares successor with its predecessor. (label) main::@34
Not culling empty block because it shares successor with its predecessor. (label) main::@35
Not culling empty block because it shares successor with its predecessor. (label) main::@36
Not culling empty block because it shares successor with its predecessor. (label) main::@37
Not culling empty block because it shares successor with its predecessor. (label) main::@38
Not culling empty block because it shares successor with its predecessor. (label) main::@39
Not culling empty block because it shares successor with its predecessor. (label) main::@40
Not culling empty block because it shares successor with its predecessor. (label) main::@41
Not culling empty block because it shares successor with its predecessor. (label) main::@42
Culled Empty Block (label) print_ln::@3
Culled Empty Block (label) print_cls::@3
Block Sequence Planned @begin @10 @end main main::@1 main::@23 main::@2 main::@46 main::@24 main::@3 main::@47 main::@25 main::@4 main::@48 main::@26 main::@5 main::@49 main::@50 main::@27 main::@6 main::@51 main::@28 main::@7 main::@52 main::@29 main::@8 main::@53 main::@30 main::@9 main::@54 main::@55 main::@31 main::@10 main::@56 main::@32 main::@11 main::@57 main::@33 main::@12 main::@58 main::@34 main::@13 main::@59 main::@60 main::@35 main::@14 main::@61 main::@36 main::@15 main::@62 main::@37 main::@16 main::@63 main::@38 main::@17 main::@64 main::@65 main::@39 main::@18 main::@66 main::@40 main::@19 main::@67 main::@41 main::@20 main::@68 main::@42 main::@21 main::@69 main::@70 main::@22 main::@return main::@71 print_ln print_ln::@1 print_ln::@return printu printu::@1 printu::@2 printu::@3 printu::@4 printu::@5 printu::@return print_char print_char::@return print_byte print_byte::@1 print_byte::@return print_str print_str::@1 print_str::@return print_str::@2 print_cls print_cls::@1 print_cls::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @10
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@23
Adding NOP phi() at start of main::@24
Adding NOP phi() at start of main::@25
Adding NOP phi() at start of main::@26
Adding NOP phi() at start of main::@49
Adding NOP phi() at start of main::@27
Adding NOP phi() at start of main::@28
Adding NOP phi() at start of main::@29
Adding NOP phi() at start of main::@30
Adding NOP phi() at start of main::@54
Adding NOP phi() at start of main::@31
Adding NOP phi() at start of main::@32
Adding NOP phi() at start of main::@33
Adding NOP phi() at start of main::@34
Adding NOP phi() at start of main::@59
Adding NOP phi() at start of main::@35
Adding NOP phi() at start of main::@36
Adding NOP phi() at start of main::@37
Adding NOP phi() at start of main::@38
Adding NOP phi() at start of main::@64
Adding NOP phi() at start of main::@39
Adding NOP phi() at start of main::@40
Adding NOP phi() at start of main::@41
Adding NOP phi() at start of main::@42
Adding NOP phi() at start of main::@69
Adding NOP phi() at start of printu::@4
Adding NOP phi() at start of print_str
Adding NOP phi() at start of print_cls
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@10
@10: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @10
  [3] phi() [ ] ( )
main: scope:[main]  from @10
  [4] phi() [ ] ( main:2 [ ] )
  [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@71
  [6] (byte*) line_cursor#21 ← phi( main/((byte*))(word/signed word) 1024 main::@71/(byte*) line_cursor#1 ) [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] )
  [6] (byte) main::i#10 ← phi( main/(byte/signed byte/word/signed word) 0 main::@71/(byte) main::i#1 ) [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] )
  [6] (byte*) char_cursor#114 ← phi( main/((byte*))(word/signed word) 1024 main::@71/(byte*~) char_cursor#137 ) [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] )
  [6] (byte) main::a#10 ← phi( main/(byte/signed byte/word/signed word) 7 main::@71/(byte) main::a#1 ) [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 ] )
  [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] )
  [8] if((byte) main::a#10>=(byte) main::b#0) goto main::@2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] )
  to:main::@23
main::@23: scope:[main]  from main::@1
  [9] phi() [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@23
  [10] (byte) main::r#40 ← phi( main::@1/(byte) '-' main::@23/(byte) '+' ) [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 ] )
  [11] (byte) printu::a#0 ← (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] )
  [12] (byte) printu::b#0 ← (byte) main::b#0 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] )
  [13] (byte) printu::res#0 ← (byte) main::r#40 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] )
  [14] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@46
main::@46: scope:[main]  from main::@2
  [15] if((byte) main::a#10>=(byte/signed byte/word/signed word) 55) goto main::@3 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@24
main::@24: scope:[main]  from main::@46
  [16] phi() [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@3
main::@3: scope:[main]  from main::@24 main::@46
  [17] (byte) main::r#41 ← phi( main::@24/(byte) '+' main::@46/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 char_cursor#52 ] )
  [18] (byte) printu::a#1 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] )
  [19] (byte) printu::res#1 ← (byte) main::r#41 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] )
  [20] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@47
main::@47: scope:[main]  from main::@3
  [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@25
main::@25: scope:[main]  from main::@47
  [22] phi() [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@4
main::@4: scope:[main]  from main::@25 main::@47
  [23] (byte) main::r#42 ← phi( main::@25/(byte) '+' main::@47/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 char_cursor#52 ] )
  [24] (byte) printu::a#2 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] )
  [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] )
  [26] (byte) printu::res#2 ← (byte) main::r#42 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] )
  [27] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@48
main::@48: scope:[main]  from main::@4
  [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@26
main::@26: scope:[main]  from main::@48
  [29] phi() [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@5
main::@5: scope:[main]  from main::@26 main::@48
  [30] (byte) main::r#43 ← phi( main::@26/(byte) '+' main::@48/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 char_cursor#52 ] )
  [31] (byte) printu::a#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] )
  [32] (byte) printu::b#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] )
  [33] (byte) printu::res#3 ← (byte) main::r#43 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] )
  [34] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  to:main::@49
main::@49: scope:[main]  from main::@5
  [35] phi() [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  [36] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@50
main::@50: scope:[main]  from main::@49
  [37] if((byte) main::a#10<=(byte) main::b#0) goto main::@6 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@27
main::@27: scope:[main]  from main::@50
  [38] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@6
main::@6: scope:[main]  from main::@27 main::@50
  [39] (byte) main::r#44 ← phi( main::@27/(byte) '+' main::@50/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 ] )
  [40] (byte) printu::a#4 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] )
  [41] (byte) printu::b#4 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] )
  [42] (byte) printu::res#4 ← (byte) main::r#44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] )
  [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] )
  [44] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@51
main::@51: scope:[main]  from main::@6
  [45] if((byte) main::a#10<=(byte/signed byte/word/signed word) 55) goto main::@7 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@28
main::@28: scope:[main]  from main::@51
  [46] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@7
main::@7: scope:[main]  from main::@28 main::@51
  [47] (byte) main::r#45 ← phi( main::@28/(byte) '+' main::@51/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 char_cursor#52 ] )
  [48] (byte) printu::a#5 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] )
  [49] (byte) printu::res#5 ← (byte) main::r#45 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] )
  [50] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@52
main::@52: scope:[main]  from main::@7
  [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@29
main::@29: scope:[main]  from main::@52
  [52] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@8
main::@8: scope:[main]  from main::@29 main::@52
  [53] (byte) main::r#46 ← phi( main::@29/(byte) '+' main::@52/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 char_cursor#52 ] )
  [54] (byte) printu::a#6 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] )
  [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] )
  [56] (byte) printu::res#6 ← (byte) main::r#46 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] )
  [57] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@53
main::@53: scope:[main]  from main::@8
  [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@30
main::@30: scope:[main]  from main::@53
  [59] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@9
main::@9: scope:[main]  from main::@30 main::@53
  [60] (byte) main::r#47 ← phi( main::@30/(byte) '+' main::@53/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 char_cursor#52 ] )
  [61] (byte) printu::a#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] )
  [62] (byte) printu::b#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] )
  [63] (byte) printu::res#7 ← (byte) main::r#47 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] )
  [64] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@54
main::@54: scope:[main]  from main::@9
  [65] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  [66] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@55
main::@55: scope:[main]  from main::@54
  [67] if((byte) main::a#10>(byte) main::b#0) goto main::@10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@31
main::@31: scope:[main]  from main::@55
  [68] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@10
main::@10: scope:[main]  from main::@31 main::@55
  [69] (byte) main::r#48 ← phi( main::@31/(byte) '+' main::@55/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 ] )
  [70] (byte) printu::a#8 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] )
  [71] (byte) printu::b#8 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] )
  [72] (byte) printu::res#8 ← (byte) main::r#48 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] )
  [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] )
  [74] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@56
main::@56: scope:[main]  from main::@10
  [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@32
main::@32: scope:[main]  from main::@56
  [76] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@11
main::@11: scope:[main]  from main::@32 main::@56
  [77] (byte) main::r#49 ← phi( main::@32/(byte) '+' main::@56/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 char_cursor#52 ] )
  [78] (byte) printu::a#9 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] )
  [79] (byte) printu::res#9 ← (byte) main::r#49 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] )
  [80] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@57
main::@57: scope:[main]  from main::@11
  [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@33
main::@33: scope:[main]  from main::@57
  [82] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@12
main::@12: scope:[main]  from main::@33 main::@57
  [83] (byte) main::r#50 ← phi( main::@33/(byte) '+' main::@57/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 char_cursor#52 ] )
  [84] (byte) printu::a#10 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] )
  [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] )
  [86] (byte) printu::res#10 ← (byte) main::r#50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] )
  [87] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@58
main::@58: scope:[main]  from main::@12
  [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@34
main::@34: scope:[main]  from main::@58
  [89] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@13
main::@13: scope:[main]  from main::@34 main::@58
  [90] (byte) main::r#51 ← phi( main::@34/(byte) '+' main::@58/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 char_cursor#52 ] )
  [91] (byte) printu::a#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] )
  [92] (byte) printu::b#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] )
  [93] (byte) printu::res#11 ← (byte) main::r#51 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] )
  [94] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@59
main::@59: scope:[main]  from main::@13
  [95] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  [96] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@60
main::@60: scope:[main]  from main::@59
  [97] if((byte) main::a#10<(byte) main::b#0) goto main::@14 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@35
main::@35: scope:[main]  from main::@60
  [98] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@14
main::@14: scope:[main]  from main::@35 main::@60
  [99] (byte) main::r#52 ← phi( main::@35/(byte) '+' main::@60/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 ] )
  [100] (byte) printu::a#12 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] )
  [101] (byte) printu::b#12 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] )
  [102] (byte) printu::res#12 ← (byte) main::r#52 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] )
  [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] )
  [104] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@61
main::@61: scope:[main]  from main::@14
  [105] if((byte) main::a#10<(byte/signed byte/word/signed word) 55) goto main::@15 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@36
main::@36: scope:[main]  from main::@61
  [106] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@15
main::@15: scope:[main]  from main::@36 main::@61
  [107] (byte) main::r#53 ← phi( main::@36/(byte) '+' main::@61/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 char_cursor#52 ] )
  [108] (byte) printu::a#13 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] )
  [109] (byte) printu::res#13 ← (byte) main::r#53 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] )
  [110] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@62
main::@62: scope:[main]  from main::@15
  [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@37
main::@37: scope:[main]  from main::@62
  [112] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@16
main::@16: scope:[main]  from main::@37 main::@62
  [113] (byte) main::r#54 ← phi( main::@37/(byte) '+' main::@62/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 char_cursor#52 ] )
  [114] (byte) printu::a#14 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] )
  [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] )
  [116] (byte) printu::res#14 ← (byte) main::r#54 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] )
  [117] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@63
main::@63: scope:[main]  from main::@16
  [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@38
main::@38: scope:[main]  from main::@63
  [119] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@17
main::@17: scope:[main]  from main::@38 main::@63
  [120] (byte) main::r#55 ← phi( main::@38/(byte) '+' main::@63/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 char_cursor#52 ] )
  [121] (byte) printu::a#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] )
  [122] (byte) printu::b#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] )
  [123] (byte) printu::res#15 ← (byte) main::r#55 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] )
  [124] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  to:main::@64
main::@64: scope:[main]  from main::@17
  [125] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  [126] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@65
main::@65: scope:[main]  from main::@64
  [127] if((byte) main::a#10!=(byte) main::b#0) goto main::@18 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@39
main::@39: scope:[main]  from main::@65
  [128] phi() [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  to:main::@18
main::@18: scope:[main]  from main::@39 main::@65
  [129] (byte) main::r#56 ← phi( main::@39/(byte) '+' main::@65/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 ] )
  [130] (byte) printu::a#16 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] )
  [131] (byte) printu::b#16 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] )
  [132] (byte) printu::res#16 ← (byte) main::r#56 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] )
  [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] )
  [134] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@66
main::@66: scope:[main]  from main::@18
  [135] if((byte) main::a#10!=(byte/signed byte/word/signed word) 55) goto main::@19 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@40
main::@40: scope:[main]  from main::@66
  [136] phi() [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@19
main::@19: scope:[main]  from main::@40 main::@66
  [137] (byte) main::r#57 ← phi( main::@40/(byte) '+' main::@66/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::r#57 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#57 char_cursor#52 ] )
  [138] (byte) printu::a#17 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] )
  [139] (byte) printu::res#17 ← (byte) main::r#57 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] )
  [140] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@67
main::@67: scope:[main]  from main::@19
  [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@41
main::@41: scope:[main]  from main::@67
  [142] phi() [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@20
main::@20: scope:[main]  from main::@41 main::@67
  [143] (byte) main::r#58 ← phi( main::@41/(byte) '+' main::@67/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::r#58 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 char_cursor#52 ] )
  [144] (byte) printu::a#18 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] )
  [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] )
  [146] (byte) printu::res#18 ← (byte) main::r#58 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] )
  [147] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@68
main::@68: scope:[main]  from main::@20
  [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@42
main::@42: scope:[main]  from main::@68
  [149] phi() [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@21
main::@21: scope:[main]  from main::@42 main::@68
  [150] (byte) main::r#59 ← phi( main::@42/(byte) '+' main::@68/(byte) '-' ) [ main::a#10 main::i#10 line_cursor#1 main::r#59 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 char_cursor#52 ] )
  [151] (byte) printu::a#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] )
  [152] (byte) printu::b#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] )
  [153] (byte) printu::res#19 ← (byte) main::r#59 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] )
  [154] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:main::@69
main::@69: scope:[main]  from main::@21
  [155] phi() [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  [156] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 ] )
  to:main::@70
main::@70: scope:[main]  from main::@69
  [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] )
  [158] (byte) main::i#1 ← ++ (byte) main::i#10 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] )
  [159] if((byte) main::i#1!=(byte/signed byte/word/signed word) 5) goto main::@71 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] )
  to:main::@22
main::@22: scope:[main]  from main::@22 main::@70
  [160] if(true) goto main::@22 [ ] ( main:2 [ ] )
  to:main::@return
main::@return: scope:[main]  from main::@22
  [161] return  [ ] ( main:2 [ ] )
  to:@return
main::@71: scope:[main]  from main::@70
  [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] )
  to:main::@1
print_ln: scope:[print_ln]  from main::@49 main::@54 main::@59 main::@64 main::@69
  [163] (byte*) line_cursor#20 ← phi( main::@49/(byte*) line_cursor#21 main::@54/(byte*) line_cursor#1 main::@59/(byte*) line_cursor#1 main::@64/(byte*) line_cursor#1 main::@69/(byte*) line_cursor#1 ) [ line_cursor#20 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#20 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#20 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#20 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#20 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#20 char_cursor#52 ] )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [164] (byte*) line_cursor#10 ← phi( print_ln/(byte*) line_cursor#20 print_ln::@1/(byte*) line_cursor#1 ) [ line_cursor#10 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#10 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#10 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#10 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#10 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#10 char_cursor#52 ] )
  [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [167] return  [ line_cursor#1 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 ] )
  to:@return
printu: scope:[printu]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [168] (byte) printu::res#20 ← phi( main::@10/(byte) printu::res#8 main::@11/(byte) printu::res#9 main::@12/(byte) printu::res#10 main::@13/(byte) printu::res#11 main::@14/(byte) printu::res#12 main::@15/(byte) printu::res#13 main::@16/(byte) printu::res#14 main::@17/(byte) printu::res#15 main::@18/(byte) printu::res#16 main::@19/(byte) printu::res#17 main::@2/(byte) printu::res#0 main::@20/(byte) printu::res#18 main::@21/(byte) printu::res#19 main::@3/(byte) printu::res#1 main::@4/(byte) printu::res#2 main::@5/(byte) printu::res#3 main::@6/(byte) printu::res#4 main::@7/(byte) printu::res#5 main::@8/(byte) printu::res#6 main::@9/(byte) printu::res#7 ) [ char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  [168] (byte) printu::b#20 ← phi( main::@10/(byte) printu::b#8 main::@11/(byte/signed byte/word/signed word) 55 main::@12/(byte) printu::b#10 main::@13/(byte) printu::b#11 main::@14/(byte) printu::b#12 main::@15/(byte/signed byte/word/signed word) 55 main::@16/(byte) printu::b#14 main::@17/(byte) printu::b#15 main::@18/(byte) printu::b#16 main::@19/(byte/signed byte/word/signed word) 55 main::@2/(byte) printu::b#0 main::@20/(byte) printu::b#18 main::@21/(byte) printu::b#19 main::@3/(byte/signed byte/word/signed word) 55 main::@4/(byte) printu::b#2 main::@5/(byte) printu::b#3 main::@6/(byte) printu::b#4 main::@7/(byte/signed byte/word/signed word) 55 main::@8/(byte) printu::b#6 main::@9/(byte) printu::b#7 ) [ char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  [168] (byte[]) printu::op#20 ← phi( main::@10/(const string) main::op8 main::@11/(const string) main::op9 main::@12/(const string) main::op10 main::@13/(const string) main::op11 main::@14/(const string) main::op12 main::@15/(const string) main::op13 main::@16/(const string) main::op14 main::@17/(const string) main::op15 main::@18/(const string) main::op16 main::@19/(const string) main::op17 main::@2/(const string) main::op main::@20/(const string) main::op18 main::@21/(const string) main::op19 main::@3/(const string) main::op1 main::@4/(const string) main::op2 main::@5/(const string) main::op3 main::@6/(const string) main::op4 main::@7/(const string) main::op5 main::@8/(const string) main::op6 main::@9/(const string) main::op7 ) [ char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  [168] (byte) printu::a#20 ← phi( main::@10/(byte) printu::a#8 main::@11/(byte) printu::a#9 main::@12/(byte) printu::a#10 main::@13/(byte) printu::a#11 main::@14/(byte) printu::a#12 main::@15/(byte) printu::a#13 main::@16/(byte) printu::a#14 main::@17/(byte) printu::a#15 main::@18/(byte) printu::a#16 main::@19/(byte) printu::a#17 main::@2/(byte) printu::a#0 main::@20/(byte) printu::a#18 main::@21/(byte) printu::a#19 main::@3/(byte) printu::a#1 main::@4/(byte) printu::a#2 main::@5/(byte) printu::a#3 main::@6/(byte) printu::a#4 main::@7/(byte) printu::a#5 main::@8/(byte) printu::a#6 main::@9/(byte) printu::a#7 ) [ char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  [168] (byte*) char_cursor#90 ← phi( main::@10/(byte*~) char_cursor#138 main::@11/(byte*) char_cursor#52 main::@12/(byte*) char_cursor#52 main::@13/(byte*) char_cursor#52 main::@14/(byte*~) char_cursor#142 main::@15/(byte*) char_cursor#52 main::@16/(byte*) char_cursor#52 main::@17/(byte*) char_cursor#52 main::@18/(byte*~) char_cursor#146 main::@19/(byte*) char_cursor#52 main::@2/(byte*) char_cursor#114 main::@20/(byte*) char_cursor#52 main::@21/(byte*) char_cursor#52 main::@3/(byte*) char_cursor#52 main::@4/(byte*) char_cursor#52 main::@5/(byte*) char_cursor#52 main::@6/(byte*~) char_cursor#154 main::@7/(byte*) char_cursor#52 main::@8/(byte*) char_cursor#52 main::@9/(byte*) char_cursor#52 ) [ char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#90 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  [169] call print_char param-assignment [ char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  to:printu::@1
printu::@1: scope:[printu]  from printu
  [170] (byte) print_byte::b#0 ← (byte) printu::a#20 [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] )
  [171] call print_byte param-assignment [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] )
  to:printu::@2
printu::@2: scope:[printu]  from printu::@1
  [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] )
  [173] call print_str param-assignment [ printu::b#20 printu::res#20 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
  to:printu::@3
printu::@3: scope:[printu]  from printu::@2
  [174] (byte) print_byte::b#1 ← (byte) printu::b#20 [ printu::res#20 print_byte::b#1 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] )
  [175] call print_byte param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  to:printu::@4
printu::@4: scope:[printu]  from printu::@3
  [176] phi() [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  [177] call print_char param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  to:printu::@5
printu::@5: scope:[printu]  from printu::@4
  [178] (byte) print_char::ch#4 ← (byte) printu::res#20 [ char_cursor#52 print_char::ch#4 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] )
  [179] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:printu::@return
printu::@return: scope:[printu]  from printu::@5
  [180] return  [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 printu printu::@4 printu::@5
  [181] (byte*) char_cursor#51 ← phi( print_byte/(byte*) char_cursor#89 print_byte::@1/(byte*) char_cursor#52 printu/(byte*) char_cursor#90 printu::@4/(byte*) char_cursor#52 printu::@5/(byte*) char_cursor#52 ) [ print_char::ch#5 char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] )
  [181] (byte) print_char::ch#5 ← phi( print_byte/(byte) print_char::ch#0 print_byte::@1/(byte) print_char::ch#1 printu/(byte) ' ' printu::@4/(byte) ' ' printu::@5/(byte) print_char::ch#4 ) [ print_char::ch#5 char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#5 char_cursor#51 ] )
  [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] )
  [183] (byte*) char_cursor#52 ← ++ (byte*) char_cursor#51 [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [184] return  [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  to:@return
print_byte: scope:[print_byte]  from printu::@1 printu::@3
  [185] (byte*) char_cursor#89 ← phi( printu::@1/(byte*) char_cursor#52 printu::@3/(byte*) char_cursor#2 ) [ char_cursor#89 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] )
  [185] (byte) print_byte::b#2 ← phi( printu::@1/(byte) print_byte::b#0 printu::@3/(byte) print_byte::b#1 ) [ char_cursor#89 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 ] )
  [186] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word) 4 [ char_cursor#89 print_byte::b#2 print_byte::$0 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] )
  [187] (byte) print_char::ch#0 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_char::ch#0 char_cursor#89 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] )
  [188] call print_char param-assignment [ char_cursor#52 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] )
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] )
  [190] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#52 print_char::ch#1 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] )
  [191] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [192] return  [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  to:@return
print_str: scope:[print_str]  from printu::@2
  [193] phi() [ char_cursor#52 print_str::str#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#52 print_str::str#1 ] )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [194] (byte*) char_cursor#2 ← phi( print_str/(byte*) char_cursor#52 print_str::@2/(byte*) char_cursor#1 ) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] )
  [194] (byte*) print_str::str#2 ← phi( print_str/(byte*) print_str::str#1 print_str::@2/(byte*) print_str::str#0 ) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] )
  [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] )
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [196] return  [ char_cursor#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] )
  [198] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#2 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] )
  [199] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] )
  to:print_str::@1
print_cls: scope:[print_cls]  from main
  [200] phi() [ ] ( main:2::print_cls:5 [ ] )
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [201] (byte*) print_cls::sc#2 ← phi( print_cls/((byte*))(word/signed word) 1024 print_cls::@1/(byte*) print_cls::sc#1 ) [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] )
  [203] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] )
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [205] return  [ ] ( main:2::print_cls:5 [ ] )
  to:@return

DOMINATORS
@begin dominated by  @begin 
@10 dominated by  @begin @10 
@end dominated by  @end @begin @10 
main dominated by  main @begin @10 
main::@1 dominated by  main main::@1 @begin @10 
main::@23 dominated by  main main::@1 @begin main::@23 @10 
main::@2 dominated by  main main::@1 main::@2 @begin @10 
main::@46 dominated by  main main::@46 main::@1 main::@2 @begin @10 
main::@24 dominated by  main main::@46 main::@1 main::@2 @begin main::@24 @10 
main::@3 dominated by  main main::@46 main::@1 main::@2 main::@3 @begin @10 
main::@47 dominated by  main main::@46 main::@47 main::@1 main::@2 main::@3 @begin @10 
main::@25 dominated by  main main::@46 main::@47 main::@1 main::@2 main::@3 @begin main::@25 @10 
main::@4 dominated by  main main::@46 main::@47 main::@1 main::@2 main::@3 main::@4 @begin @10 
main::@48 dominated by  main main::@46 main::@48 main::@47 main::@1 main::@2 main::@3 main::@4 @begin @10 
main::@26 dominated by  main main::@46 main::@48 main::@47 main::@1 main::@2 main::@3 main::@4 @begin main::@26 @10 
main::@5 dominated by  main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@3 main::@4 @begin @10 
main::@49 dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@3 main::@4 @begin @10 
main::@50 dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@3 main::@4 @begin @10 main::@50 
main::@27 dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@3 main::@4 @begin main::@27 @10 main::@50 
main::@6 dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@50 
main::@51 dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@51 main::@50 
main::@28 dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@28 @10 main::@51 main::@50 
main::@7 dominated by  main::@7 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@51 main::@50 
main::@52 dominated by  main::@7 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@52 main::@51 main::@50 
main::@29 dominated by  main::@7 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@29 @10 main::@52 main::@51 main::@50 
main::@8 dominated by  main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@52 main::@51 main::@50 
main::@53 dominated by  main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@51 main::@50 
main::@30 dominated by  main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 main::@30 @begin @10 main::@53 main::@52 main::@51 main::@50 
main::@9 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@51 main::@50 
main::@54 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@54 main::@51 main::@50 
main::@55 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@54 main::@51 main::@50 
main::@31 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 main::@31 @begin @10 main::@53 main::@52 main::@55 main::@54 main::@51 main::@50 
main::@10 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@54 main::@10 main::@51 main::@50 
main::@56 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@54 main::@10 main::@51 main::@50 main::@56 
main::@32 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@32 @10 main::@53 main::@52 main::@55 main::@54 main::@10 main::@51 main::@50 main::@56 
main::@11 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@56 
main::@57 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@56 
main::@33 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 main::@33 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@56 
main::@12 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@56 main::@12 
main::@58 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@56 main::@12 main::@58 
main::@34 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@34 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@56 main::@12 main::@58 
main::@13 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@58 
main::@59 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@58 
main::@60 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@60 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@58 
main::@35 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@35 main::@60 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@58 
main::@14 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@60 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@58 main::@14 
main::@61 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@60 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@58 main::@14 
main::@36 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@36 main::@60 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@58 main::@14 
main::@15 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@60 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@62 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@37 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@37 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@16 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@63 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@63 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@38 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@38 main::@63 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@17 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@63 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@64 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@65 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@65 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@39 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@39 main::@64 main::@63 main::@65 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@18 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@65 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@66 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@40 dominated by  main::@9 main::@7 main::@8 main::@40 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@19 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@67 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 main::@67 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@41 dominated by  main::@9 main::@41 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 main::@67 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@20 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@20 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 main::@67 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@68 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@20 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 main::@68 main::@67 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@42 dominated by  main::@9 main::@42 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@20 main::@63 main::@66 main::@65 main::@60 main::@62 main::@61 main::@68 main::@67 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@21 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@20 main::@63 main::@66 main::@65 main::@21 main::@60 main::@62 main::@61 main::@68 main::@67 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@69 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@64 main::@20 main::@63 main::@66 main::@65 main::@21 main::@60 main::@62 main::@61 main::@68 main::@67 main::@69 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@70 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@70 main::@64 main::@20 main::@63 main::@66 main::@65 main::@21 main::@60 main::@62 main::@61 main::@68 main::@67 main::@69 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@22 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@70 main::@64 main::@20 main::@63 main::@66 main::@22 main::@65 main::@21 main::@60 main::@62 main::@61 main::@68 main::@67 main::@69 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@return dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@70 main::@64 main::@20 main::@return main::@63 main::@66 main::@22 main::@65 main::@21 main::@60 main::@62 main::@61 main::@68 main::@67 main::@69 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
main::@71 dominated by  main::@9 main::@7 main::@8 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@6 main::@3 main::@4 @begin main::@71 main::@70 main::@64 main::@20 main::@63 main::@66 main::@65 main::@21 main::@60 main::@62 main::@61 main::@68 main::@67 main::@69 @10 main::@53 main::@52 main::@55 main::@11 main::@54 main::@10 main::@51 main::@50 main::@17 main::@16 main::@19 main::@18 main::@57 main::@13 main::@56 main::@12 main::@59 main::@15 main::@58 main::@14 
print_ln dominated by  main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@3 main::@4 @begin print_ln @10 
print_ln::@1 dominated by  print_ln::@1 main::@49 main main::@46 main::@48 main::@47 main::@1 main::@2 main::@5 main::@3 main::@4 @begin print_ln @10 
print_ln::@return dominated by  print_ln::@1 main::@49 main main::@46 main::@48 main::@47 print_ln::@return main::@1 main::@2 main::@5 main::@3 main::@4 @begin print_ln @10 
printu dominated by  main main::@1 main::@2 @begin @10 printu 
printu::@1 dominated by  main main::@1 main::@2 @begin @10 printu::@1 printu 
printu::@2 dominated by  main main::@1 main::@2 @begin @10 printu::@1 printu::@2 printu 
printu::@3 dominated by  main main::@1 main::@2 @begin @10 printu::@1 printu::@3 printu::@2 printu 
printu::@4 dominated by  main main::@1 main::@2 @begin @10 printu::@1 printu::@3 printu::@2 printu::@4 printu 
printu::@5 dominated by  main main::@1 main::@2 @begin @10 printu::@1 printu::@3 printu::@2 printu::@5 printu::@4 printu 
printu::@return dominated by  main main::@1 main::@2 printu::@return @begin @10 printu::@1 printu::@3 printu::@2 printu::@5 printu::@4 printu 
print_char dominated by  main print_char main::@1 main::@2 @begin @10 printu 
print_char::@return dominated by  main print_char main::@1 main::@2 print_char::@return @begin @10 printu 
print_byte dominated by  main main::@1 main::@2 @begin @10 print_byte printu::@1 printu 
print_byte::@1 dominated by  main main::@1 main::@2 @begin print_byte::@1 @10 print_byte printu::@1 printu 
print_byte::@return dominated by  main main::@1 main::@2 @begin print_byte::@return print_byte::@1 @10 print_byte printu::@1 printu 
print_str dominated by  main main::@1 main::@2 @begin @10 print_str printu::@1 printu::@2 printu 
print_str::@1 dominated by  main main::@1 main::@2 @begin print_str::@1 @10 print_str printu::@1 printu::@2 printu 
print_str::@return dominated by  main main::@1 main::@2 @begin print_str::@return print_str::@1 @10 print_str printu::@1 printu::@2 printu 
print_str::@2 dominated by  main main::@1 main::@2 @begin print_str::@1 print_str::@2 @10 print_str printu::@1 printu::@2 printu 
print_cls dominated by  main @begin @10 print_cls 
print_cls::@1 dominated by  main @begin @10 print_cls::@1 print_cls 
print_cls::@return dominated by  main @begin print_cls::@return @10 print_cls::@1 print_cls 

NATURAL LOOPS
Found back edge: Loop head: main::@22 tails: main::@22 blocks: null
Found back edge: Loop head: main::@1 tails: main::@71 blocks: null
Found back edge: Loop head: print_ln::@1 tails: print_ln::@1 blocks: null
Found back edge: Loop head: print_str::@1 tails: print_str::@2 blocks: null
Found back edge: Loop head: print_cls::@1 tails: print_cls::@1 blocks: null
Populated: Loop head: main::@22 tails: main::@22 blocks: main::@22 
Populated: Loop head: main::@1 tails: main::@71 blocks: main::@71 main::@70 main::@69 main::@21 main::@42 main::@68 main::@20 main::@41 main::@67 main::@19 main::@40 main::@66 main::@18 main::@39 main::@65 main::@64 main::@17 main::@38 main::@63 main::@16 main::@37 main::@62 main::@15 main::@36 main::@61 main::@14 main::@35 main::@60 main::@59 main::@13 main::@34 main::@58 main::@12 main::@33 main::@57 main::@11 main::@32 main::@56 main::@10 main::@31 main::@55 main::@54 main::@9 main::@30 main::@53 main::@8 main::@29 main::@52 main::@7 main::@28 main::@51 main::@6 main::@27 main::@50 main::@49 main::@5 main::@26 main::@48 main::@4 main::@25 main::@47 main::@3 main::@24 main::@46 main::@2 main::@1 main::@23 
Populated: Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Populated: Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1 
Populated: Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 
Loop head: main::@22 tails: main::@22 blocks: main::@22 
Loop head: main::@1 tails: main::@71 blocks: main::@71 main::@70 main::@69 main::@21 main::@42 main::@68 main::@20 main::@41 main::@67 main::@19 main::@40 main::@66 main::@18 main::@39 main::@65 main::@64 main::@17 main::@38 main::@63 main::@16 main::@37 main::@62 main::@15 main::@36 main::@61 main::@14 main::@35 main::@60 main::@59 main::@13 main::@34 main::@58 main::@12 main::@33 main::@57 main::@11 main::@32 main::@56 main::@10 main::@31 main::@55 main::@54 main::@9 main::@30 main::@53 main::@8 main::@29 main::@52 main::@7 main::@28 main::@51 main::@6 main::@27 main::@50 main::@49 main::@5 main::@26 main::@48 main::@4 main::@25 main::@47 main::@3 main::@24 main::@46 main::@2 main::@1 main::@23 
Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1 
Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 

NATURAL LOOPS WITH DEPTH
Found 0 loops in scope []
Found 2 loops in scope [main]
  Loop head: main::@22 tails: main::@22 blocks: main::@22 
  Loop head: main::@1 tails: main::@71 blocks: main::@71 main::@70 main::@69 main::@21 main::@42 main::@68 main::@20 main::@41 main::@67 main::@19 main::@40 main::@66 main::@18 main::@39 main::@65 main::@64 main::@17 main::@38 main::@63 main::@16 main::@37 main::@62 main::@15 main::@36 main::@61 main::@14 main::@35 main::@60 main::@59 main::@13 main::@34 main::@58 main::@12 main::@33 main::@57 main::@11 main::@32 main::@56 main::@10 main::@31 main::@55 main::@54 main::@9 main::@30 main::@53 main::@8 main::@29 main::@52 main::@7 main::@28 main::@51 main::@6 main::@27 main::@50 main::@49 main::@5 main::@26 main::@48 main::@4 main::@25 main::@47 main::@3 main::@24 main::@46 main::@2 main::@1 main::@23 
Found 1 loops in scope [print_cls]
  Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1 
Found 0 loops in scope [printu]
Found 1 loops in scope [print_ln]
  Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1 
Found 0 loops in scope [print_char]
Found 0 loops in scope [print_byte]
Found 1 loops in scope [print_str]
  Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1 
Loop head: main::@22 tails: main::@22 blocks: main::@22  depth: 1
Loop head: main::@1 tails: main::@71 blocks: main::@71 main::@70 main::@69 main::@21 main::@42 main::@68 main::@20 main::@41 main::@67 main::@19 main::@40 main::@66 main::@18 main::@39 main::@65 main::@64 main::@17 main::@38 main::@63 main::@16 main::@37 main::@62 main::@15 main::@36 main::@61 main::@14 main::@35 main::@60 main::@59 main::@13 main::@34 main::@58 main::@12 main::@33 main::@57 main::@11 main::@32 main::@56 main::@10 main::@31 main::@55 main::@54 main::@9 main::@30 main::@53 main::@8 main::@29 main::@52 main::@7 main::@28 main::@51 main::@6 main::@27 main::@50 main::@49 main::@5 main::@26 main::@48 main::@4 main::@25 main::@47 main::@3 main::@24 main::@46 main::@2 main::@1 main::@23  depth: 1
Loop head: print_ln::@1 tails: print_ln::@1 blocks: print_ln::@1  depth: 2
Loop head: print_str::@1 tails: print_str::@2 blocks: print_str::@2 print_str::@1  depth: 1
Loop head: print_cls::@1 tails: print_cls::@1 blocks: print_cls::@1  depth: 1


VARIABLE REGISTER WEIGHTS
(byte*) char_cursor
(byte*) char_cursor#1 11.0
(byte*) char_cursor#114 2.75
(byte*~) char_cursor#137 22.0
(byte*~) char_cursor#138 22.0
(byte*~) char_cursor#142 22.0
(byte*~) char_cursor#146 22.0
(byte*~) char_cursor#154 22.0
(byte*) char_cursor#2 6.166666666666666
(byte*) char_cursor#51 7.0
(byte*) char_cursor#52 2.106060606060605
(byte*) char_cursor#89 2.0
(byte*) char_cursor#90 222.0
(byte*) line_cursor
(byte*) line_cursor#1 3.2265625
(byte*) line_cursor#10 204.0
(byte*) line_cursor#20 57.0
(byte*) line_cursor#21 0.7333333333333333
(void()) main()
(byte) main::a
(byte) main::a#1 5.5
(byte) main::a#10 3.860927152317884
(byte) main::b
(byte) main::b#0 0.9758064516129035
(byte[5]) main::cs
(byte) main::i
(byte) main::i#1 11.0
(byte) main::i#10 0.8684210526315792
(byte) main::r
(byte) main::r#40 3.6666666666666665
(byte) main::r#41 5.5
(byte) main::r#42 3.6666666666666665
(byte) main::r#43 3.6666666666666665
(byte) main::r#44 3.6666666666666665
(byte) main::r#45 5.5
(byte) main::r#46 3.6666666666666665
(byte) main::r#47 3.6666666666666665
(byte) main::r#48 3.6666666666666665
(byte) main::r#49 5.5
(byte) main::r#50 3.6666666666666665
(byte) main::r#51 3.6666666666666665
(byte) main::r#52 3.6666666666666665
(byte) main::r#53 5.5
(byte) main::r#54 3.6666666666666665
(byte) main::r#55 3.6666666666666665
(byte) main::r#56 3.6666666666666665
(byte) main::r#57 5.5
(byte) main::r#58 3.6666666666666665
(byte) main::r#59 3.6666666666666665
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 4.0
(byte~) print_byte::$2 4.0
(byte) print_byte::b
(byte) print_byte::b#0 4.0
(byte) print_byte::b#1 4.0
(byte) print_byte::b#2 2.0
(byte[]) print_byte::hextab
(void()) print_char((byte) print_char::ch)
(byte) print_char::ch
(byte) print_char::ch#0 4.0
(byte) print_char::ch#1 4.0
(byte) print_char::ch#4 4.0
(byte) print_char::ch#5 8.0
(void()) print_cls()
(byte*) print_cls::sc
(byte*) print_cls::sc#1 16.5
(byte*) print_cls::sc#2 16.5
(void()) print_ln()
(void()) print_str((byte*) print_str::str)
(byte*) print_str::str
(byte*) print_str::str#0 22.0
(byte*) print_str::str#1 2.0
(byte*) print_str::str#2 11.5
(void()) printu((byte) printu::a , (byte[]) printu::op , (byte) printu::b , (byte) printu::res)
(byte) printu::a
(byte) printu::a#0 7.333333333333333
(byte) printu::a#1 11.0
(byte) printu::a#10 7.333333333333333
(byte) printu::a#11 7.333333333333333
(byte) printu::a#12 5.5
(byte) printu::a#13 11.0
(byte) printu::a#14 7.333333333333333
(byte) printu::a#15 7.333333333333333
(byte) printu::a#16 5.5
(byte) printu::a#17 11.0
(byte) printu::a#18 7.333333333333333
(byte) printu::a#19 7.333333333333333
(byte) printu::a#2 7.333333333333333
(byte) printu::a#20 111.0
(byte) printu::a#3 7.333333333333333
(byte) printu::a#4 5.5
(byte) printu::a#5 11.0
(byte) printu::a#6 7.333333333333333
(byte) printu::a#7 7.333333333333333
(byte) printu::a#8 5.5
(byte) printu::a#9 11.0
(byte) printu::b
(byte) printu::b#0 11.0
(byte) printu::b#10 11.0
(byte) printu::b#11 11.0
(byte) printu::b#12 7.333333333333333
(byte) printu::b#14 11.0
(byte) printu::b#15 11.0
(byte) printu::b#16 7.333333333333333
(byte) printu::b#18 11.0
(byte) printu::b#19 11.0
(byte) printu::b#2 11.0
(byte) printu::b#20 27.833333333333325
(byte) printu::b#3 11.0
(byte) printu::b#4 7.333333333333333
(byte) printu::b#6 11.0
(byte) printu::b#7 11.0
(byte) printu::b#8 7.333333333333333
(byte[]) printu::op
(byte[]) printu::op#20 0.5
(byte) printu::res
(byte) printu::res#0 22.0
(byte) printu::res#1 22.0
(byte) printu::res#10 22.0
(byte) printu::res#11 22.0
(byte) printu::res#12 11.0
(byte) printu::res#13 22.0
(byte) printu::res#14 22.0
(byte) printu::res#15 22.0
(byte) printu::res#16 11.0
(byte) printu::res#17 22.0
(byte) printu::res#18 22.0
(byte) printu::res#19 22.0
(byte) printu::res#2 22.0
(byte) printu::res#20 22.200000000000003
(byte) printu::res#3 22.0
(byte) printu::res#4 11.0
(byte) printu::res#5 22.0
(byte) printu::res#6 22.0
(byte) printu::res#7 22.0
(byte) printu::res#8 11.0
(byte) printu::res#9 22.0

Initial phi equivalence classes
[ main::a#10 main::a#1 ]
[ main::i#10 main::i#1 ]
[ main::r#40 ]
[ main::r#41 ]
[ main::r#42 ]
[ main::r#43 ]
[ main::r#44 ]
[ main::r#45 ]
[ main::r#46 ]
[ main::r#47 ]
[ main::r#48 ]
[ main::r#49 ]
[ main::r#50 ]
[ main::r#51 ]
[ main::r#52 ]
[ main::r#53 ]
[ main::r#54 ]
[ main::r#55 ]
[ main::r#56 ]
[ main::r#57 ]
[ main::r#58 ]
[ main::r#59 ]
[ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ]
[ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
[ printu::op#20 ]
[ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
[ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
[ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ]
[ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ]
[ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
[ print_str::str#2 print_str::str#1 print_str::str#0 ]
[ print_cls::sc#2 print_cls::sc#1 ]
Added variable main::b#0 to zero page equivalence class [ main::b#0 ]
Added variable print_byte::$0 to zero page equivalence class [ print_byte::$0 ]
Added variable print_byte::$2 to zero page equivalence class [ print_byte::$2 ]
Complete equivalence classes
[ main::a#10 main::a#1 ]
[ main::i#10 main::i#1 ]
[ main::r#40 ]
[ main::r#41 ]
[ main::r#42 ]
[ main::r#43 ]
[ main::r#44 ]
[ main::r#45 ]
[ main::r#46 ]
[ main::r#47 ]
[ main::r#48 ]
[ main::r#49 ]
[ main::r#50 ]
[ main::r#51 ]
[ main::r#52 ]
[ main::r#53 ]
[ main::r#54 ]
[ main::r#55 ]
[ main::r#56 ]
[ main::r#57 ]
[ main::r#58 ]
[ main::r#59 ]
[ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ]
[ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
[ printu::op#20 ]
[ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
[ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
[ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ]
[ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ]
[ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
[ print_str::str#2 print_str::str#1 print_str::str#0 ]
[ print_cls::sc#2 print_cls::sc#1 ]
[ main::b#0 ]
[ print_byte::$0 ]
[ print_byte::$2 ]
Allocated zp ZP_BYTE:2 [ main::a#10 main::a#1 ]
Allocated zp ZP_BYTE:3 [ main::i#10 main::i#1 ]
Allocated zp ZP_BYTE:4 [ main::r#40 ]
Allocated zp ZP_BYTE:5 [ main::r#41 ]
Allocated zp ZP_BYTE:6 [ main::r#42 ]
Allocated zp ZP_BYTE:7 [ main::r#43 ]
Allocated zp ZP_BYTE:8 [ main::r#44 ]
Allocated zp ZP_BYTE:9 [ main::r#45 ]
Allocated zp ZP_BYTE:10 [ main::r#46 ]
Allocated zp ZP_BYTE:11 [ main::r#47 ]
Allocated zp ZP_BYTE:12 [ main::r#48 ]
Allocated zp ZP_BYTE:13 [ main::r#49 ]
Allocated zp ZP_BYTE:14 [ main::r#50 ]
Allocated zp ZP_BYTE:15 [ main::r#51 ]
Allocated zp ZP_BYTE:16 [ main::r#52 ]
Allocated zp ZP_BYTE:17 [ main::r#53 ]
Allocated zp ZP_BYTE:18 [ main::r#54 ]
Allocated zp ZP_BYTE:19 [ main::r#55 ]
Allocated zp ZP_BYTE:20 [ main::r#56 ]
Allocated zp ZP_BYTE:21 [ main::r#57 ]
Allocated zp ZP_BYTE:22 [ main::r#58 ]
Allocated zp ZP_BYTE:23 [ main::r#59 ]
Allocated zp ZP_WORD:24 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ]
Allocated zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Allocated zp ZP_WORD:27 [ printu::op#20 ]
Allocated zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Allocated zp ZP_BYTE:30 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Allocated zp ZP_BYTE:31 [ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ]
Allocated zp ZP_WORD:32 [ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ]
Allocated zp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
Allocated zp ZP_WORD:35 [ print_str::str#2 print_str::str#1 print_str::str#0 ]
Allocated zp ZP_WORD:37 [ print_cls::sc#2 print_cls::sc#1 ]
Allocated zp ZP_BYTE:39 [ main::b#0 ]
Allocated zp ZP_BYTE:40 [ print_byte::$0 ]
Allocated zp ZP_BYTE:41 [ print_byte::$2 ]

INITIAL ASM
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label char_cursor = $20
  .label line_cursor = $18
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
b10_from_bbegin:
  jmp b10
//SEG4 @10
b10:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @10 to main [phi:@10->main]
main_from_b10:
  jsr main
//SEG7 [3] phi from @10 to @end [phi:@10->@end]
bend_from_b10:
  jmp bend
//SEG8 @end
bend:
//SEG9 main
main: {
    .label b = $27
    .label a = 2
    .label i = 3
    .label r = 4
    .label r_41 = 5
    .label r_42 = 6
    .label r_43 = 7
    .label r_44 = 8
    .label r_45 = 9
    .label r_46 = $a
    .label r_47 = $b
    .label r_48 = $c
    .label r_49 = $d
    .label r_50 = $e
    .label r_51 = $f
    .label r_52 = $10
    .label r_53 = $11
    .label r_54 = $12
    .label r_55 = $13
    .label r_56 = $14
    .label r_57 = $15
    .label r_58 = $16
    .label r_59 = $17
  //SEG10 [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  //SEG11 [200] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
  //SEG12 [6] phi from main to main::@1 [phi:main->main::@1]
  b1_from_main:
  //SEG13 [6] phi (byte*) line_cursor#21 = ((byte*))(word/signed word) 1024 [phi:main->main::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
  //SEG14 [6] phi (byte) main::i#10 = (byte/signed byte/word/signed word) 0 [phi:main->main::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta i
  //SEG15 [6] phi (byte*) char_cursor#114 = ((byte*))(word/signed word) 1024 [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG16 [6] phi (byte) main::a#10 = (byte/signed byte/word/signed word) 7 [phi:main->main::@1#3] -- vbuz1=vbuc1 
    lda #7
    sta a
    jmp b1
  //SEG17 main::@1
  b1:
  //SEG18 [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) -- vbuz1=vbuc1_minus_vbuz2 
    lda #$ce
    sec
    sbc a
    sta b
  //SEG19 [8] if((byte) main::a#10>=(byte) main::b#0) goto main::@2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) -- vbuz1_ge_vbuz2_then_la1 
    lda a
    cmp b
    bcs b2_from_b1
  //SEG20 [9] phi from main::@1 to main::@23 [phi:main::@1->main::@23]
  b23_from_b1:
    jmp b23
  //SEG21 main::@23
  b23:
  //SEG22 [10] phi from main::@23 to main::@2 [phi:main::@23->main::@2]
  b2_from_b23:
  //SEG23 [10] phi (byte) main::r#40 = (byte) '+' [phi:main::@23->main::@2#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r
    jmp b2
  //SEG24 [10] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b2_from_b1:
  //SEG25 [10] phi (byte) main::r#40 = (byte) '-' [phi:main::@1->main::@2#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r
    jmp b2
  //SEG26 main::@2
  b2:
  //SEG27 [11] (byte) printu::a#0 ← (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG28 [12] (byte) printu::b#0 ← (byte) main::b#0 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG29 [13] (byte) printu::res#0 ← (byte) main::r#40 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] ) -- vbuz1=vbuz2 
    lda r
    sta printu.res
  //SEG30 [14] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG31 [168] phi from main::@2 to printu [phi:main::@2->printu]
  printu_from_b2:
  //SEG32 [168] phi (byte) printu::res#20 = (byte) printu::res#0 [phi:main::@2->printu#0] -- register_copy 
  //SEG33 [168] phi (byte) printu::b#20 = (byte) printu::b#0 [phi:main::@2->printu#1] -- register_copy 
  //SEG34 [168] phi (byte[]) printu::op#20 = (const string) main::op [phi:main::@2->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta printu.op
    lda #>op
    sta printu.op+1
  //SEG35 [168] phi (byte) printu::a#20 = (byte) printu::a#0 [phi:main::@2->printu#3] -- register_copy 
  //SEG36 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#114 [phi:main::@2->printu#4] -- register_copy 
    jsr printu
    jmp b46
  //SEG37 main::@46
  b46:
  //SEG38 [15] if((byte) main::a#10>=(byte/signed byte/word/signed word) 55) goto main::@3 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_vbuc1_then_la1 
    lda a
    cmp #$37
    bcs b3_from_b46
  //SEG39 [16] phi from main::@46 to main::@24 [phi:main::@46->main::@24]
  b24_from_b46:
    jmp b24
  //SEG40 main::@24
  b24:
  //SEG41 [17] phi from main::@24 to main::@3 [phi:main::@24->main::@3]
  b3_from_b24:
  //SEG42 [17] phi (byte) main::r#41 = (byte) '+' [phi:main::@24->main::@3#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_41
    jmp b3
  //SEG43 [17] phi from main::@46 to main::@3 [phi:main::@46->main::@3]
  b3_from_b46:
  //SEG44 [17] phi (byte) main::r#41 = (byte) '-' [phi:main::@46->main::@3#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_41
    jmp b3
  //SEG45 main::@3
  b3:
  //SEG46 [18] (byte) printu::a#1 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG47 [19] (byte) printu::res#1 ← (byte) main::r#41 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_41
    sta printu.res
  //SEG48 [20] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG49 [168] phi from main::@3 to printu [phi:main::@3->printu]
  printu_from_b3:
  //SEG50 [168] phi (byte) printu::res#20 = (byte) printu::res#1 [phi:main::@3->printu#0] -- register_copy 
  //SEG51 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@3->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG52 [168] phi (byte[]) printu::op#20 = (const string) main::op1 [phi:main::@3->printu#2] -- pbuz1=pbuc1 
    lda #<op1
    sta printu.op
    lda #>op1
    sta printu.op+1
  //SEG53 [168] phi (byte) printu::a#20 = (byte) printu::a#1 [phi:main::@3->printu#3] -- register_copy 
  //SEG54 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@3->printu#4] -- register_copy 
    jsr printu
    jmp b47
  //SEG55 main::@47
  b47:
  //SEG56 [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bcs b4_from_b47
  //SEG57 [22] phi from main::@47 to main::@25 [phi:main::@47->main::@25]
  b25_from_b47:
    jmp b25
  //SEG58 main::@25
  b25:
  //SEG59 [23] phi from main::@25 to main::@4 [phi:main::@25->main::@4]
  b4_from_b25:
  //SEG60 [23] phi (byte) main::r#42 = (byte) '+' [phi:main::@25->main::@4#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_42
    jmp b4
  //SEG61 [23] phi from main::@47 to main::@4 [phi:main::@47->main::@4]
  b4_from_b47:
  //SEG62 [23] phi (byte) main::r#42 = (byte) '-' [phi:main::@47->main::@4#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_42
    jmp b4
  //SEG63 main::@4
  b4:
  //SEG64 [24] (byte) printu::a#2 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG65 [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG66 [26] (byte) printu::res#2 ← (byte) main::r#42 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_42
    sta printu.res
  //SEG67 [27] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG68 [168] phi from main::@4 to printu [phi:main::@4->printu]
  printu_from_b4:
  //SEG69 [168] phi (byte) printu::res#20 = (byte) printu::res#2 [phi:main::@4->printu#0] -- register_copy 
  //SEG70 [168] phi (byte) printu::b#20 = (byte) printu::b#2 [phi:main::@4->printu#1] -- register_copy 
  //SEG71 [168] phi (byte[]) printu::op#20 = (const string) main::op2 [phi:main::@4->printu#2] -- pbuz1=pbuc1 
    lda #<op2
    sta printu.op
    lda #>op2
    sta printu.op+1
  //SEG72 [168] phi (byte) printu::a#20 = (byte) printu::a#2 [phi:main::@4->printu#3] -- register_copy 
  //SEG73 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@4->printu#4] -- register_copy 
    jsr printu
    jmp b48
  //SEG74 main::@48
  b48:
  //SEG75 [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_vbuz1_then_la1 
    lda a
    cmp a
    bcs b5_from_b48
  //SEG76 [29] phi from main::@48 to main::@26 [phi:main::@48->main::@26]
  b26_from_b48:
    jmp b26
  //SEG77 main::@26
  b26:
  //SEG78 [30] phi from main::@26 to main::@5 [phi:main::@26->main::@5]
  b5_from_b26:
  //SEG79 [30] phi (byte) main::r#43 = (byte) '+' [phi:main::@26->main::@5#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_43
    jmp b5
  //SEG80 [30] phi from main::@48 to main::@5 [phi:main::@48->main::@5]
  b5_from_b48:
  //SEG81 [30] phi (byte) main::r#43 = (byte) '-' [phi:main::@48->main::@5#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_43
    jmp b5
  //SEG82 main::@5
  b5:
  //SEG83 [31] (byte) printu::a#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG84 [32] (byte) printu::b#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG85 [33] (byte) printu::res#3 ← (byte) main::r#43 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_43
    sta printu.res
  //SEG86 [34] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG87 [168] phi from main::@5 to printu [phi:main::@5->printu]
  printu_from_b5:
  //SEG88 [168] phi (byte) printu::res#20 = (byte) printu::res#3 [phi:main::@5->printu#0] -- register_copy 
  //SEG89 [168] phi (byte) printu::b#20 = (byte) printu::b#3 [phi:main::@5->printu#1] -- register_copy 
  //SEG90 [168] phi (byte[]) printu::op#20 = (const string) main::op3 [phi:main::@5->printu#2] -- pbuz1=pbuc1 
    lda #<op3
    sta printu.op
    lda #>op3
    sta printu.op+1
  //SEG91 [168] phi (byte) printu::a#20 = (byte) printu::a#3 [phi:main::@5->printu#3] -- register_copy 
  //SEG92 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@5->printu#4] -- register_copy 
    jsr printu
  //SEG93 [35] phi from main::@5 to main::@49 [phi:main::@5->main::@49]
  b49_from_b5:
    jmp b49
  //SEG94 main::@49
  b49:
  //SEG95 [36] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG96 [163] phi from main::@49 to print_ln [phi:main::@49->print_ln]
  print_ln_from_b49:
  //SEG97 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#21 [phi:main::@49->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b50
  //SEG98 main::@50
  b50:
  //SEG99 [37] if((byte) main::a#10<=(byte) main::b#0) goto main::@6 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_le_vbuz2_then_la1 
    lda b
    cmp a
    bcs b6_from_b50
  //SEG100 [38] phi from main::@50 to main::@27 [phi:main::@50->main::@27]
  b27_from_b50:
    jmp b27
  //SEG101 main::@27
  b27:
  //SEG102 [39] phi from main::@27 to main::@6 [phi:main::@27->main::@6]
  b6_from_b27:
  //SEG103 [39] phi (byte) main::r#44 = (byte) '+' [phi:main::@27->main::@6#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_44
    jmp b6
  //SEG104 [39] phi from main::@50 to main::@6 [phi:main::@50->main::@6]
  b6_from_b50:
  //SEG105 [39] phi (byte) main::r#44 = (byte) '-' [phi:main::@50->main::@6#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_44
    jmp b6
  //SEG106 main::@6
  b6:
  //SEG107 [40] (byte) printu::a#4 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG108 [41] (byte) printu::b#4 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG109 [42] (byte) printu::res#4 ← (byte) main::r#44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] ) -- vbuz1=vbuz2 
    lda r_44
    sta printu.res
  //SEG110 [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG111 [44] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG112 [168] phi from main::@6 to printu [phi:main::@6->printu]
  printu_from_b6:
  //SEG113 [168] phi (byte) printu::res#20 = (byte) printu::res#4 [phi:main::@6->printu#0] -- register_copy 
  //SEG114 [168] phi (byte) printu::b#20 = (byte) printu::b#4 [phi:main::@6->printu#1] -- register_copy 
  //SEG115 [168] phi (byte[]) printu::op#20 = (const string) main::op4 [phi:main::@6->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta printu.op
    lda #>op4
    sta printu.op+1
  //SEG116 [168] phi (byte) printu::a#20 = (byte) printu::a#4 [phi:main::@6->printu#3] -- register_copy 
  //SEG117 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#154 [phi:main::@6->printu#4] -- register_copy 
    jsr printu
    jmp b51
  //SEG118 main::@51
  b51:
  //SEG119 [45] if((byte) main::a#10<=(byte/signed byte/word/signed word) 55) goto main::@7 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_vbuc1_then_la1 
    lda #$37
    cmp a
    bcs b7_from_b51
  //SEG120 [46] phi from main::@51 to main::@28 [phi:main::@51->main::@28]
  b28_from_b51:
    jmp b28
  //SEG121 main::@28
  b28:
  //SEG122 [47] phi from main::@28 to main::@7 [phi:main::@28->main::@7]
  b7_from_b28:
  //SEG123 [47] phi (byte) main::r#45 = (byte) '+' [phi:main::@28->main::@7#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_45
    jmp b7
  //SEG124 [47] phi from main::@51 to main::@7 [phi:main::@51->main::@7]
  b7_from_b51:
  //SEG125 [47] phi (byte) main::r#45 = (byte) '-' [phi:main::@51->main::@7#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_45
    jmp b7
  //SEG126 main::@7
  b7:
  //SEG127 [48] (byte) printu::a#5 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG128 [49] (byte) printu::res#5 ← (byte) main::r#45 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_45
    sta printu.res
  //SEG129 [50] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG130 [168] phi from main::@7 to printu [phi:main::@7->printu]
  printu_from_b7:
  //SEG131 [168] phi (byte) printu::res#20 = (byte) printu::res#5 [phi:main::@7->printu#0] -- register_copy 
  //SEG132 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@7->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG133 [168] phi (byte[]) printu::op#20 = (const string) main::op5 [phi:main::@7->printu#2] -- pbuz1=pbuc1 
    lda #<op5
    sta printu.op
    lda #>op5
    sta printu.op+1
  //SEG134 [168] phi (byte) printu::a#20 = (byte) printu::a#5 [phi:main::@7->printu#3] -- register_copy 
  //SEG135 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@7->printu#4] -- register_copy 
    jsr printu
    jmp b52
  //SEG136 main::@52
  b52:
  //SEG137 [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_pbuc1_derefidx_vbuz2_then_la1 
    ldy i
    lda cs,y
    cmp a
    bcs b8_from_b52
  //SEG138 [52] phi from main::@52 to main::@29 [phi:main::@52->main::@29]
  b29_from_b52:
    jmp b29
  //SEG139 main::@29
  b29:
  //SEG140 [53] phi from main::@29 to main::@8 [phi:main::@29->main::@8]
  b8_from_b29:
  //SEG141 [53] phi (byte) main::r#46 = (byte) '+' [phi:main::@29->main::@8#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_46
    jmp b8
  //SEG142 [53] phi from main::@52 to main::@8 [phi:main::@52->main::@8]
  b8_from_b52:
  //SEG143 [53] phi (byte) main::r#46 = (byte) '-' [phi:main::@52->main::@8#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_46
    jmp b8
  //SEG144 main::@8
  b8:
  //SEG145 [54] (byte) printu::a#6 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG146 [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG147 [56] (byte) printu::res#6 ← (byte) main::r#46 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_46
    sta printu.res
  //SEG148 [57] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG149 [168] phi from main::@8 to printu [phi:main::@8->printu]
  printu_from_b8:
  //SEG150 [168] phi (byte) printu::res#20 = (byte) printu::res#6 [phi:main::@8->printu#0] -- register_copy 
  //SEG151 [168] phi (byte) printu::b#20 = (byte) printu::b#6 [phi:main::@8->printu#1] -- register_copy 
  //SEG152 [168] phi (byte[]) printu::op#20 = (const string) main::op6 [phi:main::@8->printu#2] -- pbuz1=pbuc1 
    lda #<op6
    sta printu.op
    lda #>op6
    sta printu.op+1
  //SEG153 [168] phi (byte) printu::a#20 = (byte) printu::a#6 [phi:main::@8->printu#3] -- register_copy 
  //SEG154 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@8->printu#4] -- register_copy 
    jsr printu
    jmp b53
  //SEG155 main::@53
  b53:
  //SEG156 [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_vbuz1_then_la1 
    lda a
    cmp a
    bcs b9_from_b53
  //SEG157 [59] phi from main::@53 to main::@30 [phi:main::@53->main::@30]
  b30_from_b53:
    jmp b30
  //SEG158 main::@30
  b30:
  //SEG159 [60] phi from main::@30 to main::@9 [phi:main::@30->main::@9]
  b9_from_b30:
  //SEG160 [60] phi (byte) main::r#47 = (byte) '+' [phi:main::@30->main::@9#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_47
    jmp b9
  //SEG161 [60] phi from main::@53 to main::@9 [phi:main::@53->main::@9]
  b9_from_b53:
  //SEG162 [60] phi (byte) main::r#47 = (byte) '-' [phi:main::@53->main::@9#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_47
    jmp b9
  //SEG163 main::@9
  b9:
  //SEG164 [61] (byte) printu::a#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG165 [62] (byte) printu::b#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG166 [63] (byte) printu::res#7 ← (byte) main::r#47 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_47
    sta printu.res
  //SEG167 [64] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG168 [168] phi from main::@9 to printu [phi:main::@9->printu]
  printu_from_b9:
  //SEG169 [168] phi (byte) printu::res#20 = (byte) printu::res#7 [phi:main::@9->printu#0] -- register_copy 
  //SEG170 [168] phi (byte) printu::b#20 = (byte) printu::b#7 [phi:main::@9->printu#1] -- register_copy 
  //SEG171 [168] phi (byte[]) printu::op#20 = (const string) main::op7 [phi:main::@9->printu#2] -- pbuz1=pbuc1 
    lda #<op7
    sta printu.op
    lda #>op7
    sta printu.op+1
  //SEG172 [168] phi (byte) printu::a#20 = (byte) printu::a#7 [phi:main::@9->printu#3] -- register_copy 
  //SEG173 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@9->printu#4] -- register_copy 
    jsr printu
  //SEG174 [65] phi from main::@9 to main::@54 [phi:main::@9->main::@54]
  b54_from_b9:
    jmp b54
  //SEG175 main::@54
  b54:
  //SEG176 [66] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG177 [163] phi from main::@54 to print_ln [phi:main::@54->print_ln]
  print_ln_from_b54:
  //SEG178 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@54->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b55
  //SEG179 main::@55
  b55:
  //SEG180 [67] if((byte) main::a#10>(byte) main::b#0) goto main::@10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_gt_vbuz2_then_la1 
    lda b
    cmp a
    bcc b10_from_b55
  //SEG181 [68] phi from main::@55 to main::@31 [phi:main::@55->main::@31]
  b31_from_b55:
    jmp b31
  //SEG182 main::@31
  b31:
  //SEG183 [69] phi from main::@31 to main::@10 [phi:main::@31->main::@10]
  b10_from_b31:
  //SEG184 [69] phi (byte) main::r#48 = (byte) '+' [phi:main::@31->main::@10#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_48
    jmp b10
  //SEG185 [69] phi from main::@55 to main::@10 [phi:main::@55->main::@10]
  b10_from_b55:
  //SEG186 [69] phi (byte) main::r#48 = (byte) '-' [phi:main::@55->main::@10#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_48
    jmp b10
  //SEG187 main::@10
  b10:
  //SEG188 [70] (byte) printu::a#8 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG189 [71] (byte) printu::b#8 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG190 [72] (byte) printu::res#8 ← (byte) main::r#48 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] ) -- vbuz1=vbuz2 
    lda r_48
    sta printu.res
  //SEG191 [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG192 [74] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG193 [168] phi from main::@10 to printu [phi:main::@10->printu]
  printu_from_b10:
  //SEG194 [168] phi (byte) printu::res#20 = (byte) printu::res#8 [phi:main::@10->printu#0] -- register_copy 
  //SEG195 [168] phi (byte) printu::b#20 = (byte) printu::b#8 [phi:main::@10->printu#1] -- register_copy 
  //SEG196 [168] phi (byte[]) printu::op#20 = (const string) main::op8 [phi:main::@10->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta printu.op
    lda #>op8
    sta printu.op+1
  //SEG197 [168] phi (byte) printu::a#20 = (byte) printu::a#8 [phi:main::@10->printu#3] -- register_copy 
  //SEG198 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#138 [phi:main::@10->printu#4] -- register_copy 
    jsr printu
    jmp b56
  //SEG199 main::@56
  b56:
  //SEG200 [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_vbuc1_then_la1 
    lda a
    cmp #$37
    beq !+
    bcs b11_from_b56
  !:
  //SEG201 [76] phi from main::@56 to main::@32 [phi:main::@56->main::@32]
  b32_from_b56:
    jmp b32
  //SEG202 main::@32
  b32:
  //SEG203 [77] phi from main::@32 to main::@11 [phi:main::@32->main::@11]
  b11_from_b32:
  //SEG204 [77] phi (byte) main::r#49 = (byte) '+' [phi:main::@32->main::@11#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_49
    jmp b11
  //SEG205 [77] phi from main::@56 to main::@11 [phi:main::@56->main::@11]
  b11_from_b56:
  //SEG206 [77] phi (byte) main::r#49 = (byte) '-' [phi:main::@56->main::@11#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_49
    jmp b11
  //SEG207 main::@11
  b11:
  //SEG208 [78] (byte) printu::a#9 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG209 [79] (byte) printu::res#9 ← (byte) main::r#49 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_49
    sta printu.res
  //SEG210 [80] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG211 [168] phi from main::@11 to printu [phi:main::@11->printu]
  printu_from_b11:
  //SEG212 [168] phi (byte) printu::res#20 = (byte) printu::res#9 [phi:main::@11->printu#0] -- register_copy 
  //SEG213 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@11->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG214 [168] phi (byte[]) printu::op#20 = (const string) main::op9 [phi:main::@11->printu#2] -- pbuz1=pbuc1 
    lda #<op9
    sta printu.op
    lda #>op9
    sta printu.op+1
  //SEG215 [168] phi (byte) printu::a#20 = (byte) printu::a#9 [phi:main::@11->printu#3] -- register_copy 
  //SEG216 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@11->printu#4] -- register_copy 
    jsr printu
    jmp b57
  //SEG217 main::@57
  b57:
  //SEG218 [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_pbuc1_derefidx_vbuz2_then_la1 
    ldy i
    lda cs,y
    cmp a
    bcc b12_from_b57
  //SEG219 [82] phi from main::@57 to main::@33 [phi:main::@57->main::@33]
  b33_from_b57:
    jmp b33
  //SEG220 main::@33
  b33:
  //SEG221 [83] phi from main::@33 to main::@12 [phi:main::@33->main::@12]
  b12_from_b33:
  //SEG222 [83] phi (byte) main::r#50 = (byte) '+' [phi:main::@33->main::@12#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_50
    jmp b12
  //SEG223 [83] phi from main::@57 to main::@12 [phi:main::@57->main::@12]
  b12_from_b57:
  //SEG224 [83] phi (byte) main::r#50 = (byte) '-' [phi:main::@57->main::@12#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_50
    jmp b12
  //SEG225 main::@12
  b12:
  //SEG226 [84] (byte) printu::a#10 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG227 [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG228 [86] (byte) printu::res#10 ← (byte) main::r#50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_50
    sta printu.res
  //SEG229 [87] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG230 [168] phi from main::@12 to printu [phi:main::@12->printu]
  printu_from_b12:
  //SEG231 [168] phi (byte) printu::res#20 = (byte) printu::res#10 [phi:main::@12->printu#0] -- register_copy 
  //SEG232 [168] phi (byte) printu::b#20 = (byte) printu::b#10 [phi:main::@12->printu#1] -- register_copy 
  //SEG233 [168] phi (byte[]) printu::op#20 = (const string) main::op10 [phi:main::@12->printu#2] -- pbuz1=pbuc1 
    lda #<op10
    sta printu.op
    lda #>op10
    sta printu.op+1
  //SEG234 [168] phi (byte) printu::a#20 = (byte) printu::a#10 [phi:main::@12->printu#3] -- register_copy 
  //SEG235 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@12->printu#4] -- register_copy 
    jsr printu
    jmp b58
  //SEG236 main::@58
  b58:
  //SEG237 [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_vbuz1_then_la1 
    lda a
    cmp a
    bcc b13_from_b58
  //SEG238 [89] phi from main::@58 to main::@34 [phi:main::@58->main::@34]
  b34_from_b58:
    jmp b34
  //SEG239 main::@34
  b34:
  //SEG240 [90] phi from main::@34 to main::@13 [phi:main::@34->main::@13]
  b13_from_b34:
  //SEG241 [90] phi (byte) main::r#51 = (byte) '+' [phi:main::@34->main::@13#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_51
    jmp b13
  //SEG242 [90] phi from main::@58 to main::@13 [phi:main::@58->main::@13]
  b13_from_b58:
  //SEG243 [90] phi (byte) main::r#51 = (byte) '-' [phi:main::@58->main::@13#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_51
    jmp b13
  //SEG244 main::@13
  b13:
  //SEG245 [91] (byte) printu::a#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG246 [92] (byte) printu::b#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG247 [93] (byte) printu::res#11 ← (byte) main::r#51 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_51
    sta printu.res
  //SEG248 [94] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG249 [168] phi from main::@13 to printu [phi:main::@13->printu]
  printu_from_b13:
  //SEG250 [168] phi (byte) printu::res#20 = (byte) printu::res#11 [phi:main::@13->printu#0] -- register_copy 
  //SEG251 [168] phi (byte) printu::b#20 = (byte) printu::b#11 [phi:main::@13->printu#1] -- register_copy 
  //SEG252 [168] phi (byte[]) printu::op#20 = (const string) main::op11 [phi:main::@13->printu#2] -- pbuz1=pbuc1 
    lda #<op11
    sta printu.op
    lda #>op11
    sta printu.op+1
  //SEG253 [168] phi (byte) printu::a#20 = (byte) printu::a#11 [phi:main::@13->printu#3] -- register_copy 
  //SEG254 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@13->printu#4] -- register_copy 
    jsr printu
  //SEG255 [95] phi from main::@13 to main::@59 [phi:main::@13->main::@59]
  b59_from_b13:
    jmp b59
  //SEG256 main::@59
  b59:
  //SEG257 [96] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG258 [163] phi from main::@59 to print_ln [phi:main::@59->print_ln]
  print_ln_from_b59:
  //SEG259 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@59->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b60
  //SEG260 main::@60
  b60:
  //SEG261 [97] if((byte) main::a#10<(byte) main::b#0) goto main::@14 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_lt_vbuz2_then_la1 
    lda a
    cmp b
    bcc b14_from_b60
  //SEG262 [98] phi from main::@60 to main::@35 [phi:main::@60->main::@35]
  b35_from_b60:
    jmp b35
  //SEG263 main::@35
  b35:
  //SEG264 [99] phi from main::@35 to main::@14 [phi:main::@35->main::@14]
  b14_from_b35:
  //SEG265 [99] phi (byte) main::r#52 = (byte) '+' [phi:main::@35->main::@14#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_52
    jmp b14
  //SEG266 [99] phi from main::@60 to main::@14 [phi:main::@60->main::@14]
  b14_from_b60:
  //SEG267 [99] phi (byte) main::r#52 = (byte) '-' [phi:main::@60->main::@14#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_52
    jmp b14
  //SEG268 main::@14
  b14:
  //SEG269 [100] (byte) printu::a#12 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG270 [101] (byte) printu::b#12 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG271 [102] (byte) printu::res#12 ← (byte) main::r#52 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] ) -- vbuz1=vbuz2 
    lda r_52
    sta printu.res
  //SEG272 [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG273 [104] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG274 [168] phi from main::@14 to printu [phi:main::@14->printu]
  printu_from_b14:
  //SEG275 [168] phi (byte) printu::res#20 = (byte) printu::res#12 [phi:main::@14->printu#0] -- register_copy 
  //SEG276 [168] phi (byte) printu::b#20 = (byte) printu::b#12 [phi:main::@14->printu#1] -- register_copy 
  //SEG277 [168] phi (byte[]) printu::op#20 = (const string) main::op12 [phi:main::@14->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta printu.op
    lda #>op12
    sta printu.op+1
  //SEG278 [168] phi (byte) printu::a#20 = (byte) printu::a#12 [phi:main::@14->printu#3] -- register_copy 
  //SEG279 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#142 [phi:main::@14->printu#4] -- register_copy 
    jsr printu
    jmp b61
  //SEG280 main::@61
  b61:
  //SEG281 [105] if((byte) main::a#10<(byte/signed byte/word/signed word) 55) goto main::@15 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda a
    cmp #$37
    bcc b15_from_b61
  //SEG282 [106] phi from main::@61 to main::@36 [phi:main::@61->main::@36]
  b36_from_b61:
    jmp b36
  //SEG283 main::@36
  b36:
  //SEG284 [107] phi from main::@36 to main::@15 [phi:main::@36->main::@15]
  b15_from_b36:
  //SEG285 [107] phi (byte) main::r#53 = (byte) '+' [phi:main::@36->main::@15#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_53
    jmp b15
  //SEG286 [107] phi from main::@61 to main::@15 [phi:main::@61->main::@15]
  b15_from_b61:
  //SEG287 [107] phi (byte) main::r#53 = (byte) '-' [phi:main::@61->main::@15#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_53
    jmp b15
  //SEG288 main::@15
  b15:
  //SEG289 [108] (byte) printu::a#13 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG290 [109] (byte) printu::res#13 ← (byte) main::r#53 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_53
    sta printu.res
  //SEG291 [110] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG292 [168] phi from main::@15 to printu [phi:main::@15->printu]
  printu_from_b15:
  //SEG293 [168] phi (byte) printu::res#20 = (byte) printu::res#13 [phi:main::@15->printu#0] -- register_copy 
  //SEG294 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@15->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG295 [168] phi (byte[]) printu::op#20 = (const string) main::op13 [phi:main::@15->printu#2] -- pbuz1=pbuc1 
    lda #<op13
    sta printu.op
    lda #>op13
    sta printu.op+1
  //SEG296 [168] phi (byte) printu::a#20 = (byte) printu::a#13 [phi:main::@15->printu#3] -- register_copy 
  //SEG297 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@15->printu#4] -- register_copy 
    jsr printu
    jmp b62
  //SEG298 main::@62
  b62:
  //SEG299 [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bcc b16_from_b62
  //SEG300 [112] phi from main::@62 to main::@37 [phi:main::@62->main::@37]
  b37_from_b62:
    jmp b37
  //SEG301 main::@37
  b37:
  //SEG302 [113] phi from main::@37 to main::@16 [phi:main::@37->main::@16]
  b16_from_b37:
  //SEG303 [113] phi (byte) main::r#54 = (byte) '+' [phi:main::@37->main::@16#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_54
    jmp b16
  //SEG304 [113] phi from main::@62 to main::@16 [phi:main::@62->main::@16]
  b16_from_b62:
  //SEG305 [113] phi (byte) main::r#54 = (byte) '-' [phi:main::@62->main::@16#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_54
    jmp b16
  //SEG306 main::@16
  b16:
  //SEG307 [114] (byte) printu::a#14 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG308 [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG309 [116] (byte) printu::res#14 ← (byte) main::r#54 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_54
    sta printu.res
  //SEG310 [117] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG311 [168] phi from main::@16 to printu [phi:main::@16->printu]
  printu_from_b16:
  //SEG312 [168] phi (byte) printu::res#20 = (byte) printu::res#14 [phi:main::@16->printu#0] -- register_copy 
  //SEG313 [168] phi (byte) printu::b#20 = (byte) printu::b#14 [phi:main::@16->printu#1] -- register_copy 
  //SEG314 [168] phi (byte[]) printu::op#20 = (const string) main::op14 [phi:main::@16->printu#2] -- pbuz1=pbuc1 
    lda #<op14
    sta printu.op
    lda #>op14
    sta printu.op+1
  //SEG315 [168] phi (byte) printu::a#20 = (byte) printu::a#14 [phi:main::@16->printu#3] -- register_copy 
  //SEG316 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@16->printu#4] -- register_copy 
    jsr printu
    jmp b63
  //SEG317 main::@63
  b63:
  //SEG318 [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_vbuz1_then_la1 
    lda a
    cmp a
    bcc b17_from_b63
  //SEG319 [119] phi from main::@63 to main::@38 [phi:main::@63->main::@38]
  b38_from_b63:
    jmp b38
  //SEG320 main::@38
  b38:
  //SEG321 [120] phi from main::@38 to main::@17 [phi:main::@38->main::@17]
  b17_from_b38:
  //SEG322 [120] phi (byte) main::r#55 = (byte) '+' [phi:main::@38->main::@17#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_55
    jmp b17
  //SEG323 [120] phi from main::@63 to main::@17 [phi:main::@63->main::@17]
  b17_from_b63:
  //SEG324 [120] phi (byte) main::r#55 = (byte) '-' [phi:main::@63->main::@17#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_55
    jmp b17
  //SEG325 main::@17
  b17:
  //SEG326 [121] (byte) printu::a#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG327 [122] (byte) printu::b#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG328 [123] (byte) printu::res#15 ← (byte) main::r#55 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_55
    sta printu.res
  //SEG329 [124] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG330 [168] phi from main::@17 to printu [phi:main::@17->printu]
  printu_from_b17:
  //SEG331 [168] phi (byte) printu::res#20 = (byte) printu::res#15 [phi:main::@17->printu#0] -- register_copy 
  //SEG332 [168] phi (byte) printu::b#20 = (byte) printu::b#15 [phi:main::@17->printu#1] -- register_copy 
  //SEG333 [168] phi (byte[]) printu::op#20 = (const string) main::op15 [phi:main::@17->printu#2] -- pbuz1=pbuc1 
    lda #<op15
    sta printu.op
    lda #>op15
    sta printu.op+1
  //SEG334 [168] phi (byte) printu::a#20 = (byte) printu::a#15 [phi:main::@17->printu#3] -- register_copy 
  //SEG335 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@17->printu#4] -- register_copy 
    jsr printu
  //SEG336 [125] phi from main::@17 to main::@64 [phi:main::@17->main::@64]
  b64_from_b17:
    jmp b64
  //SEG337 main::@64
  b64:
  //SEG338 [126] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG339 [163] phi from main::@64 to print_ln [phi:main::@64->print_ln]
  print_ln_from_b64:
  //SEG340 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@64->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b65
  //SEG341 main::@65
  b65:
  //SEG342 [127] if((byte) main::a#10!=(byte) main::b#0) goto main::@18 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_neq_vbuz2_then_la1 
    lda a
    cmp b
    bne b18_from_b65
  //SEG343 [128] phi from main::@65 to main::@39 [phi:main::@65->main::@39]
  b39_from_b65:
    jmp b39
  //SEG344 main::@39
  b39:
  //SEG345 [129] phi from main::@39 to main::@18 [phi:main::@39->main::@18]
  b18_from_b39:
  //SEG346 [129] phi (byte) main::r#56 = (byte) '+' [phi:main::@39->main::@18#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_56
    jmp b18
  //SEG347 [129] phi from main::@65 to main::@18 [phi:main::@65->main::@18]
  b18_from_b65:
  //SEG348 [129] phi (byte) main::r#56 = (byte) '-' [phi:main::@65->main::@18#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_56
    jmp b18
  //SEG349 main::@18
  b18:
  //SEG350 [130] (byte) printu::a#16 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG351 [131] (byte) printu::b#16 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG352 [132] (byte) printu::res#16 ← (byte) main::r#56 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] ) -- vbuz1=vbuz2 
    lda r_56
    sta printu.res
  //SEG353 [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG354 [134] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG355 [168] phi from main::@18 to printu [phi:main::@18->printu]
  printu_from_b18:
  //SEG356 [168] phi (byte) printu::res#20 = (byte) printu::res#16 [phi:main::@18->printu#0] -- register_copy 
  //SEG357 [168] phi (byte) printu::b#20 = (byte) printu::b#16 [phi:main::@18->printu#1] -- register_copy 
  //SEG358 [168] phi (byte[]) printu::op#20 = (const string) main::op16 [phi:main::@18->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta printu.op
    lda #>op16
    sta printu.op+1
  //SEG359 [168] phi (byte) printu::a#20 = (byte) printu::a#16 [phi:main::@18->printu#3] -- register_copy 
  //SEG360 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#146 [phi:main::@18->printu#4] -- register_copy 
    jsr printu
    jmp b66
  //SEG361 main::@66
  b66:
  //SEG362 [135] if((byte) main::a#10!=(byte/signed byte/word/signed word) 55) goto main::@19 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda a
    cmp #$37
    bne b19_from_b66
  //SEG363 [136] phi from main::@66 to main::@40 [phi:main::@66->main::@40]
  b40_from_b66:
    jmp b40
  //SEG364 main::@40
  b40:
  //SEG365 [137] phi from main::@40 to main::@19 [phi:main::@40->main::@19]
  b19_from_b40:
  //SEG366 [137] phi (byte) main::r#57 = (byte) '+' [phi:main::@40->main::@19#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_57
    jmp b19
  //SEG367 [137] phi from main::@66 to main::@19 [phi:main::@66->main::@19]
  b19_from_b66:
  //SEG368 [137] phi (byte) main::r#57 = (byte) '-' [phi:main::@66->main::@19#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_57
    jmp b19
  //SEG369 main::@19
  b19:
  //SEG370 [138] (byte) printu::a#17 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG371 [139] (byte) printu::res#17 ← (byte) main::r#57 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_57
    sta printu.res
  //SEG372 [140] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG373 [168] phi from main::@19 to printu [phi:main::@19->printu]
  printu_from_b19:
  //SEG374 [168] phi (byte) printu::res#20 = (byte) printu::res#17 [phi:main::@19->printu#0] -- register_copy 
  //SEG375 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@19->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG376 [168] phi (byte[]) printu::op#20 = (const string) main::op17 [phi:main::@19->printu#2] -- pbuz1=pbuc1 
    lda #<op17
    sta printu.op
    lda #>op17
    sta printu.op+1
  //SEG377 [168] phi (byte) printu::a#20 = (byte) printu::a#17 [phi:main::@19->printu#3] -- register_copy 
  //SEG378 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@19->printu#4] -- register_copy 
    jsr printu
    jmp b67
  //SEG379 main::@67
  b67:
  //SEG380 [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bne b20_from_b67
  //SEG381 [142] phi from main::@67 to main::@41 [phi:main::@67->main::@41]
  b41_from_b67:
    jmp b41
  //SEG382 main::@41
  b41:
  //SEG383 [143] phi from main::@41 to main::@20 [phi:main::@41->main::@20]
  b20_from_b41:
  //SEG384 [143] phi (byte) main::r#58 = (byte) '+' [phi:main::@41->main::@20#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_58
    jmp b20
  //SEG385 [143] phi from main::@67 to main::@20 [phi:main::@67->main::@20]
  b20_from_b67:
  //SEG386 [143] phi (byte) main::r#58 = (byte) '-' [phi:main::@67->main::@20#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_58
    jmp b20
  //SEG387 main::@20
  b20:
  //SEG388 [144] (byte) printu::a#18 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG389 [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG390 [146] (byte) printu::res#18 ← (byte) main::r#58 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_58
    sta printu.res
  //SEG391 [147] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG392 [168] phi from main::@20 to printu [phi:main::@20->printu]
  printu_from_b20:
  //SEG393 [168] phi (byte) printu::res#20 = (byte) printu::res#18 [phi:main::@20->printu#0] -- register_copy 
  //SEG394 [168] phi (byte) printu::b#20 = (byte) printu::b#18 [phi:main::@20->printu#1] -- register_copy 
  //SEG395 [168] phi (byte[]) printu::op#20 = (const string) main::op18 [phi:main::@20->printu#2] -- pbuz1=pbuc1 
    lda #<op18
    sta printu.op
    lda #>op18
    sta printu.op+1
  //SEG396 [168] phi (byte) printu::a#20 = (byte) printu::a#18 [phi:main::@20->printu#3] -- register_copy 
  //SEG397 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@20->printu#4] -- register_copy 
    jsr printu
    jmp b68
  //SEG398 main::@68
  b68:
  //SEG399 [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_vbuz1_then_la1 
    lda a
    cmp a
    bne b21_from_b68
  //SEG400 [149] phi from main::@68 to main::@42 [phi:main::@68->main::@42]
  b42_from_b68:
    jmp b42
  //SEG401 main::@42
  b42:
  //SEG402 [150] phi from main::@42 to main::@21 [phi:main::@42->main::@21]
  b21_from_b42:
  //SEG403 [150] phi (byte) main::r#59 = (byte) '+' [phi:main::@42->main::@21#0] -- vbuz1=vbuc1 
    lda #'+'
    sta r_59
    jmp b21
  //SEG404 [150] phi from main::@68 to main::@21 [phi:main::@68->main::@21]
  b21_from_b68:
  //SEG405 [150] phi (byte) main::r#59 = (byte) '-' [phi:main::@68->main::@21#0] -- vbuz1=vbuc1 
    lda #'-'
    sta r_59
    jmp b21
  //SEG406 main::@21
  b21:
  //SEG407 [151] (byte) printu::a#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.a
  //SEG408 [152] (byte) printu::b#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG409 [153] (byte) printu::res#19 ← (byte) main::r#59 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda r_59
    sta printu.res
  //SEG410 [154] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG411 [168] phi from main::@21 to printu [phi:main::@21->printu]
  printu_from_b21:
  //SEG412 [168] phi (byte) printu::res#20 = (byte) printu::res#19 [phi:main::@21->printu#0] -- register_copy 
  //SEG413 [168] phi (byte) printu::b#20 = (byte) printu::b#19 [phi:main::@21->printu#1] -- register_copy 
  //SEG414 [168] phi (byte[]) printu::op#20 = (const string) main::op19 [phi:main::@21->printu#2] -- pbuz1=pbuc1 
    lda #<op19
    sta printu.op
    lda #>op19
    sta printu.op+1
  //SEG415 [168] phi (byte) printu::a#20 = (byte) printu::a#19 [phi:main::@21->printu#3] -- register_copy 
  //SEG416 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@21->printu#4] -- register_copy 
    jsr printu
  //SEG417 [155] phi from main::@21 to main::@69 [phi:main::@21->main::@69]
  b69_from_b21:
    jmp b69
  //SEG418 main::@69
  b69:
  //SEG419 [156] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 ] )
  //SEG420 [163] phi from main::@69 to print_ln [phi:main::@69->print_ln]
  print_ln_from_b69:
  //SEG421 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@69->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b70
  //SEG422 main::@70
  b70:
  //SEG423 [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$30
    clc
    adc a
    sta a
  //SEG424 [158] (byte) main::i#1 ← ++ (byte) main::i#10 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG425 [159] if((byte) main::i#1!=(byte/signed byte/word/signed word) 5) goto main::@71 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #5
    bne b71
    jmp b22
  //SEG426 main::@22
  b22:
  //SEG427 [160] if(true) goto main::@22 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b22
    jmp breturn
  //SEG428 main::@return
  breturn:
  //SEG429 [161] return  [ ] ( main:2 [ ] )
    rts
  //SEG430 main::@71
  b71:
  //SEG431 [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG432 [6] phi from main::@71 to main::@1 [phi:main::@71->main::@1]
  b1_from_b71:
  //SEG433 [6] phi (byte*) line_cursor#21 = (byte*) line_cursor#1 [phi:main::@71->main::@1#0] -- register_copy 
  //SEG434 [6] phi (byte) main::i#10 = (byte) main::i#1 [phi:main::@71->main::@1#1] -- register_copy 
  //SEG435 [6] phi (byte*) char_cursor#114 = (byte*~) char_cursor#137 [phi:main::@71->main::@1#2] -- register_copy 
  //SEG436 [6] phi (byte) main::a#10 = (byte) main::a#1 [phi:main::@71->main::@1#3] -- register_copy 
    jmp b1
    op: .text "< @"
    op1: .text "< @"
    op2: .text "< @"
    op3: .text "< @"
    op4: .text "> @"
    op5: .text "> @"
    op6: .text "> @"
    op7: .text "> @"
    op8: .text "<=@"
    op9: .text "<=@"
    op10: .text "<=@"
    op11: .text "<=@"
    op12: .text ">=@"
    op13: .text ">=@"
    op14: .text ">=@"
    op15: .text ">=@"
    op16: .text "==@"
    op17: .text "==@"
    op18: .text "==@"
    op19: .text "==@"
    cs: .byte 7, $c7, $37, $97, $67
}
//SEG437 print_ln
print_ln: {
  //SEG438 [164] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  b1_from_print_ln:
  b1_from_b1:
  //SEG439 [164] phi (byte*) line_cursor#10 = (byte*) line_cursor#20 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp b1
  //SEG440 print_ln::@1
  b1:
  //SEG441 [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda line_cursor
    clc
    adc #$28
    sta line_cursor
    bcc !+
    inc line_cursor+1
  !:
  //SEG442 [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda line_cursor+1
    cmp char_cursor+1
    bcc b1_from_b1
    bne !+
    lda line_cursor
    cmp char_cursor
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG443 print_ln::@return
  breturn:
  //SEG444 [167] return  [ line_cursor#1 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 ] )
    rts
}
//SEG445 printu
printu: {
    .label a = $1a
    .label b = $1d
    .label res = $1e
    .label op = $1b
  //SEG446 [169] call print_char param-assignment [ char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  //SEG447 [181] phi from printu to print_char [phi:printu->print_char]
  print_char_from_printu:
  //SEG448 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#90 [phi:printu->print_char#0] -- register_copy 
  //SEG449 [181] phi (byte) print_char::ch#5 = (byte) ' ' [phi:printu->print_char#1] -- vbuz1=vbuc1 
    lda #' '
    sta print_char.ch
    jsr print_char
    jmp b1
  //SEG450 printu::@1
  b1:
  //SEG451 [170] (byte) print_byte::b#0 ← (byte) printu::a#20 [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta print_byte.b
  //SEG452 [171] call print_byte param-assignment [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] )
  //SEG453 [185] phi from printu::@1 to print_byte [phi:printu::@1->print_byte]
  print_byte_from_b1:
  //SEG454 [185] phi (byte*) char_cursor#89 = (byte*) char_cursor#52 [phi:printu::@1->print_byte#0] -- register_copy 
  //SEG455 [185] phi (byte) print_byte::b#2 = (byte) print_byte::b#0 [phi:printu::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp b2
  //SEG456 printu::@2
  b2:
  //SEG457 [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ) -- pbuz1=pbuz2 
    lda op
    sta print_str.str
    lda op+1
    sta print_str.str+1
  //SEG458 [173] call print_str param-assignment [ printu::b#20 printu::res#20 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
  //SEG459 [193] phi from printu::@2 to print_str [phi:printu::@2->print_str]
  print_str_from_b2:
    jsr print_str
    jmp b3
  //SEG460 printu::@3
  b3:
  //SEG461 [174] (byte) print_byte::b#1 ← (byte) printu::b#20 [ printu::res#20 print_byte::b#1 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] ) -- vbuz1=vbuz2 
    lda b
    sta print_byte.b
  //SEG462 [175] call print_byte param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  //SEG463 [185] phi from printu::@3 to print_byte [phi:printu::@3->print_byte]
  print_byte_from_b3:
  //SEG464 [185] phi (byte*) char_cursor#89 = (byte*) char_cursor#2 [phi:printu::@3->print_byte#0] -- register_copy 
  //SEG465 [185] phi (byte) print_byte::b#2 = (byte) print_byte::b#1 [phi:printu::@3->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG466 [176] phi from printu::@3 to printu::@4 [phi:printu::@3->printu::@4]
  b4_from_b3:
    jmp b4
  //SEG467 printu::@4
  b4:
  //SEG468 [177] call print_char param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  //SEG469 [181] phi from printu::@4 to print_char [phi:printu::@4->print_char]
  print_char_from_b4:
  //SEG470 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:printu::@4->print_char#0] -- register_copy 
  //SEG471 [181] phi (byte) print_char::ch#5 = (byte) ' ' [phi:printu::@4->print_char#1] -- vbuz1=vbuc1 
    lda #' '
    sta print_char.ch
    jsr print_char
    jmp b5
  //SEG472 printu::@5
  b5:
  //SEG473 [178] (byte) print_char::ch#4 ← (byte) printu::res#20 [ char_cursor#52 print_char::ch#4 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] ) -- vbuz1=vbuz2 
    lda res
    sta print_char.ch
  //SEG474 [179] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG475 [181] phi from printu::@5 to print_char [phi:printu::@5->print_char]
  print_char_from_b5:
  //SEG476 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:printu::@5->print_char#0] -- register_copy 
  //SEG477 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#4 [phi:printu::@5->print_char#1] -- register_copy 
    jsr print_char
    jmp breturn
  //SEG478 printu::@return
  breturn:
  //SEG479 [180] return  [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
    rts
}
//SEG480 print_char
print_char: {
    .label ch = $1f
  //SEG481 [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] ) -- _deref_pbuz1=vbuz2 
    lda ch
    ldy #0
    sta (char_cursor),y
  //SEG482 [183] (byte*) char_cursor#52 ← ++ (byte*) char_cursor#51 [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
    jmp breturn
  //SEG483 print_char::@return
  breturn:
  //SEG484 [184] return  [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
    rts
}
//SEG485 print_byte
print_byte: {
    .label _0 = $28
    .label _2 = $29
    .label b = $22
  //SEG486 [186] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word) 4 [ char_cursor#89 print_byte::b#2 print_byte::$0 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] ) -- vbuz1=vbuz2_ror_4 
    lda b
    lsr
    lsr
    lsr
    lsr
    sta _0
  //SEG487 [187] (byte) print_char::ch#0 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_char::ch#0 char_cursor#89 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy _0
    lda hextab,y
    sta print_char.ch
  //SEG488 [188] call print_char param-assignment [ char_cursor#52 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] )
  //SEG489 [181] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
  //SEG490 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#89 [phi:print_byte->print_char#0] -- register_copy 
  //SEG491 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp b1
  //SEG492 print_byte::@1
  b1:
  //SEG493 [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] ) -- vbuz1=vbuz2_band_vbuc1 
    lda b
    and #$f
    sta _2
  //SEG494 [190] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#52 print_char::ch#1 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy _2
    lda hextab,y
    sta print_char.ch
  //SEG495 [191] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  //SEG496 [181] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from_b1:
  //SEG497 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:print_byte::@1->print_char#0] -- register_copy 
  //SEG498 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp breturn
  //SEG499 print_byte::@return
  breturn:
  //SEG500 [192] return  [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
    rts
    hextab: .text "0123456789abcdef"
}
//SEG501 print_str
print_str: {
    .label str = $23
  //SEG502 [194] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  b1_from_print_str:
  b1_from_b2:
  //SEG503 [194] phi (byte*) char_cursor#2 = (byte*) char_cursor#52 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
  //SEG504 [194] phi (byte*) print_str::str#2 = (byte*) print_str::str#1 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp b1
  //SEG505 print_str::@1
  b1:
  //SEG506 [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b2
    jmp breturn
  //SEG507 print_str::@return
  breturn:
  //SEG508 [196] return  [ char_cursor#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
    rts
  //SEG509 print_str::@2
  b2:
  //SEG510 [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (char_cursor),y
  //SEG511 [198] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#2 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG512 [199] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
    jmp b1_from_b2
}
//SEG513 print_cls
print_cls: {
    .label sc = $25
  //SEG514 [201] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  b1_from_print_cls:
  //SEG515 [201] phi (byte*) print_cls::sc#2 = ((byte*))(word/signed word) 1024 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta sc
    lda #>$400
    sta sc+1
    jmp b1
  //SEG516 [201] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  b1_from_b1:
  //SEG517 [201] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
    jmp b1
  //SEG518 print_cls::@1
  b1:
  //SEG519 [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG520 [203] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG521 [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda sc+1
    cmp #>$400+$3e8
    bne b1_from_b1
    lda sc
    cmp #<$400+$3e8
    bne b1_from_b1
    jmp breturn
  //SEG522 print_cls::@return
  breturn:
  //SEG523 [205] return  [ ] ( main:2::print_cls:5 [ ] )
    rts
}

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:2 [ main::a#10 main::a#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:3 [ main::i#10 main::i#1 ]
Statement [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:39 [ main::b#0 ]
Statement [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:30 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Statement [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ) always clobbers reg byte a 
Statement [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ) always clobbers reg byte a 
Statement [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ) always clobbers reg byte a 
Statement [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] ) always clobbers reg byte a 
Statement [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ) always clobbers reg byte a 
Statement [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ) always clobbers reg byte a 
Statement [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] ) always clobbers reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:2 [ main::a#10 main::a#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:3 [ main::i#10 main::i#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:39 [ main::b#0 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:30 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
Statement [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] ) always clobbers reg byte a 
Statement [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) always clobbers reg byte a reg byte y 
Statement [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) always clobbers reg byte a reg byte y 
Statement [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Statement [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) always clobbers reg byte a 
Statement [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) always clobbers reg byte a reg byte y 
Statement [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:6 [ main::r#42 ]
Statement [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ) always clobbers reg byte a 
Statement [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:10 [ main::r#46 ]
Statement [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ) always clobbers reg byte a 
Statement [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:14 [ main::r#50 ]
Statement [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ) always clobbers reg byte a 
Statement [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:18 [ main::r#54 ]
Statement [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ) always clobbers reg byte a 
Statement [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:22 [ main::r#58 ]
Statement [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] ) always clobbers reg byte a 
Statement [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ) always clobbers reg byte a 
Statement [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ) always clobbers reg byte a 
Statement [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] ) always clobbers reg byte y 
Statement [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] ) always clobbers reg byte a 
Statement [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) always clobbers reg byte a reg byte y 
Statement [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) always clobbers reg byte a reg byte y 
Statement [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Statement [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) always clobbers reg byte a 
Statement [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) always clobbers reg byte a reg byte y 
Statement [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ) always clobbers reg byte a 
Statement [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ) always clobbers reg byte a 
Statement [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ) always clobbers reg byte a 
Statement [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ) always clobbers reg byte a 
Statement [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ) always clobbers reg byte a 
Statement [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ) always clobbers reg byte a 
Statement [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ) always clobbers reg byte a 
Statement [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) always clobbers reg byte a 
Statement [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ) always clobbers reg byte a 
Statement [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ) always clobbers reg byte a 
Statement [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] ) always clobbers reg byte a 
Statement [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ) always clobbers reg byte a 
Statement [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) always clobbers reg byte a 
Statement [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ) always clobbers reg byte a 
Statement [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] ) always clobbers reg byte y 
Statement [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] ) always clobbers reg byte a 
Statement [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) always clobbers reg byte a reg byte y 
Statement [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) always clobbers reg byte a reg byte y 
Statement [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) always clobbers reg byte a 
Potential registers zp ZP_BYTE:2 [ main::a#10 main::a#1 ] : zp ZP_BYTE:2 , reg byte x , 
Potential registers zp ZP_BYTE:3 [ main::i#10 main::i#1 ] : zp ZP_BYTE:3 , reg byte x , 
Potential registers zp ZP_BYTE:4 [ main::r#40 ] : zp ZP_BYTE:4 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:5 [ main::r#41 ] : zp ZP_BYTE:5 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:6 [ main::r#42 ] : zp ZP_BYTE:6 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:7 [ main::r#43 ] : zp ZP_BYTE:7 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:8 [ main::r#44 ] : zp ZP_BYTE:8 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:9 [ main::r#45 ] : zp ZP_BYTE:9 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:10 [ main::r#46 ] : zp ZP_BYTE:10 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:11 [ main::r#47 ] : zp ZP_BYTE:11 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:12 [ main::r#48 ] : zp ZP_BYTE:12 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:13 [ main::r#49 ] : zp ZP_BYTE:13 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:14 [ main::r#50 ] : zp ZP_BYTE:14 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:15 [ main::r#51 ] : zp ZP_BYTE:15 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:16 [ main::r#52 ] : zp ZP_BYTE:16 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:17 [ main::r#53 ] : zp ZP_BYTE:17 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:18 [ main::r#54 ] : zp ZP_BYTE:18 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:19 [ main::r#55 ] : zp ZP_BYTE:19 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:20 [ main::r#56 ] : zp ZP_BYTE:20 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:21 [ main::r#57 ] : zp ZP_BYTE:21 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:22 [ main::r#58 ] : zp ZP_BYTE:22 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:23 [ main::r#59 ] : zp ZP_BYTE:23 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:24 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ] : zp ZP_WORD:24 , 
Potential registers zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] : zp ZP_BYTE:26 , reg byte x , 
Potential registers zp ZP_WORD:27 [ printu::op#20 ] : zp ZP_WORD:27 , 
Potential registers zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] : zp ZP_BYTE:29 , reg byte x , 
Potential registers zp ZP_BYTE:30 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] : zp ZP_BYTE:30 , reg byte x , 
Potential registers zp ZP_BYTE:31 [ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ] : zp ZP_BYTE:31 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:32 [ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ] : zp ZP_WORD:32 , 
Potential registers zp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ] : zp ZP_BYTE:34 , reg byte a , reg byte x , 
Potential registers zp ZP_WORD:35 [ print_str::str#2 print_str::str#1 print_str::str#0 ] : zp ZP_WORD:35 , 
Potential registers zp ZP_WORD:37 [ print_cls::sc#2 print_cls::sc#1 ] : zp ZP_WORD:37 , 
Potential registers zp ZP_BYTE:39 [ main::b#0 ] : zp ZP_BYTE:39 , reg byte x , 
Potential registers zp ZP_BYTE:40 [ print_byte::$0 ] : zp ZP_BYTE:40 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:41 [ print_byte::$2 ] : zp ZP_BYTE:41 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [printu] 418.2: zp ZP_BYTE:30 [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] 268.67: zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] 178.17: zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] 0.5: zp ZP_WORD:27 [ printu::op#20 ] 
Uplift Scope [] 363.02: zp ZP_WORD:32 [ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ] 264.96: zp ZP_WORD:24 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ] 
Uplift Scope [main] 11.87: zp ZP_BYTE:3 [ main::i#10 main::i#1 ] 9.36: zp ZP_BYTE:2 [ main::a#10 main::a#1 ] 5.5: zp ZP_BYTE:5 [ main::r#41 ] 5.5: zp ZP_BYTE:9 [ main::r#45 ] 5.5: zp ZP_BYTE:13 [ main::r#49 ] 5.5: zp ZP_BYTE:17 [ main::r#53 ] 5.5: zp ZP_BYTE:21 [ main::r#57 ] 3.67: zp ZP_BYTE:4 [ main::r#40 ] 3.67: zp ZP_BYTE:6 [ main::r#42 ] 3.67: zp ZP_BYTE:7 [ main::r#43 ] 3.67: zp ZP_BYTE:8 [ main::r#44 ] 3.67: zp ZP_BYTE:10 [ main::r#46 ] 3.67: zp ZP_BYTE:11 [ main::r#47 ] 3.67: zp ZP_BYTE:12 [ main::r#48 ] 3.67: zp ZP_BYTE:14 [ main::r#50 ] 3.67: zp ZP_BYTE:15 [ main::r#51 ] 3.67: zp ZP_BYTE:16 [ main::r#52 ] 3.67: zp ZP_BYTE:18 [ main::r#54 ] 3.67: zp ZP_BYTE:19 [ main::r#55 ] 3.67: zp ZP_BYTE:20 [ main::r#56 ] 3.67: zp ZP_BYTE:22 [ main::r#58 ] 3.67: zp ZP_BYTE:23 [ main::r#59 ] 0.98: zp ZP_BYTE:39 [ main::b#0 ] 
Uplift Scope [print_str] 35.5: zp ZP_WORD:35 [ print_str::str#2 print_str::str#1 print_str::str#0 ] 
Uplift Scope [print_cls] 33: zp ZP_WORD:37 [ print_cls::sc#2 print_cls::sc#1 ] 
Uplift Scope [print_char] 20: zp ZP_BYTE:31 [ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ] 
Uplift Scope [print_byte] 10: zp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ] 4: zp ZP_BYTE:40 [ print_byte::$0 ] 4: zp ZP_BYTE:41 [ print_byte::$2 ] 
Uplift Scope [print_ln] 

Uplifting [printu] best 16302 combination reg byte x [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ] zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] zp ZP_WORD:27 [ printu::op#20 ] 
Uplifting [] best 16302 combination zp ZP_WORD:32 [ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ] zp ZP_WORD:24 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ] 
Uplifting [print_str] best 16302 combination zp ZP_WORD:35 [ print_str::str#2 print_str::str#1 print_str::str#0 ] 
Uplifting [print_cls] best 16302 combination zp ZP_WORD:37 [ print_cls::sc#2 print_cls::sc#1 ] 
Uplifting [print_char] best 16286 combination reg byte a [ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ] 
Uplifting [print_byte] best 16278 combination zp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ] reg byte a [ print_byte::$0 ] reg byte a [ print_byte::$2 ] 
Uplifting [print_ln] best 16278 combination 
Attempting to uplift remaining variables inzp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
Uplifting [printu] best 16278 combination zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Uplifting [printu] best 16278 combination zp ZP_BYTE:29 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:3 [ main::i#10 main::i#1 ]
Uplifting [main] best 16278 combination zp ZP_BYTE:3 [ main::i#10 main::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
Uplifting [print_byte] best 16278 combination zp ZP_BYTE:34 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:2 [ main::a#10 main::a#1 ]
Uplifting [main] best 16278 combination zp ZP_BYTE:2 [ main::a#10 main::a#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:5 [ main::r#41 ]
Uplifting [main] best 16188 combination reg byte x [ main::r#41 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:9 [ main::r#45 ]
Uplifting [main] best 16098 combination reg byte x [ main::r#45 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:13 [ main::r#49 ]
Uplifting [main] best 16008 combination reg byte x [ main::r#49 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:17 [ main::r#53 ]
Uplifting [main] best 15918 combination reg byte x [ main::r#53 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:21 [ main::r#57 ]
Uplifting [main] best 15828 combination reg byte x [ main::r#57 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:4 [ main::r#40 ]
Uplifting [main] best 15738 combination reg byte x [ main::r#40 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:6 [ main::r#42 ]
Uplifting [main] best 15648 combination reg byte x [ main::r#42 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:7 [ main::r#43 ]
Uplifting [main] best 15558 combination reg byte x [ main::r#43 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:8 [ main::r#44 ]
Uplifting [main] best 15468 combination reg byte x [ main::r#44 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:10 [ main::r#46 ]
Uplifting [main] best 15378 combination reg byte x [ main::r#46 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:11 [ main::r#47 ]
Uplifting [main] best 15288 combination reg byte x [ main::r#47 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:12 [ main::r#48 ]
Uplifting [main] best 15198 combination reg byte x [ main::r#48 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:14 [ main::r#50 ]
Uplifting [main] best 15108 combination reg byte x [ main::r#50 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:15 [ main::r#51 ]
Uplifting [main] best 15018 combination reg byte x [ main::r#51 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:16 [ main::r#52 ]
Uplifting [main] best 14928 combination reg byte x [ main::r#52 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:18 [ main::r#54 ]
Uplifting [main] best 14838 combination reg byte x [ main::r#54 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:19 [ main::r#55 ]
Uplifting [main] best 14748 combination reg byte x [ main::r#55 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:20 [ main::r#56 ]
Uplifting [main] best 14658 combination reg byte x [ main::r#56 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:22 [ main::r#58 ]
Uplifting [main] best 14568 combination reg byte x [ main::r#58 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:23 [ main::r#59 ]
Uplifting [main] best 14478 combination reg byte x [ main::r#59 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:39 [ main::b#0 ]
Uplifting [main] best 14478 combination zp ZP_BYTE:39 [ main::b#0 ] 
Coalescing zero page register [ zp ZP_BYTE:2 [ main::a#10 main::a#1 ] ] with [ zp ZP_BYTE:26 [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 ] ] with [ zp ZP_WORD:37 [ print_cls::sc#2 print_cls::sc#1 ] ]
Coalescing zero page register [ zp ZP_WORD:27 [ printu::op#20 ] ] with [ zp ZP_WORD:35 [ print_str::str#2 print_str::str#1 print_str::str#0 ] ]
Allocated (was zp ZP_WORD:24) zp ZP_WORD:4 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 print_cls::sc#2 print_cls::sc#1 ]
Allocated (was zp ZP_WORD:27) zp ZP_WORD:6 [ printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ]
Allocated (was zp ZP_BYTE:29) zp ZP_BYTE:8 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
Allocated (was zp ZP_WORD:32) zp ZP_WORD:9 [ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ]
Allocated (was zp ZP_BYTE:34) zp ZP_BYTE:11 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
Allocated (was zp ZP_BYTE:39) zp ZP_BYTE:12 [ main::b#0 ]

ASSEMBLER BEFORE OPTIMIZATION
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label char_cursor = 9
  .label line_cursor = 4
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
b10_from_bbegin:
  jmp b10
//SEG4 @10
b10:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @10 to main [phi:@10->main]
main_from_b10:
  jsr main
//SEG7 [3] phi from @10 to @end [phi:@10->@end]
bend_from_b10:
  jmp bend
//SEG8 @end
bend:
//SEG9 main
main: {
    .label b = $c
    .label a = 2
    .label i = 3
  //SEG10 [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  //SEG11 [200] phi from main to print_cls [phi:main->print_cls]
  print_cls_from_main:
    jsr print_cls
  //SEG12 [6] phi from main to main::@1 [phi:main->main::@1]
  b1_from_main:
  //SEG13 [6] phi (byte*) line_cursor#21 = ((byte*))(word/signed word) 1024 [phi:main->main::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
  //SEG14 [6] phi (byte) main::i#10 = (byte/signed byte/word/signed word) 0 [phi:main->main::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta i
  //SEG15 [6] phi (byte*) char_cursor#114 = ((byte*))(word/signed word) 1024 [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG16 [6] phi (byte) main::a#10 = (byte/signed byte/word/signed word) 7 [phi:main->main::@1#3] -- vbuz1=vbuc1 
    lda #7
    sta a
    jmp b1
  //SEG17 main::@1
  b1:
  //SEG18 [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) -- vbuz1=vbuc1_minus_vbuz2 
    lda #$ce
    sec
    sbc a
    sta b
  //SEG19 [8] if((byte) main::a#10>=(byte) main::b#0) goto main::@2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) -- vbuz1_ge_vbuz2_then_la1 
    lda a
    cmp b
    bcs b2_from_b1
  //SEG20 [9] phi from main::@1 to main::@23 [phi:main::@1->main::@23]
  b23_from_b1:
    jmp b23
  //SEG21 main::@23
  b23:
  //SEG22 [10] phi from main::@23 to main::@2 [phi:main::@23->main::@2]
  b2_from_b23:
  //SEG23 [10] phi (byte) main::r#40 = (byte) '+' [phi:main::@23->main::@2#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b2
  //SEG24 [10] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b2_from_b1:
  //SEG25 [10] phi (byte) main::r#40 = (byte) '-' [phi:main::@1->main::@2#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b2
  //SEG26 main::@2
  b2:
  //SEG27 [11] (byte) printu::a#0 ← (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] )
    // (byte) printu::a#0 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG28 [12] (byte) printu::b#0 ← (byte) main::b#0 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG29 [13] (byte) printu::res#0 ← (byte) main::r#40 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] )
    // (byte) printu::res#0 = (byte) main::r#40  // register copy reg byte x
  //SEG30 [14] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG31 [168] phi from main::@2 to printu [phi:main::@2->printu]
  printu_from_b2:
  //SEG32 [168] phi (byte) printu::res#20 = (byte) printu::res#0 [phi:main::@2->printu#0] -- register_copy 
  //SEG33 [168] phi (byte) printu::b#20 = (byte) printu::b#0 [phi:main::@2->printu#1] -- register_copy 
  //SEG34 [168] phi (byte[]) printu::op#20 = (const string) main::op [phi:main::@2->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta printu.op
    lda #>op
    sta printu.op+1
  //SEG35 [168] phi (byte) printu::a#20 = (byte) printu::a#0 [phi:main::@2->printu#3] -- register_copy 
  //SEG36 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#114 [phi:main::@2->printu#4] -- register_copy 
    jsr printu
    jmp b46
  //SEG37 main::@46
  b46:
  //SEG38 [15] if((byte) main::a#10>=(byte/signed byte/word/signed word) 55) goto main::@3 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_vbuc1_then_la1 
    lda a
    cmp #$37
    bcs b3_from_b46
  //SEG39 [16] phi from main::@46 to main::@24 [phi:main::@46->main::@24]
  b24_from_b46:
    jmp b24
  //SEG40 main::@24
  b24:
  //SEG41 [17] phi from main::@24 to main::@3 [phi:main::@24->main::@3]
  b3_from_b24:
  //SEG42 [17] phi (byte) main::r#41 = (byte) '+' [phi:main::@24->main::@3#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b3
  //SEG43 [17] phi from main::@46 to main::@3 [phi:main::@46->main::@3]
  b3_from_b46:
  //SEG44 [17] phi (byte) main::r#41 = (byte) '-' [phi:main::@46->main::@3#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b3
  //SEG45 main::@3
  b3:
  //SEG46 [18] (byte) printu::a#1 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] )
    // (byte) printu::a#1 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG47 [19] (byte) printu::res#1 ← (byte) main::r#41 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] )
    // (byte) printu::res#1 = (byte) main::r#41  // register copy reg byte x
  //SEG48 [20] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG49 [168] phi from main::@3 to printu [phi:main::@3->printu]
  printu_from_b3:
  //SEG50 [168] phi (byte) printu::res#20 = (byte) printu::res#1 [phi:main::@3->printu#0] -- register_copy 
  //SEG51 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@3->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG52 [168] phi (byte[]) printu::op#20 = (const string) main::op1 [phi:main::@3->printu#2] -- pbuz1=pbuc1 
    lda #<op1
    sta printu.op
    lda #>op1
    sta printu.op+1
  //SEG53 [168] phi (byte) printu::a#20 = (byte) printu::a#1 [phi:main::@3->printu#3] -- register_copy 
  //SEG54 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@3->printu#4] -- register_copy 
    jsr printu
    jmp b47
  //SEG55 main::@47
  b47:
  //SEG56 [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bcs b4_from_b47
  //SEG57 [22] phi from main::@47 to main::@25 [phi:main::@47->main::@25]
  b25_from_b47:
    jmp b25
  //SEG58 main::@25
  b25:
  //SEG59 [23] phi from main::@25 to main::@4 [phi:main::@25->main::@4]
  b4_from_b25:
  //SEG60 [23] phi (byte) main::r#42 = (byte) '+' [phi:main::@25->main::@4#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b4
  //SEG61 [23] phi from main::@47 to main::@4 [phi:main::@47->main::@4]
  b4_from_b47:
  //SEG62 [23] phi (byte) main::r#42 = (byte) '-' [phi:main::@47->main::@4#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b4
  //SEG63 main::@4
  b4:
  //SEG64 [24] (byte) printu::a#2 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] )
    // (byte) printu::a#2 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG65 [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG66 [26] (byte) printu::res#2 ← (byte) main::r#42 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] )
    // (byte) printu::res#2 = (byte) main::r#42  // register copy reg byte x
  //SEG67 [27] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG68 [168] phi from main::@4 to printu [phi:main::@4->printu]
  printu_from_b4:
  //SEG69 [168] phi (byte) printu::res#20 = (byte) printu::res#2 [phi:main::@4->printu#0] -- register_copy 
  //SEG70 [168] phi (byte) printu::b#20 = (byte) printu::b#2 [phi:main::@4->printu#1] -- register_copy 
  //SEG71 [168] phi (byte[]) printu::op#20 = (const string) main::op2 [phi:main::@4->printu#2] -- pbuz1=pbuc1 
    lda #<op2
    sta printu.op
    lda #>op2
    sta printu.op+1
  //SEG72 [168] phi (byte) printu::a#20 = (byte) printu::a#2 [phi:main::@4->printu#3] -- register_copy 
  //SEG73 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@4->printu#4] -- register_copy 
    jsr printu
    jmp b48
  //SEG74 main::@48
  b48:
  //SEG75 [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_vbuz1_then_la1 
    lda a
    cmp a
    bcs b5_from_b48
  //SEG76 [29] phi from main::@48 to main::@26 [phi:main::@48->main::@26]
  b26_from_b48:
    jmp b26
  //SEG77 main::@26
  b26:
  //SEG78 [30] phi from main::@26 to main::@5 [phi:main::@26->main::@5]
  b5_from_b26:
  //SEG79 [30] phi (byte) main::r#43 = (byte) '+' [phi:main::@26->main::@5#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b5
  //SEG80 [30] phi from main::@48 to main::@5 [phi:main::@48->main::@5]
  b5_from_b48:
  //SEG81 [30] phi (byte) main::r#43 = (byte) '-' [phi:main::@48->main::@5#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b5
  //SEG82 main::@5
  b5:
  //SEG83 [31] (byte) printu::a#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] )
    // (byte) printu::a#3 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG84 [32] (byte) printu::b#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG85 [33] (byte) printu::res#3 ← (byte) main::r#43 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] )
    // (byte) printu::res#3 = (byte) main::r#43  // register copy reg byte x
  //SEG86 [34] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG87 [168] phi from main::@5 to printu [phi:main::@5->printu]
  printu_from_b5:
  //SEG88 [168] phi (byte) printu::res#20 = (byte) printu::res#3 [phi:main::@5->printu#0] -- register_copy 
  //SEG89 [168] phi (byte) printu::b#20 = (byte) printu::b#3 [phi:main::@5->printu#1] -- register_copy 
  //SEG90 [168] phi (byte[]) printu::op#20 = (const string) main::op3 [phi:main::@5->printu#2] -- pbuz1=pbuc1 
    lda #<op3
    sta printu.op
    lda #>op3
    sta printu.op+1
  //SEG91 [168] phi (byte) printu::a#20 = (byte) printu::a#3 [phi:main::@5->printu#3] -- register_copy 
  //SEG92 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@5->printu#4] -- register_copy 
    jsr printu
  //SEG93 [35] phi from main::@5 to main::@49 [phi:main::@5->main::@49]
  b49_from_b5:
    jmp b49
  //SEG94 main::@49
  b49:
  //SEG95 [36] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG96 [163] phi from main::@49 to print_ln [phi:main::@49->print_ln]
  print_ln_from_b49:
  //SEG97 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#21 [phi:main::@49->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b50
  //SEG98 main::@50
  b50:
  //SEG99 [37] if((byte) main::a#10<=(byte) main::b#0) goto main::@6 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_le_vbuz2_then_la1 
    lda b
    cmp a
    bcs b6_from_b50
  //SEG100 [38] phi from main::@50 to main::@27 [phi:main::@50->main::@27]
  b27_from_b50:
    jmp b27
  //SEG101 main::@27
  b27:
  //SEG102 [39] phi from main::@27 to main::@6 [phi:main::@27->main::@6]
  b6_from_b27:
  //SEG103 [39] phi (byte) main::r#44 = (byte) '+' [phi:main::@27->main::@6#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b6
  //SEG104 [39] phi from main::@50 to main::@6 [phi:main::@50->main::@6]
  b6_from_b50:
  //SEG105 [39] phi (byte) main::r#44 = (byte) '-' [phi:main::@50->main::@6#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b6
  //SEG106 main::@6
  b6:
  //SEG107 [40] (byte) printu::a#4 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] )
    // (byte) printu::a#4 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG108 [41] (byte) printu::b#4 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG109 [42] (byte) printu::res#4 ← (byte) main::r#44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] )
    // (byte) printu::res#4 = (byte) main::r#44  // register copy reg byte x
  //SEG110 [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG111 [44] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG112 [168] phi from main::@6 to printu [phi:main::@6->printu]
  printu_from_b6:
  //SEG113 [168] phi (byte) printu::res#20 = (byte) printu::res#4 [phi:main::@6->printu#0] -- register_copy 
  //SEG114 [168] phi (byte) printu::b#20 = (byte) printu::b#4 [phi:main::@6->printu#1] -- register_copy 
  //SEG115 [168] phi (byte[]) printu::op#20 = (const string) main::op4 [phi:main::@6->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta printu.op
    lda #>op4
    sta printu.op+1
  //SEG116 [168] phi (byte) printu::a#20 = (byte) printu::a#4 [phi:main::@6->printu#3] -- register_copy 
  //SEG117 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#154 [phi:main::@6->printu#4] -- register_copy 
    jsr printu
    jmp b51
  //SEG118 main::@51
  b51:
  //SEG119 [45] if((byte) main::a#10<=(byte/signed byte/word/signed word) 55) goto main::@7 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_vbuc1_then_la1 
    lda #$37
    cmp a
    bcs b7_from_b51
  //SEG120 [46] phi from main::@51 to main::@28 [phi:main::@51->main::@28]
  b28_from_b51:
    jmp b28
  //SEG121 main::@28
  b28:
  //SEG122 [47] phi from main::@28 to main::@7 [phi:main::@28->main::@7]
  b7_from_b28:
  //SEG123 [47] phi (byte) main::r#45 = (byte) '+' [phi:main::@28->main::@7#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b7
  //SEG124 [47] phi from main::@51 to main::@7 [phi:main::@51->main::@7]
  b7_from_b51:
  //SEG125 [47] phi (byte) main::r#45 = (byte) '-' [phi:main::@51->main::@7#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b7
  //SEG126 main::@7
  b7:
  //SEG127 [48] (byte) printu::a#5 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] )
    // (byte) printu::a#5 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG128 [49] (byte) printu::res#5 ← (byte) main::r#45 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] )
    // (byte) printu::res#5 = (byte) main::r#45  // register copy reg byte x
  //SEG129 [50] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG130 [168] phi from main::@7 to printu [phi:main::@7->printu]
  printu_from_b7:
  //SEG131 [168] phi (byte) printu::res#20 = (byte) printu::res#5 [phi:main::@7->printu#0] -- register_copy 
  //SEG132 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@7->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG133 [168] phi (byte[]) printu::op#20 = (const string) main::op5 [phi:main::@7->printu#2] -- pbuz1=pbuc1 
    lda #<op5
    sta printu.op
    lda #>op5
    sta printu.op+1
  //SEG134 [168] phi (byte) printu::a#20 = (byte) printu::a#5 [phi:main::@7->printu#3] -- register_copy 
  //SEG135 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@7->printu#4] -- register_copy 
    jsr printu
    jmp b52
  //SEG136 main::@52
  b52:
  //SEG137 [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_pbuc1_derefidx_vbuz2_then_la1 
    ldy i
    lda cs,y
    cmp a
    bcs b8_from_b52
  //SEG138 [52] phi from main::@52 to main::@29 [phi:main::@52->main::@29]
  b29_from_b52:
    jmp b29
  //SEG139 main::@29
  b29:
  //SEG140 [53] phi from main::@29 to main::@8 [phi:main::@29->main::@8]
  b8_from_b29:
  //SEG141 [53] phi (byte) main::r#46 = (byte) '+' [phi:main::@29->main::@8#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b8
  //SEG142 [53] phi from main::@52 to main::@8 [phi:main::@52->main::@8]
  b8_from_b52:
  //SEG143 [53] phi (byte) main::r#46 = (byte) '-' [phi:main::@52->main::@8#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b8
  //SEG144 main::@8
  b8:
  //SEG145 [54] (byte) printu::a#6 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] )
    // (byte) printu::a#6 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG146 [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG147 [56] (byte) printu::res#6 ← (byte) main::r#46 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] )
    // (byte) printu::res#6 = (byte) main::r#46  // register copy reg byte x
  //SEG148 [57] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG149 [168] phi from main::@8 to printu [phi:main::@8->printu]
  printu_from_b8:
  //SEG150 [168] phi (byte) printu::res#20 = (byte) printu::res#6 [phi:main::@8->printu#0] -- register_copy 
  //SEG151 [168] phi (byte) printu::b#20 = (byte) printu::b#6 [phi:main::@8->printu#1] -- register_copy 
  //SEG152 [168] phi (byte[]) printu::op#20 = (const string) main::op6 [phi:main::@8->printu#2] -- pbuz1=pbuc1 
    lda #<op6
    sta printu.op
    lda #>op6
    sta printu.op+1
  //SEG153 [168] phi (byte) printu::a#20 = (byte) printu::a#6 [phi:main::@8->printu#3] -- register_copy 
  //SEG154 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@8->printu#4] -- register_copy 
    jsr printu
    jmp b53
  //SEG155 main::@53
  b53:
  //SEG156 [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_vbuz1_then_la1 
    lda a
    cmp a
    bcs b9_from_b53
  //SEG157 [59] phi from main::@53 to main::@30 [phi:main::@53->main::@30]
  b30_from_b53:
    jmp b30
  //SEG158 main::@30
  b30:
  //SEG159 [60] phi from main::@30 to main::@9 [phi:main::@30->main::@9]
  b9_from_b30:
  //SEG160 [60] phi (byte) main::r#47 = (byte) '+' [phi:main::@30->main::@9#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b9
  //SEG161 [60] phi from main::@53 to main::@9 [phi:main::@53->main::@9]
  b9_from_b53:
  //SEG162 [60] phi (byte) main::r#47 = (byte) '-' [phi:main::@53->main::@9#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b9
  //SEG163 main::@9
  b9:
  //SEG164 [61] (byte) printu::a#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] )
    // (byte) printu::a#7 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG165 [62] (byte) printu::b#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG166 [63] (byte) printu::res#7 ← (byte) main::r#47 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] )
    // (byte) printu::res#7 = (byte) main::r#47  // register copy reg byte x
  //SEG167 [64] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG168 [168] phi from main::@9 to printu [phi:main::@9->printu]
  printu_from_b9:
  //SEG169 [168] phi (byte) printu::res#20 = (byte) printu::res#7 [phi:main::@9->printu#0] -- register_copy 
  //SEG170 [168] phi (byte) printu::b#20 = (byte) printu::b#7 [phi:main::@9->printu#1] -- register_copy 
  //SEG171 [168] phi (byte[]) printu::op#20 = (const string) main::op7 [phi:main::@9->printu#2] -- pbuz1=pbuc1 
    lda #<op7
    sta printu.op
    lda #>op7
    sta printu.op+1
  //SEG172 [168] phi (byte) printu::a#20 = (byte) printu::a#7 [phi:main::@9->printu#3] -- register_copy 
  //SEG173 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@9->printu#4] -- register_copy 
    jsr printu
  //SEG174 [65] phi from main::@9 to main::@54 [phi:main::@9->main::@54]
  b54_from_b9:
    jmp b54
  //SEG175 main::@54
  b54:
  //SEG176 [66] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG177 [163] phi from main::@54 to print_ln [phi:main::@54->print_ln]
  print_ln_from_b54:
  //SEG178 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@54->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b55
  //SEG179 main::@55
  b55:
  //SEG180 [67] if((byte) main::a#10>(byte) main::b#0) goto main::@10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_gt_vbuz2_then_la1 
    lda b
    cmp a
    bcc b10_from_b55
  //SEG181 [68] phi from main::@55 to main::@31 [phi:main::@55->main::@31]
  b31_from_b55:
    jmp b31
  //SEG182 main::@31
  b31:
  //SEG183 [69] phi from main::@31 to main::@10 [phi:main::@31->main::@10]
  b10_from_b31:
  //SEG184 [69] phi (byte) main::r#48 = (byte) '+' [phi:main::@31->main::@10#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b10
  //SEG185 [69] phi from main::@55 to main::@10 [phi:main::@55->main::@10]
  b10_from_b55:
  //SEG186 [69] phi (byte) main::r#48 = (byte) '-' [phi:main::@55->main::@10#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b10
  //SEG187 main::@10
  b10:
  //SEG188 [70] (byte) printu::a#8 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] )
    // (byte) printu::a#8 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG189 [71] (byte) printu::b#8 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG190 [72] (byte) printu::res#8 ← (byte) main::r#48 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] )
    // (byte) printu::res#8 = (byte) main::r#48  // register copy reg byte x
  //SEG191 [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG192 [74] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG193 [168] phi from main::@10 to printu [phi:main::@10->printu]
  printu_from_b10:
  //SEG194 [168] phi (byte) printu::res#20 = (byte) printu::res#8 [phi:main::@10->printu#0] -- register_copy 
  //SEG195 [168] phi (byte) printu::b#20 = (byte) printu::b#8 [phi:main::@10->printu#1] -- register_copy 
  //SEG196 [168] phi (byte[]) printu::op#20 = (const string) main::op8 [phi:main::@10->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta printu.op
    lda #>op8
    sta printu.op+1
  //SEG197 [168] phi (byte) printu::a#20 = (byte) printu::a#8 [phi:main::@10->printu#3] -- register_copy 
  //SEG198 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#138 [phi:main::@10->printu#4] -- register_copy 
    jsr printu
    jmp b56
  //SEG199 main::@56
  b56:
  //SEG200 [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_vbuc1_then_la1 
    lda a
    cmp #$37
    beq !+
    bcs b11_from_b56
  !:
  //SEG201 [76] phi from main::@56 to main::@32 [phi:main::@56->main::@32]
  b32_from_b56:
    jmp b32
  //SEG202 main::@32
  b32:
  //SEG203 [77] phi from main::@32 to main::@11 [phi:main::@32->main::@11]
  b11_from_b32:
  //SEG204 [77] phi (byte) main::r#49 = (byte) '+' [phi:main::@32->main::@11#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b11
  //SEG205 [77] phi from main::@56 to main::@11 [phi:main::@56->main::@11]
  b11_from_b56:
  //SEG206 [77] phi (byte) main::r#49 = (byte) '-' [phi:main::@56->main::@11#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b11
  //SEG207 main::@11
  b11:
  //SEG208 [78] (byte) printu::a#9 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] )
    // (byte) printu::a#9 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG209 [79] (byte) printu::res#9 ← (byte) main::r#49 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] )
    // (byte) printu::res#9 = (byte) main::r#49  // register copy reg byte x
  //SEG210 [80] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG211 [168] phi from main::@11 to printu [phi:main::@11->printu]
  printu_from_b11:
  //SEG212 [168] phi (byte) printu::res#20 = (byte) printu::res#9 [phi:main::@11->printu#0] -- register_copy 
  //SEG213 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@11->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG214 [168] phi (byte[]) printu::op#20 = (const string) main::op9 [phi:main::@11->printu#2] -- pbuz1=pbuc1 
    lda #<op9
    sta printu.op
    lda #>op9
    sta printu.op+1
  //SEG215 [168] phi (byte) printu::a#20 = (byte) printu::a#9 [phi:main::@11->printu#3] -- register_copy 
  //SEG216 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@11->printu#4] -- register_copy 
    jsr printu
    jmp b57
  //SEG217 main::@57
  b57:
  //SEG218 [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_pbuc1_derefidx_vbuz2_then_la1 
    ldy i
    lda cs,y
    cmp a
    bcc b12_from_b57
  //SEG219 [82] phi from main::@57 to main::@33 [phi:main::@57->main::@33]
  b33_from_b57:
    jmp b33
  //SEG220 main::@33
  b33:
  //SEG221 [83] phi from main::@33 to main::@12 [phi:main::@33->main::@12]
  b12_from_b33:
  //SEG222 [83] phi (byte) main::r#50 = (byte) '+' [phi:main::@33->main::@12#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b12
  //SEG223 [83] phi from main::@57 to main::@12 [phi:main::@57->main::@12]
  b12_from_b57:
  //SEG224 [83] phi (byte) main::r#50 = (byte) '-' [phi:main::@57->main::@12#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b12
  //SEG225 main::@12
  b12:
  //SEG226 [84] (byte) printu::a#10 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] )
    // (byte) printu::a#10 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG227 [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG228 [86] (byte) printu::res#10 ← (byte) main::r#50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] )
    // (byte) printu::res#10 = (byte) main::r#50  // register copy reg byte x
  //SEG229 [87] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG230 [168] phi from main::@12 to printu [phi:main::@12->printu]
  printu_from_b12:
  //SEG231 [168] phi (byte) printu::res#20 = (byte) printu::res#10 [phi:main::@12->printu#0] -- register_copy 
  //SEG232 [168] phi (byte) printu::b#20 = (byte) printu::b#10 [phi:main::@12->printu#1] -- register_copy 
  //SEG233 [168] phi (byte[]) printu::op#20 = (const string) main::op10 [phi:main::@12->printu#2] -- pbuz1=pbuc1 
    lda #<op10
    sta printu.op
    lda #>op10
    sta printu.op+1
  //SEG234 [168] phi (byte) printu::a#20 = (byte) printu::a#10 [phi:main::@12->printu#3] -- register_copy 
  //SEG235 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@12->printu#4] -- register_copy 
    jsr printu
    jmp b58
  //SEG236 main::@58
  b58:
  //SEG237 [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_vbuz1_then_la1 
    lda a
    cmp a
    bcc b13_from_b58
  //SEG238 [89] phi from main::@58 to main::@34 [phi:main::@58->main::@34]
  b34_from_b58:
    jmp b34
  //SEG239 main::@34
  b34:
  //SEG240 [90] phi from main::@34 to main::@13 [phi:main::@34->main::@13]
  b13_from_b34:
  //SEG241 [90] phi (byte) main::r#51 = (byte) '+' [phi:main::@34->main::@13#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b13
  //SEG242 [90] phi from main::@58 to main::@13 [phi:main::@58->main::@13]
  b13_from_b58:
  //SEG243 [90] phi (byte) main::r#51 = (byte) '-' [phi:main::@58->main::@13#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b13
  //SEG244 main::@13
  b13:
  //SEG245 [91] (byte) printu::a#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] )
    // (byte) printu::a#11 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG246 [92] (byte) printu::b#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG247 [93] (byte) printu::res#11 ← (byte) main::r#51 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] )
    // (byte) printu::res#11 = (byte) main::r#51  // register copy reg byte x
  //SEG248 [94] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG249 [168] phi from main::@13 to printu [phi:main::@13->printu]
  printu_from_b13:
  //SEG250 [168] phi (byte) printu::res#20 = (byte) printu::res#11 [phi:main::@13->printu#0] -- register_copy 
  //SEG251 [168] phi (byte) printu::b#20 = (byte) printu::b#11 [phi:main::@13->printu#1] -- register_copy 
  //SEG252 [168] phi (byte[]) printu::op#20 = (const string) main::op11 [phi:main::@13->printu#2] -- pbuz1=pbuc1 
    lda #<op11
    sta printu.op
    lda #>op11
    sta printu.op+1
  //SEG253 [168] phi (byte) printu::a#20 = (byte) printu::a#11 [phi:main::@13->printu#3] -- register_copy 
  //SEG254 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@13->printu#4] -- register_copy 
    jsr printu
  //SEG255 [95] phi from main::@13 to main::@59 [phi:main::@13->main::@59]
  b59_from_b13:
    jmp b59
  //SEG256 main::@59
  b59:
  //SEG257 [96] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG258 [163] phi from main::@59 to print_ln [phi:main::@59->print_ln]
  print_ln_from_b59:
  //SEG259 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@59->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b60
  //SEG260 main::@60
  b60:
  //SEG261 [97] if((byte) main::a#10<(byte) main::b#0) goto main::@14 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_lt_vbuz2_then_la1 
    lda a
    cmp b
    bcc b14_from_b60
  //SEG262 [98] phi from main::@60 to main::@35 [phi:main::@60->main::@35]
  b35_from_b60:
    jmp b35
  //SEG263 main::@35
  b35:
  //SEG264 [99] phi from main::@35 to main::@14 [phi:main::@35->main::@14]
  b14_from_b35:
  //SEG265 [99] phi (byte) main::r#52 = (byte) '+' [phi:main::@35->main::@14#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b14
  //SEG266 [99] phi from main::@60 to main::@14 [phi:main::@60->main::@14]
  b14_from_b60:
  //SEG267 [99] phi (byte) main::r#52 = (byte) '-' [phi:main::@60->main::@14#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b14
  //SEG268 main::@14
  b14:
  //SEG269 [100] (byte) printu::a#12 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] )
    // (byte) printu::a#12 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG270 [101] (byte) printu::b#12 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG271 [102] (byte) printu::res#12 ← (byte) main::r#52 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] )
    // (byte) printu::res#12 = (byte) main::r#52  // register copy reg byte x
  //SEG272 [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG273 [104] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG274 [168] phi from main::@14 to printu [phi:main::@14->printu]
  printu_from_b14:
  //SEG275 [168] phi (byte) printu::res#20 = (byte) printu::res#12 [phi:main::@14->printu#0] -- register_copy 
  //SEG276 [168] phi (byte) printu::b#20 = (byte) printu::b#12 [phi:main::@14->printu#1] -- register_copy 
  //SEG277 [168] phi (byte[]) printu::op#20 = (const string) main::op12 [phi:main::@14->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta printu.op
    lda #>op12
    sta printu.op+1
  //SEG278 [168] phi (byte) printu::a#20 = (byte) printu::a#12 [phi:main::@14->printu#3] -- register_copy 
  //SEG279 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#142 [phi:main::@14->printu#4] -- register_copy 
    jsr printu
    jmp b61
  //SEG280 main::@61
  b61:
  //SEG281 [105] if((byte) main::a#10<(byte/signed byte/word/signed word) 55) goto main::@15 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda a
    cmp #$37
    bcc b15_from_b61
  //SEG282 [106] phi from main::@61 to main::@36 [phi:main::@61->main::@36]
  b36_from_b61:
    jmp b36
  //SEG283 main::@36
  b36:
  //SEG284 [107] phi from main::@36 to main::@15 [phi:main::@36->main::@15]
  b15_from_b36:
  //SEG285 [107] phi (byte) main::r#53 = (byte) '+' [phi:main::@36->main::@15#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b15
  //SEG286 [107] phi from main::@61 to main::@15 [phi:main::@61->main::@15]
  b15_from_b61:
  //SEG287 [107] phi (byte) main::r#53 = (byte) '-' [phi:main::@61->main::@15#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b15
  //SEG288 main::@15
  b15:
  //SEG289 [108] (byte) printu::a#13 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] )
    // (byte) printu::a#13 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG290 [109] (byte) printu::res#13 ← (byte) main::r#53 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] )
    // (byte) printu::res#13 = (byte) main::r#53  // register copy reg byte x
  //SEG291 [110] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG292 [168] phi from main::@15 to printu [phi:main::@15->printu]
  printu_from_b15:
  //SEG293 [168] phi (byte) printu::res#20 = (byte) printu::res#13 [phi:main::@15->printu#0] -- register_copy 
  //SEG294 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@15->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG295 [168] phi (byte[]) printu::op#20 = (const string) main::op13 [phi:main::@15->printu#2] -- pbuz1=pbuc1 
    lda #<op13
    sta printu.op
    lda #>op13
    sta printu.op+1
  //SEG296 [168] phi (byte) printu::a#20 = (byte) printu::a#13 [phi:main::@15->printu#3] -- register_copy 
  //SEG297 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@15->printu#4] -- register_copy 
    jsr printu
    jmp b62
  //SEG298 main::@62
  b62:
  //SEG299 [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bcc b16_from_b62
  //SEG300 [112] phi from main::@62 to main::@37 [phi:main::@62->main::@37]
  b37_from_b62:
    jmp b37
  //SEG301 main::@37
  b37:
  //SEG302 [113] phi from main::@37 to main::@16 [phi:main::@37->main::@16]
  b16_from_b37:
  //SEG303 [113] phi (byte) main::r#54 = (byte) '+' [phi:main::@37->main::@16#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b16
  //SEG304 [113] phi from main::@62 to main::@16 [phi:main::@62->main::@16]
  b16_from_b62:
  //SEG305 [113] phi (byte) main::r#54 = (byte) '-' [phi:main::@62->main::@16#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b16
  //SEG306 main::@16
  b16:
  //SEG307 [114] (byte) printu::a#14 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] )
    // (byte) printu::a#14 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG308 [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG309 [116] (byte) printu::res#14 ← (byte) main::r#54 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] )
    // (byte) printu::res#14 = (byte) main::r#54  // register copy reg byte x
  //SEG310 [117] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG311 [168] phi from main::@16 to printu [phi:main::@16->printu]
  printu_from_b16:
  //SEG312 [168] phi (byte) printu::res#20 = (byte) printu::res#14 [phi:main::@16->printu#0] -- register_copy 
  //SEG313 [168] phi (byte) printu::b#20 = (byte) printu::b#14 [phi:main::@16->printu#1] -- register_copy 
  //SEG314 [168] phi (byte[]) printu::op#20 = (const string) main::op14 [phi:main::@16->printu#2] -- pbuz1=pbuc1 
    lda #<op14
    sta printu.op
    lda #>op14
    sta printu.op+1
  //SEG315 [168] phi (byte) printu::a#20 = (byte) printu::a#14 [phi:main::@16->printu#3] -- register_copy 
  //SEG316 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@16->printu#4] -- register_copy 
    jsr printu
    jmp b63
  //SEG317 main::@63
  b63:
  //SEG318 [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_vbuz1_then_la1 
    lda a
    cmp a
    bcc b17_from_b63
  //SEG319 [119] phi from main::@63 to main::@38 [phi:main::@63->main::@38]
  b38_from_b63:
    jmp b38
  //SEG320 main::@38
  b38:
  //SEG321 [120] phi from main::@38 to main::@17 [phi:main::@38->main::@17]
  b17_from_b38:
  //SEG322 [120] phi (byte) main::r#55 = (byte) '+' [phi:main::@38->main::@17#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b17
  //SEG323 [120] phi from main::@63 to main::@17 [phi:main::@63->main::@17]
  b17_from_b63:
  //SEG324 [120] phi (byte) main::r#55 = (byte) '-' [phi:main::@63->main::@17#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b17
  //SEG325 main::@17
  b17:
  //SEG326 [121] (byte) printu::a#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] )
    // (byte) printu::a#15 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG327 [122] (byte) printu::b#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG328 [123] (byte) printu::res#15 ← (byte) main::r#55 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] )
    // (byte) printu::res#15 = (byte) main::r#55  // register copy reg byte x
  //SEG329 [124] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG330 [168] phi from main::@17 to printu [phi:main::@17->printu]
  printu_from_b17:
  //SEG331 [168] phi (byte) printu::res#20 = (byte) printu::res#15 [phi:main::@17->printu#0] -- register_copy 
  //SEG332 [168] phi (byte) printu::b#20 = (byte) printu::b#15 [phi:main::@17->printu#1] -- register_copy 
  //SEG333 [168] phi (byte[]) printu::op#20 = (const string) main::op15 [phi:main::@17->printu#2] -- pbuz1=pbuc1 
    lda #<op15
    sta printu.op
    lda #>op15
    sta printu.op+1
  //SEG334 [168] phi (byte) printu::a#20 = (byte) printu::a#15 [phi:main::@17->printu#3] -- register_copy 
  //SEG335 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@17->printu#4] -- register_copy 
    jsr printu
  //SEG336 [125] phi from main::@17 to main::@64 [phi:main::@17->main::@64]
  b64_from_b17:
    jmp b64
  //SEG337 main::@64
  b64:
  //SEG338 [126] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG339 [163] phi from main::@64 to print_ln [phi:main::@64->print_ln]
  print_ln_from_b64:
  //SEG340 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@64->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b65
  //SEG341 main::@65
  b65:
  //SEG342 [127] if((byte) main::a#10!=(byte) main::b#0) goto main::@18 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_neq_vbuz2_then_la1 
    lda a
    cmp b
    bne b18_from_b65
  //SEG343 [128] phi from main::@65 to main::@39 [phi:main::@65->main::@39]
  b39_from_b65:
    jmp b39
  //SEG344 main::@39
  b39:
  //SEG345 [129] phi from main::@39 to main::@18 [phi:main::@39->main::@18]
  b18_from_b39:
  //SEG346 [129] phi (byte) main::r#56 = (byte) '+' [phi:main::@39->main::@18#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b18
  //SEG347 [129] phi from main::@65 to main::@18 [phi:main::@65->main::@18]
  b18_from_b65:
  //SEG348 [129] phi (byte) main::r#56 = (byte) '-' [phi:main::@65->main::@18#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b18
  //SEG349 main::@18
  b18:
  //SEG350 [130] (byte) printu::a#16 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] )
    // (byte) printu::a#16 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG351 [131] (byte) printu::b#16 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG352 [132] (byte) printu::res#16 ← (byte) main::r#56 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] )
    // (byte) printu::res#16 = (byte) main::r#56  // register copy reg byte x
  //SEG353 [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG354 [134] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG355 [168] phi from main::@18 to printu [phi:main::@18->printu]
  printu_from_b18:
  //SEG356 [168] phi (byte) printu::res#20 = (byte) printu::res#16 [phi:main::@18->printu#0] -- register_copy 
  //SEG357 [168] phi (byte) printu::b#20 = (byte) printu::b#16 [phi:main::@18->printu#1] -- register_copy 
  //SEG358 [168] phi (byte[]) printu::op#20 = (const string) main::op16 [phi:main::@18->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta printu.op
    lda #>op16
    sta printu.op+1
  //SEG359 [168] phi (byte) printu::a#20 = (byte) printu::a#16 [phi:main::@18->printu#3] -- register_copy 
  //SEG360 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#146 [phi:main::@18->printu#4] -- register_copy 
    jsr printu
    jmp b66
  //SEG361 main::@66
  b66:
  //SEG362 [135] if((byte) main::a#10!=(byte/signed byte/word/signed word) 55) goto main::@19 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda a
    cmp #$37
    bne b19_from_b66
  //SEG363 [136] phi from main::@66 to main::@40 [phi:main::@66->main::@40]
  b40_from_b66:
    jmp b40
  //SEG364 main::@40
  b40:
  //SEG365 [137] phi from main::@40 to main::@19 [phi:main::@40->main::@19]
  b19_from_b40:
  //SEG366 [137] phi (byte) main::r#57 = (byte) '+' [phi:main::@40->main::@19#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b19
  //SEG367 [137] phi from main::@66 to main::@19 [phi:main::@66->main::@19]
  b19_from_b66:
  //SEG368 [137] phi (byte) main::r#57 = (byte) '-' [phi:main::@66->main::@19#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b19
  //SEG369 main::@19
  b19:
  //SEG370 [138] (byte) printu::a#17 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] )
    // (byte) printu::a#17 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG371 [139] (byte) printu::res#17 ← (byte) main::r#57 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] )
    // (byte) printu::res#17 = (byte) main::r#57  // register copy reg byte x
  //SEG372 [140] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG373 [168] phi from main::@19 to printu [phi:main::@19->printu]
  printu_from_b19:
  //SEG374 [168] phi (byte) printu::res#20 = (byte) printu::res#17 [phi:main::@19->printu#0] -- register_copy 
  //SEG375 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@19->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG376 [168] phi (byte[]) printu::op#20 = (const string) main::op17 [phi:main::@19->printu#2] -- pbuz1=pbuc1 
    lda #<op17
    sta printu.op
    lda #>op17
    sta printu.op+1
  //SEG377 [168] phi (byte) printu::a#20 = (byte) printu::a#17 [phi:main::@19->printu#3] -- register_copy 
  //SEG378 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@19->printu#4] -- register_copy 
    jsr printu
    jmp b67
  //SEG379 main::@67
  b67:
  //SEG380 [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bne b20_from_b67
  //SEG381 [142] phi from main::@67 to main::@41 [phi:main::@67->main::@41]
  b41_from_b67:
    jmp b41
  //SEG382 main::@41
  b41:
  //SEG383 [143] phi from main::@41 to main::@20 [phi:main::@41->main::@20]
  b20_from_b41:
  //SEG384 [143] phi (byte) main::r#58 = (byte) '+' [phi:main::@41->main::@20#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b20
  //SEG385 [143] phi from main::@67 to main::@20 [phi:main::@67->main::@20]
  b20_from_b67:
  //SEG386 [143] phi (byte) main::r#58 = (byte) '-' [phi:main::@67->main::@20#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b20
  //SEG387 main::@20
  b20:
  //SEG388 [144] (byte) printu::a#18 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] )
    // (byte) printu::a#18 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG389 [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG390 [146] (byte) printu::res#18 ← (byte) main::r#58 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] )
    // (byte) printu::res#18 = (byte) main::r#58  // register copy reg byte x
  //SEG391 [147] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG392 [168] phi from main::@20 to printu [phi:main::@20->printu]
  printu_from_b20:
  //SEG393 [168] phi (byte) printu::res#20 = (byte) printu::res#18 [phi:main::@20->printu#0] -- register_copy 
  //SEG394 [168] phi (byte) printu::b#20 = (byte) printu::b#18 [phi:main::@20->printu#1] -- register_copy 
  //SEG395 [168] phi (byte[]) printu::op#20 = (const string) main::op18 [phi:main::@20->printu#2] -- pbuz1=pbuc1 
    lda #<op18
    sta printu.op
    lda #>op18
    sta printu.op+1
  //SEG396 [168] phi (byte) printu::a#20 = (byte) printu::a#18 [phi:main::@20->printu#3] -- register_copy 
  //SEG397 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@20->printu#4] -- register_copy 
    jsr printu
    jmp b68
  //SEG398 main::@68
  b68:
  //SEG399 [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_vbuz1_then_la1 
    lda a
    cmp a
    bne b21_from_b68
  //SEG400 [149] phi from main::@68 to main::@42 [phi:main::@68->main::@42]
  b42_from_b68:
    jmp b42
  //SEG401 main::@42
  b42:
  //SEG402 [150] phi from main::@42 to main::@21 [phi:main::@42->main::@21]
  b21_from_b42:
  //SEG403 [150] phi (byte) main::r#59 = (byte) '+' [phi:main::@42->main::@21#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b21
  //SEG404 [150] phi from main::@68 to main::@21 [phi:main::@68->main::@21]
  b21_from_b68:
  //SEG405 [150] phi (byte) main::r#59 = (byte) '-' [phi:main::@68->main::@21#0] -- vbuxx=vbuc1 
    ldx #'-'
    jmp b21
  //SEG406 main::@21
  b21:
  //SEG407 [151] (byte) printu::a#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] )
    // (byte) printu::a#19 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG408 [152] (byte) printu::b#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG409 [153] (byte) printu::res#19 ← (byte) main::r#59 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] )
    // (byte) printu::res#19 = (byte) main::r#59  // register copy reg byte x
  //SEG410 [154] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG411 [168] phi from main::@21 to printu [phi:main::@21->printu]
  printu_from_b21:
  //SEG412 [168] phi (byte) printu::res#20 = (byte) printu::res#19 [phi:main::@21->printu#0] -- register_copy 
  //SEG413 [168] phi (byte) printu::b#20 = (byte) printu::b#19 [phi:main::@21->printu#1] -- register_copy 
  //SEG414 [168] phi (byte[]) printu::op#20 = (const string) main::op19 [phi:main::@21->printu#2] -- pbuz1=pbuc1 
    lda #<op19
    sta printu.op
    lda #>op19
    sta printu.op+1
  //SEG415 [168] phi (byte) printu::a#20 = (byte) printu::a#19 [phi:main::@21->printu#3] -- register_copy 
  //SEG416 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@21->printu#4] -- register_copy 
    jsr printu
  //SEG417 [155] phi from main::@21 to main::@69 [phi:main::@21->main::@69]
  b69_from_b21:
    jmp b69
  //SEG418 main::@69
  b69:
  //SEG419 [156] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 ] )
  //SEG420 [163] phi from main::@69 to print_ln [phi:main::@69->print_ln]
  print_ln_from_b69:
  //SEG421 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@69->print_ln#0] -- register_copy 
    jsr print_ln
    jmp b70
  //SEG422 main::@70
  b70:
  //SEG423 [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$30
    clc
    adc a
    sta a
  //SEG424 [158] (byte) main::i#1 ← ++ (byte) main::i#10 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG425 [159] if((byte) main::i#1!=(byte/signed byte/word/signed word) 5) goto main::@71 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #5
    bne b71
    jmp b22
  //SEG426 main::@22
  b22:
  //SEG427 [160] if(true) goto main::@22 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b22
    jmp breturn
  //SEG428 main::@return
  breturn:
  //SEG429 [161] return  [ ] ( main:2 [ ] )
    rts
  //SEG430 main::@71
  b71:
  //SEG431 [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG432 [6] phi from main::@71 to main::@1 [phi:main::@71->main::@1]
  b1_from_b71:
  //SEG433 [6] phi (byte*) line_cursor#21 = (byte*) line_cursor#1 [phi:main::@71->main::@1#0] -- register_copy 
  //SEG434 [6] phi (byte) main::i#10 = (byte) main::i#1 [phi:main::@71->main::@1#1] -- register_copy 
  //SEG435 [6] phi (byte*) char_cursor#114 = (byte*~) char_cursor#137 [phi:main::@71->main::@1#2] -- register_copy 
  //SEG436 [6] phi (byte) main::a#10 = (byte) main::a#1 [phi:main::@71->main::@1#3] -- register_copy 
    jmp b1
    op: .text "< @"
    op1: .text "< @"
    op2: .text "< @"
    op3: .text "< @"
    op4: .text "> @"
    op5: .text "> @"
    op6: .text "> @"
    op7: .text "> @"
    op8: .text "<=@"
    op9: .text "<=@"
    op10: .text "<=@"
    op11: .text "<=@"
    op12: .text ">=@"
    op13: .text ">=@"
    op14: .text ">=@"
    op15: .text ">=@"
    op16: .text "==@"
    op17: .text "==@"
    op18: .text "==@"
    op19: .text "==@"
    cs: .byte 7, $c7, $37, $97, $67
}
//SEG437 print_ln
print_ln: {
  //SEG438 [164] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  b1_from_print_ln:
  b1_from_b1:
  //SEG439 [164] phi (byte*) line_cursor#10 = (byte*) line_cursor#20 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
    jmp b1
  //SEG440 print_ln::@1
  b1:
  //SEG441 [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda line_cursor
    clc
    adc #$28
    sta line_cursor
    bcc !+
    inc line_cursor+1
  !:
  //SEG442 [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda line_cursor+1
    cmp char_cursor+1
    bcc b1_from_b1
    bne !+
    lda line_cursor
    cmp char_cursor
    bcc b1_from_b1
  !:
    jmp breturn
  //SEG443 print_ln::@return
  breturn:
  //SEG444 [167] return  [ line_cursor#1 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 ] )
    rts
}
//SEG445 printu
printu: {
    .label a = 2
    .label b = 8
    .label op = 6
  //SEG446 [169] call print_char param-assignment [ char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  //SEG447 [181] phi from printu to print_char [phi:printu->print_char]
  print_char_from_printu:
  //SEG448 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#90 [phi:printu->print_char#0] -- register_copy 
  //SEG449 [181] phi (byte) print_char::ch#5 = (byte) ' ' [phi:printu->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    jmp b1
  //SEG450 printu::@1
  b1:
  //SEG451 [170] (byte) print_byte::b#0 ← (byte) printu::a#20 [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta print_byte.b
  //SEG452 [171] call print_byte param-assignment [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] )
  //SEG453 [185] phi from printu::@1 to print_byte [phi:printu::@1->print_byte]
  print_byte_from_b1:
  //SEG454 [185] phi (byte*) char_cursor#89 = (byte*) char_cursor#52 [phi:printu::@1->print_byte#0] -- register_copy 
  //SEG455 [185] phi (byte) print_byte::b#2 = (byte) print_byte::b#0 [phi:printu::@1->print_byte#1] -- register_copy 
    jsr print_byte
    jmp b2
  //SEG456 printu::@2
  b2:
  //SEG457 [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] )
    // (byte*) print_str::str#1 = (byte[]) printu::op#20  // register copy zp ZP_WORD:6
  //SEG458 [173] call print_str param-assignment [ printu::b#20 printu::res#20 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
  //SEG459 [193] phi from printu::@2 to print_str [phi:printu::@2->print_str]
  print_str_from_b2:
    jsr print_str
    jmp b3
  //SEG460 printu::@3
  b3:
  //SEG461 [174] (byte) print_byte::b#1 ← (byte) printu::b#20 [ printu::res#20 print_byte::b#1 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] ) -- vbuz1=vbuz2 
    lda b
    sta print_byte.b
  //SEG462 [175] call print_byte param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  //SEG463 [185] phi from printu::@3 to print_byte [phi:printu::@3->print_byte]
  print_byte_from_b3:
  //SEG464 [185] phi (byte*) char_cursor#89 = (byte*) char_cursor#2 [phi:printu::@3->print_byte#0] -- register_copy 
  //SEG465 [185] phi (byte) print_byte::b#2 = (byte) print_byte::b#1 [phi:printu::@3->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG466 [176] phi from printu::@3 to printu::@4 [phi:printu::@3->printu::@4]
  b4_from_b3:
    jmp b4
  //SEG467 printu::@4
  b4:
  //SEG468 [177] call print_char param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  //SEG469 [181] phi from printu::@4 to print_char [phi:printu::@4->print_char]
  print_char_from_b4:
  //SEG470 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:printu::@4->print_char#0] -- register_copy 
  //SEG471 [181] phi (byte) print_char::ch#5 = (byte) ' ' [phi:printu::@4->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
    jmp b5
  //SEG472 printu::@5
  b5:
  //SEG473 [178] (byte) print_char::ch#4 ← (byte) printu::res#20 [ char_cursor#52 print_char::ch#4 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] ) -- vbuaa=vbuxx 
    txa
  //SEG474 [179] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG475 [181] phi from printu::@5 to print_char [phi:printu::@5->print_char]
  print_char_from_b5:
  //SEG476 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:printu::@5->print_char#0] -- register_copy 
  //SEG477 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#4 [phi:printu::@5->print_char#1] -- register_copy 
    jsr print_char
    jmp breturn
  //SEG478 printu::@return
  breturn:
  //SEG479 [180] return  [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
    rts
}
//SEG480 print_char
print_char: {
  //SEG481 [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (char_cursor),y
  //SEG482 [183] (byte*) char_cursor#52 ← ++ (byte*) char_cursor#51 [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
    jmp breturn
  //SEG483 print_char::@return
  breturn:
  //SEG484 [184] return  [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
    rts
}
//SEG485 print_byte
print_byte: {
    .label b = $b
  //SEG486 [186] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word) 4 [ char_cursor#89 print_byte::b#2 print_byte::$0 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] ) -- vbuaa=vbuz1_ror_4 
    lda b
    lsr
    lsr
    lsr
    lsr
  //SEG487 [187] (byte) print_char::ch#0 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_char::ch#0 char_cursor#89 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG488 [188] call print_char param-assignment [ char_cursor#52 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] )
  //SEG489 [181] phi from print_byte to print_char [phi:print_byte->print_char]
  print_char_from_print_byte:
  //SEG490 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#89 [phi:print_byte->print_char#0] -- register_copy 
  //SEG491 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
    jmp b1
  //SEG492 print_byte::@1
  b1:
  //SEG493 [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and b
  //SEG494 [190] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#52 print_char::ch#1 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG495 [191] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  //SEG496 [181] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  print_char_from_b1:
  //SEG497 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:print_byte::@1->print_char#0] -- register_copy 
  //SEG498 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
    jmp breturn
  //SEG499 print_byte::@return
  breturn:
  //SEG500 [192] return  [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
    rts
    hextab: .text "0123456789abcdef"
}
//SEG501 print_str
print_str: {
    .label str = 6
  //SEG502 [194] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  b1_from_print_str:
  b1_from_b2:
  //SEG503 [194] phi (byte*) char_cursor#2 = (byte*) char_cursor#52 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
  //SEG504 [194] phi (byte*) print_str::str#2 = (byte*) print_str::str#1 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
    jmp b1
  //SEG505 print_str::@1
  b1:
  //SEG506 [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b2
    jmp breturn
  //SEG507 print_str::@return
  breturn:
  //SEG508 [196] return  [ char_cursor#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
    rts
  //SEG509 print_str::@2
  b2:
  //SEG510 [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    ldy #0
    sta (char_cursor),y
  //SEG511 [198] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#2 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG512 [199] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
    jmp b1_from_b2
}
//SEG513 print_cls
print_cls: {
    .label sc = 4
  //SEG514 [201] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  b1_from_print_cls:
  //SEG515 [201] phi (byte*) print_cls::sc#2 = ((byte*))(word/signed word) 1024 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta sc
    lda #>$400
    sta sc+1
    jmp b1
  //SEG516 [201] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  b1_from_b1:
  //SEG517 [201] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
    jmp b1
  //SEG518 print_cls::@1
  b1:
  //SEG519 [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG520 [203] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG521 [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda sc+1
    cmp #>$400+$3e8
    bne b1_from_b1
    lda sc
    cmp #<$400+$3e8
    bne b1_from_b1
    jmp breturn
  //SEG522 print_cls::@return
  breturn:
  //SEG523 [205] return  [ ] ( main:2::print_cls:5 [ ] )
    rts
}

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp b10
Removing instruction jmp bend
Removing instruction jmp b1
Removing instruction jmp b23
Removing instruction jmp b2
Removing instruction jmp b46
Removing instruction jmp b24
Removing instruction jmp b3
Removing instruction jmp b47
Removing instruction jmp b25
Removing instruction jmp b4
Removing instruction jmp b48
Removing instruction jmp b26
Removing instruction jmp b5
Removing instruction jmp b49
Removing instruction jmp b50
Removing instruction jmp b27
Removing instruction jmp b6
Removing instruction jmp b51
Removing instruction jmp b28
Removing instruction jmp b7
Removing instruction jmp b52
Removing instruction jmp b29
Removing instruction jmp b8
Removing instruction jmp b53
Removing instruction jmp b30
Removing instruction jmp b9
Removing instruction jmp b54
Removing instruction jmp b55
Removing instruction jmp b31
Removing instruction jmp b10
Removing instruction jmp b56
Removing instruction jmp b32
Removing instruction jmp b11
Removing instruction jmp b57
Removing instruction jmp b33
Removing instruction jmp b12
Removing instruction jmp b58
Removing instruction jmp b34
Removing instruction jmp b13
Removing instruction jmp b59
Removing instruction jmp b60
Removing instruction jmp b35
Removing instruction jmp b14
Removing instruction jmp b61
Removing instruction jmp b36
Removing instruction jmp b15
Removing instruction jmp b62
Removing instruction jmp b37
Removing instruction jmp b16
Removing instruction jmp b63
Removing instruction jmp b38
Removing instruction jmp b17
Removing instruction jmp b64
Removing instruction jmp b65
Removing instruction jmp b39
Removing instruction jmp b18
Removing instruction jmp b66
Removing instruction jmp b40
Removing instruction jmp b19
Removing instruction jmp b67
Removing instruction jmp b41
Removing instruction jmp b20
Removing instruction jmp b68
Removing instruction jmp b42
Removing instruction jmp b21
Removing instruction jmp b69
Removing instruction jmp b70
Removing instruction jmp b22
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction ldy #0
Succesful ASM optimization Pass5UnnecesaryLoadElimination
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b2 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Removing instruction bbegin:
Removing instruction b10_from_bbegin:
Removing instruction main_from_b10:
Removing instruction bend_from_b10:
Removing instruction b23_from_b1:
Removing instruction b2_from_b23:
Removing instruction b24_from_b46:
Removing instruction b3_from_b24:
Removing instruction b25_from_b47:
Removing instruction b4_from_b25:
Removing instruction b26_from_b48:
Removing instruction b5_from_b26:
Removing instruction b49_from_b5:
Removing instruction print_ln_from_b49:
Removing instruction b27_from_b50:
Removing instruction b6_from_b27:
Removing instruction b28_from_b51:
Removing instruction b7_from_b28:
Removing instruction b29_from_b52:
Removing instruction b8_from_b29:
Removing instruction b30_from_b53:
Removing instruction b9_from_b30:
Removing instruction b54_from_b9:
Removing instruction print_ln_from_b54:
Removing instruction b31_from_b55:
Removing instruction b10_from_b31:
Removing instruction b32_from_b56:
Removing instruction b11_from_b32:
Removing instruction b33_from_b57:
Removing instruction b12_from_b33:
Removing instruction b34_from_b58:
Removing instruction b13_from_b34:
Removing instruction b59_from_b13:
Removing instruction print_ln_from_b59:
Removing instruction b35_from_b60:
Removing instruction b14_from_b35:
Removing instruction b36_from_b61:
Removing instruction b15_from_b36:
Removing instruction b37_from_b62:
Removing instruction b16_from_b37:
Removing instruction b38_from_b63:
Removing instruction b17_from_b38:
Removing instruction b64_from_b17:
Removing instruction print_ln_from_b64:
Removing instruction b39_from_b65:
Removing instruction b18_from_b39:
Removing instruction b40_from_b66:
Removing instruction b19_from_b40:
Removing instruction b41_from_b67:
Removing instruction b20_from_b41:
Removing instruction b42_from_b68:
Removing instruction b21_from_b42:
Removing instruction b69_from_b21:
Removing instruction print_ln_from_b69:
Removing instruction b1_from_print_ln:
Removing instruction b1_from_b1:
Removing instruction b4_from_b3:
Removing instruction print_char_from_b4:
Removing instruction b1_from_print_str:
Removing instruction b1_from_b2:
Removing instruction b1_from_b1:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction b10:
Removing instruction bend:
Removing instruction print_cls_from_main:
Removing instruction b1_from_main:
Removing instruction b23:
Removing instruction printu_from_b2:
Removing instruction b46:
Removing instruction b24:
Removing instruction printu_from_b3:
Removing instruction b47:
Removing instruction b25:
Removing instruction printu_from_b4:
Removing instruction b48:
Removing instruction b26:
Removing instruction printu_from_b5:
Removing instruction b49:
Removing instruction b50:
Removing instruction b27:
Removing instruction printu_from_b6:
Removing instruction b51:
Removing instruction b28:
Removing instruction printu_from_b7:
Removing instruction b52:
Removing instruction b29:
Removing instruction printu_from_b8:
Removing instruction b53:
Removing instruction b30:
Removing instruction printu_from_b9:
Removing instruction b54:
Removing instruction b55:
Removing instruction b31:
Removing instruction printu_from_b10:
Removing instruction b56:
Removing instruction b32:
Removing instruction printu_from_b11:
Removing instruction b57:
Removing instruction b33:
Removing instruction printu_from_b12:
Removing instruction b58:
Removing instruction b34:
Removing instruction printu_from_b13:
Removing instruction b59:
Removing instruction b60:
Removing instruction b35:
Removing instruction printu_from_b14:
Removing instruction b61:
Removing instruction b36:
Removing instruction printu_from_b15:
Removing instruction b62:
Removing instruction b37:
Removing instruction printu_from_b16:
Removing instruction b63:
Removing instruction b38:
Removing instruction printu_from_b17:
Removing instruction b64:
Removing instruction b65:
Removing instruction b39:
Removing instruction printu_from_b18:
Removing instruction b66:
Removing instruction b40:
Removing instruction printu_from_b19:
Removing instruction b67:
Removing instruction b41:
Removing instruction printu_from_b20:
Removing instruction b68:
Removing instruction b42:
Removing instruction printu_from_b21:
Removing instruction b69:
Removing instruction b70:
Removing instruction breturn:
Removing instruction b1_from_b71:
Removing instruction breturn:
Removing instruction print_char_from_printu:
Removing instruction b1:
Removing instruction print_byte_from_b1:
Removing instruction b2:
Removing instruction print_str_from_b2:
Removing instruction b3:
Removing instruction print_byte_from_b3:
Removing instruction b4:
Removing instruction b5:
Removing instruction print_char_from_b5:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction print_char_from_print_byte:
Removing instruction b1:
Removing instruction print_char_from_b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction b1_from_print_cls:
Removing instruction breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Removing unreachable instruction rts
Succesful ASM optimization Pass5UnreachableCodeElimination
Relabelling long label b2_from_b1 to b23
Relabelling long label b3_from_b46 to b24
Relabelling long label b4_from_b47 to b25
Relabelling long label b5_from_b48 to b26
Relabelling long label b6_from_b50 to b27
Relabelling long label b7_from_b51 to b28
Relabelling long label b8_from_b52 to b29
Relabelling long label b9_from_b53 to b30
Relabelling long label b10_from_b55 to b31
Relabelling long label b11_from_b56 to b32
Relabelling long label b12_from_b57 to b33
Relabelling long label b13_from_b58 to b34
Relabelling long label b14_from_b60 to b35
Relabelling long label b15_from_b61 to b36
Relabelling long label b16_from_b62 to b37
Relabelling long label b17_from_b63 to b38
Relabelling long label b18_from_b65 to b39
Relabelling long label b19_from_b66 to b40
Relabelling long label b20_from_b67 to b41
Relabelling long label b21_from_b68 to b42
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp b1
Succesful ASM optimization Pass5NextJumpElimination

FINAL SYMBOL TABLE
(label) @10
(label) @begin
(label) @end
(byte*) char_cursor
(byte*) char_cursor#1 char_cursor zp ZP_WORD:9 11.0
(byte*) char_cursor#114 char_cursor zp ZP_WORD:9 2.75
(byte*~) char_cursor#137 char_cursor zp ZP_WORD:9 22.0
(byte*~) char_cursor#138 char_cursor zp ZP_WORD:9 22.0
(byte*~) char_cursor#142 char_cursor zp ZP_WORD:9 22.0
(byte*~) char_cursor#146 char_cursor zp ZP_WORD:9 22.0
(byte*~) char_cursor#154 char_cursor zp ZP_WORD:9 22.0
(byte*) char_cursor#2 char_cursor zp ZP_WORD:9 6.166666666666666
(byte*) char_cursor#51 char_cursor zp ZP_WORD:9 7.0
(byte*) char_cursor#52 char_cursor zp ZP_WORD:9 2.106060606060605
(byte*) char_cursor#89 char_cursor zp ZP_WORD:9 2.0
(byte*) char_cursor#90 char_cursor zp ZP_WORD:9 222.0
(byte*) line_cursor
(byte*) line_cursor#1 line_cursor zp ZP_WORD:4 3.2265625
(byte*) line_cursor#10 line_cursor zp ZP_WORD:4 204.0
(byte*) line_cursor#20 line_cursor zp ZP_WORD:4 57.0
(byte*) line_cursor#21 line_cursor zp ZP_WORD:4 0.7333333333333333
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@28
(label) main::@29
(label) main::@3
(label) main::@30
(label) main::@31
(label) main::@32
(label) main::@33
(label) main::@34
(label) main::@35
(label) main::@36
(label) main::@37
(label) main::@38
(label) main::@39
(label) main::@4
(label) main::@40
(label) main::@41
(label) main::@42
(label) main::@46
(label) main::@47
(label) main::@48
(label) main::@49
(label) main::@5
(label) main::@50
(label) main::@51
(label) main::@52
(label) main::@53
(label) main::@54
(label) main::@55
(label) main::@56
(label) main::@57
(label) main::@58
(label) main::@59
(label) main::@6
(label) main::@60
(label) main::@61
(label) main::@62
(label) main::@63
(label) main::@64
(label) main::@65
(label) main::@66
(label) main::@67
(label) main::@68
(label) main::@69
(label) main::@7
(label) main::@70
(label) main::@71
(label) main::@8
(label) main::@9
(label) main::@return
(byte) main::a
(byte) main::a#1 a zp ZP_BYTE:2 5.5
(byte) main::a#10 a zp ZP_BYTE:2 3.860927152317884
(byte) main::b
(byte) main::b#0 b zp ZP_BYTE:12 0.9758064516129035
(byte[5]) main::cs
(const byte[5]) main::cs#0 cs = { (byte/signed byte/word/signed word) 7, (byte/word/signed word) 199, (byte/signed byte/word/signed word) 55, (byte/word/signed word) 151, (byte/signed byte/word/signed word) 103 }
(byte) main::i
(byte) main::i#1 i zp ZP_BYTE:3 11.0
(byte) main::i#10 i zp ZP_BYTE:3 0.8684210526315792
(const string) main::op op = (string) "< @"
(const string) main::op1 op1 = (string) "< @"
(const string) main::op10 op10 = (string) "<=@"
(const string) main::op11 op11 = (string) "<=@"
(const string) main::op12 op12 = (string) ">=@"
(const string) main::op13 op13 = (string) ">=@"
(const string) main::op14 op14 = (string) ">=@"
(const string) main::op15 op15 = (string) ">=@"
(const string) main::op16 op16 = (string) "==@"
(const string) main::op17 op17 = (string) "==@"
(const string) main::op18 op18 = (string) "==@"
(const string) main::op19 op19 = (string) "==@"
(const string) main::op2 op2 = (string) "< @"
(const string) main::op3 op3 = (string) "< @"
(const string) main::op4 op4 = (string) "> @"
(const string) main::op5 op5 = (string) "> @"
(const string) main::op6 op6 = (string) "> @"
(const string) main::op7 op7 = (string) "> @"
(const string) main::op8 op8 = (string) "<=@"
(const string) main::op9 op9 = (string) "<=@"
(byte) main::r
(byte) main::r#40 reg byte x 3.6666666666666665
(byte) main::r#41 reg byte x 5.5
(byte) main::r#42 reg byte x 3.6666666666666665
(byte) main::r#43 reg byte x 3.6666666666666665
(byte) main::r#44 reg byte x 3.6666666666666665
(byte) main::r#45 reg byte x 5.5
(byte) main::r#46 reg byte x 3.6666666666666665
(byte) main::r#47 reg byte x 3.6666666666666665
(byte) main::r#48 reg byte x 3.6666666666666665
(byte) main::r#49 reg byte x 5.5
(byte) main::r#50 reg byte x 3.6666666666666665
(byte) main::r#51 reg byte x 3.6666666666666665
(byte) main::r#52 reg byte x 3.6666666666666665
(byte) main::r#53 reg byte x 5.5
(byte) main::r#54 reg byte x 3.6666666666666665
(byte) main::r#55 reg byte x 3.6666666666666665
(byte) main::r#56 reg byte x 3.6666666666666665
(byte) main::r#57 reg byte x 5.5
(byte) main::r#58 reg byte x 3.6666666666666665
(byte) main::r#59 reg byte x 3.6666666666666665
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 b zp ZP_BYTE:11 4.0
(byte) print_byte::b#1 b zp ZP_BYTE:11 4.0
(byte) print_byte::b#2 b zp ZP_BYTE:11 2.0
(byte[]) print_byte::hextab
(const string) print_byte::hextab#0 hextab = (string) "0123456789abcdef"
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#4 reg byte a 4.0
(byte) print_char::ch#5 reg byte a 8.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:4 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:4 16.5
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp ZP_WORD:6 22.0
(byte*) print_str::str#1 str zp ZP_WORD:6 2.0
(byte*) print_str::str#2 str zp ZP_WORD:6 11.5
(void()) printu((byte) printu::a , (byte[]) printu::op , (byte) printu::b , (byte) printu::res)
(label) printu::@1
(label) printu::@2
(label) printu::@3
(label) printu::@4
(label) printu::@5
(label) printu::@return
(byte) printu::a
(byte) printu::a#0 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#1 a zp ZP_BYTE:2 11.0
(byte) printu::a#10 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#11 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#12 a zp ZP_BYTE:2 5.5
(byte) printu::a#13 a zp ZP_BYTE:2 11.0
(byte) printu::a#14 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#15 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#16 a zp ZP_BYTE:2 5.5
(byte) printu::a#17 a zp ZP_BYTE:2 11.0
(byte) printu::a#18 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#19 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#2 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#20 a zp ZP_BYTE:2 111.0
(byte) printu::a#3 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#4 a zp ZP_BYTE:2 5.5
(byte) printu::a#5 a zp ZP_BYTE:2 11.0
(byte) printu::a#6 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#7 a zp ZP_BYTE:2 7.333333333333333
(byte) printu::a#8 a zp ZP_BYTE:2 5.5
(byte) printu::a#9 a zp ZP_BYTE:2 11.0
(byte) printu::b
(byte) printu::b#0 b zp ZP_BYTE:8 11.0
(byte) printu::b#10 b zp ZP_BYTE:8 11.0
(byte) printu::b#11 b zp ZP_BYTE:8 11.0
(byte) printu::b#12 b zp ZP_BYTE:8 7.333333333333333
(byte) printu::b#14 b zp ZP_BYTE:8 11.0
(byte) printu::b#15 b zp ZP_BYTE:8 11.0
(byte) printu::b#16 b zp ZP_BYTE:8 7.333333333333333
(byte) printu::b#18 b zp ZP_BYTE:8 11.0
(byte) printu::b#19 b zp ZP_BYTE:8 11.0
(byte) printu::b#2 b zp ZP_BYTE:8 11.0
(byte) printu::b#20 b zp ZP_BYTE:8 27.833333333333325
(byte) printu::b#3 b zp ZP_BYTE:8 11.0
(byte) printu::b#4 b zp ZP_BYTE:8 7.333333333333333
(byte) printu::b#6 b zp ZP_BYTE:8 11.0
(byte) printu::b#7 b zp ZP_BYTE:8 11.0
(byte) printu::b#8 b zp ZP_BYTE:8 7.333333333333333
(byte[]) printu::op
(byte[]) printu::op#20 op zp ZP_WORD:6 0.5
(byte) printu::res
(byte) printu::res#0 reg byte x 22.0
(byte) printu::res#1 reg byte x 22.0
(byte) printu::res#10 reg byte x 22.0
(byte) printu::res#11 reg byte x 22.0
(byte) printu::res#12 reg byte x 11.0
(byte) printu::res#13 reg byte x 22.0
(byte) printu::res#14 reg byte x 22.0
(byte) printu::res#15 reg byte x 22.0
(byte) printu::res#16 reg byte x 11.0
(byte) printu::res#17 reg byte x 22.0
(byte) printu::res#18 reg byte x 22.0
(byte) printu::res#19 reg byte x 22.0
(byte) printu::res#2 reg byte x 22.0
(byte) printu::res#20 reg byte x 22.200000000000003
(byte) printu::res#3 reg byte x 22.0
(byte) printu::res#4 reg byte x 11.0
(byte) printu::res#5 reg byte x 22.0
(byte) printu::res#6 reg byte x 22.0
(byte) printu::res#7 reg byte x 22.0
(byte) printu::res#8 reg byte x 11.0
(byte) printu::res#9 reg byte x 22.0

zp ZP_BYTE:2 [ main::a#10 main::a#1 printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
zp ZP_BYTE:3 [ main::i#10 main::i#1 ]
reg byte x [ main::r#40 ]
reg byte x [ main::r#41 ]
reg byte x [ main::r#42 ]
reg byte x [ main::r#43 ]
reg byte x [ main::r#44 ]
reg byte x [ main::r#45 ]
reg byte x [ main::r#46 ]
reg byte x [ main::r#47 ]
reg byte x [ main::r#48 ]
reg byte x [ main::r#49 ]
reg byte x [ main::r#50 ]
reg byte x [ main::r#51 ]
reg byte x [ main::r#52 ]
reg byte x [ main::r#53 ]
reg byte x [ main::r#54 ]
reg byte x [ main::r#55 ]
reg byte x [ main::r#56 ]
reg byte x [ main::r#57 ]
reg byte x [ main::r#58 ]
reg byte x [ main::r#59 ]
zp ZP_WORD:4 [ line_cursor#10 line_cursor#20 line_cursor#21 line_cursor#1 print_cls::sc#2 print_cls::sc#1 ]
zp ZP_WORD:6 [ printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ]
zp ZP_BYTE:8 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
reg byte x [ printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 ]
reg byte a [ print_char::ch#5 print_char::ch#0 print_char::ch#1 print_char::ch#4 ]
zp ZP_WORD:9 [ char_cursor#51 char_cursor#89 char_cursor#90 char_cursor#138 char_cursor#52 char_cursor#142 char_cursor#146 char_cursor#114 char_cursor#137 char_cursor#154 char_cursor#2 char_cursor#1 ]
zp ZP_BYTE:11 [ print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
zp ZP_BYTE:12 [ main::b#0 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]


FINAL ASSEMBLER
Score: 10957

//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .label char_cursor = 9
  .label line_cursor = 4
//SEG2 @begin
//SEG3 [1] phi from @begin to @10 [phi:@begin->@10]
//SEG4 @10
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @10 to main [phi:@10->main]
  jsr main
//SEG7 [3] phi from @10 to @end [phi:@10->@end]
//SEG8 @end
//SEG9 main
main: {
    .label b = $c
    .label a = 2
    .label i = 3
  //SEG10 [5] call print_cls param-assignment [ ] ( main:2 [ ] )
  //SEG11 [200] phi from main to print_cls [phi:main->print_cls]
    jsr print_cls
  //SEG12 [6] phi from main to main::@1 [phi:main->main::@1]
  //SEG13 [6] phi (byte*) line_cursor#21 = ((byte*))(word/signed word) 1024 [phi:main->main::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta line_cursor
    lda #>$400
    sta line_cursor+1
  //SEG14 [6] phi (byte) main::i#10 = (byte/signed byte/word/signed word) 0 [phi:main->main::@1#1] -- vbuz1=vbuc1 
    lda #0
    sta i
  //SEG15 [6] phi (byte*) char_cursor#114 = ((byte*))(word/signed word) 1024 [phi:main->main::@1#2] -- pbuz1=pbuc1 
    lda #<$400
    sta char_cursor
    lda #>$400
    sta char_cursor+1
  //SEG16 [6] phi (byte) main::a#10 = (byte/signed byte/word/signed word) 7 [phi:main->main::@1#3] -- vbuz1=vbuc1 
    lda #7
    sta a
  //SEG17 main::@1
  b1:
  //SEG18 [7] (byte) main::b#0 ← (byte/word/signed word) 206 - (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) -- vbuz1=vbuc1_minus_vbuz2 
    lda #$ce
    sec
    sbc a
    sta b
  //SEG19 [8] if((byte) main::a#10>=(byte) main::b#0) goto main::@2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 ] ) -- vbuz1_ge_vbuz2_then_la1 
    lda a
    cmp b
    bcs b23
  //SEG20 [9] phi from main::@1 to main::@23 [phi:main::@1->main::@23]
  //SEG21 main::@23
  //SEG22 [10] phi from main::@23 to main::@2 [phi:main::@23->main::@2]
  //SEG23 [10] phi (byte) main::r#40 = (byte) '+' [phi:main::@23->main::@2#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b2
  //SEG24 [10] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  b23:
  //SEG25 [10] phi (byte) main::r#40 = (byte) '-' [phi:main::@1->main::@2#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG26 main::@2
  b2:
  //SEG27 [11] (byte) printu::a#0 ← (byte) main::a#10 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 ] )
    // (byte) printu::a#0 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG28 [12] (byte) printu::b#0 ← (byte) main::b#0 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 main::r#40 printu::a#0 printu::b#0 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG29 [13] (byte) printu::res#0 ← (byte) main::r#40 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] ( main:2 [ main::a#10 char_cursor#114 main::i#10 line_cursor#21 main::b#0 printu::a#0 printu::b#0 printu::res#0 ] )
    // (byte) printu::res#0 = (byte) main::r#40  // register copy reg byte x
  //SEG30 [14] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG31 [168] phi from main::@2 to printu [phi:main::@2->printu]
  //SEG32 [168] phi (byte) printu::res#20 = (byte) printu::res#0 [phi:main::@2->printu#0] -- register_copy 
  //SEG33 [168] phi (byte) printu::b#20 = (byte) printu::b#0 [phi:main::@2->printu#1] -- register_copy 
  //SEG34 [168] phi (byte[]) printu::op#20 = (const string) main::op [phi:main::@2->printu#2] -- pbuz1=pbuc1 
    lda #<op
    sta printu.op
    lda #>op
    sta printu.op+1
  //SEG35 [168] phi (byte) printu::a#20 = (byte) printu::a#0 [phi:main::@2->printu#3] -- register_copy 
  //SEG36 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#114 [phi:main::@2->printu#4] -- register_copy 
    jsr printu
  //SEG37 main::@46
  //SEG38 [15] if((byte) main::a#10>=(byte/signed byte/word/signed word) 55) goto main::@3 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_vbuc1_then_la1 
    lda a
    cmp #$37
    bcs b24
  //SEG39 [16] phi from main::@46 to main::@24 [phi:main::@46->main::@24]
  //SEG40 main::@24
  //SEG41 [17] phi from main::@24 to main::@3 [phi:main::@24->main::@3]
  //SEG42 [17] phi (byte) main::r#41 = (byte) '+' [phi:main::@24->main::@3#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b3
  //SEG43 [17] phi from main::@46 to main::@3 [phi:main::@46->main::@3]
  b24:
  //SEG44 [17] phi (byte) main::r#41 = (byte) '-' [phi:main::@46->main::@3#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG45 main::@3
  b3:
  //SEG46 [18] (byte) printu::a#1 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#41 printu::a#1 char_cursor#52 ] )
    // (byte) printu::a#1 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG47 [19] (byte) printu::res#1 ← (byte) main::r#41 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#1 printu::res#1 char_cursor#52 ] )
    // (byte) printu::res#1 = (byte) main::r#41  // register copy reg byte x
  //SEG48 [20] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG49 [168] phi from main::@3 to printu [phi:main::@3->printu]
  //SEG50 [168] phi (byte) printu::res#20 = (byte) printu::res#1 [phi:main::@3->printu#0] -- register_copy 
  //SEG51 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@3->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG52 [168] phi (byte[]) printu::op#20 = (const string) main::op1 [phi:main::@3->printu#2] -- pbuz1=pbuc1 
    lda #<op1
    sta printu.op
    lda #>op1
    sta printu.op+1
  //SEG53 [168] phi (byte) printu::a#20 = (byte) printu::a#1 [phi:main::@3->printu#3] -- register_copy 
  //SEG54 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@3->printu#4] -- register_copy 
    jsr printu
  //SEG55 main::@47
  //SEG56 [21] if((byte) main::a#10>=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@4 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bcs b25
  //SEG57 [22] phi from main::@47 to main::@25 [phi:main::@47->main::@25]
  //SEG58 main::@25
  //SEG59 [23] phi from main::@25 to main::@4 [phi:main::@25->main::@4]
  //SEG60 [23] phi (byte) main::r#42 = (byte) '+' [phi:main::@25->main::@4#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b4
  //SEG61 [23] phi from main::@47 to main::@4 [phi:main::@47->main::@4]
  b25:
  //SEG62 [23] phi (byte) main::r#42 = (byte) '-' [phi:main::@47->main::@4#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG63 main::@4
  b4:
  //SEG64 [24] (byte) printu::a#2 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 char_cursor#52 ] )
    // (byte) printu::a#2 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG65 [25] (byte) printu::b#2 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#42 printu::a#2 printu::b#2 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG66 [26] (byte) printu::res#2 ← (byte) main::r#42 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#2 printu::b#2 printu::res#2 char_cursor#52 ] )
    // (byte) printu::res#2 = (byte) main::r#42  // register copy reg byte x
  //SEG67 [27] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG68 [168] phi from main::@4 to printu [phi:main::@4->printu]
  //SEG69 [168] phi (byte) printu::res#20 = (byte) printu::res#2 [phi:main::@4->printu#0] -- register_copy 
  //SEG70 [168] phi (byte) printu::b#20 = (byte) printu::b#2 [phi:main::@4->printu#1] -- register_copy 
  //SEG71 [168] phi (byte[]) printu::op#20 = (const string) main::op2 [phi:main::@4->printu#2] -- pbuz1=pbuc1 
    lda #<op2
    sta printu.op
    lda #>op2
    sta printu.op+1
  //SEG72 [168] phi (byte) printu::a#20 = (byte) printu::a#2 [phi:main::@4->printu#3] -- register_copy 
  //SEG73 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@4->printu#4] -- register_copy 
    jsr printu
  //SEG74 main::@48
  //SEG75 [28] if((byte) main::a#10>=(byte) main::a#10) goto main::@5 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ) -- vbuz1_ge_vbuz1_then_la1 
    lda a
    cmp a
    bcs b26
  //SEG76 [29] phi from main::@48 to main::@26 [phi:main::@48->main::@26]
  //SEG77 main::@26
  //SEG78 [30] phi from main::@26 to main::@5 [phi:main::@26->main::@5]
  //SEG79 [30] phi (byte) main::r#43 = (byte) '+' [phi:main::@26->main::@5#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b5
  //SEG80 [30] phi from main::@48 to main::@5 [phi:main::@48->main::@5]
  b26:
  //SEG81 [30] phi (byte) main::r#43 = (byte) '-' [phi:main::@48->main::@5#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG82 main::@5
  b5:
  //SEG83 [31] (byte) printu::a#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 char_cursor#52 ] )
    // (byte) printu::a#3 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG84 [32] (byte) printu::b#3 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 main::r#43 printu::a#3 printu::b#3 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG85 [33] (byte) printu::res#3 ← (byte) main::r#43 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#3 printu::b#3 printu::res#3 char_cursor#52 ] )
    // (byte) printu::res#3 = (byte) main::r#43  // register copy reg byte x
  //SEG86 [34] call printu param-assignment [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] )
  //SEG87 [168] phi from main::@5 to printu [phi:main::@5->printu]
  //SEG88 [168] phi (byte) printu::res#20 = (byte) printu::res#3 [phi:main::@5->printu#0] -- register_copy 
  //SEG89 [168] phi (byte) printu::b#20 = (byte) printu::b#3 [phi:main::@5->printu#1] -- register_copy 
  //SEG90 [168] phi (byte[]) printu::op#20 = (const string) main::op3 [phi:main::@5->printu#2] -- pbuz1=pbuc1 
    lda #<op3
    sta printu.op
    lda #>op3
    sta printu.op+1
  //SEG91 [168] phi (byte) printu::a#20 = (byte) printu::a#3 [phi:main::@5->printu#3] -- register_copy 
  //SEG92 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@5->printu#4] -- register_copy 
    jsr printu
  //SEG93 [35] phi from main::@5 to main::@49 [phi:main::@5->main::@49]
  //SEG94 main::@49
  //SEG95 [36] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG96 [163] phi from main::@49 to print_ln [phi:main::@49->print_ln]
  //SEG97 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#21 [phi:main::@49->print_ln#0] -- register_copy 
    jsr print_ln
  //SEG98 main::@50
  //SEG99 [37] if((byte) main::a#10<=(byte) main::b#0) goto main::@6 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_le_vbuz2_then_la1 
    lda b
    cmp a
    bcs b27
  //SEG100 [38] phi from main::@50 to main::@27 [phi:main::@50->main::@27]
  //SEG101 main::@27
  //SEG102 [39] phi from main::@27 to main::@6 [phi:main::@27->main::@6]
  //SEG103 [39] phi (byte) main::r#44 = (byte) '+' [phi:main::@27->main::@6#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b6
  //SEG104 [39] phi from main::@50 to main::@6 [phi:main::@50->main::@6]
  b27:
  //SEG105 [39] phi (byte) main::r#44 = (byte) '-' [phi:main::@50->main::@6#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG106 main::@6
  b6:
  //SEG107 [40] (byte) printu::a#4 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 ] )
    // (byte) printu::a#4 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG108 [41] (byte) printu::b#4 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#44 printu::a#4 printu::b#4 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG109 [42] (byte) printu::res#4 ← (byte) main::r#44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 ] )
    // (byte) printu::res#4 = (byte) main::r#44  // register copy reg byte x
  //SEG110 [43] (byte*~) char_cursor#154 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#4 printu::b#4 printu::res#4 char_cursor#154 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG111 [44] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG112 [168] phi from main::@6 to printu [phi:main::@6->printu]
  //SEG113 [168] phi (byte) printu::res#20 = (byte) printu::res#4 [phi:main::@6->printu#0] -- register_copy 
  //SEG114 [168] phi (byte) printu::b#20 = (byte) printu::b#4 [phi:main::@6->printu#1] -- register_copy 
  //SEG115 [168] phi (byte[]) printu::op#20 = (const string) main::op4 [phi:main::@6->printu#2] -- pbuz1=pbuc1 
    lda #<op4
    sta printu.op
    lda #>op4
    sta printu.op+1
  //SEG116 [168] phi (byte) printu::a#20 = (byte) printu::a#4 [phi:main::@6->printu#3] -- register_copy 
  //SEG117 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#154 [phi:main::@6->printu#4] -- register_copy 
    jsr printu
  //SEG118 main::@51
  //SEG119 [45] if((byte) main::a#10<=(byte/signed byte/word/signed word) 55) goto main::@7 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_vbuc1_then_la1 
    lda #$37
    cmp a
    bcs b28
  //SEG120 [46] phi from main::@51 to main::@28 [phi:main::@51->main::@28]
  //SEG121 main::@28
  //SEG122 [47] phi from main::@28 to main::@7 [phi:main::@28->main::@7]
  //SEG123 [47] phi (byte) main::r#45 = (byte) '+' [phi:main::@28->main::@7#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b7
  //SEG124 [47] phi from main::@51 to main::@7 [phi:main::@51->main::@7]
  b28:
  //SEG125 [47] phi (byte) main::r#45 = (byte) '-' [phi:main::@51->main::@7#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG126 main::@7
  b7:
  //SEG127 [48] (byte) printu::a#5 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#45 printu::a#5 char_cursor#52 ] )
    // (byte) printu::a#5 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG128 [49] (byte) printu::res#5 ← (byte) main::r#45 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#5 printu::res#5 char_cursor#52 ] )
    // (byte) printu::res#5 = (byte) main::r#45  // register copy reg byte x
  //SEG129 [50] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG130 [168] phi from main::@7 to printu [phi:main::@7->printu]
  //SEG131 [168] phi (byte) printu::res#20 = (byte) printu::res#5 [phi:main::@7->printu#0] -- register_copy 
  //SEG132 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@7->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG133 [168] phi (byte[]) printu::op#20 = (const string) main::op5 [phi:main::@7->printu#2] -- pbuz1=pbuc1 
    lda #<op5
    sta printu.op
    lda #>op5
    sta printu.op+1
  //SEG134 [168] phi (byte) printu::a#20 = (byte) printu::a#5 [phi:main::@7->printu#3] -- register_copy 
  //SEG135 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@7->printu#4] -- register_copy 
    jsr printu
  //SEG136 main::@52
  //SEG137 [51] if((byte) main::a#10<=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@8 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_pbuc1_derefidx_vbuz2_then_la1 
    ldy i
    lda cs,y
    cmp a
    bcs b29
  //SEG138 [52] phi from main::@52 to main::@29 [phi:main::@52->main::@29]
  //SEG139 main::@29
  //SEG140 [53] phi from main::@29 to main::@8 [phi:main::@29->main::@8]
  //SEG141 [53] phi (byte) main::r#46 = (byte) '+' [phi:main::@29->main::@8#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b8
  //SEG142 [53] phi from main::@52 to main::@8 [phi:main::@52->main::@8]
  b29:
  //SEG143 [53] phi (byte) main::r#46 = (byte) '-' [phi:main::@52->main::@8#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG144 main::@8
  b8:
  //SEG145 [54] (byte) printu::a#6 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 char_cursor#52 ] )
    // (byte) printu::a#6 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG146 [55] (byte) printu::b#6 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#46 printu::a#6 printu::b#6 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG147 [56] (byte) printu::res#6 ← (byte) main::r#46 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#6 printu::b#6 printu::res#6 char_cursor#52 ] )
    // (byte) printu::res#6 = (byte) main::r#46  // register copy reg byte x
  //SEG148 [57] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG149 [168] phi from main::@8 to printu [phi:main::@8->printu]
  //SEG150 [168] phi (byte) printu::res#20 = (byte) printu::res#6 [phi:main::@8->printu#0] -- register_copy 
  //SEG151 [168] phi (byte) printu::b#20 = (byte) printu::b#6 [phi:main::@8->printu#1] -- register_copy 
  //SEG152 [168] phi (byte[]) printu::op#20 = (const string) main::op6 [phi:main::@8->printu#2] -- pbuz1=pbuc1 
    lda #<op6
    sta printu.op
    lda #>op6
    sta printu.op+1
  //SEG153 [168] phi (byte) printu::a#20 = (byte) printu::a#6 [phi:main::@8->printu#3] -- register_copy 
  //SEG154 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@8->printu#4] -- register_copy 
    jsr printu
  //SEG155 main::@53
  //SEG156 [58] if((byte) main::a#10<=(byte) main::a#10) goto main::@9 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_le_vbuz1_then_la1 
    lda a
    cmp a
    bcs b30
  //SEG157 [59] phi from main::@53 to main::@30 [phi:main::@53->main::@30]
  //SEG158 main::@30
  //SEG159 [60] phi from main::@30 to main::@9 [phi:main::@30->main::@9]
  //SEG160 [60] phi (byte) main::r#47 = (byte) '+' [phi:main::@30->main::@9#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b9
  //SEG161 [60] phi from main::@53 to main::@9 [phi:main::@53->main::@9]
  b30:
  //SEG162 [60] phi (byte) main::r#47 = (byte) '-' [phi:main::@53->main::@9#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG163 main::@9
  b9:
  //SEG164 [61] (byte) printu::a#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 char_cursor#52 ] )
    // (byte) printu::a#7 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG165 [62] (byte) printu::b#7 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#47 printu::a#7 printu::b#7 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG166 [63] (byte) printu::res#7 ← (byte) main::r#47 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#7 printu::b#7 printu::res#7 char_cursor#52 ] )
    // (byte) printu::res#7 = (byte) main::r#47  // register copy reg byte x
  //SEG167 [64] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG168 [168] phi from main::@9 to printu [phi:main::@9->printu]
  //SEG169 [168] phi (byte) printu::res#20 = (byte) printu::res#7 [phi:main::@9->printu#0] -- register_copy 
  //SEG170 [168] phi (byte) printu::b#20 = (byte) printu::b#7 [phi:main::@9->printu#1] -- register_copy 
  //SEG171 [168] phi (byte[]) printu::op#20 = (const string) main::op7 [phi:main::@9->printu#2] -- pbuz1=pbuc1 
    lda #<op7
    sta printu.op
    lda #>op7
    sta printu.op+1
  //SEG172 [168] phi (byte) printu::a#20 = (byte) printu::a#7 [phi:main::@9->printu#3] -- register_copy 
  //SEG173 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@9->printu#4] -- register_copy 
    jsr printu
  //SEG174 [65] phi from main::@9 to main::@54 [phi:main::@9->main::@54]
  //SEG175 main::@54
  //SEG176 [66] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG177 [163] phi from main::@54 to print_ln [phi:main::@54->print_ln]
  //SEG178 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@54->print_ln#0] -- register_copy 
    jsr print_ln
  //SEG179 main::@55
  //SEG180 [67] if((byte) main::a#10>(byte) main::b#0) goto main::@10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_gt_vbuz2_then_la1 
    lda b
    cmp a
    bcc b31
  //SEG181 [68] phi from main::@55 to main::@31 [phi:main::@55->main::@31]
  //SEG182 main::@31
  //SEG183 [69] phi from main::@31 to main::@10 [phi:main::@31->main::@10]
  //SEG184 [69] phi (byte) main::r#48 = (byte) '+' [phi:main::@31->main::@10#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b10
  //SEG185 [69] phi from main::@55 to main::@10 [phi:main::@55->main::@10]
  b31:
  //SEG186 [69] phi (byte) main::r#48 = (byte) '-' [phi:main::@55->main::@10#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG187 main::@10
  b10:
  //SEG188 [70] (byte) printu::a#8 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 ] )
    // (byte) printu::a#8 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG189 [71] (byte) printu::b#8 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#48 printu::a#8 printu::b#8 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG190 [72] (byte) printu::res#8 ← (byte) main::r#48 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 ] )
    // (byte) printu::res#8 = (byte) main::r#48  // register copy reg byte x
  //SEG191 [73] (byte*~) char_cursor#138 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#8 printu::b#8 printu::res#8 char_cursor#138 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG192 [74] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG193 [168] phi from main::@10 to printu [phi:main::@10->printu]
  //SEG194 [168] phi (byte) printu::res#20 = (byte) printu::res#8 [phi:main::@10->printu#0] -- register_copy 
  //SEG195 [168] phi (byte) printu::b#20 = (byte) printu::b#8 [phi:main::@10->printu#1] -- register_copy 
  //SEG196 [168] phi (byte[]) printu::op#20 = (const string) main::op8 [phi:main::@10->printu#2] -- pbuz1=pbuc1 
    lda #<op8
    sta printu.op
    lda #>op8
    sta printu.op+1
  //SEG197 [168] phi (byte) printu::a#20 = (byte) printu::a#8 [phi:main::@10->printu#3] -- register_copy 
  //SEG198 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#138 [phi:main::@10->printu#4] -- register_copy 
    jsr printu
  //SEG199 main::@56
  //SEG200 [75] if((byte) main::a#10>(byte/signed byte/word/signed word) 55) goto main::@11 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_vbuc1_then_la1 
    lda a
    cmp #$37
    beq !+
    bcs b32
  !:
  //SEG201 [76] phi from main::@56 to main::@32 [phi:main::@56->main::@32]
  //SEG202 main::@32
  //SEG203 [77] phi from main::@32 to main::@11 [phi:main::@32->main::@11]
  //SEG204 [77] phi (byte) main::r#49 = (byte) '+' [phi:main::@32->main::@11#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b11
  //SEG205 [77] phi from main::@56 to main::@11 [phi:main::@56->main::@11]
  b32:
  //SEG206 [77] phi (byte) main::r#49 = (byte) '-' [phi:main::@56->main::@11#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG207 main::@11
  b11:
  //SEG208 [78] (byte) printu::a#9 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#49 printu::a#9 char_cursor#52 ] )
    // (byte) printu::a#9 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG209 [79] (byte) printu::res#9 ← (byte) main::r#49 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#9 printu::res#9 char_cursor#52 ] )
    // (byte) printu::res#9 = (byte) main::r#49  // register copy reg byte x
  //SEG210 [80] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG211 [168] phi from main::@11 to printu [phi:main::@11->printu]
  //SEG212 [168] phi (byte) printu::res#20 = (byte) printu::res#9 [phi:main::@11->printu#0] -- register_copy 
  //SEG213 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@11->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG214 [168] phi (byte[]) printu::op#20 = (const string) main::op9 [phi:main::@11->printu#2] -- pbuz1=pbuc1 
    lda #<op9
    sta printu.op
    lda #>op9
    sta printu.op+1
  //SEG215 [168] phi (byte) printu::a#20 = (byte) printu::a#9 [phi:main::@11->printu#3] -- register_copy 
  //SEG216 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@11->printu#4] -- register_copy 
    jsr printu
  //SEG217 main::@57
  //SEG218 [81] if((byte) main::a#10>*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@12 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_pbuc1_derefidx_vbuz2_then_la1 
    ldy i
    lda cs,y
    cmp a
    bcc b33
  //SEG219 [82] phi from main::@57 to main::@33 [phi:main::@57->main::@33]
  //SEG220 main::@33
  //SEG221 [83] phi from main::@33 to main::@12 [phi:main::@33->main::@12]
  //SEG222 [83] phi (byte) main::r#50 = (byte) '+' [phi:main::@33->main::@12#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b12
  //SEG223 [83] phi from main::@57 to main::@12 [phi:main::@57->main::@12]
  b33:
  //SEG224 [83] phi (byte) main::r#50 = (byte) '-' [phi:main::@57->main::@12#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG225 main::@12
  b12:
  //SEG226 [84] (byte) printu::a#10 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 char_cursor#52 ] )
    // (byte) printu::a#10 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG227 [85] (byte) printu::b#10 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#50 printu::a#10 printu::b#10 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG228 [86] (byte) printu::res#10 ← (byte) main::r#50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#10 printu::b#10 printu::res#10 char_cursor#52 ] )
    // (byte) printu::res#10 = (byte) main::r#50  // register copy reg byte x
  //SEG229 [87] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG230 [168] phi from main::@12 to printu [phi:main::@12->printu]
  //SEG231 [168] phi (byte) printu::res#20 = (byte) printu::res#10 [phi:main::@12->printu#0] -- register_copy 
  //SEG232 [168] phi (byte) printu::b#20 = (byte) printu::b#10 [phi:main::@12->printu#1] -- register_copy 
  //SEG233 [168] phi (byte[]) printu::op#20 = (const string) main::op10 [phi:main::@12->printu#2] -- pbuz1=pbuc1 
    lda #<op10
    sta printu.op
    lda #>op10
    sta printu.op+1
  //SEG234 [168] phi (byte) printu::a#20 = (byte) printu::a#10 [phi:main::@12->printu#3] -- register_copy 
  //SEG235 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@12->printu#4] -- register_copy 
    jsr printu
  //SEG236 main::@58
  //SEG237 [88] if((byte) main::a#10>(byte) main::a#10) goto main::@13 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_gt_vbuz1_then_la1 
    lda a
    cmp a
    bcc b34
  //SEG238 [89] phi from main::@58 to main::@34 [phi:main::@58->main::@34]
  //SEG239 main::@34
  //SEG240 [90] phi from main::@34 to main::@13 [phi:main::@34->main::@13]
  //SEG241 [90] phi (byte) main::r#51 = (byte) '+' [phi:main::@34->main::@13#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b13
  //SEG242 [90] phi from main::@58 to main::@13 [phi:main::@58->main::@13]
  b34:
  //SEG243 [90] phi (byte) main::r#51 = (byte) '-' [phi:main::@58->main::@13#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG244 main::@13
  b13:
  //SEG245 [91] (byte) printu::a#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 char_cursor#52 ] )
    // (byte) printu::a#11 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG246 [92] (byte) printu::b#11 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#51 printu::a#11 printu::b#11 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG247 [93] (byte) printu::res#11 ← (byte) main::r#51 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#11 printu::b#11 printu::res#11 char_cursor#52 ] )
    // (byte) printu::res#11 = (byte) main::r#51  // register copy reg byte x
  //SEG248 [94] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG249 [168] phi from main::@13 to printu [phi:main::@13->printu]
  //SEG250 [168] phi (byte) printu::res#20 = (byte) printu::res#11 [phi:main::@13->printu#0] -- register_copy 
  //SEG251 [168] phi (byte) printu::b#20 = (byte) printu::b#11 [phi:main::@13->printu#1] -- register_copy 
  //SEG252 [168] phi (byte[]) printu::op#20 = (const string) main::op11 [phi:main::@13->printu#2] -- pbuz1=pbuc1 
    lda #<op11
    sta printu.op
    lda #>op11
    sta printu.op+1
  //SEG253 [168] phi (byte) printu::a#20 = (byte) printu::a#11 [phi:main::@13->printu#3] -- register_copy 
  //SEG254 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@13->printu#4] -- register_copy 
    jsr printu
  //SEG255 [95] phi from main::@13 to main::@59 [phi:main::@13->main::@59]
  //SEG256 main::@59
  //SEG257 [96] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG258 [163] phi from main::@59 to print_ln [phi:main::@59->print_ln]
  //SEG259 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@59->print_ln#0] -- register_copy 
    jsr print_ln
  //SEG260 main::@60
  //SEG261 [97] if((byte) main::a#10<(byte) main::b#0) goto main::@14 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_lt_vbuz2_then_la1 
    lda a
    cmp b
    bcc b35
  //SEG262 [98] phi from main::@60 to main::@35 [phi:main::@60->main::@35]
  //SEG263 main::@35
  //SEG264 [99] phi from main::@35 to main::@14 [phi:main::@35->main::@14]
  //SEG265 [99] phi (byte) main::r#52 = (byte) '+' [phi:main::@35->main::@14#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b14
  //SEG266 [99] phi from main::@60 to main::@14 [phi:main::@60->main::@14]
  b35:
  //SEG267 [99] phi (byte) main::r#52 = (byte) '-' [phi:main::@60->main::@14#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG268 main::@14
  b14:
  //SEG269 [100] (byte) printu::a#12 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 ] )
    // (byte) printu::a#12 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG270 [101] (byte) printu::b#12 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#52 printu::a#12 printu::b#12 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG271 [102] (byte) printu::res#12 ← (byte) main::r#52 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 ] )
    // (byte) printu::res#12 = (byte) main::r#52  // register copy reg byte x
  //SEG272 [103] (byte*~) char_cursor#142 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#12 printu::b#12 printu::res#12 char_cursor#142 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG273 [104] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG274 [168] phi from main::@14 to printu [phi:main::@14->printu]
  //SEG275 [168] phi (byte) printu::res#20 = (byte) printu::res#12 [phi:main::@14->printu#0] -- register_copy 
  //SEG276 [168] phi (byte) printu::b#20 = (byte) printu::b#12 [phi:main::@14->printu#1] -- register_copy 
  //SEG277 [168] phi (byte[]) printu::op#20 = (const string) main::op12 [phi:main::@14->printu#2] -- pbuz1=pbuc1 
    lda #<op12
    sta printu.op
    lda #>op12
    sta printu.op+1
  //SEG278 [168] phi (byte) printu::a#20 = (byte) printu::a#12 [phi:main::@14->printu#3] -- register_copy 
  //SEG279 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#142 [phi:main::@14->printu#4] -- register_copy 
    jsr printu
  //SEG280 main::@61
  //SEG281 [105] if((byte) main::a#10<(byte/signed byte/word/signed word) 55) goto main::@15 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_vbuc1_then_la1 
    lda a
    cmp #$37
    bcc b36
  //SEG282 [106] phi from main::@61 to main::@36 [phi:main::@61->main::@36]
  //SEG283 main::@36
  //SEG284 [107] phi from main::@36 to main::@15 [phi:main::@36->main::@15]
  //SEG285 [107] phi (byte) main::r#53 = (byte) '+' [phi:main::@36->main::@15#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b15
  //SEG286 [107] phi from main::@61 to main::@15 [phi:main::@61->main::@15]
  b36:
  //SEG287 [107] phi (byte) main::r#53 = (byte) '-' [phi:main::@61->main::@15#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG288 main::@15
  b15:
  //SEG289 [108] (byte) printu::a#13 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#53 printu::a#13 char_cursor#52 ] )
    // (byte) printu::a#13 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG290 [109] (byte) printu::res#13 ← (byte) main::r#53 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#13 printu::res#13 char_cursor#52 ] )
    // (byte) printu::res#13 = (byte) main::r#53  // register copy reg byte x
  //SEG291 [110] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG292 [168] phi from main::@15 to printu [phi:main::@15->printu]
  //SEG293 [168] phi (byte) printu::res#20 = (byte) printu::res#13 [phi:main::@15->printu#0] -- register_copy 
  //SEG294 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@15->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG295 [168] phi (byte[]) printu::op#20 = (const string) main::op13 [phi:main::@15->printu#2] -- pbuz1=pbuc1 
    lda #<op13
    sta printu.op
    lda #>op13
    sta printu.op+1
  //SEG296 [168] phi (byte) printu::a#20 = (byte) printu::a#13 [phi:main::@15->printu#3] -- register_copy 
  //SEG297 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@15->printu#4] -- register_copy 
    jsr printu
  //SEG298 main::@62
  //SEG299 [111] if((byte) main::a#10<*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@16 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bcc b37
  //SEG300 [112] phi from main::@62 to main::@37 [phi:main::@62->main::@37]
  //SEG301 main::@37
  //SEG302 [113] phi from main::@37 to main::@16 [phi:main::@37->main::@16]
  //SEG303 [113] phi (byte) main::r#54 = (byte) '+' [phi:main::@37->main::@16#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b16
  //SEG304 [113] phi from main::@62 to main::@16 [phi:main::@62->main::@16]
  b37:
  //SEG305 [113] phi (byte) main::r#54 = (byte) '-' [phi:main::@62->main::@16#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG306 main::@16
  b16:
  //SEG307 [114] (byte) printu::a#14 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 char_cursor#52 ] )
    // (byte) printu::a#14 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG308 [115] (byte) printu::b#14 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#54 printu::a#14 printu::b#14 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG309 [116] (byte) printu::res#14 ← (byte) main::r#54 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#14 printu::b#14 printu::res#14 char_cursor#52 ] )
    // (byte) printu::res#14 = (byte) main::r#54  // register copy reg byte x
  //SEG310 [117] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG311 [168] phi from main::@16 to printu [phi:main::@16->printu]
  //SEG312 [168] phi (byte) printu::res#20 = (byte) printu::res#14 [phi:main::@16->printu#0] -- register_copy 
  //SEG313 [168] phi (byte) printu::b#20 = (byte) printu::b#14 [phi:main::@16->printu#1] -- register_copy 
  //SEG314 [168] phi (byte[]) printu::op#20 = (const string) main::op14 [phi:main::@16->printu#2] -- pbuz1=pbuc1 
    lda #<op14
    sta printu.op
    lda #>op14
    sta printu.op+1
  //SEG315 [168] phi (byte) printu::a#20 = (byte) printu::a#14 [phi:main::@16->printu#3] -- register_copy 
  //SEG316 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@16->printu#4] -- register_copy 
    jsr printu
  //SEG317 main::@63
  //SEG318 [118] if((byte) main::a#10<(byte) main::a#10) goto main::@17 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ) -- vbuz1_lt_vbuz1_then_la1 
    lda a
    cmp a
    bcc b38
  //SEG319 [119] phi from main::@63 to main::@38 [phi:main::@63->main::@38]
  //SEG320 main::@38
  //SEG321 [120] phi from main::@38 to main::@17 [phi:main::@38->main::@17]
  //SEG322 [120] phi (byte) main::r#55 = (byte) '+' [phi:main::@38->main::@17#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b17
  //SEG323 [120] phi from main::@63 to main::@17 [phi:main::@63->main::@17]
  b38:
  //SEG324 [120] phi (byte) main::r#55 = (byte) '-' [phi:main::@63->main::@17#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG325 main::@17
  b17:
  //SEG326 [121] (byte) printu::a#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 char_cursor#52 ] )
    // (byte) printu::a#15 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG327 [122] (byte) printu::b#15 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#55 printu::a#15 printu::b#15 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG328 [123] (byte) printu::res#15 ← (byte) main::r#55 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#15 printu::b#15 printu::res#15 char_cursor#52 ] )
    // (byte) printu::res#15 = (byte) main::r#55  // register copy reg byte x
  //SEG329 [124] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] )
  //SEG330 [168] phi from main::@17 to printu [phi:main::@17->printu]
  //SEG331 [168] phi (byte) printu::res#20 = (byte) printu::res#15 [phi:main::@17->printu#0] -- register_copy 
  //SEG332 [168] phi (byte) printu::b#20 = (byte) printu::b#15 [phi:main::@17->printu#1] -- register_copy 
  //SEG333 [168] phi (byte[]) printu::op#20 = (const string) main::op15 [phi:main::@17->printu#2] -- pbuz1=pbuc1 
    lda #<op15
    sta printu.op
    lda #>op15
    sta printu.op+1
  //SEG334 [168] phi (byte) printu::a#20 = (byte) printu::a#15 [phi:main::@17->printu#3] -- register_copy 
  //SEG335 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@17->printu#4] -- register_copy 
    jsr printu
  //SEG336 [125] phi from main::@17 to main::@64 [phi:main::@17->main::@64]
  //SEG337 main::@64
  //SEG338 [126] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] )
  //SEG339 [163] phi from main::@64 to print_ln [phi:main::@64->print_ln]
  //SEG340 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@64->print_ln#0] -- register_copy 
    jsr print_ln
  //SEG341 main::@65
  //SEG342 [127] if((byte) main::a#10!=(byte) main::b#0) goto main::@18 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 ] ) -- vbuz1_neq_vbuz2_then_la1 
    lda a
    cmp b
    bne b39
  //SEG343 [128] phi from main::@65 to main::@39 [phi:main::@65->main::@39]
  //SEG344 main::@39
  //SEG345 [129] phi from main::@39 to main::@18 [phi:main::@39->main::@18]
  //SEG346 [129] phi (byte) main::r#56 = (byte) '+' [phi:main::@39->main::@18#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b18
  //SEG347 [129] phi from main::@65 to main::@18 [phi:main::@65->main::@18]
  b39:
  //SEG348 [129] phi (byte) main::r#56 = (byte) '-' [phi:main::@65->main::@18#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG349 main::@18
  b18:
  //SEG350 [130] (byte) printu::a#16 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::b#0 main::r#56 printu::a#16 ] )
    // (byte) printu::a#16 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG351 [131] (byte) printu::b#16 ← (byte) main::b#0 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#56 printu::a#16 printu::b#16 ] ) -- vbuz1=vbuz2 
    lda b
    sta printu.b
  //SEG352 [132] (byte) printu::res#16 ← (byte) main::r#56 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 ] )
    // (byte) printu::res#16 = (byte) main::r#56  // register copy reg byte x
  //SEG353 [133] (byte*~) char_cursor#146 ← (byte*) line_cursor#1 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#16 printu::b#16 printu::res#16 char_cursor#146 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG354 [134] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG355 [168] phi from main::@18 to printu [phi:main::@18->printu]
  //SEG356 [168] phi (byte) printu::res#20 = (byte) printu::res#16 [phi:main::@18->printu#0] -- register_copy 
  //SEG357 [168] phi (byte) printu::b#20 = (byte) printu::b#16 [phi:main::@18->printu#1] -- register_copy 
  //SEG358 [168] phi (byte[]) printu::op#20 = (const string) main::op16 [phi:main::@18->printu#2] -- pbuz1=pbuc1 
    lda #<op16
    sta printu.op
    lda #>op16
    sta printu.op+1
  //SEG359 [168] phi (byte) printu::a#20 = (byte) printu::a#16 [phi:main::@18->printu#3] -- register_copy 
  //SEG360 [168] phi (byte*) char_cursor#90 = (byte*~) char_cursor#146 [phi:main::@18->printu#4] -- register_copy 
    jsr printu
  //SEG361 main::@66
  //SEG362 [135] if((byte) main::a#10!=(byte/signed byte/word/signed word) 55) goto main::@19 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda a
    cmp #$37
    bne b40
  //SEG363 [136] phi from main::@66 to main::@40 [phi:main::@66->main::@40]
  //SEG364 main::@40
  //SEG365 [137] phi from main::@40 to main::@19 [phi:main::@40->main::@19]
  //SEG366 [137] phi (byte) main::r#57 = (byte) '+' [phi:main::@40->main::@19#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b19
  //SEG367 [137] phi from main::@66 to main::@19 [phi:main::@66->main::@19]
  b40:
  //SEG368 [137] phi (byte) main::r#57 = (byte) '-' [phi:main::@66->main::@19#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG369 main::@19
  b19:
  //SEG370 [138] (byte) printu::a#17 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#57 printu::a#17 char_cursor#52 ] )
    // (byte) printu::a#17 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG371 [139] (byte) printu::res#17 ← (byte) main::r#57 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#17 printu::res#17 char_cursor#52 ] )
    // (byte) printu::res#17 = (byte) main::r#57  // register copy reg byte x
  //SEG372 [140] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG373 [168] phi from main::@19 to printu [phi:main::@19->printu]
  //SEG374 [168] phi (byte) printu::res#20 = (byte) printu::res#17 [phi:main::@19->printu#0] -- register_copy 
  //SEG375 [168] phi (byte) printu::b#20 = (byte/signed byte/word/signed word) 55 [phi:main::@19->printu#1] -- vbuz1=vbuc1 
    lda #$37
    sta printu.b
  //SEG376 [168] phi (byte[]) printu::op#20 = (const string) main::op17 [phi:main::@19->printu#2] -- pbuz1=pbuc1 
    lda #<op17
    sta printu.op
    lda #>op17
    sta printu.op+1
  //SEG377 [168] phi (byte) printu::a#20 = (byte) printu::a#17 [phi:main::@19->printu#3] -- register_copy 
  //SEG378 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@19->printu#4] -- register_copy 
    jsr printu
  //SEG379 main::@67
  //SEG380 [141] if((byte) main::a#10!=*((const byte[5]) main::cs#0 + (byte) main::i#10)) goto main::@20 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_pbuc1_derefidx_vbuz2_then_la1 
    lda a
    ldy i
    cmp cs,y
    bne b41
  //SEG381 [142] phi from main::@67 to main::@41 [phi:main::@67->main::@41]
  //SEG382 main::@41
  //SEG383 [143] phi from main::@41 to main::@20 [phi:main::@41->main::@20]
  //SEG384 [143] phi (byte) main::r#58 = (byte) '+' [phi:main::@41->main::@20#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b20
  //SEG385 [143] phi from main::@67 to main::@20 [phi:main::@67->main::@20]
  b41:
  //SEG386 [143] phi (byte) main::r#58 = (byte) '-' [phi:main::@67->main::@20#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG387 main::@20
  b20:
  //SEG388 [144] (byte) printu::a#18 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 char_cursor#52 ] )
    // (byte) printu::a#18 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG389 [145] (byte) printu::b#18 ← *((const byte[5]) main::cs#0 + (byte) main::i#10) [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#58 printu::a#18 printu::b#18 char_cursor#52 ] ) -- vbuz1=pbuc1_derefidx_vbuz2 
    ldy i
    lda cs,y
    sta printu.b
  //SEG390 [146] (byte) printu::res#18 ← (byte) main::r#58 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#18 printu::b#18 printu::res#18 char_cursor#52 ] )
    // (byte) printu::res#18 = (byte) main::r#58  // register copy reg byte x
  //SEG391 [147] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG392 [168] phi from main::@20 to printu [phi:main::@20->printu]
  //SEG393 [168] phi (byte) printu::res#20 = (byte) printu::res#18 [phi:main::@20->printu#0] -- register_copy 
  //SEG394 [168] phi (byte) printu::b#20 = (byte) printu::b#18 [phi:main::@20->printu#1] -- register_copy 
  //SEG395 [168] phi (byte[]) printu::op#20 = (const string) main::op18 [phi:main::@20->printu#2] -- pbuz1=pbuc1 
    lda #<op18
    sta printu.op
    lda #>op18
    sta printu.op+1
  //SEG396 [168] phi (byte) printu::a#20 = (byte) printu::a#18 [phi:main::@20->printu#3] -- register_copy 
  //SEG397 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@20->printu#4] -- register_copy 
    jsr printu
  //SEG398 main::@68
  //SEG399 [148] if((byte) main::a#10!=(byte) main::a#10) goto main::@21 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- vbuz1_neq_vbuz1_then_la1 
    lda a
    cmp a
    bne b42
  //SEG400 [149] phi from main::@68 to main::@42 [phi:main::@68->main::@42]
  //SEG401 main::@42
  //SEG402 [150] phi from main::@42 to main::@21 [phi:main::@42->main::@21]
  //SEG403 [150] phi (byte) main::r#59 = (byte) '+' [phi:main::@42->main::@21#0] -- vbuxx=vbuc1 
    ldx #'+'
    jmp b21
  //SEG404 [150] phi from main::@68 to main::@21 [phi:main::@68->main::@21]
  b42:
  //SEG405 [150] phi (byte) main::r#59 = (byte) '-' [phi:main::@68->main::@21#0] -- vbuxx=vbuc1 
    ldx #'-'
  //SEG406 main::@21
  b21:
  //SEG407 [151] (byte) printu::a#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 char_cursor#52 ] )
    // (byte) printu::a#19 = (byte) main::a#10  // register copy zp ZP_BYTE:2
  //SEG408 [152] (byte) printu::b#19 ← (byte) main::a#10 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 main::r#59 printu::a#19 printu::b#19 char_cursor#52 ] ) -- vbuz1=vbuz2 
    lda a
    sta printu.b
  //SEG409 [153] (byte) printu::res#19 ← (byte) main::r#59 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 printu::a#19 printu::b#19 printu::res#19 char_cursor#52 ] )
    // (byte) printu::res#19 = (byte) main::r#59  // register copy reg byte x
  //SEG410 [154] call printu param-assignment [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG411 [168] phi from main::@21 to printu [phi:main::@21->printu]
  //SEG412 [168] phi (byte) printu::res#20 = (byte) printu::res#19 [phi:main::@21->printu#0] -- register_copy 
  //SEG413 [168] phi (byte) printu::b#20 = (byte) printu::b#19 [phi:main::@21->printu#1] -- register_copy 
  //SEG414 [168] phi (byte[]) printu::op#20 = (const string) main::op19 [phi:main::@21->printu#2] -- pbuz1=pbuc1 
    lda #<op19
    sta printu.op
    lda #>op19
    sta printu.op+1
  //SEG415 [168] phi (byte) printu::a#20 = (byte) printu::a#19 [phi:main::@21->printu#3] -- register_copy 
  //SEG416 [168] phi (byte*) char_cursor#90 = (byte*) char_cursor#52 [phi:main::@21->printu#4] -- register_copy 
    jsr printu
  //SEG417 [155] phi from main::@21 to main::@69 [phi:main::@21->main::@69]
  //SEG418 main::@69
  //SEG419 [156] call print_ln param-assignment [ main::a#10 main::i#10 line_cursor#1 ] ( main:2 [ main::a#10 main::i#10 line_cursor#1 ] )
  //SEG420 [163] phi from main::@69 to print_ln [phi:main::@69->print_ln]
  //SEG421 [163] phi (byte*) line_cursor#20 = (byte*) line_cursor#1 [phi:main::@69->print_ln#0] -- register_copy 
    jsr print_ln
  //SEG422 main::@70
  //SEG423 [157] (byte) main::a#1 ← (byte) main::a#10 + (byte/signed byte/word/signed word) 48 [ main::i#10 main::a#1 line_cursor#1 ] ( main:2 [ main::i#10 main::a#1 line_cursor#1 ] ) -- vbuz1=vbuz1_plus_vbuc1 
    lda #$30
    clc
    adc a
    sta a
  //SEG424 [158] (byte) main::i#1 ← ++ (byte) main::i#10 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] ) -- vbuz1=_inc_vbuz1 
    inc i
  //SEG425 [159] if((byte) main::i#1!=(byte/signed byte/word/signed word) 5) goto main::@71 [ main::a#1 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 main::i#1 line_cursor#1 ] ) -- vbuz1_neq_vbuc1_then_la1 
    lda i
    cmp #5
    bne b71
  //SEG426 main::@22
  b22:
  //SEG427 [160] if(true) goto main::@22 [ ] ( main:2 [ ] ) -- true_then_la1 
    jmp b22
  //SEG428 main::@return
  //SEG429 [161] return  [ ] ( main:2 [ ] )
  //SEG430 main::@71
  b71:
  //SEG431 [162] (byte*~) char_cursor#137 ← (byte*) line_cursor#1 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ( main:2 [ main::a#1 char_cursor#137 main::i#1 line_cursor#1 ] ) -- pbuz1=pbuz2 
    lda line_cursor
    sta char_cursor
    lda line_cursor+1
    sta char_cursor+1
  //SEG432 [6] phi from main::@71 to main::@1 [phi:main::@71->main::@1]
  //SEG433 [6] phi (byte*) line_cursor#21 = (byte*) line_cursor#1 [phi:main::@71->main::@1#0] -- register_copy 
  //SEG434 [6] phi (byte) main::i#10 = (byte) main::i#1 [phi:main::@71->main::@1#1] -- register_copy 
  //SEG435 [6] phi (byte*) char_cursor#114 = (byte*~) char_cursor#137 [phi:main::@71->main::@1#2] -- register_copy 
  //SEG436 [6] phi (byte) main::a#10 = (byte) main::a#1 [phi:main::@71->main::@1#3] -- register_copy 
    jmp b1
    op: .text "< @"
    op1: .text "< @"
    op2: .text "< @"
    op3: .text "< @"
    op4: .text "> @"
    op5: .text "> @"
    op6: .text "> @"
    op7: .text "> @"
    op8: .text "<=@"
    op9: .text "<=@"
    op10: .text "<=@"
    op11: .text "<=@"
    op12: .text ">=@"
    op13: .text ">=@"
    op14: .text ">=@"
    op15: .text ">=@"
    op16: .text "==@"
    op17: .text "==@"
    op18: .text "==@"
    op19: .text "==@"
    cs: .byte 7, $c7, $37, $97, $67
}
//SEG437 print_ln
print_ln: {
  //SEG438 [164] phi from print_ln print_ln::@1 to print_ln::@1 [phi:print_ln/print_ln::@1->print_ln::@1]
  //SEG439 [164] phi (byte*) line_cursor#10 = (byte*) line_cursor#20 [phi:print_ln/print_ln::@1->print_ln::@1#0] -- register_copy 
  //SEG440 print_ln::@1
  b1:
  //SEG441 [165] (byte*) line_cursor#1 ← (byte*) line_cursor#10 + (byte/signed byte/word/signed word) 40 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- pbuz1=pbuz1_plus_vbuc1 
    lda line_cursor
    clc
    adc #$28
    sta line_cursor
    bcc !+
    inc line_cursor+1
  !:
  //SEG442 [166] if((byte*) line_cursor#1<(byte*) char_cursor#52) goto print_ln::@1 [ line_cursor#1 char_cursor#52 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 char_cursor#52 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] ) -- pbuz1_lt_pbuz2_then_la1 
    lda line_cursor+1
    cmp char_cursor+1
    bcc b1
    bne !+
    lda line_cursor
    cmp char_cursor
    bcc b1
  !:
  //SEG443 print_ln::@return
  //SEG444 [167] return  [ line_cursor#1 ] ( main:2::print_ln:36 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:66 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:96 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:126 [ main::a#10 main::i#10 main::b#0 line_cursor#1 ] main:2::print_ln:156 [ main::a#10 main::i#10 line_cursor#1 ] )
    rts
}
//SEG445 printu
printu: {
    .label a = 2
    .label b = 8
    .label op = 6
  //SEG446 [169] call print_char param-assignment [ char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::a#20 printu::op#20 printu::b#20 printu::res#20 ] )
  //SEG447 [181] phi from printu to print_char [phi:printu->print_char]
  //SEG448 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#90 [phi:printu->print_char#0] -- register_copy 
  //SEG449 [181] phi (byte) print_char::ch#5 = (byte) ' ' [phi:printu->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
  //SEG450 printu::@1
  //SEG451 [170] (byte) print_byte::b#0 ← (byte) printu::a#20 [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 print_byte::b#0 ] ) -- vbuz1=vbuz2 
    lda a
    sta print_byte.b
  //SEG452 [171] call print_byte param-assignment [ char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::op#20 printu::b#20 printu::res#20 ] )
  //SEG453 [185] phi from printu::@1 to print_byte [phi:printu::@1->print_byte]
  //SEG454 [185] phi (byte*) char_cursor#89 = (byte*) char_cursor#52 [phi:printu::@1->print_byte#0] -- register_copy 
  //SEG455 [185] phi (byte) print_byte::b#2 = (byte) print_byte::b#0 [phi:printu::@1->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG456 printu::@2
  //SEG457 [172] (byte*) print_str::str#1 ← (byte[]) printu::op#20 [ char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::b#20 printu::res#20 print_str::str#1 ] )
    // (byte*) print_str::str#1 = (byte[]) printu::op#20  // register copy zp ZP_WORD:6
  //SEG458 [173] call print_str param-assignment [ printu::b#20 printu::res#20 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
  //SEG459 [193] phi from printu::@2 to print_str [phi:printu::@2->print_str]
    jsr print_str
  //SEG460 printu::@3
  //SEG461 [174] (byte) print_byte::b#1 ← (byte) printu::b#20 [ printu::res#20 print_byte::b#1 char_cursor#2 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#1 char_cursor#2 ] ) -- vbuz1=vbuz2 
    lda b
    sta print_byte.b
  //SEG462 [175] call print_byte param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  //SEG463 [185] phi from printu::@3 to print_byte [phi:printu::@3->print_byte]
  //SEG464 [185] phi (byte*) char_cursor#89 = (byte*) char_cursor#2 [phi:printu::@3->print_byte#0] -- register_copy 
  //SEG465 [185] phi (byte) print_byte::b#2 = (byte) print_byte::b#1 [phi:printu::@3->print_byte#1] -- register_copy 
    jsr print_byte
  //SEG466 [176] phi from printu::@3 to printu::@4 [phi:printu::@3->printu::@4]
  //SEG467 printu::@4
  //SEG468 [177] call print_char param-assignment [ char_cursor#52 printu::res#20 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 printu::res#20 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 printu::res#20 ] )
  //SEG469 [181] phi from printu::@4 to print_char [phi:printu::@4->print_char]
  //SEG470 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:printu::@4->print_char#0] -- register_copy 
  //SEG471 [181] phi (byte) print_char::ch#5 = (byte) ' ' [phi:printu::@4->print_char#1] -- vbuaa=vbuc1 
    lda #' '
    jsr print_char
  //SEG472 printu::@5
  //SEG473 [178] (byte) print_char::ch#4 ← (byte) printu::res#20 [ char_cursor#52 print_char::ch#4 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 print_char::ch#4 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 print_char::ch#4 ] ) -- vbuaa=vbuxx 
    txa
  //SEG474 [179] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
  //SEG475 [181] phi from printu::@5 to print_char [phi:printu::@5->print_char]
  //SEG476 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:printu::@5->print_char#0] -- register_copy 
  //SEG477 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#4 [phi:printu::@5->print_char#1] -- register_copy 
    jsr print_char
  //SEG478 printu::@return
  //SEG479 [180] return  [ char_cursor#52 ] ( main:2::printu:14 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] )
    rts
}
//SEG480 print_char
print_char: {
  //SEG481 [182] *((byte*) char_cursor#51) ← (byte) print_char::ch#5 [ char_cursor#51 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#51 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#51 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#51 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#51 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#51 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#51 ] ) -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (char_cursor),y
  //SEG482 [183] (byte*) char_cursor#52 ← ++ (byte*) char_cursor#51 [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG483 print_char::@return
  //SEG484 [184] return  [ char_cursor#52 ] ( main:2::printu:14::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:169 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:169 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:169 [ main::a#10 main::i#10 line_cursor#1 printu::a#20 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_char:177 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_char:177 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_char:177 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:14::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:20::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:27::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:34::print_char:179 [ main::a#10 main::i#10 line_cursor#21 main::b#0 char_cursor#52 ] main:2::printu:44::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:50::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:57::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:64::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:74::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:80::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:87::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:94::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:104::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:110::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:117::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:124::print_char:179 [ main::a#10 main::i#10 line_cursor#1 main::b#0 char_cursor#52 ] main:2::printu:134::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:140::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:147::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:154::print_char:179 [ main::a#10 main::i#10 line_cursor#1 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:188 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_byte::b#2 char_cursor#52 ] main:2::printu:14::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175::print_char:191 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
    rts
}
//SEG485 print_byte
print_byte: {
    .label b = $b
  //SEG486 [186] (byte~) print_byte::$0 ← (byte) print_byte::b#2 >> (byte/signed byte/word/signed word) 4 [ char_cursor#89 print_byte::b#2 print_byte::$0 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#89 print_byte::b#2 print_byte::$0 ] ) -- vbuaa=vbuz1_ror_4 
    lda b
    lsr
    lsr
    lsr
    lsr
  //SEG487 [187] (byte) print_char::ch#0 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$0) [ print_char::ch#0 char_cursor#89 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 print_char::ch#0 char_cursor#89 print_byte::b#2 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG488 [188] call print_char param-assignment [ char_cursor#52 print_byte::b#2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::b#2 ] )
  //SEG489 [181] phi from print_byte to print_char [phi:print_byte->print_char]
  //SEG490 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#89 [phi:print_byte->print_char#0] -- register_copy 
  //SEG491 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#0 [phi:print_byte->print_char#1] -- register_copy 
    jsr print_char
  //SEG492 print_byte::@1
  //SEG493 [189] (byte~) print_byte::$2 ← (byte) print_byte::b#2 & (byte/signed byte/word/signed word) 15 [ char_cursor#52 print_byte::$2 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_byte::$2 ] ) -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and b
  //SEG494 [190] (byte) print_char::ch#1 ← *((const string) print_byte::hextab#0 + (byte~) print_byte::$2) [ char_cursor#52 print_char::ch#1 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 print_char::ch#1 ] ) -- vbuaa=pbuc1_derefidx_vbuaa 
    tay
    lda hextab,y
  //SEG495 [191] call print_char param-assignment [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
  //SEG496 [181] phi from print_byte::@1 to print_char [phi:print_byte::@1->print_char]
  //SEG497 [181] phi (byte*) char_cursor#51 = (byte*) char_cursor#52 [phi:print_byte::@1->print_char#0] -- register_copy 
  //SEG498 [181] phi (byte) print_char::ch#5 = (byte) print_char::ch#1 [phi:print_byte::@1->print_char#1] -- register_copy 
    jsr print_char
  //SEG499 print_byte::@return
  //SEG500 [192] return  [ char_cursor#52 ] ( main:2::printu:14::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:171 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:171 [ main::a#10 main::i#10 line_cursor#1 printu::op#20 printu::b#20 printu::res#20 char_cursor#52 ] main:2::printu:14::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:20::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:27::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:34::print_byte:175 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:44::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:50::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:57::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:64::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:74::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:80::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:87::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:94::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:104::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:110::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:117::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:124::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::res#20 char_cursor#52 ] main:2::printu:134::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:140::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:147::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] main:2::printu:154::print_byte:175 [ main::a#10 main::i#10 line_cursor#1 printu::res#20 char_cursor#52 ] )
    rts
    hextab: .text "0123456789abcdef"
}
//SEG501 print_str
print_str: {
    .label str = 6
  //SEG502 [194] phi from print_str print_str::@2 to print_str::@1 [phi:print_str/print_str::@2->print_str::@1]
  //SEG503 [194] phi (byte*) char_cursor#2 = (byte*) char_cursor#52 [phi:print_str/print_str::@2->print_str::@1#0] -- register_copy 
  //SEG504 [194] phi (byte*) print_str::str#2 = (byte*) print_str::str#1 [phi:print_str/print_str::@2->print_str::@1#1] -- register_copy 
  //SEG505 print_str::@1
  b1:
  //SEG506 [195] if(*((byte*) print_str::str#2)!=(byte) '@') goto print_str::@2 [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) -- _deref_pbuz1_neq_vbuc1_then_la1 
    ldy #0
    lda (str),y
    cmp #'@'
    bne b2
  //SEG507 print_str::@return
  //SEG508 [196] return  [ char_cursor#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 ] )
    rts
  //SEG509 print_str::@2
  b2:
  //SEG510 [197] *((byte*) char_cursor#2) ← *((byte*) print_str::str#2) [ char_cursor#2 print_str::str#2 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 char_cursor#2 print_str::str#2 ] ) -- _deref_pbuz1=_deref_pbuz2 
    ldy #0
    lda (str),y
    sta (char_cursor),y
  //SEG511 [198] (byte*) char_cursor#1 ← ++ (byte*) char_cursor#2 [ print_str::str#2 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#2 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc char_cursor
    bne !+
    inc char_cursor+1
  !:
  //SEG512 [199] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2 [ print_str::str#0 char_cursor#1 ] ( main:2::printu:14::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:20::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:27::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:34::print_str:173 [ main::a#10 main::i#10 line_cursor#21 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:44::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:50::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:57::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:64::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:74::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:80::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:87::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:94::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:104::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:110::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:117::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:124::print_str:173 [ main::a#10 main::i#10 line_cursor#1 main::b#0 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:134::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:140::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:147::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] main:2::printu:154::print_str:173 [ main::a#10 main::i#10 line_cursor#1 printu::b#20 printu::res#20 print_str::str#0 char_cursor#1 ] ) -- pbuz1=_inc_pbuz1 
    inc str
    bne !+
    inc str+1
  !:
    jmp b1
}
//SEG513 print_cls
print_cls: {
    .label sc = 4
  //SEG514 [201] phi from print_cls to print_cls::@1 [phi:print_cls->print_cls::@1]
  //SEG515 [201] phi (byte*) print_cls::sc#2 = ((byte*))(word/signed word) 1024 [phi:print_cls->print_cls::@1#0] -- pbuz1=pbuc1 
    lda #<$400
    sta sc
    lda #>$400
    sta sc+1
  //SEG516 [201] phi from print_cls::@1 to print_cls::@1 [phi:print_cls::@1->print_cls::@1]
  //SEG517 [201] phi (byte*) print_cls::sc#2 = (byte*) print_cls::sc#1 [phi:print_cls::@1->print_cls::@1#0] -- register_copy 
  //SEG518 print_cls::@1
  b1:
  //SEG519 [202] *((byte*) print_cls::sc#2) ← (byte) ' ' [ print_cls::sc#2 ] ( main:2::print_cls:5 [ print_cls::sc#2 ] ) -- _deref_pbuz1=vbuc1 
    lda #' '
    ldy #0
    sta (sc),y
  //SEG520 [203] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1=_inc_pbuz1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG521 [204] if((byte*) print_cls::sc#1!=(word/signed word) 1024+(word/signed word) 1000) goto print_cls::@1 [ print_cls::sc#1 ] ( main:2::print_cls:5 [ print_cls::sc#1 ] ) -- pbuz1_neq_vwuc1_then_la1 
    lda sc+1
    cmp #>$400+$3e8
    bne b1
    lda sc
    cmp #<$400+$3e8
    bne b1
  //SEG522 print_cls::@return
  //SEG523 [205] return  [ ] ( main:2::print_cls:5 [ ] )
    rts
}

