
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] idx = 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [2] phi()
  [3] callexecute main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [4] return 
  to:@return

__stackcall void print(byte print::p_x , byte print::p_y)
print: scope:[print]  from
  [5] print::p_x#0 = stackidx(byte,print::OFFSET_STACK_P_X)
  [6] print::p_y#0 = stackidx(byte,print::OFFSET_STACK_P_Y)
  [7] SCREEN[idx] = print::p_x#0
  [8] idx = ++ idx
  [9] SCREEN[idx] = print::p_y#0
  [10] idx = ++ idx
  to:print::@return
print::@return: scope:[print]  from print
  [11] return 
  to:@return

__stackcall struct Point get(byte get::i)
get: scope:[get]  from
  [12] get::return_x#0 = stackidx(byte,get::OFFSET_STACK_I)
  [13] get::return_y#0 = get::return_x#0 >> 1
  to:get::@return
get::@return: scope:[get]  from get
  [14] stackidx(byte,0) = get::return_x#0
  [15] stackidx(byte,OFFSET_STRUCT_POINT_Y) = get::return_y#0
  [16] return 
  to:@return

__stackcall void main()
main: scope:[main]  from
  [17] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [18] main::i#2 = phi( main/0, main::@2/main::i#1 )
  [19] if(main::i#2<5) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [20] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [21] stackpush(byte) = main::i#2
  sideeffect stackpushbytes(1)
  [23] callexecute get 
  [24] main::p_x#0 = stackpull(byte)
  [25] main::p_y#0 = stackpull(byte)
  [26] stackpush(byte) = main::p_x#0
  [27] stackpush(byte) = main::p_y#0
  [28] callexecute print 
  sideeffect stackpullbytes(2)
  [30] main::i#1 = ++ main::i#2
  to:main::@1
