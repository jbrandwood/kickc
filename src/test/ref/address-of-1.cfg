@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] (volatile byte) main::b1 ← (byte) 0
  [5] (volatile byte) main::b2 ← (byte) 0
  [6] (volatile byte) main::b3 ← (byte) 0
  [7] call setByte 
  to:main::@1
main::@1: scope:[main]  from main
  [8] phi()
  [9] call setByte 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [10] phi()
  [11] call setByte 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [12] *((const byte*) main::SCREEN) ← (volatile byte) main::b1
  [13] *((const byte*) main::SCREEN+(byte) 1) ← (volatile byte) main::b2
  [14] *((const byte*) main::SCREEN+(byte) 2) ← (volatile byte) main::b3
  to:main::@return
main::@return: scope:[main]  from main::@3
  [15] return 
  to:@return

(void()) setByte((byte*) setByte::ptr , (byte) setByte::b)
setByte: scope:[setByte]  from main main::@1 main::@2
  [16] (byte*) setByte::ptr#3 ← phi( main/&(volatile byte) main::b1 main::@1/&(volatile byte) main::b2 main::@2/&(volatile byte) main::b3 )
  [16] (byte) setByte::b#3 ← phi( main/(byte) 'c' main::@1/(byte) 'm' main::@2/(byte) 'l' )
  [17] *((byte*) setByte::ptr#3) ← (byte) setByte::b#3
  to:setByte::@return
setByte::@return: scope:[setByte]  from setByte
  [18] return 
  to:@return
