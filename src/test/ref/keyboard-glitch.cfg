
(void()) main()
main: scope:[main]  from
  [0] *((const nomodify byte*) BORDER_COLOR) ← (const nomodify byte) GREEN
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [1] phi()
  [2] call menu 
  to:main::@1

(void()) menu()
menu: scope:[menu]  from main::@1
  [3] phi()
  to:menu::@1
menu::@1: scope:[menu]  from menu menu::@4
  [4] phi()
  [5] call keyboard_key_pressed 
  [6] (byte) keyboard_key_pressed::return#2 ← (byte) keyboard_key_pressed::return#0
  to:menu::@8
menu::@8: scope:[menu]  from menu::@1
  [7] (byte~) menu::$0 ← (byte) keyboard_key_pressed::return#2
  [8] if((byte~) menu::$0==(byte) 0) goto menu::@2
  to:menu::@5
menu::@5: scope:[menu]  from menu::@8
  [9] phi()
  [10] call pressed 
  to:menu::@return
menu::@return: scope:[menu]  from menu::@5 menu::@6 menu::@7
  [11] return 
  to:@return
menu::@2: scope:[menu]  from menu::@8
  [12] phi()
  [13] call keyboard_key_pressed 
  [14] (byte) keyboard_key_pressed::return#3 ← (byte) keyboard_key_pressed::return#0
  to:menu::@9
menu::@9: scope:[menu]  from menu::@2
  [15] (byte~) menu::$4 ← (byte) keyboard_key_pressed::return#3
  [16] if((byte~) menu::$4==(byte) 0) goto menu::@3
  to:menu::@6
menu::@6: scope:[menu]  from menu::@9
  [17] *((const nomodify byte*) BORDER_COLOR) ← (const nomodify byte) RED
  asm { sei  }
  to:menu::@return
menu::@3: scope:[menu]  from menu::@9
  [19] phi()
  [20] call keyboard_key_pressed 
  [21] (byte) keyboard_key_pressed::return#4 ← (byte) keyboard_key_pressed::return#0
  to:menu::@10
menu::@10: scope:[menu]  from menu::@3
  [22] (byte~) menu::$7 ← (byte) keyboard_key_pressed::return#4
  [23] if((byte~) menu::$7==(byte) 0) goto menu::@4
  to:menu::@7
menu::@7: scope:[menu]  from menu::@10
  [24] *((const nomodify byte*) BORDER_COLOR) ← (const nomodify byte) GREEN
  asm { cli  }
  to:menu::@return
menu::@4: scope:[menu]  from menu::@10
  [26] *((const byte*) SCREEN) ← ++ *((const byte*) SCREEN)
  to:menu::@1

(byte()) keyboard_key_pressed((byte) keyboard_key_pressed::key)
keyboard_key_pressed: scope:[keyboard_key_pressed]  from menu::@1 menu::@2 menu::@3 pressed::@1
  [27] (byte) keyboard_key_pressed::key#4 ← phi( menu::@1/(const nomodify byte) KEY_C menu::@2/(const nomodify byte) KEY_I menu::@3/(const nomodify byte) KEY_E pressed::@1/(const nomodify byte) KEY_SPACE )
  [28] (byte) keyboard_key_pressed::colidx#0 ← (byte) keyboard_key_pressed::key#4 & (byte) 7
  [29] (byte) keyboard_key_pressed::rowidx#0 ← (byte) keyboard_key_pressed::key#4 >> (byte) 3
  [30] (byte) keyboard_matrix_read::rowid#0 ← (byte) keyboard_key_pressed::rowidx#0
  [31] call keyboard_matrix_read 
  [32] (byte) keyboard_matrix_read::return#2 ← (byte) keyboard_matrix_read::return#0
  to:keyboard_key_pressed::@1
keyboard_key_pressed::@1: scope:[keyboard_key_pressed]  from keyboard_key_pressed
  [33] (byte~) keyboard_key_pressed::$2 ← (byte) keyboard_matrix_read::return#2
  [34] (byte) keyboard_key_pressed::return#0 ← (byte~) keyboard_key_pressed::$2 & *((const byte*) keyboard_matrix_col_bitmask + (byte) keyboard_key_pressed::colidx#0)
  to:keyboard_key_pressed::@return
keyboard_key_pressed::@return: scope:[keyboard_key_pressed]  from keyboard_key_pressed::@1
  [35] return 
  to:@return

(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
keyboard_matrix_read: scope:[keyboard_matrix_read]  from keyboard_key_pressed
  [36] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1) ← *((const byte*) keyboard_matrix_row_bitmask + (byte) keyboard_matrix_read::rowid#0)
  [37] (byte) keyboard_matrix_read::return#0 ← ~ *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_B)
  to:keyboard_matrix_read::@return
keyboard_matrix_read::@return: scope:[keyboard_matrix_read]  from keyboard_matrix_read
  [38] return 
  to:@return

(void()) pressed()
pressed: scope:[pressed]  from menu::@5
  [39] *((const nomodify byte*) BG_COLOR) ← ++ *((const nomodify byte*) BG_COLOR)
  to:pressed::@1
pressed::@1: scope:[pressed]  from pressed pressed::@2
  [40] phi()
  [41] call keyboard_key_pressed 
  [42] (byte) keyboard_key_pressed::return#10 ← (byte) keyboard_key_pressed::return#0
  to:pressed::@2
pressed::@2: scope:[pressed]  from pressed::@1
  [43] (byte~) pressed::$1 ← (byte) keyboard_key_pressed::return#10
  [44] if((byte~) pressed::$1!=(byte) 0) goto pressed::@return
  to:pressed::@1
pressed::@return: scope:[pressed]  from pressed::@2
  [45] return 
  to:@return
