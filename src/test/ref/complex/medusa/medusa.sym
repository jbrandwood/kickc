(label) @1
(label) @begin
(label) @end
(const byte*) BGCOL = (byte*) 53281
(const byte) BLACK = (number) 0
(const byte*) COLS = (byte*) 55296
(const byte*) MEDUSA_COLORS = kickasm {{ .var fileCols = LoadBinary("medusac.prg", BF_C64FILE)
    .fill fileCols.getSize(), fileCols.get(i)
 }}
(const byte*) MEDUSA_SCREEN = kickasm {{ .var fileScreen = LoadBinary("medusas.prg", BF_C64FILE)
    .fill fileScreen.getSize(), fileScreen.get(i)
 }}
(const byte*) SCREEN = (byte*) 1024
(void()) main()
(label) main::@1
(label) main::@2
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#2 destination zp[2]:4
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:4 11.0
(byte*) memcpy::dst#2 dst zp[2]:4 11.666666666666666
(byte*) memcpy::dst#4 dst zp[2]:4 4.0
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2 source zp[2]:2
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:2 22.0
(byte*) memcpy::src#2 src zp[2]:2 11.5
(byte*) memcpy::src#4 src zp[2]:2 2.0
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 src_end zp[2]:6 1.625

zp[2]:2 [ memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 ]
zp[2]:4 [ memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
zp[2]:6 [ memcpy::src_end#0 ]
