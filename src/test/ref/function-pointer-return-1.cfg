
__stackcall char fn2()
fn2: scope:[fn2]  from
  [0] *fn2::BG_COLOR = ++ *fn2::BG_COLOR
  [1] fn2::return#0 = *fn2::BG_COLOR
  to:fn2::@return
fn2::@return: scope:[fn2]  from fn2
  [2] stackidx(char,fn2::OFFSET_STACK_RETURN_0) = fn2::return#0
  [3] return 
  to:@return

__stackcall char fn1()
fn1: scope:[fn1]  from
  [4] *fn1::BORDER_COLOR = ++ *fn1::BORDER_COLOR
  [5] fn1::return#0 = *fn1::BORDER_COLOR
  to:fn1::@return
fn1::@return: scope:[fn1]  from fn1
  [6] stackidx(char,fn1::OFFSET_STACK_RETURN_0) = fn1::return#0
  [7] return 
  to:@return

void main()
main: scope:[main]  from
  [8] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@4
  [9] main::i#2 = phi( main/0, main::@4/main::i#1 )
  [10] main::i#1 = ++ main::i#2
  [11] main::$0 = main::i#1 & 1
  [12] if(main::$0==0) goto main::@2
  to:main::@3
main::@2: scope:[main]  from main::@1
  [13] phi()
  to:main::@3
main::@3: scope:[main]  from main::@1 main::@2
  [14] main::f#3 = phi( main::@2/&fn1, main::@1/&fn2 )
  sideeffect stackpushpadding(1)
  [16] callexecute *main::f#3 
  [17] main::v#0 = stackpull(char)
  to:main::@4
main::@4: scope:[main]  from main::@3
  [18] *main::SCREEN = main::v#0
  to:main::@1
