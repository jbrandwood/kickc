__constant char * const CHARGEN = (char *) 53248
__constant struct MOS6526_CIA * const CIA1 = (struct MOS6526_CIA *) 56320
__constant struct MOS6526_CIA * const CIA2 = (struct MOS6526_CIA *) 56576
__constant char * const COLS = (char *) 55296
__constant const char DTV_BORDER_OFF = 2
__constant const char DTV_CHUNKY = $40
__constant const char DTV_COLORRAM_OFF = $10
__constant const unsigned long DTV_COLOR_BANK_DEFAULT = $1d800
__constant char * const DTV_COLOR_BANK_HI = (char *) 53303
__constant char * const DTV_COLOR_BANK_LO = (char *) 53302
__constant char * const DTV_CONTROL = (char *) 53308
__constant char * const DTV_FEATURE = (char *) 53311
__constant const char DTV_FEATURE_ENABLE = 1
__constant char * const DTV_GRAPHICS_VIC_BANK = (char *) 53309
__constant const char DTV_HIGHCOLOR = 4
__constant const char DTV_LINEAR = 1
__constant const char DTV_OVERSCAN = 8
__constant char * const DTV_PALETTE = (char *) 53760
__constant char DTV_PALETTE_DEFAULT[$10] = { 0, $f, $36, $be, $58, $db, $86, $ff, $29, $26, $3b, 5, 7, $df, $9a, $a }
__constant char * const DTV_PLANEA_MODULO_HI = (char *) 53305
__constant char * const DTV_PLANEA_MODULO_LO = (char *) 53304
__constant char * const DTV_PLANEA_START_HI = (char *) 53317
__constant char * const DTV_PLANEA_START_LO = (char *) 53306
__constant char * const DTV_PLANEA_START_MI = (char *) 53307
__constant char * const DTV_PLANEA_STEP = (char *) 53318
__constant char * const DTV_PLANEB_MODULO_HI = (char *) 53320
__constant char * const DTV_PLANEB_MODULO_LO = (char *) 53319
__constant char * const DTV_PLANEB_START_HI = (char *) 53323
__constant char * const DTV_PLANEB_START_LO = (char *) 53321
__constant char * const DTV_PLANEB_START_MI = (char *) 53322
__constant char * const DTV_PLANEB_STEP = (char *) 53324
__constant char * const FORM_CHARSET = (char *) 6144
__constant char FORM_COLS[] = "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@                                        @aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@                                        @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @ nnnnnnnnnnnn   mmmmmmmmmm              @ nnnnnnnnnnnn                jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @ nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"
__constant const signed char FORM_CURSOR_BLINK = $28
__constant char * const FORM_SCREEN = (char *) 1024
__constant char FORM_TEXT[] = " C64 DTV Graphics Mode Explorer         @                                        @ PRESET 0 Standard Charset              @                                        @ CONTROL        PLANE  A     VIC II     @ bmm        0   pattern p0   screen s0  @ mcm        0   start   00   gfx    g0  @ ecm        0   step    00   colors c0  @ hicolor    0   modulo  00              @ linear     0                COLORS     @ color off  0   PLANE  B     palet   0  @ chunky     0   pattern p0   bgcol0 00  @ border off 0   start   00   bgcol1 00  @ overscan   0   step    00   bgcol2 00  @                modulo  00   bgcol3 00  @"
__constant const char KEY_COMMODORE = $3d
__constant const char KEY_CRSR_DOWN = 7
__constant const char KEY_CRSR_RIGHT = 2
__constant const char KEY_CTRL = $3a
__constant const char KEY_LSHIFT = $f
__constant const char KEY_MODIFIER_COMMODORE = 8
__constant const char KEY_MODIFIER_CTRL = 4
__constant const char KEY_MODIFIER_LSHIFT = 1
__constant const char KEY_MODIFIER_RSHIFT = 2
__constant const char KEY_MODIFIER_SHIFT = KEY_MODIFIER_LSHIFT|KEY_MODIFIER_RSHIFT
__constant const char KEY_RSHIFT = $34
__constant const char KEY_SPACE = $3c
__constant char OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
__constant char OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
__constant char OFFSET_STRUCT_MOS6526_CIA_PORT_B_DDR = 3
__constant char OFFSET_STRUCT_MOS6569_VICII_BG_COLOR = $21
__constant char OFFSET_STRUCT_MOS6569_VICII_BG_COLOR1 = $22
__constant char OFFSET_STRUCT_MOS6569_VICII_BG_COLOR2 = $23
__constant char OFFSET_STRUCT_MOS6569_VICII_BG_COLOR3 = $24
__constant char OFFSET_STRUCT_MOS6569_VICII_BORDER_COLOR = $20
__constant char OFFSET_STRUCT_MOS6569_VICII_CONTROL1 = $11
__constant char OFFSET_STRUCT_MOS6569_VICII_CONTROL2 = $16
__constant char OFFSET_STRUCT_MOS6569_VICII_MEMORY = $18
__constant char OFFSET_STRUCT_MOS6569_VICII_RASTER = $12
__constant const unsigned long PLANE_8BPP_CHUNKY = $20000
__constant const unsigned long PLANE_BLANK = $38000
__constant const unsigned long PLANE_CHARSET8 = $3c000
__constant const unsigned long PLANE_FULL = $3a000
__constant const unsigned long PLANE_HORISONTAL = $30000
__constant const unsigned long PLANE_HORISONTAL2 = $34000
__constant const unsigned long PLANE_VERTICAL = $32000
__constant const unsigned long PLANE_VERTICAL2 = $36000
__constant char * const PROCPORT = (char *) 1
__constant char * const PROCPORT_DDR = (char *) 0
__constant const char PROCPORT_DDR_MEMORY_MASK = 7
__constant const char PROCPORT_RAM_CHARROM = 1
__constant const char PROCPORT_RAM_IO = 5
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant struct MOS6569_VICII * const VICII = (struct MOS6569_VICII *) 53248
__constant char * const VICII_BITMAP = (char *) 24576
__constant const char VICII_BMM = $20
__constant char * const VICII_CHARSET_ROM = (char *) 22528
__constant char * const VICII_CONTROL1 = (char *) 53265
__constant char * const VICII_CONTROL2 = (char *) 53270
__constant const char VICII_CSEL = 8
__constant const char VICII_DEN = $10
__constant const char VICII_ECM = $40
__constant const char VICII_MCM = $10
__constant char * const VICII_MEMORY = (char *) 53272
__constant const char VICII_RSEL = 8
__constant char * const VICII_SCREEN0 = (char *) 16384
__constant char * const VICII_SCREEN1 = (char *) 17408
__constant char * const VICII_SCREEN2 = (char *) 18432
__constant char * const VICII_SCREEN3 = (char *) 19456
__constant char * const VICII_SCREEN4 = (char *) 20480
__constant const char WHITE = 1
unsigned int abs_u16(unsigned int w)
char abs_u16::$0 // reg byte a 200002.0
char abs_u16::$1 // reg byte a 200002.0
unsigned int abs_u16::return
unsigned int abs_u16::return#0 // return zp[2]:10 20002.0
unsigned int abs_u16::return#1 // return zp[2]:10 20002.0
unsigned int abs_u16::return#2 // return zp[2]:10 200002.0
unsigned int abs_u16::return#4 // return zp[2]:10 55001.0
unsigned int abs_u16::w
unsigned int abs_u16::w#0 // w zp[2]:10 20002.0
unsigned int abs_u16::w#1 // w zp[2]:10 20002.0
unsigned int abs_u16::w#2 // w zp[2]:10 80001.25
void apply_preset(char idx)
char apply_preset::i
char apply_preset::i#1 // reg byte y 2.00000002E8
char apply_preset::i#2 // reg byte y 1.6666666833333334E8
char apply_preset::idx
char apply_preset::idx#0 // reg byte a 100910.18181818182
char *apply_preset::preset
char *apply_preset::preset#15 // preset zp[2]:17 2.00000002E7
void bitmap_clear(char bgcol , char fgcol)
char bitmap_clear::bgcol
char bitmap_clear::col
__constant char bitmap_clear::col#0 = WHITE*$10 // col
char bitmap_clear::fgcol
char *bitmap_gfx
void bitmap_init(char *gfx , char *screen)
char bitmap_init::$4 // reg byte a 20002.0
char bitmap_init::$5 // reg byte a 20002.0
char bitmap_init::$6 // reg byte a 20002.0
char bitmap_init::$7 // zp[1]:5 5000.5
char bitmap_init::bits
char bitmap_init::bits#1 // reg byte a 10001.0
char bitmap_init::bits#3 // reg byte a 15001.5
char bitmap_init::bits#4 // reg byte a 6667.333333333333
char *bitmap_init::gfx
char *bitmap_init::screen
char bitmap_init::x
char bitmap_init::x#1 // reg byte x 15001.5
char bitmap_init::x#2 // reg byte x 5000.5
char bitmap_init::y
char bitmap_init::y#1 // reg byte x 15001.5
char bitmap_init::y#2 // reg byte x 5000.5
char *bitmap_init::yoffs
char *bitmap_init::yoffs#1 // yoffs zp[2]:17 20002.0
char *bitmap_init::yoffs#2 // yoffs zp[2]:17 6250.625
char *bitmap_init::yoffs#4 // yoffs zp[2]:17 10001.0
void bitmap_line(unsigned int x1 , unsigned int y1 , unsigned int x2 , unsigned int y2)
unsigned int bitmap_line::dx
unsigned int bitmap_line::dx#0 // dx zp[2]:27 76000.175
unsigned int bitmap_line::dy
unsigned int bitmap_line::dy#0 // dy zp[2]:10 84444.63888888889
unsigned int bitmap_line::e
unsigned int bitmap_line::e#0 // e zp[2]:6 20002.0
unsigned int bitmap_line::e#1 // e zp[2]:6 1333334.6666666667
unsigned int bitmap_line::e#2 // e zp[2]:6 2000002.0
unsigned int bitmap_line::e#3 // e zp[2]:6 402000.60000000003
unsigned int bitmap_line::e#6 // e zp[2]:6 1500001.5
unsigned int bitmap_line::e1
unsigned int bitmap_line::e1#0 // e1 zp[2]:8 20002.0
unsigned int bitmap_line::e1#1 // e1 zp[2]:8 1333334.6666666667
unsigned int bitmap_line::e1#2 // e1 zp[2]:8 2000002.0
unsigned int bitmap_line::e1#3 // e1 zp[2]:8 402000.60000000003
unsigned int bitmap_line::e1#6 // e1 zp[2]:8 1500001.5
unsigned int bitmap_line::sx
unsigned int bitmap_line::sx#0 // sx zp[2]:30 67000.1
unsigned int bitmap_line::sy
unsigned int bitmap_line::sy#0 // sy zp[2]:13 77307.80769230769
unsigned int bitmap_line::x
unsigned int bitmap_line::x#1 // x zp[2]:17 1000001.0
unsigned int bitmap_line::x#12 // x zp[2]:17 2000002.0
unsigned int bitmap_line::x#13 // x zp[2]:17 572857.857142857
unsigned int bitmap_line::x#15 // x zp[2]:17 571429.1428571428
unsigned int bitmap_line::x#6 // x zp[2]:17 2010003.0
unsigned int bitmap_line::x#7 // x zp[2]:17 752501.0
unsigned int bitmap_line::x1
unsigned int bitmap_line::x1#0 // x1 zp[2]:17 2040.24
unsigned int bitmap_line::x2
unsigned int bitmap_line::x2#0 // x2 zp[2]:15 30939.515151515152
unsigned int bitmap_line::y
unsigned int bitmap_line::y#1 // y zp[2]:23 571429.1428571428
unsigned int bitmap_line::y#13 // y zp[2]:23 2000002.0
unsigned int bitmap_line::y#15 // y zp[2]:23 430000.57142857136
unsigned int bitmap_line::y#2 // y zp[2]:23 1000001.0
unsigned int bitmap_line::y#4 // y zp[2]:23 502500.75
unsigned int bitmap_line::y#7 // y zp[2]:23 1000001.0
unsigned int bitmap_line::y1
unsigned int bitmap_line::y1#0 // y1 zp[2]:23 1640.2
unsigned int bitmap_line::y2
unsigned int bitmap_line::y2#0 // y2 zp[2]:32 31906.375
void bitmap_plot(unsigned int x , char y)
unsigned int bitmap_plot::$1 // zp[2]:21 2.0000002E7
char bitmap_plot::$2 // reg byte x 2.0000002E7
char *bitmap_plot::plotter
unsigned int bitmap_plot::plotter#0 // plotter zp[2]:19 5000000.5
char *bitmap_plot::plotter#1 // plotter zp[2]:19 1.50000015E7
unsigned int bitmap_plot::x
unsigned int bitmap_plot::x#0 // x zp[2]:17 10001.0
unsigned int bitmap_plot::x#1 // x zp[2]:17 1000001.0
unsigned int bitmap_plot::x#2 // x zp[2]:17 10001.0
unsigned int bitmap_plot::x#3 // x zp[2]:17 1000001.0
unsigned int bitmap_plot::x#4 // x zp[2]:17 5505001.5
char bitmap_plot::y
char bitmap_plot::y#0 // reg byte x 20002.0
char bitmap_plot::y#1 // reg byte x 2000002.0
char bitmap_plot::y#2 // reg byte x 20002.0
char bitmap_plot::y#3 // reg byte x 2000002.0
char bitmap_plot::y#4 // reg byte x 2.2020006E7
__constant const char bitmap_plot_bit[$100] = { fill( $100, 0) }
__constant const char bitmap_plot_yhi[$100] = { fill( $100, 0) }
__constant const char bitmap_plot_ylo[$100] = { fill( $100, 0) }
char *bitmap_screen
void dtvSetCpuBankSegment1(char cpuBankIdx)
__constant char *dtvSetCpuBankSegment1::cpuBank = (char *) 255
char dtvSetCpuBankSegment1::cpuBankIdx
char dtvSetCpuBankSegment1::cpuBankIdx#1 // reg byte a 20002.0
char dtvSetCpuBankSegment1::cpuBankIdx#11 // reg byte a 2002.0
char dtvSetCpuBankSegment1::cpuBankIdx#13 // reg byte a 111003.0
__constant char * const form_VICII_bg0_hi = form_fields_val+$1c
__constant char * const form_VICII_bg0_lo = form_fields_val+$1d
__constant char * const form_VICII_bg1_hi = form_fields_val+$1e
__constant char * const form_VICII_bg1_lo = form_fields_val+$1f
__constant char * const form_VICII_bg2_hi = form_fields_val+$20
__constant char * const form_VICII_bg2_lo = form_fields_val+$21
__constant char * const form_VICII_bg3_hi = form_fields_val+$22
__constant char * const form_VICII_bg3_lo = form_fields_val+$23
__constant char * const form_VICII_cols = form_fields_val+$1a
__constant char * const form_VICII_gfx = form_fields_val+$19
__constant char * const form_VICII_screen = form_fields_val+$18
__constant char * const form_a_mod_hi = form_fields_val+$f
__constant char * const form_a_mod_lo = form_fields_val+$10
__constant char * const form_a_pattern = form_fields_val+$a
__constant char * const form_a_start_hi = form_fields_val+$b
__constant char * const form_a_start_lo = form_fields_val+$c
__constant char * const form_a_step_hi = form_fields_val+$d
__constant char * const form_a_step_lo = form_fields_val+$e
__constant char * const form_b_mod_hi = form_fields_val+$16
__constant char * const form_b_mod_lo = form_fields_val+$17
__constant char * const form_b_pattern = form_fields_val+$11
__constant char * const form_b_start_hi = form_fields_val+$12
__constant char * const form_b_start_lo = form_fields_val+$13
__constant char * const form_b_step_hi = form_fields_val+$14
__constant char * const form_b_step_lo = form_fields_val+$15
char form_control()
char form_control::$12 // reg byte a 2000002.0
char form_control::$13 // reg byte a 2000002.0
char form_control::$14 // reg byte a 2000002.0
char form_control::$15 // reg byte a 2000002.0
char form_control::$22 // reg byte a 2000002.0
char *form_control::field
char *form_control::field#0 // field zp[2]:13 296296.5925925926
char form_control::key_event
char form_control::key_event#0 // reg byte a 1333334.6666666667
char form_control::return
char form_control::return#0 // reg byte a 200002.0
char form_control::return#2 // reg byte x 33333.666666666664
__constant char * const form_ctrl_bmm = form_fields_val+1
__constant char * const form_ctrl_borof = form_fields_val+8
__constant char * const form_ctrl_chunk = form_fields_val+7
__constant char * const form_ctrl_colof = form_fields_val+6
__constant char * const form_ctrl_ecm = form_fields_val+3
__constant char * const form_ctrl_hicol = form_fields_val+4
__constant char * const form_ctrl_line = form_fields_val+5
__constant char * const form_ctrl_mcm = form_fields_val+2
__constant char * const form_ctrl_overs = form_fields_val+9
signed char form_cursor_count
signed char form_cursor_count#1 // form_cursor_count zp[1]:26 2.871794871794872
signed char form_cursor_count#16 // form_cursor_count zp[1]:26 200000.2
signed char form_cursor_count#17 // form_cursor_count zp[1]:26 182942.11764705883
signed char form_cursor_count#23 // form_cursor_count zp[1]:26 158586.2857142857
signed char form_cursor_count#4 // form_cursor_count zp[1]:26 1000001.0
__constant char * const form_dtv_palet = form_fields_val+$1b
char form_field_idx
char form_field_idx#1 // form_field_idx zp[1]:25 2.871794871794872
char form_field_idx#19 // form_field_idx zp[1]:25 241765.70588235295
char form_field_idx#30 // form_field_idx zp[1]:25 438721.0256410255
char form_field_idx#33 // form_field_idx zp[1]:25 3000003.0
char form_field_idx#4 // form_field_idx zp[1]:25 1000001.0
char form_field_idx#5 // form_field_idx zp[1]:25 1000001.0
char * form_field_ptr(char field_idx)
char *form_field_ptr::field
char form_field_ptr::field_idx
char form_field_ptr::field_idx#0 // reg byte x 2.00000002E8
char form_field_ptr::field_idx#1 // reg byte x 2000002.0
char form_field_ptr::field_idx#2 // reg byte x 7.003333346666667E8
char *form_field_ptr::line
unsigned int form_field_ptr::line#0 // line zp[2]:15 2.000000002E8
char *form_field_ptr::return
char *form_field_ptr::return#0 // return zp[2]:13 3.336666673333334E8
char *form_field_ptr::return#3 // return zp[2]:13 2000002.0
char form_field_ptr::x
char form_field_ptr::x#0 // x zp[1]:12 5.2500000075E8
char form_field_ptr::y
char form_field_ptr::y#0 // reg byte y 3.000000003E9
__constant char form_fields_cnt = $24
__constant char form_fields_max[] = { $a, 1, 1, 1, 1, 1, 1, 1, 1, 1, $d, $f, $f, $f, $f, $f, $f, $d, $f, $f, $f, $f, $f, $f, 3, 1, 4, 1, $f, $f, $f, $f, $f, $f, $f, $f }
__constant char form_fields_val[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char form_fields_x[] = { 8, $c, $c, $c, $c, $c, $c, $c, $c, $c, $19, $18, $19, $18, $19, $18, $19, $19, $18, $19, $18, $19, $18, $19, $25, $25, $25, $25, $24, $25, $24, $25, $24, $25, $24, $25 }
__constant char form_fields_y[] = { 2, 5, 6, 7, 8, 9, $a, $b, $c, $d, 5, 6, 6, 7, 7, 8, 8, $b, $c, $c, $d, $d, $e, $e, 5, 6, 7, $a, $b, $b, $c, $c, $d, $d, $e, $e }
__constant char form_line_hi[$19] = { fill( $19, 0) }
__constant char form_line_lo[$19] = { fill( $19, 0) }
void form_mode()
char form_mode::$11 // reg byte a 200002.0
char form_mode::i
char form_mode::i#1 // reg byte x 15001.5
char form_mode::i#2 // reg byte x 20002.0
char form_mode::preset_current
char form_mode::preset_current#0 // preset_current zp[1]:29 202.0
char form_mode::preset_current#1 // preset_current zp[1]:29 5000.5
char form_mode::preset_current#6 // preset_current zp[1]:29 38763.125
void form_render_values()
char *form_render_values::field
char form_render_values::idx
char form_render_values::idx#1 // reg byte x 2.00000002E8
char form_render_values::idx#2 // reg byte x 1.00000001E8
void form_set_screen(char *screen)
char form_set_screen::$0 // reg byte a 200002.0
char form_set_screen::$1 // reg byte a 200002.0
char *form_set_screen::line
char *form_set_screen::line#1 // line zp[2]:17 66667.33333333333
char *form_set_screen::line#2 // line zp[2]:17 80000.8
char *form_set_screen::screen
char form_set_screen::y
char form_set_screen::y#1 // reg byte x 150001.5
char form_set_screen::y#2 // reg byte x 66667.33333333333
char * get_VICII_charset(char idx)
char get_VICII_charset::idx
char get_VICII_charset::idx#0 // reg byte a 1051.5
char *get_VICII_charset::return
char *get_VICII_charset::return#2 // return zp[2]:46 33.666666666666664
char *get_VICII_charset::return#4 // return zp[2]:46 202.0
char * get_VICII_screen(char idx)
char get_VICII_screen::idx
char get_VICII_screen::idx#0 // reg byte a 202.0
char get_VICII_screen::idx#1 // reg byte a 202.0
char get_VICII_screen::idx#2 // reg byte a 1041.4
char *get_VICII_screen::return
char *get_VICII_screen::return#10 // return zp[2]:44 202.0
char *get_VICII_screen::return#11 // return zp[2]:44 202.0
char *get_VICII_screen::return#5 // return zp[2]:44 50.5
unsigned long get_plane(char idx)
char get_plane::idx
char get_plane::idx#0 // reg byte a 202.0
char get_plane::idx#1 // reg byte a 202.0
char get_plane::idx#10 // reg byte a 1015.4285714285714
unsigned long get_plane::return
unsigned long get_plane::return#14 // return zp[4]:38 50.5
unsigned long get_plane::return#16 // return zp[4]:38 202.0
unsigned long get_plane::return#17 // return zp[4]:38 202.0
void gfx_init()
void gfx_init_VICII_bitmap()
char gfx_init_VICII_bitmap::l
char gfx_init_VICII_bitmap::l#1 // l zp[1]:25 2002.0
char gfx_init_VICII_bitmap::l#2 // l zp[1]:25 1001.0
__constant char gfx_init_VICII_bitmap::lines_cnt = 9
__constant char gfx_init_VICII_bitmap::lines_x[] = { 0, $ff, $ff, 0, 0, $80, $ff, $80, 0, $80 }
__constant char gfx_init_VICII_bitmap::lines_y[] = { 0, 0, $c7, $c7, 0, 0, $64, $c7, $64, 0 }
void gfx_init_charset()
char gfx_init_charset::c
char gfx_init_charset::c#1 // c zp[1]:26 1501.5
char gfx_init_charset::c#4 // c zp[1]:26 286.0
char *gfx_init_charset::chargen
char *gfx_init_charset::chargen#1 // chargen zp[2]:17 4200.6
char *gfx_init_charset::chargen#2 // chargen zp[2]:17 10334.666666666666
char *gfx_init_charset::chargen#3 // chargen zp[2]:17 2002.0
char *gfx_init_charset::charset
char *gfx_init_charset::charset#1 // charset zp[2]:6 3500.5
char *gfx_init_charset::charset#2 // charset zp[2]:6 15502.0
char *gfx_init_charset::charset#3 // charset zp[2]:6 2002.0
char gfx_init_charset::l
char gfx_init_charset::l#1 // reg byte x 15001.5
char gfx_init_charset::l#2 // reg byte x 5000.5
void gfx_init_plane_8bppchunky()
unsigned int gfx_init_plane_8bppchunky::$5 // zp[2]:19 10001.0
char gfx_init_plane_8bppchunky::c
char gfx_init_plane_8bppchunky::c#0 // reg byte a 20002.0
char *gfx_init_plane_8bppchunky::gfxb
char *gfx_init_plane_8bppchunky::gfxb#1 // gfxb zp[2]:17 4200.6
char *gfx_init_plane_8bppchunky::gfxb#3 // gfxb zp[2]:17 15502.0
char *gfx_init_plane_8bppchunky::gfxb#4 // gfxb zp[2]:17 7500.75
char *gfx_init_plane_8bppchunky::gfxb#5 // gfxb zp[2]:17 2002.0
char gfx_init_plane_8bppchunky::gfxbCpuBank
char gfx_init_plane_8bppchunky::gfxbCpuBank#2 // reg byte x 20002.0
char gfx_init_plane_8bppchunky::gfxbCpuBank#4 // reg byte x 10251.25
char gfx_init_plane_8bppchunky::gfxbCpuBank#7 // reg byte x 2002.0
char gfx_init_plane_8bppchunky::gfxbCpuBank#8 // reg byte x 3444.8888888888887
unsigned int gfx_init_plane_8bppchunky::x
unsigned int gfx_init_plane_8bppchunky::x#1 // x zp[2]:6 15001.5
unsigned int gfx_init_plane_8bppchunky::x#2 // x zp[2]:6 3000.3
char gfx_init_plane_8bppchunky::y
char gfx_init_plane_8bppchunky::y#1 // y zp[1]:25 1501.5
char gfx_init_plane_8bppchunky::y#6 // y zp[1]:25 923.3076923076923
void gfx_init_plane_blank()
void gfx_init_plane_charset8()
char gfx_init_plane_charset8::$2 // reg byte a 200002.0
char gfx_init_plane_charset8::bits
char gfx_init_plane_charset8::bits#0 // bits zp[1]:5 10001.0
char gfx_init_plane_charset8::bits#1 // bits zp[1]:5 50000.5
char gfx_init_plane_charset8::bits#2 // bits zp[1]:5 44286.28571428572
char gfx_init_plane_charset8::c
char gfx_init_plane_charset8::c#2 // reg byte a 200002.0
char gfx_init_plane_charset8::c#3 // reg byte a 200002.0
char gfx_init_plane_charset8::ch
char gfx_init_plane_charset8::ch#1 // ch zp[1]:3 1501.5
char gfx_init_plane_charset8::ch#8 // ch zp[1]:3 117.76470588235294
char *gfx_init_plane_charset8::chargen
char *gfx_init_plane_charset8::chargen#1 // chargen zp[2]:17 1312.6875
char *gfx_init_plane_charset8::chargen#2 // chargen zp[2]:17 15502.0
char *gfx_init_plane_charset8::chargen#3 // chargen zp[2]:17 2002.0
char gfx_init_plane_charset8::col
char gfx_init_plane_charset8::col#1 // col zp[1]:4 30143.428571428572
char gfx_init_plane_charset8::col#2 // col zp[1]:4 38750.5
char gfx_init_plane_charset8::col#5 // col zp[1]:4 7001.0
char gfx_init_plane_charset8::col#6 // col zp[1]:4 2002.0
char gfx_init_plane_charset8::cp
char gfx_init_plane_charset8::cp#1 // reg byte x 150001.5
char gfx_init_plane_charset8::cp#2 // reg byte x 22222.444444444445
char gfx_init_plane_charset8::cr
char gfx_init_plane_charset8::cr#1 // cr zp[1]:2 15001.5
char gfx_init_plane_charset8::cr#6 // cr zp[1]:2 1428.7142857142858
char *gfx_init_plane_charset8::gfxa
char *gfx_init_plane_charset8::gfxa#1 // gfxa zp[2]:6 23444.88888888889
char *gfx_init_plane_charset8::gfxa#2 // gfxa zp[2]:6 51667.33333333333
char *gfx_init_plane_charset8::gfxa#5 // gfxa zp[2]:6 7001.0
char *gfx_init_plane_charset8::gfxa#6 // gfxa zp[2]:6 2002.0
char gfx_init_plane_charset8::gfxbCpuBank
__constant char gfx_init_plane_charset8::gfxbCpuBank#0 = (char)PLANE_CHARSET8/$4000 // gfxbCpuBank
void gfx_init_plane_fill(unsigned long plane_addr , char fill)
unsigned long gfx_init_plane_fill::$0 // zp[4]:34 2002.0
unsigned int gfx_init_plane_fill::$3 // zp[2]:6 2002.0
unsigned int gfx_init_plane_fill::$4 // zp[2]:6 2002.0
char gfx_init_plane_fill::bx
char gfx_init_plane_fill::bx#1 // reg byte x 150001.5
char gfx_init_plane_fill::bx#2 // reg byte x 66667.33333333333
char gfx_init_plane_fill::by
char gfx_init_plane_fill::by#1 // by zp[1]:2 15001.5
char gfx_init_plane_fill::by#4 // by zp[1]:2 3333.6666666666665
char gfx_init_plane_fill::fill
char gfx_init_plane_fill::fill#6 // fill zp[1]:3 6250.0625
char *gfx_init_plane_fill::gfxb
char *gfx_init_plane_fill::gfxb#0 // gfxb zp[2]:6 2002.0
char *gfx_init_plane_fill::gfxb#1 // gfxb zp[2]:6 42000.600000000006
char *gfx_init_plane_fill::gfxb#2 // gfxb zp[2]:6 155002.0
char *gfx_init_plane_fill::gfxb#3 // gfxb zp[2]:6 21003.0
char gfx_init_plane_fill::gfxbCpuBank
char gfx_init_plane_fill::gfxbCpuBank#0 // reg byte a 2002.0
unsigned long gfx_init_plane_fill::plane_addr
unsigned long gfx_init_plane_fill::plane_addr#3 // plane_addr zp[4]:48 400.4
void gfx_init_plane_full()
void gfx_init_plane_horisontal()
char gfx_init_plane_horisontal::$2 // reg byte a 20002.0
char gfx_init_plane_horisontal::ax
char gfx_init_plane_horisontal::ax#1 // reg byte x 15001.5
char gfx_init_plane_horisontal::ax#2 // reg byte x 2500.25
char gfx_init_plane_horisontal::ay
char gfx_init_plane_horisontal::ay#1 // ay zp[1]:3 1501.5
char gfx_init_plane_horisontal::ay#4 // ay zp[1]:3 1091.181818181818
char *gfx_init_plane_horisontal::gfxa
char *gfx_init_plane_horisontal::gfxa#1 // gfxa zp[2]:6 20002.0
char *gfx_init_plane_horisontal::gfxa#2 // gfxa zp[2]:6 20002.0
char *gfx_init_plane_horisontal::gfxa#3 // gfxa zp[2]:6 10201.2
char *gfx_init_plane_horisontal::gfxa#6 // gfxa zp[2]:6 2002.0
char *gfx_init_plane_horisontal::gfxa#7 // gfxa zp[2]:6 6200.8
char gfx_init_plane_horisontal::gfxbCpuBank
__constant char gfx_init_plane_horisontal::gfxbCpuBank#0 = (char)PLANE_HORISONTAL/$4000 // gfxbCpuBank
void gfx_init_plane_horisontal2()
char gfx_init_plane_horisontal2::$2 // reg byte a 20002.0
char gfx_init_plane_horisontal2::ax
char gfx_init_plane_horisontal2::ax#1 // reg byte x 15001.5
char gfx_init_plane_horisontal2::ax#2 // reg byte x 4000.4
char gfx_init_plane_horisontal2::ay
char gfx_init_plane_horisontal2::ay#1 // ay zp[1]:5 1501.5
char gfx_init_plane_horisontal2::ay#4 // ay zp[1]:5 1500.375
char *gfx_init_plane_horisontal2::gfxa
char *gfx_init_plane_horisontal2::gfxa#1 // gfxa zp[2]:17 4200.6
char *gfx_init_plane_horisontal2::gfxa#2 // gfxa zp[2]:17 7751.0
char *gfx_init_plane_horisontal2::gfxa#3 // gfxa zp[2]:17 2002.0
char gfx_init_plane_horisontal2::gfxbCpuBank
__constant char gfx_init_plane_horisontal2::gfxbCpuBank#0 = (char)PLANE_HORISONTAL2/$4000 // gfxbCpuBank
char gfx_init_plane_horisontal2::row
char gfx_init_plane_horisontal2::row#0 // reg byte a 20002.0
__constant char gfx_init_plane_horisontal2::row_bitmask[] = { 0, $55, $aa, $ff }
void gfx_init_plane_vertical()
char gfx_init_plane_vertical::bx
char gfx_init_plane_vertical::bx#1 // reg byte x 15001.5
char gfx_init_plane_vertical::bx#2 // reg byte x 6667.333333333333
char gfx_init_plane_vertical::by
char gfx_init_plane_vertical::by#1 // by zp[1]:2 1501.5
char gfx_init_plane_vertical::by#4 // by zp[1]:2 333.6666666666667
char *gfx_init_plane_vertical::gfxb
char *gfx_init_plane_vertical::gfxb#1 // gfxb zp[2]:17 4200.6
char *gfx_init_plane_vertical::gfxb#2 // gfxb zp[2]:17 15502.0
char *gfx_init_plane_vertical::gfxb#3 // gfxb zp[2]:17 2002.0
char gfx_init_plane_vertical::gfxbCpuBank
__constant char gfx_init_plane_vertical::gfxbCpuBank#0 = (char)PLANE_VERTICAL/$4000 // gfxbCpuBank
void gfx_init_plane_vertical2()
void gfx_init_screen0()
char gfx_init_screen0::$0 // reg byte a 20002.0
char gfx_init_screen0::$1 // zp[1]:5 10001.0
char gfx_init_screen0::$2 // reg byte a 20002.0
char gfx_init_screen0::$3 // reg byte a 20002.0
char *gfx_init_screen0::ch
char *gfx_init_screen0::ch#1 // ch zp[2]:6 4200.6
char *gfx_init_screen0::ch#2 // ch zp[2]:6 5167.333333333333
char *gfx_init_screen0::ch#3 // ch zp[2]:6 2002.0
char gfx_init_screen0::cx
char gfx_init_screen0::cx#1 // reg byte x 15001.5
char gfx_init_screen0::cx#2 // reg byte x 4286.142857142857
char gfx_init_screen0::cy
char gfx_init_screen0::cy#1 // cy zp[1]:26 1501.5
char gfx_init_screen0::cy#4 // cy zp[1]:26 1200.3
void gfx_init_screen1()
char gfx_init_screen1::$0 // reg byte a 20002.0
char gfx_init_screen1::$1 // reg byte a 20002.0
char *gfx_init_screen1::ch
char *gfx_init_screen1::ch#1 // ch zp[2]:17 4200.6
char *gfx_init_screen1::ch#2 // ch zp[2]:17 7751.0
char *gfx_init_screen1::ch#3 // ch zp[2]:17 2002.0
char gfx_init_screen1::cx
char gfx_init_screen1::cx#1 // reg byte x 15001.5
char gfx_init_screen1::cx#2 // reg byte x 6000.6
char gfx_init_screen1::cy
char gfx_init_screen1::cy#1 // cy zp[1]:25 1501.5
char gfx_init_screen1::cy#4 // cy zp[1]:25 1500.375
void gfx_init_screen2()
char gfx_init_screen2::$0 // reg byte a 20002.0
char gfx_init_screen2::$3 // reg byte a 20002.0
char gfx_init_screen2::$4 // reg byte a 20002.0
char *gfx_init_screen2::ch
char *gfx_init_screen2::ch#1 // ch zp[2]:6 4200.6
char *gfx_init_screen2::ch#2 // ch zp[2]:6 4429.142857142857
char *gfx_init_screen2::ch#3 // ch zp[2]:6 2002.0
char gfx_init_screen2::col
char gfx_init_screen2::col#0 // reg byte y 15001.5
char gfx_init_screen2::col2
char gfx_init_screen2::col2#0 // col2 zp[1]:4 10001.0
char gfx_init_screen2::cx
char gfx_init_screen2::cx#1 // reg byte x 15001.5
char gfx_init_screen2::cx#2 // reg byte x 3750.375
char gfx_init_screen2::cy
char gfx_init_screen2::cy#1 // cy zp[1]:29 1501.5
char gfx_init_screen2::cy#4 // cy zp[1]:29 1091.181818181818
void gfx_init_screen3()
char gfx_init_screen3::$0 // reg byte a 20002.0
char gfx_init_screen3::$1 // zp[1]:4 10001.0
char gfx_init_screen3::$2 // reg byte a 20002.0
char gfx_init_screen3::$3 // reg byte a 20002.0
char *gfx_init_screen3::ch
char *gfx_init_screen3::ch#1 // ch zp[2]:6 4200.6
char *gfx_init_screen3::ch#2 // ch zp[2]:6 5167.333333333333
char *gfx_init_screen3::ch#3 // ch zp[2]:6 2002.0
char gfx_init_screen3::cx
char gfx_init_screen3::cx#1 // reg byte x 15001.5
char gfx_init_screen3::cx#2 // reg byte x 4286.142857142857
char gfx_init_screen3::cy
char gfx_init_screen3::cy#1 // cy zp[1]:29 1501.5
char gfx_init_screen3::cy#4 // cy zp[1]:29 1200.3
void gfx_init_screen4()
char *gfx_init_screen4::ch
char *gfx_init_screen4::ch#1 // ch zp[2]:17 4200.6
char *gfx_init_screen4::ch#2 // ch zp[2]:17 15502.0
char *gfx_init_screen4::ch#3 // ch zp[2]:17 2002.0
char gfx_init_screen4::cx
char gfx_init_screen4::cx#1 // reg byte x 15001.5
char gfx_init_screen4::cx#2 // reg byte x 6667.333333333333
char gfx_init_screen4::cy
char gfx_init_screen4::cy#1 // cy zp[1]:26 1501.5
char gfx_init_screen4::cy#4 // cy zp[1]:26 333.6666666666667
void gfx_mode()
char gfx_mode::$18 // reg byte a 202.0
unsigned long gfx_mode::$20 // zp[4]:38 202.0
char gfx_mode::$22 // reg byte a 202.0
char gfx_mode::$23 // reg byte a 202.0
char gfx_mode::$24 // reg byte a 202.0
char gfx_mode::$25 // reg byte a 202.0
char gfx_mode::$26 // reg byte a 202.0
char gfx_mode::$27 // reg byte a 202.0
char gfx_mode::$28 // reg byte a 202.0
char gfx_mode::$29 // reg byte a 202.0
unsigned long gfx_mode::$31 // zp[4]:38 202.0
char gfx_mode::$33 // reg byte a 202.0
char gfx_mode::$34 // reg byte a 202.0
char gfx_mode::$35 // reg byte a 202.0
char gfx_mode::$36 // reg byte a 202.0
char gfx_mode::$37 // reg byte a 202.0
char gfx_mode::$38 // reg byte a 202.0
char gfx_mode::$39 // reg byte a 202.0
unsigned int gfx_mode::$41 // zp[2]:44 202.0
unsigned int gfx_mode::$42 // zp[2]:44 12.625
unsigned int gfx_mode::$44 // zp[2]:46 202.0
char gfx_mode::$45 // reg byte a 202.0
char gfx_mode::$46 // zp[1]:52 101.0
char gfx_mode::$47 // reg byte a 202.0
char gfx_mode::$49 // reg byte a 202.0
char gfx_mode::$50 // reg byte a 202.0
char gfx_mode::$51 // reg byte a 202.0
char gfx_mode::$52 // reg byte a 202.0
char gfx_mode::$53 // reg byte a 202.0
char gfx_mode::$54 // reg byte a 202.0
char gfx_mode::$55 // reg byte a 202.0
char gfx_mode::$56 // reg byte a 202.0
char *gfx_mode::$76 // zp[2]:44 101.0
char *gfx_mode::$77 // zp[2]:46 101.0
char gfx_mode::$78 // reg byte a 202.0
char *gfx_mode::VICII_colors
char *gfx_mode::VICII_colors#0 // VICII_colors zp[2]:6 202.0
char *gfx_mode::VICII_colors#1 // VICII_colors zp[2]:6 42000.600000000006
char *gfx_mode::VICII_colors#2 // VICII_colors zp[2]:6 103334.66666666666
char *gfx_mode::VICII_colors#3 // VICII_colors zp[2]:6 20103.0
char gfx_mode::VICII_control
char gfx_mode::VICII_control#2 // reg byte x 202.0
char gfx_mode::VICII_control#4 // reg byte x 303.0
char gfx_mode::VICII_control#5 // reg byte x 101.0
char gfx_mode::VICII_control2
char gfx_mode::VICII_control2#2 // reg byte a 101.0
char *gfx_mode::col
char *gfx_mode::col#1 // col zp[2]:17 35000.5
char *gfx_mode::col#2 // col zp[2]:17 155002.0
char *gfx_mode::col#3 // col zp[2]:17 20002.0
char gfx_mode::cx
char gfx_mode::cx#1 // reg byte x 150001.5
char gfx_mode::cx#2 // reg byte x 50000.5
char gfx_mode::cy
char gfx_mode::cy#1 // cy zp[1]:29 15001.5
char gfx_mode::cy#4 // cy zp[1]:29 2857.4285714285716
char gfx_mode::dtv_control
char gfx_mode::dtv_control#10 // reg byte x 202.0
char gfx_mode::dtv_control#11 // reg byte x 202.0
char gfx_mode::dtv_control#12 // reg byte x 303.0
char gfx_mode::dtv_control#13 // reg byte x 202.0
char gfx_mode::dtv_control#14 // reg byte x 101.0
char gfx_mode::dtv_control#15 // reg byte x 202.0
char gfx_mode::dtv_control#2 // reg byte x 202.0
char gfx_mode::dtv_control#3 // reg byte x 202.0
char gfx_mode::dtv_control#4 // reg byte x 202.0
char gfx_mode::dtv_control#5 // reg byte x 202.0
char gfx_mode::dtv_control#6 // reg byte x 202.0
char gfx_mode::i
char gfx_mode::i#1 // reg byte x 15001.5
char gfx_mode::i#2 // reg byte x 20002.0
char gfx_mode::j
char gfx_mode::j#1 // reg byte x 15001.5
char gfx_mode::j#2 // reg byte x 20002.0
char gfx_mode::keyboard_event
char gfx_mode::keyboard_event#0 // reg byte a 20002.0
unsigned long gfx_mode::plane_a
unsigned long gfx_mode::plane_a#0 // plane_a zp[4]:38 80.8
char gfx_mode::plane_a_offs
char gfx_mode::plane_a_offs#0 // reg byte x 40.4
unsigned long gfx_mode::plane_b
unsigned long gfx_mode::plane_b#0 // plane_b zp[4]:38 80.8
char gfx_mode::plane_b_offs
char gfx_mode::plane_b_offs#0 // reg byte x 40.4
char keyboard_event_get()
char keyboard_event_get::return
char keyboard_event_get::return#1 // reg byte a 2.0000002E7
char keyboard_event_get::return#2 // reg byte a 2752500.75
char keyboard_event_get::return#3 // reg byte a 20002.0
char keyboard_event_get::return#4 // reg byte a 2000002.0
char keyboard_event_pressed(char keycode)
char keyboard_event_pressed::$0 // reg byte a 2.00000002E8
char keyboard_event_pressed::$1 // reg byte a 2.00000002E8
char keyboard_event_pressed::keycode
char keyboard_event_pressed::keycode#4 // keycode zp[1]:5 6.6666667333333336E7
char keyboard_event_pressed::return
char keyboard_event_pressed::return#0 // reg byte a 2.0000002E7
char keyboard_event_pressed::return#1 // reg byte a 2.0000002E7
char keyboard_event_pressed::return#10 // reg byte a 2.3333334166666668E7
char keyboard_event_pressed::return#2 // reg byte a 2.0000002E7
char keyboard_event_pressed::return#3 // reg byte a 2.0000002E7
char keyboard_event_pressed::row_bits
char keyboard_event_pressed::row_bits#0 // row_bits zp[1]:12 1.00000001E8
void keyboard_event_scan()
char keyboard_event_scan::$0 // reg byte a 2.0000002E7
char keyboard_event_scan::$15 // reg byte a 2.000000000002E12
char keyboard_event_scan::$16 // reg byte a 2.000000000002E12
char keyboard_event_scan::$23 // reg byte a 2.000000000002E12
char keyboard_event_scan::$3 // reg byte a 2.0000002E7
char keyboard_event_scan::$6 // reg byte a 2.0000002E7
char keyboard_event_scan::$9 // reg byte a 2.0000002E7
char keyboard_event_scan::col
char keyboard_event_scan::col#1 // reg byte x 1.5000000000015E12
char keyboard_event_scan::col#2 // reg byte x 2.857142857145714E11
char keyboard_event_scan::event_type
char keyboard_event_scan::event_type#0 // reg byte a 2.000000000002E12
char keyboard_event_scan::keycode
char keyboard_event_scan::keycode#1 // keycode zp[1]:3 2.00000000002E11
char keyboard_event_scan::keycode#10 // keycode zp[1]:3 3.15384615385E11
char keyboard_event_scan::keycode#11 // keycode zp[1]:3 5.00000000005E10
char keyboard_event_scan::keycode#13 // keycode zp[1]:3 1.00000000001E11
char keyboard_event_scan::keycode#14 // keycode zp[1]:3 5.2500000000075E11
char keyboard_event_scan::row
char keyboard_event_scan::row#1 // row zp[1]:4 1.500000000015E11
char keyboard_event_scan::row#2 // row zp[1]:4 6.000000000024E10
char keyboard_event_scan::row_scan
char keyboard_event_scan::row_scan#0 // row_scan zp[1]:5 1.2777777777805557E11
__constant char keyboard_events[8] = { fill( 8, 0) }
char keyboard_events_size
char keyboard_events_size#0 // keyboard_events_size zp[1]:2 2.000000000002E12
char keyboard_events_size#1 // keyboard_events_size zp[1]:2 2.000000000002E12
char keyboard_events_size#100 // keyboard_events_size zp[1]:2 8.82441176488235E9
char keyboard_events_size#106 // keyboard_events_size zp[1]:2 1.0200000000012E12
char keyboard_events_size#107 // keyboard_events_size zp[1]:2 4.285857142914285E10
char keyboard_events_size#19 // keyboard_events_size zp[1]:2 8.100000000008999E11
char keyboard_events_size#25 // keyboard_events_size zp[1]:2 114318.27272727274
char keyboard_events_size#28 // keyboard_events_size zp[1]:2 2.871794871794872
char keyboard_events_size#3 // keyboard_events_size zp[1]:2 1.50000015E7
char keyboard_events_size#49 // keyboard_events_size zp[1]:2 65300.23529411765
char keyboard_events_size#98 // keyboard_events_size zp[1]:2 1.1010003E7
void keyboard_init()
__constant char keyboard_matrix_col_bitmask[8] = { 1, 2, 4, 8, $10, $20, $40, $80 }
char keyboard_matrix_read(char rowid)
char keyboard_matrix_read::return
char keyboard_matrix_read::return#0 // reg byte a 3.666666666673334E11
char keyboard_matrix_read::return#2 // reg byte a 2.00000000002E11
char keyboard_matrix_read::row_pressed_bits
char keyboard_matrix_read::rowid
char keyboard_matrix_read::rowid#0 // reg byte x 1.100000000002E12
__constant char keyboard_matrix_row_bitmask[8] = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
char keyboard_modifiers
char keyboard_modifiers#19 // reg byte x 4000000.4
char keyboard_modifiers#2 // reg byte x 2.0000002E7
char keyboard_modifiers#20 // reg byte x 8000000.8
char keyboard_modifiers#21 // reg byte x 8000000.8
char keyboard_modifiers#22 // reg byte x 2000000.3636363638
char keyboard_modifiers#3 // reg byte x 2.0000002E7
char keyboard_modifiers#4 // reg byte x 2.0000002E7
__constant char keyboard_scan_values[8] = { fill( 8, 0) }
void main()
void * memset(void *str , char c , unsigned int num)
char memset::c
char memset::c#5 // reg byte x 125000.125
char *memset::dst
char *memset::dst#1 // dst zp[2]:23 2000002.0
char *memset::dst#2 // dst zp[2]:23 1336668.3333333335
char *memset::dst#4 // dst zp[2]:23 20002.0
char *memset::end
char *memset::end#0 // end zp[2]:17 168333.6666666667
unsigned int memset::num
unsigned int memset::num#3 // num zp[2]:17 10001.0
void *memset::return
void *memset::str
void *memset::str#0 // str zp[2]:23 2002.0
void *memset::str#4 // str zp[2]:23 333.6666666666667
__constant char preset_8bpppixelcell[] = { $a, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, $b, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_chunky[] = { 7, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 8, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_ecmchar[] = { 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 5, 0, 6 }
__constant char preset_hi_ecmchar[] = { 5, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 4, 6, 8, 9, $c, $c }
__constant char preset_hi_stdchar[] = { 4, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_mcbm[] = { 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0 }
__constant char preset_sixsfred[] = { 8, 1, 1, 1, 1, 1, 0, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, $a, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_sixsfred2[] = { 9, 1, 1, 1, 0, 1, 0, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, $a, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_stdbm[] = { 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_stdchar[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
__constant char preset_twoplane[] = { 6, 1, 0, 1, 1, 1, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 7, 0, $d, 4, 0, 0, 0, 0 }
void print_char(char ch)
char print_char::ch
char print_char::ch#0 // reg byte a 1.1000002E7
char *print_char_cursor
char *print_char_cursor#2 // print_char_cursor zp[2]:6 100501.5
char *print_char_cursor#29 // print_char_cursor zp[2]:6 3666667.333333333
char *print_char_cursor#43 // print_char_cursor zp[2]:6 3683334.1666666665
char *print_char_cursor#44 // print_char_cursor zp[2]:6 1.4328571485714287E8
char *print_char_cursor#72 // print_char_cursor zp[2]:6 2002.0
char *print_char_cursor#73 // print_char_cursor zp[2]:6 200002.0
void print_cls()
__constant const char print_hextab[] = "0123456789abcdef"z
char *print_line_cursor
char *print_line_cursor#1 // print_line_cursor zp[2]:8 91750.25
char *print_line_cursor#2 // print_line_cursor zp[2]:8 6.00040001E8
char *print_line_cursor#22 // print_line_cursor zp[2]:8 2.001000003E9
void print_ln()
char *print_screen
char *print_screen#0 // print_screen zp[2]:8 200.2
void print_set_screen(char *screen)
char *print_set_screen::screen
char *print_set_screen::screen#2 // screen zp[2]:42 1001.0
void print_str_at(char *str , char *at)
char *print_str_at::at
char *print_str_at::at#0 // at zp[2]:10 1.000000001E9
char *print_str_at::at#2 // at zp[2]:10 1.000000001E9
char *print_str_at::str
char *print_str_at::str#0 // str zp[2]:6 2.000000002E9
char *print_str_at::str#1 // str zp[2]:6 550001.0
char *print_str_at::str#2 // str zp[2]:6 1.00025000125E9
void print_str_lines(char *str)
char print_str_lines::ch
char print_str_lines::ch#0 // reg byte a 666667.3333333334
char *print_str_lines::str
char *print_str_lines::str#0 // str zp[2]:17 233333.66666666666
char *print_str_lines::str#3 // str zp[2]:17 150502.0
char *print_str_lines::str#4 // str zp[2]:17 1550002.0
char *print_str_lines::str#5 // str zp[2]:17 500.5
void render_preset_name(char idx)
char render_preset_name::idx
char render_preset_name::idx#0 // reg byte a 202.0
char render_preset_name::idx#1 // reg byte a 20002.0
char render_preset_name::idx#10 // reg byte a 100919.36363636363
char *render_preset_name::name
__constant char *render_preset_name::name#1 = "Standard Charset              " // name_1
__constant char *render_preset_name::name#10 = "Sixs Fred 2                   " // name_10
__constant char *render_preset_name::name#11 = "8bpp Pixel Cell               " // name_11
char *render_preset_name::name#13 // name zp[2]:6 100001.0
__constant char *render_preset_name::name#2 = "Extended Color Charset        " // name_2
__constant char *render_preset_name::name#3 = "Standard Bitmap               " // name_3
__constant char *render_preset_name::name#4 = "Multicolor Bitmap             " // name_4
__constant char *render_preset_name::name#5 = "Hicolor Charset               " // name_5
__constant char *render_preset_name::name#6 = "Hicolor Extended Color Charset" // name_6
__constant char *render_preset_name::name#7 = "Twoplane Bitmap               " // name_7
__constant char *render_preset_name::name#8 = "Chunky 8bpp                   " // name_8
__constant char *render_preset_name::name#9 = "Sixs Fred                     " // name_9
unsigned int sgn_u16(unsigned int w)
char sgn_u16::$0 // reg byte a 200002.0
char sgn_u16::$1 // reg byte a 200002.0
unsigned int sgn_u16::return
unsigned int sgn_u16::return#0 // return zp[2]:13 20002.0
unsigned int sgn_u16::return#1 // return zp[2]:13 20002.0
unsigned int sgn_u16::return#4 // return zp[2]:13 5000.5
unsigned int sgn_u16::w
unsigned int sgn_u16::w#0 // w zp[2]:19 20002.0
unsigned int sgn_u16::w#1 // w zp[2]:19 20002.0
unsigned int sgn_u16::w#2 // w zp[2]:19 120003.0

reg byte x [ form_mode::i#2 form_mode::i#1 ]
reg byte x [ gfx_mode::dtv_control#12 gfx_mode::dtv_control#6 gfx_mode::dtv_control#13 gfx_mode::dtv_control#5 gfx_mode::dtv_control#11 gfx_mode::dtv_control#4 gfx_mode::dtv_control#10 gfx_mode::dtv_control#3 gfx_mode::dtv_control#15 gfx_mode::dtv_control#14 gfx_mode::dtv_control#2 ]
reg byte x [ gfx_mode::VICII_control#4 gfx_mode::VICII_control#2 gfx_mode::VICII_control#5 ]
reg byte a [ gfx_mode::VICII_control2#2 ]
reg byte x [ gfx_mode::cx#2 gfx_mode::cx#1 ]
reg byte x [ gfx_mode::j#2 gfx_mode::j#1 ]
reg byte x [ gfx_mode::i#2 gfx_mode::i#1 ]
reg byte x [ gfx_init_screen0::cx#2 gfx_init_screen0::cx#1 ]
reg byte x [ gfx_init_screen1::cx#2 gfx_init_screen1::cx#1 ]
reg byte x [ gfx_init_screen2::cx#2 gfx_init_screen2::cx#1 ]
zp[1]:29 [ gfx_init_screen3::cy#4 gfx_init_screen3::cy#1 gfx_init_screen2::cy#4 gfx_init_screen2::cy#1 gfx_mode::cy#4 gfx_mode::cy#1 form_mode::preset_current#6 form_mode::preset_current#0 form_mode::preset_current#1 ]
reg byte x [ gfx_init_screen3::cx#2 gfx_init_screen3::cx#1 ]
reg byte x [ gfx_init_screen4::cx#2 gfx_init_screen4::cx#1 ]
zp[1]:26 [ gfx_init_charset::c#4 gfx_init_charset::c#1 gfx_init_screen4::cy#4 gfx_init_screen4::cy#1 gfx_init_screen0::cy#4 gfx_init_screen0::cy#1 form_cursor_count#23 form_cursor_count#1 form_cursor_count#17 form_cursor_count#16 form_cursor_count#4 ]
reg byte x [ gfx_init_charset::l#2 gfx_init_charset::l#1 ]
zp[1]:25 [ gfx_init_plane_8bppchunky::y#6 gfx_init_plane_8bppchunky::y#1 gfx_init_VICII_bitmap::l#2 gfx_init_VICII_bitmap::l#1 gfx_init_screen1::cy#4 gfx_init_screen1::cy#1 form_field_idx#30 form_field_idx#1 form_field_idx#19 form_field_idx#33 form_field_idx#5 form_field_idx#4 ]
reg byte x [ gfx_init_plane_8bppchunky::gfxbCpuBank#4 gfx_init_plane_8bppchunky::gfxbCpuBank#7 gfx_init_plane_8bppchunky::gfxbCpuBank#8 gfx_init_plane_8bppchunky::gfxbCpuBank#2 ]
reg byte x [ gfx_init_plane_charset8::cp#2 gfx_init_plane_charset8::cp#1 ]
reg byte a [ gfx_init_plane_charset8::c#2 gfx_init_plane_charset8::c#3 ]
reg byte x [ gfx_init_plane_horisontal::ax#2 gfx_init_plane_horisontal::ax#1 ]
reg byte x [ gfx_init_plane_vertical::bx#2 gfx_init_plane_vertical::bx#1 ]
reg byte x [ gfx_init_plane_horisontal2::ax#2 gfx_init_plane_horisontal2::ax#1 ]
zp[2]:42 [ print_set_screen::screen#2 ]
reg byte x [ form_set_screen::y#2 form_set_screen::y#1 ]
reg byte x [ form_render_values::idx#2 form_render_values::idx#1 ]
reg byte a [ render_preset_name::idx#10 render_preset_name::idx#0 render_preset_name::idx#1 ]
reg byte x [ form_control::return#2 ]
reg byte y [ apply_preset::i#2 apply_preset::i#1 ]
reg byte a [ get_plane::idx#10 get_plane::idx#1 get_plane::idx#0 ]
zp[4]:38 [ get_plane::return#14 get_plane::return#16 get_plane::return#17 gfx_mode::$20 gfx_mode::plane_a#0 gfx_mode::$31 gfx_mode::plane_b#0 ]
reg byte a [ get_VICII_screen::idx#2 get_VICII_screen::idx#0 get_VICII_screen::idx#1 ]
zp[2]:44 [ get_VICII_screen::return#5 get_VICII_screen::return#10 get_VICII_screen::return#11 gfx_mode::$76 gfx_mode::$41 gfx_mode::$42 ]
zp[2]:46 [ get_VICII_charset::return#2 get_VICII_charset::return#4 gfx_mode::$77 gfx_mode::$44 ]
reg byte x [ keyboard_modifiers#22 keyboard_modifiers#21 keyboard_modifiers#20 keyboard_modifiers#19 keyboard_modifiers#2 keyboard_modifiers#3 keyboard_modifiers#4 ]
reg byte x [ keyboard_event_scan::col#2 keyboard_event_scan::col#1 ]
reg byte a [ keyboard_event_get::return#2 keyboard_event_get::return#1 ]
reg byte a [ bitmap_init::bits#3 bitmap_init::bits#4 bitmap_init::bits#1 ]
reg byte x [ bitmap_init::x#2 bitmap_init::x#1 ]
reg byte x [ bitmap_init::y#2 bitmap_init::y#1 ]
reg byte a [ dtvSetCpuBankSegment1::cpuBankIdx#13 dtvSetCpuBankSegment1::cpuBankIdx#1 dtvSetCpuBankSegment1::cpuBankIdx#11 ]
zp[4]:48 [ gfx_init_plane_fill::plane_addr#3 ]
zp[1]:3 [ gfx_init_plane_fill::fill#6 keyboard_event_scan::keycode#10 keyboard_event_scan::keycode#11 keyboard_event_scan::keycode#13 keyboard_event_scan::keycode#14 keyboard_event_scan::keycode#1 gfx_init_plane_horisontal::ay#4 gfx_init_plane_horisontal::ay#1 gfx_init_plane_charset8::ch#8 gfx_init_plane_charset8::ch#1 ]
zp[1]:2 [ gfx_init_plane_fill::by#4 gfx_init_plane_fill::by#1 keyboard_events_size#19 keyboard_events_size#107 keyboard_events_size#98 keyboard_events_size#49 keyboard_events_size#28 keyboard_events_size#25 keyboard_events_size#100 keyboard_events_size#106 keyboard_events_size#0 keyboard_events_size#1 keyboard_events_size#3 gfx_init_plane_vertical::by#4 gfx_init_plane_vertical::by#1 gfx_init_plane_charset8::cr#6 gfx_init_plane_charset8::cr#1 ]
zp[2]:6 [ gfx_init_plane_fill::gfxb#2 gfx_init_plane_fill::gfxb#3 gfx_init_plane_fill::gfxb#1 gfx_init_plane_fill::gfxb#0 gfx_init_plane_fill::$4 gfx_init_plane_fill::$3 bitmap_line::e#3 bitmap_line::e#0 bitmap_line::e#6 bitmap_line::e#1 bitmap_line::e#2 render_preset_name::name#13 print_str_at::str#2 print_str_at::str#1 print_str_at::str#0 print_char_cursor#43 print_char_cursor#2 print_char_cursor#72 print_char_cursor#73 print_char_cursor#44 print_char_cursor#29 gfx_init_plane_horisontal::gfxa#3 gfx_init_plane_horisontal::gfxa#6 gfx_init_plane_horisontal::gfxa#7 gfx_init_plane_horisontal::gfxa#1 gfx_init_plane_horisontal::gfxa#2 gfx_init_plane_charset8::gfxa#2 gfx_init_plane_charset8::gfxa#5 gfx_init_plane_charset8::gfxa#6 gfx_init_plane_charset8::gfxa#1 gfx_init_plane_8bppchunky::x#2 gfx_init_plane_8bppchunky::x#1 gfx_init_charset::charset#2 gfx_init_charset::charset#3 gfx_init_charset::charset#1 gfx_init_screen3::ch#2 gfx_init_screen3::ch#3 gfx_init_screen3::ch#1 gfx_init_screen2::ch#2 gfx_init_screen2::ch#3 gfx_init_screen2::ch#1 gfx_init_screen0::ch#2 gfx_init_screen0::ch#3 gfx_init_screen0::ch#1 gfx_mode::VICII_colors#2 gfx_mode::VICII_colors#3 gfx_mode::VICII_colors#1 gfx_mode::VICII_colors#0 ]
reg byte x [ gfx_init_plane_fill::bx#2 gfx_init_plane_fill::bx#1 ]
zp[2]:17 [ memset::num#3 memset::end#0 bitmap_line::x#7 bitmap_line::x#6 bitmap_line::x#15 bitmap_line::x#13 bitmap_line::x1#0 bitmap_line::x#12 bitmap_line::x#1 bitmap_plot::x#4 bitmap_plot::x#2 bitmap_plot::x#0 bitmap_plot::x#1 bitmap_plot::x#3 bitmap_init::yoffs#2 bitmap_init::yoffs#4 bitmap_init::yoffs#1 apply_preset::preset#15 form_set_screen::line#2 form_set_screen::line#1 print_str_lines::str#4 print_str_lines::str#3 print_str_lines::str#5 print_str_lines::str#0 gfx_init_plane_horisontal2::gfxa#2 gfx_init_plane_horisontal2::gfxa#3 gfx_init_plane_horisontal2::gfxa#1 gfx_init_plane_vertical::gfxb#2 gfx_init_plane_vertical::gfxb#3 gfx_init_plane_vertical::gfxb#1 gfx_init_plane_charset8::chargen#2 gfx_init_plane_charset8::chargen#3 gfx_init_plane_charset8::chargen#1 gfx_init_plane_8bppchunky::gfxb#4 gfx_init_plane_8bppchunky::gfxb#3 gfx_init_plane_8bppchunky::gfxb#5 gfx_init_plane_8bppchunky::gfxb#1 gfx_init_charset::chargen#2 gfx_init_charset::chargen#3 gfx_init_charset::chargen#1 gfx_init_screen4::ch#2 gfx_init_screen4::ch#3 gfx_init_screen4::ch#1 gfx_init_screen1::ch#2 gfx_init_screen1::ch#3 gfx_init_screen1::ch#1 gfx_mode::col#2 gfx_mode::col#3 gfx_mode::col#1 ]
zp[2]:23 [ memset::str#4 memset::str#0 memset::dst#2 memset::dst#4 memset::dst#1 bitmap_line::y#15 bitmap_line::y#7 bitmap_line::y#13 bitmap_line::y#4 bitmap_line::y1#0 bitmap_line::y#1 bitmap_line::y#2 ]
reg byte x [ memset::c#5 ]
zp[2]:8 [ print_line_cursor#22 print_line_cursor#1 print_screen#0 print_line_cursor#2 bitmap_line::e1#3 bitmap_line::e1#6 bitmap_line::e1#0 bitmap_line::e1#2 bitmap_line::e1#1 ]
reg byte x [ form_field_ptr::field_idx#2 form_field_ptr::field_idx#1 form_field_ptr::field_idx#0 ]
zp[2]:10 [ abs_u16::return#4 abs_u16::return#2 abs_u16::w#2 abs_u16::w#0 abs_u16::w#1 abs_u16::return#0 abs_u16::return#1 bitmap_line::dy#0 print_str_at::at#2 print_str_at::at#0 ]
reg byte x [ bitmap_plot::y#4 bitmap_plot::y#2 bitmap_plot::y#0 bitmap_plot::y#1 bitmap_plot::y#3 ]
reg byte a [ form_control::return#0 ]
reg byte a [ form_mode::$11 ]
reg byte a [ apply_preset::idx#0 ]
reg byte a [ gfx_mode::$18 ]
reg byte x [ gfx_mode::plane_a_offs#0 ]
reg byte a [ gfx_mode::$22 ]
reg byte a [ gfx_mode::$23 ]
reg byte a [ gfx_mode::$24 ]
reg byte a [ gfx_mode::$25 ]
reg byte a [ gfx_mode::$26 ]
reg byte a [ gfx_mode::$27 ]
reg byte a [ gfx_mode::$28 ]
reg byte a [ gfx_mode::$29 ]
reg byte x [ gfx_mode::plane_b_offs#0 ]
reg byte a [ gfx_mode::$33 ]
reg byte a [ gfx_mode::$34 ]
reg byte a [ gfx_mode::$35 ]
reg byte a [ gfx_mode::$36 ]
reg byte a [ gfx_mode::$37 ]
reg byte a [ gfx_mode::$38 ]
reg byte a [ gfx_mode::$39 ]
reg byte a [ get_VICII_charset::idx#0 ]
reg byte a [ gfx_mode::$45 ]
zp[1]:52 [ gfx_mode::$46 ]
reg byte a [ gfx_mode::$78 ]
reg byte a [ gfx_mode::$47 ]
reg byte a [ gfx_mode::$49 ]
reg byte a [ gfx_mode::$50 ]
reg byte a [ gfx_mode::$51 ]
reg byte a [ gfx_mode::$52 ]
reg byte a [ gfx_mode::$53 ]
reg byte a [ gfx_mode::$54 ]
reg byte a [ gfx_mode::$55 ]
reg byte a [ gfx_mode::$56 ]
reg byte a [ keyboard_event_get::return#3 ]
reg byte a [ gfx_mode::keyboard_event#0 ]
reg byte a [ gfx_init_screen0::$0 ]
reg byte a [ gfx_init_screen0::$2 ]
reg byte a [ gfx_init_screen0::$3 ]
reg byte a [ gfx_init_screen1::$0 ]
reg byte a [ gfx_init_screen1::$1 ]
reg byte a [ gfx_init_screen2::$0 ]
reg byte y [ gfx_init_screen2::col#0 ]
reg byte a [ gfx_init_screen2::$3 ]
reg byte a [ gfx_init_screen2::$4 ]
reg byte a [ gfx_init_screen3::$0 ]
zp[1]:4 [ gfx_init_screen3::$1 gfx_init_screen2::col2#0 keyboard_event_scan::row#2 keyboard_event_scan::row#1 gfx_init_plane_charset8::col#2 gfx_init_plane_charset8::col#5 gfx_init_plane_charset8::col#6 gfx_init_plane_charset8::col#1 ]
reg byte a [ gfx_init_screen3::$2 ]
reg byte a [ gfx_init_screen3::$3 ]
zp[2]:32 [ bitmap_line::y2#0 ]
reg byte a [ gfx_init_plane_8bppchunky::c#0 ]
reg byte a [ gfx_init_plane_charset8::$2 ]
reg byte a [ gfx_init_plane_horisontal::$2 ]
reg byte a [ gfx_init_plane_horisontal2::$2 ]
reg byte a [ gfx_init_plane_horisontal2::row#0 ]
reg byte a [ print_str_lines::ch#0 ]
reg byte a [ print_char::ch#0 ]
reg byte a [ form_set_screen::$0 ]
reg byte a [ form_set_screen::$1 ]
zp[2]:13 [ form_field_ptr::return#3 form_control::field#0 form_field_ptr::return#0 sgn_u16::return#4 sgn_u16::return#0 sgn_u16::return#1 bitmap_line::sy#0 ]
reg byte a [ form_control::$12 ]
reg byte a [ keyboard_event_get::return#4 ]
reg byte a [ form_control::key_event#0 ]
reg byte a [ form_control::$14 ]
reg byte a [ form_control::$15 ]
reg byte a [ form_control::$22 ]
reg byte a [ form_control::$13 ]
reg byte x [ keyboard_matrix_read::rowid#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_event_pressed::return#0 ]
reg byte a [ keyboard_event_scan::$0 ]
reg byte a [ keyboard_event_pressed::return#1 ]
reg byte a [ keyboard_event_scan::$3 ]
reg byte a [ keyboard_event_pressed::return#2 ]
reg byte a [ keyboard_event_scan::$6 ]
reg byte a [ keyboard_event_pressed::return#3 ]
reg byte a [ keyboard_event_scan::$9 ]
reg byte a [ keyboard_event_scan::$15 ]
reg byte a [ keyboard_event_scan::$16 ]
reg byte a [ keyboard_event_scan::event_type#0 ]
reg byte a [ keyboard_event_scan::$23 ]
zp[1]:5 [ bitmap_init::$7 keyboard_event_scan::row_scan#0 gfx_init_screen0::$1 keyboard_event_pressed::keycode#4 gfx_init_plane_horisontal2::ay#4 gfx_init_plane_horisontal2::ay#1 gfx_init_plane_charset8::bits#2 gfx_init_plane_charset8::bits#0 gfx_init_plane_charset8::bits#1 ]
reg byte a [ bitmap_init::$4 ]
reg byte a [ bitmap_init::$5 ]
reg byte a [ bitmap_init::$6 ]
zp[2]:27 [ bitmap_line::dx#0 ]
zp[2]:30 [ bitmap_line::sx#0 ]
zp[4]:34 [ gfx_init_plane_fill::$0 ]
reg byte a [ gfx_init_plane_fill::gfxbCpuBank#0 ]
reg byte y [ form_field_ptr::y#0 ]
zp[2]:15 [ form_field_ptr::line#0 bitmap_line::x2#0 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ keyboard_event_pressed::$0 ]
zp[1]:12 [ keyboard_event_pressed::row_bits#0 form_field_ptr::x#0 ]
reg byte a [ keyboard_event_pressed::$1 ]
reg byte a [ keyboard_event_pressed::return#10 ]
reg byte a [ abs_u16::$0 ]
reg byte a [ abs_u16::$1 ]
reg byte a [ sgn_u16::$0 ]
reg byte a [ sgn_u16::$1 ]
zp[2]:19 [ bitmap_plot::plotter#0 bitmap_plot::plotter#1 gfx_init_plane_8bppchunky::$5 sgn_u16::w#2 sgn_u16::w#0 sgn_u16::w#1 ]
zp[2]:21 [ bitmap_plot::$1 ]
reg byte x [ bitmap_plot::$2 ]
