@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  [5] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call testChar 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call testShort 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call testInt 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] phi()
  [13] call testLong 
  to:main::@return
main::@return: scope:[main]  from main::@4
  [14] return 
  to:@return
testLong: scope:[testLong]  from main::@4
  [15] (byte*~) print_char_cursor#156 ← (byte*) print_line_cursor#1
  [16] call print_str 
  to:testLong::@1
testLong::@1: scope:[testLong]  from testLong
  [17] phi()
  [18] call print_dword 
  to:testLong::@2
testLong::@2: scope:[testLong]  from testLong::@1
  [19] phi()
  [20] call print_char 
  to:testLong::@3
testLong::@3: scope:[testLong]  from testLong::@2
  [21] phi()
  [22] call print_sdword 
  to:testLong::@4
testLong::@4: scope:[testLong]  from testLong::@3
  [23] phi()
  [24] call print_char 
  to:testLong::@5
testLong::@5: scope:[testLong]  from testLong::@4
  [25] phi()
  [26] call print_sdword 
  to:testLong::@6
testLong::@6: scope:[testLong]  from testLong::@5
  [27] phi()
  [28] call print_ln 
  to:testLong::@return
testLong::@return: scope:[testLong]  from testLong::@6
  [29] return 
  to:@return
print_ln: scope:[print_ln]  from testChar::@6 testInt::@6 testLong::@6 testShort::@6
  [30] (byte*) print_line_cursor#39 ← phi( testChar::@6/(byte*) 1024 testInt::@6/(byte*) print_line_cursor#1 testLong::@6/(byte*) print_line_cursor#1 testShort::@6/(byte*) print_line_cursor#1 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [31] (byte*) print_line_cursor#20 ← phi( print_ln/(byte*) print_line_cursor#39 print_ln::@1/(byte*) print_line_cursor#1 )
  [32] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#20 + (byte) $28
  [33] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#24) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [34] return 
  to:@return
print_sdword: scope:[print_sdword]  from testLong::@3 testLong::@5
  [35] (signed dword) print_sdword::dw#3 ← phi( testLong::@3/(const signed dword) testLong::n#0 testLong::@5/(const signed dword) testLong::s#0 )
  [36] if((signed dword) print_sdword::dw#3>=(signed byte) 0) goto print_sdword::@1
  to:print_sdword::@2
print_sdword::@2: scope:[print_sdword]  from print_sdword
  [37] phi()
  [38] call print_char 
  to:print_sdword::@3
print_sdword::@3: scope:[print_sdword]  from print_sdword::@2
  [39] (signed dword) print_sdword::dw#0 ← - (signed dword) print_sdword::dw#3
  to:print_sdword::@1
print_sdword::@1: scope:[print_sdword]  from print_sdword print_sdword::@3
  [40] (signed dword) print_sdword::dw#4 ← phi( print_sdword/(signed dword) print_sdword::dw#3 print_sdword::@3/(signed dword) print_sdword::dw#0 )
  [41] (dword) print_dword::dw#0 ← (dword)(signed dword) print_sdword::dw#4
  [42] call print_dword 
  to:print_sdword::@return
print_sdword::@return: scope:[print_sdword]  from print_sdword::@1
  [43] return 
  to:@return
print_dword: scope:[print_dword]  from print_sdword::@1 testLong::@1
  [44] (byte*) print_char_cursor#140 ← phi( print_sdword::@1/(byte*) print_char_cursor#24 testLong::@1/(byte*) print_char_cursor#132 )
  [44] (dword) print_dword::dw#2 ← phi( print_sdword::@1/(dword) print_dword::dw#0 testLong::@1/(const dword) testLong::u#0 )
  [45] (word) print_word::w#1 ← > (dword) print_dword::dw#2
  [46] call print_word 
  to:print_dword::@1
print_dword::@1: scope:[print_dword]  from print_dword
  [47] (word) print_word::w#2 ← < (dword) print_dword::dw#2
  [48] call print_word 
  to:print_dword::@return
print_dword::@return: scope:[print_dword]  from print_dword::@1
  [49] return 
  to:@return
print_word: scope:[print_word]  from print_dword print_dword::@1 print_sword::@1 testInt::@1 testShort::@1
  [50] (byte*) print_char_cursor#139 ← phi( print_dword/(byte*) print_char_cursor#140 print_dword::@1/(byte*) print_char_cursor#24 print_sword::@1/(byte*) print_char_cursor#24 testInt::@1/(byte*) print_char_cursor#132 testShort::@1/(byte*) print_char_cursor#132 )
  [50] (word) print_word::w#5 ← phi( print_dword/(word) print_word::w#1 print_dword::@1/(word) print_word::w#2 print_sword::@1/(word~) print_word::w#9 testInt::@1/(const word) testInt::u#0 testShort::@1/(const word) testShort::u#0 )
  [51] (byte) print_byte::b#1 ← > (word) print_word::w#5
  [52] call print_byte 
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [53] (byte) print_byte::b#2 ← < (word) print_word::w#5
  [54] call print_byte 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [55] return 
  to:@return
print_byte: scope:[print_byte]  from print_sbyte::@2 print_word print_word::@1 testChar::@1
  [56] (byte*) print_char_cursor#143 ← phi( print_sbyte::@2/(byte*) print_char_cursor#24 print_word/(byte*) print_char_cursor#139 print_word::@1/(byte*) print_char_cursor#24 testChar::@1/(byte*) print_char_cursor#132 )
  [56] (byte) print_byte::b#4 ← phi( print_sbyte::@2/(byte~) print_byte::b#6 print_word/(byte) print_byte::b#1 print_word::@1/(byte) print_byte::b#2 testChar::@1/(const byte) testChar::u#0 )
  [57] (byte~) print_byte::$0 ← (byte) print_byte::b#4 >> (byte) 4
  [58] (byte) print_char::ch#4 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$0)
  [59] call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [60] (byte~) print_byte::$2 ← (byte) print_byte::b#4 & (byte) $f
  [61] (byte) print_char::ch#5 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$2)
  [62] call print_char 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [63] return 
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 print_sbyte::@1 print_sbyte::@3 print_sdword::@2 print_sword::@2 testChar::@2 testChar::@4 testInt::@2 testInt::@4 testLong::@2 testLong::@4 testShort::@2 testShort::@4
  [64] (byte*) print_char_cursor#90 ← phi( print_byte/(byte*) print_char_cursor#143 print_byte::@1/(byte*) print_char_cursor#24 print_sbyte::@1/(byte*) print_char_cursor#24 print_sbyte::@3/(byte*) print_char_cursor#24 print_sdword::@2/(byte*) print_char_cursor#24 print_sword::@2/(byte*) print_char_cursor#24 testChar::@2/(byte*) print_char_cursor#24 testChar::@4/(byte*) print_char_cursor#24 testInt::@2/(byte*) print_char_cursor#24 testInt::@4/(byte*) print_char_cursor#24 testLong::@2/(byte*) print_char_cursor#24 testLong::@4/(byte*) print_char_cursor#24 testShort::@2/(byte*) print_char_cursor#24 testShort::@4/(byte*) print_char_cursor#24 )
  [64] (byte) print_char::ch#14 ← phi( print_byte/(byte) print_char::ch#4 print_byte::@1/(byte) print_char::ch#5 print_sbyte::@1/(byte) '-' print_sbyte::@3/(byte) ' ' print_sdword::@2/(byte) '-' print_sword::@2/(byte) '-' testChar::@2/(byte) ' ' testChar::@4/(byte) ' ' testInt::@2/(byte) ' ' testInt::@4/(byte) ' ' testLong::@2/(byte) ' ' testLong::@4/(byte) ' ' testShort::@2/(byte) ' ' testShort::@4/(byte) ' ' )
  [65] *((byte*) print_char_cursor#90) ← (byte) print_char::ch#14
  [66] (byte*) print_char_cursor#24 ← ++ (byte*) print_char_cursor#90
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [67] return 
  to:@return
print_str: scope:[print_str]  from testChar testInt testLong testShort
  [68] (byte*) print_char_cursor#150 ← phi( testChar/(byte*) 1024 testInt/(byte*~) print_char_cursor#155 testLong/(byte*~) print_char_cursor#156 testShort/(byte*~) print_char_cursor#157 )
  [68] (byte*) print_str::str#7 ← phi( testChar/(const string) testChar::str testInt/(const string) testInt::str testLong/(const string) testLong::str testShort/(const string) testShort::str )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [69] (byte*) print_char_cursor#132 ← phi( print_str/(byte*) print_char_cursor#150 print_str::@2/(byte*) print_char_cursor#1 )
  [69] (byte*) print_str::str#5 ← phi( print_str/(byte*) print_str::str#7 print_str::@2/(byte*) print_str::str#0 )
  [70] if(*((byte*) print_str::str#5)!=(byte) '@') goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [71] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [72] *((byte*) print_char_cursor#132) ← *((byte*) print_str::str#5)
  [73] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#132
  [74] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#5
  to:print_str::@1
testInt: scope:[testInt]  from main::@3
  [75] (byte*~) print_char_cursor#155 ← (byte*) print_line_cursor#1
  [76] call print_str 
  to:testInt::@1
testInt::@1: scope:[testInt]  from testInt
  [77] phi()
  [78] call print_word 
  to:testInt::@2
testInt::@2: scope:[testInt]  from testInt::@1
  [79] phi()
  [80] call print_char 
  to:testInt::@3
testInt::@3: scope:[testInt]  from testInt::@2
  [81] phi()
  [82] call print_sword 
  to:testInt::@4
testInt::@4: scope:[testInt]  from testInt::@3
  [83] phi()
  [84] call print_char 
  to:testInt::@5
testInt::@5: scope:[testInt]  from testInt::@4
  [85] phi()
  [86] call print_sword 
  to:testInt::@6
testInt::@6: scope:[testInt]  from testInt::@5
  [87] phi()
  [88] call print_ln 
  to:testInt::@return
testInt::@return: scope:[testInt]  from testInt::@6
  [89] return 
  to:@return
print_sword: scope:[print_sword]  from testInt::@3 testInt::@5 testShort::@3 testShort::@5
  [90] (signed word) print_sword::w#5 ← phi( testInt::@3/(const signed word) testInt::n#0 testInt::@5/(const signed word) testInt::s#0 testShort::@3/(const signed word) testShort::n#0 testShort::@5/(const signed word) testShort::s#0 )
  [91] if((signed word) print_sword::w#5>=(signed byte) 0) goto print_sword::@1
  to:print_sword::@2
print_sword::@2: scope:[print_sword]  from print_sword
  [92] phi()
  [93] call print_char 
  to:print_sword::@3
print_sword::@3: scope:[print_sword]  from print_sword::@2
  [94] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#5
  to:print_sword::@1
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@3
  [95] (signed word) print_sword::w#6 ← phi( print_sword/(signed word) print_sword::w#5 print_sword::@3/(signed word) print_sword::w#0 )
  [96] (word~) print_word::w#9 ← (word)(signed word) print_sword::w#6
  [97] call print_word 
  to:print_sword::@return
print_sword::@return: scope:[print_sword]  from print_sword::@1
  [98] return 
  to:@return
testShort: scope:[testShort]  from main::@2
  [99] (byte*~) print_char_cursor#157 ← (byte*) print_line_cursor#1
  [100] call print_str 
  to:testShort::@1
testShort::@1: scope:[testShort]  from testShort
  [101] phi()
  [102] call print_word 
  to:testShort::@2
testShort::@2: scope:[testShort]  from testShort::@1
  [103] phi()
  [104] call print_char 
  to:testShort::@3
testShort::@3: scope:[testShort]  from testShort::@2
  [105] phi()
  [106] call print_sword 
  to:testShort::@4
testShort::@4: scope:[testShort]  from testShort::@3
  [107] phi()
  [108] call print_char 
  to:testShort::@5
testShort::@5: scope:[testShort]  from testShort::@4
  [109] phi()
  [110] call print_sword 
  to:testShort::@6
testShort::@6: scope:[testShort]  from testShort::@5
  [111] phi()
  [112] call print_ln 
  to:testShort::@return
testShort::@return: scope:[testShort]  from testShort::@6
  [113] return 
  to:@return
testChar: scope:[testChar]  from main::@1
  [114] phi()
  [115] call print_str 
  to:testChar::@1
testChar::@1: scope:[testChar]  from testChar
  [116] phi()
  [117] call print_byte 
  to:testChar::@2
testChar::@2: scope:[testChar]  from testChar::@1
  [118] phi()
  [119] call print_char 
  to:testChar::@3
testChar::@3: scope:[testChar]  from testChar::@2
  [120] phi()
  [121] call print_sbyte 
  to:testChar::@4
testChar::@4: scope:[testChar]  from testChar::@3
  [122] phi()
  [123] call print_char 
  to:testChar::@5
testChar::@5: scope:[testChar]  from testChar::@4
  [124] phi()
  [125] call print_sbyte 
  to:testChar::@6
testChar::@6: scope:[testChar]  from testChar::@5
  [126] phi()
  [127] call print_ln 
  to:testChar::@return
testChar::@return: scope:[testChar]  from testChar::@6
  [128] return 
  to:@return
print_sbyte: scope:[print_sbyte]  from testChar::@3 testChar::@5
  [129] (signed byte) print_sbyte::b#3 ← phi( testChar::@3/(const signed byte) testChar::n#0 testChar::@5/(const signed byte) testChar::s#0 )
  [130] if((signed byte) print_sbyte::b#3<(signed byte) 0) goto print_sbyte::@1
  to:print_sbyte::@3
print_sbyte::@3: scope:[print_sbyte]  from print_sbyte
  [131] phi()
  [132] call print_char 
  to:print_sbyte::@2
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte::@3 print_sbyte::@4
  [133] (signed byte) print_sbyte::b#5 ← phi( print_sbyte::@4/(signed byte) print_sbyte::b#0 print_sbyte::@3/(signed byte) print_sbyte::b#3 )
  [134] (byte~) print_byte::b#6 ← (byte)(signed byte) print_sbyte::b#5
  [135] call print_byte 
  to:print_sbyte::@return
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@2
  [136] return 
  to:@return
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte
  [137] phi()
  [138] call print_char 
  to:print_sbyte::@4
print_sbyte::@4: scope:[print_sbyte]  from print_sbyte::@1
  [139] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3
  to:print_sbyte::@2
print_cls: scope:[print_cls]  from main
  [140] phi()
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [141] (byte*) print_cls::sc#2 ← phi( print_cls/(byte*) 1024 print_cls::@1/(byte*) print_cls::sc#1 )
  [142] *((byte*) print_cls::sc#2) ← (byte) ' '
  [143] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2
  [144] if((byte*) print_cls::sc#1!=(byte*) 1024+(word) $3e8) goto print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [145] return 
  to:@return
