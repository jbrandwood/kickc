(label) @1
(label) @2
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = ((byte*))(word/dword/signed dword) $d021
(byte*) BGCOL1
(byte*) BGCOL2
(byte*) BGCOL3
(byte*) BGCOL4
(byte) BLACK
(const byte) BLACK#0 BLACK = (byte/signed byte/word/signed word/dword/signed dword) 0
(byte) BLUE
(const byte) BLUE#0 BLUE = (byte/signed byte/word/signed word/dword/signed dword) 6
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word/dword/signed dword) $d020
(byte) BROWN
(byte*) CHARGEN
(byte*) CHARSET
(const byte*) CHARSET#0 CHARSET = ((byte*))(word/signed word/dword/signed dword) $2000
(byte*) CIA1_INTERRUPT
(byte*) CIA1_PORT_A
(byte*) CIA1_PORT_A_DDR
(byte*) CIA1_PORT_B
(byte*) CIA1_PORT_B_DDR
(byte*) CIA2_INTERRUPT
(byte*) CIA2_PORT_A
(byte*) CIA2_PORT_A_DDR
(byte*) CIA2_PORT_B
(byte*) CIA2_PORT_B_DDR
(byte) CIA_INTERRUPT_CLEAR
(byte*) COLS
(const byte*) COLS#0 COLS = ((byte*))(word/dword/signed dword) $d800
(byte) CYAN
(byte*) D011
(byte*) D016
(byte*) D018
(const byte*) D018#0 D018 = ((byte*))(word/dword/signed dword) $d018
(byte) DARK_GREY
(byte) GREEN
(byte) GREY
(void()**) HARDWARE_IRQ
(byte) IRQ_COLLISION_BG
(byte) IRQ_COLLISION_SPRITE
(byte*) IRQ_ENABLE
(byte) IRQ_LIGHTPEN
(byte) IRQ_RASTER
(byte*) IRQ_STATUS
(void()**) KERNEL_IRQ
(byte*) LIGHTPEN_X
(byte*) LIGHTPEN_Y
(byte) LIGHT_BLUE
(byte) LIGHT_GREEN
(byte) LIGHT_GREY
(byte) ORANGE
(byte) PINK
(byte*) PROCPORT
(byte) PROCPORT_BASIC_KERNEL_IO
(byte*) PROCPORT_DDR
(byte) PROCPORT_DDR_MEMORY_MASK
(byte) PROCPORT_KERNEL_IO
(byte) PROCPORT_RAM_ALL
(byte) PROCPORT_RAM_CHARROM
(byte) PROCPORT_RAM_IO
(byte) PURPLE
(byte*) RASTER
(byte) RED
(byte*) SCREEN1
(const byte*) SCREEN1#0 SCREEN1 = ((byte*))(word/signed word/dword/signed dword) $2800
(byte) SID_CONTROL_GATE
(byte) SID_CONTROL_NOISE
(const byte) SID_CONTROL_NOISE#0 SID_CONTROL_NOISE = (byte/word/signed word/dword/signed dword) $80
(byte) SID_CONTROL_PULSE
(byte) SID_CONTROL_RING
(byte) SID_CONTROL_SAWTOOTH
(byte) SID_CONTROL_SYNC
(byte) SID_CONTROL_TEST
(byte) SID_CONTROL_TRIANGLE
(byte*) SID_VOICE3_CONTROL
(const byte*) SID_VOICE3_CONTROL#0 SID_VOICE3_CONTROL = ((byte*))(word/dword/signed dword) $d412
(word*) SID_VOICE3_FREQ
(const word*) SID_VOICE3_FREQ#0 SID_VOICE3_FREQ = ((word*))(word/dword/signed dword) $d40e
(byte*) SID_VOICE3_FREQ_HIGH
(byte*) SID_VOICE3_FREQ_LOW
(byte*) SID_VOICE3_OSC
(const byte*) SID_VOICE3_OSC#0 SID_VOICE3_OSC = ((byte*))(word/dword/signed dword) $d41b
(byte*) SINTABLE
(const byte*) SINTABLE#0 SINTABLE = ((byte*))(word/signed word/dword/signed dword) $1f00
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_MC
(byte*) SPRITES_MC1
(byte*) SPRITES_MC2
(byte*) SPRITES_PRIORITY
(byte*) SPRITES_XMSB
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(word) SPRITE_PTRS
(byte) VIC_BMM
(byte*) VIC_CONTROL
(byte*) VIC_CONTROL2
(byte) VIC_CSEL
(byte) VIC_DEN
(byte) VIC_ECM
(byte) VIC_MCM
(byte*) VIC_MEMORY
(byte) VIC_RSEL
(byte) VIC_RST8
(byte) WHITE
(byte) YELLOW
(byte) c1A
(byte) c1A#1 c1A zp ZP_BYTE:4 1.0714285714285714
(byte) c1A#3 c1A zp ZP_BYTE:4 0.1911764705882353
(byte) c1B
(byte) c1B#1 c1B zp ZP_BYTE:5 0.9999999999999999
(byte) c1B#3 c1B zp ZP_BYTE:5 0.19402985074626866
(byte) c2A
(byte) c2A#1 c2A zp ZP_BYTE:6 0.6
(byte) c2A#3 c2A zp ZP_BYTE:6 0.22807017543859648
(byte) c2B
(byte) c2B#1 c2B zp ZP_BYTE:7 0.5769230769230769
(byte) c2B#3 c2B zp ZP_BYTE:7 0.23214285714285715
(void()) doplasma((byte*) doplasma::screen)
(byte~) doplasma::$0 reg byte a 4.0
(byte~) doplasma::$1 reg byte a 202.0
(byte~) doplasma::$3 reg byte a 202.0
(byte~) doplasma::$5 reg byte a 202.0
(label) doplasma::@1
(label) doplasma::@2
(label) doplasma::@3
(label) doplasma::@4
(label) doplasma::@5
(label) doplasma::@6
(label) doplasma::@6_1
(label) doplasma::@6_10
(label) doplasma::@6_11
(label) doplasma::@6_12
(label) doplasma::@6_13
(label) doplasma::@6_14
(label) doplasma::@6_15
(label) doplasma::@6_16
(label) doplasma::@6_17
(label) doplasma::@6_18
(label) doplasma::@6_19
(label) doplasma::@6_2
(label) doplasma::@6_20
(label) doplasma::@6_21
(label) doplasma::@6_22
(label) doplasma::@6_23
(label) doplasma::@6_3
(label) doplasma::@6_4
(label) doplasma::@6_5
(label) doplasma::@6_6
(label) doplasma::@6_7
(label) doplasma::@6_8
(label) doplasma::@6_9
(label) doplasma::@7
(label) doplasma::@return
(byte) doplasma::c1a
(byte) doplasma::c1a#0 c1a zp ZP_BYTE:8 1.5
(byte) doplasma::c1a#1 c1a zp ZP_BYTE:8 43.285714285714285
(byte) doplasma::c1a#2 c1a zp ZP_BYTE:8 204.0
(byte) doplasma::c1b
(byte) doplasma::c1b#0 c1b zp ZP_BYTE:9 2.0
(byte) doplasma::c1b#1 c1b zp ZP_BYTE:9 50.5
(byte) doplasma::c1b#2 c1b zp ZP_BYTE:9 102.0
(byte) doplasma::c2a
(byte) doplasma::c2a#0 c2a zp ZP_BYTE:8 2.0
(byte) doplasma::c2a#1 c2a zp ZP_BYTE:8 50.5
(byte) doplasma::c2a#2 c2a zp ZP_BYTE:8 101.66666666666666
(byte) doplasma::c2b
(byte) doplasma::c2b#0 c2b zp ZP_BYTE:9 4.0
(byte) doplasma::c2b#1 c2b zp ZP_BYTE:9 67.33333333333333
(byte) doplasma::c2b#2 c2b zp ZP_BYTE:9 76.25
(byte) doplasma::i
(byte) doplasma::i#1 i zp ZP_BYTE:10 151.5
(byte) doplasma::i#2 i zp ZP_BYTE:10 67.33333333333333
(byte) doplasma::i1
(byte) doplasma::i1#1 i1 zp ZP_BYTE:10 151.5
(byte) doplasma::i1#2 i1 zp ZP_BYTE:10 60.599999999999994
(byte) doplasma::i2
(byte) doplasma::i2#1 reg byte x 151.5
(byte) doplasma::i2#2 reg byte x 55.45098039215691
(byte) doplasma::ii
(byte*) doplasma::screen
(byte) doplasma::val
(byte) doplasma::val#0 reg byte a 151.5
(byte) doplasma::val#1 reg byte a 151.5
(byte) doplasma::val#10 reg byte a 151.5
(byte) doplasma::val#12 reg byte a 151.5
(byte) doplasma::val#14 reg byte a 151.5
(byte) doplasma::val#16 reg byte a 151.5
(byte) doplasma::val#18 reg byte a 151.5
(byte) doplasma::val#20 reg byte a 151.5
(byte) doplasma::val#22 reg byte a 151.5
(byte) doplasma::val#24 reg byte a 151.5
(byte) doplasma::val#26 reg byte a 151.5
(byte) doplasma::val#28 reg byte a 151.5
(byte) doplasma::val#30 reg byte a 151.5
(byte) doplasma::val#32 reg byte a 151.5
(byte) doplasma::val#34 reg byte a 151.5
(byte) doplasma::val#36 reg byte a 151.5
(byte) doplasma::val#38 reg byte a 151.5
(byte) doplasma::val#4 reg byte a 151.5
(byte) doplasma::val#40 reg byte a 151.5
(byte) doplasma::val#42 reg byte a 151.5
(byte) doplasma::val#44 reg byte a 151.5
(byte) doplasma::val#46 reg byte a 151.5
(byte) doplasma::val#48 reg byte a 202.0
(byte) doplasma::val#6 reg byte a 151.5
(byte) doplasma::val#8 reg byte a 151.5
(byte[$28]) doplasma::xbuf
(const byte[$28]) doplasma::xbuf#0 xbuf = { fill( $28, 0) }
(byte[$19]) doplasma::ybuf
(const byte[$19]) doplasma::ybuf#0 ybuf = { fill( $19, 0) }
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(byte*) main::col
(byte*) main::col#1 col zp ZP_WORD:2 16.5
(byte*) main::col#2 col zp ZP_WORD:2 16.5
(label) main::toD0181
(word~) main::toD0181_$0
(word~) main::toD0181_$1
(word/signed dword/dword~) main::toD0181_$2
(byte/word~) main::toD0181_$3
(word~) main::toD0181_$4
(byte~) main::toD0181_$5
(byte/signed word/word/dword/signed dword~) main::toD0181_$6
(byte/word/dword~) main::toD0181_$7
(byte/word/dword~) main::toD0181_$8
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >((word))(const byte*) SCREEN1#0&(word/signed word/dword/signed dword) $3fff*(byte/signed byte/word/signed word/dword/signed dword) 4|>((word))(const byte*) CHARSET#0/(byte/signed byte/word/signed word/dword/signed dword) 4&(byte/signed byte/word/signed word/dword/signed dword) $f
(byte*) main::toD0181_screen
(void()) makecharset((byte*) makecharset::charset)
(byte/word~) makecharset::$11 reg byte a 22.0
(byte~) makecharset::$2 reg byte a 22.0
(byte~) makecharset::$3 reg byte a 2002.0
(byte~) makecharset::$4 $4 zp ZP_BYTE:6 2002.0
(word~) makecharset::$8 $8 zp ZP_WORD:13 202.0
(word~) makecharset::$9 $9 zp ZP_WORD:13 202.0
(label) makecharset::@1
(label) makecharset::@10
(label) makecharset::@11
(label) makecharset::@2
(label) makecharset::@3
(label) makecharset::@4
(label) makecharset::@5
(label) makecharset::@6
(label) makecharset::@7
(label) makecharset::@8
(label) makecharset::@9
(label) makecharset::@return
(byte) makecharset::b
(byte) makecharset::b#1 reg byte y 2002.0
(byte) makecharset::b#2 reg byte y 500.5
(byte) makecharset::b#3 reg byte y 620.8
(byte[8]) makecharset::bittab
(const byte[8]) makecharset::bittab#0 bittab = { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) $10, (byte/signed byte/word/signed word/dword/signed dword) $20, (byte/signed byte/word/signed word/dword/signed dword) $40, (byte/word/signed word/dword/signed dword) $80 }
(word) makecharset::c
(word) makecharset::c#1 c zp ZP_WORD:2 16.5
(word) makecharset::c#2 c zp ZP_WORD:2 6.041666666666666
(byte*) makecharset::charset
(byte) makecharset::i
(byte) makecharset::i#1 i zp ZP_BYTE:4 151.5
(byte) makecharset::i#7 i zp ZP_BYTE:4 21.642857142857142
(byte) makecharset::ii
(byte) makecharset::ii#1 reg byte x 1501.5
(byte) makecharset::ii#2 reg byte x 375.375
(byte) makecharset::s
(byte) makecharset::s#0 s zp ZP_BYTE:5 59.529411764705884
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(const byte) print_char::ch#0 ch = (byte) '.'
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp ZP_WORD:11 4.333333333333333
(byte*) print_char_cursor#18 print_char_cursor zp ZP_WORD:11 11.0
(byte*) print_char_cursor#45 print_char_cursor zp ZP_WORD:11 1.1304347826086956
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:2 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:2 16.5
(byte[]) print_hextab
(byte*) print_line_cursor
(const byte*) print_line_cursor#0 print_line_cursor = ((byte*))(word/signed word/dword/signed dword) $400
(byte*) print_screen
(byte()) sid_rnd()
(label) sid_rnd::@return
(byte) sid_rnd::return
(byte) sid_rnd::return#0 reg byte a 334.33333333333337
(byte) sid_rnd::return#2 reg byte a 2002.0
(void()) sid_rnd_init()
(label) sid_rnd_init::@return

zp ZP_WORD:2 [ main::col#2 main::col#1 makecharset::c#2 makecharset::c#1 print_cls::sc#2 print_cls::sc#1 ]
zp ZP_BYTE:4 [ c1A#1 c1A#3 makecharset::i#7 makecharset::i#1 ]
zp ZP_BYTE:5 [ c1B#1 c1B#3 makecharset::s#0 ]
zp ZP_BYTE:6 [ c2A#1 c2A#3 makecharset::$4 ]
zp ZP_BYTE:7 [ c2B#1 c2B#3 ]
zp ZP_BYTE:8 [ doplasma::c1a#2 doplasma::c1a#0 doplasma::c1a#1 doplasma::c2a#2 doplasma::c2a#0 doplasma::c2a#1 ]
zp ZP_BYTE:9 [ doplasma::c1b#2 doplasma::c1b#0 doplasma::c1b#1 doplasma::c2b#2 doplasma::c2b#0 doplasma::c2b#1 ]
zp ZP_BYTE:10 [ doplasma::i#2 doplasma::i#1 doplasma::i1#2 doplasma::i1#1 ]
reg byte x [ doplasma::i2#2 doplasma::i2#1 ]
zp ZP_WORD:11 [ print_char_cursor#45 print_char_cursor#18 print_char_cursor#1 ]
reg byte x [ makecharset::ii#2 makecharset::ii#1 ]
reg byte y [ makecharset::b#2 makecharset::b#3 makecharset::b#1 ]
reg byte a [ doplasma::$0 ]
reg byte a [ doplasma::$1 ]
reg byte a [ doplasma::$3 ]
reg byte a [ doplasma::$5 ]
reg byte a [ doplasma::val#0 ]
reg byte a [ doplasma::val#1 ]
reg byte a [ doplasma::val#4 ]
reg byte a [ doplasma::val#6 ]
reg byte a [ doplasma::val#8 ]
reg byte a [ doplasma::val#10 ]
reg byte a [ doplasma::val#12 ]
reg byte a [ doplasma::val#14 ]
reg byte a [ doplasma::val#16 ]
reg byte a [ doplasma::val#18 ]
reg byte a [ doplasma::val#20 ]
reg byte a [ doplasma::val#22 ]
reg byte a [ doplasma::val#24 ]
reg byte a [ doplasma::val#26 ]
reg byte a [ doplasma::val#28 ]
reg byte a [ doplasma::val#30 ]
reg byte a [ doplasma::val#32 ]
reg byte a [ doplasma::val#34 ]
reg byte a [ doplasma::val#36 ]
reg byte a [ doplasma::val#38 ]
reg byte a [ doplasma::val#40 ]
reg byte a [ doplasma::val#42 ]
reg byte a [ doplasma::val#44 ]
reg byte a [ doplasma::val#46 ]
reg byte a [ doplasma::val#48 ]
reg byte a [ makecharset::$2 ]
reg byte a [ sid_rnd::return#2 ]
reg byte a [ makecharset::$3 ]
zp ZP_WORD:13 [ makecharset::$8 makecharset::$9 ]
reg byte a [ makecharset::$11 ]
reg byte a [ sid_rnd::return#0 ]
