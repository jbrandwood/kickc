
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [1] (word) main::i#2 ← phi( main/(word) 0 main::@2/(word) main::i#1 )
  [2] if((word) main::i#2<(byte) $19) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [3] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [4] (word~) main::$10 ← (word) main::i#2 << (byte) 1
  [5] (word~) main::$2 ← (word~) main::$10 + (word) main::i#2
  [6] (byte*~) main::$4 ← (byte*)(const struct Ball*) balls + (word~) main::$2
  [7] (byte*~) main::$5 ← (byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_VEL + (word~) main::$2
  [8] (byte*~) main::$6 ← (byte*)(const struct Ball*) balls + (word~) main::$2
  [9] *((byte*~) main::$6) ← *((byte*~) main::$4) + *((byte*~) main::$5)
  [10] (byte*~) main::$7 ← (byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_VEL + (word~) main::$2
  [11] (byte*~) main::$8 ← (byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_VEL + (word~) main::$2
  [12] *((byte*~) main::$8) ← *((byte*~) main::$7) + (byte) $a
  [13] (byte*~) main::$9 ← (byte*)(const struct Ball*) balls+(const byte) OFFSET_STRUCT_BALL_SYM + (word~) main::$2
  [14] *((byte*~) main::$9) ← (byte) '*'
  [15] (word) main::i#1 ← ++ (word) main::i#2
  to:main::@1
