
(signed word()) main()
main: scope:[main]  from
  [0] *((const byte*) lcSprMapTab) ← (const byte) sprOff
  [1] *((const byte*) lcSprMapTab+(byte) 1) ← (const byte) sprOff+(byte) 1
  [2] *((const byte*) lcSprMapTab+(byte) 2) ← (const byte) sprOff+(byte) 2
  [3] *((const byte*) lcSprMapTab+(byte) 3) ← (const byte) sprOff+(byte) 3
  [4] *((const byte*) lcSprMapTab+(byte) 4) ← (const byte) sprOff+(byte) 4
  [5] *((const byte*) lcSprMapTab+(byte) 5) ← (const byte) sprOff+(byte) 5
  [6] *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 1) ← (byte) $a|(const byte) lfMC
  [7] *((const byte*) lcSprColTab+(const byte) sprOff) ← *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 1)
  [8] *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 3) ← (byte) 5|(const byte) lfMC
  [9] *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 2) ← *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 3)
  [10] *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 5) ← (byte) $e|(const byte) lfMC
  [11] *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 4) ← *((const byte*) lcSprColTab+(const byte) sprOff+(byte) 5)
  to:main::@2
main::@2: scope:[main]  from main main::@3
  [12] (byte) main::i#12 ← phi( main/(byte) 0 main::@3/(byte) main::i#2 )
  [13] if((byte) main::i#12<(const byte) maxSprites+(byte) 1) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@2 main::@5
  [14] (byte) main::i#14 ← phi( main::@2/(byte) 0 main::@5/(byte) main::i#4 )
  [15] if((byte) main::i#14<(const byte) maxSprites) goto main::@5
  to:main::@6
main::@6: scope:[main]  from main::@4 main::@7
  [16] (word) main::c#10 ← phi( main::@7/(word) main::c#2 main::@4/(byte) 0 )
  [17] if((word) main::c#10<(word) $3e8) goto main::@7
  to:main::@39
main::@39: scope:[main]  from main::@6
  [18] *((byte*) 1) ← (byte) $33
  to:main::@8
main::@8: scope:[main]  from main::@39 main::@9
  [19] (word) main::c#11 ← phi( main::@9/(word) main::c#4 main::@39/(byte) 0 )
  [20] if((word) main::c#11<(word) $7f8) goto main::@9
  to:main::@10
main::@10: scope:[main]  from main::@8
  [21] *((byte*) 1) ← (byte) $35
  [22] *((byte*) 53248+(word) $d02) ← *((byte*) 53248+(word) $d02) | (byte) 3
  [23] *((byte*) 53248+(word) $d00) ← *((byte*) 53248+(word) $d00) & ~(byte) 3
  to:main::@11
main::@11: scope:[main]  from main::@10
  [24] *((byte*) 57344+(word) $3e5) ← (byte) 'P'-(byte) 'A'+(byte) 1
  [25] *((byte*) 57344+(word) $3e6) ← (byte) 1
  [26] *((byte*) 57344+(word) $3e7) ← (byte) 'L'-(byte) 'A'+(byte) 1
  to:main::@1
main::@1: scope:[main]  from main::@11
  [27] *((byte*) 57344+(word) $3cf) ← (byte) 'B'-(byte) 'A'+(byte) 1
  [28] *((byte*) 57344+(word)(number) $3cf+(number) 1) ← (byte) 'U'-(byte) 'A'+(byte) 1
  [29] *((byte*) 57344+(word)(number) $3cf+(number) 2) ← (byte) 'B'-(byte) 'A'+(byte) 1
  [30] *((byte*) 57344+(word)(number) $3cf+(number) 3) ← (byte) 'B'-(byte) 'A'+(byte) 1
  [31] *((byte*) 57344+(word)(number) $3cf+(number) 4) ← (byte) 'L'-(byte) 'A'+(byte) 1
  [32] *((byte*) 57344+(word)(number) $3cf+(number) 5) ← (byte) 'E'-(byte) 'A'+(byte) 1
  [33] *((byte*) 57344+(word)(number) $3cf+(number) 6) ← (byte) 'S'-(byte) 'A'+(byte) 1
  [34] *((byte*) 57344+(word)(number) $3cf+(number) 7) ← (byte) ':'
  to:main::@12
main::@12: scope:[main]  from main::@1 main::@15
  [35] (byte) main::type#4 ← phi( main::@1/(byte) 0 main::@15/(byte) main::type#10 )
  [35] (byte) main::i#17 ← phi( main::@1/(byte) 0 main::@15/(byte) main::i#7 )
  [36] if((byte) main::i#17<(const byte) maxDrawObjects) goto main::@13
  to:main::@16
main::@16: scope:[main]  from main::@12 main::@35
  [37] (word) main::oCount#17 ← phi( main::@12/(word) 0 main::@35/(word) main::oCount#20 )
  [37] (byte) main::stopIt#5 ← phi( main::@12/(byte) 0 main::@35/(byte) main::stopIt#15 )
  [37] (word) main::c#16 ← phi( main::@12/(byte) 0 main::@35/(word) main::c#18 )
  [37] (byte) main::objects#9 ← phi( main::@12/(byte) 0 main::@35/(byte) main::objects#17 )
  to:main::@17
main::@17: scope:[main]  from main::@16 main::@24
  [38] (struct $5*) main::d#10 ← phi( main::@16/(const struct $5*) dTab main::@24/(struct $5*) main::d#2 )
  [38] (byte) main::i#22 ← phi( main::@16/(byte) 0 main::@24/(byte) main::i#9 )
  [39] if((byte) main::i#22<(byte) main::objects#9) goto main::@18
  to:main::@19
main::@19: scope:[main]  from main::@17
  [40] (word) main::c#7 ← (word) main::c#16 + (byte) 1
  [41] if((word) main::c#7<(byte) $e) goto main::@33
  to:main::@30
main::@30: scope:[main]  from main::@19
  [42] if((byte) 0!=(byte) main::stopIt#5) goto main::@33
  to:main::@42
main::@42: scope:[main]  from main::@30
  [43] if((byte) main::objects#9<(const byte) maxDrawObjects) goto main::@31
  to:main::@33
main::@33: scope:[main]  from main::@19 main::@30 main::@41 main::@42 main::@43
  [44] (word) main::c#18 ← phi( main::@19/(word) main::c#7 main::@30/(byte) 0 main::@41/(byte) 0 )
  [44] (byte) main::objects#12 ← phi( main::@19/(byte) main::objects#9 main::@30/(byte) main::objects#9 main::@41/(byte) main::objects#1 )
  to:main::@36
main::@36: scope:[main]  from main::@33
  [45] if((word) main::oCount#17<=(byte) 0) goto main::@34
  to:main::@37
main::@37: scope:[main]  from main::@36
  [46] (word) main::oCount#2 ← (word) main::oCount#17 - (byte) 1
  to:main::@34
main::@34: scope:[main]  from main::@36 main::@37
  [47] (word) main::oCount#7 ← phi( main::@36/(word) main::oCount#17 main::@37/(word) main::oCount#2 )
  [48] if((word) main::oCount#7<(byte) 2+(byte) 1) goto main::@35
  to:main::@44
main::@44: scope:[main]  from main::@34
  [49] if((byte) main::objects#12>(byte) 0) goto main::@38
  to:main::@35
main::@38: scope:[main]  from main::@44
  [50] (byte) main::objects#15 ← (byte) main::objects#12 - (byte) 1
  [51] (byte) DelSprite::sn#0 ← (byte) main::objects#15
  [52] call DelSprite 
  to:main::@35
main::@35: scope:[main]  from main::@34 main::@38 main::@44
  [53] (word) main::oCount#20 ← phi( main::@34/(word) main::oCount#7 main::@38/(byte) 0 )
  [53] (byte) main::stopIt#15 ← phi( main::@34/(byte) main::stopIt#5 main::@38/(byte) 1 )
  [53] (byte) main::objects#17 ← phi( main::@34/(byte) main::objects#12 main::@38/(byte) main::objects#15 )
  [54] (byte) Print00::v0#0 ← (byte) main::objects#17
  [55] call Print00 
  to:main::@16
main::@31: scope:[main]  from main::@42
  [56] (byte) main::objects#1 ← (byte) main::objects#9 + (byte) 1
  [57] call GetSprite 
  [58] (byte) GetSprite::return#4 ← (byte) GetSprite::return#2
  to:main::@40
main::@40: scope:[main]  from main::@31
  [59] (byte) main::i#11 ← (byte) GetSprite::return#4
  to:main::@43
main::@43: scope:[main]  from main::@40
  [60] if((byte) main::i#11<(byte) $80) goto main::@32
  to:main::@33
main::@32: scope:[main]  from main::@43
  [61] (byte) AddSprite::sn#1 ← (byte) main::i#11
  [62] call AddSprite 
  to:main::@41
main::@41: scope:[main]  from main::@32
  [63] *((const byte*) cmRY + (byte) main::i#11) ← (byte) 0
  [64] *((const byte*) cmRF + (byte) main::i#11) ← *((const byte*) cmRY + (byte) main::i#11)
  [65] *((const byte*) cmRX + (byte) main::i#11) ← *((const byte*) cmRF + (byte) main::i#11)
  [66] *((const byte*) cmSI + (byte) main::i#11) ← *((const byte*) cmRX + (byte) main::i#11)
  to:main::@33
main::@18: scope:[main]  from main::@17
  [67] *((signed byte*)(struct $5*) main::d#10 + (byte) 5) ← *((signed byte*)(struct $5*) main::d#10 + (byte) 5) + *((signed byte*)(struct $5*) main::d#10 + (byte) 7)
  [68] if(*((signed byte*)(struct $5*) main::d#10 + (byte) 5)<(signed byte) -$20) goto main::@20
  to:main::@25
main::@25: scope:[main]  from main::@18
  [69] if(*((signed byte*)(struct $5*) main::d#10 + (byte) 5)<(signed byte) $20+(signed byte) 1) goto main::@21
  to:main::@26
main::@26: scope:[main]  from main::@25
  [70] *((signed byte*)(struct $5*) main::d#10 + (byte) 7) ← (signed byte) -1
  to:main::@21
main::@21: scope:[main]  from main::@20 main::@25 main::@26
  [71] if(*((signed word*)(struct $5*) main::d#10 + (byte) 3)>(signed word)(byte) $f8<<(const byte) F) goto main::@22
  to:main::@27
main::@27: scope:[main]  from main::@21
  [72] if(*((signed word*)(struct $5*) main::d#10 + (byte) 3)>=(signed word)(byte) $18<<(const byte) F) goto main::@23
  to:main::@28
main::@28: scope:[main]  from main::@27
  [73] *((signed byte*)(struct $5*) main::d#10 + (byte) 6) ← (signed byte)(byte) 1<<(const byte) F
  to:main::@23
main::@23: scope:[main]  from main::@22 main::@27 main::@28
  [74] *((signed word*)(struct $5*) main::d#10 + (byte) 1) ← *((signed word*)(struct $5*) main::d#10 + (byte) 1) + *((signed byte*)(struct $5*) main::d#10 + (byte) 5)
  [75] *((signed word*)(struct $5*) main::d#10 + (byte) 3) ← *((signed word*)(struct $5*) main::d#10 + (byte) 3) + *((signed byte*)(struct $5*) main::d#10 + (byte) 6)
  [76] if(*((const byte*) cmRF + (byte) main::i#22)>=(byte) $80) goto main::@24
  to:main::@29
main::@29: scope:[main]  from main::@23
  [77] *((const byte*) cmSI + (byte) main::i#22) ← *((byte*)(struct $5*) main::d#10)
  [78] (signed word~) main::$27 ← *((signed word*)(struct $5*) main::d#10 + (byte) 1) >> (const byte) F
  [79] *((const byte*) cmRX + (byte) main::i#22) ← (byte)(signed word~) main::$27
  [80] (signed word~) main::$28 ← *((signed word*)(struct $5*) main::d#10 + (byte) 3) >> (const byte) F
  [81] *((const byte*) cmRY + (byte) main::i#22) ← (byte)(signed word~) main::$28
  to:main::@24
main::@24: scope:[main]  from main::@23 main::@29
  [82] (struct $5*) main::d#2 ← (struct $5*) main::d#10 + (byte) 9
  [83] (byte) main::i#9 ← (byte) main::i#22 + (byte) 1
  to:main::@17
main::@22: scope:[main]  from main::@21
  [84] *((signed byte*)(struct $5*) main::d#10 + (byte) 6) ← (signed byte)(byte) -1<<(const byte) F
  to:main::@23
main::@20: scope:[main]  from main::@18
  [85] *((signed byte*)(struct $5*) main::d#10 + (byte) 7) ← (signed byte) 1
  to:main::@21
main::@13: scope:[main]  from main::@12
  [86] (byte~) main::$132 ← (byte) main::i#17 << (byte) 3
  [87] (byte~) main::$52 ← (byte~) main::$132 + (byte) main::i#17
  [88] (struct $5*) main::d1#0 ← (const struct $5*) dTab + (byte~) main::$52
  [89] *((byte*)(struct $5*) main::d1#0) ← (byte) main::type#4
  [90] (byte) main::type#2 ← (byte) main::type#4 + (byte) 1
  [91] if((byte) main::type#2<(byte) 6) goto main::@45
  to:main::@14
main::@45: scope:[main]  from main::@13
  [92] phi()
  to:main::@14
main::@14: scope:[main]  from main::@13 main::@45
  [93] (byte) main::type#10 ← phi( main::@45/(byte) main::type#2 main::@13/(byte) 0 )
  [94] *((signed word*)(struct $5*) main::d1#0 + (byte) 1) ← (signed word)(byte) $70<<(const byte) F
  [95] *((signed byte*)(struct $5*) main::d1#0 + (byte) 5) ← (signed byte)(byte) main::i#17
  [96] *((signed byte*)(struct $5*) main::d1#0 + (byte) 7) ← (signed byte) 1
  [97] *((signed word*)(struct $5*) main::d1#0 + (byte) 3) ← (signed word)(byte) $18<<(const byte) F
  [98] *((signed byte*)(struct $5*) main::d1#0 + (byte) 6) ← (signed byte)(byte) 1<<(const byte) F
  [99] *((signed byte*)(struct $5*) main::d1#0 + (byte) 8) ← (signed byte) 1
  to:main::@15
main::@15: scope:[main]  from main::@14
  [100] (byte) main::i#7 ← (byte) main::i#17 + (byte) 1
  to:main::@12
main::@9: scope:[main]  from main::@8
  [101] (byte*~) main::$111 ← (byte*) 53248 + (word) main::c#11
  [102] (byte*~) main::$112 ← (byte*) 63488 + (word) main::c#11
  [103] *((byte*~) main::$112) ← *((byte*~) main::$111)
  [104] (word) main::c#4 ← (word) main::c#11 + (byte) 1
  to:main::@8
main::@7: scope:[main]  from main::@6
  [105] (byte*~) main::$109 ← (byte*) 57344 + (word) main::c#10
  [106] *((byte*~) main::$109) ← (byte) $20
  [107] (byte*~) main::$110 ← (byte*) 55296 + (word) main::c#10
  [108] *((byte*~) main::$110) ← (byte) $e
  [109] (word) main::c#2 ← (word) main::c#10 + (byte) 1
  to:main::@6
main::@5: scope:[main]  from main::@4
  [110] *((const byte*) cmRF + (byte) main::i#14) ← (byte) $ff
  [111] (byte) main::i#4 ← (byte) main::i#14 + (byte) 1
  to:main::@4
main::@3: scope:[main]  from main::@2
  [112] *((const byte*) cmIT + (byte) main::i#12) ← (byte) $ff
  [113] (byte) main::i#2 ← (byte) main::i#12 + (byte) 1
  to:main::@2

(void()) DelSprite((byte) DelSprite::sn)
DelSprite: scope:[DelSprite]  from main::@38
  [114] *((const byte*) cmRY + (byte) DelSprite::sn#0) ← (byte) $ff
  [115] *((const byte*) cmRF + (byte) DelSprite::sn#0) ← (const byte) rfDrop
  to:DelSprite::@return
DelSprite::@return: scope:[DelSprite]  from DelSprite
  [116] return 
  to:@return

(void()) Print00((byte*) Print00::p , (byte) Print00::v0)
Print00: scope:[Print00]  from main::@35
  [117] phi()
  to:Print00::@1
Print00::@1: scope:[Print00]  from Print00 Print00::@2
  [118] (byte) Print00::c#5 ← phi( Print00/(byte) '0' Print00::@2/(byte) Print00::c#2 )
  [118] (byte) Print00::v#3 ← phi( Print00/(byte) Print00::v0#0 Print00::@2/(byte) Print00::v#1 )
  [119] if((byte) Print00::v#3>=(byte) $a) goto Print00::@2
  to:Print00::@3
Print00::@3: scope:[Print00]  from Print00::@1
  [120] *((word) $e000+(byte*) 983) ← (byte) Print00::c#5
  to:Print00::@4
Print00::@4: scope:[Print00]  from Print00::@3 Print00::@5
  [121] (byte) Print00::c#10 ← phi( Print00::@3/(byte) '0' Print00::@5/(byte) Print00::c#4 )
  [121] (byte) Print00::v#5 ← phi( Print00::@3/(byte) Print00::v#3 Print00::@5/(byte) Print00::v#2 )
  [122] if((byte) Print00::v#5>=(byte) 1) goto Print00::@5
  to:Print00::@6
Print00::@6: scope:[Print00]  from Print00::@4
  [123] *((word) $e000+(byte*) 983+(byte) 1) ← (byte) Print00::c#10
  to:Print00::@return
Print00::@return: scope:[Print00]  from Print00::@6
  [124] return 
  to:@return
Print00::@5: scope:[Print00]  from Print00::@4
  [125] (byte) Print00::c#4 ← ++ (byte) Print00::c#10
  [126] (byte) Print00::v#2 ← (byte) Print00::v#5 - (byte) 1
  to:Print00::@4
Print00::@2: scope:[Print00]  from Print00::@1
  [127] (byte) Print00::c#2 ← ++ (byte) Print00::c#5
  [128] (byte) Print00::v#1 ← (byte) Print00::v#3 - (byte) $a
  to:Print00::@1

(byte()) GetSprite()
GetSprite: scope:[GetSprite]  from main::@31
  [129] phi()
  to:GetSprite::@1
GetSprite::@1: scope:[GetSprite]  from GetSprite GetSprite::@3
  [130] (byte) GetSprite::t0#3 ← phi( GetSprite/(byte) 0 GetSprite::@3/(byte) GetSprite::t0#2 )
  [131] if((byte) GetSprite::t0#3<(const byte) maxSprites) goto GetSprite::@2
  to:GetSprite::@return
GetSprite::@return: scope:[GetSprite]  from GetSprite::@1 GetSprite::@4
  [132] (byte) GetSprite::return#2 ← phi( GetSprite::@1/(byte) $ff GetSprite::@4/(byte) GetSprite::t0#3 )
  [133] return 
  to:@return
GetSprite::@2: scope:[GetSprite]  from GetSprite::@1
  [134] if(*((const byte*) cmRF + (byte) GetSprite::t0#3)<(const byte) rfDrop) goto GetSprite::@3
  to:GetSprite::@4
GetSprite::@4: scope:[GetSprite]  from GetSprite::@2
  [135] *((const byte*) cmRF + (byte) GetSprite::t0#3) ← (byte) 0
  to:GetSprite::@return
GetSprite::@3: scope:[GetSprite]  from GetSprite::@2
  [136] (byte) GetSprite::t0#2 ← ++ (byte) GetSprite::t0#3
  to:GetSprite::@1

(void()) AddSprite((byte) AddSprite::sn)
AddSprite: scope:[AddSprite]  from main::@32
  [137] if((const byte) rfDrop==*((const byte*) cmRF + (byte) AddSprite::sn#1)) goto AddSprite::@1
  to:AddSprite::@2
AddSprite::@2: scope:[AddSprite]  from AddSprite AddSprite::@4
  [138] (byte) AddSprite::t0#3 ← phi( AddSprite/(byte) 0 AddSprite::@4/(byte) AddSprite::t0#2 )
  [139] if((byte) AddSprite::t0#3<(const byte) maxSprites) goto AddSprite::@3
  to:AddSprite::@return
AddSprite::@return: scope:[AddSprite]  from AddSprite::@1 AddSprite::@2 AddSprite::@5
  [140] return 
  to:@return
AddSprite::@3: scope:[AddSprite]  from AddSprite::@2
  [141] if(*((const byte*) cmIT + (byte) AddSprite::t0#3)<(byte) $80) goto AddSprite::@4
  to:AddSprite::@5
AddSprite::@5: scope:[AddSprite]  from AddSprite::@3
  [142] *((const byte*) cmRF + (byte) AddSprite::sn#1) ← (byte) 0
  [143] *((const byte*) cmIT + (byte) AddSprite::t0#3) ← (byte) AddSprite::sn#1
  to:AddSprite::@return
AddSprite::@4: scope:[AddSprite]  from AddSprite::@3
  [144] (byte) AddSprite::t0#2 ← (byte) AddSprite::t0#3 + (byte) 1
  to:AddSprite::@2
AddSprite::@1: scope:[AddSprite]  from AddSprite
  [145] *((const byte*) cmRF + (byte) AddSprite::sn#1) ← (byte) 0
  to:AddSprite::@return
