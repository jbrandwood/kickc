
(void()) main()
main: scope:[main]  from
  asm { sei  }
  to:main::@1
main::@1: scope:[main]  from main main::@1 main::@5
  [1] if(*((const nomodify byte*) VIC_RASTER)!=(byte) $ff) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [2] *((const nomodify byte*) VIC_BG_COLOR) ← (byte) 0
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@6
  [3] (byte*) main::line#2 ← phi( main::@2/(const nomodify byte*) SCREEN main::@6/(byte*) main::line#1 )
  [3] (byte) main::i#2 ← phi( main::@2/(byte) 0 main::@6/(byte) main::i#1 )
  [4] if((byte) main::i#2<(byte) $19) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@3
  [5] *((const nomodify byte*) VIC_BG_COLOR) ← (byte) $f
  to:main::@1
main::@4: scope:[main]  from main::@3
  [6] (byte~) main::$5 ← (byte) main::i#2 << (byte) 1
  [7] (byte~) main::$9 ← (byte)*((const word*) entities + (byte~) main::$5)
  [8] *((byte*) main::line#2 + (byte~) main::$9) ← (byte) ' '
  [9] *((const word*) entities + (byte~) main::$5) ← *((const word*) entities + (byte~) main::$5) + (byte) 1
  [10] if(*((const word*) entities + (byte~) main::$5)<(byte) $27+(byte) 1) goto main::@6
  to:main::@7
main::@7: scope:[main]  from main::@4
  [11] (byte~) main::$8 ← (byte) main::i#2 << (byte) 1
  [12] *((const word*) entities + (byte~) main::$8) ← (byte) 0
  to:main::@6
main::@6: scope:[main]  from main::@4 main::@7
  [13] (byte~) main::$7 ← (byte) main::i#2 << (byte) 1
  [14] (byte*~) main::$11 ← (byte*) main::line#2 + *((const word*) entities + (byte~) main::$7)
  [15] *((byte*~) main::$11) ← (byte) '*'
  [16] (byte*) main::line#1 ← (byte*) main::line#2 + (byte) $28
  [17] (byte) main::i#1 ← ++ (byte) main::i#2
  to:main::@3
