@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@2
main::@2: scope:[main]  from main main::@1
  [5] (byte*) main::sc#4 ← phi( main::@1/(byte*) main::sc#1 main/(const byte*) main::screen#0 )
  [6] *((byte*) main::sc#4) ← (byte) 'a'
  [7] (byte*) main::sc#1 ← ++ (byte*) main::sc#4
  to:main::@1
main::@1: scope:[main]  from main::@2
  [8] if((byte*) main::sc#1<=(const byte*) main::screen#0+(word) $3e7) goto main::@2
  to:main::@4
main::@4: scope:[main]  from main::@1 main::@3
  [9] (byte*) main::cc#4 ← phi( main::@3/(byte*) main::cc#1 main::@1/(const byte*) main::cols#0+(word) $3e7 )
  [10] *((byte*) main::cc#4) ← (byte) 2
  [11] (byte*) main::cc#1 ← -- (byte*) main::cc#4
  to:main::@3
main::@3: scope:[main]  from main::@4
  [12] if((byte*) main::cc#1>(const byte*) main::cols#0-(byte) 1) goto main::@4
  to:main::@return
main::@return: scope:[main]  from main::@3
  [13] return 
  to:@return
