
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [1] (byte) idx#19 ← phi( main/(byte) 0 main::@2/(byte) idx#16 )
  [1] (byte) main::c#2 ← phi( main/(byte) 0 main::@2/(byte) main::c#1 )
  [2] (byte) out2::c#0 ← (byte) main::c#2
  [3] call out2 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] (byte) main::c#1 ← ++ (byte) main::c#2
  [5] if((byte) main::c#1!=(byte) $28) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@2
  [6] return 
  to:@return

(void()) out2((byte) out2::c)
out2: scope:[out2]  from main::@1
  [7] (byte) out::c#0 ← (byte) out2::c#0
  [8] call out 
  to:out2::@1
out2::@1: scope:[out2]  from out2
  [9] (byte) out::c#1 ← (byte) out2::c#0
  [10] call out 
  to:out2::@return
out2::@return: scope:[out2]  from out2::@1
  [11] return 
  to:@return

(void()) out((byte) out::c)
out: scope:[out]  from out2 out2::@1
  [12] (byte) out::c#2 ← phi( out2/(byte) out::c#0 out2::@1/(byte) out::c#1 )
  [12] (byte) idx#15 ← phi( out2/(byte) idx#19 out2::@1/(byte) idx#16 )
  [13] (byte) idx#16 ← ++ (byte) idx#15
  [14] *((const nomodify byte*) SCREEN + (byte) idx#16) ← (byte) out::c#2
  to:out::@return
out::@return: scope:[out]  from out
  [15] return 
  to:@return
