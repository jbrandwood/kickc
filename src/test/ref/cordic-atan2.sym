__constant char * const CHARSET = (char *) 8192
__constant char * const COLS = (char *) 55296
__constant char CORDIC_ATAN2_ANGLES_8[CORDIC_ITERATIONS_8] = kickasm {{ .fill CORDIC_ITERATIONS_8, 2*256*atan(1/pow(2,i))/PI/2
 }}
__constant const char CORDIC_ITERATIONS_8 = 8
__constant char * const D018 = (char *) 53272
__constant char FONT_HEX_PROTO[] = { 2, 5, 5, 5, 2, 6, 2, 2, 2, 7, 6, 1, 2, 4, 7, 6, 1, 2, 1, 6, 5, 5, 7, 1, 1, 7, 4, 6, 1, 6, 3, 4, 6, 5, 2, 7, 1, 1, 1, 1, 2, 5, 2, 5, 2, 2, 5, 3, 1, 1, 2, 5, 7, 5, 5, 6, 5, 6, 5, 6, 2, 5, 4, 5, 2, 6, 5, 5, 5, 6, 7, 4, 6, 4, 7, 7, 4, 6, 4, 4 }
__constant char * const SCREEN = (char *) 10240
char atan2_8(signed char x , signed char y)
signed char atan2_8::$2 // reg byte x 2002.0
signed char atan2_8::$7 // zp[1]:12 2002.0
char atan2_8::angle
char atan2_8::angle#1 // reg byte x 1501.5
char atan2_8::angle#11 // reg byte x 2002.0
char atan2_8::angle#12 // angle zp[1]:14 444444.8888888889
char atan2_8::angle#13 // angle zp[1]:14 1333334.6666666667
char atan2_8::angle#2 // angle zp[1]:14 2000002.0
char atan2_8::angle#3 // angle zp[1]:14 2000002.0
char atan2_8::angle#4 // reg byte x 2002.0
char atan2_8::angle#5 // reg byte x 2002.0
char atan2_8::angle#6 // angle zp[1]:14 2001003.0
char atan2_8::i
char atan2_8::i#1 // i zp[1]:13 1500001.5
char atan2_8::i#2 // i zp[1]:13 500000.50000000006
char atan2_8::return
char atan2_8::return#0 // reg byte x 701.0
char atan2_8::return#2 // reg byte a 202.0
signed char atan2_8::x
signed char atan2_8::x#0 // x zp[1]:3 157.8846153846154
signed char atan2_8::xd
signed char atan2_8::xd#0 // xd zp[1]:15 600000.6000000001
signed char atan2_8::xi
signed char atan2_8::xi#0 // xi zp[1]:12 3003.0
signed char atan2_8::xi#1 // xi zp[1]:12 666667.3333333334
signed char atan2_8::xi#2 // xi zp[1]:12 666667.3333333334
signed char atan2_8::xi#3 // xi zp[1]:12 800201.0
signed char atan2_8::xi#7 // xi zp[1]:12 1000001.0
signed char atan2_8::xi#8 // xi zp[1]:12 2002.0
signed char atan2_8::y
signed char atan2_8::y#0 // y zp[1]:2 146.60714285714286
signed char atan2_8::yd
signed char atan2_8::yd#0 // reg byte y 1500001.5
signed char atan2_8::yi
signed char atan2_8::yi#0 // reg byte x 600.5999999999999
signed char atan2_8::yi#1 // reg byte x 1000001.0
signed char atan2_8::yi#11 // reg byte x 2002.0
signed char atan2_8::yi#2 // reg byte x 1000001.0
signed char atan2_8::yi#3 // reg byte x 857286.7142857142
signed char atan2_8::yi#7 // reg byte x 1000001.0
void init_font_hex(char *charset)
char init_font_hex::$0 // zp[1]:15 10001.0
char init_font_hex::$1 // reg byte a 20002.0
char init_font_hex::$2 // reg byte a 20002.0
char init_font_hex::c
char init_font_hex::c#1 // c zp[1]:12 151.5
char init_font_hex::c#6 // c zp[1]:12 10.631578947368421
char init_font_hex::c1
char init_font_hex::c1#1 // c1 zp[1]:13 1501.5
char init_font_hex::c1#4 // c1 zp[1]:13 133.46666666666667
char *init_font_hex::charset
char *init_font_hex::charset#0 // charset zp[2]:8 350.5
char *init_font_hex::charset#2 // charset zp[2]:8 1079.0714285714287
char *init_font_hex::charset#5 // charset zp[2]:8 202.0
char init_font_hex::i
char init_font_hex::i#1 // reg byte x 15001.5
char init_font_hex::i#2 // reg byte x 6667.333333333333
char init_font_hex::idx
char init_font_hex::idx#2 // idx zp[1]:14 5501.0
char init_font_hex::idx#3 // reg byte y 2002.0
char init_font_hex::idx#5 // idx zp[1]:14 6000.6
char *init_font_hex::proto_hi
char *init_font_hex::proto_hi#1 // proto_hi zp[2]:6 67.33333333333333
char *init_font_hex::proto_hi#6 // proto_hi zp[2]:6 566.8333333333333
char *init_font_hex::proto_lo
char *init_font_hex::proto_lo#1 // proto_lo zp[2]:10 500.5
char *init_font_hex::proto_lo#4 // proto_lo zp[2]:10 923.3076923076923
void main()
char main::angle
char main::angle#0 // reg byte a 202.0
__constant char *main::col00 = COLS+(unsigned int)$c*$28+$13
char *main::screen
char *main::screen#1 // screen zp[2]:4 42.599999999999994
char *main::screen#2 // screen zp[2]:4 44.85714285714286
char *main::screen#4 // screen zp[2]:4 22.0
char *main::toD0181_gfx
char main::toD0181_return
__constant char main::toD0181_return#0 = byte1 (unsigned int)SCREEN&$3fff*4|byte1 (unsigned int)CHARSET/4&$f // toD0181_return
char *main::toD0181_screen
signed char main::x
signed char main::x#1 // x zp[1]:3 151.5
signed char main::x#2 // x zp[1]:3 37.875
signed char main::y
signed char main::y#1 // y zp[1]:2 16.5
signed char main::y#4 // y zp[1]:2 11.181818181818182

zp[1]:2 [ main::y#4 main::y#1 atan2_8::y#0 ]
zp[1]:3 [ main::x#2 main::x#1 atan2_8::x#0 ]
zp[2]:4 [ main::screen#2 main::screen#4 main::screen#1 ]
zp[2]:6 [ init_font_hex::proto_hi#6 init_font_hex::proto_hi#1 ]
zp[2]:8 [ init_font_hex::charset#2 init_font_hex::charset#5 init_font_hex::charset#0 ]
zp[2]:10 [ init_font_hex::proto_lo#4 init_font_hex::proto_lo#1 ]
reg byte x [ init_font_hex::i#2 init_font_hex::i#1 ]
reg byte x [ atan2_8::yi#3 atan2_8::yi#7 atan2_8::yi#0 atan2_8::yi#11 atan2_8::$2 atan2_8::yi#1 atan2_8::yi#2 ]
zp[1]:12 [ atan2_8::xi#3 atan2_8::xi#7 atan2_8::xi#0 atan2_8::xi#8 atan2_8::$7 atan2_8::xi#1 atan2_8::xi#2 init_font_hex::c#6 init_font_hex::c#1 ]
zp[1]:13 [ atan2_8::i#2 atan2_8::i#1 init_font_hex::c1#4 init_font_hex::c1#1 ]
zp[1]:14 [ atan2_8::angle#6 atan2_8::angle#12 atan2_8::angle#13 atan2_8::angle#2 atan2_8::angle#3 init_font_hex::idx#5 init_font_hex::idx#2 ]
reg byte x [ atan2_8::return#0 atan2_8::angle#11 atan2_8::angle#1 atan2_8::angle#4 atan2_8::angle#5 ]
reg byte a [ atan2_8::return#2 ]
reg byte a [ main::angle#0 ]
reg byte a [ init_font_hex::$1 ]
reg byte a [ init_font_hex::$2 ]
reg byte y [ init_font_hex::idx#3 ]
zp[1]:15 [ atan2_8::xd#0 init_font_hex::$0 ]
reg byte y [ atan2_8::yd#0 ]
