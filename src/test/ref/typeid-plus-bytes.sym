constant byte* const SCREEN = (byte*) 1024
constant signed byte* const SSCREEN = (signed byte*) 1024
constant byte TYPEID_BYTE = 1
constant byte TYPEID_SIGNED_BYTE = 2
byte idx
void main()
void testSigned()
void testSignedVals()
signed byte~ testSignedVals::$2 reg byte x 22.0
signed byte~ testSignedVals::$3 reg byte x 22.0
signed byte~ testSignedVals::$4 reg byte a 22.0
signed byte~ testSignedVals::$5 reg byte a 22.0
signed byte~ testSignedVals::$6 reg byte a 22.0
constant signed byte testSignedVals::sbc1 = -$78
volatile signed byte testSignedVals::sbv1 loadstore zp[1]:3 5.866666666666666
void testUnsigned()
void testUnsignedVals()
byte~ testUnsignedVals::$2 reg byte x 22.0
byte~ testUnsignedVals::$3 reg byte x 22.0
byte~ testUnsignedVals::$4 reg byte a 22.0
byte~ testUnsignedVals::$5 reg byte a 22.0
byte~ testUnsignedVals::$6 reg byte a 22.0
constant byte testUnsignedVals::ubc1 = $fa
volatile byte testUnsignedVals::ubv1 loadstore zp[1]:2 5.866666666666666

zp[1]:2 [ testUnsignedVals::ubv1 ]
reg byte x [ testUnsignedVals::$2 ]
reg byte x [ testUnsignedVals::$3 ]
reg byte a [ testUnsignedVals::$4 ]
reg byte a [ testUnsignedVals::$5 ]
reg byte a [ testUnsignedVals::$6 ]
zp[1]:3 [ testSignedVals::sbv1 ]
reg byte x [ testSignedVals::$2 ]
reg byte x [ testSignedVals::$3 ]
reg byte a [ testSignedVals::$4 ]
reg byte a [ testSignedVals::$5 ]
reg byte a [ testSignedVals::$6 ]
