
(void()) main()
main: scope:[main]  from
  [0] phi()
  [1] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main main::@68
  [2] (byte*) print_line_cursor#29 ← phi( main/(const byte*) print_screen#0 main::@68/(byte*) print_line_cursor#0 )
  [2] (byte) main::i#10 ← phi( main/(byte) 0 main::@68/(byte) main::i#1 )
  [2] (byte*) print_char_cursor#100 ← phi( main/(const byte*) print_screen#0 main::@68/(byte*) print_char_cursor#150 )
  [2] (byte) main::a#10 ← phi( main/(byte) 7 main::@68/(byte) main::a#1 )
  [3] (byte) main::b#0 ← (byte) $ce - (byte) main::a#10
  [4] if((byte) main::a#10>=(byte) main::b#0) goto main::@2
  to:main::@22
main::@22: scope:[main]  from main::@1
  [5] phi()
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@22
  [6] (byte) main::r#41 ← phi( main::@1/(byte) '-' main::@22/(byte) '+' )
  [7] (byte) printu::a#0 ← (byte) main::a#10
  [8] (byte) printu::b#0 ← (byte) main::b#0
  [9] (byte) printu::res#0 ← (byte) main::r#41
  [10] call printu 
  to:main::@43
main::@43: scope:[main]  from main::@2
  [11] if((byte) main::a#10>=(byte) $37) goto main::@3
  to:main::@23
main::@23: scope:[main]  from main::@43
  [12] phi()
  to:main::@3
main::@3: scope:[main]  from main::@23 main::@43
  [13] (byte) main::r#42 ← phi( main::@23/(byte) '+' main::@43/(byte) '-' )
  [14] (byte) printu::a#1 ← (byte) main::a#10
  [15] (byte) printu::res#1 ← (byte) main::r#42
  [16] call printu 
  to:main::@44
main::@44: scope:[main]  from main::@3
  [17] if((byte) main::a#10>=*((const byte*) main::cs + (byte) main::i#10)) goto main::@4
  to:main::@24
main::@24: scope:[main]  from main::@44
  [18] phi()
  to:main::@4
main::@4: scope:[main]  from main::@24 main::@44
  [19] (byte) main::r#43 ← phi( main::@24/(byte) '+' main::@44/(byte) '-' )
  [20] (byte) printu::a#2 ← (byte) main::a#10
  [21] (byte) printu::b#2 ← *((const byte*) main::cs + (byte) main::i#10)
  [22] (byte) printu::res#2 ← (byte) main::r#43
  [23] call printu 
  to:main::@45
main::@45: scope:[main]  from main::@4
  [24] if((byte) main::a#10>=(byte) main::a#10) goto main::@5
  to:main::@25
main::@25: scope:[main]  from main::@45
  [25] phi()
  to:main::@5
main::@5: scope:[main]  from main::@25 main::@45
  [26] (byte) main::r#44 ← phi( main::@25/(byte) '+' main::@45/(byte) '-' )
  [27] (byte) printu::a#3 ← (byte) main::a#10
  [28] (byte) printu::b#3 ← (byte) main::a#10
  [29] (byte) printu::res#3 ← (byte) main::r#44
  [30] call printu 
  to:main::@46
main::@46: scope:[main]  from main::@5
  [31] phi()
  [32] call print_ln 
  to:main::@47
main::@47: scope:[main]  from main::@46
  [33] if((byte) main::a#10<=(byte) main::b#0) goto main::@6
  to:main::@26
main::@26: scope:[main]  from main::@47
  [34] phi()
  to:main::@6
main::@6: scope:[main]  from main::@26 main::@47
  [35] (byte) main::r#45 ← phi( main::@26/(byte) '+' main::@47/(byte) '-' )
  [36] (byte) printu::a#4 ← (byte) main::a#10
  [37] (byte) printu::b#4 ← (byte) main::b#0
  [38] (byte) printu::res#4 ← (byte) main::r#45
  [39] (byte*) print_char_cursor#167 ← (byte*) print_line_cursor#0
  [40] call printu 
  to:main::@48
main::@48: scope:[main]  from main::@6
  [41] if((byte) main::a#10<(byte) $37+(byte) 1) goto main::@7
  to:main::@27
main::@27: scope:[main]  from main::@48
  [42] phi()
  to:main::@7
main::@7: scope:[main]  from main::@27 main::@48
  [43] (byte) main::r#46 ← phi( main::@27/(byte) '+' main::@48/(byte) '-' )
  [44] (byte) printu::a#5 ← (byte) main::a#10
  [45] (byte) printu::res#5 ← (byte) main::r#46
  [46] call printu 
  to:main::@49
main::@49: scope:[main]  from main::@7
  [47] if((byte) main::a#10<=*((const byte*) main::cs + (byte) main::i#10)) goto main::@8
  to:main::@28
main::@28: scope:[main]  from main::@49
  [48] phi()
  to:main::@8
main::@8: scope:[main]  from main::@28 main::@49
  [49] (byte) main::r#47 ← phi( main::@28/(byte) '+' main::@49/(byte) '-' )
  [50] (byte) printu::a#6 ← (byte) main::a#10
  [51] (byte) printu::b#6 ← *((const byte*) main::cs + (byte) main::i#10)
  [52] (byte) printu::res#6 ← (byte) main::r#47
  [53] call printu 
  to:main::@50
main::@50: scope:[main]  from main::@8
  [54] if((byte) main::a#10<=(byte) main::a#10) goto main::@9
  to:main::@29
main::@29: scope:[main]  from main::@50
  [55] phi()
  to:main::@9
main::@9: scope:[main]  from main::@29 main::@50
  [56] (byte) main::r#48 ← phi( main::@29/(byte) '+' main::@50/(byte) '-' )
  [57] (byte) printu::a#7 ← (byte) main::a#10
  [58] (byte) printu::b#7 ← (byte) main::a#10
  [59] (byte) printu::res#7 ← (byte) main::r#48
  [60] call printu 
  to:main::@51
main::@51: scope:[main]  from main::@9
  [61] phi()
  [62] call print_ln 
  to:main::@52
main::@52: scope:[main]  from main::@51
  [63] if((byte) main::a#10>(byte) main::b#0) goto main::@10
  to:main::@30
main::@30: scope:[main]  from main::@52
  [64] phi()
  to:main::@10
main::@10: scope:[main]  from main::@30 main::@52
  [65] (byte) main::r#49 ← phi( main::@30/(byte) '+' main::@52/(byte) '-' )
  [66] (byte) printu::a#8 ← (byte) main::a#10
  [67] (byte) printu::b#8 ← (byte) main::b#0
  [68] (byte) printu::res#8 ← (byte) main::r#49
  [69] (byte*) print_char_cursor#151 ← (byte*) print_line_cursor#0
  [70] call printu 
  to:main::@53
main::@53: scope:[main]  from main::@10
  [71] if((byte) main::a#10>=(byte) $37+(byte) 1) goto main::@11
  to:main::@31
main::@31: scope:[main]  from main::@53
  [72] phi()
  to:main::@11
main::@11: scope:[main]  from main::@31 main::@53
  [73] (byte) main::r#50 ← phi( main::@31/(byte) '+' main::@53/(byte) '-' )
  [74] (byte) printu::a#9 ← (byte) main::a#10
  [75] (byte) printu::res#9 ← (byte) main::r#50
  [76] call printu 
  to:main::@54
main::@54: scope:[main]  from main::@11
  [77] if((byte) main::a#10>*((const byte*) main::cs + (byte) main::i#10)) goto main::@12
  to:main::@32
main::@32: scope:[main]  from main::@54
  [78] phi()
  to:main::@12
main::@12: scope:[main]  from main::@32 main::@54
  [79] (byte) main::r#51 ← phi( main::@32/(byte) '+' main::@54/(byte) '-' )
  [80] (byte) printu::a#10 ← (byte) main::a#10
  [81] (byte) printu::b#10 ← *((const byte*) main::cs + (byte) main::i#10)
  [82] (byte) printu::res#10 ← (byte) main::r#51
  [83] call printu 
  to:main::@55
main::@55: scope:[main]  from main::@12
  [84] if((byte) main::a#10>(byte) main::a#10) goto main::@13
  to:main::@33
main::@33: scope:[main]  from main::@55
  [85] phi()
  to:main::@13
main::@13: scope:[main]  from main::@33 main::@55
  [86] (byte) main::r#52 ← phi( main::@33/(byte) '+' main::@55/(byte) '-' )
  [87] (byte) printu::a#11 ← (byte) main::a#10
  [88] (byte) printu::b#11 ← (byte) main::a#10
  [89] (byte) printu::res#11 ← (byte) main::r#52
  [90] call printu 
  to:main::@56
main::@56: scope:[main]  from main::@13
  [91] phi()
  [92] call print_ln 
  to:main::@57
main::@57: scope:[main]  from main::@56
  [93] if((byte) main::a#10<(byte) main::b#0) goto main::@14
  to:main::@34
main::@34: scope:[main]  from main::@57
  [94] phi()
  to:main::@14
main::@14: scope:[main]  from main::@34 main::@57
  [95] (byte) main::r#53 ← phi( main::@34/(byte) '+' main::@57/(byte) '-' )
  [96] (byte) printu::a#12 ← (byte) main::a#10
  [97] (byte) printu::b#12 ← (byte) main::b#0
  [98] (byte) printu::res#12 ← (byte) main::r#53
  [99] (byte*) print_char_cursor#155 ← (byte*) print_line_cursor#0
  [100] call printu 
  to:main::@58
main::@58: scope:[main]  from main::@14
  [101] if((byte) main::a#10<(byte) $37) goto main::@15
  to:main::@35
main::@35: scope:[main]  from main::@58
  [102] phi()
  to:main::@15
main::@15: scope:[main]  from main::@35 main::@58
  [103] (byte) main::r#54 ← phi( main::@35/(byte) '+' main::@58/(byte) '-' )
  [104] (byte) printu::a#13 ← (byte) main::a#10
  [105] (byte) printu::res#13 ← (byte) main::r#54
  [106] call printu 
  to:main::@59
main::@59: scope:[main]  from main::@15
  [107] if((byte) main::a#10<*((const byte*) main::cs + (byte) main::i#10)) goto main::@16
  to:main::@36
main::@36: scope:[main]  from main::@59
  [108] phi()
  to:main::@16
main::@16: scope:[main]  from main::@36 main::@59
  [109] (byte) main::r#55 ← phi( main::@36/(byte) '+' main::@59/(byte) '-' )
  [110] (byte) printu::a#14 ← (byte) main::a#10
  [111] (byte) printu::b#14 ← *((const byte*) main::cs + (byte) main::i#10)
  [112] (byte) printu::res#14 ← (byte) main::r#55
  [113] call printu 
  to:main::@60
main::@60: scope:[main]  from main::@16
  [114] if((byte) main::a#10<(byte) main::a#10) goto main::@17
  to:main::@37
main::@37: scope:[main]  from main::@60
  [115] phi()
  to:main::@17
main::@17: scope:[main]  from main::@37 main::@60
  [116] (byte) main::r#56 ← phi( main::@37/(byte) '+' main::@60/(byte) '-' )
  [117] (byte) printu::a#15 ← (byte) main::a#10
  [118] (byte) printu::b#15 ← (byte) main::a#10
  [119] (byte) printu::res#15 ← (byte) main::r#56
  [120] call printu 
  to:main::@61
main::@61: scope:[main]  from main::@17
  [121] phi()
  [122] call print_ln 
  to:main::@62
main::@62: scope:[main]  from main::@61
  [123] if((byte) main::a#10!=(byte) main::b#0) goto main::@18
  to:main::@38
main::@38: scope:[main]  from main::@62
  [124] phi()
  to:main::@18
main::@18: scope:[main]  from main::@38 main::@62
  [125] (byte) main::r#57 ← phi( main::@38/(byte) '+' main::@62/(byte) '-' )
  [126] (byte) printu::a#16 ← (byte) main::a#10
  [127] (byte) printu::b#16 ← (byte) main::b#0
  [128] (byte) printu::res#16 ← (byte) main::r#57
  [129] (byte*) print_char_cursor#159 ← (byte*) print_line_cursor#0
  [130] call printu 
  to:main::@63
main::@63: scope:[main]  from main::@18
  [131] if((byte) main::a#10!=(byte) $37) goto main::@19
  to:main::@39
main::@39: scope:[main]  from main::@63
  [132] phi()
  to:main::@19
main::@19: scope:[main]  from main::@39 main::@63
  [133] (byte) main::r#58 ← phi( main::@39/(byte) '+' main::@63/(byte) '-' )
  [134] (byte) printu::a#17 ← (byte) main::a#10
  [135] (byte) printu::res#17 ← (byte) main::r#58
  [136] call printu 
  to:main::@64
main::@64: scope:[main]  from main::@19
  [137] if((byte) main::a#10!=*((const byte*) main::cs + (byte) main::i#10)) goto main::@20
  to:main::@40
main::@40: scope:[main]  from main::@64
  [138] phi()
  to:main::@20
main::@20: scope:[main]  from main::@40 main::@64
  [139] (byte) main::r#59 ← phi( main::@40/(byte) '+' main::@64/(byte) '-' )
  [140] (byte) printu::a#18 ← (byte) main::a#10
  [141] (byte) printu::b#18 ← *((const byte*) main::cs + (byte) main::i#10)
  [142] (byte) printu::res#18 ← (byte) main::r#59
  [143] call printu 
  to:main::@65
main::@65: scope:[main]  from main::@20
  [144] if((byte) main::a#10!=(byte) main::a#10) goto main::@21
  to:main::@41
main::@41: scope:[main]  from main::@65
  [145] phi()
  to:main::@21
main::@21: scope:[main]  from main::@41 main::@65
  [146] (byte) main::r#60 ← phi( main::@41/(byte) '+' main::@65/(byte) '-' )
  [147] (byte) printu::a#19 ← (byte) main::a#10
  [148] (byte) printu::b#19 ← (byte) main::a#10
  [149] (byte) printu::res#19 ← (byte) main::r#60
  [150] call printu 
  to:main::@66
main::@66: scope:[main]  from main::@21
  [151] phi()
  [152] call print_ln 
  to:main::@67
main::@67: scope:[main]  from main::@66
  [153] (byte) main::a#1 ← (byte) main::a#10 + (byte) $30
  [154] (byte) main::i#1 ← ++ (byte) main::i#10
  [155] if((byte) main::i#1!=(byte) 5) goto main::@68
  to:main::@42
main::@42: scope:[main]  from main::@42 main::@67
  [156] phi()
  to:main::@42
main::@68: scope:[main]  from main::@67
  [157] (byte*) print_char_cursor#150 ← (byte*) print_line_cursor#0
  to:main::@1

(void()) print_cls()
print_cls: scope:[print_cls]  from main
  [158] phi()
  [159] call memset 
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls
  [160] return 
  to:@return

(void()) printu((byte) printu::a , (byte*) printu::op , (byte) printu::b , (byte) printu::res)
printu: scope:[printu]  from main::@10 main::@11 main::@12 main::@13 main::@14 main::@15 main::@16 main::@17 main::@18 main::@19 main::@2 main::@20 main::@21 main::@3 main::@4 main::@5 main::@6 main::@7 main::@8 main::@9
  [161] (byte) printu::res#20 ← phi( main::@10/(byte) printu::res#8 main::@11/(byte) printu::res#9 main::@12/(byte) printu::res#10 main::@13/(byte) printu::res#11 main::@14/(byte) printu::res#12 main::@15/(byte) printu::res#13 main::@16/(byte) printu::res#14 main::@17/(byte) printu::res#15 main::@18/(byte) printu::res#16 main::@19/(byte) printu::res#17 main::@2/(byte) printu::res#0 main::@20/(byte) printu::res#18 main::@21/(byte) printu::res#19 main::@3/(byte) printu::res#1 main::@4/(byte) printu::res#2 main::@5/(byte) printu::res#3 main::@6/(byte) printu::res#4 main::@7/(byte) printu::res#5 main::@8/(byte) printu::res#6 main::@9/(byte) printu::res#7 )
  [161] (byte) printu::b#20 ← phi( main::@10/(byte) printu::b#8 main::@11/(byte) $37 main::@12/(byte) printu::b#10 main::@13/(byte) printu::b#11 main::@14/(byte) printu::b#12 main::@15/(byte) $37 main::@16/(byte) printu::b#14 main::@17/(byte) printu::b#15 main::@18/(byte) printu::b#16 main::@19/(byte) $37 main::@2/(byte) printu::b#0 main::@20/(byte) printu::b#18 main::@21/(byte) printu::b#19 main::@3/(byte) $37 main::@4/(byte) printu::b#2 main::@5/(byte) printu::b#3 main::@6/(byte) printu::b#4 main::@7/(byte) $37 main::@8/(byte) printu::b#6 main::@9/(byte) printu::b#7 )
  [161] (byte*) printu::op#20 ← phi( main::@10/(const byte*) main::op8 main::@11/(const byte*) main::op8 main::@12/(const byte*) main::op8 main::@13/(const byte*) main::op8 main::@14/(const byte*) main::op12 main::@15/(const byte*) main::op12 main::@16/(const byte*) main::op12 main::@17/(const byte*) main::op12 main::@18/(const byte*) main::op16 main::@19/(const byte*) main::op16 main::@2/(const byte*) main::op main::@20/(const byte*) main::op16 main::@21/(const byte*) main::op16 main::@3/(const byte*) main::op main::@4/(const byte*) main::op main::@5/(const byte*) main::op main::@6/(const byte*) main::op4 main::@7/(const byte*) main::op4 main::@8/(const byte*) main::op4 main::@9/(const byte*) main::op4 )
  [161] (byte) printu::a#20 ← phi( main::@10/(byte) printu::a#8 main::@11/(byte) printu::a#9 main::@12/(byte) printu::a#10 main::@13/(byte) printu::a#11 main::@14/(byte) printu::a#12 main::@15/(byte) printu::a#13 main::@16/(byte) printu::a#14 main::@17/(byte) printu::a#15 main::@18/(byte) printu::a#16 main::@19/(byte) printu::a#17 main::@2/(byte) printu::a#0 main::@20/(byte) printu::a#18 main::@21/(byte) printu::a#19 main::@3/(byte) printu::a#1 main::@4/(byte) printu::a#2 main::@5/(byte) printu::a#3 main::@6/(byte) printu::a#4 main::@7/(byte) printu::a#5 main::@8/(byte) printu::a#6 main::@9/(byte) printu::a#7 )
  [161] (byte*) print_char_cursor#98 ← phi( main::@10/(byte*) print_char_cursor#151 main::@11/(byte*) print_char_cursor#56 main::@12/(byte*) print_char_cursor#56 main::@13/(byte*) print_char_cursor#56 main::@14/(byte*) print_char_cursor#155 main::@15/(byte*) print_char_cursor#56 main::@16/(byte*) print_char_cursor#56 main::@17/(byte*) print_char_cursor#56 main::@18/(byte*) print_char_cursor#159 main::@19/(byte*) print_char_cursor#56 main::@2/(byte*) print_char_cursor#100 main::@20/(byte*) print_char_cursor#56 main::@21/(byte*) print_char_cursor#56 main::@3/(byte*) print_char_cursor#56 main::@4/(byte*) print_char_cursor#56 main::@5/(byte*) print_char_cursor#56 main::@6/(byte*) print_char_cursor#167 main::@7/(byte*) print_char_cursor#56 main::@8/(byte*) print_char_cursor#56 main::@9/(byte*) print_char_cursor#56 )
  [162] call print_char 
  to:printu::@1
printu::@1: scope:[printu]  from printu
  [163] (byte) print_uchar::b#0 ← (byte) printu::a#20
  [164] call print_uchar 
  to:printu::@2
printu::@2: scope:[printu]  from printu::@1
  [165] (byte*) print_str::str#1 ← (byte*) printu::op#20
  [166] call print_str 
  to:printu::@3
printu::@3: scope:[printu]  from printu::@2
  [167] (byte) print_uchar::b#1 ← (byte) printu::b#20
  [168] call print_uchar 
  to:printu::@4
printu::@4: scope:[printu]  from printu::@3
  [169] phi()
  [170] call print_char 
  to:printu::@5
printu::@5: scope:[printu]  from printu::@4
  [171] (byte) print_char::ch#5 ← (byte) printu::res#20
  [172] call print_char 
  to:printu::@return
printu::@return: scope:[printu]  from printu::@5
  [173] return 
  to:@return

(void()) print_ln()
print_ln: scope:[print_ln]  from main::@46 main::@51 main::@56 main::@61 main::@66
  [174] (byte*) print_line_cursor#27 ← phi( main::@46/(byte*) print_line_cursor#29 main::@51/(byte*) print_line_cursor#0 main::@56/(byte*) print_line_cursor#0 main::@61/(byte*) print_line_cursor#0 main::@66/(byte*) print_line_cursor#0 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [175] (byte*) print_line_cursor#14 ← phi( print_ln/(byte*) print_line_cursor#27 print_ln::@1/(byte*) print_line_cursor#0 )
  [176] (byte*) print_line_cursor#0 ← (byte*) print_line_cursor#14 + (byte) $28
  [177] if((byte*) print_line_cursor#0<(byte*) print_char_cursor#56) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [178] return 
  to:@return

(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
memset: scope:[memset]  from print_cls
  [179] phi()
  to:memset::@1
memset::@1: scope:[memset]  from memset memset::@2
  [180] (byte*) memset::dst#2 ← phi( memset/(byte*)(const void*) memset::str#0 memset::@2/(byte*) memset::dst#1 )
  [181] if((byte*) memset::dst#2!=(const byte*) memset::end#0) goto memset::@2
  to:memset::@return
memset::@return: scope:[memset]  from memset::@1
  [182] return 
  to:@return
memset::@2: scope:[memset]  from memset::@1
  [183] *((byte*) memset::dst#2) ← (const byte) memset::c#0
  [184] (byte*) memset::dst#1 ← ++ (byte*) memset::dst#2
  to:memset::@1

(void()) print_char((byte) print_char::ch)
print_char: scope:[print_char]  from print_str::@2 print_uchar print_uchar::@1 printu printu::@4 printu::@5
  [185] (byte*) print_char_cursor#55 ← phi( print_str::@2/(byte*) print_char_cursor#56 print_uchar/(byte*) print_char_cursor#56 print_uchar::@1/(byte*) print_char_cursor#56 printu/(byte*) print_char_cursor#98 printu::@4/(byte*) print_char_cursor#56 printu::@5/(byte*) print_char_cursor#56 )
  [185] (byte) print_char::ch#6 ← phi( print_str::@2/(byte) print_char::ch#0 print_uchar/(byte) print_char::ch#1 print_uchar::@1/(byte) print_char::ch#2 printu/(byte) ' ' printu::@4/(byte) ' ' printu::@5/(byte) print_char::ch#5 )
  [186] *((byte*) print_char_cursor#55) ← (byte) print_char::ch#6
  [187] (byte*) print_char_cursor#56 ← ++ (byte*) print_char_cursor#55
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [188] return 
  to:@return

(void()) print_uchar((byte) print_uchar::b)
print_uchar: scope:[print_uchar]  from printu::@1 printu::@3
  [189] (byte) print_uchar::b#2 ← phi( printu::@1/(byte) print_uchar::b#0 printu::@3/(byte) print_uchar::b#1 )
  [190] (byte~) print_uchar::$0 ← (byte) print_uchar::b#2 >> (byte) 4
  [191] (byte) print_char::ch#1 ← *((const to_nomodify byte*) print_hextab + (byte~) print_uchar::$0)
  [192] call print_char 
  to:print_uchar::@1
print_uchar::@1: scope:[print_uchar]  from print_uchar
  [193] (byte~) print_uchar::$2 ← (byte) print_uchar::b#2 & (byte) $f
  [194] (byte) print_char::ch#2 ← *((const to_nomodify byte*) print_hextab + (byte~) print_uchar::$2)
  [195] call print_char 
  to:print_uchar::@return
print_uchar::@return: scope:[print_uchar]  from print_uchar::@1
  [196] return 
  to:@return

(void()) print_str((byte*) print_str::str)
print_str: scope:[print_str]  from printu::@2
  [197] phi()
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@3
  [198] (byte*) print_str::str#2 ← phi( print_str/(byte*) print_str::str#1 print_str::@3/(byte*) print_str::str#0 )
  [199] if((byte) 0!=*((byte*) print_str::str#2)) goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [200] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [201] (byte) print_char::ch#0 ← *((byte*) print_str::str#2)
  [202] call print_char 
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@2
  [203] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#2
  to:print_str::@1
