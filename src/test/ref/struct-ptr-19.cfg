
(void()) main()
main: scope:[main]  from
  [0] *(&(struct Point) main::point) ← memcpy(*(&(const struct Point) $0), struct Point, (const byte) SIZEOF_STRUCT_POINT)
  [1] (byte) print::p_x#0 ← *((byte*)&(struct Point) main::point)
  [2] (byte) print::p_y#0 ← *((byte*)&(struct Point) main::point+(const byte) OFFSET_STRUCT_POINT_Y)
  [3] call print 
  to:main::@1
main::@1: scope:[main]  from main
  [4] (byte) print::p_x#1 ← *((byte*)(const struct Point*) main::ptr)
  [5] (byte) print::p_y#1 ← *((byte*)(const struct Point*) main::ptr+(const byte) OFFSET_STRUCT_POINT_Y)
  [6] call print 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [7] return 
  to:@return

(void()) print((byte) print::p_x , (byte) print::p_y)
print: scope:[print]  from main main::@1
  [8] (byte) print::p_y#2 ← phi( main/(byte) print::p_y#0 main::@1/(byte) print::p_y#1 )
  [8] (byte) idx#12 ← phi( main/(byte) 0 main::@1/(byte) idx#13 )
  [8] (byte) print::p_x#2 ← phi( main/(byte) print::p_x#0 main::@1/(byte) print::p_x#1 )
  [9] *((const nomodify byte*) SCREEN + (byte) idx#12) ← (byte) print::p_x#2
  [10] (byte) idx#3 ← ++ (byte) idx#12
  [11] *((const nomodify byte*) SCREEN + (byte) idx#3) ← (byte) print::p_y#2
  [12] (byte) idx#13 ← ++ (byte) idx#3
  to:print::@return
print::@return: scope:[print]  from print
  [13] return 
  to:@return
