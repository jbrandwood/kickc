__constant unsigned int STACK_BASE = $103
__stackcall char call1(char param1 , char param2)
__constant char call1::OFFSET_STACK_PARAM1 = 1
__constant char call1::OFFSET_STACK_PARAM2 = 0
__constant char call1::OFFSET_STACK_RETURN_1 = 1
char call1::param1
char call1::param1#0 // param1 zp[1]:2 11.0
char call1::param2
char call1::param2#0 // reg byte a 22.0
char call1::return
char call1::return#0 // reg byte a 22.0
char call2(char param1 , char param2)
char call2::$0 // reg byte a 22.0
char call2::param1
char call2::param1#2 // reg byte x 11.0
char call2::param2
char call2::param2#2 // reg byte a 11.0
__loadstore char call2::return // zp[1]:2 3.833333333333333
char call3(char param1 , char param2)
char call3::param1
char call3::param1#2 // reg byte x 11.0
char call3::param2
char call3::param2#2 // reg byte a 11.0
char call3::return
char call3::return#0 // reg byte a 3.75
char call3::return#2 // reg byte a 4.0
char call3::return#3 // reg byte a 4.0
void main()
char main::$0 // reg byte a 4.0
char main::$1 // reg byte a 4.0
char main::$2 // reg byte a 4.0
char main::$3 // reg byte a 4.0
char main::$4 // reg byte a 4.0
char main::$5 // reg byte a 4.0
__constant char *main::ptr = (char *) 254

reg byte x [ call2::param1#2 ]
reg byte a [ call2::param2#2 ]
reg byte x [ call3::param1#2 ]
reg byte a [ call3::param2#2 ]
reg byte a [ main::$0 ]
reg byte a [ main::$1 ]
reg byte a [ main::$2 ]
reg byte a [ main::$3 ]
reg byte a [ call3::return#2 ]
reg byte a [ main::$4 ]
reg byte a [ call3::return#3 ]
reg byte a [ main::$5 ]
zp[1]:2 [ call1::param1#0 call2::return ]
reg byte a [ call1::param2#0 ]
reg byte a [ call1::return#0 ]
reg byte a [ call2::$0 ]
reg byte a [ call3::return#0 ]
