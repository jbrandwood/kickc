@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((byte*)(struct Point*)&(struct Vector) main::v2) ← (const byte) main::v1_p_x
  [5] *((byte*)(struct Point*)&(struct Vector) main::v2+(const byte) OFFSET_STRUCT_POINT_Y) ← (const byte) main::v1_p_y
  [6] *((byte*)(struct Point*)&(struct Vector) main::v2+(const byte) OFFSET_STRUCT_VECTOR_Q) ← (const byte) main::v1_q_x
  [7] *((byte*)(struct Point*)&(struct Vector) main::v2+(const byte) OFFSET_STRUCT_VECTOR_Q+(const byte) OFFSET_STRUCT_POINT_Y) ← (const byte) main::v1_q_y
  [8] *((struct Point*)&(struct Vector) main::v3) ← memcpy(*((struct Point*)&(struct Vector) main::v2), struct Point, (const byte) SIZEOF_STRUCT_POINT)
  [9] *((struct Point*)&(struct Vector) main::v3+(const byte) OFFSET_STRUCT_VECTOR_Q) ← memcpy(*(&(const struct Point) $0), struct Point, (const byte) SIZEOF_STRUCT_POINT)
  [10] *(&(struct Vector) main::v4) ← memcpy(*(&(struct Vector) main::v3), struct Vector, (const byte) SIZEOF_STRUCT_VECTOR)
  [11] (byte) main::v5_p_x#0 ← *((byte*)(struct Point*)&(struct Vector) main::v4)
  [12] (byte) main::v5_p_y#0 ← *((byte*)(struct Point*)&(struct Vector) main::v4+(const byte) OFFSET_STRUCT_POINT_Y)
  [13] *((const byte*) SCREEN) ← (const byte) main::v1_p_x
  [14] *((const byte*) SCREEN+(byte) 1) ← (const byte) main::v1_p_y
  [15] *((const byte*) SCREEN+(byte) 2) ← (const byte) main::v1_q_x
  [16] *((const byte*) SCREEN+(byte) 3) ← (const byte) main::v1_q_y
  [17] *((const byte*) SCREEN+(byte) 4) ← *((byte*)(struct Point*)&(struct Vector) main::v2)
  [18] *((const byte*) SCREEN+(byte) 5) ← *((byte*)(struct Point*)&(struct Vector) main::v2+(const byte) OFFSET_STRUCT_POINT_Y)
  [19] *((const byte*) SCREEN+(byte) 6) ← *((byte*)(struct Point*)&(struct Vector) main::v2+(const byte) OFFSET_STRUCT_VECTOR_Q)
  [20] *((const byte*) SCREEN+(byte) 7) ← *((byte*)(struct Point*)&(struct Vector) main::v2+(const byte) OFFSET_STRUCT_VECTOR_Q+(const byte) OFFSET_STRUCT_POINT_Y)
  [21] *((const byte*) SCREEN+(byte) 8) ← *((byte*)(struct Point*)&(struct Vector) main::v3)
  [22] *((const byte*) SCREEN+(byte) 9) ← *((byte*)(struct Point*)&(struct Vector) main::v3+(const byte) OFFSET_STRUCT_POINT_Y)
  [23] *((const byte*) SCREEN+(byte) $a) ← *((byte*)(struct Point*)&(struct Vector) main::v3+(const byte) OFFSET_STRUCT_VECTOR_Q)
  [24] *((const byte*) SCREEN+(byte) $b) ← *((byte*)(struct Point*)&(struct Vector) main::v3+(const byte) OFFSET_STRUCT_VECTOR_Q+(const byte) OFFSET_STRUCT_POINT_Y)
  [25] *((const byte*) SCREEN+(byte) $c) ← *((byte*)(struct Point*)&(struct Vector) main::v4)
  [26] *((const byte*) SCREEN+(byte) $d) ← *((byte*)(struct Point*)&(struct Vector) main::v4+(const byte) OFFSET_STRUCT_POINT_Y)
  [27] *((const byte*) SCREEN+(byte) $e) ← *((byte*)(struct Point*)&(struct Vector) main::v4+(const byte) OFFSET_STRUCT_VECTOR_Q)
  [28] *((const byte*) SCREEN+(byte) $f) ← *((byte*)(struct Point*)&(struct Vector) main::v4+(const byte) OFFSET_STRUCT_VECTOR_Q+(const byte) OFFSET_STRUCT_POINT_Y)
  [29] *((const byte*) SCREEN+(byte) $10) ← (byte) main::v5_p_x#0
  [30] *((const byte*) SCREEN+(byte) $11) ← (byte) main::v5_p_y#0
  [31] *((const byte*) SCREEN+(byte) $12) ← (const byte) main::v5_q_x
  [32] *((const byte*) SCREEN+(byte) $13) ← (const byte) main::v5_q_y
  to:main::@return
main::@return: scope:[main]  from main
  [33] return 
  to:@return
