
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] rand_state = 1
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [2] phi()
  [3] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [4] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [5] phi()
  [6] call memset
  to:main::@10
main::@10: scope:[main]  from main
  [7] phi()
  [8] call memset
  to:main::@11
main::@11: scope:[main]  from main::@10
  [9] phi()
  [10] call memset
  to:main::@12
main::@12: scope:[main]  from main::@11
  [11] *((char *)TED+OFFSET_STRUCT_MOS7360_TED_BG_COLOR) = 0
  [12] *((char *)TED+OFFSET_STRUCT_MOS7360_TED_BORDER_COLOR) = 0
  to:main::@1
main::@1: scope:[main]  from main::@12 main::@6
  [13] main::x#11 = phi( main::@12/$14, main::@6/main::x#10 )
  [13] main::y#11 = phi( main::@12/$c, main::@6/main::y#10 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [14] main::$24 = (unsigned int)main::y#11
  [15] main::$29 = main::$24 << 2
  [16] main::$30 = main::$29 + main::$24
  [17] main::$3 = main::$30 << 3
  [18] main::offset#0 = main::$3 + main::x#11
  [19] main::$6 = VISITS + main::offset#0
  [20] *main::$6 = ++ *main::$6
  [21] main::cnt#0 = *main::$6
  [22] main::$8 = DEFAULT_COLORRAM + main::offset#0
  [23] main::$9 = main::cnt#0 & $f
  [24] *main::$8 = FADE[main::$9]
  [25] call rand
  [26] rand::return#2 = rand::return#0
  to:main::@13
main::@13: scope:[main]  from main::@2
  [27] main::$10 = rand::return#2
  [28] main::rnd#0 = byte1  main::$10
  [29] main::$12 = main::rnd#0 & $80
  [30] if(0!=main::$12) goto main::@3
  to:main::@7
main::@7: scope:[main]  from main::@13
  [31] main::$13 = main::rnd#0 & $40
  [32] if(0!=main::$13) goto main::@4
  to:main::@8
main::@8: scope:[main]  from main::@7
  [33] main::y#2 = -- main::y#11
  [34] if(main::y#2!=$ff) goto main::@14
  to:main::@6
main::@14: scope:[main]  from main::@8
  [35] phi()
  to:main::@6
main::@6: scope:[main]  from main::@14 main::@15 main::@16 main::@17 main::@4 main::@5 main::@6 main::@8 main::@9
  [36] main::x#10 = phi( main::@14/main::x#11, main::@8/main::x#11, main::@15/main::x#2, main::@9/0, main::@16/main::x#11, main::@4/main::x#11, main::@17/main::x#1, main::@5/$27, main::@6/main::x#10 )
  [36] main::y#10 = phi( main::@14/main::y#2, main::@8/0, main::@15/main::y#11, main::@9/main::y#11, main::@16/main::y#1, main::@4/$18, main::@17/main::y#11, main::@5/main::y#11, main::@6/main::y#10 )
  [37] if(*((char *)TED+OFFSET_STRUCT_MOS7360_TED_RASTER_LO)!=$ff) goto main::@6
  to:main::@1
main::@4: scope:[main]  from main::@7
  [38] main::y#1 = ++ main::y#11
  [39] if(main::y#1!=$19) goto main::@16
  to:main::@6
main::@16: scope:[main]  from main::@4
  [40] phi()
  to:main::@6
main::@3: scope:[main]  from main::@13
  [41] main::$18 = main::rnd#0 & $40
  [42] if(0!=main::$18) goto main::@5
  to:main::@9
main::@9: scope:[main]  from main::@3
  [43] main::x#2 = -- main::x#11
  [44] if(main::x#2!=$ff) goto main::@15
  to:main::@6
main::@15: scope:[main]  from main::@9
  [45] phi()
  to:main::@6
main::@5: scope:[main]  from main::@3
  [46] main::x#1 = ++ main::x#11
  [47] if(main::x#1!=$28) goto main::@17
  to:main::@6
main::@17: scope:[main]  from main::@5
  [48] phi()
  to:main::@6

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from main main::@10 main::@11
  [49] memset::c#5 = phi( main/$a0, main::@10/0, main::@11/0 )
  [49] memset::str#4 = phi( main/(void *)DEFAULT_SCREEN, main::@10/(void *)DEFAULT_COLORRAM, main::@11/(void *)VISITS )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [50] memset::end#0 = (char *)memset::str#4 + $3e8
  [51] memset::dst#4 = (char *)memset::str#4
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [52] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [53] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [54] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [55] *memset::dst#2 = memset::c#5
  [56] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

unsigned int rand()
rand: scope:[rand]  from main::@2
  [57] rand::$0 = rand_state << 7
  [58] rand_state = rand_state ^ rand::$0
  [59] rand::$1 = rand_state >> 9
  [60] rand_state = rand_state ^ rand::$1
  [61] rand::$2 = rand_state << 8
  [62] rand_state = rand_state ^ rand::$2
  [63] rand::return#0 = rand_state
  to:rand::@return
rand::@return: scope:[rand]  from rand
  [64] return 
  to:@return
