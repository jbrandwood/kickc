(const byte) MOVE_TO = (byte) 0
(const byte) OFFSET_STRUCT_SEGMENT_TO = (byte) 1
(const byte) OFFSET_STRUCT_VECTOR_Y = (byte) 2
(const nomodify signed word*) SCREEN = (signed word*) 1024
(const byte) SIZEOF_STRUCT_VECTOR = (byte) 4
(const byte) SPLINE_TO = (byte) 1
(const byte) Segment::SegmentType::LINE_TO = (byte) 2
(const byte) Segment::SegmentType::MOVE_TO = (byte) 0
(const byte) Segment::SegmentType::SPLINE_TO = (byte) 1
(struct Vector) Segment::to
(byte) Segment::type
(struct Vector) Segment::via
(signed word) Vector::x
(signed word) Vector::y
(const struct Segment*) letter_c[]  = { { type: (const byte) MOVE_TO, to: { x: (signed word)(byte) 'a', y: (signed word)(byte) 'b' }, via: { x: (signed word) 0, y: (signed word) 0 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word)(byte) 'c', y: (signed word)(byte) 'd' }, via: { x: (signed word) $67, y: (signed word) $a9 } }, { type: (const byte) SPLINE_TO, to: { x: (signed word)(byte) 'e', y: (signed word)(byte) 'f' }, via: { x: (signed word) $4b, y: (signed word) $c3 } } }
(void()) main()
(byte~) main::$1 reg byte a 11.0
(byte~) main::$2 reg byte a 22.0
(byte~) main::$3 reg byte a 22.0
(byte~) main::$4 reg byte a 22.0
(label) main::@1
(label) main::@return
(byte) main::i
(byte) main::i#1 i zp[1]:2 16.5
(byte) main::i#2 i zp[1]:2 4.4
(byte) main::j
(byte) main::j#1 reg byte x 11.0
(byte) main::j#2 j zp[1]:3 7.333333333333333
(byte) main::j#3 j zp[1]:3 5.5
(struct Vector) main::to loadstore zp[4]:4

zp[1]:2 [ main::i#2 main::i#1 ]
zp[1]:3 [ main::j#3 main::j#2 ]
reg byte a [ main::$4 ]
reg byte a [ main::$1 ]
reg byte a [ main::$2 ]
reg byte x [ main::j#1 ]
reg byte a [ main::$3 ]
zp[4]:4 [ main::to ]
