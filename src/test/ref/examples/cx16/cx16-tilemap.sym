__constant const char BLACK = 0
__constant const char BLUE = 6
char CONIO_SCREEN_BANK
char CONIO_SCREEN_BANK#14 // CONIO_SCREEN_BANK zp[1]:5 625000.0625
char CONIO_SCREEN_BANK#17 // CONIO_SCREEN_BANK_1 zp[1]:71 62.358024691358025
char *CONIO_SCREEN_TEXT
char *CONIO_SCREEN_TEXT#101 // CONIO_SCREEN_TEXT zp[2]:3 1.852037055555561E13
unsigned int CONIO_SCREEN_TEXT#103 // CONIO_SCREEN_TEXT_1 zp[2]:72 0.6392405063291139
__constant const char DARK_GREY = $b
__constant const char GREEN = 5
__constant const char GREY = $c
__constant void (** const KERNEL_IRQ)() = (void (**)()) 788
__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
__constant char SIZEOF_POINTER = 2
__constant unsigned int STACK_BASE = $103
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *) 40738
__constant char * const VERA_ADDRX_L = (char *) 40736
__constant char * const VERA_ADDRX_M = (char *) 40737
__constant char * const VERA_CTRL = (char *) 40741
__constant char * const VERA_DATA0 = (char *) 40739
__constant char * const VERA_DATA1 = (char *) 40740
__constant char * const VERA_DC_HSCALE = (char *) 40746
__constant char * const VERA_DC_VIDEO = (char *) 40745
__constant char * const VERA_DC_VSCALE = (char *) 40747
__constant char * const VERA_IEN = (char *) 40742
__constant const char VERA_INC_1 = $10
__constant char * const VERA_ISR = (char *) 40743
__constant char * const VERA_L0_CONFIG = (char *) 40749
__constant char * const VERA_L0_HSCROLL_H = (char *) 40753
__constant char * const VERA_L0_HSCROLL_L = (char *) 40752
__constant char * const VERA_L0_MAPBASE = (char *) 40750
__constant char * const VERA_L0_TILEBASE = (char *) 40751
__constant char * const VERA_L0_VSCROLL_H = (char *) 40755
__constant char * const VERA_L0_VSCROLL_L = (char *) 40754
__constant char * const VERA_L1_CONFIG = (char *) 40756
__constant char * const VERA_L1_HSCROLL_H = (char *) 40760
__constant char * const VERA_L1_HSCROLL_L = (char *) 40759
__constant char * const VERA_L1_MAPBASE = (char *) 40757
__constant char * const VERA_L1_TILEBASE = (char *) 40758
__constant char * const VERA_L1_VSCROLL_H = (char *) 40762
__constant char * const VERA_L1_VSCROLL_L = (char *) 40761
__constant const char VERA_LAYER0_ENABLE = $10
__constant const char VERA_LAYER1_ENABLE = $20
__constant const char VERA_LAYER_COLOR_DEPTH_1BPP = 0
__constant const char VERA_LAYER_CONFIG_256C = 8
__constant const unsigned int VERA_LAYER_HEIGHT[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_HEIGHT_128 = $80
__constant const char VERA_LAYER_HEIGHT_256 = $c0
__constant const char VERA_LAYER_HEIGHT_64 = $40
__constant const char VERA_LAYER_HEIGHT_MASK = $c0
__constant const char VERA_LAYER_TILEBASE_MASK = $fc
__constant const unsigned int VERA_LAYER_WIDTH[4] = { $20, $40, $80, $100 }
__constant const char VERA_LAYER_WIDTH_128 = $20
__constant const char VERA_LAYER_WIDTH_256 = $30
__constant const char VERA_LAYER_WIDTH_64 = $10
__constant const char VERA_LAYER_WIDTH_MASK = $30
__constant const char VERA_TILEBASE_HEIGHT_16 = 2
__constant const char VERA_TILEBASE_WIDTH_16 = 1
__constant const char VERA_VSYNC = 1
__constant const char WHITE = 1
__constant const char YELLOW = 7
void __start()
void clearline()
char clearline::$1 // reg byte a 2.00000000002E11
char clearline::$2 // reg byte a 2.00000000002E11
char clearline::$5 // reg byte a 2.00000000002E11
char *clearline::addr
char *clearline::addr#0 // addr zp[2]:97 1.00000000001E11
unsigned int clearline::c
unsigned int clearline::c#1 // c zp[2]:63 2.0E16
unsigned int clearline::c#2 // c zp[2]:63 7.5E15
char clearline::color
char clearline::color#0 // reg byte x 1.6666833333333335E15
void clrscr()
char clrscr::$0 // reg byte a 2002.0
char clrscr::$1 // zp[1]:80 400.4
char clrscr::$2 // reg byte a 2002.0
char clrscr::$5 // reg byte a 20002.0
char clrscr::$6 // reg byte a 20002.0
char clrscr::$7 // reg byte a 20002.0
char clrscr::$9 // reg byte a 2002.0
char clrscr::c
char clrscr::c#1 // reg byte y 200002.0
char clrscr::c#2 // reg byte y 75000.75
char *clrscr::ch
char clrscr::color
char clrscr::color#0 // color zp[1]:80 5941.294117647059
char clrscr::l
char clrscr::l#1 // reg byte x 20002.0
char clrscr::l#2 // reg byte x 2000.2
char *clrscr::line_text
char *clrscr::line_text#0 // line_text zp[2]:33 182.0
char *clrscr::line_text#1 // line_text zp[2]:33 10001.0
char *clrscr::line_text#2 // line_text zp[2]:33 2928.9285714285716
__constant char conio_cursor_x[2] = { 0, 0 }
__constant char conio_cursor_y[2] = { 0, 0 }
__loadstore unsigned int conio_height // zp[2]:40 4717028.797169811
__constant unsigned int conio_line_text[2] = { 0, 0 }
__loadstore char conio_rowshift // zp[1]:42 4.651209302326069E12
__loadstore unsigned int conio_rowskip // zp[2]:43 4.2194097046839917E12
__loadstore volatile char conio_screen_height // zp[1]:36 5.217391316086956E7
__loadstore char conio_screen_layer // zp[1]:37 1.1414285912225914E9
__loadstore volatile char conio_screen_width // zp[1]:35 3.773592456603776E13
__constant char conio_scroll_enable[2] = { 1, 1 }
__loadstore unsigned int conio_width // zp[2]:38 47196.7523364486
void conio_x16_init()
__constant char * const conio_x16_init::BASIC_CURSOR_LINE = (char *) 214
char conio_x16_init::line
char conio_x16_init::line#0 // line zp[1]:2 2.1999999999999997
char conio_x16_init::line#1 // line zp[1]:2 22.0
char conio_x16_init::line#3 // line zp[1]:2 33.0
__stackcall void cputc(char c)
char cputc::$15 // reg byte a 2.0000002E7
unsigned int cputc::$16 // zp[2]:65 2.0000002E7
char cputc::$2 // reg byte a 2.0000002E7
char cputc::$4 // reg byte a 2.0000002E7
char cputc::$5 // reg byte a 2.0000002E7
char cputc::$6 // reg byte a 2.0000002E7
__constant char cputc::OFFSET_STACK_C = 0
char cputc::c
char cputc::c#0 // c zp[1]:80 1764706.0588235296
char cputc::color
char cputc::color#0 // reg byte x 1428571.5714285714
char *cputc::conio_addr
char *cputc::conio_addr#0 // conio_addr zp[2]:63 1.0000001E7
char *cputc::conio_addr#1 // conio_addr zp[2]:63 6000000.6
char cputc::scroll_enable
char cputc::scroll_enable#0 // reg byte a 2.0000002E7
void cputln()
char cputln::$2 // reg byte a 2.00000002E8
char cputln::$3 // reg byte a 2.00000002E8
unsigned int cputln::temp
unsigned int cputln::temp#0 // temp zp[2]:78 2.00000002E8
unsigned int cputln::temp#1 // temp zp[2]:78 1.00000001E8
void cscroll()
__loadstore volatile int delta_x // zp[2]:49 120.0
__loadstore volatile int delta_y // zp[2]:51 12.0
void draw_characters(unsigned long tilebase)
char draw_characters::$2 // reg byte x 2000002.0
char draw_characters::$3 // reg byte a 2000002.0
char draw_characters::$7 // reg byte a 1000001.0
char draw_characters::b
char draw_characters::b#1 // b zp[1]:32 1500001.5
char draw_characters::b#2 // b zp[1]:32 300000.30000000005
char draw_characters::bit
char draw_characters::bit#0 // bit zp[1]:87 84615.53846153845
char draw_characters::bit#1 // reg byte a 2000002.0
char draw_characters::data
char draw_characters::r
char draw_characters::r#1 // r zp[1]:26 15001.5
char draw_characters::r#11 // r zp[1]:26 740.8148148148148
unsigned long draw_characters::tilebase
unsigned long draw_characters::tilebase#0 // tilebase zp[4]:17 22.0
unsigned long draw_characters::tilebase#1 // tilebase zp[4]:17 22.0
unsigned long draw_characters::tilebase#2 // tilebase zp[4]:17 22.0
unsigned long draw_characters::tilebase#3 // tilebase zp[4]:17 667.3333333333334
unsigned long draw_characters::tilebase#4 // tilebase zp[4]:17 67.0
unsigned long draw_characters::tilecolumn
unsigned long draw_characters::tilecolumn#1 // tilecolumn zp[4]:22 1192.4615384615383
unsigned long draw_characters::tilecolumn#10 // tilecolumn_1 zp[4]:27 24286.0
unsigned long draw_characters::tilecolumn#11 // tilecolumn zp[4]:22 2002.0
unsigned long draw_characters::tilecolumn#13 // tilecolumn_1 zp[4]:27 20002.0
unsigned long draw_characters::tilecolumn#2 // tilecolumn_1 zp[4]:27 66667.33333333333
unsigned long draw_characters::tilerow
unsigned long draw_characters::tilerow#1 // tilerow zp[4]:17 100.12903225806451
unsigned long draw_characters::tilerow#2 // tilerow_1 zp[4]:22 6667.333333333333
char draw_characters::vera_vram_address01_$0 // reg byte a 200002.0
char draw_characters::vera_vram_address01_$1 // reg byte a 200002.0
char draw_characters::vera_vram_address01_$3 // reg byte a 200002.0
unsigned long draw_characters::vera_vram_address01_bankaddr
char draw_characters::vera_vram_address01_incr
char draw_characters::x
char draw_characters::x#1 // x zp[1]:31 150001.5
char draw_characters::x#7 // x zp[1]:31 9091.0
char draw_characters::y
char draw_characters::y#1 // y zp[1]:21 1501.5
char draw_characters::y#13 // y zp[1]:21 62.5625
void gotoxy(char x , char y)
char gotoxy::$5 // reg byte a 2.0000000002E10
unsigned int gotoxy::$6 // zp[2]:76 2.0000000002E10
unsigned int gotoxy::line_offset
unsigned int gotoxy::line_offset#0 // line_offset zp[2]:76 1.0000000001E10
char gotoxy::x
char gotoxy::y
char gotoxy::y#1 // reg byte x 22.0
char gotoxy::y#2 // reg byte x 2.000000002E9
char gotoxy::y#4 // reg byte x 7.000000004666666E9
char gotoxy::y#5 // reg byte x 4.0000000004E9
void insertup()
char insertup::$3 // reg byte a 2.000000000000002E15
char insertup::cy
char insertup::cy#0 // cy zp[1]:91 8.333416666666684E13
char insertup::i
char insertup::i#1 // reg byte x 2.000000000000002E15
char insertup::i#2 // reg byte x 4.444444444444449E14
unsigned int insertup::line
unsigned int insertup::line#0 // line zp[2]:93 2.000000000000002E15
char *insertup::start
char *insertup::start#0 // start zp[2]:93 1.000000000000001E15
char insertup::width
char insertup::width#0 // width zp[1]:92 9.091000000000019E13
__interrupt(rom_sys_cx16) void irq_vsync()
int irq_vsync::$10 // zp[2]:55 4.0
int irq_vsync::$11 // zp[2]:57 4.0
char irq_vsync::vera_layer_set_horizontal_scroll1_$0 // reg byte a 4.0
char irq_vsync::vera_layer_set_horizontal_scroll1_$1 // reg byte a 4.0
char irq_vsync::vera_layer_set_horizontal_scroll1_layer
unsigned int irq_vsync::vera_layer_set_horizontal_scroll1_scroll
unsigned int irq_vsync::vera_layer_set_horizontal_scroll1_scroll#0 // vera_layer_set_horizontal_scroll1_scroll zp[2]:59 2.0
char irq_vsync::vera_layer_set_vertical_scroll1_$0 // reg byte a 4.0
char irq_vsync::vera_layer_set_vertical_scroll1_$1 // reg byte a 4.0
char irq_vsync::vera_layer_set_vertical_scroll1_layer
unsigned int irq_vsync::vera_layer_set_vertical_scroll1_scroll
unsigned int irq_vsync::vera_layer_set_vertical_scroll1_scroll#0 // vera_layer_set_vertical_scroll1_scroll zp[2]:61 2.0
char kbhit()
__constant char * const kbhit::GETIN = (char *) 65508
__constant char * const kbhit::IN_DEV = (char *) 650
__loadstore volatile char kbhit::ch // zp[1]:88 1001.0
__constant char * const kbhit::chptr = &kbhit::ch
char kbhit::return
char kbhit::return#0 // reg byte a 2002.0
char kbhit::return#1 // reg byte a 300.75
char kbhit::return#2 // reg byte a 202.0
char kbhit::return#3 // reg byte a 202.0
void main()
char main::$39 // reg byte a 202.0
char main::$41 // reg byte a 202.0
char main::bgcolor1_color
char main::bgcolor2_color
char main::bgcolor3_color
char main::bgcolor4_color
char main::bgcolor5_color
__constant char main::s[$3f] = "

this demo displays the design of the standard x16 commander
"
__constant char main::s1[$4f] = "character set on the vera layer 0. it's the character set i grew up with :-).
"
__constant char main::s2[$45] = "
the smooth scrolling is implemented by manipulating the scrolling 
"
__constant char main::s3[$37] = "registers of layer 0. at each raster line interrupt, 
"
__constant char main::s4[$45] = "the x and y scrolling registers are manipulated. the cx16 terminal 
"
__constant char main::s5[$40] = "works on layer 1. when layer 0 is enabled with the scrolling, 
"
__constant char main::s6[$4c] = "it gives a nice background effect. this technique can be used to implement
"
__constant char main::s7[$44] = "smooth scrolling backgrounds using tile layouts in games or demos.
"
__constant char main::s8[$1d] = "
press a key to continue ..."
char main::textcolor1_color
char main::textcolor2_color
char main::textcolor3_color
char main::textcolor4_color
char main::textcolor5_color
char main::textcolor6_color
unsigned long main::tilebase
unsigned long main::tilebase#0 // tilebase zp[4]:67 0.7746478873239436
char main::vera_layer_hide1_$0 // reg byte a 22.0
char main::vera_layer_hide1_layer
char main::vera_layer_hide2_$0 // reg byte a 22.0
char main::vera_layer_hide2_layer
char main::vera_layer_show1_layer
char main::vera_layer_show2_layer
char main::vera_layer_show3_layer
void memcpy_in_vram(char dest_bank , void *dest , char dest_increment , char src_bank , void *src , char src_increment , unsigned int num)
char memcpy_in_vram::$0 // reg byte a 2.0E16
char memcpy_in_vram::$1 // reg byte a 2.0E16
char memcpy_in_vram::$3 // reg byte a 2.0E16
char memcpy_in_vram::$4 // reg byte a 2.0E16
void *memcpy_in_vram::dest
void *memcpy_in_vram::dest#0 // dest zp[2]:93 1.9090909090909092E15
char memcpy_in_vram::dest_bank
char memcpy_in_vram::dest_increment
unsigned int memcpy_in_vram::i
unsigned int memcpy_in_vram::i#1 // i zp[2]:63 2.0E22
unsigned int memcpy_in_vram::i#2 // i zp[2]:63 1.0E22
unsigned int memcpy_in_vram::num
unsigned int memcpy_in_vram::num#0 // num zp[2]:95 5.882353529411765E20
void *memcpy_in_vram::src
char *memcpy_in_vram::src#0 // src zp[2]:97 1.6666666666666684E14
char memcpy_in_vram::src_bank
char memcpy_in_vram::src_increment
void printf_str(void (*putc)(char) , const char *s)
char printf_str::c
char printf_str::c#1 // reg byte a 1001.0
void (*printf_str::putc)(char)
const char *printf_str::s
const char *printf_str::s#0 // s zp[2]:33 400.4
const char *printf_str::s#10 // s zp[2]:33 1552.0
const char *printf_str::s#11 // s zp[2]:33 101.0
void screenlayer(char layer)
unsigned int screenlayer::$2 // zp[2]:89 202.0
char screenlayer::$3 // reg byte a 202.0
unsigned int screenlayer::$4 // zp[2]:76 202.0
unsigned int screenlayer::$5 // zp[2]:85 202.0
char screenlayer::layer
char screenlayer::layer#5 // reg byte a 101.0
char screenlayer::vera_layer_get_height1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_height1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_height1_config
char *screenlayer::vera_layer_get_height1_config#0 // vera_layer_get_height1_config zp[2]:81 202.0
char screenlayer::vera_layer_get_height1_layer
char screenlayer::vera_layer_get_height1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_height1_return
unsigned int screenlayer::vera_layer_get_height1_return#0 // vera_layer_get_height1_return zp[2]:85 202.0
unsigned int screenlayer::vera_layer_get_height1_return#1 // vera_layer_get_height1_return zp[2]:85 202.0
char screenlayer::vera_layer_get_width1_$0 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$1 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$2 // reg byte a 202.0
char screenlayer::vera_layer_get_width1_$3 // reg byte a 202.0
char *screenlayer::vera_layer_get_width1_config
char *screenlayer::vera_layer_get_width1_config#0 // vera_layer_get_width1_config zp[2]:74 202.0
char screenlayer::vera_layer_get_width1_layer
char screenlayer::vera_layer_get_width1_layer#0 // reg byte a 202.0
unsigned int screenlayer::vera_layer_get_width1_return
unsigned int screenlayer::vera_layer_get_width1_return#0 // vera_layer_get_width1_return zp[2]:89 202.0
unsigned int screenlayer::vera_layer_get_width1_return#1 // vera_layer_get_width1_return zp[2]:89 202.0
void screensize(char *x , char *y)
char screensize::$1 // reg byte a 202.0
char screensize::$3 // reg byte a 202.0
char screensize::hscale
char screensize::hscale#0 // reg byte a 202.0
char screensize::vscale
char screensize::vscale#0 // reg byte a 202.0
char *screensize::x
__constant char *screensize::x#0 = &conio_screen_width // x
char *screensize::y
__constant char *screensize::y#0 = &conio_screen_height // y
char scroll(char onoff)
char scroll::old
char scroll::onoff
__constant char scroll::onoff#0 = 0 // onoff
char scroll::return
__loadstore volatile int scroll_x // zp[2]:45 0.9333333333333332
__loadstore volatile int scroll_y // zp[2]:47 0.7
__loadstore volatile int speed // zp[2]:53 0.5882352941176471
__constant char vera_layer_backcolor[2] = { BLUE, BLUE }
__constant char *vera_layer_config[2] = { VERA_L0_CONFIG, VERA_L1_CONFIG }
__constant char vera_layer_enable[2] = { VERA_LAYER0_ENABLE, VERA_LAYER1_ENABLE }
char vera_layer_get_backcolor(char layer)
char vera_layer_get_backcolor::layer
char vera_layer_get_backcolor::layer#0 // reg byte x 11002.0
char vera_layer_get_backcolor::return
char vera_layer_get_backcolor::return#0 // reg byte a 2002.0
char vera_layer_get_backcolor::return#1 // reg byte a 3667.333333333333
char vera_layer_get_color(char layer)
char vera_layer_get_color::$0 // reg byte a 2.000000000002E12
char vera_layer_get_color::$1 // reg byte a 2.000000000002E12
char vera_layer_get_color::$3 // reg byte a 2.000000000002E12
char *vera_layer_get_color::addr
char *vera_layer_get_color::addr#0 // addr zp[2]:78 2.000000000002E12
char vera_layer_get_color::layer
char vera_layer_get_color::layer#0 // reg byte x 2.0000002E7
char vera_layer_get_color::layer#1 // reg byte x 2.00000000002E11
char vera_layer_get_color::layer#2 // reg byte x 6.833350000010001E11
char vera_layer_get_color::return
char vera_layer_get_color::return#0 // reg byte a 2.0000002E7
char vera_layer_get_color::return#1 // reg byte a 2.000000000002E12
char vera_layer_get_color::return#2 // reg byte a 2.000000000002E12
char vera_layer_get_color::return#3 // reg byte a 5.25002500001E11
char vera_layer_get_color::return#4 // reg byte a 2.00000000002E11
char vera_layer_get_mapbase_bank(char layer)
char vera_layer_get_mapbase_bank::layer
char vera_layer_get_mapbase_bank::layer#0 // reg byte x 1102.0
char vera_layer_get_mapbase_bank::return
char vera_layer_get_mapbase_bank::return#0 // reg byte a 367.33333333333337
char vera_layer_get_mapbase_bank::return#2 // reg byte a 202.0
unsigned int vera_layer_get_mapbase_offset(char layer)
char vera_layer_get_mapbase_offset::$0 // reg byte a 2002.0
char vera_layer_get_mapbase_offset::layer
char vera_layer_get_mapbase_offset::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_mapbase_offset::return
unsigned int vera_layer_get_mapbase_offset::return#0 // return zp[2]:76 367.33333333333337
unsigned int vera_layer_get_mapbase_offset::return#2 // return zp[2]:76 202.0
char vera_layer_get_rowshift(char layer)
char vera_layer_get_rowshift::layer
char vera_layer_get_rowshift::layer#0 // reg byte x 1102.0
char vera_layer_get_rowshift::return
char vera_layer_get_rowshift::return#0 // reg byte a 367.33333333333337
char vera_layer_get_rowshift::return#2 // reg byte a 202.0
unsigned int vera_layer_get_rowskip(char layer)
char vera_layer_get_rowskip::$0 // reg byte a 2002.0
char vera_layer_get_rowskip::layer
char vera_layer_get_rowskip::layer#0 // reg byte a 1102.0
unsigned int vera_layer_get_rowskip::return
unsigned int vera_layer_get_rowskip::return#0 // return zp[2]:76 367.33333333333337
unsigned int vera_layer_get_rowskip::return#2 // return zp[2]:76 202.0
char vera_layer_get_textcolor(char layer)
char vera_layer_get_textcolor::layer
char vera_layer_get_textcolor::layer#0 // reg byte x 11002.0
char vera_layer_get_textcolor::return
char vera_layer_get_textcolor::return#0 // reg byte a 2002.0
char vera_layer_get_textcolor::return#1 // reg byte a 3667.333333333333
unsigned long vera_layer_get_tilebase_address(char layer)
unsigned long vera_layer_get_tilebase_address::address
unsigned long vera_layer_get_tilebase_address::address#0 // address zp[4]:67 202.0
unsigned long vera_layer_get_tilebase_address::address#1 // address zp[4]:67 202.0
unsigned long vera_layer_get_tilebase_address::address#2 // address zp[4]:67 202.0
char vera_layer_get_tilebase_address::layer
__constant char vera_layer_get_tilebase_address::layer#0 = 1 // layer
unsigned long vera_layer_get_tilebase_address::return
unsigned long vera_layer_get_tilebase_address::return#0 // return zp[4]:67 37.33333333333333
unsigned long vera_layer_get_tilebase_address::return#2 // return zp[4]:67 22.0
char vera_layer_get_tilebase_address::tilebase
char vera_layer_get_tilebase_address::tilebase#0 // reg byte a 101.0
__constant char *vera_layer_hscroll_h[2] = { VERA_L0_HSCROLL_H, VERA_L1_HSCROLL_H }
__constant char *vera_layer_hscroll_l[2] = { VERA_L0_HSCROLL_L, VERA_L1_HSCROLL_L }
__constant char *vera_layer_mapbase[2] = { VERA_L0_MAPBASE, VERA_L1_MAPBASE }
void vera_layer_mode_text(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , unsigned int color_mode)
unsigned int vera_layer_mode_text::color_mode
char vera_layer_mode_text::layer
__constant char vera_layer_mode_text::layer#0 = 1 // layer
unsigned long vera_layer_mode_text::mapbase_address
__constant unsigned long vera_layer_mode_text::mapbase_address#0 = 0 // mapbase_address
unsigned int vera_layer_mode_text::mapheight
__constant unsigned int vera_layer_mode_text::mapheight#0 = $40 // mapheight
unsigned int vera_layer_mode_text::mapwidth
__constant unsigned int vera_layer_mode_text::mapwidth#0 = $80 // mapwidth
unsigned long vera_layer_mode_text::tilebase_address
__constant unsigned long vera_layer_mode_text::tilebase_address#0 = $f800 // tilebase_address
char vera_layer_mode_text::tileheight
__constant char vera_layer_mode_text::tileheight#0 = 8 // tileheight
char vera_layer_mode_text::tilewidth
__constant char vera_layer_mode_text::tilewidth#0 = 8 // tilewidth
void vera_layer_mode_tile(char layer , unsigned long mapbase_address , unsigned long tilebase_address , unsigned int mapwidth , unsigned int mapheight , char tilewidth , char tileheight , char color_depth)
unsigned int vera_layer_mode_tile::$1 // zp[2]:81 1001.0
char vera_layer_mode_tile::$11 // reg byte a 2002.0
char vera_layer_mode_tile::$12 // reg byte a 2002.0
char vera_layer_mode_tile::$13 // reg byte a 2002.0
char vera_layer_mode_tile::$14 // reg byte a 2002.0
char vera_layer_mode_tile::$17 // zp[1]:83 250.25
char vera_layer_mode_tile::$18 // zp[1]:84 273.0
char vera_layer_mode_tile::$2 // reg byte a 2002.0
unsigned int vera_layer_mode_tile::$6 // zp[2]:85 2002.0
char vera_layer_mode_tile::$7 // reg byte a 2002.0
char vera_layer_mode_tile::color_depth
char vera_layer_mode_tile::config
char vera_layer_mode_tile::config#10 // reg byte x 2002.0
char vera_layer_mode_tile::config#11 // reg byte x 2002.0
char vera_layer_mode_tile::config#12 // reg byte x 2002.0
char vera_layer_mode_tile::config#21 // reg byte x 1001.0
char vera_layer_mode_tile::config#25 // reg byte x 3003.0
char vera_layer_mode_tile::layer
char vera_layer_mode_tile::layer#10 // layer zp[1]:6 263.4210526315791
char vera_layer_mode_tile::mapbase
char vera_layer_mode_tile::mapbase#0 // reg byte x 1001.0
unsigned long vera_layer_mode_tile::mapbase_address
unsigned long vera_layer_mode_tile::mapbase_address#0 // mapbase_address zp[4]:7 2002.0
unsigned long vera_layer_mode_tile::mapbase_address#10 // mapbase_address zp[4]:7 111.22222222222223
unsigned int vera_layer_mode_tile::mapheight
unsigned int vera_layer_mode_tile::mapheight#10 // mapheight zp[2]:74 190.66666666666666
unsigned int vera_layer_mode_tile::mapwidth
unsigned int vera_layer_mode_tile::mapwidth#10 // mapwidth zp[2]:76 1001.0
char vera_layer_mode_tile::tilebase
char vera_layer_mode_tile::tilebase#0 // reg byte a 2002.0
char vera_layer_mode_tile::tilebase#1 // reg byte x 1334.6666666666667
char vera_layer_mode_tile::tilebase#10 // reg byte x 2002.0
char vera_layer_mode_tile::tilebase#12 // reg byte x 2002.0000000000002
char vera_layer_mode_tile::tilebase#3 // reg byte x 2002.0
char vera_layer_mode_tile::tilebase#5 // reg byte x 2002.0
unsigned long vera_layer_mode_tile::tilebase_address
unsigned long vera_layer_mode_tile::tilebase_address#0 // tilebase_address zp[4]:11 2002.0
unsigned long vera_layer_mode_tile::tilebase_address#10 // tilebase_address zp[4]:11 87.28260869565217
unsigned long vera_layer_mode_tile::tilebase_address#2 // tilebase_address zp[4]:11 22.0
char vera_layer_mode_tile::tileheight
char vera_layer_mode_tile::tileheight#10 // tileheight zp[1]:16 37.074074074074076
char vera_layer_mode_tile::tilewidth
char vera_layer_mode_tile::tilewidth#10 // tilewidth zp[1]:15 40.04
__constant char vera_layer_rowshift[2] = { 0, 0 }
__constant unsigned int vera_layer_rowskip[2] = { 0, 0 }
char vera_layer_set_backcolor(char layer , char color)
char vera_layer_set_backcolor::color
char vera_layer_set_backcolor::color#6 // reg byte a 101.0
char vera_layer_set_backcolor::layer
char vera_layer_set_backcolor::layer#1 // reg byte x 22.0
char vera_layer_set_backcolor::layer#2 // reg byte x 22.0
char vera_layer_set_backcolor::layer#3 // reg byte x 22.0
char vera_layer_set_backcolor::layer#4 // reg byte x 22.0
char vera_layer_set_backcolor::layer#5 // reg byte x 22.0
char vera_layer_set_backcolor::layer#6 // reg byte x 156.0
char vera_layer_set_backcolor::old
char vera_layer_set_backcolor::return
void vera_layer_set_config(char layer , char config)
char vera_layer_set_config::$0 // reg byte a 20002.0
char *vera_layer_set_config::addr
char *vera_layer_set_config::addr#0 // addr zp[2]:89 20002.0
char vera_layer_set_config::config
char vera_layer_set_config::config#0 // reg byte x 3667.333333333333
char vera_layer_set_config::layer
char vera_layer_set_config::layer#0 // reg byte a 5501.0
void vera_layer_set_mapbase(char layer , char mapbase)
char vera_layer_set_mapbase::$0 // reg byte a 20002.0
char *vera_layer_set_mapbase::addr
char *vera_layer_set_mapbase::addr#0 // addr zp[2]:89 20002.0
char vera_layer_set_mapbase::layer
char vera_layer_set_mapbase::layer#0 // reg byte a 1001.0
char vera_layer_set_mapbase::layer#3 // reg byte a 11002.0
char vera_layer_set_mapbase::mapbase
char vera_layer_set_mapbase::mapbase#0 // reg byte x 2002.0
char vera_layer_set_mapbase::mapbase#3 // reg byte x 3667.333333333333
void vera_layer_set_text_color_mode(char layer , char color_mode)
char *vera_layer_set_text_color_mode::addr
char *vera_layer_set_text_color_mode::addr#0 // addr zp[2]:89 2502.5
char vera_layer_set_text_color_mode::color_mode
char vera_layer_set_text_color_mode::layer
char vera_layer_set_textcolor(char layer , char color)
char vera_layer_set_textcolor::color
char vera_layer_set_textcolor::color#7 // reg byte a 101.0
char vera_layer_set_textcolor::layer
char vera_layer_set_textcolor::layer#1 // reg byte x 22.0
char vera_layer_set_textcolor::layer#2 // reg byte x 22.0
char vera_layer_set_textcolor::layer#3 // reg byte x 22.0
char vera_layer_set_textcolor::layer#4 // reg byte x 22.0
char vera_layer_set_textcolor::layer#5 // reg byte x 22.0
char vera_layer_set_textcolor::layer#6 // reg byte x 22.0
char vera_layer_set_textcolor::layer#7 // reg byte x 167.0
char vera_layer_set_textcolor::old
char vera_layer_set_textcolor::return
void vera_layer_set_tilebase(char layer , char tilebase)
char vera_layer_set_tilebase::$0 // reg byte a 20002.0
char *vera_layer_set_tilebase::addr
char *vera_layer_set_tilebase::addr#0 // addr zp[2]:89 20002.0
char vera_layer_set_tilebase::layer
char vera_layer_set_tilebase::layer#0 // reg byte a 5501.0
char vera_layer_set_tilebase::tilebase
char vera_layer_set_tilebase::tilebase#0 // reg byte x 3667.333333333333
__constant char vera_layer_textcolor[2] = { WHITE, WHITE }
__constant char *vera_layer_tilebase[2] = { VERA_L0_TILEBASE, VERA_L1_TILEBASE }
__constant char *vera_layer_vscroll_h[2] = { VERA_L0_VSCROLL_H, VERA_L1_VSCROLL_H }
__constant char *vera_layer_vscroll_l[2] = { VERA_L0_VSCROLL_L, VERA_L1_VSCROLL_L }
__constant unsigned long vera_mapbase_address[2] = { 0, 0 }
__constant char vera_mapbase_bank[2] = { 0, 0 }
__constant unsigned int vera_mapbase_offset[2] = { 0, 0 }
__constant unsigned long vera_tilebase_address[2] = { 0, 0 }
__constant char vera_tilebase_bank[2] = { 0, 0 }
__constant unsigned int vera_tilebase_offset[2] = { 0, 0 }

zp[1]:2 [ conio_x16_init::line#3 conio_x16_init::line#1 conio_x16_init::line#0 ]
zp[2]:3 [ CONIO_SCREEN_TEXT#101 ]
zp[1]:5 [ CONIO_SCREEN_BANK#14 ]
reg byte a [ screenlayer::layer#5 ]
reg byte x [ vera_layer_set_textcolor::layer#7 vera_layer_set_textcolor::layer#1 vera_layer_set_textcolor::layer#2 vera_layer_set_textcolor::layer#3 vera_layer_set_textcolor::layer#4 vera_layer_set_textcolor::layer#5 vera_layer_set_textcolor::layer#6 ]
reg byte a [ vera_layer_set_textcolor::color#7 ]
reg byte x [ vera_layer_set_backcolor::layer#6 vera_layer_set_backcolor::layer#1 vera_layer_set_backcolor::layer#2 vera_layer_set_backcolor::layer#3 vera_layer_set_backcolor::layer#4 vera_layer_set_backcolor::layer#5 ]
reg byte a [ vera_layer_set_backcolor::color#6 ]
reg byte a [ vera_layer_set_mapbase::layer#3 vera_layer_set_mapbase::layer#0 ]
reg byte x [ vera_layer_set_mapbase::mapbase#3 vera_layer_set_mapbase::mapbase#0 ]
reg byte x [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 gotoxy::y#2 ]
reg byte x [ vera_layer_get_color::layer#2 vera_layer_get_color::layer#1 vera_layer_get_color::layer#0 ]
reg byte a [ vera_layer_get_color::return#3 vera_layer_get_color::return#1 vera_layer_get_color::return#2 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:6 [ vera_layer_mode_tile::layer#10 ]
zp[4]:7 [ vera_layer_mode_tile::mapbase_address#10 vera_layer_mode_tile::mapbase_address#0 ]
zp[4]:11 [ vera_layer_mode_tile::tilebase_address#10 vera_layer_mode_tile::tilebase_address#2 vera_layer_mode_tile::tilebase_address#0 ]
zp[1]:15 [ vera_layer_mode_tile::tilewidth#10 ]
zp[1]:16 [ vera_layer_mode_tile::tileheight#10 ]
reg byte x [ vera_layer_mode_tile::config#25 vera_layer_mode_tile::config#21 vera_layer_mode_tile::config#10 vera_layer_mode_tile::config#11 vera_layer_mode_tile::config#12 ]
reg byte x [ vera_layer_mode_tile::tilebase#10 vera_layer_mode_tile::tilebase#12 vera_layer_mode_tile::tilebase#1 vera_layer_mode_tile::tilebase#3 vera_layer_mode_tile::tilebase#5 ]
zp[4]:17 [ draw_characters::tilerow#1 draw_characters::tilebase#3 draw_characters::tilebase#4 draw_characters::tilebase#1 draw_characters::tilebase#2 draw_characters::tilebase#0 ]
zp[1]:21 [ draw_characters::y#13 draw_characters::y#1 ]
zp[4]:22 [ draw_characters::tilecolumn#1 draw_characters::tilecolumn#11 draw_characters::tilerow#2 ]
zp[1]:26 [ draw_characters::r#11 draw_characters::r#1 ]
zp[4]:27 [ draw_characters::tilecolumn#10 draw_characters::tilecolumn#13 draw_characters::tilecolumn#2 ]
zp[1]:31 [ draw_characters::x#7 draw_characters::x#1 ]
zp[1]:32 [ draw_characters::b#2 draw_characters::b#1 ]
reg byte a [ draw_characters::$7 ]
zp[2]:33 [ printf_str::s#10 printf_str::s#11 printf_str::s#0 clrscr::line_text#2 clrscr::line_text#1 clrscr::line_text#0 ]
reg byte x [ insertup::i#2 insertup::i#1 ]
zp[1]:35 [ conio_screen_width ]
zp[1]:36 [ conio_screen_height ]
zp[1]:37 [ conio_screen_layer ]
zp[2]:38 [ conio_width ]
zp[2]:40 [ conio_height ]
zp[1]:42 [ conio_rowshift ]
zp[2]:43 [ conio_rowskip ]
zp[2]:45 [ scroll_x ]
zp[2]:47 [ scroll_y ]
zp[2]:49 [ delta_x ]
zp[2]:51 [ delta_y ]
zp[2]:53 [ speed ]
zp[2]:55 [ irq_vsync::$10 ]
zp[2]:57 [ irq_vsync::$11 ]
zp[2]:59 [ irq_vsync::vera_layer_set_horizontal_scroll1_scroll#0 ]
reg byte a [ irq_vsync::vera_layer_set_horizontal_scroll1_$0 ]
reg byte a [ irq_vsync::vera_layer_set_horizontal_scroll1_$1 ]
zp[2]:61 [ irq_vsync::vera_layer_set_vertical_scroll1_scroll#0 ]
reg byte a [ irq_vsync::vera_layer_set_vertical_scroll1_$0 ]
reg byte a [ irq_vsync::vera_layer_set_vertical_scroll1_$1 ]
reg byte a [ vera_layer_get_color::return#0 ]
reg byte x [ cputc::color#0 ]
reg byte a [ cputc::$15 ]
zp[2]:63 [ cputc::conio_addr#0 cputc::conio_addr#1 memcpy_in_vram::i#2 memcpy_in_vram::i#1 clearline::c#2 clearline::c#1 ]
reg byte a [ cputc::$2 ]
reg byte a [ cputc::$4 ]
reg byte a [ cputc::$5 ]
reg byte a [ cputc::$6 ]
reg byte a [ cputc::scroll_enable#0 ]
zp[2]:65 [ cputc::$16 ]
zp[4]:67 [ vera_layer_get_tilebase_address::return#2 main::tilebase#0 vera_layer_get_tilebase_address::return#0 vera_layer_get_tilebase_address::address#2 vera_layer_get_tilebase_address::address#0 vera_layer_get_tilebase_address::address#1 ]
reg byte a [ kbhit::return#2 ]
reg byte a [ main::$39 ]
reg byte a [ main::vera_layer_hide1_$0 ]
reg byte a [ kbhit::return#3 ]
reg byte a [ main::$41 ]
reg byte a [ main::vera_layer_hide2_$0 ]
reg byte a [ screensize::hscale#0 ]
reg byte a [ screensize::$1 ]
reg byte a [ screensize::vscale#0 ]
reg byte a [ screensize::$3 ]
reg byte x [ vera_layer_get_mapbase_bank::layer#0 ]
reg byte a [ vera_layer_get_mapbase_bank::return#2 ]
zp[1]:71 [ CONIO_SCREEN_BANK#17 ]
reg byte a [ vera_layer_get_mapbase_offset::layer#0 ]
zp[2]:72 [ CONIO_SCREEN_TEXT#103 ]
reg byte a [ screenlayer::vera_layer_get_width1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$2 ]
zp[2]:74 [ screenlayer::vera_layer_get_width1_config#0 vera_layer_mode_tile::mapheight#10 ]
reg byte a [ screenlayer::vera_layer_get_width1_$0 ]
reg byte a [ screenlayer::vera_layer_get_width1_$1 ]
reg byte a [ screenlayer::vera_layer_get_width1_$3 ]
reg byte x [ vera_layer_get_rowshift::layer#0 ]
reg byte a [ vera_layer_get_rowshift::return#2 ]
reg byte a [ screenlayer::$3 ]
reg byte a [ vera_layer_get_rowskip::layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_layer#0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$2 ]
reg byte a [ screenlayer::vera_layer_get_height1_$0 ]
reg byte a [ screenlayer::vera_layer_get_height1_$1 ]
reg byte a [ screenlayer::vera_layer_get_height1_$3 ]
reg byte a [ vera_layer_set_mapbase::$0 ]
zp[2]:76 [ gotoxy::$6 gotoxy::line_offset#0 vera_layer_get_rowskip::return#2 screenlayer::$4 vera_layer_get_rowskip::return#0 vera_layer_get_mapbase_offset::return#2 vera_layer_get_mapbase_offset::return#0 vera_layer_mode_tile::mapwidth#10 ]
reg byte a [ gotoxy::$5 ]
reg byte a [ vera_layer_get_color::$3 ]
reg byte a [ vera_layer_get_color::$0 ]
reg byte a [ vera_layer_get_color::$1 ]
reg byte a [ cputln::$2 ]
zp[2]:78 [ cputln::temp#0 cputln::temp#1 vera_layer_get_color::addr#0 ]
reg byte a [ cputln::$3 ]
reg byte x [ vera_layer_get_backcolor::layer#0 ]
reg byte a [ vera_layer_get_backcolor::return#0 ]
reg byte a [ clrscr::$0 ]
zp[1]:80 [ clrscr::$1 clrscr::color#0 cputc::c#0 ]
reg byte x [ vera_layer_get_textcolor::layer#0 ]
reg byte a [ vera_layer_get_textcolor::return#0 ]
reg byte a [ clrscr::$2 ]
reg byte a [ clrscr::$9 ]
reg byte a [ clrscr::$5 ]
reg byte a [ clrscr::$6 ]
reg byte a [ clrscr::$7 ]
reg byte a [ vera_layer_get_tilebase_address::tilebase#0 ]
reg byte a [ vera_layer_mode_tile::$14 ]
reg byte a [ vera_layer_set_config::layer#0 ]
reg byte x [ vera_layer_set_config::config#0 ]
zp[2]:81 [ vera_layer_mode_tile::$1 screenlayer::vera_layer_get_height1_config#0 ]
zp[1]:83 [ vera_layer_mode_tile::$17 ]
reg byte a [ vera_layer_mode_tile::$2 ]
zp[1]:84 [ vera_layer_mode_tile::$18 ]
reg byte x [ vera_layer_mode_tile::mapbase#0 ]
zp[2]:85 [ vera_layer_mode_tile::$6 screenlayer::vera_layer_get_height1_return#0 screenlayer::vera_layer_get_height1_return#1 screenlayer::$5 ]
reg byte a [ vera_layer_mode_tile::$7 ]
reg byte a [ vera_layer_mode_tile::tilebase#0 ]
reg byte a [ vera_layer_set_tilebase::layer#0 ]
reg byte x [ vera_layer_set_tilebase::tilebase#0 ]
reg byte a [ vera_layer_mode_tile::$13 ]
reg byte a [ vera_layer_mode_tile::$12 ]
reg byte a [ vera_layer_mode_tile::$11 ]
reg byte a [ draw_characters::vera_vram_address01_$0 ]
reg byte a [ draw_characters::vera_vram_address01_$1 ]
reg byte a [ draw_characters::vera_vram_address01_$3 ]
zp[1]:87 [ draw_characters::bit#0 ]
reg byte x [ draw_characters::$2 ]
reg byte a [ draw_characters::$3 ]
reg byte a [ draw_characters::bit#1 ]
zp[1]:88 [ kbhit::ch ]
reg byte a [ kbhit::return#0 ]
reg byte a [ kbhit::return#1 ]
reg byte a [ printf_str::c#1 ]
reg byte a [ vera_layer_get_mapbase_bank::return#0 ]
reg byte a [ vera_layer_get_mapbase_offset::$0 ]
reg byte a [ vera_layer_get_rowshift::return#0 ]
reg byte a [ vera_layer_get_rowskip::$0 ]
reg byte a [ vera_layer_get_backcolor::return#1 ]
reg byte a [ vera_layer_get_textcolor::return#1 ]
reg byte a [ vera_layer_set_config::$0 ]
reg byte a [ vera_layer_set_tilebase::$0 ]
zp[2]:89 [ vera_layer_set_tilebase::addr#0 vera_layer_set_config::addr#0 vera_layer_set_text_color_mode::addr#0 vera_layer_set_mapbase::addr#0 screenlayer::vera_layer_get_width1_return#0 screenlayer::vera_layer_get_width1_return#1 screenlayer::$2 ]
zp[1]:91 [ insertup::cy#0 ]
zp[1]:92 [ insertup::width#0 ]
reg byte a [ insertup::$3 ]
zp[2]:93 [ insertup::line#0 insertup::start#0 memcpy_in_vram::dest#0 ]
zp[2]:95 [ memcpy_in_vram::num#0 ]
reg byte a [ clearline::$5 ]
zp[2]:97 [ clearline::addr#0 memcpy_in_vram::src#0 ]
reg byte a [ clearline::$1 ]
reg byte a [ clearline::$2 ]
reg byte a [ vera_layer_get_color::return#4 ]
reg byte x [ clearline::color#0 ]
reg byte a [ memcpy_in_vram::$0 ]
reg byte a [ memcpy_in_vram::$1 ]
reg byte a [ memcpy_in_vram::$3 ]
reg byte a [ memcpy_in_vram::$4 ]
