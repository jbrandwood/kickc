(const nomodify byte*) CHARSET = (byte*) 8192
(const nomodify byte*) COLS = (byte*) 55296
(const word*) CORDIC_ATAN2_ANGLES_16[(const nomodify byte) CORDIC_ITERATIONS_16]  = kickasm {{ .for (var i=0; i<CORDIC_ITERATIONS_16; i++)
        .word 256*2*256*atan(1/pow(2,i))/PI/2
 }}
(const nomodify byte) CORDIC_ITERATIONS_16 = (byte) $f
(const nomodify byte*) D018 = (byte*) 53272
(const byte*) FONT_HEX_PROTO[]  = { (byte) 2, (byte) 5, (byte) 5, (byte) 5, (byte) 2, (byte) 6, (byte) 2, (byte) 2, (byte) 2, (byte) 7, (byte) 6, (byte) 1, (byte) 2, (byte) 4, (byte) 7, (byte) 6, (byte) 1, (byte) 2, (byte) 1, (byte) 6, (byte) 5, (byte) 5, (byte) 7, (byte) 1, (byte) 1, (byte) 7, (byte) 4, (byte) 6, (byte) 1, (byte) 6, (byte) 3, (byte) 4, (byte) 6, (byte) 5, (byte) 2, (byte) 7, (byte) 1, (byte) 1, (byte) 1, (byte) 1, (byte) 2, (byte) 5, (byte) 2, (byte) 5, (byte) 2, (byte) 2, (byte) 5, (byte) 3, (byte) 1, (byte) 1, (byte) 2, (byte) 5, (byte) 7, (byte) 5, (byte) 5, (byte) 6, (byte) 5, (byte) 6, (byte) 5, (byte) 6, (byte) 2, (byte) 5, (byte) 4, (byte) 5, (byte) 2, (byte) 6, (byte) 5, (byte) 5, (byte) 5, (byte) 6, (byte) 7, (byte) 4, (byte) 6, (byte) 4, (byte) 7, (byte) 7, (byte) 4, (byte) 6, (byte) 4, (byte) 4 }
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const nomodify byte*) SCREEN = (byte*) 10240
(word()) atan2_16((signed word) atan2_16::x , (signed word) atan2_16::y)
(signed word~) atan2_16::$2 zp[2]:10 2002.0
(byte~) atan2_16::$22 reg byte a 2000002.0
(byte~) atan2_16::$23 reg byte a 2000002.0
(signed word~) atan2_16::$7 zp[2]:13 2002.0
(label) atan2_16::@1
(label) atan2_16::@10
(label) atan2_16::@11
(label) atan2_16::@12
(label) atan2_16::@13
(label) atan2_16::@14
(label) atan2_16::@15
(label) atan2_16::@16
(label) atan2_16::@17
(label) atan2_16::@18
(label) atan2_16::@19
(label) atan2_16::@2
(label) atan2_16::@20
(label) atan2_16::@21
(label) atan2_16::@3
(label) atan2_16::@4
(label) atan2_16::@5
(label) atan2_16::@6
(label) atan2_16::@7
(label) atan2_16::@8
(label) atan2_16::@9
(label) atan2_16::@return
(word) atan2_16::angle
(word) atan2_16::angle#1 angle zp[2]:6 1501.5
(word) atan2_16::angle#11 angle zp[2]:6 2002.0
(word) atan2_16::angle#12 angle zp[2]:6 190476.38095238095
(word) atan2_16::angle#13 angle zp[2]:6 1333334.6666666667
(word) atan2_16::angle#2 angle zp[2]:6 2000002.0
(word) atan2_16::angle#3 angle zp[2]:6 2000002.0
(word) atan2_16::angle#4 angle zp[2]:6 2002.0
(word) atan2_16::angle#5 angle zp[2]:6 2002.0
(word) atan2_16::angle#6 angle zp[2]:6 2001003.0
(byte) atan2_16::i
(byte) atan2_16::i#1 reg byte x 1500001.5
(byte) atan2_16::i#2 reg byte x 208333.5416666667
(word) atan2_16::return
(word) atan2_16::return#0 return zp[2]:6 701.0
(word) atan2_16::return#2 return zp[2]:6 202.0
(byte) atan2_16::shift
(byte) atan2_16::shift#1 reg byte y 2.0000002E7
(byte) atan2_16::shift#2 reg byte y 8000001.25
(byte) atan2_16::shift#5 reg byte y 666667.3333333334
(signed word) atan2_16::x
(signed word) atan2_16::x#0 x zp[2]:19 108.02631578947367
(signed word) atan2_16::xd
(signed word) atan2_16::xd#1 xd zp[2]:8 6666667.333333333
(signed word) atan2_16::xd#10 xd zp[2]:8 1000001.0
(signed word) atan2_16::xd#2 xd zp[2]:8 1000001.0
(signed word) atan2_16::xd#3 xd zp[2]:8 7666668.333333332
(signed word) atan2_16::xd#5 xd zp[2]:8 1000001.0
(signed word) atan2_16::xi
(signed word) atan2_16::xi#0 xi zp[2]:13 3003.0
(signed word) atan2_16::xi#1 xi zp[2]:13 500000.5
(signed word) atan2_16::xi#13 xi zp[2]:13 2002.0
(signed word) atan2_16::xi#2 xi zp[2]:13 500000.5
(signed word) atan2_16::xi#3 xi zp[2]:13 266733.6666666667
(signed word) atan2_16::xi#8 xi zp[2]:13 1000001.0
(signed word) atan2_16::y
(signed word) atan2_16::y#0 y zp[2]:21 102.625
(signed word) atan2_16::yd
(signed word) atan2_16::yd#1 yd zp[2]:15 1.0000001E7
(signed word) atan2_16::yd#10 yd zp[2]:15 2000002.0
(signed word) atan2_16::yd#2 yd zp[2]:15 2000002.0
(signed word) atan2_16::yd#3 yd zp[2]:15 4600001.0
(signed word) atan2_16::yd#5 yd zp[2]:15 2000002.0
(signed word) atan2_16::yi
(signed word) atan2_16::yi#0 yi zp[2]:10 600.5999999999999
(signed word) atan2_16::yi#1 yi zp[2]:10 666667.3333333334
(signed word) atan2_16::yi#16 yi zp[2]:10 2002.0
(signed word) atan2_16::yi#2 yi zp[2]:10 666667.3333333334
(signed word) atan2_16::yi#3 yi zp[2]:10 353000.41176470584
(signed word) atan2_16::yi#8 yi zp[2]:10 1000001.0
(void()) init_font_hex((byte*) init_font_hex::charset)
(byte~) init_font_hex::$0 zp[1]:23 10001.0
(byte~) init_font_hex::$1 reg byte a 20002.0
(byte~) init_font_hex::$2 reg byte a 20002.0
(label) init_font_hex::@1
(label) init_font_hex::@2
(label) init_font_hex::@3
(label) init_font_hex::@4
(label) init_font_hex::@5
(label) init_font_hex::@return
(byte) init_font_hex::c
(byte) init_font_hex::c#1 c zp[1]:12 151.5
(byte) init_font_hex::c#6 c zp[1]:12 10.631578947368421
(byte) init_font_hex::c1
(byte) init_font_hex::c1#1 c1 zp[1]:17 1501.5
(byte) init_font_hex::c1#4 c1 zp[1]:17 133.46666666666667
(byte*) init_font_hex::charset
(byte*) init_font_hex::charset#0 charset zp[2]:13 350.5
(byte*) init_font_hex::charset#2 charset zp[2]:13 1079.0714285714287
(byte*) init_font_hex::charset#5 charset zp[2]:13 202.0
(byte) init_font_hex::i
(byte) init_font_hex::i#1 reg byte x 15001.5
(byte) init_font_hex::i#2 reg byte x 6667.333333333333
(byte) init_font_hex::idx
(byte) init_font_hex::idx#2 idx zp[1]:18 5501.0
(byte) init_font_hex::idx#3 reg byte y 2002.0
(byte) init_font_hex::idx#5 idx zp[1]:18 6000.6
(byte*) init_font_hex::proto_hi
(byte*) init_font_hex::proto_hi#1 proto_hi zp[2]:10 67.33333333333333
(byte*) init_font_hex::proto_hi#6 proto_hi zp[2]:10 566.8333333333333
(byte*) init_font_hex::proto_lo
(byte*) init_font_hex::proto_lo#1 proto_lo zp[2]:15 500.5
(byte*) init_font_hex::proto_lo#4 proto_lo zp[2]:15 923.3076923076923
(void()) main()
(word~) main::$3 zp[2]:6 202.0
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(byte) main::ang_w
(byte) main::ang_w#0 reg byte a 202.0
(word) main::angle_w
(word) main::angle_w#0 angle_w zp[2]:6 202.0
(const byte*) main::col00 = (const nomodify byte*) COLS+(word)(number) $c*(number) $28+(byte) $13
(byte*) main::screen
(byte*) main::screen#1 screen zp[2]:4 42.599999999999994
(byte*) main::screen#2 screen zp[2]:4 28.545454545454547
(byte*) main::screen#4 screen zp[2]:4 22.0
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(signed byte) main::x
(signed byte) main::x#1 x zp[1]:3 151.5
(signed byte) main::x#2 x zp[1]:3 16.833333333333332
(signed word) main::xw
(word) main::xw#0 xw zp[2]:19 50.5
(signed byte) main::y
(signed byte) main::y#1 y zp[1]:2 16.5
(signed byte) main::y#4 y zp[1]:2 1.4666666666666666
(signed word) main::yw
(word) main::yw#0 yw zp[2]:21 50.5

zp[1]:2 [ main::y#4 main::y#1 ]
zp[1]:3 [ main::x#2 main::x#1 ]
zp[2]:4 [ main::screen#2 main::screen#4 main::screen#1 ]
reg byte x [ atan2_16::i#2 atan2_16::i#1 ]
zp[2]:6 [ atan2_16::angle#6 atan2_16::angle#12 atan2_16::angle#13 atan2_16::angle#2 atan2_16::angle#3 atan2_16::return#0 atan2_16::angle#11 atan2_16::angle#1 atan2_16::angle#4 atan2_16::angle#5 atan2_16::return#2 main::angle_w#0 main::$3 ]
reg byte y [ atan2_16::shift#2 atan2_16::shift#5 atan2_16::shift#1 ]
zp[2]:8 [ atan2_16::xd#5 atan2_16::xd#3 atan2_16::xd#10 atan2_16::xd#1 atan2_16::xd#2 ]
zp[2]:10 [ init_font_hex::proto_hi#6 init_font_hex::proto_hi#1 atan2_16::yi#3 atan2_16::yi#8 atan2_16::yi#0 atan2_16::yi#16 atan2_16::$2 atan2_16::yi#1 atan2_16::yi#2 ]
zp[1]:12 [ init_font_hex::c#6 init_font_hex::c#1 ]
zp[2]:13 [ init_font_hex::charset#2 init_font_hex::charset#5 init_font_hex::charset#0 atan2_16::xi#3 atan2_16::xi#8 atan2_16::xi#0 atan2_16::xi#13 atan2_16::$7 atan2_16::xi#1 atan2_16::xi#2 ]
zp[2]:15 [ init_font_hex::proto_lo#4 init_font_hex::proto_lo#1 atan2_16::yd#5 atan2_16::yd#3 atan2_16::yd#10 atan2_16::yd#1 atan2_16::yd#2 ]
zp[1]:17 [ init_font_hex::c1#4 init_font_hex::c1#1 ]
reg byte x [ init_font_hex::i#2 init_font_hex::i#1 ]
zp[1]:18 [ init_font_hex::idx#5 init_font_hex::idx#2 ]
zp[2]:19 [ main::xw#0 atan2_16::x#0 ]
zp[2]:21 [ main::yw#0 atan2_16::y#0 ]
reg byte a [ main::ang_w#0 ]
reg byte a [ atan2_16::$23 ]
reg byte a [ atan2_16::$22 ]
zp[1]:23 [ init_font_hex::$0 ]
reg byte a [ init_font_hex::$1 ]
reg byte a [ init_font_hex::$2 ]
reg byte y [ init_font_hex::idx#3 ]
