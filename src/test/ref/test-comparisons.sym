constant byte RADIX::BINARY = 2
constant byte RADIX::DECIMAL = $a
constant byte RADIX::HEXADECIMAL = $10
constant byte RADIX::OCTAL = 8
void main()
byte main::a
byte main::a#1 a zp[1]:2 5.5
byte main::a#10 a zp[1]:2 3.860927152317884
byte main::b
byte main::b#0 b zp[1]:12 0.9758064516129035
constant byte* main::cs[5]  = { 7, $c7, $37, $97, $67 }
byte main::i
byte main::i#1 i zp[1]:3 11.0
byte main::i#10 i zp[1]:3 0.8684210526315792
constant byte* main::op[3]  = "< "
constant byte* main::op12[3]  = ">="
constant byte* main::op16[3]  = "=="
constant byte* main::op4[3]  = "> "
constant byte* main::op8[3]  = "<="
byte main::r
byte main::r#41 reg byte y 3.6666666666666665
byte main::r#42 reg byte a 5.5
byte main::r#43 r zp[1]:4 3.6666666666666665
byte main::r#44 reg byte y 3.6666666666666665
byte main::r#45 reg byte y 3.6666666666666665
byte main::r#46 reg byte a 5.5
byte main::r#47 r zp[1]:4 3.6666666666666665
byte main::r#48 reg byte y 3.6666666666666665
byte main::r#49 reg byte y 3.6666666666666665
byte main::r#50 reg byte a 5.5
byte main::r#51 r zp[1]:4 3.6666666666666665
byte main::r#52 reg byte y 3.6666666666666665
byte main::r#53 reg byte y 3.6666666666666665
byte main::r#54 reg byte a 5.5
byte main::r#55 r zp[1]:4 3.6666666666666665
byte main::r#56 reg byte y 3.6666666666666665
byte main::r#57 reg byte y 3.6666666666666665
byte main::r#58 reg byte a 5.5
byte main::r#59 r zp[1]:4 3.6666666666666665
byte main::r#60 reg byte y 3.6666666666666665
void* memset(void* memset::str , byte memset::c , word memset::num)
byte memset::c
constant byte memset::c#0 c = ' '
byte* memset::dst
byte* memset::dst#1 dst zp[2]:8 2002.0
byte* memset::dst#2 dst zp[2]:8 1334.6666666666667
byte* memset::end
constant byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
constant word memset::num#0 num = $3e8
void* memset::return
void* memset::str
constant void* memset::str#0 str = (void*)print_screen#0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#0 reg byte a 200002.0
byte print_char::ch#1 reg byte a 2002.0
byte print_char::ch#2 reg byte a 2002.0
byte print_char::ch#5 reg byte a 202.0
byte print_char::ch#6 reg byte a 1102105.0
byte* print_char_cursor
byte* print_char_cursor#100 print_char_cursor zp[2]:10 2.75
byte* print_char_cursor#150 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#151 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#155 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#159 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#167 print_char_cursor zp[2]:10 22.0
byte* print_char_cursor#55 print_char_cursor zp[2]:10 1051154.0
byte* print_char_cursor#56 print_char_cursor zp[2]:10 7778.825174825175
byte* print_char_cursor#98 print_char_cursor zp[2]:10 321.0
void print_cls()
constant const byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:6 235.2578125
byte* print_line_cursor#14 print_line_cursor zp[2]:6 20103.0
byte* print_line_cursor#27 print_line_cursor zp[2]:6 156.0
byte* print_line_cursor#29 print_line_cursor zp[2]:6 0.7333333333333333
void print_ln()
byte* print_screen
constant byte* print_screen#0 print_screen = (byte*) 1024
void print_str(byte* print_str::str)
byte* print_str::str
byte* print_str::str#0 str zp[2]:8 200002.0
byte* print_str::str#1 str zp[2]:8 551.0
byte* print_str::str#2 str zp[2]:8 100251.25
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 2002.0
byte~ print_uchar::$2 reg byte a 2002.0
byte print_uchar::b
byte print_uchar::b#0 reg byte x 202.0
byte print_uchar::b#1 reg byte x 202.0
byte print_uchar::b#2 reg byte x 551.0
void printu(byte printu::a , byte* printu::op , byte printu::b , byte printu::res)
byte printu::a
byte printu::a#0 reg byte x 7.333333333333333
byte printu::a#1 reg byte x 11.0
byte printu::a#10 reg byte x 7.333333333333333
byte printu::a#11 reg byte x 7.333333333333333
byte printu::a#12 reg byte x 5.5
byte printu::a#13 reg byte x 11.0
byte printu::a#14 reg byte x 7.333333333333333
byte printu::a#15 reg byte x 7.333333333333333
byte printu::a#16 reg byte x 5.5
byte printu::a#17 reg byte x 11.0
byte printu::a#18 reg byte x 7.333333333333333
byte printu::a#19 reg byte x 7.333333333333333
byte printu::a#2 reg byte x 7.333333333333333
byte printu::a#20 reg byte x 160.5
byte printu::a#3 reg byte x 7.333333333333333
byte printu::a#4 reg byte x 5.5
byte printu::a#5 reg byte x 11.0
byte printu::a#6 reg byte x 7.333333333333333
byte printu::a#7 reg byte x 7.333333333333333
byte printu::a#8 reg byte x 5.5
byte printu::a#9 reg byte x 11.0
byte printu::b
byte printu::b#0 b zp[1]:5 11.0
byte printu::b#10 b zp[1]:5 11.0
byte printu::b#11 b zp[1]:5 11.0
byte printu::b#12 b zp[1]:5 7.333333333333333
byte printu::b#14 b zp[1]:5 11.0
byte printu::b#15 b zp[1]:5 11.0
byte printu::b#16 b zp[1]:5 7.333333333333333
byte printu::b#18 b zp[1]:5 11.0
byte printu::b#19 b zp[1]:5 11.0
byte printu::b#2 b zp[1]:5 11.0
byte printu::b#20 b zp[1]:5 44.33333333333333
byte printu::b#3 b zp[1]:5 11.0
byte printu::b#4 b zp[1]:5 7.333333333333333
byte printu::b#6 b zp[1]:5 11.0
byte printu::b#7 b zp[1]:5 11.0
byte printu::b#8 b zp[1]:5 7.333333333333333
byte* printu::op
byte* printu::op#20 op zp[2]:8 25.25
byte printu::res
byte printu::res#0 res zp[1]:4 22.0
byte printu::res#1 res zp[1]:4 22.0
byte printu::res#10 res zp[1]:4 22.0
byte printu::res#11 res zp[1]:4 22.0
byte printu::res#12 res zp[1]:4 11.0
byte printu::res#13 res zp[1]:4 22.0
byte printu::res#14 res zp[1]:4 22.0
byte printu::res#15 res zp[1]:4 22.0
byte printu::res#16 res zp[1]:4 11.0
byte printu::res#17 res zp[1]:4 22.0
byte printu::res#18 res zp[1]:4 22.0
byte printu::res#19 res zp[1]:4 22.0
byte printu::res#2 res zp[1]:4 22.0
byte printu::res#20 res zp[1]:4 32.1
byte printu::res#3 res zp[1]:4 22.0
byte printu::res#4 res zp[1]:4 11.0
byte printu::res#5 res zp[1]:4 22.0
byte printu::res#6 res zp[1]:4 22.0
byte printu::res#7 res zp[1]:4 22.0
byte printu::res#8 res zp[1]:4 11.0
byte printu::res#9 res zp[1]:4 22.0

zp[1]:2 [ main::a#10 main::a#1 ]
zp[1]:3 [ main::i#10 main::i#1 ]
reg byte y [ main::r#41 ]
reg byte a [ main::r#42 ]
zp[1]:4 [ main::r#43 printu::res#20 printu::res#8 printu::res#9 printu::res#10 printu::res#11 printu::res#12 printu::res#13 printu::res#14 printu::res#15 printu::res#16 printu::res#17 printu::res#0 printu::res#18 printu::res#19 printu::res#1 printu::res#2 printu::res#3 printu::res#4 printu::res#5 printu::res#6 printu::res#7 main::r#47 main::r#51 main::r#55 main::r#59 ]
reg byte y [ main::r#44 ]
reg byte y [ main::r#45 ]
reg byte a [ main::r#46 ]
reg byte y [ main::r#48 ]
reg byte y [ main::r#49 ]
reg byte a [ main::r#50 ]
reg byte y [ main::r#52 ]
reg byte y [ main::r#53 ]
reg byte a [ main::r#54 ]
reg byte y [ main::r#56 ]
reg byte y [ main::r#57 ]
reg byte a [ main::r#58 ]
reg byte y [ main::r#60 ]
reg byte x [ printu::a#20 printu::a#8 printu::a#9 printu::a#10 printu::a#11 printu::a#12 printu::a#13 printu::a#14 printu::a#15 printu::a#16 printu::a#17 printu::a#0 printu::a#18 printu::a#19 printu::a#1 printu::a#2 printu::a#3 printu::a#4 printu::a#5 printu::a#6 printu::a#7 ]
zp[1]:5 [ printu::b#20 printu::b#8 printu::b#10 printu::b#11 printu::b#12 printu::b#14 printu::b#15 printu::b#16 printu::b#0 printu::b#18 printu::b#19 printu::b#2 printu::b#3 printu::b#4 printu::b#6 printu::b#7 ]
zp[2]:6 [ print_line_cursor#14 print_line_cursor#27 print_line_cursor#29 print_line_cursor#0 ]
zp[2]:8 [ memset::dst#2 memset::dst#1 printu::op#20 print_str::str#2 print_str::str#1 print_str::str#0 ]
reg byte a [ print_char::ch#6 print_char::ch#0 print_char::ch#1 print_char::ch#2 print_char::ch#5 ]
zp[2]:10 [ print_char_cursor#55 print_char_cursor#98 print_char_cursor#151 print_char_cursor#56 print_char_cursor#155 print_char_cursor#159 print_char_cursor#100 print_char_cursor#150 print_char_cursor#167 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
zp[1]:12 [ main::b#0 ]
reg byte a [ print_uchar::$0 ]
reg byte a [ print_uchar::$2 ]
