__constant char * const DEFAULT_SCREEN = (char *) 0
__constant char SIZEOF_CHAR = 1
__constant const char VERA_ADDRSEL = 1
__constant char * const VERA_ADDRX_H = (char *) 40738
__constant char * const VERA_ADDRX_L = (char *) 40736
__constant char * const VERA_ADDRX_M = (char *) 40737
__constant char * const VERA_CTRL = (char *) 40741
__constant char * const VERA_DATA0 = (char *) 40739
__constant const char VERA_INC_1 = $10
void main()
__constant char main::MSG[] = "hello world!"
__constant char main::MSG2[] = "h e l l o   w o r l d ! "
char main::i
char main::i#1 // reg byte y 22.0
char main::i#2 // reg byte y 4.888888888888889
char *main::vaddr
char *main::vaddr#1 // vaddr zp[2]:2 11.0
char *main::vaddr#2 // vaddr zp[2]:2 11.0
char *main::vaddr#3 // vaddr zp[2]:2 6.6000000000000005
void memcpy_to_vram(char vbank , void *vdest , void *src , unsigned int num)
char *memcpy_to_vram::end
__constant char *memcpy_to_vram::end#0 = (char *)memcpy_to_vram::src#0+memcpy_to_vram::num#0 // end
unsigned int memcpy_to_vram::num
__constant unsigned int memcpy_to_vram::num#0 = $19*SIZEOF_CHAR // num
char *memcpy_to_vram::s
char *memcpy_to_vram::s#1 // s zp[2]:4 202.0
char *memcpy_to_vram::s#2 // s zp[2]:4 134.66666666666666
void *memcpy_to_vram::src
__constant void *memcpy_to_vram::src#0 = (void *)main::MSG2 // src
char memcpy_to_vram::vbank
void *memcpy_to_vram::vdest
__constant void *memcpy_to_vram::vdest#0 = (void *)DEFAULT_SCREEN+$100 // vdest
void vpoke(char vbank , char *vaddr , char data)
char vpoke::$0 // reg byte a 202.0
char vpoke::$1 // reg byte a 202.0
char vpoke::data
char vpoke::data#0 // reg byte x 22.0
char vpoke::data#2 // reg byte x 16.0
char *vpoke::vaddr
char *vpoke::vaddr#0 // vaddr zp[2]:2 11.0
char *vpoke::vaddr#1 // vaddr zp[2]:2 22.0
char *vpoke::vaddr#2 // vaddr zp[2]:2 56.0
char vpoke::vbank

reg byte y [ main::i#2 main::i#1 ]
zp[2]:2 [ main::vaddr#3 main::vaddr#2 main::vaddr#1 vpoke::vaddr#2 vpoke::vaddr#0 vpoke::vaddr#1 ]
zp[2]:4 [ memcpy_to_vram::s#2 memcpy_to_vram::s#1 ]
reg byte x [ vpoke::data#2 vpoke::data#0 ]
reg byte a [ vpoke::$0 ]
reg byte a [ vpoke::$1 ]
