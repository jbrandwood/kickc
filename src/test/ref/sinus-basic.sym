__constant char RADIX::BINARY = 2
__constant char RADIX::DECIMAL = $a
__constant char RADIX::HEXADECIMAL = $10
__constant char RADIX::OCTAL = 8
void addMEMtoFAC(char *mem)
char *addMEMtoFAC::mem
unsigned int addMEMtoFAC::prepareMEM1_mem
__constant unsigned int addMEMtoFAC::prepareMEM1_mem#0 = (unsigned int)main::f_127 // prepareMEM1_mem
void divFACby10()
void divMEMbyFAC(char *mem)
char *divMEMbyFAC::mem
unsigned int divMEMbyFAC::prepareMEM1_mem
__constant unsigned int divMEMbyFAC::prepareMEM1_mem#0 = (unsigned int)main::f_i // prepareMEM1_mem
unsigned int getFAC()
unsigned int getFAC::return
unsigned int getFAC::return#0 // return zp[2]:7 37.33333333333333
unsigned int getFAC::return#2 // return zp[2]:7 22.0
unsigned int getFAC::w
void main()
__constant char main::f_127[] = { 0, 0, 0, 0, 0 }
__constant char * const main::f_2pi = (char *) 58085
__constant char main::f_i[] = { 0, 0, 0, 0, 0 }
char main::i
char main::i#1 // i zp[1]:2 11.0
char main::i#10 // i zp[1]:2 0.9166666666666666
__constant char * const memHi = (char *) 255
__constant char * const memLo = (char *) 254
void mulFACbyMEM(char *mem)
char *mulFACbyMEM::mem
char *mulFACbyMEM::mem#2 // mem zp[2]:7
char mulFACbyMEM::prepareMEM1_$0 // reg byte a 202.0
char mulFACbyMEM::prepareMEM1_$1 // reg byte a 202.0
unsigned int mulFACbyMEM::prepareMEM1_mem
void print_char(char ch)
char print_char::ch
char print_char::ch#0 // reg byte a 2002.0
char print_char::ch#1 // reg byte a 2002.0
char print_char::ch#2 // reg byte a 12003.0
char *print_char_cursor
char *print_char_cursor#24 // print_char_cursor zp[2]:5 11002.0
char *print_char_cursor#25 // print_char_cursor zp[2]:5 1241.4117647058824
char *print_char_cursor#33 // print_char_cursor zp[2]:5 401.0
char *print_char_cursor#34 // print_char_cursor zp[2]:5 5.090909090909091
char *print_char_cursor#53 // print_char_cursor zp[2]:5 22.0
__constant const char print_hextab[] = "0123456789abcdef"z
char *print_line_cursor
char *print_line_cursor#0 // print_line_cursor zp[2]:3 4289.285714285714
char *print_line_cursor#15 // print_line_cursor zp[2]:3 4.666666666666666
char *print_line_cursor#7 // print_line_cursor zp[2]:3 20103.0
void print_ln()
char *print_screen
__constant char *print_screen#0 = (char *) 1024 // print_screen
void print_uchar(char b)
char print_uchar::$0 // reg byte a 2002.0
char print_uchar::$2 // reg byte x 2002.0
char print_uchar::b
char print_uchar::b#0 // reg byte x 202.0
char print_uchar::b#1 // reg byte x 202.0
char print_uchar::b#2 // reg byte x 551.0
void print_uint(unsigned int w)
unsigned int print_uint::w
unsigned int print_uint::w#0 // w zp[2]:7 71.0
void setFAC(unsigned int w)
char setFAC::prepareMEM1_$0 // reg byte a 202.0
char setFAC::prepareMEM1_$1 // reg byte a 202.0
unsigned int setFAC::prepareMEM1_mem
unsigned int setFAC::prepareMEM1_mem#0 // prepareMEM1_mem zp[2]:7 71.0
unsigned int setFAC::w
unsigned int setFAC::w#1 // w zp[2]:7 22.0
void setMEMtoFAC(char *mem)
char *setMEMtoFAC::mem
char *setMEMtoFAC::mem#2 // mem zp[2]:7
char setMEMtoFAC::prepareMEM1_$0 // reg byte a 202.0
char setMEMtoFAC::prepareMEM1_$1 // reg byte a 202.0
unsigned int setMEMtoFAC::prepareMEM1_mem
void sinFAC()

zp[1]:2 [ main::i#10 main::i#1 ]
zp[2]:3 [ print_line_cursor#7 print_line_cursor#15 print_line_cursor#0 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp[2]:5 [ print_char_cursor#24 print_char_cursor#33 print_char_cursor#34 print_char_cursor#53 print_char_cursor#25 ]
zp[2]:7 [ getFAC::return#2 print_uint::w#0 getFAC::return#0 mulFACbyMEM::mem#2 setMEMtoFAC::mem#2 setFAC::prepareMEM1_mem#0 setFAC::w#1 ]
reg byte a [ setFAC::prepareMEM1_$0 ]
reg byte a [ setFAC::prepareMEM1_$1 ]
reg byte a [ setMEMtoFAC::prepareMEM1_$0 ]
reg byte a [ setMEMtoFAC::prepareMEM1_$1 ]
reg byte a [ mulFACbyMEM::prepareMEM1_$0 ]
reg byte a [ mulFACbyMEM::prepareMEM1_$1 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
