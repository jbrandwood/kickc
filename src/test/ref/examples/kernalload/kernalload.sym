(label) @1
(label) @begin
(label) @end
(const byte*) BORDERCOL = (byte*) 53280
(const byte) GREEN = (number) 5
(const byte*) LOAD_SPRITE = (byte*) 12288
(const byte*) SCREEN = (byte*) 1024
(const byte*) SPRITE[]  = kickasm {{ .var pic = LoadPicture("sprite.png", List().add($000000, $ffffff))
    .for (var y=0; y<21; y++)
        .for (var x=0;x<3; x++)
            .byte pic.getSinglecolorByte(x,y)
 }}
(const byte*) SPRITES_COLS = (byte*) 53287
(const byte*) SPRITES_ENABLE = (byte*) 53269
(const byte*) SPRITES_PTR = (const byte*) SCREEN+(const word) SPRITE_PTRS
(const byte*) SPRITES_XPOS = (byte*) 53248
(const byte*) SPRITES_YPOS = (byte*) 53249
(const word) SPRITE_PTRS = (number) $3f8
(void()) error((byte) error::err)
(label) error::@return
(byte) error::err
(byte) error::err#0 reg byte a 4.0
(const byte*) error::errCode = (byte*) 255
(byte()) load((byte*) load::address , (bool) load::verify)
(label) load::@return
(byte*) load::address
(const byte**) load::loadAddress = (byte**) 254
(const byte*) load::loadOrVerify = (byte*) 253
(byte) load::return
(byte) load::return#0 reg byte a 4.0
(byte) load::return#1 reg byte a 1.3333333333333333
(const byte*) load::status = (byte*) 253
(bool) load::verify
(byte()) loadFileToMemory((byte) loadFileToMemory::device , (byte*) loadFileToMemory::filename , (byte*) loadFileToMemory::address)
(label) loadFileToMemory::@1
(label) loadFileToMemory::@2
(label) loadFileToMemory::@3
(label) loadFileToMemory::@return
(byte*) loadFileToMemory::address
(byte) loadFileToMemory::device
(const byte) loadFileToMemory::device#0 device = (byte) 8
(byte*) loadFileToMemory::filename
(byte) loadFileToMemory::return
(byte) loadFileToMemory::return#0 reg byte a 4.0
(byte) loadFileToMemory::return#1 reg byte a 1.3333333333333333
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@return
(const string) main::filename[]  = (string) "SPRITE"
(byte) main::status
(byte) main::status#0 reg byte x 2.0
(label) main::toSpritePtr1
(byte) main::toSpritePtr1_return
(const byte) main::toSpritePtr1_return#0 toSpritePtr1_return = (byte)(word)(const byte*) LOAD_SPRITE/(byte) $40
(byte*) main::toSpritePtr1_sprite
(void()) setlfs((byte) setlfs::device)
(label) setlfs::@return
(byte) setlfs::device
(const byte*) setlfs::deviceNum = (byte*) 255
(void()) setnam((byte*) setnam::filename)
(word~) setnam::$0 zp[2]:4 2.0
(byte~) setnam::$1 reg byte a 4.0
(label) setnam::@1
(label) setnam::@return
(byte*) setnam::filename
(const byte*) setnam::filename_len = (byte*) 253
(const byte**) setnam::filename_ptr = (byte**) 254
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:4 11.0
(word) strlen::len#2 len zp[2]:4 6.0
(word) strlen::return
(word) strlen::return#2 return zp[2]:4 4.0
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:2 22.0
(byte*) strlen::str#2 str zp[2]:2 11.0

zp[2]:2 [ strlen::str#2 strlen::str#0 ]
zp[2]:4 [ strlen::len#2 strlen::len#1 strlen::return#2 setnam::$0 ]
reg byte a [ loadFileToMemory::return#0 ]
reg byte x [ main::status#0 ]
reg byte a [ error::err#0 ]
reg byte a [ load::return#0 ]
reg byte a [ loadFileToMemory::return#1 ]
reg byte a [ load::return#1 ]
reg byte a [ setnam::$1 ]
