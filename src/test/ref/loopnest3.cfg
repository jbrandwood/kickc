@begin: scope:[]  from
  [0] phi()
  to:@3
@3: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @3
  [3] phi()
main: scope:[main]  from @3
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (byte) main::i#2 ← phi( main/(byte/signed byte/word/signed word/dword/signed dword) 0 main::@3/(byte) main::i#1 )
  [6] (byte) b::i#0 ← (byte) main::i#2
  [7] call b 
  to:main::@3
main::@3: scope:[main]  from main::@1
  [8] (byte) main::i#1 ← ++ (byte) main::i#2
  [9] if((byte) main::i#1!=(byte/signed byte/word/signed word/dword/signed dword) $65) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [10] return 
  to:@return
b: scope:[b]  from main::@1
  [11] (byte) c::i#0 ← (byte) b::i#0
  [12] call c 
  to:b::@return
b::@return: scope:[b]  from b
  [13] return 
  to:@return
c: scope:[c]  from b
  [14] phi()
  to:c::@1
c::@1: scope:[c]  from c c::@1
  [15] (byte) c::j#2 ← phi( c/(byte/signed byte/word/signed word/dword/signed dword) 0 c::@1/(byte) c::j#1 )
  [16] *((const byte*) SCREEN#0 + (byte) c::j#2) ← (byte) c::i#0
  [17] (byte) c::j#1 ← ++ (byte) c::j#2
  [18] if((byte) c::j#1!=(byte/signed byte/word/signed word/dword/signed dword) $65) goto c::@1
  to:c::@return
c::@return: scope:[c]  from c::@1
  [19] return 
  to:@return
