@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] (signed word) main::y1#0 ← (signed word) $1234
  [5] (signed word) main::y2#0 ← (signed word) $1234
  [6] call foo 
  [7] (signed word) foo::return#2 ← (signed word) foo::return#0
  to:main::@1
main::@1: scope:[main]  from main
  [8] (signed word~) main::$0 ← (signed word) foo::return#2
  [9] *((const signed word*) main::SCREEN#0) ← (signed word~) main::$0
  [10] call foo 
  [11] (signed word) foo::return#3 ← (signed word) foo::return#0
  to:main::@2
main::@2: scope:[main]  from main::@1
  [12] (signed word~) main::$1 ← (signed word) foo::return#3
  [13] *((const signed word*) main::SCREEN#0+(const byte) SIZEOF_SIGNED_WORD) ← (signed word~) main::$1
  to:main::@return
main::@return: scope:[main]  from main::@2
  [14] return 
  to:@return

(signed word()) foo((byte) foo::x , (signed word*) foo::y)
foo: scope:[foo]  from main main::@1
  [15] (signed word*) foo::y#2 ← phi( main/&(signed word) main::y1#0 main::@1/&(signed word) main::y2#0 )
  [15] (byte) foo::x#2 ← phi( main/(byte) 1 main::@1/(byte) 2 )
  [16] (byte~) foo::$1 ← (byte) foo::x#2 << (byte) 1
  [17] (signed word) foo::return#0 ← *((const signed word*) wow + (byte~) foo::$1) + *((signed word*) foo::y#2)
  to:foo::@return
foo::@return: scope:[foo]  from foo
  [18] return 
  to:@return
