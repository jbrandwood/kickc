__constant char COL_RED = 2
__constant char COL_WHITE = 1
__constant char HEX[] = "0123456789abcdef"
__constant char OFFSET_STRUCT_CIRCLE_CENTER = 2
__constant char OFFSET_STRUCT_CIRCLE_COLOR = 6
__constant char OFFSET_STRUCT_POINT_Y = 2
__loadstore struct Circle c2 = { radius: $32, center: { x: $96, y: $15e }, color: COL_WHITE } // mem[7]
__loadstore struct Circle circle = { radius: $64, center: { x: $c8, y: $12c }, color: COL_RED } // mem[7]
void main()
void print_char(char c)
char print_char::c
char print_char::c#0 // reg byte a 202.0
char print_char::c#1 // reg byte a 202.0
char print_char::c#2 // reg byte a 202.0
char print_char::c#3 // reg byte a 202.0
char print_char::c#4 // reg byte a 202.0
char print_char::c#5 // reg byte a 202.0
char print_char::c#6 // reg byte a 2002.0
char print_char::c#7 // reg byte a 11608.0
void print_circle(unsigned int c_radius , unsigned int c_center_x , unsigned int c_center_y , char c_color)
struct Circle print_circle::c
struct Point print_circle::c_center
unsigned int print_circle::c_center_x
unsigned int print_circle::c_center_x#0 // c_center_x zp[2]:4 1.3333333333333333
unsigned int print_circle::c_center_x#1 // c_center_x zp[2]:4 1.3333333333333333
unsigned int print_circle::c_center_x#2 // c_center_x zp[2]:4 2.5
unsigned int print_circle::c_center_y
unsigned int print_circle::c_center_y#0 // c_center_y zp[2]:6 2.0
unsigned int print_circle::c_center_y#1 // c_center_y zp[2]:6 2.0
unsigned int print_circle::c_center_y#2 // c_center_y zp[2]:6 1.5
char print_circle::c_color
char print_circle::c_color#0 // c_color zp[1]:8 4.0
char print_circle::c_color#1 // c_color zp[1]:8 4.0
char print_circle::c_color#2 // c_color zp[1]:8 1.0714285714285714
unsigned int print_circle::c_radius
unsigned int print_circle::c_radius#0 // c_radius zp[2]:2 1.0
unsigned int print_circle::c_radius#1 // c_radius zp[2]:2 1.0
unsigned int print_circle::c_radius#2 // c_radius zp[2]:2 7.5
__constant char print_circle::str[3] = "r:"
__constant char print_circle::str1[5] = " c:("
__constant char print_circle::str2[2] = ","
__constant char print_circle::str3[3] = ") "
void print_ln()
void print_str(char *str)
char *print_str::str
char *print_str::str#4 // str zp[2]:9 2002.0
char *print_str::str#5 // str zp[2]:9 1026.25
char *print_str::str#8 // str zp[2]:9 101.0
void print_uchar(char c)
char print_uchar::$0 // reg byte a 202.0
char print_uchar::$2 // reg byte a 202.0
char print_uchar::c
char print_uchar::c#0 // c zp[1]:8 53.25
void print_uint(unsigned int i)
char print_uint::$0 // reg byte a 202.0
char print_uint::$1 // reg byte a 202.0
char print_uint::$10 // reg byte a 202.0
char print_uint::$3 // reg byte a 202.0
char print_uint::$4 // reg byte a 202.0
char print_uint::$6 // reg byte a 202.0
char print_uint::$7 // reg byte a 202.0
char print_uint::$9 // reg byte a 202.0
unsigned int print_uint::i
unsigned int print_uint::i#0 // i zp[2]:2 22.0
unsigned int print_uint::i#1 // i zp[2]:2 22.0
unsigned int print_uint::i#2 // i zp[2]:2 22.0
unsigned int print_uint::i#3 // i zp[2]:2 33.61538461538461
char screen_idx
char screen_idx#22 // reg byte x 128.05555555555557
char screen_idx#23 // reg byte x 15001.5
char screen_idx#25 // reg byte x 423.66666666666663
char screen_idx#54 // reg byte x 10804.5
char screen_idx#68 // reg byte x 134.0
char *screen_line
char *screen_line#22 // screen_line zp[2]:11 128.05555555555557
char *screen_line#24 // screen_line zp[2]:11 649.7575757575758
char *screen_line#25 // screen_line zp[2]:11 13750.5
char *screen_line#53 // screen_line zp[2]:11 6321.999999999999
char *screen_line#56 // screen_line zp[2]:11 110004.0
char *screen_line#61 // screen_line zp[2]:11 13.0
char *screen_line#68 // screen_line zp[2]:11 145.0

zp[2]:2 [ print_circle::c_radius#2 print_circle::c_radius#0 print_circle::c_radius#1 print_uint::i#3 print_uint::i#0 print_uint::i#1 print_uint::i#2 ]
zp[2]:4 [ print_circle::c_center_x#2 print_circle::c_center_x#0 print_circle::c_center_x#1 ]
zp[2]:6 [ print_circle::c_center_y#2 print_circle::c_center_y#0 print_circle::c_center_y#1 ]
zp[1]:8 [ print_circle::c_color#2 print_circle::c_color#0 print_circle::c_color#1 print_uchar::c#0 ]
zp[2]:9 [ print_str::str#5 print_str::str#8 print_str::str#4 ]
zp[2]:11 [ screen_line#22 screen_line#68 screen_line#61 screen_line#25 screen_line#56 screen_line#24 screen_line#53 ]
reg byte a [ print_char::c#7 print_char::c#6 print_char::c#4 print_char::c#5 print_char::c#0 print_char::c#1 print_char::c#2 print_char::c#3 ]
reg byte x [ screen_idx#54 screen_idx#22 screen_idx#68 screen_idx#25 screen_idx#23 ]
reg byte a [ print_uint::$0 ]
reg byte a [ print_uint::$1 ]
reg byte a [ print_uint::$3 ]
reg byte a [ print_uint::$4 ]
reg byte a [ print_uint::$6 ]
reg byte a [ print_uint::$7 ]
reg byte a [ print_uint::$9 ]
reg byte a [ print_uint::$10 ]
reg byte a [ print_uchar::$0 ]
reg byte a [ print_uchar::$2 ]
mem[7] [ circle ]
mem[7] [ c2 ]
