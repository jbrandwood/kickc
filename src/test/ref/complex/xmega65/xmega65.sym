(label) @1
(label) @begin
(label) @end
(byte*) COLS
(const byte*) COLS#0 COLS = (byte*) 55296
(byte) JMP
(const byte) JMP#0 JMP = (byte) $4c
(byte[]) MESSAGE
(const byte[]) MESSAGE#0 MESSAGE = (string) "hello world!"
(byte) NOP
(const byte) NOP#0 NOP = (byte) $ea
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = (byte*) 1024
(struct SysCall[]) SYSCALLS
(const struct SysCall[]) SYSCALLS#0 SYSCALLS = { { xjmp: (const byte) JMP#0, syscall: &(void()) syscall1(), xnop: (const byte) NOP#0 }, { xjmp: (const byte) JMP#0, syscall: &(void()) syscall2(), xnop: (const byte) NOP#0 } }
(struct SysCall[]) SYSCALL_RESET
(const struct SysCall[]) SYSCALL_RESET#0 SYSCALL_RESET = { { xjmp: (const byte) JMP#0, syscall: &(void()) main(), xnop: (const byte) NOP#0 } }
(void()*) SysCall::syscall
(byte) SysCall::xjmp
(byte) SysCall::xnop
(byte*) VIC_MEMORY
(const byte*) VIC_MEMORY#0 VIC_MEMORY = (byte*) 53272
(byte) WHITE
(const byte) WHITE#0 WHITE = (byte) 1
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(byte*) main::cols
(byte*) main::cols#1 cols zp ZP_WORD:6 22.0
(byte*) main::cols#2 cols zp ZP_WORD:6 5.5
(byte*) main::msg
(byte*) main::msg#1 msg zp ZP_WORD:2 7.333333333333333
(byte*) main::msg#2 msg zp ZP_WORD:2 11.0
(byte*) main::sc
(byte*) main::sc#1 sc zp ZP_WORD:4 11.0
(byte*) main::sc#2 sc zp ZP_WORD:4 6.6000000000000005
(void()) syscall1()
(label) syscall1::@return
(byte*) syscall1::BORDERCOL
(const byte*) syscall1::BORDERCOL#0 BORDERCOL = (byte*) 53280
(void()) syscall2()
(label) syscall2::@return
(byte*) syscall2::BGCOL
(const byte*) syscall2::BGCOL#0 BGCOL = (byte*) 53281

zp ZP_WORD:2 [ main::msg#2 main::msg#1 ]
zp ZP_WORD:4 [ main::sc#2 main::sc#1 ]
zp ZP_WORD:6 [ main::cols#2 main::cols#1 ]
