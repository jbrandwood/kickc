void main()
unsigned int main::$0 // zp[2]:4 101.0
char main::$3 // reg byte x 202.0
char main::a
char main::a#1 // a zp[1]:2 16.5
char main::a#4 // a zp[1]:2 10.249999999999998
char main::b
char main::b#1 // reg byte y 151.5
char main::b#2 // reg byte y 33.666666666666664
char main::i
char main::i#1 // i zp[1]:3 42.599999999999994
char main::i#2 // i zp[1]:3 39.25
char main::i#4 // i zp[1]:3 22.0
__constant unsigned int * const main::screen = (unsigned int *) 1024
unsigned int mul8u(char a , char b)
char mul8u::$1 // reg byte a 2000002.0
char mul8u::a
char mul8u::a#0 // reg byte x 1000001.0
char mul8u::a#1 // reg byte x 367.33333333333337
char mul8u::a#2 // reg byte x 666834.1666666667
char mul8u::b
char mul8u::b#0 // reg byte a 101.0
unsigned int mul8u::mb
unsigned int mul8u::mb#0 // mb zp[2]:6 2002.0
unsigned int mul8u::mb#1 // mb zp[2]:6 2000002.0
unsigned int mul8u::mb#2 // mb zp[2]:6 428714.85714285716
unsigned int mul8u::res
unsigned int mul8u::res#1 // res zp[2]:4 2000002.0
unsigned int mul8u::res#2 // res zp[2]:4 500017.3333333334
unsigned int mul8u::res#6 // res zp[2]:4 1000001.0
unsigned int mul8u::return
unsigned int mul8u::return#2 // return zp[2]:4 202.0

zp[1]:2 [ main::a#4 main::a#1 ]
reg byte y [ main::b#2 main::b#1 ]
zp[1]:3 [ main::i#2 main::i#4 main::i#1 ]
reg byte x [ mul8u::a#2 mul8u::a#1 mul8u::a#0 ]
zp[2]:4 [ mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 main::$0 ]
zp[2]:6 [ mul8u::mb#2 mul8u::mb#0 mul8u::mb#1 ]
reg byte a [ mul8u::b#0 ]
reg byte x [ main::$3 ]
reg byte a [ mul8u::$1 ]
