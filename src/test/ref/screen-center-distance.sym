(const nomodify byte*) CHARSET = (byte*) 8192
(const nomodify struct MOS6526_CIA*) CIA2 = (struct MOS6526_CIA*) 56576
(const nomodify dword*) CIA2_TIMER_AB = (dword*) 56580
(const nomodify byte) CIA_TIMER_CONTROL_B_COUNT_UNDERFLOW_A = (byte) $40
(const nomodify byte) CIA_TIMER_CONTROL_START = (byte) 1
(const nomodify dword) CLOCKS_PER_INIT = (dword) $12
(const nomodify byte*) D018 = (byte*) 53272
(const byte*) FONT_HEX_PROTO[]  = { (byte) 2, (byte) 5, (byte) 5, (byte) 5, (byte) 2, (byte) 6, (byte) 2, (byte) 2, (byte) 2, (byte) 7, (byte) 6, (byte) 1, (byte) 2, (byte) 4, (byte) 7, (byte) 6, (byte) 1, (byte) 2, (byte) 1, (byte) 6, (byte) 5, (byte) 5, (byte) 7, (byte) 1, (byte) 1, (byte) 7, (byte) 4, (byte) 6, (byte) 1, (byte) 6, (byte) 3, (byte) 4, (byte) 6, (byte) 5, (byte) 2, (byte) 7, (byte) 1, (byte) 1, (byte) 1, (byte) 1, (byte) 2, (byte) 5, (byte) 2, (byte) 5, (byte) 2, (byte) 2, (byte) 5, (byte) 3, (byte) 1, (byte) 1, (byte) 2, (byte) 5, (byte) 7, (byte) 5, (byte) 5, (byte) 6, (byte) 5, (byte) 6, (byte) 5, (byte) 6, (byte) 2, (byte) 5, (byte) 4, (byte) 5, (byte) 2, (byte) 6, (byte) 5, (byte) 5, (byte) 5, (byte) 6, (byte) 7, (byte) 4, (byte) 6, (byte) 4, (byte) 7, (byte) 7, (byte) 4, (byte) 6, (byte) 4, (byte) 4 }
(const byte*) HEAP_TOP = (byte*) 40960
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(byte) NUM_SQUARES
(const byte) NUM_SQUARES#2 NUM_SQUARES = (byte) $30
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = (byte) $e
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = (byte) $f
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const nomodify byte*) SCREEN = (byte*) 10240
(const byte) SIZEOF_WORD = (byte) 2
(word*) SQUARES
(const word*) SQUARES#0 SQUARES = (word*)(const void*) malloc::return#0
(word*()) bsearch16u((word) bsearch16u::key , (word*) bsearch16u::items , (byte) bsearch16u::num)
(byte~) bsearch16u::$14 reg byte a 2.00000002E8
(word*~) bsearch16u::$2 zp[2]:6 200002.0
(byte~) bsearch16u::$6 reg byte a 2.00000002E8
(label) bsearch16u::@1
(label) bsearch16u::@2
(label) bsearch16u::@3
(label) bsearch16u::@4
(label) bsearch16u::@5
(label) bsearch16u::@6
(label) bsearch16u::@7
(label) bsearch16u::@8
(label) bsearch16u::@9
(label) bsearch16u::@return
(word*) bsearch16u::items
(word*) bsearch16u::items#0 items zp[2]:6 1.00000001E8
(word*) bsearch16u::items#2 items zp[2]:6 3.3366667333333336E7
(word*) bsearch16u::items#8 items zp[2]:6 1.500000015E8
(word) bsearch16u::key
(word) bsearch16u::key#0 key zp[2]:18 7857.285714285715
(byte) bsearch16u::num
(byte) bsearch16u::num#0 reg byte x 2.00000002E8
(byte) bsearch16u::num#1 reg byte x 2.00000002E8
(byte) bsearch16u::num#3 reg byte x 5.555555611111111E7
(byte) bsearch16u::num#5 reg byte x 3.00000003E8
(word*) bsearch16u::pivot
(word*) bsearch16u::pivot#0 pivot zp[2]:20 5.002500075E7
(signed word) bsearch16u::result
(signed word) bsearch16u::result#0 result zp[2]:22 1.500000015E8
(word*) bsearch16u::return
(word*) bsearch16u::return#1 return zp[2]:6 70001.0
(word*) bsearch16u::return#2 return zp[2]:6 300003.0
(word*) bsearch16u::return#3 return zp[2]:6 20002.0
(word*) bsearch16u::return#7 return zp[2]:6 200002.0
(dword()) clock()
(label) clock::@return
(dword) clock::return
(dword) clock::return#0 return zp[4]:12 4.333333333333333
(dword) clock::return#2 return zp[4]:12 4.0
(void()) clock_start()
(label) clock_start::@return
(byte*) heap_head
(void()) init_dist_screen((byte*) init_dist_screen::screen)
(byte~) init_dist_screen::$14 reg byte a 2002.0
(byte~) init_dist_screen::$16 reg byte a 2002.0
(byte~) init_dist_screen::$5 reg byte a 202.0
(byte~) init_dist_screen::$7 reg byte a 202.0
(label) init_dist_screen::@1
(label) init_dist_screen::@10
(label) init_dist_screen::@11
(label) init_dist_screen::@12
(label) init_dist_screen::@13
(label) init_dist_screen::@2
(label) init_dist_screen::@3
(label) init_dist_screen::@4
(label) init_dist_screen::@5
(label) init_dist_screen::@6
(label) init_dist_screen::@7
(label) init_dist_screen::@8
(label) init_dist_screen::@9
(label) init_dist_screen::@return
(byte) init_dist_screen::d
(byte) init_dist_screen::d#0 reg byte a 1251.25
(word) init_dist_screen::ds
(word) init_dist_screen::ds#0 ds zp[2]:18 2002.0
(byte*) init_dist_screen::screen
(byte*) init_dist_screen::screen_bottomline
(byte*) init_dist_screen::screen_bottomline#1 screen_bottomline zp[2]:4 67.33333333333333
(byte*) init_dist_screen::screen_bottomline#11 screen_bottomline zp[2]:4 66.78787878787878
(byte*) init_dist_screen::screen_topline
(byte*) init_dist_screen::screen_topline#1 screen_topline zp[2]:2 50.5
(byte*) init_dist_screen::screen_topline#11 screen_topline zp[2]:2 68.875
(byte) init_dist_screen::x
(byte) init_dist_screen::x#1 x zp[1]:9 1001.0
(byte) init_dist_screen::x#2 x zp[1]:9 300.3
(byte) init_dist_screen::x2
(byte) init_dist_screen::x2#0 reg byte a 2002.0
(byte) init_dist_screen::xb
(byte) init_dist_screen::xb#1 xb zp[1]:10 2002.0
(byte) init_dist_screen::xb#2 xb zp[1]:10 190.66666666666666
(byte) init_dist_screen::xd
(byte) init_dist_screen::xd#0 reg byte a 3003.0
(word) init_dist_screen::xds
(word) init_dist_screen::xds#0 xds zp[2]:18 2002.0
(byte) init_dist_screen::y
(byte) init_dist_screen::y#1 y zp[1]:11 151.5
(byte) init_dist_screen::y#10 y zp[1]:11 8.911764705882353
(byte) init_dist_screen::y2
(byte) init_dist_screen::y2#0 reg byte a 202.0
(byte) init_dist_screen::yd
(byte) init_dist_screen::yd#0 reg byte a 303.0
(word) init_dist_screen::yds
(word) init_dist_screen::yds#0 yds zp[2]:16 47.91304347826087
(void()) init_font_hex((byte*) init_font_hex::charset)
(byte~) init_font_hex::$0 zp[1]:24 10001.0
(byte~) init_font_hex::$1 reg byte a 20002.0
(byte~) init_font_hex::$2 reg byte a 20002.0
(label) init_font_hex::@1
(label) init_font_hex::@2
(label) init_font_hex::@3
(label) init_font_hex::@4
(label) init_font_hex::@5
(label) init_font_hex::@return
(byte) init_font_hex::c
(byte) init_font_hex::c#1 c zp[1]:9 151.5
(byte) init_font_hex::c#6 c zp[1]:9 10.631578947368421
(byte) init_font_hex::c1
(byte) init_font_hex::c1#1 c1 zp[1]:10 1501.5
(byte) init_font_hex::c1#4 c1 zp[1]:10 133.46666666666667
(byte*) init_font_hex::charset
(byte*) init_font_hex::charset#0 charset zp[2]:18 350.5
(byte*) init_font_hex::charset#2 charset zp[2]:18 1079.0714285714287
(byte*) init_font_hex::charset#5 charset zp[2]:18 202.0
(byte) init_font_hex::i
(byte) init_font_hex::i#1 reg byte x 15001.5
(byte) init_font_hex::i#2 reg byte x 6667.333333333333
(byte) init_font_hex::idx
(byte) init_font_hex::idx#2 idx zp[1]:11 5501.0
(byte) init_font_hex::idx#3 reg byte y 2002.0
(byte) init_font_hex::idx#5 idx zp[1]:11 6000.6
(byte*) init_font_hex::proto_hi
(byte*) init_font_hex::proto_hi#1 proto_hi zp[2]:6 67.33333333333333
(byte*) init_font_hex::proto_hi#6 proto_hi zp[2]:6 566.8333333333333
(byte*) init_font_hex::proto_lo
(byte*) init_font_hex::proto_lo#1 proto_lo zp[2]:16 500.5
(byte*) init_font_hex::proto_lo#4 proto_lo zp[2]:16 923.3076923076923
(void()) init_squares()
(byte~) init_squares::$3 reg byte a 2002.0
(byte~) init_squares::$4 reg byte a 2002.0
(label) init_squares::@1
(label) init_squares::@2
(label) init_squares::@return
(byte) init_squares::i
(byte) init_squares::i#1 reg byte x 2002.0
(byte) init_squares::i#2 reg byte x 572.0
(word) init_squares::sqr
(word) init_squares::sqr#1 sqr zp[2]:6 1001.0
(word) init_squares::sqr#2 sqr zp[2]:6 500.5
(word*) init_squares::squares
(word*) init_squares::squares#1 squares zp[2]:18 400.4
(word*) init_squares::squares#2 squares zp[2]:18 1001.0
(void()) main()
(dword~) main::$4 zp[4]:12 4.0
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@return
(const byte*) main::BASE_CHARSET = (byte*) 4096
(const byte*) main::BASE_SCREEN = (byte*) 1024
(dword) main::cyclecount
(dword) main::cyclecount#0 cyclecount zp[4]:12 4.0
(label) main::toD0181
(byte*) main::toD0181_gfx
(byte) main::toD0181_return
(const byte) main::toD0181_return#0 toD0181_return = >(word)(const nomodify byte*) SCREEN&(word) $3fff*(byte) 4|>(word)(const nomodify byte*) CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0181_screen
(label) main::toD0182
(byte*) main::toD0182_gfx
(byte) main::toD0182_return
(const byte) main::toD0182_return#0 toD0182_return = >(word)(const byte*) main::BASE_SCREEN&(word) $3fff*(byte) 4|>(word)(const byte*) main::BASE_CHARSET/(byte) 4&(byte) $f
(byte*) main::toD0182_screen
(void*()) malloc((word) malloc::size)
(label) malloc::@return
(byte*) malloc::mem
(const byte*) malloc::mem#0 mem = (const byte*) HEAP_TOP-(const word) malloc::size#0
(void*) malloc::return
(const void*) malloc::return#0 return = (void*)(const byte*) malloc::mem#0
(word) malloc::size
(const word) malloc::size#0 size = (const byte) NUM_SQUARES#2*(const byte) SIZEOF_WORD
(void()) print_char_at((byte) print_char_at::ch , (byte*) print_char_at::at)
(label) print_char_at::@return
(byte*) print_char_at::at
(byte*) print_char_at::at#0 at zp[2]:6 2002.0
(byte*) print_char_at::at#1 at zp[2]:6 1001.0
(byte*) print_char_at::at#2 at zp[2]:6 12003.0
(byte) print_char_at::ch
(byte) print_char_at::ch#0 reg byte x 1001.0
(byte) print_char_at::ch#1 reg byte x 2002.0
(byte) print_char_at::ch#2 reg byte x 12003.0
(const to_nomodify byte*) print_hextab[]  = (byte*) "0123456789abcdef"z
(void()) print_uchar_at((byte) print_uchar_at::b , (byte*) print_uchar_at::at)
(byte~) print_uchar_at::$0 reg byte a 2002.0
(byte~) print_uchar_at::$2 reg byte y 1001.0
(label) print_uchar_at::@1
(label) print_uchar_at::@return
(byte*) print_uchar_at::at
(byte*) print_uchar_at::at#0 at zp[2]:4 202.0
(byte*) print_uchar_at::at#1 at zp[2]:4 202.0
(byte*) print_uchar_at::at#2 at zp[2]:4 367.33333333333337
(byte) print_uchar_at::b
(byte) print_uchar_at::b#0 b zp[1]:11 101.0
(byte) print_uchar_at::b#1 b zp[1]:11 101.0
(byte) print_uchar_at::b#2 b zp[1]:11 440.79999999999995
(void()) print_uint_at((word) print_uint_at::w , (byte*) print_uint_at::at)
(label) print_uint_at::@1
(label) print_uint_at::@return
(byte*) print_uint_at::at
(byte*) print_uint_at::at#2 at zp[2]:4 40.4
(word) print_uint_at::w
(word) print_uint_at::w#0 w zp[2]:2 22.0
(word) print_uint_at::w#1 w zp[2]:2 22.0
(word) print_uint_at::w#2 w zp[2]:2 56.0
(void()) print_ulong_at((dword) print_ulong_at::dw , (byte*) print_ulong_at::at)
(label) print_ulong_at::@1
(label) print_ulong_at::@return
(byte*) print_ulong_at::at
(dword) print_ulong_at::dw
(dword) print_ulong_at::dw#0 dw zp[4]:12 8.0
(word()) sqr((byte) sqr::val)
(byte~) sqr::$0 reg byte a 20002.0
(label) sqr::@return
(word) sqr::return
(word) sqr::return#0 return zp[2]:18 2775.75
(word) sqr::return#2 return_1 zp[2]:16 202.0
(word) sqr::return#3 return zp[2]:18 2002.0
(byte) sqr::val
(byte) sqr::val#0 reg byte a 202.0
(byte) sqr::val#1 reg byte a 2002.0
(byte) sqr::val#2 reg byte a 11103.0
(byte()) sqrt((word) sqrt::val)
(word~) sqrt::$1 zp[2]:6 10001.0
(word~) sqrt::$2 zp[2]:6 20002.0
(label) sqrt::@1
(label) sqrt::@return
(word*) sqrt::found
(word*) sqrt::found#0 found zp[2]:6 20002.0
(byte) sqrt::return
(byte) sqrt::return#0 reg byte a 3667.333333333333
(byte) sqrt::return#2 reg byte a 2002.0
(byte) sqrt::sq
(word) sqrt::val
(word) sqrt::val#0 val zp[2]:18 11002.0

reg byte x [ print_char_at::ch#2 print_char_at::ch#0 print_char_at::ch#1 ]
zp[2]:2 [ init_dist_screen::screen_topline#11 init_dist_screen::screen_topline#1 print_uint_at::w#2 print_uint_at::w#0 print_uint_at::w#1 ]
zp[2]:4 [ init_dist_screen::screen_bottomline#11 init_dist_screen::screen_bottomline#1 print_uint_at::at#2 print_uchar_at::at#2 print_uchar_at::at#0 print_uchar_at::at#1 ]
reg byte a [ init_dist_screen::yd#0 init_dist_screen::$7 init_dist_screen::$5 ]
reg byte a [ init_dist_screen::xd#0 init_dist_screen::$16 init_dist_screen::$14 ]
reg byte x [ bsearch16u::num#5 bsearch16u::num#1 bsearch16u::num#3 bsearch16u::num#0 ]
reg byte a [ sqr::val#2 sqr::val#1 sqr::val#0 ]
reg byte x [ init_squares::i#2 init_squares::i#1 ]
zp[2]:6 [ init_font_hex::proto_hi#6 init_font_hex::proto_hi#1 init_squares::sqr#2 init_squares::sqr#1 bsearch16u::return#1 bsearch16u::return#2 bsearch16u::items#2 bsearch16u::items#8 bsearch16u::$2 bsearch16u::return#7 bsearch16u::items#0 bsearch16u::return#3 sqrt::found#0 sqrt::$2 sqrt::$1 print_char_at::at#2 print_char_at::at#0 print_char_at::at#1 ]
zp[1]:9 [ init_font_hex::c#6 init_font_hex::c#1 init_dist_screen::x#2 init_dist_screen::x#1 ]
zp[1]:10 [ init_font_hex::c1#4 init_font_hex::c1#1 init_dist_screen::xb#2 init_dist_screen::xb#1 ]
reg byte x [ init_font_hex::i#2 init_font_hex::i#1 ]
zp[1]:11 [ init_font_hex::idx#5 init_font_hex::idx#2 init_dist_screen::y#10 init_dist_screen::y#1 print_uchar_at::b#2 print_uchar_at::b#0 print_uchar_at::b#1 ]
zp[4]:12 [ clock::return#2 main::$4 clock::return#0 main::cyclecount#0 print_ulong_at::dw#0 ]
reg byte a [ print_uchar_at::$0 ]
reg byte y [ print_uchar_at::$2 ]
reg byte a [ init_dist_screen::y2#0 ]
zp[2]:16 [ sqr::return#2 init_dist_screen::yds#0 init_font_hex::proto_lo#4 init_font_hex::proto_lo#1 ]
reg byte a [ init_dist_screen::x2#0 ]
zp[2]:18 [ sqr::return#3 init_dist_screen::xds#0 sqr::return#0 init_dist_screen::ds#0 sqrt::val#0 bsearch16u::key#0 init_font_hex::charset#2 init_font_hex::charset#5 init_font_hex::charset#0 init_squares::squares#2 init_squares::squares#1 ]
reg byte a [ sqrt::return#2 ]
reg byte a [ init_dist_screen::d#0 ]
reg byte a [ sqrt::return#0 ]
reg byte a [ bsearch16u::$6 ]
reg byte a [ bsearch16u::$14 ]
zp[2]:20 [ bsearch16u::pivot#0 ]
zp[2]:22 [ bsearch16u::result#0 ]
reg byte a [ sqr::$0 ]
reg byte a [ init_squares::$3 ]
reg byte a [ init_squares::$4 ]
zp[1]:24 [ init_font_hex::$0 ]
reg byte a [ init_font_hex::$1 ]
reg byte a [ init_font_hex::$2 ]
reg byte y [ init_font_hex::idx#3 ]
