
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] idx = 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [2] phi()
  [3] callexecute main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [4] return 
  to:@return

__stackcall void print(byte print::v_p1_x , byte print::v_p1_y , byte print::v_p2_x , byte print::v_p2_y)
print: scope:[print]  from
  [5] print::v_p1_x#0 = stackidx(byte,print::OFFSET_STACK_V_P1_X)
  [6] print::v_p1_y#0 = stackidx(byte,print::OFFSET_STACK_V_P1_Y)
  [7] print::v_p2_x#0 = stackidx(byte,print::OFFSET_STACK_V_P2_X)
  [8] print::v_p2_y#0 = stackidx(byte,print::OFFSET_STACK_V_P2_Y)
  [9] SCREEN[idx] = print::v_p1_x#0
  [10] idx = ++ idx
  [11] SCREEN[idx] = print::v_p1_y#0
  [12] idx = ++ idx
  [13] SCREEN[idx] = print::v_p2_x#0
  [14] idx = ++ idx
  [15] SCREEN[idx] = print::v_p2_y#0
  [16] idx = ++ idx
  [17] SCREEN[idx] = ' '
  [18] idx = ++ idx
  to:print::@return
print::@return: scope:[print]  from print
  [19] return 
  to:@return

__stackcall struct Vector get(byte get::i)
get: scope:[get]  from
  [20] get::return_p1_x#0 = stackidx(byte,get::OFFSET_STACK_I)
  [21] get::return_p1_y#0 = get::return_p1_x#0 >> 1
  [22] get::return_p2_x#0 = get::return_p1_x#0 + 1
  [23] get::return_p2_y#0 = get::return_p1_x#0 << 1
  to:get::@return
get::@return: scope:[get]  from get
  [24] stackidx(byte,0) = get::return_p1_x#0
  [25] stackidx(byte,OFFSET_STRUCT_POINT_Y) = get::return_p1_y#0
  [26] stackidx(byte,OFFSET_STRUCT_VECTOR_P2) = get::return_p2_x#0
  [27] stackidx(byte,OFFSET_STRUCT_VECTOR_P2+OFFSET_STRUCT_POINT_Y) = get::return_p2_y#0
  [28] return 
  to:@return

__stackcall void main()
main: scope:[main]  from
  [29] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [30] main::i#2 = phi( main/0, main::@2/main::i#1 )
  [31] if(main::i#2<5) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [32] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [33] stackpush(byte) = main::i#2
  sideeffect stackpushbytes(3)
  [35] callexecute get 
  [36] main::v_p1_x#0 = stackpull(byte)
  [37] main::v_p1_y#0 = stackpull(byte)
  [38] main::v_p2_x#0 = stackpull(byte)
  [39] main::v_p2_y#0 = stackpull(byte)
  [40] stackpush(byte) = main::v_p1_x#0
  [41] stackpush(byte) = main::v_p1_y#0
  [42] stackpush(byte) = main::v_p2_x#0
  [43] stackpush(byte) = main::v_p2_y#0
  [44] callexecute print 
  sideeffect stackpullbytes(4)
  [46] main::i#1 = ++ main::i#2
  to:main::@1
