void Print()
label Print::@return
const nomodify byte* TIMEHI = (byte*) 161
const nomodify byte* TIMELO = (byte*) 162
const nomodify byte* VICBANK = (byte*) 53272
word append(byte* append::dst , word append::value , word append::sub)
label append::@1
label append::@2
label append::@return
byte* append::dst
byte* append::dst#1 dst zp[2]:17 100001.0
byte* append::dst#2 dst zp[2]:17 100001.0
byte* append::dst#3 dst zp[2]:17 100001.0
byte* append::dst#4 dst zp[2]:17 3.33550001E8
word append::return
word append::return#10 return zp[2]:15 200002.0
word append::return#2 return zp[2]:15 200002.0
word append::return#3 return zp[2]:15 200002.0
word append::return#4 return zp[2]:15 200002.0
word append::sub
word append::sub#6 sub zp[2]:19 3.333333336666667E8
word append::value
word append::value#0 value zp[2]:15 2.000000002E9
word append::value#1 value zp[2]:15 200002.0
word append::value#2 value zp[2]:15 200002.0
word append::value#3 value zp[2]:15 200002.0
word append::value#4 value zp[2]:15 200002.0
word append::value#5 value zp[2]:15 3.75175001E8
word append::value#8 value zp[2]:15 700002.5
word div10(word div10::val)
word~ div10::$0 zp[2]:19 2002.0
word~ div10::$2 zp[2]:21 2002.0
word~ div10::$3 zp[2]:23 2002.0
word~ div10::$4 zp[2]:4 2002.0
label div10::@return
word div10::return
word div10::return#0 return zp[2]:4 367.33333333333337
word div10::return#2 return zp[2]:4 202.0
word div10::val
word div10::val#0 val zp[2]:19 1501.5
word div10::val#1 val_1 zp[2]:21 1501.5
word div10::val#2 val_2 zp[2]:23 1501.5
word div10::val#3 val_3 zp[2]:4 2002.0
word div10::val#4 val_4 zp[2]:2 1102.0
word div16u(word div16u::dividend , word div16u::divisor)
label div16u::@1
label div16u::@return
word div16u::dividend
word div16u::dividend#0 dividend zp[2]:2 1102.0
word div16u::divisor
const word div16u::divisor#0 divisor = $a
word div16u::return
word div16u::return#0 return zp[2]:4 367.33333333333337
word div16u::return#2 return zp[2]:4 202.0
word divr16u(word divr16u::dividend , word divr16u::divisor , word divr16u::rem)
byte~ divr16u::$1 reg byte a 2.0000002E7
byte~ divr16u::$2 reg byte a 2.0000002E7
label divr16u::@1
label divr16u::@2
label divr16u::@3
label divr16u::@4
label divr16u::@5
label divr16u::@return
word divr16u::dividend
word divr16u::dividend#0 dividend zp[2]:23 2500000.25
word divr16u::dividend#1 dividend zp[2]:23 5501.0
word divr16u::dividend#2 dividend zp[2]:23 4287143.428571429
word divr16u::divisor
byte divr16u::i
byte divr16u::i#1 reg byte x 1.50000015E7
byte divr16u::i#2 reg byte x 1538461.6923076923
word divr16u::quotient
word divr16u::quotient#1 quotient zp[2]:4 1.50000015E7
word divr16u::quotient#2 quotient zp[2]:4 1.0000001E7
word divr16u::quotient#3 quotient zp[2]:4 2500000.25
word divr16u::rem
word divr16u::rem#0 rem zp[2]:21 7500000.75
word divr16u::rem#1 rem zp[2]:21 2.0000002E7
word divr16u::rem#2 rem zp[2]:21 2.0000002E7
word divr16u::rem#4 rem zp[2]:21 2.0000002E7
word divr16u::rem#5 rem zp[2]:21 1.0000001E7
word divr16u::rem#9 rem zp[2]:21 1.0000001E7
word divr16u::return
word divr16u::return#0 return zp[2]:4 6000200.8
word divr16u::return#2 return zp[2]:4 2002.0
signed word main()
word~ main::$10 zp[2]:6 11.0
word~ main::$14 zp[2]:6 22.0
word~ main::$15 zp[2]:17 22.0
word~ main::$16 zp[2]:6 22.0
word~ main::$17 zp[2]:15 22.0
word~ main::$3 zp[2]:6 11.0
label main::@1
label main::@10
label main::@11
label main::@12
label main::@13
label main::@14
label main::@15
label main::@16
label main::@17
label main::@2
label main::@3
label main::@4
label main::@5
label main::@6
label main::@7
label main::@8
label main::@9
label main::@return
signed word main::return
const byte* main::str[$24]  = "200 DIV16U: %5d,%4d IN %04d FRAMESm"
const byte* main::str1[$24]  = "200 DIV10 : %5d,%4d IN %04d FRAMESm"
word main::u
word main::u#16 u zp[2]:2 6.380952380952381
word main::u#18 u zp[2]:2 6.380952380952381
word main::u#3 u zp[2]:2 11.0
word main::u#4 u zp[2]:2 11.0
word main::v
word main::v#1 v zp[2]:4 101.0
word main::v#10 v zp[2]:4 4.800000000000001
word main::v#11 v zp[2]:4 10.307692307692308
word main::v#12 v zp[2]:4 10.307692307692308
word main::v#13 v zp[2]:4 4.0
word main::v#2 v zp[2]:4 101.0
byte myprintf(byte* myprintf::dst , byte* myprintf::str , word myprintf::w1 , word myprintf::w2 , word myprintf::w3)
byte~ myprintf::$18 reg byte a 20002.0
byte~ myprintf::$23 reg byte a 10001.0
byte~ myprintf::$24 reg byte a 20002.0
byte~ myprintf::$29 reg byte a 10001.0
byte~ myprintf::$30 reg byte a 20002.0
byte~ myprintf::$41 reg byte a 100001.0
byte~ myprintf::$56 reg byte a 20002.0
byte~ myprintf::$57 reg byte a 20002.0
label myprintf::@1
label myprintf::@10
label myprintf::@11
label myprintf::@12
label myprintf::@13
label myprintf::@14
label myprintf::@15
label myprintf::@16
label myprintf::@17
label myprintf::@18
label myprintf::@19
label myprintf::@2
label myprintf::@20
label myprintf::@21
label myprintf::@22
label myprintf::@23
label myprintf::@24
label myprintf::@25
label myprintf::@26
label myprintf::@27
label myprintf::@28
label myprintf::@29
label myprintf::@3
label myprintf::@30
label myprintf::@31
label myprintf::@32
label myprintf::@33
label myprintf::@34
label myprintf::@35
label myprintf::@36
label myprintf::@37
label myprintf::@38
label myprintf::@39
label myprintf::@4
label myprintf::@40
label myprintf::@41
label myprintf::@42
label myprintf::@43
label myprintf::@44
label myprintf::@45
label myprintf::@46
label myprintf::@47
label myprintf::@5
label myprintf::@6
label myprintf::@7
label myprintf::@8
label myprintf::@9
label myprintf::@return
byte myprintf::b
byte myprintf::b#1 reg byte x 12501.249999999998
byte myprintf::b#15 reg byte x 7500.75
byte myprintf::b#16 reg byte x 7500.75
byte myprintf::b#17 b zp[1]:12 24800.320000000003
byte myprintf::b#25 reg byte x 30003.0
byte myprintf::b#5 b zp[1]:12 200002.0
byte myprintf::b#6 reg byte x 20002.0
byte myprintf::bArg
byte myprintf::bArg#1 bArg zp[1]:9 20002.0
byte myprintf::bArg#10 bArg zp[1]:9 1216.337837837838
byte myprintf::bArg#11 bArg zp[1]:9 35003.5
byte myprintf::bDigits
byte myprintf::bDigits#1 bDigits zp[1]:13 20002.0
byte myprintf::bDigits#10 bDigits zp[1]:13 102501.25
byte myprintf::bDigits#12 bDigits zp[1]:13 58572.14285714286
byte myprintf::bDigits#16 bDigits zp[1]:13 2222.444444444445
byte myprintf::bDigits#18 bDigits zp[1]:13 17500.625
byte myprintf::bDigits#2 bDigits zp[1]:13 200002.0
byte myprintf::bDigits#28 bDigits zp[1]:13 30003.0
byte myprintf::bDigits#29 bDigits zp[1]:13 150006.0
byte myprintf::bDigits#3 bDigits zp[1]:13 200002.0
byte myprintf::bFormat
byte myprintf::bFormat#10 bFormat zp[1]:8 3750.375
byte myprintf::bFormat#5 bFormat zp[1]:8 25002.5
byte myprintf::bLeadZero
byte myprintf::bLeadZero#11 bLeadZero zp[1]:11 2205.9705882352937
byte myprintf::bLeadZero#20 bLeadZero zp[1]:11 25002.5
byte myprintf::bLen
byte myprintf::bLen#1 bLen zp[1]:14 20002.0
byte myprintf::bLen#10 bLen zp[1]:14 3336.0714285714294
byte myprintf::bLen#11 reg byte y 3750.375
byte myprintf::bLen#12 bLen zp[1]:14 68334.16666666666
byte myprintf::bLen#13 bLen zp[1]:14 66001.2
byte myprintf::bLen#14 bLen zp[1]:14 136668.3333333333
byte myprintf::bLen#28 bLen zp[1]:14 35003.5
byte myprintf::bLen#3 bLen zp[1]:14 20002.0
byte myprintf::bLen#32 bLen zp[1]:14 120003.0
byte myprintf::bLen#36 bLen zp[1]:14 150006.0
byte myprintf::bLen#4 bLen zp[1]:14 100001.0
byte myprintf::bLen#5 bLen zp[1]:14 100001.0
byte myprintf::bLen#6 bLen zp[1]:14 100001.0
byte myprintf::bLen#7 bLen zp[1]:14 20002.0
byte myprintf::bTrailing
byte myprintf::bTrailing#11 bTrailing zp[1]:10 1029.5147058823527
byte myprintf::bTrailing#24 bTrailing zp[1]:10 25002.5
const byte* myprintf::buf6[6]  = { fill( 6, 0) }
byte myprintf::digit
byte myprintf::digit#2 reg byte x 200002.0
byte myprintf::digit#3 reg byte x 100001.0
byte* myprintf::dst
byte myprintf::return
byte* myprintf::str
byte* myprintf::str#0 str zp[2]:21 20002.0
byte* myprintf::str#10 str zp[2]:21 527.6973684210526
byte* myprintf::str#6 str zp[2]:21 101.0
word myprintf::w
word myprintf::w#10 w zp[2]:23 1029.5147058823527
word myprintf::w#18 w zp[2]:23 35003.5
word myprintf::w#22 w zp[2]:23 20002.0
word myprintf::w#53 w zp[2]:23 20002.0
word myprintf::w#54 w zp[2]:23 20002.0
word myprintf::w#55 w zp[2]:23 20002.0
word myprintf::w1
word myprintf::w1#0 w1 zp[2]:2 11.0
word myprintf::w1#1 w1 zp[2]:2 11.0
word myprintf::w1#7 w1 zp[2]:2 128.5
word myprintf::w2
word myprintf::w2#0 w2 zp[2]:4 22.0
word myprintf::w2#1 w2 zp[2]:4 22.0
word myprintf::w2#8 w2 zp[2]:4 128.5
word myprintf::w3
word myprintf::w3#0 w3 zp[2]:6 7.333333333333333
word myprintf::w3#1 w3 zp[2]:6 7.333333333333333
word myprintf::w3#8 w3 zp[2]:6 128.5
const byte* strTemp[$64]  = { fill( $64, 0) }
void utoa(word utoa::value , byte* utoa::dst)
byte~ utoa::$16 reg byte a 200002.0
byte~ utoa::$21 reg byte a 200002.0
label utoa::@1
label utoa::@10
label utoa::@11
label utoa::@12
label utoa::@13
label utoa::@14
label utoa::@15
label utoa::@16
label utoa::@2
label utoa::@3
label utoa::@4
label utoa::@5
label utoa::@6
label utoa::@7
label utoa::@8
label utoa::@9
label utoa::@return
byte utoa::bStarted
byte utoa::bStarted#5 reg byte x 66667.33333333333
byte utoa::bStarted#6 reg byte x 100001.0
byte utoa::bStarted#7 reg byte x 200002.0
byte* utoa::dst
byte* utoa::dst#1 dst zp[2]:17 200002.0
byte* utoa::dst#10 dst zp[2]:17 62500.625
byte* utoa::dst#12 dst zp[2]:17 100001.0
byte* utoa::dst#13 dst zp[2]:17 62500.625
byte* utoa::dst#16 dst zp[2]:17 37500.375
byte* utoa::dst#2 dst zp[2]:17 200002.0
byte* utoa::dst#3 dst zp[2]:17 200002.0
byte* utoa::dst#4 dst zp[2]:17 200002.0
word utoa::value
word utoa::value#0 value zp[2]:15 200002.0
word utoa::value#1 value zp[2]:15 100001.0
word utoa::value#10 value zp[2]:15 125001.25
word utoa::value#11 value zp[2]:15 125001.25
word utoa::value#12 value zp[2]:15 200002.0
word utoa::value#2 value zp[2]:15 100001.0
word utoa::value#3 value zp[2]:15 100001.0
word utoa::value#4 value zp[2]:15 103334.66666666666
word utoa::value#6 value zp[2]:15 125001.25
const nomodify byte* zp1 = (byte*) 97
const nomodify byte* zp2 = (byte*) 98

zp[2]:2 [ main::u#16 main::u#3 myprintf::w1#7 myprintf::w1#1 myprintf::w1#0 div16u::dividend#0 main::u#18 main::u#4 div10::val#4 ]
zp[2]:4 [ main::v#10 main::v#12 main::v#13 main::v#11 main::v#2 main::v#1 myprintf::w2#8 myprintf::w2#1 myprintf::w2#0 div10::return#2 div16u::return#2 div10::return#0 div16u::return#0 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 div10::$4 div10::val#3 ]
zp[2]:6 [ myprintf::w3#8 myprintf::w3#1 myprintf::w3#0 main::$10 main::$3 main::$16 main::$14 ]
zp[1]:8 [ myprintf::bFormat#10 myprintf::bFormat#5 ]
zp[1]:9 [ myprintf::bArg#10 myprintf::bArg#11 myprintf::bArg#1 ]
zp[1]:10 [ myprintf::bTrailing#11 myprintf::bTrailing#24 ]
zp[1]:11 [ myprintf::bLeadZero#11 myprintf::bLeadZero#20 ]
reg byte a [ myprintf::$23 ]
reg byte a [ myprintf::$29 ]
zp[1]:12 [ myprintf::b#17 myprintf::b#5 ]
zp[1]:13 [ myprintf::bDigits#12 myprintf::bDigits#16 myprintf::bDigits#28 myprintf::bDigits#29 myprintf::bDigits#1 myprintf::bDigits#18 myprintf::bDigits#10 myprintf::bDigits#2 myprintf::bDigits#3 ]
zp[1]:14 [ myprintf::bLen#32 myprintf::bLen#12 myprintf::bLen#10 myprintf::bLen#28 myprintf::bLen#36 myprintf::bLen#7 myprintf::bLen#3 myprintf::bLen#13 myprintf::bLen#14 myprintf::bLen#1 myprintf::bLen#4 myprintf::bLen#5 myprintf::bLen#6 ]
reg byte x [ myprintf::digit#3 myprintf::digit#2 ]
reg byte a [ myprintf::$41 ]
reg byte x [ myprintf::b#25 myprintf::b#1 myprintf::b#6 ]
reg byte x [ utoa::bStarted#7 utoa::bStarted#6 utoa::bStarted#5 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp[2]:15 [ main::$17 utoa::value#12 utoa::value#3 utoa::value#10 utoa::value#2 utoa::value#11 utoa::value#6 utoa::value#4 utoa::value#0 utoa::value#1 append::value#5 append::value#8 append::value#1 append::value#2 append::value#3 append::value#4 append::value#0 append::return#10 append::return#4 append::return#3 append::return#2 ]
zp[2]:17 [ main::$15 utoa::dst#12 utoa::dst#4 utoa::dst#13 utoa::dst#2 utoa::dst#10 utoa::dst#16 utoa::dst#1 append::dst#4 append::dst#1 append::dst#2 append::dst#3 utoa::dst#3 ]
reg byte a [ myprintf::$56 ]
reg byte a [ myprintf::$18 ]
reg byte x [ myprintf::b#15 ]
reg byte a [ myprintf::$24 ]
reg byte y [ myprintf::bLen#11 ]
reg byte a [ myprintf::$57 ]
reg byte x [ myprintf::b#16 ]
reg byte a [ myprintf::$30 ]
zp[2]:19 [ div10::$0 div10::val#0 append::sub#6 ]
zp[2]:21 [ div10::$2 div10::val#1 divr16u::rem#4 divr16u::rem#9 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 myprintf::str#10 myprintf::str#6 myprintf::str#0 ]
zp[2]:23 [ div10::$3 div10::val#2 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 myprintf::w#10 myprintf::w#18 myprintf::w#22 myprintf::w#53 myprintf::w#54 myprintf::w#55 ]
reg byte a [ utoa::$21 ]
reg byte a [ utoa::$16 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
