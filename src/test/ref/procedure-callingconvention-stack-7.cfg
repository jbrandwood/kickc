@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] callexecute main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

__stackcall (void()) printline()
printline: scope:[printline]  from
  [4] (byte) printline::i ← (byte) 0
  to:printline::@1
printline::@1: scope:[printline]  from printline printline::@2
  [5] if((byte) printline::i<(byte) $28) goto printline::@2
  to:printline::@return
printline::@return: scope:[printline]  from printline::@1
  [6] return 
  to:@return
printline::@2: scope:[printline]  from printline::@1
  [7] *((const byte*) SCREEN + (byte) printline::i) ← (byte) '*'
  [8] (byte) printline::i ← ++ (byte) printline::i
  to:printline::@1

__stackcall (void()) main()
main: scope:[main]  from
  [9] (byte) main::val ← (byte) 0
  [10] (byte) main::val ← *((const byte*) SCREEN)
  [11] callexecute printline 
  [12] *((const byte*) SCREEN+(byte) $50) ← (byte) main::val
  to:main::@return
main::@return: scope:[main]  from main
  [13] return 
  to:@return
