@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  asm { cld ldx#$ff txs  }
  to:main::disableVideoOutput1
main::disableVideoOutput1: scope:[main]  from main
  [5] *((byte*)(const struct RICOH_2C02*) PPU) ← (byte) 0
  [6] *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUMASK) ← (byte) 0
  to:main::disableAudioOutput1
main::disableAudioOutput1: scope:[main]  from main::disableVideoOutput1
  [7] *((const nomodify byte*) FR_COUNTER) ← (byte) $40
  [8] *((byte*)(const struct RICOH_2A03*) APU+(const byte) OFFSET_STRUCT_RICOH_2A03_DMC_FREQ) ← (byte) $40
  to:main::clearVBlankFlag1
main::clearVBlankFlag1: scope:[main]  from main::disableAudioOutput1
  asm { ldaPPU_PPUSTATUS  }
  to:main::waitForVBlank1
main::waitForVBlank1: scope:[main]  from main::clearVBlankFlag1
  [10] phi()
  to:main::waitForVBlank1_@1
main::waitForVBlank1_@1: scope:[main]  from main::waitForVBlank1 main::waitForVBlank1_@1
  [11] (byte~) main::waitForVBlank1_$0 ← *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUSTATUS) & (byte) $80
  [12] if((byte) 0==(byte~) main::waitForVBlank1_$0) goto main::waitForVBlank1_@1
  to:main::@1
main::@1: scope:[main]  from main::@1 main::waitForVBlank1_@1
  [13] (byte) main::i#2 ← phi( main::@1/(byte) main::i#1 main::waitForVBlank1_@1/(byte) 0 )
  [14] *((const nomodify byte*) MEMORY + (byte) main::i#2) ← (byte) 0
  [15] *((const nomodify byte*) MEMORY+(word) $100 + (byte) main::i#2) ← (byte) 0
  [16] *((const nomodify byte*) MEMORY+(word) $200 + (byte) main::i#2) ← (byte) 0
  [17] *((const nomodify byte*) MEMORY+(word) $300 + (byte) main::i#2) ← (byte) 0
  [18] *((const nomodify byte*) MEMORY+(word) $400 + (byte) main::i#2) ← (byte) 0
  [19] *((const nomodify byte*) MEMORY+(word) $500 + (byte) main::i#2) ← (byte) 0
  [20] *((const nomodify byte*) MEMORY+(word) $600 + (byte) main::i#2) ← (byte) 0
  [21] *((const nomodify byte*) MEMORY+(word) $700 + (byte) main::i#2) ← (byte) 0
  [22] (byte) main::i#1 ← ++ (byte) main::i#2
  [23] if((byte) 0!=(byte) main::i#1) goto main::@1
  to:main::waitForVBlank2
main::waitForVBlank2: scope:[main]  from main::@1
  [24] phi()
  to:main::waitForVBlank2_@1
main::waitForVBlank2_@1: scope:[main]  from main::waitForVBlank2 main::waitForVBlank2_@1
  [25] (byte~) main::waitForVBlank2_$0 ← *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUSTATUS) & (byte) $80
  [26] if((byte) 0==(byte~) main::waitForVBlank2_$0) goto main::waitForVBlank2_@1
  to:main::@3
main::@3: scope:[main]  from main::waitForVBlank2_@1
  [27] phi()
  [28] call initPalette 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [29] phi()
  [30] call initSpriteBuffer 
  to:main::enableVideoOutput1
main::enableVideoOutput1: scope:[main]  from main::@4
  [31] *((byte*)(const struct RICOH_2C02*) PPU) ← (byte) $80
  [32] *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUMASK) ← (byte) $10
  to:main::@2
main::@2: scope:[main]  from main::@2 main::enableVideoOutput1
  [33] phi()
  to:main::@2

(void()) initSpriteBuffer()
initSpriteBuffer: scope:[initSpriteBuffer]  from main::@4
  [34] phi()
  to:initSpriteBuffer::@1
initSpriteBuffer::@1: scope:[initSpriteBuffer]  from initSpriteBuffer initSpriteBuffer::@1
  [35] (byte) initSpriteBuffer::i#2 ← phi( initSpriteBuffer/(byte) 0 initSpriteBuffer::@1/(byte) initSpriteBuffer::i#1 )
  [36] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER + (byte) initSpriteBuffer::i#2) ← *((byte*)(const struct ObjectAttribute*) SPRITES + (byte) initSpriteBuffer::i#2)
  [37] (byte) initSpriteBuffer::i#1 ← ++ (byte) initSpriteBuffer::i#2
  [38] if((byte) initSpriteBuffer::i#1!=(byte) 4*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) goto initSpriteBuffer::@1
  to:initSpriteBuffer::@return
initSpriteBuffer::@return: scope:[initSpriteBuffer]  from initSpriteBuffer::@1
  [39] return 
  to:@return

(void()) initPalette()
initPalette: scope:[initPalette]  from main::@3
  asm { ldaPPU_PPUSTATUS  }
  [41] *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUADDR) ← >(const nomodify byte*) PPU_PALETTE
  [42] *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUADDR) ← (byte) 0
  to:initPalette::@1
initPalette::@1: scope:[initPalette]  from initPalette initPalette::@2
  [43] (byte) initPalette::i#2 ← phi( initPalette/(byte) 0 initPalette::@2/(byte) initPalette::i#1 )
  [44] if((byte) initPalette::i#2<(byte) $20*(const byte) SIZEOF_BYTE) goto initPalette::@2
  to:initPalette::@return
initPalette::@return: scope:[initPalette]  from initPalette::@1
  [45] return 
  to:@return
initPalette::@2: scope:[initPalette]  from initPalette::@1
  [46] *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_PPUDATA) ← *((const byte*) PALETTE + (byte) initPalette::i#2)
  [47] (byte) initPalette::i#1 ← ++ (byte) initPalette::i#2
  to:initPalette::@1

interrupt(HARDWARE_STACK)(void()) vblank()
vblank: scope:[vblank]  from
  [48] phi()
  to:vblank::transferSpriteBufferToPpu1
vblank::transferSpriteBufferToPpu1: scope:[vblank]  from vblank
  [49] *((byte*)(const struct RICOH_2C02*) PPU+(const byte) OFFSET_STRUCT_RICOH_2C02_OAMADDR) ← (byte) 0
  [50] *((byte*)(const struct RICOH_2A03*) APU+(const byte) OFFSET_STRUCT_RICOH_2A03_OAMDMA) ← >(const nomodify struct ObjectAttribute*) OAM_BUFFER
  to:vblank::@4
vblank::@4: scope:[vblank]  from vblank::transferSpriteBufferToPpu1
  [51] *((byte*)(const struct RICOH_2A03*) APU+(const byte) OFFSET_STRUCT_RICOH_2A03_JOY1) ← (byte) 1
  [52] *((byte*)(const struct RICOH_2A03*) APU+(const byte) OFFSET_STRUCT_RICOH_2A03_JOY1) ← (byte) 0
  [53] (byte~) vblank::$1 ← *((byte*)(const struct RICOH_2A03*) APU+(const byte) OFFSET_STRUCT_RICOH_2A03_JOY1) & (byte) 1
  [54] if((byte) 0==(byte~) vblank::$1) goto vblank::@1
  to:vblank::@2
vblank::@2: scope:[vblank]  from vblank::@4
  [55] phi()
  [56] call moveLuigiRight 
  to:vblank::@1
vblank::@1: scope:[vblank]  from vblank::@2 vblank::@4
  [57] (byte~) vblank::$3 ← *((byte*)(const struct RICOH_2A03*) APU+(const byte) OFFSET_STRUCT_RICOH_2A03_JOY1) & (byte) 1
  [58] if((byte) 0==(byte~) vblank::$3) goto vblank::@return
  to:vblank::@3
vblank::@3: scope:[vblank]  from vblank::@1
  [59] phi()
  [60] call moveLuigiLeft 
  to:vblank::@return
vblank::@return: scope:[vblank]  from vblank::@1 vblank::@3
  [61] return 
  to:@return

(void()) moveLuigiLeft()
moveLuigiLeft: scope:[moveLuigiLeft]  from vblank::@3
  [62] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X) ← -- *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X)
  [63] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 1*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) ← -- *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 1*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE)
  [64] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 2*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) ← -- *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 2*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE)
  [65] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 3*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) ← -- *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 3*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE)
  to:moveLuigiLeft::@return
moveLuigiLeft::@return: scope:[moveLuigiLeft]  from moveLuigiLeft
  [66] return 
  to:@return

(void()) moveLuigiRight()
moveLuigiRight: scope:[moveLuigiRight]  from vblank::@2
  [67] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X) ← ++ *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X)
  [68] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 1*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) ← ++ *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 1*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE)
  [69] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 2*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) ← ++ *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 2*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE)
  [70] *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 3*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE) ← ++ *((byte*)(const nomodify struct ObjectAttribute*) OAM_BUFFER+(const byte) OFFSET_STRUCT_OBJECTATTRIBUTE_X+(byte) 3*(const byte) SIZEOF_STRUCT_OBJECTATTRIBUTE)
  to:moveLuigiRight::@return
moveLuigiRight::@return: scope:[moveLuigiRight]  from moveLuigiRight
  [71] return 
  to:@return
