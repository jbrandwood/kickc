const nomodify byte* BASIC_CHARSET = (byte*) 4096
const nomodify byte* BASIC_SCREEN = (byte*) 1024
const nomodify byte* BOB_CHARSET = (byte*) 8192
const nomodify byte* BOB_SCREEN = (byte*) 10240
const nomodify byte BOB_SHIFTS_X = 4
const nomodify byte BOB_SHIFTS_Y = 8
const nomodify byte BOB_SUBTABLE_SIZE = BOB_SHIFTS_X*BOB_SHIFTS_Y
const byte* BOB_TABLES[9*8*4]  = { fill( 9*8*4, 0) }
const nomodify byte* BORDER_COLOR = (byte*) 53280
const nomodify struct MOS6526_CIA* CIA1 = (struct MOS6526_CIA*) 56320
const nomodify struct MOS6526_CIA* CIA2 = (struct MOS6526_CIA*) 56576
const nomodify byte* D018 = (byte*) 53272
const nomodify byte KEY_SPACE = $3c
byte MOS6526_CIA::INTERRUPT
byte MOS6526_CIA::PORT_A
byte MOS6526_CIA::PORT_A_DDR
byte MOS6526_CIA::PORT_B
byte MOS6526_CIA::PORT_B_DDR
byte MOS6526_CIA::SERIAL_DATA
word MOS6526_CIA::TIMER_A
byte MOS6526_CIA::TIMER_A_CONTROL
word MOS6526_CIA::TIMER_B
byte MOS6526_CIA::TIMER_B_CONTROL
byte MOS6526_CIA::TOD_10THS
byte MOS6526_CIA::TOD_HOURS
byte MOS6526_CIA::TOD_MIN
byte MOS6526_CIA::TOD_SEC
byte MOS6569_VICII::BG_COLOR
byte MOS6569_VICII::BG_COLOR1
byte MOS6569_VICII::BG_COLOR2
byte MOS6569_VICII::BG_COLOR3
byte MOS6569_VICII::BORDER_COLOR
byte MOS6569_VICII::CONTROL1
byte MOS6569_VICII::CONTROL2
byte MOS6569_VICII::IRQ_ENABLE
byte MOS6569_VICII::IRQ_STATUS
byte MOS6569_VICII::LIGHTPEN_X
byte MOS6569_VICII::LIGHTPEN_Y
byte MOS6569_VICII::MEMORY
byte MOS6569_VICII::RASTER
byte MOS6569_VICII::SPRITE0_COLOR
byte MOS6569_VICII::SPRITE0_X
byte MOS6569_VICII::SPRITE0_Y
byte MOS6569_VICII::SPRITE1_COLOR
byte MOS6569_VICII::SPRITE1_X
byte MOS6569_VICII::SPRITE1_Y
byte MOS6569_VICII::SPRITE2_COLOR
byte MOS6569_VICII::SPRITE2_X
byte MOS6569_VICII::SPRITE2_Y
byte MOS6569_VICII::SPRITE3_COLOR
byte MOS6569_VICII::SPRITE3_X
byte MOS6569_VICII::SPRITE3_Y
byte MOS6569_VICII::SPRITE4_COLOR
byte MOS6569_VICII::SPRITE4_X
byte MOS6569_VICII::SPRITE4_Y
byte MOS6569_VICII::SPRITE5_COLOR
byte MOS6569_VICII::SPRITE5_X
byte MOS6569_VICII::SPRITE5_Y
byte MOS6569_VICII::SPRITE6_COLOR
byte MOS6569_VICII::SPRITE6_X
byte MOS6569_VICII::SPRITE6_Y
byte MOS6569_VICII::SPRITE7_COLOR
byte MOS6569_VICII::SPRITE7_X
byte MOS6569_VICII::SPRITE7_Y
byte MOS6569_VICII::SPRITES_BG_COLLISION
byte MOS6569_VICII::SPRITES_COLLISION
byte MOS6569_VICII::SPRITES_ENABLE
byte MOS6569_VICII::SPRITES_EXPAND_X
byte MOS6569_VICII::SPRITES_EXPAND_Y
byte MOS6569_VICII::SPRITES_MC
byte MOS6569_VICII::SPRITES_MCOLOR1
byte MOS6569_VICII::SPRITES_MCOLOR2
byte MOS6569_VICII::SPRITES_PRIORITY
byte MOS6569_VICII::SPRITES_XMSB
byte MOS6581_SID::CH1_ATTACK_DECAY
byte MOS6581_SID::CH1_CONTROL
word MOS6581_SID::CH1_FREQ
word MOS6581_SID::CH1_PULSE_WIDTH
byte MOS6581_SID::CH1_SUSTAIN_RELEASE
byte MOS6581_SID::CH2_ATTACK_DECAY
byte MOS6581_SID::CH2_CONTROL
word MOS6581_SID::CH2_FREQ
word MOS6581_SID::CH2_PULSE_WIDTH
byte MOS6581_SID::CH2_SUSTAIN_RELEASE
byte MOS6581_SID::CH3_ATTACK_DECAY
byte MOS6581_SID::CH3_CONTROL
byte MOS6581_SID::CH3_ENV
word MOS6581_SID::CH3_FREQ
byte MOS6581_SID::CH3_OSC
word MOS6581_SID::CH3_PULSE_WIDTH
byte MOS6581_SID::CH3_SUSTAIN_RELEASE
byte MOS6581_SID::FILTER_CUTOFF_HIGH
byte MOS6581_SID::FILTER_CUTOFF_LOW
byte MOS6581_SID::FILTER_SETUP
byte MOS6581_SID::POT_X
byte MOS6581_SID::POT_Y
byte MOS6581_SID::VOLUME_FILTER_MODE
const word* MUL40[$20]  = { fill( $20, 0) }
const nomodify byte NUM_BOBS = $19
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR = 2
const byte OFFSET_STRUCT_MOS6526_CIA_PORT_B = 1
const to_nomodify byte* PROTO_BOB[3*3*8]  = kickasm {{ .var pic = LoadPicture("smiley.png", List().add($000000, $ffffff))
	.for (var x=0;x<3; x++)
    	.for (var y=0; y<24; y++)
            .byte pic.getSinglecolorByte(x,y)
 }}
const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
const nomodify byte* RASTER = (byte*) 53266
const byte** RENDERBOB_CLEANUP[NUM_BOBS]  = { fill( NUM_BOBS, 0) }
const byte SIZEOF_POINTER = 2
byte bob_charset_next_id
byte bob_charset_next_id#15 bob_charset_next_id zp[1]:27 106.5
byte bob_charset_next_id#17 bob_charset_next_id zp[1]:27 9.091909218181819E7
byte bob_charset_next_id#23 bob_charset_next_id zp[1]:27 2750.5
byte bob_charset_next_id#25 bob_charset_next_id zp[1]:27 1.3334066693333334E8
byte bob_charset_next_id#32 bob_charset_next_id zp[1]:27 367.33333333333337
byte bob_charset_next_id#7 bob_charset_next_id zp[1]:27 200002.0
byte charsetFindOrAddGlyph(byte* charsetFindOrAddGlyph::glyph , byte* charsetFindOrAddGlyph::charset)
label charsetFindOrAddGlyph::@1
label charsetFindOrAddGlyph::@2
label charsetFindOrAddGlyph::@3
label charsetFindOrAddGlyph::@4
label charsetFindOrAddGlyph::@5
label charsetFindOrAddGlyph::@6
label charsetFindOrAddGlyph::@7
label charsetFindOrAddGlyph::@8
label charsetFindOrAddGlyph::@9
label charsetFindOrAddGlyph::@return
byte* charsetFindOrAddGlyph::charset
byte charsetFindOrAddGlyph::found
byte charsetFindOrAddGlyph::found#2 reg byte a 1.000000001E9
byte* charsetFindOrAddGlyph::glyph
byte* charsetFindOrAddGlyph::glyph#1 glyph zp[2]:28 20002.0
byte* charsetFindOrAddGlyph::glyph#10 glyph zp[2]:28 7.333340002E8
byte* charsetFindOrAddGlyph::glyph_cursor
byte* charsetFindOrAddGlyph::glyph_cursor#1 glyph_cursor zp[2]:21 2.000000002E9
byte* charsetFindOrAddGlyph::glyph_cursor#11 glyph_cursor zp[2]:21 1.0000000003076923E9
byte charsetFindOrAddGlyph::glyph_id
byte charsetFindOrAddGlyph::glyph_id#1 reg byte x 1.000000001E9
byte charsetFindOrAddGlyph::glyph_id#11 reg byte x 1.8750062525E8
byte charsetFindOrAddGlyph::i
byte charsetFindOrAddGlyph::i#1 reg byte y 2.0000000002E10
byte charsetFindOrAddGlyph::i#2 reg byte y 1.6666666668333332E10
byte charsetFindOrAddGlyph::i1
byte charsetFindOrAddGlyph::i1#1 reg byte y 2.000000002E9
byte charsetFindOrAddGlyph::i1#2 reg byte y 1.6666666683333335E9
byte charsetFindOrAddGlyph::return
byte charsetFindOrAddGlyph::return#1 reg byte a 20002.0
byte keyboard_key_pressed(byte keyboard_key_pressed::key)
byte~ keyboard_key_pressed::$2 reg byte a 202.0
label keyboard_key_pressed::@1
label keyboard_key_pressed::@return
byte keyboard_key_pressed::colidx
const byte keyboard_key_pressed::colidx#0 colidx = KEY_SPACE&7
byte keyboard_key_pressed::key
byte keyboard_key_pressed::return
byte keyboard_key_pressed::return#0 reg byte a 30.75
byte keyboard_key_pressed::return#2 reg byte a 22.0
byte keyboard_key_pressed::return#3 reg byte a 22.0
byte keyboard_key_pressed::rowidx
const byte keyboard_key_pressed::rowidx#0 rowidx = KEY_SPACE>>3
const byte* keyboard_matrix_col_bitmask[8]  = { 1, 2, 4, 8, $10, $20, $40, $80 }
byte keyboard_matrix_read(byte keyboard_matrix_read::rowid)
label keyboard_matrix_read::@return
byte keyboard_matrix_read::return
byte keyboard_matrix_read::return#0 reg byte a 367.33333333333337
byte keyboard_matrix_read::return#2 reg byte a 202.0
byte keyboard_matrix_read::row_pressed_bits
byte keyboard_matrix_read::rowid
const byte* keyboard_matrix_row_bitmask[8]  = { $fe, $fd, $fb, $f7, $ef, $df, $bf, $7f }
void main()
byte~ main::$15 reg byte a 22.0
byte~ main::$17 reg byte a 22.0
label main::@1
label main::@10
label main::@11
label main::@12
label main::@13
label main::@14
label main::@15
label main::@16
label main::@2
label main::@3
label main::@4
label main::@5
label main::@6
label main::@7
label main::@8
label main::@9
label main::@return
byte main::col
byte main::col#1 col zp[1]:15 151.5
byte main::col#5 col zp[1]:15 13.466666666666667
const signed word main::colOffsetX = $100
const signed word main::colOffsetY = $1800
signed word main::origX
signed word main::origX#1 origX zp[2]:13 3.142857142857143
signed word main::origX#8 origX zp[2]:13 1.5
const signed word main::origY = $a00
byte main::row
byte main::row#1 reg byte x 1501.5
byte main::row#2 reg byte x 250.25
const signed word main::rowOffsetX = $c00
signed word main::rowOffsetY
signed word main::rowOffsetY#1 rowOffsetY zp[2]:2 3.6666666666666665
signed word main::rowOffsetY#10 rowOffsetY zp[2]:2 44.47826086956522
signed word main::rowX
signed word main::rowX#1 rowX zp[2]:4 50.5
signed word main::rowY
signed word main::rowY#1 rowY zp[2]:6 67.33333333333333
label main::toD0181
byte* main::toD0181_gfx
byte main::toD0181_return
const byte main::toD0181_return#0 toD0181_return = >(word)BOB_SCREEN&$3fff*4|>(word)BOB_CHARSET/4&$f
byte* main::toD0181_screen
label main::toD0182
byte* main::toD0182_gfx
byte main::toD0182_return
const byte main::toD0182_return#0 toD0182_return = >(word)BASIC_SCREEN&$3fff*4|>(word)BASIC_CHARSET/4&$f
byte* main::toD0182_screen
label main::vicSelectGfxBank1
label main::vicSelectGfxBank1_@1
byte* main::vicSelectGfxBank1_gfx
label main::vicSelectGfxBank1_toDd001
byte* main::vicSelectGfxBank1_toDd001_gfx
byte main::vicSelectGfxBank1_toDd001_return
const byte main::vicSelectGfxBank1_toDd001_return#0 vicSelectGfxBank1_toDd001_return = 3
label main::vicSelectGfxBank2
label main::vicSelectGfxBank2_@1
byte* main::vicSelectGfxBank2_gfx
label main::vicSelectGfxBank2_toDd001
byte* main::vicSelectGfxBank2_toDd001_gfx
byte main::vicSelectGfxBank2_toDd001_return
const byte main::vicSelectGfxBank2_toDd001_return#0 vicSelectGfxBank2_toDd001_return = 3
signed word main::x
signed word main::x#0 x zp[2]:4 24.153846153846153
signed word main::x#1 x_1 zp[2]:8 400.4
signed word main::x#2 x_1 zp[2]:8 620.8
signed word main::x#4 x zp[2]:4 22.0
signed word main::x#7 x_1 zp[2]:8 101.0
signed word main::y
signed word main::y#0 y zp[2]:6 21.642857142857142
signed word main::y#1 y_1 zp[2]:10 500.5
signed word main::y#2 y_1 zp[2]:10 517.3333333333334
signed word main::y#6 y_1 zp[2]:10 202.0
void* memset(void* memset::str , byte memset::c , word memset::num)
label memset::@1
label memset::@2
label memset::@return
byte memset::c
const byte memset::c#0 c = 0
byte* memset::dst
byte* memset::dst#1 dst zp[2]:19 202.0
byte* memset::dst#2 dst zp[2]:19 134.66666666666666
byte* memset::end
const byte* memset::end#0 end = (byte*)memset::str#0+memset::num#0
word memset::num
const word memset::num#0 num = $3e8
void* memset::return
void* memset::str
const void* memset::str#0 str = (void*)BOB_SCREEN
void mulf_init()
byte~ mulf_init::$1 reg byte a 202.0
byte~ mulf_init::$4 reg byte a 202.0
byte~ mulf_init::$5 reg byte a 202.0
label mulf_init::@1
label mulf_init::@2
label mulf_init::@3
label mulf_init::@4
label mulf_init::@5
label mulf_init::@6
label mulf_init::@7
label mulf_init::@8
label mulf_init::@9
label mulf_init::@return
byte mulf_init::c
byte mulf_init::c#1 c zp[1]:12 23.307692307692307
byte mulf_init::c#2 c zp[1]:12 101.0
byte mulf_init::dir
byte mulf_init::dir#2 dir zp[1]:16 37.875
byte mulf_init::dir#4 dir zp[1]:16 101.0
word mulf_init::sqr
word mulf_init::sqr#1 sqr zp[2]:21 101.0
word mulf_init::sqr#2 sqr zp[2]:21 202.0
word mulf_init::sqr#3 sqr zp[2]:21 84.16666666666666
word mulf_init::sqr#4 sqr zp[2]:21 50.5
byte* mulf_init::sqr1_hi
byte* mulf_init::sqr1_hi#1 sqr1_hi zp[2]:28 67.33333333333333
byte* mulf_init::sqr1_hi#2 sqr1_hi zp[2]:28 25.25
byte* mulf_init::sqr1_lo
byte* mulf_init::sqr1_lo#1 sqr1_lo zp[2]:25 202.0
byte* mulf_init::sqr1_lo#2 sqr1_lo zp[2]:25 28.857142857142858
byte* mulf_init::sqr2_hi
byte* mulf_init::sqr2_hi#1 sqr2_hi zp[2]:19 33.666666666666664
byte* mulf_init::sqr2_hi#2 sqr2_hi zp[2]:19 75.75
byte* mulf_init::sqr2_lo
byte* mulf_init::sqr2_lo#1 sqr2_lo zp[2]:17 202.0
byte* mulf_init::sqr2_lo#2 sqr2_lo zp[2]:17 44.888888888888886
byte mulf_init::x_2
byte mulf_init::x_2#1 reg byte x 101.0
byte mulf_init::x_2#2 reg byte x 50.5
byte mulf_init::x_2#3 reg byte x 60.599999999999994
byte mulf_init::x_255
byte mulf_init::x_255#1 reg byte x 60.599999999999994
byte mulf_init::x_255#2 reg byte x 80.8
const byte* mulf_sqr1_hi[$200]  = { fill( $200, 0) }
const byte* mulf_sqr1_lo[$200]  = { fill( $200, 0) }
const byte* mulf_sqr2_hi[$200]  = { fill( $200, 0) }
const byte* mulf_sqr2_lo[$200]  = { fill( $200, 0) }
void prepareBobs()
byte~ prepareBobs::$6 reg byte a 20002.0
label prepareBobs::@1
label prepareBobs::@10
label prepareBobs::@11
label prepareBobs::@12
label prepareBobs::@13
label prepareBobs::@2
label prepareBobs::@3
label prepareBobs::@4
label prepareBobs::@5
label prepareBobs::@6
label prepareBobs::@7
label prepareBobs::@8
label prepareBobs::@9
label prepareBobs::@return
byte* prepareBobs::bob_glyph
byte* prepareBobs::bob_glyph#1 bob_glyph zp[2]:28 5000.5
byte* prepareBobs::bob_glyph#2 bob_glyph zp[2]:28 4286.142857142857
byte* prepareBobs::bob_table
byte* prepareBobs::bob_table#0 bob_table zp[2]:17 2002.0
byte* prepareBobs::bob_table#1 bob_table zp[2]:17 6667.333333333333
byte* prepareBobs::bob_table#2 bob_table zp[2]:17 3875.5
byte prepareBobs::bob_table_idx
byte prepareBobs::bob_table_idx#1 bob_table_idx zp[1]:16 400.4
byte prepareBobs::bob_table_idx#12 bob_table_idx zp[1]:16 188.52941176470588
byte prepareBobs::bob_table_idx#7 bob_table_idx zp[1]:16 101.0
byte prepareBobs::cell
byte prepareBobs::cell#1 cell zp[1]:24 20002.0
byte prepareBobs::cell#2 cell zp[1]:24 3000.3
byte prepareBobs::shift_x
byte prepareBobs::shift_x#1 shift_x zp[1]:23 2002.0
byte prepareBobs::shift_x#2 shift_x zp[1]:23 166.83333333333334
byte prepareBobs::shift_y
byte prepareBobs::shift_y#1 shift_y zp[1]:12 202.0
byte prepareBobs::shift_y#2 shift_y zp[1]:12 13.173913043478262
byte* progress_cursor
byte* progress_cursor#16 progress_cursor zp[2]:13 101.0
byte* progress_cursor#18 progress_cursor zp[2]:13 62000.8
byte* progress_cursor#26 progress_cursor zp[2]:13 18353.294117647056
byte* progress_cursor#33 progress_cursor zp[2]:13 367.33333333333337
byte* progress_cursor#7 progress_cursor zp[2]:13 200002.0
byte progress_idx
byte progress_idx#17 progress_idx zp[1]:15 101.0
byte progress_idx#20 progress_idx zp[1]:15 42000.600000000006
byte progress_idx#27 progress_idx zp[1]:15 8000.285714285715
byte progress_idx#33 progress_idx zp[1]:15 367.33333333333337
byte progress_idx#7 progress_idx zp[1]:15 150001.5
void progress_inc()
label progress_inc::@1
label progress_inc::@2
label progress_inc::@return
const to_nomodify byte* progress_inc::progress_chars[]  = { $20, $65, $74, $75, $61, $f6, $e7, $ea, $e0 }
void protoBobShiftDown()
label protoBobShiftDown::@1
label protoBobShiftDown::@2
label protoBobShiftDown::@3
label protoBobShiftDown::@return
byte protoBobShiftDown::i
byte protoBobShiftDown::i#1 reg byte x 200002.0
byte protoBobShiftDown::i#2 reg byte x 160001.6
void protoBobShiftRight()
byte~ protoBobShiftRight::$1 reg byte a 2.0000002E7
byte~ protoBobShiftRight::$5 reg byte a 2.0000002E7
byte~ protoBobShiftRight::$6 reg byte a 2.0000002E7
label protoBobShiftRight::@1
label protoBobShiftRight::@2
label protoBobShiftRight::@3
label protoBobShiftRight::@4
label protoBobShiftRight::@5
label protoBobShiftRight::@6
label protoBobShiftRight::@7
label protoBobShiftRight::@return
byte protoBobShiftRight::carry
byte protoBobShiftRight::carry#1 carry zp[1]:24 1111111.2222222222
byte protoBobShiftRight::carry#10 reg byte y 2.0000002E7
byte protoBobShiftRight::carry#2 reg byte y 2857143.1428571427
byte protoBobShiftRight::i
byte protoBobShiftRight::i#1 i zp[1]:30 1.0000001E7
byte protoBobShiftRight::i#2 i zp[1]:30 2307692.5384615385
byte protoBobShiftRight::j
byte protoBobShiftRight::j#1 reg byte x 2.0000002E7
byte protoBobShiftRight::j#10 reg byte x 1.0000001E7
byte protoBobShiftRight::j#2 reg byte x 2.0000002E7
byte protoBobShiftRight::j#3 reg byte x 7000000.699999999
byte protoBobShiftRight::new_carry
void renderBob(byte renderBob::xpos , byte renderBob::ypos)
byte*~ renderBob::$2 zp[2]:28 20002.0
byte~ renderBob::$4 reg byte a 20002.0
byte~ renderBob::$5 zp[1]:30 10001.0
byte~ renderBob::$6 reg byte a 20002.0
byte~ renderBob::$8 reg byte a 20002.0
label renderBob::@return
byte renderBob::bob_table_idx
byte renderBob::bob_table_idx#0 bob_table_idx zp[1]:30 9091.818181818182
byte* renderBob::screen
byte* renderBob::screen#0 screen zp[2]:28 7334.066666666668
byte renderBob::x_char_offset
byte renderBob::x_char_offset#0 x_char_offset zp[1]:27 4000.4
byte renderBob::xpos
byte renderBob::xpos#0 xpos zp[1]:23 2100.3
byte renderBob::y_char_offset
byte renderBob::y_char_offset#0 reg byte a 20002.0
word renderBob::y_offset
word renderBob::y_offset#0 y_offset zp[2]:28 20002.0
byte renderBob::ypos
byte renderBob::ypos#0 ypos zp[1]:24 3000.4285714285716
void renderBobCleanup()
byte~ renderBobCleanup::$1 reg byte a 20002.0
label renderBobCleanup::@1
label renderBobCleanup::@return
byte renderBobCleanup::i
byte renderBobCleanup::i#1 reg byte x 15001.5
byte renderBobCleanup::i#2 reg byte x 2500.25
byte* renderBobCleanup::screen
byte* renderBobCleanup::screen#0 screen zp[2]:25 11112.222222222224
byte** renderBobCleanupNext
byte** renderBobCleanupNext#14 renderBobCleanupNext zp[2]:25 528.7142857142857
byte** renderBobCleanupNext#19 renderBobCleanupNext zp[2]:25 1406.9333333333334
byte** renderBobCleanupNext#23 renderBobCleanupNext zp[2]:25 67.33333333333333
void renderBobInit()
word~ renderBobInit::$0 zp[2]:25 101.0
byte~ renderBobInit::$3 reg byte a 202.0
byte~ renderBobInit::$4 reg byte a 202.0
word~ renderBobInit::$5 zp[2]:25 151.5
word~ renderBobInit::$6 zp[2]:28 202.0
word~ renderBobInit::$7 zp[2]:25 202.0
label renderBobInit::@1
label renderBobInit::@2
label renderBobInit::@return
byte renderBobInit::i
byte renderBobInit::i#1 reg byte x 151.5
byte renderBobInit::i#2 reg byte x 101.0
byte renderBobInit::y
byte renderBobInit::y#1 reg byte x 151.5
byte renderBobInit::y#2 reg byte x 43.285714285714285

zp[2]:2 [ main::rowOffsetY#10 main::rowOffsetY#1 ]
zp[2]:4 [ main::x#0 main::x#4 main::rowX#1 ]
zp[2]:6 [ main::y#0 main::rowY#1 ]
zp[2]:8 [ main::x#2 main::x#1 main::x#7 ]
zp[2]:10 [ main::y#2 main::y#1 main::y#6 ]
reg byte x [ main::row#2 main::row#1 ]
reg byte x [ mulf_init::x_2#3 mulf_init::x_2#2 mulf_init::x_2#1 ]
reg byte x [ mulf_init::x_255#2 mulf_init::x_255#1 ]
zp[1]:12 [ prepareBobs::shift_y#2 prepareBobs::shift_y#1 mulf_init::c#2 mulf_init::c#1 ]
zp[2]:13 [ progress_cursor#16 progress_cursor#33 progress_cursor#26 progress_cursor#18 progress_cursor#7 main::origX#8 main::origX#1 ]
zp[1]:15 [ progress_idx#17 progress_idx#33 progress_idx#27 progress_idx#20 progress_idx#7 main::col#5 main::col#1 ]
zp[1]:16 [ prepareBobs::bob_table_idx#7 prepareBobs::bob_table_idx#12 prepareBobs::bob_table_idx#1 mulf_init::dir#2 mulf_init::dir#4 ]
zp[2]:17 [ prepareBobs::bob_table#2 prepareBobs::bob_table#1 prepareBobs::bob_table#0 mulf_init::sqr2_lo#2 mulf_init::sqr2_lo#1 ]
reg byte x [ renderBobInit::y#2 renderBobInit::y#1 ]
reg byte x [ renderBobInit::i#2 renderBobInit::i#1 ]
zp[2]:19 [ memset::dst#2 memset::dst#1 mulf_init::sqr2_hi#2 mulf_init::sqr2_hi#1 ]
reg byte x [ renderBobCleanup::i#2 renderBobCleanup::i#1 ]
reg byte x [ charsetFindOrAddGlyph::glyph_id#11 charsetFindOrAddGlyph::glyph_id#1 ]
zp[2]:21 [ charsetFindOrAddGlyph::glyph_cursor#11 charsetFindOrAddGlyph::glyph_cursor#1 mulf_init::sqr#3 mulf_init::sqr#4 mulf_init::sqr#1 mulf_init::sqr#2 ]
reg byte y [ charsetFindOrAddGlyph::i1#2 charsetFindOrAddGlyph::i1#1 ]
reg byte y [ charsetFindOrAddGlyph::i#2 charsetFindOrAddGlyph::i#1 ]
reg byte a [ charsetFindOrAddGlyph::found#2 ]
reg byte x [ protoBobShiftDown::i#2 protoBobShiftDown::i#1 ]
reg byte x [ protoBobShiftRight::j#3 protoBobShiftRight::j#10 protoBobShiftRight::j#1 protoBobShiftRight::j#2 ]
reg byte y [ protoBobShiftRight::carry#2 protoBobShiftRight::carry#10 ]
zp[1]:23 [ renderBob::xpos#0 prepareBobs::shift_x#2 prepareBobs::shift_x#1 ]
zp[1]:24 [ renderBob::ypos#0 prepareBobs::cell#2 prepareBobs::cell#1 protoBobShiftRight::carry#1 ]
reg byte a [ keyboard_key_pressed::return#2 ]
reg byte a [ main::$15 ]
reg byte a [ keyboard_key_pressed::return#3 ]
reg byte a [ main::$17 ]
reg byte a [ mulf_init::$1 ]
reg byte a [ mulf_init::$4 ]
reg byte a [ mulf_init::$5 ]
reg byte a [ charsetFindOrAddGlyph::return#1 ]
reg byte a [ prepareBobs::$6 ]
reg byte a [ renderBobInit::$3 ]
reg byte a [ renderBobInit::$4 ]
reg byte a [ renderBobCleanup::$1 ]
zp[2]:25 [ renderBobCleanup::screen#0 renderBobInit::$5 renderBobInit::$7 renderBobInit::$0 mulf_init::sqr1_lo#2 mulf_init::sqr1_lo#1 renderBobCleanupNext#19 renderBobCleanupNext#23 renderBobCleanupNext#14 ]
zp[1]:27 [ renderBob::x_char_offset#0 bob_charset_next_id#25 bob_charset_next_id#15 bob_charset_next_id#17 bob_charset_next_id#32 bob_charset_next_id#23 bob_charset_next_id#7 ]
reg byte a [ renderBob::y_char_offset#0 ]
reg byte a [ renderBob::$8 ]
zp[2]:28 [ renderBob::y_offset#0 renderBob::$2 renderBob::screen#0 renderBobInit::$6 prepareBobs::bob_glyph#2 prepareBobs::bob_glyph#1 charsetFindOrAddGlyph::glyph#10 charsetFindOrAddGlyph::glyph#1 mulf_init::sqr1_hi#2 mulf_init::sqr1_hi#1 ]
reg byte a [ renderBob::$4 ]
zp[1]:30 [ renderBob::$5 renderBob::bob_table_idx#0 protoBobShiftRight::i#2 protoBobShiftRight::i#1 ]
reg byte a [ renderBob::$6 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_key_pressed::$2 ]
reg byte a [ keyboard_key_pressed::return#0 ]
reg byte a [ protoBobShiftRight::$1 ]
reg byte a [ protoBobShiftRight::$5 ]
reg byte a [ protoBobShiftRight::$6 ]
reg byte a [ keyboard_matrix_read::return#0 ]
