
void main()
main: scope:[main]  from
  [0] phi()
  [1] call cputs 
  to:main::@1
main::@1: scope:[main]  from main
  [2] phi()
  [3] call printf_string 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] phi()
  [5] call cputs 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [6] return 
  to:@return

void cputs(byte* cputs::str)
cputs: scope:[cputs]  from main main::@2 printf_string
  [7] screen#25 = phi( main/(byte*) 1024, main::@2/screen#1, printf_string/screen#1 )
  [7] cputs::str#6 = phi( main/main::str, main::@2/main::str1, printf_string/main::name )
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [8] screen#1 = phi( cputs/screen#25, cputs::@2/screen#0 )
  [8] cputs::str#4 = phi( cputs/cputs::str#6, cputs::@2/cputs::str#0 )
  [9] if(0!=*cputs::str#4) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [10] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [11] *screen#1 = *cputs::str#4
  [12] screen#0 = ++ screen#1
  [13] cputs::str#0 = ++ cputs::str#4
  to:cputs::@1

void printf_string(byte* printf_string::str , byte printf_string::format_min_length , byte printf_string::format_justify_left)
printf_string: scope:[printf_string]  from main::@1
  [14] phi()
  [15] call cputs 
  to:printf_string::@return
printf_string::@return: scope:[printf_string]  from printf_string
  [16] return 
  to:@return
