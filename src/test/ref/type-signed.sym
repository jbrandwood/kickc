const byte RADIX::BINARY = 2
const byte RADIX::DECIMAL = $a
const byte RADIX::HEXADECIMAL = $10
const byte RADIX::OCTAL = 8
void main()
signed word main::a
signed word main::a#1 a zp[2]:2 2.5384615384615383
signed word main::a#2 a zp[2]:2 22.0
word main::b
word main::b#1 b zp[2]:4 2.75
word main::b#2 b zp[2]:4 11.0
byte main::i
byte main::i#1 i zp[1]:6 11.0
byte main::i#2 i zp[1]:6 2.0
void print_char(byte print_char::ch)
byte print_char::ch
byte print_char::ch#2 reg byte a 20002.0
byte print_char::ch#3 reg byte a 20002.0
byte print_char::ch#5 reg byte a 120003.0
byte* print_char_cursor
byte* print_char_cursor#12 print_char_cursor zp[2]:9 3939.848484848485
byte* print_char_cursor#34 print_char_cursor zp[2]:9 110108.5
byte* print_char_cursor#49 print_char_cursor zp[2]:9 30.42857142857143
byte* print_char_cursor#58 print_char_cursor zp[2]:9 22.0
const to_nomodify byte* print_hextab[]  = "0123456789abcdef"z
byte* print_line_cursor
byte* print_line_cursor#0 print_line_cursor zp[2]:11 4289.285714285714
byte* print_line_cursor#15 print_line_cursor zp[2]:11 10.181818181818182
byte* print_line_cursor#7 print_line_cursor zp[2]:11 20103.0
void print_ln()
byte* print_screen
const byte* print_screen#0 print_screen = (byte*) 1024
void print_sint(signed word print_sint::w)
signed word print_sint::w
signed word print_sint::w#0 w zp[2]:7 202.0
signed word print_sint::w#1 w zp[2]:7 52.33333333333333
signed word print_sint::w#4 w zp[2]:7 202.0
void print_uchar(byte print_uchar::b)
byte~ print_uchar::$0 reg byte a 20002.0
byte~ print_uchar::$2 reg byte x 20002.0
byte print_uchar::b
byte print_uchar::b#0 reg byte x 2002.0
byte print_uchar::b#1 reg byte x 2002.0
byte print_uchar::b#2 reg byte x 5501.0
void print_uint(word print_uint::w)
word print_uint::w
word print_uint::w#0 w zp[2]:7 202.0
word print_uint::w#1 w zp[2]:7 22.0
word print_uint::w#2 w zp[2]:7 704.6666666666667

zp[2]:2 [ main::a#2 main::a#1 ]
zp[2]:4 [ main::b#2 main::b#1 ]
zp[1]:6 [ main::i#2 main::i#1 ]
zp[2]:7 [ print_sint::w#4 print_sint::w#0 print_sint::w#1 print_uint::w#2 print_uint::w#1 print_uint::w#0 ]
reg byte a [ print_char::ch#5 print_char::ch#2 print_char::ch#3 ]
zp[2]:9 [ print_char_cursor#34 print_char_cursor#12 print_char_cursor#49 print_char_cursor#58 ]
zp[2]:11 [ print_line_cursor#7 print_line_cursor#15 print_line_cursor#0 ]
reg byte x [ print_uchar::b#2 print_uchar::b#0 print_uchar::b#1 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
