
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] phi()
  [2] call malloc 
  to:__start::@2
__start::@2: scope:[__start]  from __start::__init1
  [3] SCREEN_DIST#0 = (void*)malloc::mem#0
  [4] call malloc 
  to:__start::@3
__start::@3: scope:[__start]  from __start::@2
  [5] SCREEN_ANGLE#0 = (void*)malloc::mem#0
  to:__start::@1
__start::@1: scope:[__start]  from __start::@3
  [6] phi()
  [7] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

void* malloc(word malloc::size)
malloc: scope:[malloc]  from __start::@2 __start::__init1 init_squares
  [9] malloc::size#3 = phi( __start::@2/$3e8, __start::__init1/$3e8, init_squares/NUM_SQUARES#2*SIZEOF_WORD )
  [9] heap_head#13 = phi( __start::@2/heap_head#0, __start::__init1/HEAP_TOP, init_squares/heap_head#0 )
  [10] malloc::mem#0 = heap_head#13 - malloc::size#3
  [11] heap_head#0 = malloc::mem#0
  to:malloc::@return
malloc::@return: scope:[malloc]  from malloc
  [12] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [13] init_dist_screen::screen#0 = (byte*)SCREEN_DIST#0
  [14] call init_dist_screen 
  to:main::@8
main::@8: scope:[main]  from main
  [15] init_angle_screen::screen#0 = (byte*)SCREEN_ANGLE#0
  [16] call init_angle_screen 
  to:main::@1
main::@1: scope:[main]  from main::@7 main::@8
  [17] main::dist#0 = (byte*)SCREEN_DIST#0
  [18] main::angle#0 = (byte*)SCREEN_ANGLE#0
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@9
  [19] main::min_fill#5 = phi( main::@1/SCREEN_FILL, main::@9/main::min_fill#2 )
  [19] main::min_dist_angle#2 = phi( main::@1/$ffff, main::@9/main::min_dist_angle#6 )
  [19] main::angle#2 = phi( main::@1/main::angle#0, main::@9/main::angle#1 )
  [19] main::dist#2 = phi( main::@1/main::dist#0, main::@9/main::dist#1 )
  [19] main::fill#2 = phi( main::@1/SCREEN_FILL, main::@9/main::fill#1 )
  [20] if(*main::fill#2==FILL_CHAR) goto main::@10
  to:main::@4
main::@4: scope:[main]  from main::@2
  [21] main::dist_angle#0 = *main::dist#2 w= *main::angle#2
  [22] if(main::dist_angle#0>=main::min_dist_angle#2) goto main::@11
  to:main::@5
main::@5: scope:[main]  from main::@4
  [23] main::min_fill#10 = main::fill#2
  to:main::@3
main::@3: scope:[main]  from main::@10 main::@11 main::@5
  [24] main::min_fill#2 = phi( main::@10/main::min_fill#5, main::@11/main::min_fill#5, main::@5/main::min_fill#10 )
  [24] main::min_dist_angle#3 = phi( main::@10/main::min_dist_angle#7, main::@11/main::min_dist_angle#8, main::@5/main::dist_angle#0 )
  [25] main::dist#1 = ++ main::dist#2
  [26] main::angle#1 = ++ main::angle#2
  [27] main::fill#1 = ++ main::fill#2
  [28] if(main::fill#1<SCREEN_FILL+$3e8) goto main::@9
  to:main::@6
main::@6: scope:[main]  from main::@3
  [29] if(main::min_dist_angle#3!=$ffff) goto main::@7
  to:main::@return
main::@return: scope:[main]  from main::@6
  [30] return 
  to:@return
main::@7: scope:[main]  from main::@6
  [31] *main::min_fill#2 = FILL_CHAR
  to:main::@1
main::@9: scope:[main]  from main::@3
  [32] main::min_dist_angle#6 = main::min_dist_angle#3
  to:main::@2
main::@11: scope:[main]  from main::@4
  [33] main::min_dist_angle#8 = main::min_dist_angle#2
  to:main::@3
main::@10: scope:[main]  from main::@2
  [34] main::min_dist_angle#7 = main::min_dist_angle#2
  to:main::@3

void init_dist_screen(byte* init_dist_screen::screen)
init_dist_screen: scope:[init_dist_screen]  from main
  [35] phi()
  [36] call init_squares 
  to:init_dist_screen::@11
init_dist_screen::@11: scope:[init_dist_screen]  from init_dist_screen
  [37] init_dist_screen::screen_bottomline#0 = init_dist_screen::screen#0 + (word)$28*$18
  to:init_dist_screen::@1
init_dist_screen::@1: scope:[init_dist_screen]  from init_dist_screen::@11 init_dist_screen::@7
  [38] init_dist_screen::screen_bottomline#11 = phi( init_dist_screen::@11/init_dist_screen::screen_bottomline#0, init_dist_screen::@7/init_dist_screen::screen_bottomline#1 )
  [38] init_dist_screen::screen_topline#11 = phi( init_dist_screen::@11/init_dist_screen::screen#0, init_dist_screen::@7/init_dist_screen::screen_topline#1 )
  [38] init_dist_screen::y#10 = phi( init_dist_screen::@11/0, init_dist_screen::@7/init_dist_screen::y#1 )
  [39] init_dist_screen::y2#0 = init_dist_screen::y#10 << 1
  [40] if(init_dist_screen::y2#0>=$18) goto init_dist_screen::@2
  to:init_dist_screen::@3
init_dist_screen::@3: scope:[init_dist_screen]  from init_dist_screen::@1
  [41] init_dist_screen::$5 = $18 - init_dist_screen::y2#0
  to:init_dist_screen::@4
init_dist_screen::@4: scope:[init_dist_screen]  from init_dist_screen::@2 init_dist_screen::@3
  [42] init_dist_screen::yd#0 = phi( init_dist_screen::@2/init_dist_screen::$7, init_dist_screen::@3/init_dist_screen::$5 )
  [43] sqr::val#0 = init_dist_screen::yd#0
  [44] call sqr 
  [45] sqr::return#2 = sqr::return#0
  to:init_dist_screen::@12
init_dist_screen::@12: scope:[init_dist_screen]  from init_dist_screen::@4
  [46] init_dist_screen::yds#0 = sqr::return#2
  to:init_dist_screen::@5
init_dist_screen::@5: scope:[init_dist_screen]  from init_dist_screen::@12 init_dist_screen::@14
  [47] init_dist_screen::xb#2 = phi( init_dist_screen::@12/$27, init_dist_screen::@14/init_dist_screen::xb#1 )
  [47] init_dist_screen::x#2 = phi( init_dist_screen::@12/0, init_dist_screen::@14/init_dist_screen::x#1 )
  [48] if(init_dist_screen::x#2<$13+1) goto init_dist_screen::@6
  to:init_dist_screen::@7
init_dist_screen::@7: scope:[init_dist_screen]  from init_dist_screen::@5
  [49] init_dist_screen::screen_topline#1 = init_dist_screen::screen_topline#11 + $28
  [50] init_dist_screen::screen_bottomline#1 = init_dist_screen::screen_bottomline#11 - $28
  [51] init_dist_screen::y#1 = ++ init_dist_screen::y#10
  [52] if(init_dist_screen::y#1!=$d) goto init_dist_screen::@1
  to:init_dist_screen::@return
init_dist_screen::@return: scope:[init_dist_screen]  from init_dist_screen::@7
  [53] return 
  to:@return
init_dist_screen::@6: scope:[init_dist_screen]  from init_dist_screen::@5
  [54] init_dist_screen::x2#0 = init_dist_screen::x#2 << 1
  [55] if(init_dist_screen::x2#0>=$27) goto init_dist_screen::@8
  to:init_dist_screen::@9
init_dist_screen::@9: scope:[init_dist_screen]  from init_dist_screen::@6
  [56] init_dist_screen::$14 = $27 - init_dist_screen::x2#0
  to:init_dist_screen::@10
init_dist_screen::@10: scope:[init_dist_screen]  from init_dist_screen::@8 init_dist_screen::@9
  [57] init_dist_screen::xd#0 = phi( init_dist_screen::@8/init_dist_screen::$16, init_dist_screen::@9/init_dist_screen::$14 )
  [58] sqr::val#1 = init_dist_screen::xd#0
  [59] call sqr 
  [60] sqr::return#3 = sqr::return#0
  to:init_dist_screen::@13
init_dist_screen::@13: scope:[init_dist_screen]  from init_dist_screen::@10
  [61] init_dist_screen::xds#0 = sqr::return#3
  [62] init_dist_screen::ds#0 = init_dist_screen::xds#0 + init_dist_screen::yds#0
  [63] sqrt::val#0 = init_dist_screen::ds#0
  [64] call sqrt 
  [65] sqrt::return#2 = sqrt::return#0
  to:init_dist_screen::@14
init_dist_screen::@14: scope:[init_dist_screen]  from init_dist_screen::@13
  [66] init_dist_screen::d#0 = sqrt::return#2
  [67] init_dist_screen::screen_topline#11[init_dist_screen::x#2] = init_dist_screen::d#0
  [68] init_dist_screen::screen_bottomline#11[init_dist_screen::x#2] = init_dist_screen::d#0
  [69] init_dist_screen::screen_topline#11[init_dist_screen::xb#2] = init_dist_screen::d#0
  [70] init_dist_screen::screen_bottomline#11[init_dist_screen::xb#2] = init_dist_screen::d#0
  [71] init_dist_screen::x#1 = ++ init_dist_screen::x#2
  [72] init_dist_screen::xb#1 = -- init_dist_screen::xb#2
  to:init_dist_screen::@5
init_dist_screen::@8: scope:[init_dist_screen]  from init_dist_screen::@6
  [73] init_dist_screen::$16 = init_dist_screen::x2#0 - $27
  to:init_dist_screen::@10
init_dist_screen::@2: scope:[init_dist_screen]  from init_dist_screen::@1
  [74] init_dist_screen::$7 = init_dist_screen::y2#0 - $18
  to:init_dist_screen::@4

void init_angle_screen(byte* init_angle_screen::screen)
init_angle_screen: scope:[init_angle_screen]  from main::@8
  [75] init_angle_screen::screen_bottomline#0 = init_angle_screen::screen#0 + (word)$28*$c
  [76] init_angle_screen::screen_topline#7 = init_angle_screen::screen_bottomline#0
  to:init_angle_screen::@1
init_angle_screen::@1: scope:[init_angle_screen]  from init_angle_screen init_angle_screen::@4
  [77] init_angle_screen::screen_bottomline#6 = phi( init_angle_screen/init_angle_screen::screen_bottomline#0, init_angle_screen::@4/init_angle_screen::screen_bottomline#1 )
  [77] init_angle_screen::screen_topline#6 = phi( init_angle_screen/init_angle_screen::screen_topline#7, init_angle_screen::@4/init_angle_screen::screen_topline#1 )
  [77] init_angle_screen::y#5 = phi( init_angle_screen/0, init_angle_screen::@4/init_angle_screen::y#1 )
  to:init_angle_screen::@2
init_angle_screen::@2: scope:[init_angle_screen]  from init_angle_screen::@1 init_angle_screen::@5
  [78] init_angle_screen::xb#2 = phi( init_angle_screen::@1/$27, init_angle_screen::@5/init_angle_screen::xb#1 )
  [78] init_angle_screen::x#2 = phi( init_angle_screen::@1/0, init_angle_screen::@5/init_angle_screen::x#1 )
  [79] if(init_angle_screen::x#2<$13+1) goto init_angle_screen::@3
  to:init_angle_screen::@4
init_angle_screen::@4: scope:[init_angle_screen]  from init_angle_screen::@2
  [80] init_angle_screen::screen_topline#1 = init_angle_screen::screen_topline#6 - $28
  [81] init_angle_screen::screen_bottomline#1 = init_angle_screen::screen_bottomline#6 + $28
  [82] init_angle_screen::y#1 = ++ init_angle_screen::y#5
  [83] if(init_angle_screen::y#1!=$d) goto init_angle_screen::@1
  to:init_angle_screen::@return
init_angle_screen::@return: scope:[init_angle_screen]  from init_angle_screen::@4
  [84] return 
  to:@return
init_angle_screen::@3: scope:[init_angle_screen]  from init_angle_screen::@2
  [85] init_angle_screen::$3 = init_angle_screen::x#2 << 1
  [86] init_angle_screen::$4 = $27 - init_angle_screen::$3
  [87] init_angle_screen::xw#0 = init_angle_screen::$4 w= 0
  [88] init_angle_screen::$6 = init_angle_screen::y#5 << 1
  [89] init_angle_screen::yw#0 = init_angle_screen::$6 w= 0
  [90] atan2_16::x#0 = (signed word)init_angle_screen::xw#0
  [91] atan2_16::y#0 = (signed word)init_angle_screen::yw#0
  [92] call atan2_16 
  [93] atan2_16::return#2 = atan2_16::return#0
  to:init_angle_screen::@5
init_angle_screen::@5: scope:[init_angle_screen]  from init_angle_screen::@3
  [94] init_angle_screen::angle_w#0 = atan2_16::return#2
  [95] init_angle_screen::$9 = init_angle_screen::angle_w#0 + $80
  [96] init_angle_screen::ang_w#0 = byte1  init_angle_screen::$9
  [97] init_angle_screen::screen_bottomline#6[init_angle_screen::xb#2] = init_angle_screen::ang_w#0
  [98] init_angle_screen::$11 = - init_angle_screen::ang_w#0
  [99] init_angle_screen::screen_topline#6[init_angle_screen::xb#2] = init_angle_screen::$11
  [100] init_angle_screen::$12 = $80 + init_angle_screen::ang_w#0
  [101] init_angle_screen::screen_topline#6[init_angle_screen::x#2] = init_angle_screen::$12
  [102] init_angle_screen::$13 = $80 - init_angle_screen::ang_w#0
  [103] init_angle_screen::screen_bottomline#6[init_angle_screen::x#2] = init_angle_screen::$13
  [104] init_angle_screen::x#1 = ++ init_angle_screen::x#2
  [105] init_angle_screen::xb#1 = -- init_angle_screen::xb#2
  to:init_angle_screen::@2

void init_squares()
init_squares: scope:[init_squares]  from init_dist_screen
  [106] phi()
  [107] call malloc 
  to:init_squares::@3
init_squares::@3: scope:[init_squares]  from init_squares
  [108] SQUARES#0 = (void*)malloc::mem#0
  [109] init_squares::squares#0 = (word*)SQUARES#0
  to:init_squares::@1
init_squares::@1: scope:[init_squares]  from init_squares::@2 init_squares::@3
  [110] init_squares::squares#2 = phi( init_squares::@2/init_squares::squares#1, init_squares::@3/init_squares::squares#0 )
  [110] init_squares::sqr#2 = phi( init_squares::@2/init_squares::sqr#1, init_squares::@3/0 )
  [110] init_squares::i#2 = phi( init_squares::@2/init_squares::i#1, init_squares::@3/0 )
  [111] if(init_squares::i#2<NUM_SQUARES#2) goto init_squares::@2
  to:init_squares::@return
init_squares::@return: scope:[init_squares]  from init_squares::@1
  [112] return 
  to:@return
init_squares::@2: scope:[init_squares]  from init_squares::@1
  [113] *init_squares::squares#2 = init_squares::sqr#2
  [114] init_squares::squares#1 = init_squares::squares#2 + SIZEOF_WORD
  [115] init_squares::$3 = init_squares::i#2 << 1
  [116] init_squares::$4 = init_squares::$3 + 1
  [117] init_squares::sqr#1 = init_squares::sqr#2 + init_squares::$4
  [118] init_squares::i#1 = ++ init_squares::i#2
  to:init_squares::@1

word sqr(byte sqr::val)
sqr: scope:[sqr]  from init_dist_screen::@10 init_dist_screen::@4
  [119] sqr::val#2 = phi( init_dist_screen::@10/sqr::val#1, init_dist_screen::@4/sqr::val#0 )
  [120] sqr::$0 = sqr::val#2 << 1
  [121] sqr::return#0 = ((word*)SQUARES#0)[sqr::$0]
  to:sqr::@return
sqr::@return: scope:[sqr]  from sqr
  [122] return 
  to:@return

byte sqrt(word sqrt::val)
sqrt: scope:[sqrt]  from init_dist_screen::@13
  [123] bsearch16u::key#0 = sqrt::val#0
  [124] bsearch16u::items#1 = (word*)SQUARES#0
  [125] call bsearch16u 
  [126] bsearch16u::return#3 = bsearch16u::return#1
  to:sqrt::@1
sqrt::@1: scope:[sqrt]  from sqrt
  [127] sqrt::found#0 = bsearch16u::return#3
  [128] sqrt::$2 = sqrt::found#0 - (word*)SQUARES#0
  [129] sqrt::$1 = sqrt::$2 >> 1
  [130] sqrt::return#0 = (byte)sqrt::$1
  to:sqrt::@return
sqrt::@return: scope:[sqrt]  from sqrt::@1
  [131] return 
  to:@return

word atan2_16(signed word atan2_16::x , signed word atan2_16::y)
atan2_16: scope:[atan2_16]  from init_angle_screen::@3
  [132] if(atan2_16::y#0>=0) goto atan2_16::@1
  to:atan2_16::@2
atan2_16::@2: scope:[atan2_16]  from atan2_16
  [133] atan2_16::$2 = - atan2_16::y#0
  to:atan2_16::@3
atan2_16::@3: scope:[atan2_16]  from atan2_16::@1 atan2_16::@2
  [134] atan2_16::yi#0 = phi( atan2_16::@1/atan2_16::yi#16, atan2_16::@2/atan2_16::$2 )
  [135] if(atan2_16::x#0>=0) goto atan2_16::@4
  to:atan2_16::@5
atan2_16::@5: scope:[atan2_16]  from atan2_16::@3
  [136] atan2_16::$7 = - atan2_16::x#0
  to:atan2_16::@6
atan2_16::@6: scope:[atan2_16]  from atan2_16::@4 atan2_16::@5
  [137] atan2_16::xi#0 = phi( atan2_16::@4/atan2_16::xi#13, atan2_16::@5/atan2_16::$7 )
  to:atan2_16::@10
atan2_16::@10: scope:[atan2_16]  from atan2_16::@19 atan2_16::@6
  [138] atan2_16::angle#12 = phi( atan2_16::@19/atan2_16::angle#13, atan2_16::@6/0 )
  [138] atan2_16::i#2 = phi( atan2_16::@19/atan2_16::i#1, atan2_16::@6/0 )
  [138] atan2_16::xi#3 = phi( atan2_16::@19/atan2_16::xi#8, atan2_16::@6/atan2_16::xi#0 )
  [138] atan2_16::yi#3 = phi( atan2_16::@19/atan2_16::yi#8, atan2_16::@6/atan2_16::yi#0 )
  [139] if(atan2_16::yi#3!=0) goto atan2_16::@11
  to:atan2_16::@12
atan2_16::@12: scope:[atan2_16]  from atan2_16::@10 atan2_16::@19
  [140] atan2_16::angle#6 = phi( atan2_16::@10/atan2_16::angle#12, atan2_16::@19/atan2_16::angle#13 )
  [141] atan2_16::angle#1 = atan2_16::angle#6 >> 1
  [142] if(atan2_16::x#0>=0) goto atan2_16::@7
  to:atan2_16::@21
atan2_16::@21: scope:[atan2_16]  from atan2_16::@12
  [143] atan2_16::angle#4 = $8000 - atan2_16::angle#1
  to:atan2_16::@7
atan2_16::@7: scope:[atan2_16]  from atan2_16::@12 atan2_16::@21
  [144] atan2_16::angle#11 = phi( atan2_16::@12/atan2_16::angle#1, atan2_16::@21/atan2_16::angle#4 )
  [145] if(atan2_16::y#0>=0) goto atan2_16::@8
  to:atan2_16::@9
atan2_16::@9: scope:[atan2_16]  from atan2_16::@7
  [146] atan2_16::angle#5 = - atan2_16::angle#11
  to:atan2_16::@8
atan2_16::@8: scope:[atan2_16]  from atan2_16::@7 atan2_16::@9
  [147] atan2_16::return#0 = phi( atan2_16::@7/atan2_16::angle#11, atan2_16::@9/atan2_16::angle#5 )
  to:atan2_16::@return
atan2_16::@return: scope:[atan2_16]  from atan2_16::@8
  [148] return 
  to:@return
atan2_16::@11: scope:[atan2_16]  from atan2_16::@10
  [149] atan2_16::shift#5 = atan2_16::i#2
  [150] atan2_16::xd#10 = atan2_16::xi#3
  [151] atan2_16::yd#10 = atan2_16::yi#3
  to:atan2_16::@13
atan2_16::@13: scope:[atan2_16]  from atan2_16::@11 atan2_16::@14
  [152] atan2_16::yd#3 = phi( atan2_16::@11/atan2_16::yd#10, atan2_16::@14/atan2_16::yd#1 )
  [152] atan2_16::xd#3 = phi( atan2_16::@11/atan2_16::xd#10, atan2_16::@14/atan2_16::xd#1 )
  [152] atan2_16::shift#2 = phi( atan2_16::@11/atan2_16::shift#5, atan2_16::@14/atan2_16::shift#1 )
  [153] if(atan2_16::shift#2>=2) goto atan2_16::@14
  to:atan2_16::@15
atan2_16::@15: scope:[atan2_16]  from atan2_16::@13
  [154] if(0==atan2_16::shift#2) goto atan2_16::@17
  to:atan2_16::@16
atan2_16::@16: scope:[atan2_16]  from atan2_16::@15
  [155] atan2_16::xd#2 = atan2_16::xd#3 >> 1
  [156] atan2_16::yd#2 = atan2_16::yd#3 >> 1
  to:atan2_16::@17
atan2_16::@17: scope:[atan2_16]  from atan2_16::@15 atan2_16::@16
  [157] atan2_16::xd#5 = phi( atan2_16::@15/atan2_16::xd#3, atan2_16::@16/atan2_16::xd#2 )
  [157] atan2_16::yd#5 = phi( atan2_16::@15/atan2_16::yd#3, atan2_16::@16/atan2_16::yd#2 )
  [158] if(atan2_16::yi#3>=0) goto atan2_16::@18
  to:atan2_16::@20
atan2_16::@20: scope:[atan2_16]  from atan2_16::@17
  [159] atan2_16::xi#2 = atan2_16::xi#3 - atan2_16::yd#5
  [160] atan2_16::yi#2 = atan2_16::yi#3 + atan2_16::xd#5
  [161] atan2_16::$23 = atan2_16::i#2 << 1
  [162] atan2_16::angle#3 = atan2_16::angle#12 - CORDIC_ATAN2_ANGLES_16[atan2_16::$23]
  to:atan2_16::@19
atan2_16::@19: scope:[atan2_16]  from atan2_16::@18 atan2_16::@20
  [163] atan2_16::xi#8 = phi( atan2_16::@18/atan2_16::xi#1, atan2_16::@20/atan2_16::xi#2 )
  [163] atan2_16::angle#13 = phi( atan2_16::@18/atan2_16::angle#2, atan2_16::@20/atan2_16::angle#3 )
  [163] atan2_16::yi#8 = phi( atan2_16::@18/atan2_16::yi#1, atan2_16::@20/atan2_16::yi#2 )
  [164] atan2_16::i#1 = ++ atan2_16::i#2
  [165] if(atan2_16::i#1==CORDIC_ITERATIONS_16-1+1) goto atan2_16::@12
  to:atan2_16::@10
atan2_16::@18: scope:[atan2_16]  from atan2_16::@17
  [166] atan2_16::xi#1 = atan2_16::xi#3 + atan2_16::yd#5
  [167] atan2_16::yi#1 = atan2_16::yi#3 - atan2_16::xd#5
  [168] atan2_16::$22 = atan2_16::i#2 << 1
  [169] atan2_16::angle#2 = atan2_16::angle#12 + CORDIC_ATAN2_ANGLES_16[atan2_16::$22]
  to:atan2_16::@19
atan2_16::@14: scope:[atan2_16]  from atan2_16::@13
  [170] atan2_16::xd#1 = atan2_16::xd#3 >> 2
  [171] atan2_16::yd#1 = atan2_16::yd#3 >> 2
  [172] atan2_16::shift#1 = atan2_16::shift#2 - 2
  to:atan2_16::@13
atan2_16::@4: scope:[atan2_16]  from atan2_16::@3
  [173] atan2_16::xi#13 = atan2_16::x#0
  to:atan2_16::@6
atan2_16::@1: scope:[atan2_16]  from atan2_16
  [174] atan2_16::yi#16 = atan2_16::y#0
  to:atan2_16::@3

word* bsearch16u(word bsearch16u::key , word* bsearch16u::items , byte bsearch16u::num)
bsearch16u: scope:[bsearch16u]  from sqrt
  [175] phi()
  to:bsearch16u::@3
bsearch16u::@3: scope:[bsearch16u]  from bsearch16u bsearch16u::@7
  [176] bsearch16u::items#2 = phi( bsearch16u/bsearch16u::items#1, bsearch16u::@7/bsearch16u::items#8 )
  [176] bsearch16u::num#3 = phi( bsearch16u/NUM_SQUARES#2, bsearch16u::@7/bsearch16u::num#0 )
  [177] if(bsearch16u::num#3>0) goto bsearch16u::@4
  to:bsearch16u::@5
bsearch16u::@5: scope:[bsearch16u]  from bsearch16u::@3
  [178] if(*bsearch16u::items#2<=bsearch16u::key#0) goto bsearch16u::@2
  to:bsearch16u::@1
bsearch16u::@1: scope:[bsearch16u]  from bsearch16u::@5
  [179] bsearch16u::$2 = bsearch16u::items#2 - 1*SIZEOF_WORD
  to:bsearch16u::@2
bsearch16u::@2: scope:[bsearch16u]  from bsearch16u::@1 bsearch16u::@5
  [180] bsearch16u::return#2 = phi( bsearch16u::@5/bsearch16u::items#2, bsearch16u::@1/bsearch16u::$2 )
  to:bsearch16u::@return
bsearch16u::@return: scope:[bsearch16u]  from bsearch16u::@2 bsearch16u::@8
  [181] bsearch16u::return#1 = phi( bsearch16u::@2/bsearch16u::return#2, bsearch16u::@8/bsearch16u::return#7 )
  [182] return 
  to:@return
bsearch16u::@4: scope:[bsearch16u]  from bsearch16u::@3
  [183] bsearch16u::$6 = bsearch16u::num#3 >> 1
  [184] bsearch16u::$14 = bsearch16u::$6 << 1
  [185] bsearch16u::pivot#0 = bsearch16u::items#2 + bsearch16u::$14
  [186] bsearch16u::result#0 = (signed word)bsearch16u::key#0 - (signed word)*bsearch16u::pivot#0
  [187] if(bsearch16u::result#0!=0) goto bsearch16u::@6
  to:bsearch16u::@8
bsearch16u::@8: scope:[bsearch16u]  from bsearch16u::@4
  [188] bsearch16u::return#7 = bsearch16u::pivot#0
  to:bsearch16u::@return
bsearch16u::@6: scope:[bsearch16u]  from bsearch16u::@4
  [189] if(bsearch16u::result#0<=0) goto bsearch16u::@7
  to:bsearch16u::@9
bsearch16u::@9: scope:[bsearch16u]  from bsearch16u::@6
  [190] bsearch16u::items#0 = bsearch16u::pivot#0 + 1*SIZEOF_WORD
  [191] bsearch16u::num#1 = -- bsearch16u::num#3
  to:bsearch16u::@7
bsearch16u::@7: scope:[bsearch16u]  from bsearch16u::@6 bsearch16u::@9
  [192] bsearch16u::items#8 = phi( bsearch16u::@9/bsearch16u::items#0, bsearch16u::@6/bsearch16u::items#2 )
  [192] bsearch16u::num#5 = phi( bsearch16u::@9/bsearch16u::num#1, bsearch16u::@6/bsearch16u::num#3 )
  [193] bsearch16u::num#0 = bsearch16u::num#5 >> 1
  to:bsearch16u::@3
