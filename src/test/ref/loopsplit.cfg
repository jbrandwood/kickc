@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@4 main::@5
  [5] (byte) main::s#3 ← phi( main/(byte) 0 main::@4/(byte) main::s#1 main::@5/(byte) main::s#2 )
  [5] (byte) main::i#2 ← phi( main/(byte) $64 main::@4/(byte) main::i#1 main::@5/(byte) main::i#1 )
  [6] (byte) main::i#1 ← -- (byte) main::i#2
  [7] if((byte) main::i#1>(byte) 0) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [8] *((const byte*) main::SCREEN#0) ← (byte) main::s#3
  to:main::@return
main::@return: scope:[main]  from main::@3
  [9] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [10] if((byte) main::i#1>=(byte) $32+(byte) 1) goto main::@4
  to:main::@5
main::@5: scope:[main]  from main::@2
  [11] (byte) main::s#2 ← -- (byte) main::s#3
  to:main::@1
main::@4: scope:[main]  from main::@2
  [12] (byte) main::s#1 ← ++ (byte) main::s#3
  to:main::@1
