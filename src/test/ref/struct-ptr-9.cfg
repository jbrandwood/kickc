
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@1/(byte) main::i#1 )
  [2] (byte~) main::$2 ← (byte) main::i#2 << (byte) 1
  [3] *((byte*)(const struct Point*) points + (byte~) main::$2) ← (byte) 2
  [4] *((byte*)(const struct Point*) points+(const byte) OFFSET_STRUCT_POINT_Y + (byte~) main::$2) ← (byte) main::i#2
  [5] (byte) main::i#1 ← ++ (byte) main::i#2
  [6] if((byte) main::i#1!=(byte) 2) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [7] (byte) main::i1#2 ← phi( main::@1/(byte) 0 main::@2/(byte) main::i1#1 )
  [8] (byte~) main::$3 ← (byte) main::i1#2 << (byte) 1
  [9] *((const nomodify struct Point*) main::SCREEN + (byte~) main::$3) ← memcpy(*((const struct Point*) points + (byte~) main::$3), struct Point, (const byte) SIZEOF_STRUCT_POINT)
  [10] (byte) main::i1#1 ← ++ (byte) main::i1#2
  [11] if((byte) main::i1#1!=(byte) 2) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@2
  [12] return 
  to:@return
