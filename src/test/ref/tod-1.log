Created struct value member variable (byte) tod_init::tod_TENTHS
Created struct value member variable (byte) tod_init::tod_SEC
Created struct value member variable (byte) tod_init::tod_MIN
Created struct value member variable (byte) tod_init::tod_HOURS
Converted struct value to member variables (struct TIME_OF_DAY) tod_init::tod
Created struct value member variable (byte) tod_read::return_TENTHS
Created struct value member variable (byte) tod_read::return_SEC
Created struct value member variable (byte) tod_read::return_MIN
Created struct value member variable (byte) tod_read::return_HOURS
Converted struct value to member variables (struct TIME_OF_DAY) tod_read::return
Created struct value member variable (byte) tod_read::tod_TENTHS
Created struct value member variable (byte) tod_read::tod_SEC
Created struct value member variable (byte) tod_read::tod_MIN
Created struct value member variable (byte) tod_read::tod_HOURS
Converted struct value to member variables (struct TIME_OF_DAY) tod_read::tod
Created struct value member variable (byte) tod_str::tod_TENTHS
Created struct value member variable (byte) tod_str::tod_SEC
Created struct value member variable (byte) tod_str::tod_MIN
Created struct value member variable (byte) tod_str::tod_HOURS
Converted struct value to member variables (struct TIME_OF_DAY) tod_str::tod
Created struct value member variable (byte~) main::$2_TENTHS
Created struct value member variable (byte~) main::$2_SEC
Created struct value member variable (byte~) main::$2_MIN
Created struct value member variable (byte~) main::$2_HOURS
Converted struct value to member variables (struct TIME_OF_DAY~) main::$2
Converted procedure struct value parameter to member unwinding (void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
Converted procedure struct value parameter to member unwinding (byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
Unwinding value copy (struct TIME_OF_DAY) tod_read::tod ← (struct TIME_OF_DAY){ (byte) tod_read::tenths, (byte) tod_read::secs, (byte) tod_read::mins, (byte) tod_read::hours }
Adding value simple copy (byte) tod_read::tod_TENTHS ← (byte) tod_read::tenths
Adding value simple copy (byte) tod_read::tod_SEC ← (byte) tod_read::secs
Adding value simple copy (byte) tod_read::tod_MIN ← (byte) tod_read::mins
Adding value simple copy (byte) tod_read::tod_HOURS ← (byte) tod_read::hours
Unwinding value copy (struct TIME_OF_DAY) tod_read::return ← (struct TIME_OF_DAY) tod_read::tod
Adding value simple copy (byte) tod_read::return_TENTHS ← (byte) tod_read::tod_TENTHS
Adding value simple copy (byte) tod_read::return_SEC ← (byte) tod_read::tod_SEC
Adding value simple copy (byte) tod_read::return_MIN ← (byte) tod_read::tod_MIN
Adding value simple copy (byte) tod_read::return_HOURS ← (byte) tod_read::tod_HOURS
Unwinding value copy (struct TIME_OF_DAY) tod_read::return ← (struct TIME_OF_DAY) tod_read::return
Adding value simple copy (byte) tod_read::return_TENTHS ← (byte) tod_read::return_TENTHS
Adding value simple copy (byte) tod_read::return_SEC ← (byte) tod_read::return_SEC
Adding value simple copy (byte) tod_read::return_MIN ← (byte) tod_read::return_MIN
Adding value simple copy (byte) tod_read::return_HOURS ← (byte) tod_read::return_HOURS
Converted procedure struct return value to member unwinding return { (byte) tod_read::return_TENTHS, (byte) tod_read::return_SEC, (byte) tod_read::return_MIN, (byte) tod_read::return_HOURS }
Converted call struct value parameter to member unwinding (void~) main::$0 ← call tod_init *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_TENTHS) *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC) *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN) *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS) 
Converted procedure call LValue to member unwinding { (byte~) main::$2_TENTHS, (byte~) main::$2_SEC, (byte~) main::$2_MIN, (byte~) main::$2_HOURS } ← call tod_read 
Converted call struct value parameter to member unwinding (byte*~) main::$3 ← call tod_str (byte~) main::$2_TENTHS (byte~) main::$2_SEC (byte~) main::$2_MIN (byte~) main::$2_HOURS 
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA2).PORT_A_DDR with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_A_DDR)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA2).PORT_A with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA2+(const byte) OFFSET_STRUCT_MOS6526_CIA_PORT_A)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TIMER_A_CONTROL with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TIMER_A_CONTROL with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TIMER_B_CONTROL with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TIMER_B_CONTROL with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL)
Replacing struct member reference (struct TIME_OF_DAY) tod_init::tod.HOURS with member unwinding reference (byte) tod_init::tod_HOURS
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_HOURS with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS)
Replacing struct member reference (struct TIME_OF_DAY) tod_init::tod.MIN with member unwinding reference (byte) tod_init::tod_MIN
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_MIN with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN)
Replacing struct member reference (struct TIME_OF_DAY) tod_init::tod.SEC with member unwinding reference (byte) tod_init::tod_SEC
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_SEC with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC)
Replacing struct member reference (struct TIME_OF_DAY) tod_init::tod.TENTHS with member unwinding reference (byte) tod_init::tod_TENTHS
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_10THS with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_HOURS with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_MIN with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_SEC with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC)
Replacing struct member reference *((const nomodify struct MOS6526_CIA*) CIA1).TOD_10THS with member unwinding reference *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS)
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.HOURS with member unwinding reference (byte) tod_str::tod_HOURS
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.HOURS with member unwinding reference (byte) tod_str::tod_HOURS
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.MIN with member unwinding reference (byte) tod_str::tod_MIN
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.MIN with member unwinding reference (byte) tod_str::tod_MIN
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.SEC with member unwinding reference (byte) tod_str::tod_SEC
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.SEC with member unwinding reference (byte) tod_str::tod_SEC
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.TENTHS with member unwinding reference (byte) tod_str::tod_TENTHS
Replacing struct member reference (struct TIME_OF_DAY) tod_str::tod.TENTHS with member unwinding reference (byte) tod_str::tod_TENTHS
Inlined call (byte~) vicSelectGfxBank::$0 ← call toDd00 (byte*) vicSelectGfxBank::gfx 
Eliminating unused variable with no statement (struct TIME_OF_DAY~) main::$2
Unwinding list assignment { (byte~) main::$2_TENTHS, (byte~) main::$2_SEC, (byte~) main::$2_MIN, (byte~) main::$2_HOURS } ← { (byte) tod_read::return_TENTHS, (byte) tod_read::return_SEC, (byte) tod_read::return_MIN, (byte) tod_read::return_HOURS }
Unwinding list assignment { (byte) tod_read::return_TENTHS#2, (byte) tod_read::return_SEC#2, (byte) tod_read::return_MIN#2, (byte) tod_read::return_HOURS#2 } ← { (byte) tod_read::return_TENTHS#1, (byte) tod_read::return_SEC#1, (byte) tod_read::return_MIN#1, (byte) tod_read::return_HOURS#1 }

CONTROL FLOW GRAPH SSA
@begin: scope:[]  from
  (byte) conio_cursor_x#0 ← (byte) 0
  (byte) conio_cursor_y#0 ← (byte) 0
  (byte*) conio_cursor_text#0 ← (const nomodify byte*) CONIO_SCREEN_TEXT
  (byte*) conio_cursor_color#0 ← (const nomodify byte*) CONIO_SCREEN_COLORS
  (byte) conio_textcolor#0 ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  to:@1

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cputc::@1 cputc::@4 main::@2
  (byte) gotoxy::y#6 ← phi( cputc::@1/(byte) gotoxy::y#1 cputc::@4/(byte) gotoxy::y#2 main::@2/(byte) gotoxy::y#3 )
  (byte) gotoxy::x#4 ← phi( cputc::@1/(byte) gotoxy::x#1 cputc::@4/(byte) gotoxy::x#2 main::@2/(byte) gotoxy::x#3 )
  (bool~) gotoxy::$0 ← (byte) gotoxy::x#4 >= (const nomodify byte) CONIO_WIDTH
  (bool~) gotoxy::$1 ← ! (bool~) gotoxy::$0
  if((bool~) gotoxy::$1) goto gotoxy::@1
  to:gotoxy::@3
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  (byte) gotoxy::x#6 ← phi( gotoxy/(byte) gotoxy::x#4 gotoxy::@3/(byte) gotoxy::x#0 )
  (byte) gotoxy::y#4 ← phi( gotoxy/(byte) gotoxy::y#6 gotoxy::@3/(byte) gotoxy::y#7 )
  (bool~) gotoxy::$2 ← (byte) gotoxy::y#4 >= (const nomodify byte) CONIO_HEIGHT
  (bool~) gotoxy::$3 ← ! (bool~) gotoxy::$2
  if((bool~) gotoxy::$3) goto gotoxy::@2
  to:gotoxy::@4
gotoxy::@3: scope:[gotoxy]  from gotoxy
  (byte) gotoxy::y#7 ← phi( gotoxy/(byte) gotoxy::y#6 )
  (byte) gotoxy::x#0 ← (number) 0
  to:gotoxy::@1
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  (byte) gotoxy::y#5 ← phi( gotoxy::@1/(byte) gotoxy::y#4 gotoxy::@4/(byte) gotoxy::y#0 )
  (byte) gotoxy::x#5 ← phi( gotoxy::@1/(byte) gotoxy::x#6 gotoxy::@4/(byte) gotoxy::x#7 )
  (byte) conio_cursor_x#1 ← (byte) gotoxy::x#5
  (byte) conio_cursor_y#1 ← (byte) gotoxy::y#5
  (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5
  (word~) gotoxy::$4 ← (word~) gotoxy::$8 * (const nomodify byte) CONIO_WIDTH
  (word~) gotoxy::$5 ← (word~) gotoxy::$4 + (byte) gotoxy::x#5
  (word) gotoxy::offset#0 ← (word~) gotoxy::$5
  (byte*~) gotoxy::$6 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0
  (byte*) conio_cursor_text#1 ← (byte*~) gotoxy::$6
  (byte*~) gotoxy::$7 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0
  (byte*) conio_cursor_color#1 ← (byte*~) gotoxy::$7
  to:gotoxy::@return
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  (byte) gotoxy::x#7 ← phi( gotoxy::@1/(byte) gotoxy::x#6 )
  (byte) gotoxy::y#0 ← (number) 0
  to:gotoxy::@2
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  (byte*) conio_cursor_color#13 ← phi( gotoxy::@2/(byte*) conio_cursor_color#1 )
  (byte*) conio_cursor_text#13 ← phi( gotoxy::@2/(byte*) conio_cursor_text#1 )
  (byte) conio_cursor_y#13 ← phi( gotoxy::@2/(byte) conio_cursor_y#1 )
  (byte) conio_cursor_x#14 ← phi( gotoxy::@2/(byte) conio_cursor_x#1 )
  (byte) conio_cursor_x#2 ← (byte) conio_cursor_x#14
  (byte) conio_cursor_y#2 ← (byte) conio_cursor_y#13
  (byte*) conio_cursor_text#2 ← (byte*) conio_cursor_text#13
  (byte*) conio_cursor_color#2 ← (byte*) conio_cursor_color#13
  return 
  to:@return

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from cputs::@2
  (byte) conio_cursor_x#26 ← phi( cputs::@2/(byte) conio_cursor_x#28 )
  (byte*) conio_cursor_color#25 ← phi( cputs::@2/(byte*) conio_cursor_color#28 )
  (byte) conio_textcolor#2 ← phi( cputs::@2/(byte) conio_textcolor#3 )
  (byte*) conio_cursor_text#25 ← phi( cputs::@2/(byte*) conio_cursor_text#28 )
  (byte) conio_cursor_y#25 ← phi( cputs::@2/(byte) conio_cursor_y#28 )
  (byte) cputc::c#1 ← phi( cputs::@2/(byte) cputc::c#0 )
  (bool~) cputc::$0 ← (byte) cputc::c#1 == (byte) '
'
  if((bool~) cputc::$0) goto cputc::@1
  to:cputc::@2
cputc::@1: scope:[cputc]  from cputc
  (byte*) conio_cursor_color#24 ← phi( cputc/(byte*) conio_cursor_color#25 )
  (byte*) conio_cursor_text#24 ← phi( cputc/(byte*) conio_cursor_text#25 )
  (byte) conio_cursor_x#25 ← phi( cputc/(byte) conio_cursor_x#26 )
  (byte) conio_cursor_y#14 ← phi( cputc/(byte) conio_cursor_y#25 )
  (number~) cputc::$6 ← (byte) conio_cursor_y#14 + (number) 1
  (byte) gotoxy::x#1 ← (number) 0
  (byte) gotoxy::y#1 ← (number~) cputc::$6
  call gotoxy 
  to:cputc::@5
cputc::@5: scope:[cputc]  from cputc::@1
  (byte*) conio_cursor_color#14 ← phi( cputc::@1/(byte*) conio_cursor_color#2 )
  (byte*) conio_cursor_text#14 ← phi( cputc::@1/(byte*) conio_cursor_text#2 )
  (byte) conio_cursor_y#15 ← phi( cputc::@1/(byte) conio_cursor_y#2 )
  (byte) conio_cursor_x#15 ← phi( cputc::@1/(byte) conio_cursor_x#2 )
  (byte) conio_cursor_x#3 ← (byte) conio_cursor_x#15
  (byte) conio_cursor_y#3 ← (byte) conio_cursor_y#15
  (byte*) conio_cursor_text#3 ← (byte*) conio_cursor_text#14
  (byte*) conio_cursor_color#3 ← (byte*) conio_cursor_color#14
  to:cputc::@return
cputc::@2: scope:[cputc]  from cputc
  (byte) conio_cursor_y#26 ← phi( cputc/(byte) conio_cursor_y#25 )
  (byte) conio_cursor_x#16 ← phi( cputc/(byte) conio_cursor_x#26 )
  (byte*) conio_cursor_color#15 ← phi( cputc/(byte*) conio_cursor_color#25 )
  (byte) conio_textcolor#1 ← phi( cputc/(byte) conio_textcolor#2 )
  (byte*) conio_cursor_text#15 ← phi( cputc/(byte*) conio_cursor_text#25 )
  (byte) cputc::c#2 ← phi( cputc/(byte) cputc::c#1 )
  *((byte*) conio_cursor_text#15) ← (byte) cputc::c#2
  (byte*) conio_cursor_text#4 ← ++ (byte*) conio_cursor_text#15
  *((byte*) conio_cursor_color#15) ← (byte) conio_textcolor#1
  (byte*) conio_cursor_color#4 ← ++ (byte*) conio_cursor_color#15
  (byte) conio_cursor_x#4 ← ++ (byte) conio_cursor_x#16
  (bool~) cputc::$1 ← (byte) conio_cursor_x#4 == (const nomodify byte) CONIO_WIDTH
  (bool~) cputc::$2 ← ! (bool~) cputc::$1
  if((bool~) cputc::$2) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  (byte*) conio_cursor_color#27 ← phi( cputc::@2/(byte*) conio_cursor_color#4 )
  (byte*) conio_cursor_text#27 ← phi( cputc::@2/(byte*) conio_cursor_text#4 )
  (byte) conio_cursor_y#16 ← phi( cputc::@2/(byte) conio_cursor_y#26 )
  (byte) conio_cursor_x#5 ← (number) 0
  (byte) conio_cursor_y#4 ← ++ (byte) conio_cursor_y#16
  (bool~) cputc::$3 ← (byte) conio_cursor_y#4 == (const nomodify byte) CONIO_HEIGHT
  (bool~) cputc::$4 ← ! (bool~) cputc::$3
  if((bool~) cputc::$4) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  (byte*) conio_cursor_color#26 ← phi( cputc::@3/(byte*) conio_cursor_color#27 )
  (byte*) conio_cursor_text#26 ← phi( cputc::@3/(byte*) conio_cursor_text#27 )
  (byte) conio_cursor_y#27 ← phi( cputc::@3/(byte) conio_cursor_y#4 )
  (byte) conio_cursor_x#27 ← phi( cputc::@3/(byte) conio_cursor_x#5 )
  (byte) gotoxy::x#2 ← (number) 0
  (byte) gotoxy::y#2 ← (number) 0
  call gotoxy 
  to:cputc::@6
cputc::@6: scope:[cputc]  from cputc::@4
  (byte*) conio_cursor_color#16 ← phi( cputc::@4/(byte*) conio_cursor_color#2 )
  (byte*) conio_cursor_text#16 ← phi( cputc::@4/(byte*) conio_cursor_text#2 )
  (byte) conio_cursor_y#17 ← phi( cputc::@4/(byte) conio_cursor_y#2 )
  (byte) conio_cursor_x#17 ← phi( cputc::@4/(byte) conio_cursor_x#2 )
  (byte) conio_cursor_x#6 ← (byte) conio_cursor_x#17
  (byte) conio_cursor_y#5 ← (byte) conio_cursor_y#17
  (byte*) conio_cursor_text#5 ← (byte*) conio_cursor_text#16
  (byte*) conio_cursor_color#5 ← (byte*) conio_cursor_color#16
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@2 cputc::@3 cputc::@5 cputc::@6
  (byte*) conio_cursor_color#17 ← phi( cputc::@2/(byte*) conio_cursor_color#4 cputc::@3/(byte*) conio_cursor_color#27 cputc::@5/(byte*) conio_cursor_color#3 cputc::@6/(byte*) conio_cursor_color#5 )
  (byte*) conio_cursor_text#17 ← phi( cputc::@2/(byte*) conio_cursor_text#4 cputc::@3/(byte*) conio_cursor_text#27 cputc::@5/(byte*) conio_cursor_text#3 cputc::@6/(byte*) conio_cursor_text#5 )
  (byte) conio_cursor_y#18 ← phi( cputc::@2/(byte) conio_cursor_y#26 cputc::@3/(byte) conio_cursor_y#4 cputc::@5/(byte) conio_cursor_y#3 cputc::@6/(byte) conio_cursor_y#5 )
  (byte) conio_cursor_x#18 ← phi( cputc::@2/(byte) conio_cursor_x#4 cputc::@3/(byte) conio_cursor_x#5 cputc::@5/(byte) conio_cursor_x#3 cputc::@6/(byte) conio_cursor_x#6 )
  (byte) conio_cursor_x#7 ← (byte) conio_cursor_x#18
  (byte) conio_cursor_y#6 ← (byte) conio_cursor_y#18
  (byte*) conio_cursor_text#6 ← (byte*) conio_cursor_text#17
  (byte*) conio_cursor_color#6 ← (byte*) conio_cursor_color#17
  return 
  to:@return

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from main::@6
  (byte) conio_textcolor#5 ← phi( main::@6/(byte) conio_textcolor#7 )
  (byte*) conio_cursor_color#34 ← phi( main::@6/(byte*) conio_cursor_color#31 )
  (byte*) conio_cursor_text#34 ← phi( main::@6/(byte*) conio_cursor_text#31 )
  (byte) conio_cursor_y#34 ← phi( main::@6/(byte) conio_cursor_y#31 )
  (byte) conio_cursor_x#34 ← phi( main::@6/(byte) conio_cursor_x#31 )
  (to_nomodify byte*) cputs::s#3 ← phi( main::@6/(to_nomodify byte*) cputs::s#1 )
  (byte) cputs::c#0 ← (byte) 0
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@3
  (byte) conio_textcolor#4 ← phi( cputs/(byte) conio_textcolor#5 cputs::@3/(byte) conio_textcolor#6 )
  (byte*) conio_cursor_color#29 ← phi( cputs/(byte*) conio_cursor_color#34 cputs::@3/(byte*) conio_cursor_color#7 )
  (byte*) conio_cursor_text#29 ← phi( cputs/(byte*) conio_cursor_text#34 cputs::@3/(byte*) conio_cursor_text#7 )
  (byte) conio_cursor_y#29 ← phi( cputs/(byte) conio_cursor_y#34 cputs::@3/(byte) conio_cursor_y#7 )
  (byte) conio_cursor_x#29 ← phi( cputs/(byte) conio_cursor_x#34 cputs::@3/(byte) conio_cursor_x#8 )
  (to_nomodify byte*) cputs::s#2 ← phi( cputs/(to_nomodify byte*) cputs::s#3 cputs::@3/(to_nomodify byte*) cputs::s#4 )
  (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  (bool~) cputs::$1 ← (number) 0 != (byte) cputs::c#1
  if((bool~) cputs::$1) goto cputs::@2
  to:cputs::@return
cputs::@2: scope:[cputs]  from cputs::@1
  (to_nomodify byte*) cputs::s#5 ← phi( cputs::@1/(to_nomodify byte*) cputs::s#0 )
  (byte) conio_textcolor#3 ← phi( cputs::@1/(byte) conio_textcolor#4 )
  (byte*) conio_cursor_color#28 ← phi( cputs::@1/(byte*) conio_cursor_color#29 )
  (byte*) conio_cursor_text#28 ← phi( cputs::@1/(byte*) conio_cursor_text#29 )
  (byte) conio_cursor_y#28 ← phi( cputs::@1/(byte) conio_cursor_y#29 )
  (byte) conio_cursor_x#28 ← phi( cputs::@1/(byte) conio_cursor_x#29 )
  (byte) cputs::c#2 ← phi( cputs::@1/(byte) cputs::c#1 )
  (byte) cputc::c#0 ← (byte) cputs::c#2
  call cputc 
  to:cputs::@3
cputs::@3: scope:[cputs]  from cputs::@2
  (byte) conio_textcolor#6 ← phi( cputs::@2/(byte) conio_textcolor#3 )
  (to_nomodify byte*) cputs::s#4 ← phi( cputs::@2/(to_nomodify byte*) cputs::s#5 )
  (byte*) conio_cursor_color#18 ← phi( cputs::@2/(byte*) conio_cursor_color#6 )
  (byte*) conio_cursor_text#18 ← phi( cputs::@2/(byte*) conio_cursor_text#6 )
  (byte) conio_cursor_y#19 ← phi( cputs::@2/(byte) conio_cursor_y#6 )
  (byte) conio_cursor_x#19 ← phi( cputs::@2/(byte) conio_cursor_x#7 )
  (byte) conio_cursor_x#8 ← (byte) conio_cursor_x#19
  (byte) conio_cursor_y#7 ← (byte) conio_cursor_y#19
  (byte*) conio_cursor_text#7 ← (byte*) conio_cursor_text#18
  (byte*) conio_cursor_color#7 ← (byte*) conio_cursor_color#18
  to:cputs::@1
cputs::@return: scope:[cputs]  from cputs::@1
  (byte*) conio_cursor_color#19 ← phi( cputs::@1/(byte*) conio_cursor_color#29 )
  (byte*) conio_cursor_text#19 ← phi( cputs::@1/(byte*) conio_cursor_text#29 )
  (byte) conio_cursor_y#20 ← phi( cputs::@1/(byte) conio_cursor_y#29 )
  (byte) conio_cursor_x#20 ← phi( cputs::@1/(byte) conio_cursor_x#29 )
  (byte) conio_cursor_x#9 ← (byte) conio_cursor_x#20
  (byte) conio_cursor_y#8 ← (byte) conio_cursor_y#20
  (byte*) conio_cursor_text#8 ← (byte*) conio_cursor_text#19
  (byte*) conio_cursor_color#8 ← (byte*) conio_cursor_color#19
  return 
  to:@return

(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
tod_init: scope:[tod_init]  from main
  (byte) tod_init::tod_TENTHS#1 ← phi( main/(byte) tod_init::tod_TENTHS#0 )
  (byte) tod_init::tod_SEC#1 ← phi( main/(byte) tod_init::tod_SEC#0 )
  (byte) tod_init::tod_MIN#1 ← phi( main/(byte) tod_init::tod_MIN#0 )
  (byte) tod_init::tod_HOURS#1 ← phi( main/(byte) tod_init::tod_HOURS#0 )
  *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (number) $80
  *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (number) $7f
  *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) ← (byte) tod_init::tod_HOURS#1
  *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) ← (byte) tod_init::tod_MIN#1
  *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) ← (byte) tod_init::tod_SEC#1
  *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) ← (byte) tod_init::tod_TENTHS#1
  to:tod_init::@return
tod_init::@return: scope:[tod_init]  from tod_init
  return 
  to:@return

(struct TIME_OF_DAY()) tod_read()
tod_read: scope:[tod_read]  from main::@4
  (byte) tod_read::hours#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS)
  (byte) tod_read::mins#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN)
  (byte) tod_read::secs#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC)
  (byte) tod_read::tenths#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS)
  (byte) tod_read::tod_TENTHS#0 ← (byte) tod_read::tenths#0
  (byte) tod_read::tod_SEC#0 ← (byte) tod_read::secs#0
  (byte) tod_read::tod_MIN#0 ← (byte) tod_read::mins#0
  (byte) tod_read::tod_HOURS#0 ← (byte) tod_read::hours#0
  (byte) tod_read::return_TENTHS#0 ← (byte) tod_read::tod_TENTHS#0
  (byte) tod_read::return_SEC#0 ← (byte) tod_read::tod_SEC#0
  (byte) tod_read::return_MIN#0 ← (byte) tod_read::tod_MIN#0
  (byte) tod_read::return_HOURS#0 ← (byte) tod_read::tod_HOURS#0
  (struct TIME_OF_DAY) tod_read::return#0 ← struct-unwound {(byte) tod_read::return_TENTHS#0, (byte) tod_read::return_SEC#0, (byte) tod_read::return_MIN#0, (byte) tod_read::return_HOURS#0}
  to:tod_read::@return
tod_read::@return: scope:[tod_read]  from tod_read
  (byte) tod_read::return_HOURS#3 ← phi( tod_read/(byte) tod_read::return_HOURS#0 )
  (byte) tod_read::return_MIN#3 ← phi( tod_read/(byte) tod_read::return_MIN#0 )
  (byte) tod_read::return_SEC#3 ← phi( tod_read/(byte) tod_read::return_SEC#0 )
  (byte) tod_read::return_TENTHS#3 ← phi( tod_read/(byte) tod_read::return_TENTHS#0 )
  (byte) tod_read::return_TENTHS#1 ← (byte) tod_read::return_TENTHS#3
  (byte) tod_read::return_SEC#1 ← (byte) tod_read::return_SEC#3
  (byte) tod_read::return_MIN#1 ← (byte) tod_read::return_MIN#3
  (byte) tod_read::return_HOURS#1 ← (byte) tod_read::return_HOURS#3
  (struct TIME_OF_DAY) tod_read::return#1 ← struct-unwound {(byte) tod_read::return_TENTHS#1, (byte) tod_read::return_SEC#1, (byte) tod_read::return_MIN#1, (byte) tod_read::return_HOURS#1}
  return 
  to:@return

(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
tod_str: scope:[tod_str]  from main::@5
  (byte) tod_str::tod_TENTHS#1 ← phi( main::@5/(byte) tod_str::tod_TENTHS#0 )
  (byte) tod_str::tod_SEC#1 ← phi( main::@5/(byte) tod_str::tod_SEC#0 )
  (byte) tod_str::tod_MIN#1 ← phi( main::@5/(byte) tod_str::tod_MIN#0 )
  (byte) tod_str::tod_HOURS#1 ← phi( main::@5/(byte) tod_str::tod_HOURS#0 )
  (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#1 >> (number) 4
  (byte~) tod_str::$1 ← (byte) '0' + (byte~) tod_str::$0
  *((const byte*) tod_buffer + (number) 0) ← (byte~) tod_str::$1
  (number~) tod_str::$2 ← (byte) tod_str::tod_HOURS#1 & (number) $f
  (number~) tod_str::$3 ← (byte) '0' + (number~) tod_str::$2
  *((const byte*) tod_buffer + (number) 1) ← (number~) tod_str::$3
  (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#1 >> (number) 4
  (byte~) tod_str::$5 ← (byte) '0' + (byte~) tod_str::$4
  *((const byte*) tod_buffer + (number) 3) ← (byte~) tod_str::$5
  (number~) tod_str::$6 ← (byte) tod_str::tod_MIN#1 & (number) $f
  (number~) tod_str::$7 ← (byte) '0' + (number~) tod_str::$6
  *((const byte*) tod_buffer + (number) 4) ← (number~) tod_str::$7
  (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#1 >> (number) 4
  (byte~) tod_str::$9 ← (byte) '0' + (byte~) tod_str::$8
  *((const byte*) tod_buffer + (number) 6) ← (byte~) tod_str::$9
  (number~) tod_str::$10 ← (byte) tod_str::tod_SEC#1 & (number) $f
  (number~) tod_str::$11 ← (byte) '0' + (number~) tod_str::$10
  *((const byte*) tod_buffer + (number) 7) ← (number~) tod_str::$11
  (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#1 >> (number) 4
  (byte~) tod_str::$13 ← (byte) '0' + (byte~) tod_str::$12
  *((const byte*) tod_buffer + (number) 9) ← (byte~) tod_str::$13
  (number~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#1 & (number) $f
  (number~) tod_str::$15 ← (byte) '0' + (number~) tod_str::$14
  *((const byte*) tod_buffer + (number) $a) ← (number~) tod_str::$15
  (byte*) tod_str::return#0 ← (const byte*) tod_buffer
  to:tod_str::@return
tod_str::@return: scope:[tod_str]  from tod_str
  (byte*) tod_str::return#3 ← phi( tod_str/(byte*) tod_str::return#0 )
  (byte*) tod_str::return#1 ← (byte*) tod_str::return#3
  return 
  to:@return

(void()) main()
main: scope:[main]  from @1
  (byte) conio_textcolor#14 ← phi( @1/(byte) conio_textcolor#15 )
  (byte*) conio_cursor_color#37 ← phi( @1/(byte*) conio_cursor_color#33 )
  (byte*) conio_cursor_text#37 ← phi( @1/(byte*) conio_cursor_text#33 )
  (byte) conio_cursor_y#37 ← phi( @1/(byte) conio_cursor_y#33 )
  (byte) conio_cursor_x#37 ← phi( @1/(byte) conio_cursor_x#33 )
  (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_TENTHS)
  (byte) tod_init::tod_SEC#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC)
  (byte) tod_init::tod_MIN#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN)
  (byte) tod_init::tod_HOURS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS)
  call tod_init 
  to:main::@3
main::@3: scope:[main]  from main
  (byte) conio_textcolor#12 ← phi( main/(byte) conio_textcolor#14 )
  (byte*) conio_cursor_color#35 ← phi( main/(byte*) conio_cursor_color#37 )
  (byte*) conio_cursor_text#35 ← phi( main/(byte*) conio_cursor_text#37 )
  (byte) conio_cursor_y#35 ← phi( main/(byte) conio_cursor_y#37 )
  (byte) conio_cursor_x#35 ← phi( main/(byte) conio_cursor_x#37 )
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@7
  (byte) conio_textcolor#11 ← phi( main::@3/(byte) conio_textcolor#12 main::@7/(byte) conio_textcolor#13 )
  (byte*) conio_cursor_color#32 ← phi( main::@3/(byte*) conio_cursor_color#35 main::@7/(byte*) conio_cursor_color#10 )
  (byte*) conio_cursor_text#32 ← phi( main::@3/(byte*) conio_cursor_text#35 main::@7/(byte*) conio_cursor_text#10 )
  (byte) conio_cursor_y#32 ← phi( main::@3/(byte) conio_cursor_y#35 main::@7/(byte) conio_cursor_y#10 )
  (byte) conio_cursor_x#32 ← phi( main::@3/(byte) conio_cursor_x#35 main::@7/(byte) conio_cursor_x#11 )
  (bool~) main::$5 ← (number) 0 != (number) 1
  if((bool~) main::$5) goto main::@2
  to:main::@return
main::@2: scope:[main]  from main::@1
  (byte) conio_textcolor#10 ← phi( main::@1/(byte) conio_textcolor#11 )
  (byte*) conio_cursor_color#30 ← phi( main::@1/(byte*) conio_cursor_color#32 )
  (byte*) conio_cursor_text#30 ← phi( main::@1/(byte*) conio_cursor_text#32 )
  (byte) conio_cursor_y#30 ← phi( main::@1/(byte) conio_cursor_y#32 )
  (byte) conio_cursor_x#30 ← phi( main::@1/(byte) conio_cursor_x#32 )
  (byte) gotoxy::x#3 ← (number) 0
  (byte) gotoxy::y#3 ← (number) 0
  call gotoxy 
  to:main::@4
main::@4: scope:[main]  from main::@2
  (byte) conio_textcolor#9 ← phi( main::@2/(byte) conio_textcolor#10 )
  (byte*) conio_cursor_color#20 ← phi( main::@2/(byte*) conio_cursor_color#2 )
  (byte*) conio_cursor_text#20 ← phi( main::@2/(byte*) conio_cursor_text#2 )
  (byte) conio_cursor_y#21 ← phi( main::@2/(byte) conio_cursor_y#2 )
  (byte) conio_cursor_x#21 ← phi( main::@2/(byte) conio_cursor_x#2 )
  (byte) conio_cursor_x#10 ← (byte) conio_cursor_x#21
  (byte) conio_cursor_y#9 ← (byte) conio_cursor_y#21
  (byte*) conio_cursor_text#9 ← (byte*) conio_cursor_text#20
  (byte*) conio_cursor_color#9 ← (byte*) conio_cursor_color#20
  call tod_read 
  (byte) tod_read::return_TENTHS#2 ← (byte) tod_read::return_TENTHS#1
  (byte) tod_read::return_SEC#2 ← (byte) tod_read::return_SEC#1
  (byte) tod_read::return_MIN#2 ← (byte) tod_read::return_MIN#1
  (byte) tod_read::return_HOURS#2 ← (byte) tod_read::return_HOURS#1
  to:main::@5
main::@5: scope:[main]  from main::@4
  (byte) conio_textcolor#8 ← phi( main::@4/(byte) conio_textcolor#9 )
  (byte*) conio_cursor_color#36 ← phi( main::@4/(byte*) conio_cursor_color#9 )
  (byte*) conio_cursor_text#36 ← phi( main::@4/(byte*) conio_cursor_text#9 )
  (byte) conio_cursor_y#36 ← phi( main::@4/(byte) conio_cursor_y#9 )
  (byte) conio_cursor_x#36 ← phi( main::@4/(byte) conio_cursor_x#10 )
  (byte) tod_read::return_HOURS#4 ← phi( main::@4/(byte) tod_read::return_HOURS#2 )
  (byte) tod_read::return_MIN#4 ← phi( main::@4/(byte) tod_read::return_MIN#2 )
  (byte) tod_read::return_SEC#4 ← phi( main::@4/(byte) tod_read::return_SEC#2 )
  (byte) tod_read::return_TENTHS#4 ← phi( main::@4/(byte) tod_read::return_TENTHS#2 )
  (byte~) main::$2_TENTHS ← (byte) tod_read::return_TENTHS#4
  (byte~) main::$2_SEC ← (byte) tod_read::return_SEC#4
  (byte~) main::$2_MIN ← (byte) tod_read::return_MIN#4
  (byte~) main::$2_HOURS ← (byte) tod_read::return_HOURS#4
  (byte) tod_str::tod_TENTHS#0 ← (byte~) main::$2_TENTHS
  (byte) tod_str::tod_SEC#0 ← (byte~) main::$2_SEC
  (byte) tod_str::tod_MIN#0 ← (byte~) main::$2_MIN
  (byte) tod_str::tod_HOURS#0 ← (byte~) main::$2_HOURS
  call tod_str 
  (byte*) tod_str::return#2 ← (byte*) tod_str::return#1
  to:main::@6
main::@6: scope:[main]  from main::@5
  (byte) conio_textcolor#7 ← phi( main::@5/(byte) conio_textcolor#8 )
  (byte*) conio_cursor_color#31 ← phi( main::@5/(byte*) conio_cursor_color#36 )
  (byte*) conio_cursor_text#31 ← phi( main::@5/(byte*) conio_cursor_text#36 )
  (byte) conio_cursor_y#31 ← phi( main::@5/(byte) conio_cursor_y#36 )
  (byte) conio_cursor_x#31 ← phi( main::@5/(byte) conio_cursor_x#36 )
  (byte*) tod_str::return#4 ← phi( main::@5/(byte*) tod_str::return#2 )
  (byte*~) main::$3 ← (byte*) tod_str::return#4
  (to_nomodify byte*) cputs::s#1 ← (byte*~) main::$3
  call cputs 
  to:main::@7
main::@7: scope:[main]  from main::@6
  (byte) conio_textcolor#13 ← phi( main::@6/(byte) conio_textcolor#7 )
  (byte*) conio_cursor_color#21 ← phi( main::@6/(byte*) conio_cursor_color#8 )
  (byte*) conio_cursor_text#21 ← phi( main::@6/(byte*) conio_cursor_text#8 )
  (byte) conio_cursor_y#22 ← phi( main::@6/(byte) conio_cursor_y#8 )
  (byte) conio_cursor_x#22 ← phi( main::@6/(byte) conio_cursor_x#9 )
  (byte) conio_cursor_x#11 ← (byte) conio_cursor_x#22
  (byte) conio_cursor_y#10 ← (byte) conio_cursor_y#22
  (byte*) conio_cursor_text#10 ← (byte*) conio_cursor_text#21
  (byte*) conio_cursor_color#10 ← (byte*) conio_cursor_color#21
  to:main::@1
main::@return: scope:[main]  from main::@1
  (byte*) conio_cursor_color#22 ← phi( main::@1/(byte*) conio_cursor_color#32 )
  (byte*) conio_cursor_text#22 ← phi( main::@1/(byte*) conio_cursor_text#32 )
  (byte) conio_cursor_y#23 ← phi( main::@1/(byte) conio_cursor_y#32 )
  (byte) conio_cursor_x#23 ← phi( main::@1/(byte) conio_cursor_x#32 )
  (byte) conio_cursor_x#12 ← (byte) conio_cursor_x#23
  (byte) conio_cursor_y#11 ← (byte) conio_cursor_y#23
  (byte*) conio_cursor_text#11 ← (byte*) conio_cursor_text#22
  (byte*) conio_cursor_color#11 ← (byte*) conio_cursor_color#22
  return 
  to:@return
@1: scope:[]  from @begin
  (byte) conio_textcolor#15 ← phi( @begin/(byte) conio_textcolor#0 )
  (byte*) conio_cursor_color#33 ← phi( @begin/(byte*) conio_cursor_color#0 )
  (byte*) conio_cursor_text#33 ← phi( @begin/(byte*) conio_cursor_text#0 )
  (byte) conio_cursor_y#33 ← phi( @begin/(byte) conio_cursor_y#0 )
  (byte) conio_cursor_x#33 ← phi( @begin/(byte) conio_cursor_x#0 )
  call main 
  to:@2
@2: scope:[]  from @1
  (byte*) conio_cursor_color#23 ← phi( @1/(byte*) conio_cursor_color#11 )
  (byte*) conio_cursor_text#23 ← phi( @1/(byte*) conio_cursor_text#11 )
  (byte) conio_cursor_y#24 ← phi( @1/(byte) conio_cursor_y#11 )
  (byte) conio_cursor_x#24 ← phi( @1/(byte) conio_cursor_x#12 )
  (byte) conio_cursor_x#13 ← (byte) conio_cursor_x#24
  (byte) conio_cursor_y#12 ← (byte) conio_cursor_y#24
  (byte*) conio_cursor_text#12 ← (byte*) conio_cursor_text#23
  (byte*) conio_cursor_color#12 ← (byte*) conio_cursor_color#23
  to:@end
@end: scope:[]  from @2

SYMBOL TABLE SSA
(label) @1
(label) @2
(label) @begin
(label) @end
(const nomodify struct MOS6526_CIA*) CIA1 = (struct MOS6526_CIA*)(number) $dc00
(const nomodify byte) CONIO_HEIGHT = (byte) $19
(const nomodify byte*) CONIO_SCREEN_COLORS = (byte*)(number) $d800
(const nomodify byte*) CONIO_SCREEN_TEXT = (byte*)(number) $400
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (byte) $e
(const nomodify byte) CONIO_WIDTH = (byte) $28
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = (byte) $e
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = (byte) $f
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = (byte) 8
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = (byte) $b
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = (byte) $a
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = (byte) 9
(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS = (byte) 3
(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN = (byte) 2
(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC = (byte) 1
(const byte) OFFSET_STRUCT_TIME_OF_DAY_TENTHS = (byte) 0
(byte) TIME_OF_DAY::HOURS
(byte) TIME_OF_DAY::MIN
(byte) TIME_OF_DAY::SEC
(byte) TIME_OF_DAY::TENTHS
(struct TIME_OF_DAY) TOD_ZERO loadstore = { TENTHS: (byte) 0, SEC: (byte) 0, MIN: (byte) 0, HOURS: (byte) 0 }
(byte*) conio_cursor_color
(byte*) conio_cursor_color#0
(byte*) conio_cursor_color#1
(byte*) conio_cursor_color#10
(byte*) conio_cursor_color#11
(byte*) conio_cursor_color#12
(byte*) conio_cursor_color#13
(byte*) conio_cursor_color#14
(byte*) conio_cursor_color#15
(byte*) conio_cursor_color#16
(byte*) conio_cursor_color#17
(byte*) conio_cursor_color#18
(byte*) conio_cursor_color#19
(byte*) conio_cursor_color#2
(byte*) conio_cursor_color#20
(byte*) conio_cursor_color#21
(byte*) conio_cursor_color#22
(byte*) conio_cursor_color#23
(byte*) conio_cursor_color#24
(byte*) conio_cursor_color#25
(byte*) conio_cursor_color#26
(byte*) conio_cursor_color#27
(byte*) conio_cursor_color#28
(byte*) conio_cursor_color#29
(byte*) conio_cursor_color#3
(byte*) conio_cursor_color#30
(byte*) conio_cursor_color#31
(byte*) conio_cursor_color#32
(byte*) conio_cursor_color#33
(byte*) conio_cursor_color#34
(byte*) conio_cursor_color#35
(byte*) conio_cursor_color#36
(byte*) conio_cursor_color#37
(byte*) conio_cursor_color#4
(byte*) conio_cursor_color#5
(byte*) conio_cursor_color#6
(byte*) conio_cursor_color#7
(byte*) conio_cursor_color#8
(byte*) conio_cursor_color#9
(byte*) conio_cursor_text
(byte*) conio_cursor_text#0
(byte*) conio_cursor_text#1
(byte*) conio_cursor_text#10
(byte*) conio_cursor_text#11
(byte*) conio_cursor_text#12
(byte*) conio_cursor_text#13
(byte*) conio_cursor_text#14
(byte*) conio_cursor_text#15
(byte*) conio_cursor_text#16
(byte*) conio_cursor_text#17
(byte*) conio_cursor_text#18
(byte*) conio_cursor_text#19
(byte*) conio_cursor_text#2
(byte*) conio_cursor_text#20
(byte*) conio_cursor_text#21
(byte*) conio_cursor_text#22
(byte*) conio_cursor_text#23
(byte*) conio_cursor_text#24
(byte*) conio_cursor_text#25
(byte*) conio_cursor_text#26
(byte*) conio_cursor_text#27
(byte*) conio_cursor_text#28
(byte*) conio_cursor_text#29
(byte*) conio_cursor_text#3
(byte*) conio_cursor_text#30
(byte*) conio_cursor_text#31
(byte*) conio_cursor_text#32
(byte*) conio_cursor_text#33
(byte*) conio_cursor_text#34
(byte*) conio_cursor_text#35
(byte*) conio_cursor_text#36
(byte*) conio_cursor_text#37
(byte*) conio_cursor_text#4
(byte*) conio_cursor_text#5
(byte*) conio_cursor_text#6
(byte*) conio_cursor_text#7
(byte*) conio_cursor_text#8
(byte*) conio_cursor_text#9
(byte) conio_cursor_x
(byte) conio_cursor_x#0
(byte) conio_cursor_x#1
(byte) conio_cursor_x#10
(byte) conio_cursor_x#11
(byte) conio_cursor_x#12
(byte) conio_cursor_x#13
(byte) conio_cursor_x#14
(byte) conio_cursor_x#15
(byte) conio_cursor_x#16
(byte) conio_cursor_x#17
(byte) conio_cursor_x#18
(byte) conio_cursor_x#19
(byte) conio_cursor_x#2
(byte) conio_cursor_x#20
(byte) conio_cursor_x#21
(byte) conio_cursor_x#22
(byte) conio_cursor_x#23
(byte) conio_cursor_x#24
(byte) conio_cursor_x#25
(byte) conio_cursor_x#26
(byte) conio_cursor_x#27
(byte) conio_cursor_x#28
(byte) conio_cursor_x#29
(byte) conio_cursor_x#3
(byte) conio_cursor_x#30
(byte) conio_cursor_x#31
(byte) conio_cursor_x#32
(byte) conio_cursor_x#33
(byte) conio_cursor_x#34
(byte) conio_cursor_x#35
(byte) conio_cursor_x#36
(byte) conio_cursor_x#37
(byte) conio_cursor_x#4
(byte) conio_cursor_x#5
(byte) conio_cursor_x#6
(byte) conio_cursor_x#7
(byte) conio_cursor_x#8
(byte) conio_cursor_x#9
(byte) conio_cursor_y
(byte) conio_cursor_y#0
(byte) conio_cursor_y#1
(byte) conio_cursor_y#10
(byte) conio_cursor_y#11
(byte) conio_cursor_y#12
(byte) conio_cursor_y#13
(byte) conio_cursor_y#14
(byte) conio_cursor_y#15
(byte) conio_cursor_y#16
(byte) conio_cursor_y#17
(byte) conio_cursor_y#18
(byte) conio_cursor_y#19
(byte) conio_cursor_y#2
(byte) conio_cursor_y#20
(byte) conio_cursor_y#21
(byte) conio_cursor_y#22
(byte) conio_cursor_y#23
(byte) conio_cursor_y#24
(byte) conio_cursor_y#25
(byte) conio_cursor_y#26
(byte) conio_cursor_y#27
(byte) conio_cursor_y#28
(byte) conio_cursor_y#29
(byte) conio_cursor_y#3
(byte) conio_cursor_y#30
(byte) conio_cursor_y#31
(byte) conio_cursor_y#32
(byte) conio_cursor_y#33
(byte) conio_cursor_y#34
(byte) conio_cursor_y#35
(byte) conio_cursor_y#36
(byte) conio_cursor_y#37
(byte) conio_cursor_y#4
(byte) conio_cursor_y#5
(byte) conio_cursor_y#6
(byte) conio_cursor_y#7
(byte) conio_cursor_y#8
(byte) conio_cursor_y#9
(byte) conio_textcolor
(byte) conio_textcolor#0
(byte) conio_textcolor#1
(byte) conio_textcolor#10
(byte) conio_textcolor#11
(byte) conio_textcolor#12
(byte) conio_textcolor#13
(byte) conio_textcolor#14
(byte) conio_textcolor#15
(byte) conio_textcolor#2
(byte) conio_textcolor#3
(byte) conio_textcolor#4
(byte) conio_textcolor#5
(byte) conio_textcolor#6
(byte) conio_textcolor#7
(byte) conio_textcolor#8
(byte) conio_textcolor#9
(void()) cputc((byte) cputc::c)
(bool~) cputc::$0
(bool~) cputc::$1
(bool~) cputc::$2
(bool~) cputc::$3
(bool~) cputc::$4
(number~) cputc::$6
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@4
(label) cputc::@5
(label) cputc::@6
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0
(byte) cputc::c#1
(byte) cputc::c#2
(void()) cputs((to_nomodify byte*) cputs::s)
(bool~) cputs::$1
(label) cputs::@1
(label) cputs::@2
(label) cputs::@3
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#0
(byte) cputs::c#1
(byte) cputs::c#2
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0
(to_nomodify byte*) cputs::s#1
(to_nomodify byte*) cputs::s#2
(to_nomodify byte*) cputs::s#3
(to_nomodify byte*) cputs::s#4
(to_nomodify byte*) cputs::s#5
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(bool~) gotoxy::$0
(bool~) gotoxy::$1
(bool~) gotoxy::$2
(bool~) gotoxy::$3
(word~) gotoxy::$4
(word~) gotoxy::$5
(byte*~) gotoxy::$6
(byte*~) gotoxy::$7
(word~) gotoxy::$8
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@4
(label) gotoxy::@return
(word) gotoxy::offset
(word) gotoxy::offset#0
(byte) gotoxy::x
(byte) gotoxy::x#0
(byte) gotoxy::x#1
(byte) gotoxy::x#2
(byte) gotoxy::x#3
(byte) gotoxy::x#4
(byte) gotoxy::x#5
(byte) gotoxy::x#6
(byte) gotoxy::x#7
(byte) gotoxy::y
(byte) gotoxy::y#0
(byte) gotoxy::y#1
(byte) gotoxy::y#2
(byte) gotoxy::y#3
(byte) gotoxy::y#4
(byte) gotoxy::y#5
(byte) gotoxy::y#6
(byte) gotoxy::y#7
(void()) main()
(byte~) main::$2_HOURS
(byte~) main::$2_MIN
(byte~) main::$2_SEC
(byte~) main::$2_TENTHS
(byte*~) main::$3
(bool~) main::$5
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@return
(const byte*) tod_buffer[]  = (byte*) "00:00:00:00"
(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
(label) tod_init::@return
(struct TIME_OF_DAY) tod_init::tod
(byte) tod_init::tod_HOURS
(byte) tod_init::tod_HOURS#0
(byte) tod_init::tod_HOURS#1
(byte) tod_init::tod_MIN
(byte) tod_init::tod_MIN#0
(byte) tod_init::tod_MIN#1
(byte) tod_init::tod_SEC
(byte) tod_init::tod_SEC#0
(byte) tod_init::tod_SEC#1
(byte) tod_init::tod_TENTHS
(byte) tod_init::tod_TENTHS#0
(byte) tod_init::tod_TENTHS#1
(struct TIME_OF_DAY()) tod_read()
(label) tod_read::@return
(byte) tod_read::hours
(byte) tod_read::hours#0
(byte) tod_read::mins
(byte) tod_read::mins#0
(struct TIME_OF_DAY) tod_read::return
(struct TIME_OF_DAY) tod_read::return#0
(struct TIME_OF_DAY) tod_read::return#1
(byte) tod_read::return_HOURS
(byte) tod_read::return_HOURS#0
(byte) tod_read::return_HOURS#1
(byte) tod_read::return_HOURS#2
(byte) tod_read::return_HOURS#3
(byte) tod_read::return_HOURS#4
(byte) tod_read::return_MIN
(byte) tod_read::return_MIN#0
(byte) tod_read::return_MIN#1
(byte) tod_read::return_MIN#2
(byte) tod_read::return_MIN#3
(byte) tod_read::return_MIN#4
(byte) tod_read::return_SEC
(byte) tod_read::return_SEC#0
(byte) tod_read::return_SEC#1
(byte) tod_read::return_SEC#2
(byte) tod_read::return_SEC#3
(byte) tod_read::return_SEC#4
(byte) tod_read::return_TENTHS
(byte) tod_read::return_TENTHS#0
(byte) tod_read::return_TENTHS#1
(byte) tod_read::return_TENTHS#2
(byte) tod_read::return_TENTHS#3
(byte) tod_read::return_TENTHS#4
(byte) tod_read::secs
(byte) tod_read::secs#0
(byte) tod_read::tenths
(byte) tod_read::tenths#0
(byte) tod_read::tod_HOURS
(byte) tod_read::tod_HOURS#0
(byte) tod_read::tod_MIN
(byte) tod_read::tod_MIN#0
(byte) tod_read::tod_SEC
(byte) tod_read::tod_SEC#0
(byte) tod_read::tod_TENTHS
(byte) tod_read::tod_TENTHS#0
(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
(byte~) tod_str::$0
(byte~) tod_str::$1
(number~) tod_str::$10
(number~) tod_str::$11
(byte~) tod_str::$12
(byte~) tod_str::$13
(number~) tod_str::$14
(number~) tod_str::$15
(number~) tod_str::$2
(number~) tod_str::$3
(byte~) tod_str::$4
(byte~) tod_str::$5
(number~) tod_str::$6
(number~) tod_str::$7
(byte~) tod_str::$8
(byte~) tod_str::$9
(label) tod_str::@return
(byte*) tod_str::return
(byte*) tod_str::return#0
(byte*) tod_str::return#1
(byte*) tod_str::return#2
(byte*) tod_str::return#3
(byte*) tod_str::return#4
(struct TIME_OF_DAY) tod_str::tod
(byte) tod_str::tod_HOURS
(byte) tod_str::tod_HOURS#0
(byte) tod_str::tod_HOURS#1
(byte) tod_str::tod_MIN
(byte) tod_str::tod_MIN#0
(byte) tod_str::tod_MIN#1
(byte) tod_str::tod_SEC
(byte) tod_str::tod_SEC#0
(byte) tod_str::tod_SEC#1
(byte) tod_str::tod_TENTHS
(byte) tod_str::tod_TENTHS#0
(byte) tod_str::tod_TENTHS#1

Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#0 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#0 ← (number) 0
Adding number conversion cast (unumber) 1 in (number~) cputc::$6 ← (byte) conio_cursor_y#14 + (number) 1
Adding number conversion cast (unumber) cputc::$6 in (number~) cputc::$6 ← (byte) conio_cursor_y#14 + (unumber)(number) 1
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#1 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) conio_cursor_x#5 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#2 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#2 ← (number) 0
Adding number conversion cast (unumber) 0 in (bool~) cputs::$1 ← (number) 0 != (byte) cputs::c#1
Adding number conversion cast (unumber) $80 in *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (number) $80
Adding number conversion cast (unumber) $7f in *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (number) $7f
Adding number conversion cast (unumber) 4 in (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#1 >> (number) 4
Adding number conversion cast (unumber) 0 in *((const byte*) tod_buffer + (number) 0) ← (byte~) tod_str::$1
Adding number conversion cast (unumber) $f in (number~) tod_str::$2 ← (byte) tod_str::tod_HOURS#1 & (number) $f
Adding number conversion cast (unumber) tod_str::$2 in (number~) tod_str::$2 ← (byte) tod_str::tod_HOURS#1 & (unumber)(number) $f
Adding number conversion cast (unumber) tod_str::$3 in (number~) tod_str::$3 ← (byte) '0' + (unumber~) tod_str::$2
Adding number conversion cast (unumber) 1 in *((const byte*) tod_buffer + (number) 1) ← (unumber~) tod_str::$3
Adding number conversion cast (unumber) 4 in (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#1 >> (number) 4
Adding number conversion cast (unumber) 3 in *((const byte*) tod_buffer + (number) 3) ← (byte~) tod_str::$5
Adding number conversion cast (unumber) $f in (number~) tod_str::$6 ← (byte) tod_str::tod_MIN#1 & (number) $f
Adding number conversion cast (unumber) tod_str::$6 in (number~) tod_str::$6 ← (byte) tod_str::tod_MIN#1 & (unumber)(number) $f
Adding number conversion cast (unumber) tod_str::$7 in (number~) tod_str::$7 ← (byte) '0' + (unumber~) tod_str::$6
Adding number conversion cast (unumber) 4 in *((const byte*) tod_buffer + (number) 4) ← (unumber~) tod_str::$7
Adding number conversion cast (unumber) 4 in (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#1 >> (number) 4
Adding number conversion cast (unumber) 6 in *((const byte*) tod_buffer + (number) 6) ← (byte~) tod_str::$9
Adding number conversion cast (unumber) $f in (number~) tod_str::$10 ← (byte) tod_str::tod_SEC#1 & (number) $f
Adding number conversion cast (unumber) tod_str::$10 in (number~) tod_str::$10 ← (byte) tod_str::tod_SEC#1 & (unumber)(number) $f
Adding number conversion cast (unumber) tod_str::$11 in (number~) tod_str::$11 ← (byte) '0' + (unumber~) tod_str::$10
Adding number conversion cast (unumber) 7 in *((const byte*) tod_buffer + (number) 7) ← (unumber~) tod_str::$11
Adding number conversion cast (unumber) 4 in (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#1 >> (number) 4
Adding number conversion cast (unumber) 9 in *((const byte*) tod_buffer + (number) 9) ← (byte~) tod_str::$13
Adding number conversion cast (unumber) $f in (number~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#1 & (number) $f
Adding number conversion cast (unumber) tod_str::$14 in (number~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#1 & (unumber)(number) $f
Adding number conversion cast (unumber) tod_str::$15 in (number~) tod_str::$15 ← (byte) '0' + (unumber~) tod_str::$14
Adding number conversion cast (unumber) $a in *((const byte*) tod_buffer + (number) $a) ← (unumber~) tod_str::$15
Adding number conversion cast (unumber) 0 in (byte) gotoxy::x#3 ← (number) 0
Adding number conversion cast (unumber) 0 in (byte) gotoxy::y#3 ← (number) 0
Successful SSA optimization PassNAddNumberTypeConversions
Inlining cast (byte) gotoxy::x#0 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#0 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::x#1 ← (unumber)(number) 0
Inlining cast (byte) conio_cursor_x#5 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::x#2 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#2 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::x#3 ← (unumber)(number) 0
Inlining cast (byte) gotoxy::y#3 ← (unumber)(number) 0
Successful SSA optimization Pass2InlineCast
Simplifying constant pointer cast (byte*) 1024
Simplifying constant pointer cast (byte*) 55296
Simplifying constant pointer cast (struct MOS6526_CIA*) 56320
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 1
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Simplifying constant integer cast $80
Simplifying constant integer cast $7f
Simplifying constant integer cast 4
Simplifying constant integer cast 0
Simplifying constant integer cast $f
Simplifying constant integer cast 1
Simplifying constant integer cast 4
Simplifying constant integer cast 3
Simplifying constant integer cast $f
Simplifying constant integer cast 4
Simplifying constant integer cast 4
Simplifying constant integer cast 6
Simplifying constant integer cast $f
Simplifying constant integer cast 7
Simplifying constant integer cast 4
Simplifying constant integer cast 9
Simplifying constant integer cast $f
Simplifying constant integer cast $a
Simplifying constant integer cast 0
Simplifying constant integer cast 0
Successful SSA optimization PassNCastSimplification
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $80
Finalized unsigned number type (byte) $7f
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) $f
Finalized unsigned number type (byte) 1
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 3
Finalized unsigned number type (byte) $f
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 6
Finalized unsigned number type (byte) $f
Finalized unsigned number type (byte) 7
Finalized unsigned number type (byte) 4
Finalized unsigned number type (byte) 9
Finalized unsigned number type (byte) $f
Finalized unsigned number type (byte) $a
Finalized unsigned number type (byte) 0
Finalized unsigned number type (byte) 0
Successful SSA optimization PassNFinalizeNumberTypeConversions
Inferred type updated to byte in (unumber~) cputc::$6 ← (byte) conio_cursor_y#14 + (byte) 1
Inferred type updated to byte in (unumber~) tod_str::$2 ← (byte) tod_str::tod_HOURS#1 & (byte) $f
Inferred type updated to byte in (unumber~) tod_str::$3 ← (byte) '0' + (byte~) tod_str::$2
Inferred type updated to byte in (unumber~) tod_str::$6 ← (byte) tod_str::tod_MIN#1 & (byte) $f
Inferred type updated to byte in (unumber~) tod_str::$7 ← (byte) '0' + (byte~) tod_str::$6
Inferred type updated to byte in (unumber~) tod_str::$10 ← (byte) tod_str::tod_SEC#1 & (byte) $f
Inferred type updated to byte in (unumber~) tod_str::$11 ← (byte) '0' + (byte~) tod_str::$10
Inferred type updated to byte in (unumber~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#1 & (byte) $f
Inferred type updated to byte in (unumber~) tod_str::$15 ← (byte) '0' + (byte~) tod_str::$14
Inversing boolean not [7] (bool~) gotoxy::$1 ← (byte) gotoxy::x#4 < (const nomodify byte) CONIO_WIDTH from [6] (bool~) gotoxy::$0 ← (byte) gotoxy::x#4 >= (const nomodify byte) CONIO_WIDTH
Inversing boolean not [11] (bool~) gotoxy::$3 ← (byte) gotoxy::y#4 < (const nomodify byte) CONIO_HEIGHT from [10] (bool~) gotoxy::$2 ← (byte) gotoxy::y#4 >= (const nomodify byte) CONIO_HEIGHT
Inversing boolean not [54] (bool~) cputc::$2 ← (byte) conio_cursor_x#4 != (const nomodify byte) CONIO_WIDTH from [53] (bool~) cputc::$1 ← (byte) conio_cursor_x#4 == (const nomodify byte) CONIO_WIDTH
Inversing boolean not [60] (bool~) cputc::$4 ← (byte) conio_cursor_y#4 != (const nomodify byte) CONIO_HEIGHT from [59] (bool~) cputc::$3 ← (byte) conio_cursor_y#4 == (const nomodify byte) CONIO_HEIGHT
Successful SSA optimization Pass2UnaryNotSimplification
Alias gotoxy::y#6 = gotoxy::y#7 
Alias gotoxy::offset#0 = gotoxy::$5 
Alias conio_cursor_text#1 = gotoxy::$6 conio_cursor_text#13 conio_cursor_text#2 
Alias conio_cursor_color#1 = gotoxy::$7 conio_cursor_color#13 conio_cursor_color#2 
Alias gotoxy::x#6 = gotoxy::x#7 
Alias conio_cursor_x#1 = conio_cursor_x#14 conio_cursor_x#2 
Alias conio_cursor_y#1 = conio_cursor_y#13 conio_cursor_y#2 
Alias conio_cursor_y#14 = conio_cursor_y#25 conio_cursor_y#26 conio_cursor_y#16 
Alias conio_cursor_x#16 = conio_cursor_x#25 conio_cursor_x#26 
Alias conio_cursor_text#15 = conio_cursor_text#24 conio_cursor_text#25 
Alias conio_cursor_color#15 = conio_cursor_color#24 conio_cursor_color#25 
Alias gotoxy::y#1 = cputc::$6 
Alias conio_cursor_x#15 = conio_cursor_x#3 
Alias conio_cursor_y#15 = conio_cursor_y#3 
Alias conio_cursor_text#14 = conio_cursor_text#3 
Alias conio_cursor_color#14 = conio_cursor_color#3 
Alias cputc::c#1 = cputc::c#2 
Alias conio_textcolor#1 = conio_textcolor#2 
Alias conio_cursor_text#26 = conio_cursor_text#27 conio_cursor_text#4 
Alias conio_cursor_color#26 = conio_cursor_color#27 conio_cursor_color#4 
Alias conio_cursor_x#27 = conio_cursor_x#5 
Alias conio_cursor_y#27 = conio_cursor_y#4 
Alias conio_cursor_x#17 = conio_cursor_x#6 
Alias conio_cursor_y#17 = conio_cursor_y#5 
Alias conio_cursor_text#16 = conio_cursor_text#5 
Alias conio_cursor_color#16 = conio_cursor_color#5 
Alias conio_cursor_x#18 = conio_cursor_x#7 
Alias conio_cursor_y#18 = conio_cursor_y#6 
Alias conio_cursor_text#17 = conio_cursor_text#6 
Alias conio_cursor_color#17 = conio_cursor_color#6 
Alias cputs::c#1 = cputs::c#2 
Alias conio_cursor_x#20 = conio_cursor_x#28 conio_cursor_x#29 conio_cursor_x#9 
Alias conio_cursor_y#20 = conio_cursor_y#28 conio_cursor_y#29 conio_cursor_y#8 
Alias conio_cursor_text#19 = conio_cursor_text#28 conio_cursor_text#29 conio_cursor_text#8 
Alias conio_cursor_color#19 = conio_cursor_color#28 conio_cursor_color#29 conio_cursor_color#8 
Alias conio_textcolor#3 = conio_textcolor#4 conio_textcolor#6 
Alias cputs::s#0 = cputs::s#5 cputs::s#4 
Alias conio_cursor_x#19 = conio_cursor_x#8 
Alias conio_cursor_y#19 = conio_cursor_y#7 
Alias conio_cursor_text#18 = conio_cursor_text#7 
Alias conio_cursor_color#18 = conio_cursor_color#7 
Alias tod_read::return_TENTHS#0 = tod_read::tod_TENTHS#0 tod_read::tenths#0 tod_read::return_TENTHS#3 tod_read::return_TENTHS#1 
Alias tod_read::return_SEC#0 = tod_read::tod_SEC#0 tod_read::secs#0 tod_read::return_SEC#3 tod_read::return_SEC#1 
Alias tod_read::return_MIN#0 = tod_read::tod_MIN#0 tod_read::mins#0 tod_read::return_MIN#3 tod_read::return_MIN#1 
Alias tod_read::return_HOURS#0 = tod_read::tod_HOURS#0 tod_read::hours#0 tod_read::return_HOURS#3 tod_read::return_HOURS#1 
Alias tod_str::return#0 = tod_str::return#3 tod_str::return#1 
Alias conio_cursor_x#35 = conio_cursor_x#37 
Alias conio_cursor_y#35 = conio_cursor_y#37 
Alias conio_cursor_text#35 = conio_cursor_text#37 
Alias conio_cursor_color#35 = conio_cursor_color#37 
Alias conio_textcolor#12 = conio_textcolor#14 
Alias conio_cursor_x#12 = conio_cursor_x#30 conio_cursor_x#32 conio_cursor_x#23 
Alias conio_cursor_y#11 = conio_cursor_y#30 conio_cursor_y#32 conio_cursor_y#23 
Alias conio_cursor_text#11 = conio_cursor_text#30 conio_cursor_text#32 conio_cursor_text#22 
Alias conio_cursor_color#11 = conio_cursor_color#30 conio_cursor_color#32 conio_cursor_color#22 
Alias conio_textcolor#10 = conio_textcolor#11 conio_textcolor#9 conio_textcolor#8 conio_textcolor#7 conio_textcolor#13 
Alias conio_cursor_x#10 = conio_cursor_x#21 conio_cursor_x#36 conio_cursor_x#31 
Alias conio_cursor_y#21 = conio_cursor_y#9 conio_cursor_y#36 conio_cursor_y#31 
Alias conio_cursor_text#20 = conio_cursor_text#9 conio_cursor_text#36 conio_cursor_text#31 
Alias conio_cursor_color#20 = conio_cursor_color#9 conio_cursor_color#36 conio_cursor_color#31 
Alias tod_read::return_TENTHS#2 = tod_read::return_TENTHS#4 
Alias tod_read::return_SEC#2 = tod_read::return_SEC#4 
Alias tod_read::return_MIN#2 = tod_read::return_MIN#4 
Alias tod_read::return_HOURS#2 = tod_read::return_HOURS#4 
Alias tod_str::tod_TENTHS#0 = main::$2_TENTHS 
Alias tod_str::tod_SEC#0 = main::$2_SEC 
Alias tod_str::tod_MIN#0 = main::$2_MIN 
Alias tod_str::tod_HOURS#0 = main::$2_HOURS 
Alias tod_str::return#2 = tod_str::return#4 
Alias cputs::s#1 = main::$3 
Alias conio_cursor_x#11 = conio_cursor_x#22 
Alias conio_cursor_y#10 = conio_cursor_y#22 
Alias conio_cursor_text#10 = conio_cursor_text#21 
Alias conio_cursor_color#10 = conio_cursor_color#21 
Alias conio_cursor_x#0 = conio_cursor_x#33 
Alias conio_cursor_y#0 = conio_cursor_y#33 
Alias conio_cursor_text#0 = conio_cursor_text#33 
Alias conio_cursor_color#0 = conio_cursor_color#33 
Alias conio_textcolor#0 = conio_textcolor#15 
Alias conio_cursor_x#13 = conio_cursor_x#24 
Alias conio_cursor_y#12 = conio_cursor_y#24 
Alias conio_cursor_text#12 = conio_cursor_text#23 
Alias conio_cursor_color#12 = conio_cursor_color#23 
Successful SSA optimization Pass2AliasElimination
Alias gotoxy::y#4 = gotoxy::y#6 
Alias gotoxy::x#5 = gotoxy::x#6 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values (byte) cputc::c#1 (byte) cputc::c#0
Identical Phi Values (byte) conio_cursor_y#14 (byte) conio_cursor_y#20
Identical Phi Values (byte*) conio_cursor_text#15 (byte*) conio_cursor_text#19
Identical Phi Values (byte) conio_textcolor#1 (byte) conio_textcolor#3
Identical Phi Values (byte*) conio_cursor_color#15 (byte*) conio_cursor_color#19
Identical Phi Values (byte) conio_cursor_x#16 (byte) conio_cursor_x#20
Identical Phi Values (byte) conio_cursor_x#15 (byte) conio_cursor_x#1
Identical Phi Values (byte) conio_cursor_y#15 (byte) conio_cursor_y#1
Identical Phi Values (byte*) conio_cursor_text#14 (byte*) conio_cursor_text#1
Identical Phi Values (byte*) conio_cursor_color#14 (byte*) conio_cursor_color#1
Identical Phi Values (byte) conio_cursor_x#17 (byte) conio_cursor_x#1
Identical Phi Values (byte) conio_cursor_y#17 (byte) conio_cursor_y#1
Identical Phi Values (byte*) conio_cursor_text#16 (byte*) conio_cursor_text#1
Identical Phi Values (byte*) conio_cursor_color#16 (byte*) conio_cursor_color#1
Identical Phi Values (to_nomodify byte*) cputs::s#3 (to_nomodify byte*) cputs::s#1
Identical Phi Values (byte) conio_cursor_x#34 (byte) conio_cursor_x#10
Identical Phi Values (byte) conio_cursor_y#34 (byte) conio_cursor_y#21
Identical Phi Values (byte*) conio_cursor_text#34 (byte*) conio_cursor_text#20
Identical Phi Values (byte*) conio_cursor_color#34 (byte*) conio_cursor_color#20
Identical Phi Values (byte) conio_textcolor#5 (byte) conio_textcolor#10
Identical Phi Values (byte) conio_textcolor#3 (byte) conio_textcolor#5
Identical Phi Values (byte) conio_cursor_x#19 (byte) conio_cursor_x#18
Identical Phi Values (byte) conio_cursor_y#19 (byte) conio_cursor_y#18
Identical Phi Values (byte*) conio_cursor_text#18 (byte*) conio_cursor_text#17
Identical Phi Values (byte*) conio_cursor_color#18 (byte*) conio_cursor_color#17
Identical Phi Values (byte) tod_init::tod_HOURS#1 (byte) tod_init::tod_HOURS#0
Identical Phi Values (byte) tod_init::tod_MIN#1 (byte) tod_init::tod_MIN#0
Identical Phi Values (byte) tod_init::tod_SEC#1 (byte) tod_init::tod_SEC#0
Identical Phi Values (byte) tod_init::tod_TENTHS#1 (byte) tod_init::tod_TENTHS#0
Identical Phi Values (byte) tod_str::tod_HOURS#1 (byte) tod_str::tod_HOURS#0
Identical Phi Values (byte) tod_str::tod_MIN#1 (byte) tod_str::tod_MIN#0
Identical Phi Values (byte) tod_str::tod_SEC#1 (byte) tod_str::tod_SEC#0
Identical Phi Values (byte) tod_str::tod_TENTHS#1 (byte) tod_str::tod_TENTHS#0
Identical Phi Values (byte) conio_cursor_x#35 (byte) conio_cursor_x#0
Identical Phi Values (byte) conio_cursor_y#35 (byte) conio_cursor_y#0
Identical Phi Values (byte*) conio_cursor_text#35 (byte*) conio_cursor_text#0
Identical Phi Values (byte*) conio_cursor_color#35 (byte*) conio_cursor_color#0
Identical Phi Values (byte) conio_textcolor#12 (byte) conio_textcolor#0
Identical Phi Values (byte) conio_textcolor#10 (byte) conio_textcolor#12
Identical Phi Values (byte) conio_cursor_x#10 (byte) conio_cursor_x#1
Identical Phi Values (byte) conio_cursor_y#21 (byte) conio_cursor_y#1
Identical Phi Values (byte*) conio_cursor_text#20 (byte*) conio_cursor_text#1
Identical Phi Values (byte*) conio_cursor_color#20 (byte*) conio_cursor_color#1
Identical Phi Values (byte) conio_cursor_x#11 (byte) conio_cursor_x#20
Identical Phi Values (byte) conio_cursor_y#10 (byte) conio_cursor_y#20
Identical Phi Values (byte*) conio_cursor_text#10 (byte*) conio_cursor_text#19
Identical Phi Values (byte*) conio_cursor_color#10 (byte*) conio_cursor_color#19
Identical Phi Values (byte) conio_cursor_x#13 (byte) conio_cursor_x#12
Identical Phi Values (byte) conio_cursor_y#12 (byte) conio_cursor_y#11
Identical Phi Values (byte*) conio_cursor_text#12 (byte*) conio_cursor_text#11
Identical Phi Values (byte*) conio_cursor_color#12 (byte*) conio_cursor_color#11
Successful SSA optimization Pass2IdenticalPhiElimination
Simple Condition (bool~) gotoxy::$1 [7] if((byte) gotoxy::x#4<(const nomodify byte) CONIO_WIDTH) goto gotoxy::@1
Simple Condition (bool~) gotoxy::$3 [10] if((byte) gotoxy::y#4<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@2
Simple Condition (bool~) cputc::$0 [24] if((byte) cputc::c#0==(byte) '
') goto cputc::@1
Simple Condition (bool~) cputc::$2 [35] if((byte) conio_cursor_x#4!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return
Simple Condition (bool~) cputc::$4 [39] if((byte) conio_cursor_y#27!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return
Simple Condition (bool~) cputs::$1 [52] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
Simple Condition (bool~) main::$5 [107] if((number) 0!=(number) 1) goto main::@2
Successful SSA optimization Pass2ConditionalJumpSimplification
Constant (const byte) conio_cursor_x#0 = 0
Constant (const byte) conio_cursor_y#0 = 0
Constant (const byte*) conio_cursor_text#0 = CONIO_SCREEN_TEXT
Constant (const byte*) conio_cursor_color#0 = CONIO_SCREEN_COLORS
Constant (const byte) conio_textcolor#0 = CONIO_TEXTCOLOR_DEFAULT
Constant (const byte) gotoxy::x#0 = 0
Constant (const byte) gotoxy::y#0 = 0
Constant (const byte) gotoxy::x#1 = 0
Constant (const byte) conio_cursor_x#27 = 0
Constant (const byte) gotoxy::x#2 = 0
Constant (const byte) gotoxy::y#2 = 0
Constant (const byte) cputs::c#0 = 0
Constant (const byte*) tod_str::return#0 = tod_buffer
Constant (const byte) gotoxy::x#3 = 0
Constant (const byte) gotoxy::y#3 = 0
Successful SSA optimization Pass2ConstantIdentification
Constant (const byte*) tod_str::return#2 = tod_str::return#0
Successful SSA optimization Pass2ConstantIdentification
Constant (const to_nomodify byte*) cputs::s#1 = tod_str::return#2
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [107] if((number) 0!=(number) 1) goto main::@2
Successful SSA optimization Pass2ConstantIfs
Simplifying expression containing zero tod_buffer in [75] *((const byte*) tod_buffer + (byte) 0) ← (byte~) tod_str::$1
Simplifying expression containing zero (byte*)&TOD_ZERO in [100] (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_TENTHS)
Successful SSA optimization PassNSimplifyExpressionWithZero
Eliminating unused variable (struct TIME_OF_DAY) tod_read::return#0 and assignment [45] (struct TIME_OF_DAY) tod_read::return#0 ← struct-unwound {(byte) tod_read::return_TENTHS#0, (byte) tod_read::return_SEC#0, (byte) tod_read::return_MIN#0, (byte) tod_read::return_HOURS#0}
Eliminating unused variable (struct TIME_OF_DAY) tod_read::return#1 and assignment [46] (struct TIME_OF_DAY) tod_read::return#1 ← struct-unwound {(byte) tod_read::return_TENTHS#0, (byte) tod_read::return_SEC#0, (byte) tod_read::return_MIN#0, (byte) tod_read::return_HOURS#0}
Eliminating unused variable - keeping the phi block (byte) conio_cursor_x#12
Eliminating unused variable - keeping the phi block (byte) conio_cursor_y#11
Eliminating unused variable - keeping the phi block (byte*) conio_cursor_text#11
Eliminating unused variable - keeping the phi block (byte*) conio_cursor_color#11
Eliminating unused constant (const byte) cputs::c#0
Eliminating unused constant (const byte) OFFSET_STRUCT_TIME_OF_DAY_TENTHS
Successful SSA optimization PassNEliminateUnusedVars
Eliminating unused constant (const byte) conio_cursor_x#0
Eliminating unused constant (const byte) conio_cursor_y#0
Eliminating unused constant (const byte*) conio_cursor_text#0
Eliminating unused constant (const byte*) conio_cursor_color#0
Successful SSA optimization PassNEliminateUnusedVars
Removing unused block main::@return
Successful SSA optimization Pass2EliminateUnusedBlocks
Rewriting multiplication to use shift and addition[8] (word~) gotoxy::$4 ← (word~) gotoxy::$8 * (const nomodify byte) CONIO_WIDTH
Inlining constant with var siblings (const byte) gotoxy::x#0
Inlining constant with var siblings (const byte) gotoxy::y#0
Inlining constant with var siblings (const byte) gotoxy::x#1
Inlining constant with var siblings (const byte) gotoxy::x#2
Inlining constant with var siblings (const byte) gotoxy::y#2
Inlining constant with var siblings (const byte) gotoxy::x#3
Inlining constant with var siblings (const byte) gotoxy::y#3
Inlining constant with var siblings (const to_nomodify byte*) cputs::s#1
Inlining constant with var siblings (const byte) conio_cursor_x#27
Constant inlined gotoxy::y#2 = (byte) 0
Constant inlined gotoxy::x#3 = (byte) 0
Constant inlined gotoxy::y#3 = (byte) 0
Constant inlined cputs::s#1 = (const byte*) tod_buffer
Constant inlined gotoxy::x#0 = (byte) 0
Constant inlined gotoxy::y#0 = (byte) 0
Constant inlined gotoxy::x#1 = (byte) 0
Constant inlined conio_textcolor#0 = (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
Constant inlined gotoxy::x#2 = (byte) 0
Constant inlined conio_cursor_x#27 = (byte) 0
Constant inlined tod_str::return#2 = (const byte*) tod_buffer
Constant inlined tod_str::return#0 = (const byte*) tod_buffer
Successful SSA optimization Pass2ConstantInlining
Consolidated array index constant in *(tod_buffer+1)
Consolidated array index constant in *(tod_buffer+3)
Consolidated array index constant in *(tod_buffer+4)
Consolidated array index constant in *(tod_buffer+6)
Consolidated array index constant in *(tod_buffer+7)
Consolidated array index constant in *(tod_buffer+9)
Consolidated array index constant in *(tod_buffer+$a)
Successful SSA optimization Pass2ConstantAdditionElimination
Alias gotoxy::$4 = gotoxy::$11 
Successful SSA optimization Pass2AliasElimination
Identical Phi Values (byte) gotoxy::x#4 (byte) 0
Successful SSA optimization Pass2IdenticalPhiElimination
Identical Phi Values (byte) gotoxy::x#5 (byte) 0
Successful SSA optimization Pass2IdenticalPhiElimination
Constant (const byte) conio_cursor_x#1 = 0
Successful SSA optimization Pass2ConstantIdentification
if() condition always true - replacing block destination [1] if((byte) 0<(const nomodify byte) CONIO_WIDTH) goto gotoxy::@1
Successful SSA optimization Pass2ConstantIfs
Simplifying expression containing zero gotoxy::$4 in [11] (word) gotoxy::offset#0 ← (word~) gotoxy::$4 + (byte) 0
Successful SSA optimization PassNSimplifyExpressionWithZero
Removing unused block gotoxy::@3
Successful SSA optimization Pass2EliminateUnusedBlocks
Inlining constant with var siblings (const byte) conio_cursor_x#1
Constant inlined conio_cursor_x#1 = (byte) 0
Successful SSA optimization Pass2ConstantInlining
Alias gotoxy::offset#0 = gotoxy::$4 
Successful SSA optimization Pass2AliasElimination
Added new block during phi lifting gotoxy::@5(between gotoxy::@1 and gotoxy::@2)
Added new block during phi lifting cputc::@7(between cputc::@2 and cputc::@return)
Added new block during phi lifting cputc::@8(between cputc::@3 and cputc::@return)
Fixing phi predecessor for conio_cursor_x#18 to new block ( cputc::@3 -> cputc::@8 ) during phi lifting.
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @1
Adding NOP phi() at start of @2
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of main::@6
Adding NOP phi() at start of main::@7
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of gotoxy::@4
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to tod_init:9 gotoxy:13 tod_read:15 tod_str:24 cputs:26 
Calls in [cputs] to cputc:37 
Calls in [cputc] to gotoxy:53 gotoxy:68 

Created 11 initial phi equivalence classes
Coalesced [28] conio_cursor_y#42 ← conio_cursor_y#1
Coalesced [29] conio_cursor_text#42 ← conio_cursor_text#1
Coalesced [30] conio_cursor_color#42 ← conio_cursor_color#1
Coalesced [38] cputs::s#6 ← cputs::s#0
Coalesced [39] conio_cursor_x#39 ← conio_cursor_x#18
Coalesced [40] conio_cursor_y#43 ← conio_cursor_y#18
Coalesced [41] conio_cursor_text#43 ← conio_cursor_text#17
Coalesced [42] conio_cursor_color#43 ← conio_cursor_color#17
Coalesced (already) [54] conio_cursor_y#41 ← conio_cursor_y#1
Coalesced (already) [55] conio_cursor_text#41 ← conio_cursor_text#1
Coalesced (already) [56] conio_cursor_color#41 ← conio_cursor_color#1
Coalesced [59] conio_cursor_y#39 ← conio_cursor_y#27
Coalesced [60] conio_cursor_text#39 ← conio_cursor_text#26
Coalesced [61] conio_cursor_color#39 ← conio_cursor_color#26
Coalesced [62] conio_cursor_x#38 ← conio_cursor_x#4
Coalesced (already) [63] conio_cursor_y#38 ← conio_cursor_y#20
Coalesced (already) [64] conio_cursor_text#38 ← conio_cursor_text#26
Coalesced (already) [65] conio_cursor_color#38 ← conio_cursor_color#26
Coalesced [67] gotoxy::y#8 ← gotoxy::y#1
Coalesced (already) [69] conio_cursor_y#40 ← conio_cursor_y#1
Coalesced (already) [70] conio_cursor_text#40 ← conio_cursor_text#1
Coalesced (already) [71] conio_cursor_color#40 ← conio_cursor_color#1
Not coalescing [76] conio_cursor_y#1 ← gotoxy::y#5
Coalesced [84] gotoxy::y#9 ← gotoxy::y#4
Coalesced down to 6 phi equivalence classes
Culled Empty Block (label) @2
Culled Empty Block (label) main::@3
Culled Empty Block (label) main::@1
Culled Empty Block (label) main::@7
Culled Empty Block (label) cputs::@3
Culled Empty Block (label) cputc::@6
Culled Empty Block (label) cputc::@8
Culled Empty Block (label) cputc::@7
Culled Empty Block (label) cputc::@5
Culled Empty Block (label) gotoxy::@4
Renumbering block gotoxy::@5 to gotoxy::@3
Renumbering block main::@2 to main::@1
Renumbering block main::@4 to main::@2
Renumbering block main::@5 to main::@3
Renumbering block main::@6 to main::@4
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @1
Adding NOP phi() at start of @end
Adding NOP phi() at start of main::@1
Adding NOP phi() at start of main::@2
Adding NOP phi() at start of main::@4
Adding NOP phi() at start of cputs
Adding NOP phi() at start of cputc::@4
Adding NOP phi() at start of gotoxy::@3

FINAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO)
  [5] (byte) tod_init::tod_SEC#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC)
  [6] (byte) tod_init::tod_MIN#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN)
  [7] (byte) tod_init::tod_HOURS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS)
  [8] call tod_init 
  to:main::@1
main::@1: scope:[main]  from main main::@4
  [9] phi()
  [10] call gotoxy 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [11] phi()
  [12] call tod_read 
  [13] (byte) tod_read::return_TENTHS#2 ← (byte) tod_read::return_TENTHS#0
  [14] (byte) tod_read::return_SEC#2 ← (byte) tod_read::return_SEC#0
  [15] (byte) tod_read::return_MIN#2 ← (byte) tod_read::return_MIN#0
  [16] (byte) tod_read::return_HOURS#2 ← (byte) tod_read::return_HOURS#0
  to:main::@3
main::@3: scope:[main]  from main::@2
  [17] (byte) tod_str::tod_TENTHS#0 ← (byte) tod_read::return_TENTHS#2
  [18] (byte) tod_str::tod_SEC#0 ← (byte) tod_read::return_SEC#2
  [19] (byte) tod_str::tod_MIN#0 ← (byte) tod_read::return_MIN#2
  [20] (byte) tod_str::tod_HOURS#0 ← (byte) tod_read::return_HOURS#2
  [21] call tod_str 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [22] phi()
  [23] call cputs 
  to:main::@1

(void()) cputs((to_nomodify byte*) cputs::s)
cputs: scope:[cputs]  from main::@4
  [24] phi()
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [25] (byte*) conio_cursor_color#19 ← phi( cputs/(byte*) conio_cursor_color#1 cputs::@2/(byte*) conio_cursor_color#17 )
  [25] (byte*) conio_cursor_text#19 ← phi( cputs/(byte*) conio_cursor_text#1 cputs::@2/(byte*) conio_cursor_text#17 )
  [25] (byte) conio_cursor_y#20 ← phi( cputs/(byte) conio_cursor_y#1 cputs::@2/(byte) conio_cursor_y#18 )
  [25] (byte) conio_cursor_x#20 ← phi( cputs/(byte) 0 cputs::@2/(byte) conio_cursor_x#18 )
  [25] (to_nomodify byte*) cputs::s#2 ← phi( cputs/(const byte*) tod_buffer cputs::@2/(to_nomodify byte*) cputs::s#0 )
  [26] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2)
  [27] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2
  [28] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [29] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [30] (byte) cputc::c#0 ← (byte) cputs::c#1
  [31] call cputc 
  to:cputs::@1

(void()) cputc((byte) cputc::c)
cputc: scope:[cputc]  from cputs::@2
  [32] if((byte) cputc::c#0==(byte) '
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [33] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0
  [34] (byte*) conio_cursor_text#26 ← ++ (byte*) conio_cursor_text#19
  [35] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT
  [36] (byte*) conio_cursor_color#26 ← ++ (byte*) conio_cursor_color#19
  [37] (byte) conio_cursor_x#4 ← ++ (byte) conio_cursor_x#20
  [38] if((byte) conio_cursor_x#4!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [39] (byte) conio_cursor_y#27 ← ++ (byte) conio_cursor_y#20
  [40] if((byte) conio_cursor_y#27!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return
  to:cputc::@4
cputc::@4: scope:[cputc]  from cputc::@3
  [41] phi()
  [42] call gotoxy 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3 cputc::@4
  [43] (byte*) conio_cursor_color#17 ← phi( cputc::@2/(byte*) conio_cursor_color#26 cputc::@3/(byte*) conio_cursor_color#26 cputc::@1/(byte*) conio_cursor_color#1 cputc::@4/(byte*) conio_cursor_color#1 )
  [43] (byte*) conio_cursor_text#17 ← phi( cputc::@2/(byte*) conio_cursor_text#26 cputc::@3/(byte*) conio_cursor_text#26 cputc::@1/(byte*) conio_cursor_text#1 cputc::@4/(byte*) conio_cursor_text#1 )
  [43] (byte) conio_cursor_y#18 ← phi( cputc::@2/(byte) conio_cursor_y#20 cputc::@3/(byte) conio_cursor_y#27 cputc::@1/(byte) conio_cursor_y#1 cputc::@4/(byte) conio_cursor_y#1 )
  [43] (byte) conio_cursor_x#18 ← phi( cputc::@2/(byte) conio_cursor_x#4 cputc::@3/(byte) 0 cputc::@1/(byte) 0 cputc::@4/(byte) 0 )
  [44] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [45] (byte) gotoxy::y#1 ← (byte) conio_cursor_y#20 + (byte) 1
  [46] call gotoxy 
  to:cputc::@return

(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
gotoxy: scope:[gotoxy]  from cputc::@1 cputc::@4 main::@1
  [47] (byte) gotoxy::y#4 ← phi( cputc::@1/(byte) gotoxy::y#1 cputc::@4/(byte) 0 main::@1/(byte) 0 )
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy
  [48] if((byte) gotoxy::y#4<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@3
  to:gotoxy::@2
gotoxy::@3: scope:[gotoxy]  from gotoxy::@1
  [49] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@3
  [50] (byte) gotoxy::y#5 ← phi( gotoxy::@3/(byte) gotoxy::y#4 gotoxy::@1/(byte) 0 )
  [51] (byte) conio_cursor_y#1 ← (byte) gotoxy::y#5
  [52] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5
  [53] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2
  [54] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8
  [55] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3
  [56] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0
  [57] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [58] return 
  to:@return

(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
tod_str: scope:[tod_str]  from main::@3
  [59] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4
  [60] (byte~) tod_str::$1 ← (byte) '0' + (byte~) tod_str::$0
  [61] *((const byte*) tod_buffer) ← (byte~) tod_str::$1
  [62] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f
  [63] (byte~) tod_str::$3 ← (byte) '0' + (byte~) tod_str::$2
  [64] *((const byte*) tod_buffer+(byte) 1) ← (byte~) tod_str::$3
  [65] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4
  [66] (byte~) tod_str::$5 ← (byte) '0' + (byte~) tod_str::$4
  [67] *((const byte*) tod_buffer+(byte) 3) ← (byte~) tod_str::$5
  [68] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f
  [69] (byte~) tod_str::$7 ← (byte) '0' + (byte~) tod_str::$6
  [70] *((const byte*) tod_buffer+(byte) 4) ← (byte~) tod_str::$7
  [71] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4
  [72] (byte~) tod_str::$9 ← (byte) '0' + (byte~) tod_str::$8
  [73] *((const byte*) tod_buffer+(byte) 6) ← (byte~) tod_str::$9
  [74] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f
  [75] (byte~) tod_str::$11 ← (byte) '0' + (byte~) tod_str::$10
  [76] *((const byte*) tod_buffer+(byte) 7) ← (byte~) tod_str::$11
  [77] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4
  [78] (byte~) tod_str::$13 ← (byte) '0' + (byte~) tod_str::$12
  [79] *((const byte*) tod_buffer+(byte) 9) ← (byte~) tod_str::$13
  [80] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f
  [81] (byte~) tod_str::$15 ← (byte) '0' + (byte~) tod_str::$14
  [82] *((const byte*) tod_buffer+(byte) $a) ← (byte~) tod_str::$15
  to:tod_str::@return
tod_str::@return: scope:[tod_str]  from tod_str
  [83] return 
  to:@return

(struct TIME_OF_DAY()) tod_read()
tod_read: scope:[tod_read]  from main::@2
  [84] (byte) tod_read::return_HOURS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS)
  [85] (byte) tod_read::return_MIN#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN)
  [86] (byte) tod_read::return_SEC#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC)
  [87] (byte) tod_read::return_TENTHS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS)
  to:tod_read::@return
tod_read::@return: scope:[tod_read]  from tod_read
  [88] return 
  to:@return

(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
tod_init: scope:[tod_init]  from main
  [89] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80
  [90] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f
  [91] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) ← (byte) tod_init::tod_HOURS#0
  [92] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) ← (byte) tod_init::tod_MIN#0
  [93] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) ← (byte) tod_init::tod_SEC#0
  [94] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) ← (byte) tod_init::tod_TENTHS#0
  to:tod_init::@return
tod_init::@return: scope:[tod_init]  from tod_init
  [95] return 
  to:@return

null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc
null depth in calling loop Loop head: cputs::@1 tails: cputs::@2 blocks: cputs::@2 cputs::@1  in scope cputc

VARIABLE REGISTER WEIGHTS
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) TIME_OF_DAY::HOURS
(byte) TIME_OF_DAY::MIN
(byte) TIME_OF_DAY::SEC
(byte) TIME_OF_DAY::TENTHS
(struct TIME_OF_DAY) TOD_ZERO loadstore = { TENTHS: (byte) 0, SEC: (byte) 0, MIN: (byte) 0, HOURS: (byte) 0 }
(byte*) conio_cursor_color
(byte*) conio_cursor_color#1 666722.4444444445
(byte*) conio_cursor_color#17 1366668.3333333335
(byte*) conio_cursor_color#19 233444.88888888888
(byte*) conio_cursor_color#26 600000.6000000001
(byte*) conio_cursor_text
(byte*) conio_cursor_text#1 631631.7894736842
(byte*) conio_cursor_text#17 1366668.3333333335
(byte*) conio_cursor_text#19 300143.4285714285
(byte*) conio_cursor_text#26 428571.85714285716
(byte) conio_cursor_x
(byte) conio_cursor_x#18 366667.3333333334
(byte) conio_cursor_x#20 110000.20000000001
(byte) conio_cursor_x#4 1500001.5
(byte) conio_cursor_y
(byte) conio_cursor_y#1 500041.8333333333
(byte) conio_cursor_y#18 1366668.3333333335
(byte) conio_cursor_y#20 258417.08333333337
(byte) conio_cursor_y#27 1500001.5
(byte) conio_textcolor
(void()) cputc((byte) cputc::c)
(byte) cputc::c
(byte) cputc::c#0 1050001.5
(void()) cputs((to_nomodify byte*) cputs::s)
(byte) cputs::c
(byte) cputs::c#1 100001.0
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 50000.5
(to_nomodify byte*) cputs::s#2 150001.5
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(word~) gotoxy::$10 2.0000002E7
(word~) gotoxy::$8 1.50000015E7
(word~) gotoxy::$9 2.0000002E7
(word) gotoxy::offset
(word) gotoxy::offset#0 1.50000015E7
(byte) gotoxy::x
(byte) gotoxy::y
(byte) gotoxy::y#1 2000002.0
(byte) gotoxy::y#4 7000001.0
(byte) gotoxy::y#5 1.0000001E7
(void()) main()
(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
(struct TIME_OF_DAY) tod_init::tod
(byte) tod_init::tod_HOURS
(byte) tod_init::tod_HOURS#0 37.33333333333333
(byte) tod_init::tod_MIN
(byte) tod_init::tod_MIN#0 22.4
(byte) tod_init::tod_SEC
(byte) tod_init::tod_SEC#0 16.0
(byte) tod_init::tod_TENTHS
(byte) tod_init::tod_TENTHS#0 12.444444444444443
(struct TIME_OF_DAY()) tod_read()
(byte) tod_read::hours
(byte) tod_read::mins
(struct TIME_OF_DAY) tod_read::return
(byte) tod_read::return_HOURS
(byte) tod_read::return_HOURS#0 122.44444444444446
(byte) tod_read::return_HOURS#2 50.5
(byte) tod_read::return_MIN
(byte) tod_read::return_MIN#0 157.42857142857142
(byte) tod_read::return_MIN#2 50.5
(byte) tod_read::return_SEC
(byte) tod_read::return_SEC#0 220.39999999999998
(byte) tod_read::return_SEC#2 50.5
(byte) tod_read::return_TENTHS
(byte) tod_read::return_TENTHS#0 367.33333333333337
(byte) tod_read::return_TENTHS#2 50.5
(byte) tod_read::secs
(byte) tod_read::tenths
(byte) tod_read::tod_HOURS
(byte) tod_read::tod_MIN
(byte) tod_read::tod_SEC
(byte) tod_read::tod_TENTHS
(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
(byte~) tod_str::$0 2002.0
(byte~) tod_str::$1 2002.0
(byte~) tod_str::$10 2002.0
(byte~) tod_str::$11 2002.0
(byte~) tod_str::$12 2002.0
(byte~) tod_str::$13 2002.0
(byte~) tod_str::$14 2002.0
(byte~) tod_str::$15 2002.0
(byte~) tod_str::$2 2002.0
(byte~) tod_str::$3 2002.0
(byte~) tod_str::$4 2002.0
(byte~) tod_str::$5 2002.0
(byte~) tod_str::$6 2002.0
(byte~) tod_str::$7 2002.0
(byte~) tod_str::$8 2002.0
(byte~) tod_str::$9 2002.0
(byte*) tod_str::return
(struct TIME_OF_DAY) tod_str::tod
(byte) tod_str::tod_HOURS
(byte) tod_str::tod_HOURS#0 525.75
(byte) tod_str::tod_MIN
(byte) tod_str::tod_MIN#0 191.1818181818182
(byte) tod_str::tod_SEC
(byte) tod_str::tod_SEC#0 116.83333333333334
(byte) tod_str::tod_TENTHS
(byte) tod_str::tod_TENTHS#0 84.12

Initial phi equivalence classes
[ cputs::s#2 cputs::s#0 ]
[ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ]
[ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
[ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ]
[ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ]
[ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ]
Added variable tod_init::tod_TENTHS#0 to live range equivalence class [ tod_init::tod_TENTHS#0 ]
Added variable tod_init::tod_SEC#0 to live range equivalence class [ tod_init::tod_SEC#0 ]
Added variable tod_init::tod_MIN#0 to live range equivalence class [ tod_init::tod_MIN#0 ]
Added variable tod_init::tod_HOURS#0 to live range equivalence class [ tod_init::tod_HOURS#0 ]
Added variable tod_read::return_TENTHS#2 to live range equivalence class [ tod_read::return_TENTHS#2 ]
Added variable tod_read::return_SEC#2 to live range equivalence class [ tod_read::return_SEC#2 ]
Added variable tod_read::return_MIN#2 to live range equivalence class [ tod_read::return_MIN#2 ]
Added variable tod_read::return_HOURS#2 to live range equivalence class [ tod_read::return_HOURS#2 ]
Added variable tod_str::tod_TENTHS#0 to live range equivalence class [ tod_str::tod_TENTHS#0 ]
Added variable tod_str::tod_SEC#0 to live range equivalence class [ tod_str::tod_SEC#0 ]
Added variable tod_str::tod_MIN#0 to live range equivalence class [ tod_str::tod_MIN#0 ]
Added variable tod_str::tod_HOURS#0 to live range equivalence class [ tod_str::tod_HOURS#0 ]
Added variable cputs::c#1 to live range equivalence class [ cputs::c#1 ]
Added variable cputc::c#0 to live range equivalence class [ cputc::c#0 ]
Added variable gotoxy::$8 to live range equivalence class [ gotoxy::$8 ]
Added variable gotoxy::$9 to live range equivalence class [ gotoxy::$9 ]
Added variable gotoxy::$10 to live range equivalence class [ gotoxy::$10 ]
Added variable gotoxy::offset#0 to live range equivalence class [ gotoxy::offset#0 ]
Added variable tod_str::$0 to live range equivalence class [ tod_str::$0 ]
Added variable tod_str::$1 to live range equivalence class [ tod_str::$1 ]
Added variable tod_str::$2 to live range equivalence class [ tod_str::$2 ]
Added variable tod_str::$3 to live range equivalence class [ tod_str::$3 ]
Added variable tod_str::$4 to live range equivalence class [ tod_str::$4 ]
Added variable tod_str::$5 to live range equivalence class [ tod_str::$5 ]
Added variable tod_str::$6 to live range equivalence class [ tod_str::$6 ]
Added variable tod_str::$7 to live range equivalence class [ tod_str::$7 ]
Added variable tod_str::$8 to live range equivalence class [ tod_str::$8 ]
Added variable tod_str::$9 to live range equivalence class [ tod_str::$9 ]
Added variable tod_str::$10 to live range equivalence class [ tod_str::$10 ]
Added variable tod_str::$11 to live range equivalence class [ tod_str::$11 ]
Added variable tod_str::$12 to live range equivalence class [ tod_str::$12 ]
Added variable tod_str::$13 to live range equivalence class [ tod_str::$13 ]
Added variable tod_str::$14 to live range equivalence class [ tod_str::$14 ]
Added variable tod_str::$15 to live range equivalence class [ tod_str::$15 ]
Added variable tod_read::return_HOURS#0 to live range equivalence class [ tod_read::return_HOURS#0 ]
Added variable tod_read::return_MIN#0 to live range equivalence class [ tod_read::return_MIN#0 ]
Added variable tod_read::return_SEC#0 to live range equivalence class [ tod_read::return_SEC#0 ]
Added variable tod_read::return_TENTHS#0 to live range equivalence class [ tod_read::return_TENTHS#0 ]
Added variable TOD_ZERO to live range equivalence class [ TOD_ZERO ]
Complete equivalence classes
[ cputs::s#2 cputs::s#0 ]
[ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ]
[ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
[ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ]
[ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ]
[ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ]
[ tod_init::tod_TENTHS#0 ]
[ tod_init::tod_SEC#0 ]
[ tod_init::tod_MIN#0 ]
[ tod_init::tod_HOURS#0 ]
[ tod_read::return_TENTHS#2 ]
[ tod_read::return_SEC#2 ]
[ tod_read::return_MIN#2 ]
[ tod_read::return_HOURS#2 ]
[ tod_str::tod_TENTHS#0 ]
[ tod_str::tod_SEC#0 ]
[ tod_str::tod_MIN#0 ]
[ tod_str::tod_HOURS#0 ]
[ cputs::c#1 ]
[ cputc::c#0 ]
[ gotoxy::$8 ]
[ gotoxy::$9 ]
[ gotoxy::$10 ]
[ gotoxy::offset#0 ]
[ tod_str::$0 ]
[ tod_str::$1 ]
[ tod_str::$2 ]
[ tod_str::$3 ]
[ tod_str::$4 ]
[ tod_str::$5 ]
[ tod_str::$6 ]
[ tod_str::$7 ]
[ tod_str::$8 ]
[ tod_str::$9 ]
[ tod_str::$10 ]
[ tod_str::$11 ]
[ tod_str::$12 ]
[ tod_str::$13 ]
[ tod_str::$14 ]
[ tod_str::$15 ]
[ tod_read::return_HOURS#0 ]
[ tod_read::return_MIN#0 ]
[ tod_read::return_SEC#0 ]
[ tod_read::return_TENTHS#0 ]
[ TOD_ZERO ]
Allocated zp[2]:2 [ cputs::s#2 cputs::s#0 ]
Allocated zp[1]:4 [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ]
Allocated zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
Allocated zp[2]:6 [ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ]
Allocated zp[2]:8 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ]
Allocated zp[1]:10 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ]
Allocated zp[1]:11 [ tod_init::tod_TENTHS#0 ]
Allocated zp[1]:12 [ tod_init::tod_SEC#0 ]
Allocated zp[1]:13 [ tod_init::tod_MIN#0 ]
Allocated zp[1]:14 [ tod_init::tod_HOURS#0 ]
Allocated zp[1]:15 [ tod_read::return_TENTHS#2 ]
Allocated zp[1]:16 [ tod_read::return_SEC#2 ]
Allocated zp[1]:17 [ tod_read::return_MIN#2 ]
Allocated zp[1]:18 [ tod_read::return_HOURS#2 ]
Allocated zp[1]:19 [ tod_str::tod_TENTHS#0 ]
Allocated zp[1]:20 [ tod_str::tod_SEC#0 ]
Allocated zp[1]:21 [ tod_str::tod_MIN#0 ]
Allocated zp[1]:22 [ tod_str::tod_HOURS#0 ]
Allocated zp[1]:23 [ cputs::c#1 ]
Allocated zp[1]:24 [ cputc::c#0 ]
Allocated zp[2]:25 [ gotoxy::$8 ]
Allocated zp[2]:27 [ gotoxy::$9 ]
Allocated zp[2]:29 [ gotoxy::$10 ]
Allocated zp[2]:31 [ gotoxy::offset#0 ]
Allocated zp[1]:33 [ tod_str::$0 ]
Allocated zp[1]:34 [ tod_str::$1 ]
Allocated zp[1]:35 [ tod_str::$2 ]
Allocated zp[1]:36 [ tod_str::$3 ]
Allocated zp[1]:37 [ tod_str::$4 ]
Allocated zp[1]:38 [ tod_str::$5 ]
Allocated zp[1]:39 [ tod_str::$6 ]
Allocated zp[1]:40 [ tod_str::$7 ]
Allocated zp[1]:41 [ tod_str::$8 ]
Allocated zp[1]:42 [ tod_str::$9 ]
Allocated zp[1]:43 [ tod_str::$10 ]
Allocated zp[1]:44 [ tod_str::$11 ]
Allocated zp[1]:45 [ tod_str::$12 ]
Allocated zp[1]:46 [ tod_str::$13 ]
Allocated zp[1]:47 [ tod_str::$14 ]
Allocated zp[1]:48 [ tod_str::$15 ]
Allocated zp[1]:49 [ tod_read::return_HOURS#0 ]
Allocated zp[1]:50 [ tod_read::return_MIN#0 ]
Allocated zp[1]:51 [ tod_read::return_SEC#0 ]
Allocated zp[1]:52 [ tod_read::return_TENTHS#0 ]
Allocated mem[4] [ TOD_ZERO ]

INITIAL ASM
Target platform is c64basic / MOS6502X
  // File Comments
// Time of Day / RTOS test using the 6526 CIA on C64
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__bbegin)
.pc = $80d "Program"
  // Global Constants & labels
  // The text screen address
  .label CONIO_SCREEN_TEXT = $400
  // The color screen address
  .label CONIO_SCREEN_COLORS = $d800
  // The screen width
  .const CONIO_WIDTH = $28
  // The screen height
  .const CONIO_HEIGHT = $19
  // The default text color
  .const CONIO_TEXTCOLOR_DEFAULT = $e
  // The CIA#1: keyboard matrix, joystick #1/#2
  .label CIA1 = $dc00
  .const OFFSET_STRUCT_TIME_OF_DAY_SEC = 1
  .const OFFSET_STRUCT_TIME_OF_DAY_MIN = 2
  .const OFFSET_STRUCT_TIME_OF_DAY_HOURS = 3
  .const OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
  .const OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = $b
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = $a
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = 9
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = 8
  // The current cursor y-position
  .label conio_cursor_y = 5
  // The current cursor address
  .label conio_cursor_text = 6
  // The current cursor address
  .label conio_cursor_color = 8
  // The current cursor x-position
  .label conio_cursor_x = 4
  // @begin
__bbegin:
  // [1] phi from @begin to @1 [phi:@begin->@1]
__b1_from___bbegin:
  jmp __b1
  // @1
__b1:
  // [2] call main 
  jsr main
  // [3] phi from @1 to @end [phi:@1->@end]
__bend_from___b1:
  jmp __bend
  // @end
__bend:
  // main
main: {
    // [4] (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO
    sta.z tod_init.tod_TENTHS
    // [5] (byte) tod_init::tod_SEC#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_SEC
    sta.z tod_init.tod_SEC
    // [6] (byte) tod_init::tod_MIN#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_MIN
    sta.z tod_init.tod_MIN
    // [7] (byte) tod_init::tod_HOURS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_HOURS
    sta.z tod_init.tod_HOURS
    // [8] call tod_init 
    jsr tod_init
    // [9] phi from main main::@4 to main::@1 [phi:main/main::@4->main::@1]
  __b1_from_main:
  __b1_from___b4:
    jmp __b1
    // main::@1
  __b1:
    // [10] call gotoxy 
    // [47] phi from main::@1 to gotoxy [phi:main::@1->gotoxy]
  gotoxy_from___b1:
    // [47] phi (byte) gotoxy::y#4 = (byte) 0 [phi:main::@1->gotoxy#0] -- vbuz1=vbuc1 
    lda #0
    sta.z gotoxy.y
    jsr gotoxy
    // [11] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [12] call tod_read 
    jsr tod_read
    // [13] (byte) tod_read::return_TENTHS#2 ← (byte) tod_read::return_TENTHS#0 -- vbuz1=vbuz2 
    lda.z tod_read.return_TENTHS
    sta.z tod_read.return_TENTHS_1
    // [14] (byte) tod_read::return_SEC#2 ← (byte) tod_read::return_SEC#0 -- vbuz1=vbuz2 
    lda.z tod_read.return_SEC
    sta.z tod_read.return_SEC_1
    // [15] (byte) tod_read::return_MIN#2 ← (byte) tod_read::return_MIN#0 -- vbuz1=vbuz2 
    lda.z tod_read.return_MIN
    sta.z tod_read.return_MIN_1
    // [16] (byte) tod_read::return_HOURS#2 ← (byte) tod_read::return_HOURS#0 -- vbuz1=vbuz2 
    lda.z tod_read.return_HOURS
    sta.z tod_read.return_HOURS_1
    jmp __b3
    // main::@3
  __b3:
    // [17] (byte) tod_str::tod_TENTHS#0 ← (byte) tod_read::return_TENTHS#2 -- vbuz1=vbuz2 
    lda.z tod_read.return_TENTHS_1
    sta.z tod_str.tod_TENTHS
    // [18] (byte) tod_str::tod_SEC#0 ← (byte) tod_read::return_SEC#2 -- vbuz1=vbuz2 
    lda.z tod_read.return_SEC_1
    sta.z tod_str.tod_SEC
    // [19] (byte) tod_str::tod_MIN#0 ← (byte) tod_read::return_MIN#2 -- vbuz1=vbuz2 
    lda.z tod_read.return_MIN_1
    sta.z tod_str.tod_MIN
    // [20] (byte) tod_str::tod_HOURS#0 ← (byte) tod_read::return_HOURS#2 -- vbuz1=vbuz2 
    lda.z tod_read.return_HOURS_1
    sta.z tod_str.tod_HOURS
    // [21] call tod_str 
    jsr tod_str
    // [22] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [23] call cputs 
    // [24] phi from main::@4 to cputs [phi:main::@4->cputs]
  cputs_from___b4:
    jsr cputs
    jmp __b1_from___b4
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp(2) s)
cputs: {
    .label c = $17
    .label s = 2
    // [25] phi from cputs to cputs::@1 [phi:cputs->cputs::@1]
  __b1_from_cputs:
    // [25] phi (byte*) conio_cursor_color#19 = (byte*) conio_cursor_color#1 [phi:cputs->cputs::@1#0] -- register_copy 
    // [25] phi (byte*) conio_cursor_text#19 = (byte*) conio_cursor_text#1 [phi:cputs->cputs::@1#1] -- register_copy 
    // [25] phi (byte) conio_cursor_y#20 = (byte) conio_cursor_y#1 [phi:cputs->cputs::@1#2] -- register_copy 
    // [25] phi (byte) conio_cursor_x#20 = (byte) 0 [phi:cputs->cputs::@1#3] -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    // [25] phi (to_nomodify byte*) cputs::s#2 = (const byte*) tod_buffer [phi:cputs->cputs::@1#4] -- pbuz1=pbuc1 
    lda #<tod_buffer
    sta.z s
    lda #>tod_buffer
    sta.z s+1
    jmp __b1
    // cputs::@1
  __b1:
    // [26] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuz1=_deref_pbuz2 
    ldy #0
    lda (s),y
    sta.z c
    // [27] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [28] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuz1_then_la1 
    lda #0
    cmp.z c
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [29] return 
    rts
    // cputs::@2
  __b2:
    // [30] (byte) cputc::c#0 ← (byte) cputs::c#1 -- vbuz1=vbuz2 
    lda.z c
    sta.z cputc.c
    // [31] call cputc 
    jsr cputc
    // [25] phi from cputs::@2 to cputs::@1 [phi:cputs::@2->cputs::@1]
  __b1_from___b2:
    // [25] phi (byte*) conio_cursor_color#19 = (byte*) conio_cursor_color#17 [phi:cputs::@2->cputs::@1#0] -- register_copy 
    // [25] phi (byte*) conio_cursor_text#19 = (byte*) conio_cursor_text#17 [phi:cputs::@2->cputs::@1#1] -- register_copy 
    // [25] phi (byte) conio_cursor_y#20 = (byte) conio_cursor_y#18 [phi:cputs::@2->cputs::@1#2] -- register_copy 
    // [25] phi (byte) conio_cursor_x#20 = (byte) conio_cursor_x#18 [phi:cputs::@2->cputs::@1#3] -- register_copy 
    // [25] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#0 [phi:cputs::@2->cputs::@1#4] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward
// cputc(byte zp($18) c)
cputc: {
    .label c = $18
    // [32] if((byte) cputc::c#0==(byte) ' ') goto cputc::@1 -- vbuz1_eq_vbuc1_then_la1 
    lda #'\n'
    cmp.z c
    beq __b1
    jmp __b2
    // cputc::@2
  __b2:
    // [33] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0 -- _deref_pbuz1=vbuz2 
    lda.z c
    ldy #0
    sta (conio_cursor_text),y
    // [34] (byte*) conio_cursor_text#26 ← ++ (byte*) conio_cursor_text#19 -- pbuz1=_inc_pbuz1 
    inc.z conio_cursor_text
    bne !+
    inc.z conio_cursor_text+1
  !:
    // [35] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT -- _deref_pbuz1=vbuc1 
    lda #CONIO_TEXTCOLOR_DEFAULT
    ldy #0
    sta (conio_cursor_color),y
    // [36] (byte*) conio_cursor_color#26 ← ++ (byte*) conio_cursor_color#19 -- pbuz1=_inc_pbuz1 
    inc.z conio_cursor_color
    bne !+
    inc.z conio_cursor_color+1
  !:
    // [37] (byte) conio_cursor_x#4 ← ++ (byte) conio_cursor_x#20 -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_x
    // [38] if((byte) conio_cursor_x#4!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #CONIO_WIDTH
    cmp.z conio_cursor_x
    bne __breturn_from___b2
    jmp __b3
    // cputc::@3
  __b3:
    // [39] (byte) conio_cursor_y#27 ← ++ (byte) conio_cursor_y#20 -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [40] if((byte) conio_cursor_y#27!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #CONIO_HEIGHT
    cmp.z conio_cursor_y
    bne __breturn_from___b3
    // [41] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
  __b4_from___b3:
    jmp __b4
    // cputc::@4
  __b4:
    // [42] call gotoxy 
    // [47] phi from cputc::@4 to gotoxy [phi:cputc::@4->gotoxy]
  gotoxy_from___b4:
    // [47] phi (byte) gotoxy::y#4 = (byte) 0 [phi:cputc::@4->gotoxy#0] -- vbuz1=vbuc1 
    lda #0
    sta.z gotoxy.y
    jsr gotoxy
    // [43] phi from cputc::@1 cputc::@3 cputc::@4 to cputc::@return [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return]
  __breturn_from___b1:
  __breturn_from___b3:
  __breturn_from___b4:
    // [43] phi (byte*) conio_cursor_color#17 = (byte*) conio_cursor_color#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#0] -- register_copy 
    // [43] phi (byte*) conio_cursor_text#17 = (byte*) conio_cursor_text#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#1] -- register_copy 
    // [43] phi (byte) conio_cursor_y#18 = (byte) conio_cursor_y#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#2] -- register_copy 
    // [43] phi (byte) conio_cursor_x#18 = (byte) 0 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#3] -- vbuz1=vbuc1 
    lda #0
    sta.z conio_cursor_x
    jmp __breturn
    // [43] phi from cputc::@2 to cputc::@return [phi:cputc::@2->cputc::@return]
  __breturn_from___b2:
    // [43] phi (byte*) conio_cursor_color#17 = (byte*) conio_cursor_color#26 [phi:cputc::@2->cputc::@return#0] -- register_copy 
    // [43] phi (byte*) conio_cursor_text#17 = (byte*) conio_cursor_text#26 [phi:cputc::@2->cputc::@return#1] -- register_copy 
    // [43] phi (byte) conio_cursor_y#18 = (byte) conio_cursor_y#20 [phi:cputc::@2->cputc::@return#2] -- register_copy 
    // [43] phi (byte) conio_cursor_x#18 = (byte) conio_cursor_x#4 [phi:cputc::@2->cputc::@return#3] -- register_copy 
    jmp __breturn
    // cputc::@return
  __breturn:
    // [44] return 
    rts
    // cputc::@1
  __b1:
    // [45] (byte) gotoxy::y#1 ← (byte) conio_cursor_y#20 + (byte) 1 -- vbuz1=vbuz2_plus_1 
    ldy.z conio_cursor_y
    iny
    sty.z gotoxy.y
    // [46] call gotoxy 
    // [47] phi from cputc::@1 to gotoxy [phi:cputc::@1->gotoxy]
  gotoxy_from___b1:
    // [47] phi (byte) gotoxy::y#4 = (byte) gotoxy::y#1 [phi:cputc::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn_from___b1
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte zp($a) y)
gotoxy: {
    .label __8 = $19
    .label offset = $1f
    .label y = $a
    .label __9 = $1b
    .label __10 = $1d
    jmp __b1
    // gotoxy::@1
  __b1:
    // [48] if((byte) gotoxy::y#4<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@3 -- vbuz1_lt_vbuc1_then_la1 
    lda.z y
    cmp #CONIO_HEIGHT
    bcc __b3_from___b1
    // [50] phi from gotoxy::@1 to gotoxy::@2 [phi:gotoxy::@1->gotoxy::@2]
  __b2_from___b1:
    // [50] phi (byte) gotoxy::y#5 = (byte) 0 [phi:gotoxy::@1->gotoxy::@2#0] -- vbuz1=vbuc1 
    lda #0
    sta.z y
    jmp __b2
    // [49] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
  __b3_from___b1:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [50] phi from gotoxy::@3 to gotoxy::@2 [phi:gotoxy::@3->gotoxy::@2]
  __b2_from___b3:
    // [50] phi (byte) gotoxy::y#5 = (byte) gotoxy::y#4 [phi:gotoxy::@3->gotoxy::@2#0] -- register_copy 
    jmp __b2
    // gotoxy::@2
  __b2:
    // [51] (byte) conio_cursor_y#1 ← (byte) gotoxy::y#5 -- vbuz1=vbuz2 
    lda.z y
    sta.z conio_cursor_y
    // [52] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5 -- vwuz1=_word_vbuz2 
    lda.z y
    sta.z __8
    lda #0
    sta.z __8+1
    // [53] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2 -- vwuz1=vwuz2_rol_2 
    lda.z __8
    asl
    sta.z __9
    lda.z __8+1
    rol
    sta.z __9+1
    asl.z __9
    rol.z __9+1
    // [54] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8 -- vwuz1=vwuz2_plus_vwuz3 
    lda.z __9
    clc
    adc.z __8
    sta.z __10
    lda.z __9+1
    adc.z __8+1
    sta.z __10+1
    // [55] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3 -- vwuz1=vwuz2_rol_3 
    lda.z __10
    asl
    sta.z offset
    lda.z __10+1
    rol
    sta.z offset+1
    asl.z offset
    rol.z offset+1
    asl.z offset
    rol.z offset+1
    // [56] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z offset
    clc
    adc #<CONIO_SCREEN_TEXT
    sta.z conio_cursor_text
    lda.z offset+1
    adc #>CONIO_SCREEN_TEXT
    sta.z conio_cursor_text+1
    // [57] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z offset
    clc
    adc #<CONIO_SCREEN_COLORS
    sta.z conio_cursor_color
    lda.z offset+1
    adc #>CONIO_SCREEN_COLORS
    sta.z conio_cursor_color+1
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [58] return 
    rts
}
  // tod_str
// Convert time of day to a human-readable string "hh:mm:ss:10"
// tod_str(byte zp($13) tod_TENTHS, byte zp($14) tod_SEC, byte zp($15) tod_MIN, byte zp($16) tod_HOURS)
tod_str: {
    .label __0 = $21
    .label __1 = $22
    .label __2 = $23
    .label __3 = $24
    .label __4 = $25
    .label __5 = $26
    .label __6 = $27
    .label __7 = $28
    .label __8 = $29
    .label __9 = $2a
    .label __10 = $2b
    .label __11 = $2c
    .label __12 = $2d
    .label __13 = $2e
    .label __14 = $2f
    .label __15 = $30
    .label tod_TENTHS = $13
    .label tod_SEC = $14
    .label tod_MIN = $15
    .label tod_HOURS = $16
    // [59] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4 -- vbuz1=vbuz2_ror_4 
    lda.z tod_HOURS
    lsr
    lsr
    lsr
    lsr
    sta.z __0
    // [60] (byte~) tod_str::$1 ← (byte) '0' + (byte~) tod_str::$0 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __0
    axs #-['0']
    stx.z __1
    // [61] *((const byte*) tod_buffer) ← (byte~) tod_str::$1 -- _deref_pbuc1=vbuz1 
    lda.z __1
    sta tod_buffer
    // [62] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and.z tod_HOURS
    sta.z __2
    // [63] (byte~) tod_str::$3 ← (byte) '0' + (byte~) tod_str::$2 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __2
    axs #-['0']
    stx.z __3
    // [64] *((const byte*) tod_buffer+(byte) 1) ← (byte~) tod_str::$3 -- _deref_pbuc1=vbuz1 
    lda.z __3
    sta tod_buffer+1
    // [65] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4 -- vbuz1=vbuz2_ror_4 
    lda.z tod_MIN
    lsr
    lsr
    lsr
    lsr
    sta.z __4
    // [66] (byte~) tod_str::$5 ← (byte) '0' + (byte~) tod_str::$4 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __4
    axs #-['0']
    stx.z __5
    // [67] *((const byte*) tod_buffer+(byte) 3) ← (byte~) tod_str::$5 -- _deref_pbuc1=vbuz1 
    lda.z __5
    sta tod_buffer+3
    // [68] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and.z tod_MIN
    sta.z __6
    // [69] (byte~) tod_str::$7 ← (byte) '0' + (byte~) tod_str::$6 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __6
    axs #-['0']
    stx.z __7
    // [70] *((const byte*) tod_buffer+(byte) 4) ← (byte~) tod_str::$7 -- _deref_pbuc1=vbuz1 
    lda.z __7
    sta tod_buffer+4
    // [71] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4 -- vbuz1=vbuz2_ror_4 
    lda.z tod_SEC
    lsr
    lsr
    lsr
    lsr
    sta.z __8
    // [72] (byte~) tod_str::$9 ← (byte) '0' + (byte~) tod_str::$8 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __8
    axs #-['0']
    stx.z __9
    // [73] *((const byte*) tod_buffer+(byte) 6) ← (byte~) tod_str::$9 -- _deref_pbuc1=vbuz1 
    lda.z __9
    sta tod_buffer+6
    // [74] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and.z tod_SEC
    sta.z __10
    // [75] (byte~) tod_str::$11 ← (byte) '0' + (byte~) tod_str::$10 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __10
    axs #-['0']
    stx.z __11
    // [76] *((const byte*) tod_buffer+(byte) 7) ← (byte~) tod_str::$11 -- _deref_pbuc1=vbuz1 
    lda.z __11
    sta tod_buffer+7
    // [77] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4 -- vbuz1=vbuz2_ror_4 
    lda.z tod_TENTHS
    lsr
    lsr
    lsr
    lsr
    sta.z __12
    // [78] (byte~) tod_str::$13 ← (byte) '0' + (byte~) tod_str::$12 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __12
    axs #-['0']
    stx.z __13
    // [79] *((const byte*) tod_buffer+(byte) 9) ← (byte~) tod_str::$13 -- _deref_pbuc1=vbuz1 
    lda.z __13
    sta tod_buffer+9
    // [80] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f -- vbuz1=vbuz2_band_vbuc1 
    lda #$f
    and.z tod_TENTHS
    sta.z __14
    // [81] (byte~) tod_str::$15 ← (byte) '0' + (byte~) tod_str::$14 -- vbuz1=vbuc1_plus_vbuz2 
    lax.z __14
    axs #-['0']
    stx.z __15
    // [82] *((const byte*) tod_buffer+(byte) $a) ← (byte~) tod_str::$15 -- _deref_pbuc1=vbuz1 
    lda.z __15
    sta tod_buffer+$a
    jmp __breturn
    // tod_str::@return
  __breturn:
    // [83] return 
    rts
}
  // tod_read
// Read time of day
tod_read: {
    .label return_TENTHS = $34
    .label return_SEC = $33
    .label return_MIN = $32
    .label return_HOURS = $31
    .label return_TENTHS_1 = $f
    .label return_SEC_1 = $10
    .label return_MIN_1 = $11
    .label return_HOURS_1 = $12
    // [84] (byte) tod_read::return_HOURS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) -- vbuz1=_deref_pbuc1 
    // Reading sequence is important. TOD latches on reading hours until 10ths is read.
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS
    sta.z return_HOURS
    // [85] (byte) tod_read::return_MIN#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) -- vbuz1=_deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_MIN
    sta.z return_MIN
    // [86] (byte) tod_read::return_SEC#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) -- vbuz1=_deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_SEC
    sta.z return_SEC
    // [87] (byte) tod_read::return_TENTHS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) -- vbuz1=_deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_10THS
    sta.z return_TENTHS
    jmp __breturn
    // tod_read::@return
  __breturn:
    // [88] return 
    rts
}
  // tod_init
// Initialize time-of-day clock
// This uses the MOS6526 CIA#1
// tod_init(byte zp($b) tod_TENTHS, byte zp($c) tod_SEC, byte zp($d) tod_MIN, byte zp($e) tod_HOURS)
tod_init: {
    .label tod_TENTHS = $b
    .label tod_SEC = $c
    .label tod_MIN = $d
    .label tod_HOURS = $e
    // [89] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80 -- _deref_pbuc1=_deref_pbuc2_bor_vbuc3 
    // Set 50hz (this assumes PAL!) (bit7=1)
    lda #$80
    ora CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL
    // [90] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f -- _deref_pbuc1=_deref_pbuc2_band_vbuc3 
    // Writing TOD clock (bit7=0)
    lda #$7f
    and CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL
    // [91] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) ← (byte) tod_init::tod_HOURS#0 -- _deref_pbuc1=vbuz1 
    // Reset TOD clock
    // Writing sequence is important. TOD stops when hours is written and starts when 10ths is written.
    lda.z tod_HOURS
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS
    // [92] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) ← (byte) tod_init::tod_MIN#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_MIN
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_MIN
    // [93] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) ← (byte) tod_init::tod_SEC#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_SEC
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_SEC
    // [94] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) ← (byte) tod_init::tod_TENTHS#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_TENTHS
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_10THS
    jmp __breturn
    // tod_init::@return
  __breturn:
    // [95] return 
    rts
}
  // File Data
  // The buffer used by tod_str()
  tod_buffer: .text "00:00:00:00"
  .byte 0
  // Time of Day 00:00:00:00
  TOD_ZERO: .byte 0, 0, 0, 0

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [26] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ cputs::s#2 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 cputs::c#1 ] ( main:2::cputs:23 [ cputs::s#2 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 cputs::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte a as potential for zp[1]:4 [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ]
Removing always clobbered register reg byte y as potential for zp[1]:4 [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ]
Removing always clobbered register reg byte a as potential for zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
Removing always clobbered register reg byte y as potential for zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
Statement [33] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0 [ conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 ] ( main:2::cputs:23::cputc:31 [ cputs::s#0 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte y 
Statement [35] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT [ conio_cursor_x#20 conio_cursor_y#20 conio_cursor_color#19 conio_cursor_text#26 ] ( main:2::cputs:23::cputc:31 [ cputs::s#0 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_color#19 conio_cursor_text#26 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [52] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5 [ conio_cursor_y#1 gotoxy::$8 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::$8 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [53] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2 [ conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [54] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8 [ conio_cursor_y#1 gotoxy::$10 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::$10 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::$10 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::$10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [55] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3 [ conio_cursor_y#1 gotoxy::offset#0 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::offset#0 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [56] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0 [ conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [57] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [59] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::tod_HOURS#0 tod_str::$0 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::tod_HOURS#0 tod_str::$0 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:19 [ tod_str::tod_TENTHS#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:20 [ tod_str::tod_SEC#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:21 [ tod_str::tod_MIN#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:22 [ tod_str::tod_HOURS#0 ]
Statement [62] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$2 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$2 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [65] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$4 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$4 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [68] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$6 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$6 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [71] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$8 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$8 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [74] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f [ tod_str::tod_TENTHS#0 tod_str::$10 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::$10 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [77] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::$12 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::$12 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [80] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f [ tod_str::$14 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::$14 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [89] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80 [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] ( main:2::tod_init:8 [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] { }  ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp[1]:11 [ tod_init::tod_TENTHS#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:12 [ tod_init::tod_SEC#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:13 [ tod_init::tod_MIN#0 ]
Removing always clobbered register reg byte a as potential for zp[1]:14 [ tod_init::tod_HOURS#0 ]
Statement [90] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] ( main:2::tod_init:8 [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] { }  ) always clobbers reg byte a 
Statement [26] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) [ cputs::s#2 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 cputs::c#1 ] ( main:2::cputs:23 [ cputs::s#2 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 cputs::c#1 ] { }  ) always clobbers reg byte a reg byte y 
Statement [33] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0 [ conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 ] ( main:2::cputs:23::cputc:31 [ cputs::s#0 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_text#19 conio_cursor_color#19 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte y 
Statement [35] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT [ conio_cursor_x#20 conio_cursor_y#20 conio_cursor_color#19 conio_cursor_text#26 ] ( main:2::cputs:23::cputc:31 [ cputs::s#0 conio_cursor_x#20 conio_cursor_y#20 conio_cursor_color#19 conio_cursor_text#26 ] { { cputc::c#0 = cputs::c#1 } }  ) always clobbers reg byte a reg byte y 
Statement [52] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5 [ conio_cursor_y#1 gotoxy::$8 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::$8 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [53] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2 [ conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::$8 gotoxy::$9 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [54] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8 [ conio_cursor_y#1 gotoxy::$10 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::$10 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::$10 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::$10 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [55] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3 [ conio_cursor_y#1 gotoxy::offset#0 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 gotoxy::offset#0 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [56] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0 [ conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 gotoxy::offset#0 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [57] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] ( main:2::gotoxy:10 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] { }  main:2::cputs:23::cputc:31::gotoxy:42 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] { { cputc::c#0 = cputs::c#1 } }  main:2::cputs:23::cputc:31::gotoxy:46 [ cputs::s#0 conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 ] { { cputc::c#0 = cputs::c#1 } { gotoxy::y#1 = gotoxy::y#4 } }  ) always clobbers reg byte a 
Statement [59] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::tod_HOURS#0 tod_str::$0 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::tod_HOURS#0 tod_str::$0 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [62] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$2 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$2 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [65] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$4 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::tod_MIN#0 tod_str::$4 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [68] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$6 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$6 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [71] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$8 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::tod_SEC#0 tod_str::$8 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [74] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f [ tod_str::tod_TENTHS#0 tod_str::$10 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::$10 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [77] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4 [ tod_str::tod_TENTHS#0 tod_str::$12 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::tod_TENTHS#0 tod_str::$12 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [80] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f [ tod_str::$14 ] ( main:2::tod_str:21 [ conio_cursor_y#1 conio_cursor_text#1 conio_cursor_color#1 tod_str::$14 ] { { tod_str::tod_TENTHS#0 = tod_read::return_TENTHS#2 } { tod_str::tod_SEC#0 = tod_read::return_SEC#2 } { tod_str::tod_MIN#0 = tod_read::return_MIN#2 } { tod_str::tod_HOURS#0 = tod_read::return_HOURS#2 } }  ) always clobbers reg byte a 
Statement [89] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80 [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] ( main:2::tod_init:8 [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] { }  ) always clobbers reg byte a 
Statement [90] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] ( main:2::tod_init:8 [ tod_init::tod_TENTHS#0 tod_init::tod_SEC#0 tod_init::tod_MIN#0 tod_init::tod_HOURS#0 ] { }  ) always clobbers reg byte a 
Potential registers zp[2]:2 [ cputs::s#2 cputs::s#0 ] : zp[2]:2 , 
Potential registers zp[1]:4 [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ] : zp[1]:4 , reg byte x , 
Potential registers zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ] : zp[1]:5 , reg byte x , 
Potential registers zp[2]:6 [ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ] : zp[2]:6 , 
Potential registers zp[2]:8 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ] : zp[2]:8 , 
Potential registers zp[1]:10 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ] : zp[1]:10 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:11 [ tod_init::tod_TENTHS#0 ] : zp[1]:11 , reg byte x , reg byte y , 
Potential registers zp[1]:12 [ tod_init::tod_SEC#0 ] : zp[1]:12 , reg byte x , reg byte y , 
Potential registers zp[1]:13 [ tod_init::tod_MIN#0 ] : zp[1]:13 , reg byte x , reg byte y , 
Potential registers zp[1]:14 [ tod_init::tod_HOURS#0 ] : zp[1]:14 , reg byte x , reg byte y , 
Potential registers zp[1]:15 [ tod_read::return_TENTHS#2 ] : zp[1]:15 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:16 [ tod_read::return_SEC#2 ] : zp[1]:16 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:17 [ tod_read::return_MIN#2 ] : zp[1]:17 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:18 [ tod_read::return_HOURS#2 ] : zp[1]:18 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:19 [ tod_str::tod_TENTHS#0 ] : zp[1]:19 , reg byte x , reg byte y , 
Potential registers zp[1]:20 [ tod_str::tod_SEC#0 ] : zp[1]:20 , reg byte x , reg byte y , 
Potential registers zp[1]:21 [ tod_str::tod_MIN#0 ] : zp[1]:21 , reg byte x , reg byte y , 
Potential registers zp[1]:22 [ tod_str::tod_HOURS#0 ] : zp[1]:22 , reg byte x , reg byte y , 
Potential registers zp[1]:23 [ cputs::c#1 ] : zp[1]:23 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:24 [ cputc::c#0 ] : zp[1]:24 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[2]:25 [ gotoxy::$8 ] : zp[2]:25 , 
Potential registers zp[2]:27 [ gotoxy::$9 ] : zp[2]:27 , 
Potential registers zp[2]:29 [ gotoxy::$10 ] : zp[2]:29 , 
Potential registers zp[2]:31 [ gotoxy::offset#0 ] : zp[2]:31 , 
Potential registers zp[1]:33 [ tod_str::$0 ] : zp[1]:33 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:34 [ tod_str::$1 ] : zp[1]:34 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:35 [ tod_str::$2 ] : zp[1]:35 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:36 [ tod_str::$3 ] : zp[1]:36 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:37 [ tod_str::$4 ] : zp[1]:37 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:38 [ tod_str::$5 ] : zp[1]:38 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:39 [ tod_str::$6 ] : zp[1]:39 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:40 [ tod_str::$7 ] : zp[1]:40 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:41 [ tod_str::$8 ] : zp[1]:41 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:42 [ tod_str::$9 ] : zp[1]:42 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:43 [ tod_str::$10 ] : zp[1]:43 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:44 [ tod_str::$11 ] : zp[1]:44 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:45 [ tod_str::$12 ] : zp[1]:45 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:46 [ tod_str::$13 ] : zp[1]:46 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:47 [ tod_str::$14 ] : zp[1]:47 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:48 [ tod_str::$15 ] : zp[1]:48 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:49 [ tod_read::return_HOURS#0 ] : zp[1]:49 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:50 [ tod_read::return_MIN#0 ] : zp[1]:50 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:51 [ tod_read::return_SEC#0 ] : zp[1]:51 , reg byte a , reg byte x , reg byte y , 
Potential registers zp[1]:52 [ tod_read::return_TENTHS#0 ] : zp[1]:52 , reg byte a , reg byte x , reg byte y , 
Potential registers mem[4] [ TOD_ZERO ] : mem[4] , 

REGISTER UPLIFT SCOPES
Uplift Scope [gotoxy] 20,000,002: zp[2]:27 [ gotoxy::$9 ] 20,000,002: zp[2]:29 [ gotoxy::$10 ] 19,000,004: zp[1]:10 [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ] 15,000,001.5: zp[2]:25 [ gotoxy::$8 ] 15,000,001.5: zp[2]:31 [ gotoxy::offset#0 ] 
Uplift Scope [] 3,625,128.75: zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ] 2,866,836.27: zp[2]:8 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ] 2,727,015.41: zp[2]:6 [ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ] 1,976,669.03: zp[1]:4 [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ] 0: mem[4] [ TOD_ZERO ] 
Uplift Scope [cputc] 1,050,001.5: zp[1]:24 [ cputc::c#0 ] 
Uplift Scope [cputs] 200,002: zp[2]:2 [ cputs::s#2 cputs::s#0 ] 100,001: zp[1]:23 [ cputs::c#1 ] 
Uplift Scope [tod_str] 2,002: zp[1]:33 [ tod_str::$0 ] 2,002: zp[1]:34 [ tod_str::$1 ] 2,002: zp[1]:35 [ tod_str::$2 ] 2,002: zp[1]:36 [ tod_str::$3 ] 2,002: zp[1]:37 [ tod_str::$4 ] 2,002: zp[1]:38 [ tod_str::$5 ] 2,002: zp[1]:39 [ tod_str::$6 ] 2,002: zp[1]:40 [ tod_str::$7 ] 2,002: zp[1]:41 [ tod_str::$8 ] 2,002: zp[1]:42 [ tod_str::$9 ] 2,002: zp[1]:43 [ tod_str::$10 ] 2,002: zp[1]:44 [ tod_str::$11 ] 2,002: zp[1]:45 [ tod_str::$12 ] 2,002: zp[1]:46 [ tod_str::$13 ] 2,002: zp[1]:47 [ tod_str::$14 ] 2,002: zp[1]:48 [ tod_str::$15 ] 525.75: zp[1]:22 [ tod_str::tod_HOURS#0 ] 191.18: zp[1]:21 [ tod_str::tod_MIN#0 ] 116.83: zp[1]:20 [ tod_str::tod_SEC#0 ] 84.12: zp[1]:19 [ tod_str::tod_TENTHS#0 ] 
Uplift Scope [tod_read] 367.33: zp[1]:52 [ tod_read::return_TENTHS#0 ] 220.4: zp[1]:51 [ tod_read::return_SEC#0 ] 157.43: zp[1]:50 [ tod_read::return_MIN#0 ] 122.44: zp[1]:49 [ tod_read::return_HOURS#0 ] 50.5: zp[1]:15 [ tod_read::return_TENTHS#2 ] 50.5: zp[1]:16 [ tod_read::return_SEC#2 ] 50.5: zp[1]:17 [ tod_read::return_MIN#2 ] 50.5: zp[1]:18 [ tod_read::return_HOURS#2 ] 
Uplift Scope [tod_init] 37.33: zp[1]:14 [ tod_init::tod_HOURS#0 ] 22.4: zp[1]:13 [ tod_init::tod_MIN#0 ] 16: zp[1]:12 [ tod_init::tod_SEC#0 ] 12.44: zp[1]:11 [ tod_init::tod_TENTHS#0 ] 
Uplift Scope [TIME_OF_DAY] 
Uplift Scope [MOS6526_CIA] 
Uplift Scope [main] 

Uplifting [gotoxy] best 8059 combination zp[2]:27 [ gotoxy::$9 ] zp[2]:29 [ gotoxy::$10 ] reg byte a [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ] zp[2]:25 [ gotoxy::$8 ] zp[2]:31 [ gotoxy::offset#0 ] 
Uplifting [] best 7750 combination zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ] zp[2]:8 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ] zp[2]:6 [ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ] reg byte x [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ] mem[4] [ TOD_ZERO ] 
Uplifting [cputc] best 7444 combination reg byte a [ cputc::c#0 ] 
Uplifting [cputs] best 6544 combination zp[2]:2 [ cputs::s#2 cputs::s#0 ] reg byte a [ cputs::c#1 ] 
Uplifting [tod_read] best 6445 combination reg byte y [ tod_read::return_TENTHS#0 ] reg byte x [ tod_read::return_SEC#0 ] reg byte a [ tod_read::return_MIN#0 ] zp[1]:49 [ tod_read::return_HOURS#0 ] zp[1]:15 [ tod_read::return_TENTHS#2 ] zp[1]:16 [ tod_read::return_SEC#2 ] zp[1]:17 [ tod_read::return_MIN#2 ] zp[1]:18 [ tod_read::return_HOURS#2 ] 
Limited combination testing to 100 combinations of 65536 possible.
Uplifting [tod_init] best 6433 combination reg byte y [ tod_init::tod_HOURS#0 ] reg byte x [ tod_init::tod_MIN#0 ] zp[1]:12 [ tod_init::tod_SEC#0 ] zp[1]:11 [ tod_init::tod_TENTHS#0 ] 
Uplifting [TIME_OF_DAY] best 6433 combination 
Uplifting [MOS6526_CIA] best 6433 combination 
Uplifting [main] best 6433 combination 
Attempting to uplift remaining variables inzp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
Uplifting [] best 6433 combination zp[1]:5 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ] 
Attempting to uplift remaining variables inzp[1]:33 [ tod_str::$0 ]
Uplifting [tod_str] best 6429 combination reg byte a [ tod_str::$0 ] 
Attempting to uplift remaining variables inzp[1]:34 [ tod_str::$1 ]
Uplifting [tod_str] best 6423 combination reg byte a [ tod_str::$1 ] 
Attempting to uplift remaining variables inzp[1]:35 [ tod_str::$2 ]
Uplifting [tod_str] best 6419 combination reg byte a [ tod_str::$2 ] 
Attempting to uplift remaining variables inzp[1]:36 [ tod_str::$3 ]
Uplifting [tod_str] best 6413 combination reg byte a [ tod_str::$3 ] 
Attempting to uplift remaining variables inzp[1]:37 [ tod_str::$4 ]
Uplifting [tod_str] best 6409 combination reg byte a [ tod_str::$4 ] 
Attempting to uplift remaining variables inzp[1]:38 [ tod_str::$5 ]
Uplifting [tod_str] best 6403 combination reg byte a [ tod_str::$5 ] 
Attempting to uplift remaining variables inzp[1]:39 [ tod_str::$6 ]
Uplifting [tod_str] best 6399 combination reg byte a [ tod_str::$6 ] 
Attempting to uplift remaining variables inzp[1]:40 [ tod_str::$7 ]
Uplifting [tod_str] best 6393 combination reg byte a [ tod_str::$7 ] 
Attempting to uplift remaining variables inzp[1]:41 [ tod_str::$8 ]
Uplifting [tod_str] best 6389 combination reg byte a [ tod_str::$8 ] 
Attempting to uplift remaining variables inzp[1]:42 [ tod_str::$9 ]
Uplifting [tod_str] best 6383 combination reg byte a [ tod_str::$9 ] 
Attempting to uplift remaining variables inzp[1]:43 [ tod_str::$10 ]
Uplifting [tod_str] best 6379 combination reg byte a [ tod_str::$10 ] 
Attempting to uplift remaining variables inzp[1]:44 [ tod_str::$11 ]
Uplifting [tod_str] best 6373 combination reg byte a [ tod_str::$11 ] 
Attempting to uplift remaining variables inzp[1]:45 [ tod_str::$12 ]
Uplifting [tod_str] best 6369 combination reg byte a [ tod_str::$12 ] 
Attempting to uplift remaining variables inzp[1]:46 [ tod_str::$13 ]
Uplifting [tod_str] best 6363 combination reg byte a [ tod_str::$13 ] 
Attempting to uplift remaining variables inzp[1]:47 [ tod_str::$14 ]
Uplifting [tod_str] best 6359 combination reg byte a [ tod_str::$14 ] 
Attempting to uplift remaining variables inzp[1]:48 [ tod_str::$15 ]
Uplifting [tod_str] best 6353 combination reg byte a [ tod_str::$15 ] 
Attempting to uplift remaining variables inzp[1]:22 [ tod_str::tod_HOURS#0 ]
Uplifting [tod_str] best 6321 combination reg byte x [ tod_str::tod_HOURS#0 ] 
Attempting to uplift remaining variables inzp[1]:21 [ tod_str::tod_MIN#0 ]
Uplifting [tod_str] best 6289 combination reg byte y [ tod_str::tod_MIN#0 ] 
Attempting to uplift remaining variables inzp[1]:49 [ tod_read::return_HOURS#0 ]
Uplifting [tod_read] best 6289 combination zp[1]:49 [ tod_read::return_HOURS#0 ] 
Attempting to uplift remaining variables inzp[1]:20 [ tod_str::tod_SEC#0 ]
Uplifting [tod_str] best 6289 combination zp[1]:20 [ tod_str::tod_SEC#0 ] 
Attempting to uplift remaining variables inzp[1]:19 [ tod_str::tod_TENTHS#0 ]
Uplifting [tod_str] best 6289 combination zp[1]:19 [ tod_str::tod_TENTHS#0 ] 
Attempting to uplift remaining variables inzp[1]:15 [ tod_read::return_TENTHS#2 ]
Uplifting [tod_read] best 6229 combination reg byte y [ tod_read::return_TENTHS#2 ] 
Attempting to uplift remaining variables inzp[1]:16 [ tod_read::return_SEC#2 ]
Uplifting [tod_read] best 6169 combination reg byte x [ tod_read::return_SEC#2 ] 
Attempting to uplift remaining variables inzp[1]:17 [ tod_read::return_MIN#2 ]
Uplifting [tod_read] best 6169 combination zp[1]:17 [ tod_read::return_MIN#2 ] 
Attempting to uplift remaining variables inzp[1]:18 [ tod_read::return_HOURS#2 ]
Uplifting [tod_read] best 6129 combination reg byte a [ tod_read::return_HOURS#2 ] 
Attempting to uplift remaining variables inzp[1]:12 [ tod_init::tod_SEC#0 ]
Uplifting [tod_init] best 6129 combination zp[1]:12 [ tod_init::tod_SEC#0 ] 
Attempting to uplift remaining variables inzp[1]:11 [ tod_init::tod_TENTHS#0 ]
Uplifting [tod_init] best 6129 combination zp[1]:11 [ tod_init::tod_TENTHS#0 ] 
Coalescing zero page register [ zp[2]:8 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 ] ] with [ zp[2]:31 [ gotoxy::offset#0 ] ] - score: 1
Coalescing zero page register [ zp[2]:25 [ gotoxy::$8 ] ] with [ zp[2]:29 [ gotoxy::$10 ] ] - score: 1
Coalescing zero page register [ zp[2]:8 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 gotoxy::offset#0 ] ] with [ zp[2]:25 [ gotoxy::$8 gotoxy::$10 ] ] - score: 1
Coalescing zero page register [ zp[1]:17 [ tod_read::return_MIN#2 ] ] with [ zp[1]:11 [ tod_init::tod_TENTHS#0 ] ]
Coalescing zero page register [ zp[1]:19 [ tod_str::tod_TENTHS#0 ] ] with [ zp[1]:12 [ tod_init::tod_SEC#0 ] ]
Coalescing zero page register [ zp[1]:49 [ tod_read::return_HOURS#0 ] ] with [ zp[1]:20 [ tod_str::tod_SEC#0 ] ]
Allocated (was zp[1]:5) zp[1]:4 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
Allocated (was zp[2]:6) zp[2]:5 [ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ]
Allocated (was zp[2]:8) zp[2]:7 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 gotoxy::offset#0 gotoxy::$8 gotoxy::$10 ]
Allocated (was zp[1]:17) zp[1]:9 [ tod_read::return_MIN#2 tod_init::tod_TENTHS#0 ]
Allocated (was zp[1]:19) zp[1]:10 [ tod_str::tod_TENTHS#0 tod_init::tod_SEC#0 ]
Allocated (was zp[2]:27) zp[2]:11 [ gotoxy::$9 ]
Allocated (was zp[1]:49) zp[1]:13 [ tod_read::return_HOURS#0 tod_str::tod_SEC#0 ]

ASSEMBLER BEFORE OPTIMIZATION
  // File Comments
// Time of Day / RTOS test using the 6526 CIA on C64
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(__bbegin)
.pc = $80d "Program"
  // Global Constants & labels
  // The text screen address
  .label CONIO_SCREEN_TEXT = $400
  // The color screen address
  .label CONIO_SCREEN_COLORS = $d800
  // The screen width
  .const CONIO_WIDTH = $28
  // The screen height
  .const CONIO_HEIGHT = $19
  // The default text color
  .const CONIO_TEXTCOLOR_DEFAULT = $e
  // The CIA#1: keyboard matrix, joystick #1/#2
  .label CIA1 = $dc00
  .const OFFSET_STRUCT_TIME_OF_DAY_SEC = 1
  .const OFFSET_STRUCT_TIME_OF_DAY_MIN = 2
  .const OFFSET_STRUCT_TIME_OF_DAY_HOURS = 3
  .const OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
  .const OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = $b
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = $a
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = 9
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = 8
  // The current cursor y-position
  .label conio_cursor_y = 4
  // The current cursor address
  .label conio_cursor_text = 5
  // The current cursor address
  .label conio_cursor_color = 7
  // @begin
__bbegin:
  // [1] phi from @begin to @1 [phi:@begin->@1]
__b1_from___bbegin:
  jmp __b1
  // @1
__b1:
  // [2] call main 
  jsr main
  // [3] phi from @1 to @end [phi:@1->@end]
__bend_from___b1:
  jmp __bend
  // @end
__bend:
  // main
main: {
    // [4] (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO
    sta.z tod_init.tod_TENTHS
    // [5] (byte) tod_init::tod_SEC#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_SEC
    sta.z tod_init.tod_SEC
    // [6] (byte) tod_init::tod_MIN#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN) -- vbuxx=_deref_pbuc1 
    ldx TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_MIN
    // [7] (byte) tod_init::tod_HOURS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS) -- vbuyy=_deref_pbuc1 
    ldy TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_HOURS
    // [8] call tod_init 
    jsr tod_init
    // [9] phi from main main::@4 to main::@1 [phi:main/main::@4->main::@1]
  __b1_from_main:
  __b1_from___b4:
    jmp __b1
    // main::@1
  __b1:
    // [10] call gotoxy 
    // [47] phi from main::@1 to gotoxy [phi:main::@1->gotoxy]
  gotoxy_from___b1:
    // [47] phi (byte) gotoxy::y#4 = (byte) 0 [phi:main::@1->gotoxy#0] -- vbuaa=vbuc1 
    lda #0
    jsr gotoxy
    // [11] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
  __b2_from___b1:
    jmp __b2
    // main::@2
  __b2:
    // [12] call tod_read 
    jsr tod_read
    // [13] (byte) tod_read::return_TENTHS#2 ← (byte) tod_read::return_TENTHS#0
    // [14] (byte) tod_read::return_SEC#2 ← (byte) tod_read::return_SEC#0
    // [15] (byte) tod_read::return_MIN#2 ← (byte) tod_read::return_MIN#0 -- vbuz1=vbuaa 
    sta.z tod_read.return_MIN
    // [16] (byte) tod_read::return_HOURS#2 ← (byte) tod_read::return_HOURS#0 -- vbuaa=vbuz1 
    lda.z tod_read.return_HOURS
    jmp __b3
    // main::@3
  __b3:
    // [17] (byte) tod_str::tod_TENTHS#0 ← (byte) tod_read::return_TENTHS#2 -- vbuz1=vbuyy 
    sty.z tod_str.tod_TENTHS
    // [18] (byte) tod_str::tod_SEC#0 ← (byte) tod_read::return_SEC#2 -- vbuz1=vbuxx 
    stx.z tod_str.tod_SEC
    // [19] (byte) tod_str::tod_MIN#0 ← (byte) tod_read::return_MIN#2 -- vbuyy=vbuz1 
    ldy.z tod_read.return_MIN
    // [20] (byte) tod_str::tod_HOURS#0 ← (byte) tod_read::return_HOURS#2 -- vbuxx=vbuaa 
    tax
    // [21] call tod_str 
    jsr tod_str
    // [22] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
  __b4_from___b3:
    jmp __b4
    // main::@4
  __b4:
    // [23] call cputs 
    // [24] phi from main::@4 to cputs [phi:main::@4->cputs]
  cputs_from___b4:
    jsr cputs
    jmp __b1_from___b4
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp(2) s)
cputs: {
    .label s = 2
    // [25] phi from cputs to cputs::@1 [phi:cputs->cputs::@1]
  __b1_from_cputs:
    // [25] phi (byte*) conio_cursor_color#19 = (byte*) conio_cursor_color#1 [phi:cputs->cputs::@1#0] -- register_copy 
    // [25] phi (byte*) conio_cursor_text#19 = (byte*) conio_cursor_text#1 [phi:cputs->cputs::@1#1] -- register_copy 
    // [25] phi (byte) conio_cursor_y#20 = (byte) conio_cursor_y#1 [phi:cputs->cputs::@1#2] -- register_copy 
    // [25] phi (byte) conio_cursor_x#20 = (byte) 0 [phi:cputs->cputs::@1#3] -- vbuxx=vbuc1 
    ldx #0
    // [25] phi (to_nomodify byte*) cputs::s#2 = (const byte*) tod_buffer [phi:cputs->cputs::@1#4] -- pbuz1=pbuc1 
    lda #<tod_buffer
    sta.z s
    lda #>tod_buffer
    sta.z s+1
    jmp __b1
    // cputs::@1
  __b1:
    // [26] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // [27] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [28] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    jmp __breturn
    // cputs::@return
  __breturn:
    // [29] return 
    rts
    // cputs::@2
  __b2:
    // [30] (byte) cputc::c#0 ← (byte) cputs::c#1
    // [31] call cputc 
    jsr cputc
    // [25] phi from cputs::@2 to cputs::@1 [phi:cputs::@2->cputs::@1]
  __b1_from___b2:
    // [25] phi (byte*) conio_cursor_color#19 = (byte*) conio_cursor_color#17 [phi:cputs::@2->cputs::@1#0] -- register_copy 
    // [25] phi (byte*) conio_cursor_text#19 = (byte*) conio_cursor_text#17 [phi:cputs::@2->cputs::@1#1] -- register_copy 
    // [25] phi (byte) conio_cursor_y#20 = (byte) conio_cursor_y#18 [phi:cputs::@2->cputs::@1#2] -- register_copy 
    // [25] phi (byte) conio_cursor_x#20 = (byte) conio_cursor_x#18 [phi:cputs::@2->cputs::@1#3] -- register_copy 
    // [25] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#0 [phi:cputs::@2->cputs::@1#4] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward
// cputc(byte register(A) c)
cputc: {
    // [32] if((byte) cputc::c#0==(byte) ' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1
    jmp __b2
    // cputc::@2
  __b2:
    // [33] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (conio_cursor_text),y
    // [34] (byte*) conio_cursor_text#26 ← ++ (byte*) conio_cursor_text#19 -- pbuz1=_inc_pbuz1 
    inc.z conio_cursor_text
    bne !+
    inc.z conio_cursor_text+1
  !:
    // [35] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT -- _deref_pbuz1=vbuc1 
    lda #CONIO_TEXTCOLOR_DEFAULT
    ldy #0
    sta (conio_cursor_color),y
    // [36] (byte*) conio_cursor_color#26 ← ++ (byte*) conio_cursor_color#19 -- pbuz1=_inc_pbuz1 
    inc.z conio_cursor_color
    bne !+
    inc.z conio_cursor_color+1
  !:
    // [37] (byte) conio_cursor_x#4 ← ++ (byte) conio_cursor_x#20 -- vbuxx=_inc_vbuxx 
    inx
    // [38] if((byte) conio_cursor_x#4!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return -- vbuxx_neq_vbuc1_then_la1 
    cpx #CONIO_WIDTH
    bne __breturn_from___b2
    jmp __b3
    // cputc::@3
  __b3:
    // [39] (byte) conio_cursor_y#27 ← ++ (byte) conio_cursor_y#20 -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [40] if((byte) conio_cursor_y#27!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #CONIO_HEIGHT
    cmp.z conio_cursor_y
    bne __breturn_from___b3
    // [41] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
  __b4_from___b3:
    jmp __b4
    // cputc::@4
  __b4:
    // [42] call gotoxy 
    // [47] phi from cputc::@4 to gotoxy [phi:cputc::@4->gotoxy]
  gotoxy_from___b4:
    // [47] phi (byte) gotoxy::y#4 = (byte) 0 [phi:cputc::@4->gotoxy#0] -- vbuaa=vbuc1 
    lda #0
    jsr gotoxy
    // [43] phi from cputc::@1 cputc::@3 cputc::@4 to cputc::@return [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return]
  __breturn_from___b1:
  __breturn_from___b3:
  __breturn_from___b4:
    // [43] phi (byte*) conio_cursor_color#17 = (byte*) conio_cursor_color#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#0] -- register_copy 
    // [43] phi (byte*) conio_cursor_text#17 = (byte*) conio_cursor_text#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#1] -- register_copy 
    // [43] phi (byte) conio_cursor_y#18 = (byte) conio_cursor_y#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#2] -- register_copy 
    // [43] phi (byte) conio_cursor_x#18 = (byte) 0 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#3] -- vbuxx=vbuc1 
    ldx #0
    jmp __breturn
    // [43] phi from cputc::@2 to cputc::@return [phi:cputc::@2->cputc::@return]
  __breturn_from___b2:
    // [43] phi (byte*) conio_cursor_color#17 = (byte*) conio_cursor_color#26 [phi:cputc::@2->cputc::@return#0] -- register_copy 
    // [43] phi (byte*) conio_cursor_text#17 = (byte*) conio_cursor_text#26 [phi:cputc::@2->cputc::@return#1] -- register_copy 
    // [43] phi (byte) conio_cursor_y#18 = (byte) conio_cursor_y#20 [phi:cputc::@2->cputc::@return#2] -- register_copy 
    // [43] phi (byte) conio_cursor_x#18 = (byte) conio_cursor_x#4 [phi:cputc::@2->cputc::@return#3] -- register_copy 
    jmp __breturn
    // cputc::@return
  __breturn:
    // [44] return 
    rts
    // cputc::@1
  __b1:
    // [45] (byte) gotoxy::y#1 ← (byte) conio_cursor_y#20 + (byte) 1 -- vbuaa=vbuz1_plus_1 
    lda.z conio_cursor_y
    clc
    adc #1
    // [46] call gotoxy 
    // [47] phi from cputc::@1 to gotoxy [phi:cputc::@1->gotoxy]
  gotoxy_from___b1:
    // [47] phi (byte) gotoxy::y#4 = (byte) gotoxy::y#1 [phi:cputc::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __breturn_from___b1
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte register(A) y)
gotoxy: {
    .label __8 = 7
    .label offset = 7
    .label __9 = $b
    .label __10 = 7
    jmp __b1
    // gotoxy::@1
  __b1:
    // [48] if((byte) gotoxy::y#4<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@3 -- vbuaa_lt_vbuc1_then_la1 
    cmp #CONIO_HEIGHT
    bcc __b3_from___b1
    // [50] phi from gotoxy::@1 to gotoxy::@2 [phi:gotoxy::@1->gotoxy::@2]
  __b2_from___b1:
    // [50] phi (byte) gotoxy::y#5 = (byte) 0 [phi:gotoxy::@1->gotoxy::@2#0] -- vbuaa=vbuc1 
    lda #0
    jmp __b2
    // [49] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
  __b3_from___b1:
    jmp __b3
    // gotoxy::@3
  __b3:
    // [50] phi from gotoxy::@3 to gotoxy::@2 [phi:gotoxy::@3->gotoxy::@2]
  __b2_from___b3:
    // [50] phi (byte) gotoxy::y#5 = (byte) gotoxy::y#4 [phi:gotoxy::@3->gotoxy::@2#0] -- register_copy 
    jmp __b2
    // gotoxy::@2
  __b2:
    // [51] (byte) conio_cursor_y#1 ← (byte) gotoxy::y#5 -- vbuz1=vbuaa 
    sta.z conio_cursor_y
    // [52] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5 -- vwuz1=_word_vbuaa 
    sta.z __8
    lda #0
    sta.z __8+1
    // [53] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2 -- vwuz1=vwuz2_rol_2 
    lda.z __8
    asl
    sta.z __9
    lda.z __8+1
    rol
    sta.z __9+1
    asl.z __9
    rol.z __9+1
    // [54] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __10
    clc
    adc.z __9
    sta.z __10
    lda.z __10+1
    adc.z __9+1
    sta.z __10+1
    // [55] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3 -- vwuz1=vwuz1_rol_3 
    asl.z offset
    rol.z offset+1
    asl.z offset
    rol.z offset+1
    asl.z offset
    rol.z offset+1
    // [56] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z offset
    clc
    adc #<CONIO_SCREEN_TEXT
    sta.z conio_cursor_text
    lda.z offset+1
    adc #>CONIO_SCREEN_TEXT
    sta.z conio_cursor_text+1
    // [57] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z conio_cursor_color
    adc #<CONIO_SCREEN_COLORS
    sta.z conio_cursor_color
    lda.z conio_cursor_color+1
    adc #>CONIO_SCREEN_COLORS
    sta.z conio_cursor_color+1
    jmp __breturn
    // gotoxy::@return
  __breturn:
    // [58] return 
    rts
}
  // tod_str
// Convert time of day to a human-readable string "hh:mm:ss:10"
// tod_str(byte zp($a) tod_TENTHS, byte zp($d) tod_SEC, byte register(Y) tod_MIN, byte register(X) tod_HOURS)
tod_str: {
    .label tod_TENTHS = $a
    .label tod_SEC = $d
    // [59] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // [60] (byte~) tod_str::$1 ← (byte) '0' + (byte~) tod_str::$0 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [61] *((const byte*) tod_buffer) ← (byte~) tod_str::$1 -- _deref_pbuc1=vbuaa 
    sta tod_buffer
    // [62] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
    // [63] (byte~) tod_str::$3 ← (byte) '0' + (byte~) tod_str::$2 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [64] *((const byte*) tod_buffer+(byte) 1) ← (byte~) tod_str::$3 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+1
    // [65] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4 -- vbuaa=vbuyy_ror_4 
    tya
    lsr
    lsr
    lsr
    lsr
    // [66] (byte~) tod_str::$5 ← (byte) '0' + (byte~) tod_str::$4 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [67] *((const byte*) tod_buffer+(byte) 3) ← (byte~) tod_str::$5 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+3
    // [68] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f -- vbuaa=vbuyy_band_vbuc1 
    tya
    and #$f
    // [69] (byte~) tod_str::$7 ← (byte) '0' + (byte~) tod_str::$6 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [70] *((const byte*) tod_buffer+(byte) 4) ← (byte~) tod_str::$7 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+4
    // [71] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4 -- vbuaa=vbuz1_ror_4 
    lda.z tod_SEC
    lsr
    lsr
    lsr
    lsr
    // [72] (byte~) tod_str::$9 ← (byte) '0' + (byte~) tod_str::$8 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [73] *((const byte*) tod_buffer+(byte) 6) ← (byte~) tod_str::$9 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+6
    // [74] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and.z tod_SEC
    // [75] (byte~) tod_str::$11 ← (byte) '0' + (byte~) tod_str::$10 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [76] *((const byte*) tod_buffer+(byte) 7) ← (byte~) tod_str::$11 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+7
    // [77] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4 -- vbuaa=vbuz1_ror_4 
    lda.z tod_TENTHS
    lsr
    lsr
    lsr
    lsr
    // [78] (byte~) tod_str::$13 ← (byte) '0' + (byte~) tod_str::$12 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [79] *((const byte*) tod_buffer+(byte) 9) ← (byte~) tod_str::$13 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+9
    // [80] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and.z tod_TENTHS
    // [81] (byte~) tod_str::$15 ← (byte) '0' + (byte~) tod_str::$14 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // [82] *((const byte*) tod_buffer+(byte) $a) ← (byte~) tod_str::$15 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+$a
    jmp __breturn
    // tod_str::@return
  __breturn:
    // [83] return 
    rts
}
  // tod_read
// Read time of day
tod_read: {
    .label return_HOURS = $d
    .label return_MIN = 9
    // [84] (byte) tod_read::return_HOURS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) -- vbuz1=_deref_pbuc1 
    // Reading sequence is important. TOD latches on reading hours until 10ths is read.
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS
    sta.z return_HOURS
    // [85] (byte) tod_read::return_MIN#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) -- vbuaa=_deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_MIN
    // [86] (byte) tod_read::return_SEC#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) -- vbuxx=_deref_pbuc1 
    ldx CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_SEC
    // [87] (byte) tod_read::return_TENTHS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) -- vbuyy=_deref_pbuc1 
    ldy CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_10THS
    jmp __breturn
    // tod_read::@return
  __breturn:
    // [88] return 
    rts
}
  // tod_init
// Initialize time-of-day clock
// This uses the MOS6526 CIA#1
// tod_init(byte zp(9) tod_TENTHS, byte zp($a) tod_SEC, byte register(X) tod_MIN, byte register(Y) tod_HOURS)
tod_init: {
    .label tod_TENTHS = 9
    .label tod_SEC = $a
    // [89] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80 -- _deref_pbuc1=_deref_pbuc2_bor_vbuc3 
    // Set 50hz (this assumes PAL!) (bit7=1)
    lda #$80
    ora CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL
    // [90] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f -- _deref_pbuc1=_deref_pbuc2_band_vbuc3 
    // Writing TOD clock (bit7=0)
    lda #$7f
    and CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL
    // [91] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) ← (byte) tod_init::tod_HOURS#0 -- _deref_pbuc1=vbuyy 
    // Reset TOD clock
    // Writing sequence is important. TOD stops when hours is written and starts when 10ths is written.
    sty CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS
    // [92] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) ← (byte) tod_init::tod_MIN#0 -- _deref_pbuc1=vbuxx 
    stx CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_MIN
    // [93] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) ← (byte) tod_init::tod_SEC#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_SEC
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_SEC
    // [94] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) ← (byte) tod_init::tod_TENTHS#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_TENTHS
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_10THS
    jmp __breturn
    // tod_init::@return
  __breturn:
    // [95] return 
    rts
}
  // File Data
  // The buffer used by tod_str()
  tod_buffer: .text "00:00:00:00"
  .byte 0
  // Time of Day 00:00:00:00
  TOD_ZERO: .byte 0, 0, 0, 0

ASSEMBLER OPTIMIZATIONS
Removing instruction jmp __b1
Removing instruction jmp __bend
Removing instruction jmp __b1
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __b1
Removing instruction jmp __breturn
Removing instruction jmp __b2
Removing instruction jmp __b3
Removing instruction jmp __b4
Removing instruction jmp __breturn
Removing instruction jmp __b1
Removing instruction jmp __b3
Removing instruction jmp __b2
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Removing instruction jmp __breturn
Succesful ASM optimization Pass5NextJumpElimination
Replacing label __b1_from___b4 with __b1
Replacing label __breturn_from___b2 with __breturn
Replacing label __breturn_from___b3 with __breturn_from___b4
Replacing label __breturn_from___b1 with __breturn_from___b4
Replacing label __b3_from___b1 with __b2
Removing instruction __b1_from___bbegin:
Removing instruction __b1:
Removing instruction __bend_from___b1:
Removing instruction __b1_from_main:
Removing instruction __b1_from___b4:
Removing instruction gotoxy_from___b1:
Removing instruction __b2_from___b1:
Removing instruction __b4_from___b3:
Removing instruction cputs_from___b4:
Removing instruction __b4_from___b3:
Removing instruction gotoxy_from___b4:
Removing instruction __breturn_from___b1:
Removing instruction __breturn_from___b3:
Removing instruction __breturn_from___b2:
Removing instruction __b3_from___b1:
Removing instruction __b3:
Removing instruction __b2_from___b3:
Succesful ASM optimization Pass5RedundantLabelElimination
Removing instruction __bend:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction __b1_from_cputs:
Removing instruction __breturn:
Removing instruction __b1_from___b2:
Removing instruction __b2:
Removing instruction __b3:
Removing instruction __b4:
Removing instruction gotoxy_from___b1:
Removing instruction __b1:
Removing instruction __b2_from___b1:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Removing instruction __breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
Updating BasicUpstart to call main directly
Removing instruction jsr main
Succesful ASM optimization Pass5SkipBegin
Replacing jump to rts with rts in jmp __breturn
Succesful ASM optimization Pass5DoubleJumpElimination
Relabelling long label __breturn_from___b4 to __b2
Succesful ASM optimization Pass5RelabelLongLabels
Removing instruction jmp __b2
Succesful ASM optimization Pass5NextJumpElimination
Removing instruction __bbegin:
Succesful ASM optimization Pass5UnusedLabelElimination

FINAL SYMBOL TABLE
(label) @1
(label) @begin
(label) @end
(const nomodify struct MOS6526_CIA*) CIA1 = (struct MOS6526_CIA*) 56320
(const nomodify byte) CONIO_HEIGHT = (byte) $19
(const nomodify byte*) CONIO_SCREEN_COLORS = (byte*) 55296
(const nomodify byte*) CONIO_SCREEN_TEXT = (byte*) 1024
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (byte) $e
(const nomodify byte) CONIO_WIDTH = (byte) $28
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = (byte) $e
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = (byte) $f
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = (byte) 8
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = (byte) $b
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = (byte) $a
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = (byte) 9
(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS = (byte) 3
(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN = (byte) 2
(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC = (byte) 1
(byte) TIME_OF_DAY::HOURS
(byte) TIME_OF_DAY::MIN
(byte) TIME_OF_DAY::SEC
(byte) TIME_OF_DAY::TENTHS
(struct TIME_OF_DAY) TOD_ZERO loadstore mem[4] = { TENTHS: (byte) 0, SEC: (byte) 0, MIN: (byte) 0, HOURS: (byte) 0 }
(byte*) conio_cursor_color
(byte*) conio_cursor_color#1 conio_cursor_color zp[2]:7 666722.4444444445
(byte*) conio_cursor_color#17 conio_cursor_color zp[2]:7 1366668.3333333335
(byte*) conio_cursor_color#19 conio_cursor_color zp[2]:7 233444.88888888888
(byte*) conio_cursor_color#26 conio_cursor_color zp[2]:7 600000.6000000001
(byte*) conio_cursor_text
(byte*) conio_cursor_text#1 conio_cursor_text zp[2]:5 631631.7894736842
(byte*) conio_cursor_text#17 conio_cursor_text zp[2]:5 1366668.3333333335
(byte*) conio_cursor_text#19 conio_cursor_text zp[2]:5 300143.4285714285
(byte*) conio_cursor_text#26 conio_cursor_text zp[2]:5 428571.85714285716
(byte) conio_cursor_x
(byte) conio_cursor_x#18 reg byte x 366667.3333333334
(byte) conio_cursor_x#20 reg byte x 110000.20000000001
(byte) conio_cursor_x#4 reg byte x 1500001.5
(byte) conio_cursor_y
(byte) conio_cursor_y#1 conio_cursor_y zp[1]:4 500041.8333333333
(byte) conio_cursor_y#18 conio_cursor_y zp[1]:4 1366668.3333333335
(byte) conio_cursor_y#20 conio_cursor_y zp[1]:4 258417.08333333337
(byte) conio_cursor_y#27 conio_cursor_y zp[1]:4 1500001.5
(byte) conio_textcolor
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@4
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 1050001.5
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 100001.0
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:2 50000.5
(to_nomodify byte*) cputs::s#2 s zp[2]:2 150001.5
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(word~) gotoxy::$10 zp[2]:7 2.0000002E7
(word~) gotoxy::$8 zp[2]:7 1.50000015E7
(word~) gotoxy::$9 zp[2]:11 2.0000002E7
(label) gotoxy::@1
(label) gotoxy::@2
(label) gotoxy::@3
(label) gotoxy::@return
(word) gotoxy::offset
(word) gotoxy::offset#0 offset zp[2]:7 1.50000015E7
(byte) gotoxy::x
(byte) gotoxy::y
(byte) gotoxy::y#1 reg byte a 2000002.0
(byte) gotoxy::y#4 reg byte a 7000001.0
(byte) gotoxy::y#5 reg byte a 1.0000001E7
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(const byte*) tod_buffer[]  = (byte*) "00:00:00:00"
(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
(label) tod_init::@return
(struct TIME_OF_DAY) tod_init::tod
(byte) tod_init::tod_HOURS
(byte) tod_init::tod_HOURS#0 reg byte y 37.33333333333333
(byte) tod_init::tod_MIN
(byte) tod_init::tod_MIN#0 reg byte x 22.4
(byte) tod_init::tod_SEC
(byte) tod_init::tod_SEC#0 tod_SEC zp[1]:10 16.0
(byte) tod_init::tod_TENTHS
(byte) tod_init::tod_TENTHS#0 tod_TENTHS zp[1]:9 12.444444444444443
(struct TIME_OF_DAY()) tod_read()
(label) tod_read::@return
(byte) tod_read::hours
(byte) tod_read::mins
(struct TIME_OF_DAY) tod_read::return
(byte) tod_read::return_HOURS
(byte) tod_read::return_HOURS#0 return_HOURS zp[1]:13 122.44444444444446
(byte) tod_read::return_HOURS#2 reg byte a 50.5
(byte) tod_read::return_MIN
(byte) tod_read::return_MIN#0 reg byte a 157.42857142857142
(byte) tod_read::return_MIN#2 return_MIN zp[1]:9 50.5
(byte) tod_read::return_SEC
(byte) tod_read::return_SEC#0 reg byte x 220.39999999999998
(byte) tod_read::return_SEC#2 reg byte x 50.5
(byte) tod_read::return_TENTHS
(byte) tod_read::return_TENTHS#0 reg byte y 367.33333333333337
(byte) tod_read::return_TENTHS#2 reg byte y 50.5
(byte) tod_read::secs
(byte) tod_read::tenths
(byte) tod_read::tod_HOURS
(byte) tod_read::tod_MIN
(byte) tod_read::tod_SEC
(byte) tod_read::tod_TENTHS
(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
(byte~) tod_str::$0 reg byte a 2002.0
(byte~) tod_str::$1 reg byte a 2002.0
(byte~) tod_str::$10 reg byte a 2002.0
(byte~) tod_str::$11 reg byte a 2002.0
(byte~) tod_str::$12 reg byte a 2002.0
(byte~) tod_str::$13 reg byte a 2002.0
(byte~) tod_str::$14 reg byte a 2002.0
(byte~) tod_str::$15 reg byte a 2002.0
(byte~) tod_str::$2 reg byte a 2002.0
(byte~) tod_str::$3 reg byte a 2002.0
(byte~) tod_str::$4 reg byte a 2002.0
(byte~) tod_str::$5 reg byte a 2002.0
(byte~) tod_str::$6 reg byte a 2002.0
(byte~) tod_str::$7 reg byte a 2002.0
(byte~) tod_str::$8 reg byte a 2002.0
(byte~) tod_str::$9 reg byte a 2002.0
(label) tod_str::@return
(byte*) tod_str::return
(struct TIME_OF_DAY) tod_str::tod
(byte) tod_str::tod_HOURS
(byte) tod_str::tod_HOURS#0 reg byte x 525.75
(byte) tod_str::tod_MIN
(byte) tod_str::tod_MIN#0 reg byte y 191.1818181818182
(byte) tod_str::tod_SEC
(byte) tod_str::tod_SEC#0 tod_SEC zp[1]:13 116.83333333333334
(byte) tod_str::tod_TENTHS
(byte) tod_str::tod_TENTHS#0 tod_TENTHS zp[1]:10 84.12

zp[2]:2 [ cputs::s#2 cputs::s#0 ]
reg byte x [ conio_cursor_x#20 conio_cursor_x#18 conio_cursor_x#4 ]
zp[1]:4 [ conio_cursor_y#20 conio_cursor_y#1 conio_cursor_y#18 conio_cursor_y#27 ]
zp[2]:5 [ conio_cursor_text#19 conio_cursor_text#1 conio_cursor_text#17 conio_cursor_text#26 ]
zp[2]:7 [ conio_cursor_color#19 conio_cursor_color#1 conio_cursor_color#17 conio_cursor_color#26 gotoxy::offset#0 gotoxy::$8 gotoxy::$10 ]
reg byte a [ gotoxy::y#5 gotoxy::y#4 gotoxy::y#1 ]
reg byte x [ tod_init::tod_MIN#0 ]
reg byte y [ tod_init::tod_HOURS#0 ]
reg byte y [ tod_read::return_TENTHS#2 ]
reg byte x [ tod_read::return_SEC#2 ]
zp[1]:9 [ tod_read::return_MIN#2 tod_init::tod_TENTHS#0 ]
reg byte a [ tod_read::return_HOURS#2 ]
zp[1]:10 [ tod_str::tod_TENTHS#0 tod_init::tod_SEC#0 ]
reg byte y [ tod_str::tod_MIN#0 ]
reg byte x [ tod_str::tod_HOURS#0 ]
reg byte a [ cputs::c#1 ]
reg byte a [ cputc::c#0 ]
zp[2]:11 [ gotoxy::$9 ]
reg byte a [ tod_str::$0 ]
reg byte a [ tod_str::$1 ]
reg byte a [ tod_str::$2 ]
reg byte a [ tod_str::$3 ]
reg byte a [ tod_str::$4 ]
reg byte a [ tod_str::$5 ]
reg byte a [ tod_str::$6 ]
reg byte a [ tod_str::$7 ]
reg byte a [ tod_str::$8 ]
reg byte a [ tod_str::$9 ]
reg byte a [ tod_str::$10 ]
reg byte a [ tod_str::$11 ]
reg byte a [ tod_str::$12 ]
reg byte a [ tod_str::$13 ]
reg byte a [ tod_str::$14 ]
reg byte a [ tod_str::$15 ]
zp[1]:13 [ tod_read::return_HOURS#0 tod_str::tod_SEC#0 ]
reg byte a [ tod_read::return_MIN#0 ]
reg byte x [ tod_read::return_SEC#0 ]
reg byte y [ tod_read::return_TENTHS#0 ]
mem[4] [ TOD_ZERO ]


FINAL ASSEMBLER
Score: 5331

  // File Comments
// Time of Day / RTOS test using the 6526 CIA on C64
  // Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
  // Global Constants & labels
  // The text screen address
  .label CONIO_SCREEN_TEXT = $400
  // The color screen address
  .label CONIO_SCREEN_COLORS = $d800
  // The screen width
  .const CONIO_WIDTH = $28
  // The screen height
  .const CONIO_HEIGHT = $19
  // The default text color
  .const CONIO_TEXTCOLOR_DEFAULT = $e
  // The CIA#1: keyboard matrix, joystick #1/#2
  .label CIA1 = $dc00
  .const OFFSET_STRUCT_TIME_OF_DAY_SEC = 1
  .const OFFSET_STRUCT_TIME_OF_DAY_MIN = 2
  .const OFFSET_STRUCT_TIME_OF_DAY_HOURS = 3
  .const OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = $e
  .const OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = $f
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = $b
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = $a
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = 9
  .const OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = 8
  // The current cursor y-position
  .label conio_cursor_y = 4
  // The current cursor address
  .label conio_cursor_text = 5
  // The current cursor address
  .label conio_cursor_color = 7
  // @begin
  // [1] phi from @begin to @1 [phi:@begin->@1]
  // @1
  // [2] call main 
  // [3] phi from @1 to @end [phi:@1->@end]
  // @end
  // main
main: {
    // tod_init(TOD_ZERO)
    // [4] (byte) tod_init::tod_TENTHS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO
    sta.z tod_init.tod_TENTHS
    // [5] (byte) tod_init::tod_SEC#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC) -- vbuz1=_deref_pbuc1 
    lda TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_SEC
    sta.z tod_init.tod_SEC
    // [6] (byte) tod_init::tod_MIN#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN) -- vbuxx=_deref_pbuc1 
    ldx TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_MIN
    // [7] (byte) tod_init::tod_HOURS#0 ← *((byte*)&(struct TIME_OF_DAY) TOD_ZERO+(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS) -- vbuyy=_deref_pbuc1 
    ldy TOD_ZERO+OFFSET_STRUCT_TIME_OF_DAY_HOURS
    // [8] call tod_init 
    jsr tod_init
    // [9] phi from main main::@4 to main::@1 [phi:main/main::@4->main::@1]
    // main::@1
  __b1:
    // gotoxy(0,0)
    // [10] call gotoxy 
    // [47] phi from main::@1 to gotoxy [phi:main::@1->gotoxy]
    // [47] phi (byte) gotoxy::y#4 = (byte) 0 [phi:main::@1->gotoxy#0] -- vbuaa=vbuc1 
    lda #0
    jsr gotoxy
    // [11] phi from main::@1 to main::@2 [phi:main::@1->main::@2]
    // main::@2
    // tod_read()
    // [12] call tod_read 
    jsr tod_read
    // [13] (byte) tod_read::return_TENTHS#2 ← (byte) tod_read::return_TENTHS#0
    // [14] (byte) tod_read::return_SEC#2 ← (byte) tod_read::return_SEC#0
    // [15] (byte) tod_read::return_MIN#2 ← (byte) tod_read::return_MIN#0 -- vbuz1=vbuaa 
    sta.z tod_read.return_MIN
    // [16] (byte) tod_read::return_HOURS#2 ← (byte) tod_read::return_HOURS#0 -- vbuaa=vbuz1 
    lda.z tod_read.return_HOURS
    // main::@3
    // tod_str(tod_read())
    // [17] (byte) tod_str::tod_TENTHS#0 ← (byte) tod_read::return_TENTHS#2 -- vbuz1=vbuyy 
    sty.z tod_str.tod_TENTHS
    // [18] (byte) tod_str::tod_SEC#0 ← (byte) tod_read::return_SEC#2 -- vbuz1=vbuxx 
    stx.z tod_str.tod_SEC
    // [19] (byte) tod_str::tod_MIN#0 ← (byte) tod_read::return_MIN#2 -- vbuyy=vbuz1 
    ldy.z tod_read.return_MIN
    // [20] (byte) tod_str::tod_HOURS#0 ← (byte) tod_read::return_HOURS#2 -- vbuxx=vbuaa 
    tax
    // [21] call tod_str 
    jsr tod_str
    // [22] phi from main::@3 to main::@4 [phi:main::@3->main::@4]
    // main::@4
    // cputs(tod_str(tod_read()))
    // [23] call cputs 
    // [24] phi from main::@4 to cputs [phi:main::@4->cputs]
    jsr cputs
    jmp __b1
}
  // cputs
// Output a NUL-terminated string at the current cursor position
// cputs(byte* zp(2) s)
cputs: {
    .label s = 2
    // [25] phi from cputs to cputs::@1 [phi:cputs->cputs::@1]
    // [25] phi (byte*) conio_cursor_color#19 = (byte*) conio_cursor_color#1 [phi:cputs->cputs::@1#0] -- register_copy 
    // [25] phi (byte*) conio_cursor_text#19 = (byte*) conio_cursor_text#1 [phi:cputs->cputs::@1#1] -- register_copy 
    // [25] phi (byte) conio_cursor_y#20 = (byte) conio_cursor_y#1 [phi:cputs->cputs::@1#2] -- register_copy 
    // [25] phi (byte) conio_cursor_x#20 = (byte) 0 [phi:cputs->cputs::@1#3] -- vbuxx=vbuc1 
    ldx #0
    // [25] phi (to_nomodify byte*) cputs::s#2 = (const byte*) tod_buffer [phi:cputs->cputs::@1#4] -- pbuz1=pbuc1 
    lda #<tod_buffer
    sta.z s
    lda #>tod_buffer
    sta.z s+1
    // cputs::@1
  __b1:
    // c=*s++
    // [26] (byte) cputs::c#1 ← *((to_nomodify byte*) cputs::s#2) -- vbuaa=_deref_pbuz1 
    ldy #0
    lda (s),y
    // while(c=*s++)
    // [27] (to_nomodify byte*) cputs::s#0 ← ++ (to_nomodify byte*) cputs::s#2 -- pbuz1=_inc_pbuz1 
    inc.z s
    bne !+
    inc.z s+1
  !:
    // [28] if((byte) 0!=(byte) cputs::c#1) goto cputs::@2 -- vbuc1_neq_vbuaa_then_la1 
    cmp #0
    bne __b2
    // cputs::@return
    // }
    // [29] return 
    rts
    // cputs::@2
  __b2:
    // cputc(c)
    // [30] (byte) cputc::c#0 ← (byte) cputs::c#1
    // [31] call cputc 
    jsr cputc
    // [25] phi from cputs::@2 to cputs::@1 [phi:cputs::@2->cputs::@1]
    // [25] phi (byte*) conio_cursor_color#19 = (byte*) conio_cursor_color#17 [phi:cputs::@2->cputs::@1#0] -- register_copy 
    // [25] phi (byte*) conio_cursor_text#19 = (byte*) conio_cursor_text#17 [phi:cputs::@2->cputs::@1#1] -- register_copy 
    // [25] phi (byte) conio_cursor_y#20 = (byte) conio_cursor_y#18 [phi:cputs::@2->cputs::@1#2] -- register_copy 
    // [25] phi (byte) conio_cursor_x#20 = (byte) conio_cursor_x#18 [phi:cputs::@2->cputs::@1#3] -- register_copy 
    // [25] phi (to_nomodify byte*) cputs::s#2 = (to_nomodify byte*) cputs::s#0 [phi:cputs::@2->cputs::@1#4] -- register_copy 
    jmp __b1
}
  // cputc
// Output one character at the current cursor position
// Moves the cursor forward
// cputc(byte register(A) c)
cputc: {
    // if(c=='\n')
    // [32] if((byte) cputc::c#0==(byte) ' ') goto cputc::@1 -- vbuaa_eq_vbuc1_then_la1 
    cmp #'\n'
    beq __b1
    // cputc::@2
    // *conio_cursor_text++ = c
    // [33] *((byte*) conio_cursor_text#19) ← (byte) cputc::c#0 -- _deref_pbuz1=vbuaa 
    ldy #0
    sta (conio_cursor_text),y
    // *conio_cursor_text++ = c;
    // [34] (byte*) conio_cursor_text#26 ← ++ (byte*) conio_cursor_text#19 -- pbuz1=_inc_pbuz1 
    inc.z conio_cursor_text
    bne !+
    inc.z conio_cursor_text+1
  !:
    // *conio_cursor_color++ = conio_textcolor
    // [35] *((byte*) conio_cursor_color#19) ← (const nomodify byte) CONIO_TEXTCOLOR_DEFAULT -- _deref_pbuz1=vbuc1 
    lda #CONIO_TEXTCOLOR_DEFAULT
    ldy #0
    sta (conio_cursor_color),y
    // *conio_cursor_color++ = conio_textcolor;
    // [36] (byte*) conio_cursor_color#26 ← ++ (byte*) conio_cursor_color#19 -- pbuz1=_inc_pbuz1 
    inc.z conio_cursor_color
    bne !+
    inc.z conio_cursor_color+1
  !:
    // if(++conio_cursor_x==CONIO_WIDTH)
    // [37] (byte) conio_cursor_x#4 ← ++ (byte) conio_cursor_x#20 -- vbuxx=_inc_vbuxx 
    inx
    // [38] if((byte) conio_cursor_x#4!=(const nomodify byte) CONIO_WIDTH) goto cputc::@return -- vbuxx_neq_vbuc1_then_la1 
    cpx #CONIO_WIDTH
    bne __breturn
    // cputc::@3
    // if(++conio_cursor_y==CONIO_HEIGHT)
    // [39] (byte) conio_cursor_y#27 ← ++ (byte) conio_cursor_y#20 -- vbuz1=_inc_vbuz1 
    inc.z conio_cursor_y
    // [40] if((byte) conio_cursor_y#27!=(const nomodify byte) CONIO_HEIGHT) goto cputc::@return -- vbuz1_neq_vbuc1_then_la1 
    lda #CONIO_HEIGHT
    cmp.z conio_cursor_y
    bne __b2
    // [41] phi from cputc::@3 to cputc::@4 [phi:cputc::@3->cputc::@4]
    // cputc::@4
    // gotoxy(0,0)
    // [42] call gotoxy 
    // [47] phi from cputc::@4 to gotoxy [phi:cputc::@4->gotoxy]
    // [47] phi (byte) gotoxy::y#4 = (byte) 0 [phi:cputc::@4->gotoxy#0] -- vbuaa=vbuc1 
    lda #0
    jsr gotoxy
    // [43] phi from cputc::@1 cputc::@3 cputc::@4 to cputc::@return [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return]
  __b2:
    // [43] phi (byte*) conio_cursor_color#17 = (byte*) conio_cursor_color#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#0] -- register_copy 
    // [43] phi (byte*) conio_cursor_text#17 = (byte*) conio_cursor_text#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#1] -- register_copy 
    // [43] phi (byte) conio_cursor_y#18 = (byte) conio_cursor_y#1 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#2] -- register_copy 
    // [43] phi (byte) conio_cursor_x#18 = (byte) 0 [phi:cputc::@1/cputc::@3/cputc::@4->cputc::@return#3] -- vbuxx=vbuc1 
    ldx #0
    rts
    // [43] phi from cputc::@2 to cputc::@return [phi:cputc::@2->cputc::@return]
    // [43] phi (byte*) conio_cursor_color#17 = (byte*) conio_cursor_color#26 [phi:cputc::@2->cputc::@return#0] -- register_copy 
    // [43] phi (byte*) conio_cursor_text#17 = (byte*) conio_cursor_text#26 [phi:cputc::@2->cputc::@return#1] -- register_copy 
    // [43] phi (byte) conio_cursor_y#18 = (byte) conio_cursor_y#20 [phi:cputc::@2->cputc::@return#2] -- register_copy 
    // [43] phi (byte) conio_cursor_x#18 = (byte) conio_cursor_x#4 [phi:cputc::@2->cputc::@return#3] -- register_copy 
    // cputc::@return
  __breturn:
    // }
    // [44] return 
    rts
    // cputc::@1
  __b1:
    // gotoxy(0, conio_cursor_y+1)
    // [45] (byte) gotoxy::y#1 ← (byte) conio_cursor_y#20 + (byte) 1 -- vbuaa=vbuz1_plus_1 
    lda.z conio_cursor_y
    clc
    adc #1
    // [46] call gotoxy 
    // [47] phi from cputc::@1 to gotoxy [phi:cputc::@1->gotoxy]
    // [47] phi (byte) gotoxy::y#4 = (byte) gotoxy::y#1 [phi:cputc::@1->gotoxy#0] -- register_copy 
    jsr gotoxy
    jmp __b2
}
  // gotoxy
// Set the cursor to the specified position
// gotoxy(byte register(A) y)
gotoxy: {
    .label __8 = 7
    .label offset = 7
    .label __9 = $b
    .label __10 = 7
    // gotoxy::@1
    // if(y>=CONIO_HEIGHT)
    // [48] if((byte) gotoxy::y#4<(const nomodify byte) CONIO_HEIGHT) goto gotoxy::@3 -- vbuaa_lt_vbuc1_then_la1 
    cmp #CONIO_HEIGHT
    bcc __b2
    // [50] phi from gotoxy::@1 to gotoxy::@2 [phi:gotoxy::@1->gotoxy::@2]
    // [50] phi (byte) gotoxy::y#5 = (byte) 0 [phi:gotoxy::@1->gotoxy::@2#0] -- vbuaa=vbuc1 
    lda #0
    // [49] phi from gotoxy::@1 to gotoxy::@3 [phi:gotoxy::@1->gotoxy::@3]
    // gotoxy::@3
    // [50] phi from gotoxy::@3 to gotoxy::@2 [phi:gotoxy::@3->gotoxy::@2]
    // [50] phi (byte) gotoxy::y#5 = (byte) gotoxy::y#4 [phi:gotoxy::@3->gotoxy::@2#0] -- register_copy 
    // gotoxy::@2
  __b2:
    // conio_cursor_y = y
    // [51] (byte) conio_cursor_y#1 ← (byte) gotoxy::y#5 -- vbuz1=vbuaa 
    sta.z conio_cursor_y
    // (unsigned int)y*CONIO_WIDTH
    // [52] (word~) gotoxy::$8 ← (word)(byte) gotoxy::y#5 -- vwuz1=_word_vbuaa 
    sta.z __8
    lda #0
    sta.z __8+1
    // [53] (word~) gotoxy::$9 ← (word~) gotoxy::$8 << (byte) 2 -- vwuz1=vwuz2_rol_2 
    lda.z __8
    asl
    sta.z __9
    lda.z __8+1
    rol
    sta.z __9+1
    asl.z __9
    rol.z __9+1
    // [54] (word~) gotoxy::$10 ← (word~) gotoxy::$9 + (word~) gotoxy::$8 -- vwuz1=vwuz2_plus_vwuz1 
    lda.z __10
    clc
    adc.z __9
    sta.z __10
    lda.z __10+1
    adc.z __9+1
    sta.z __10+1
    // offset = (unsigned int)y*CONIO_WIDTH + x
    // [55] (word) gotoxy::offset#0 ← (word~) gotoxy::$10 << (byte) 3 -- vwuz1=vwuz1_rol_3 
    asl.z offset
    rol.z offset+1
    asl.z offset
    rol.z offset+1
    asl.z offset
    rol.z offset+1
    // CONIO_SCREEN_TEXT + offset
    // [56] (byte*) conio_cursor_text#1 ← (const nomodify byte*) CONIO_SCREEN_TEXT + (word) gotoxy::offset#0 -- pbuz1=pbuc1_plus_vwuz2 
    lda.z offset
    clc
    adc #<CONIO_SCREEN_TEXT
    sta.z conio_cursor_text
    lda.z offset+1
    adc #>CONIO_SCREEN_TEXT
    sta.z conio_cursor_text+1
    // CONIO_SCREEN_COLORS + offset
    // [57] (byte*) conio_cursor_color#1 ← (const nomodify byte*) CONIO_SCREEN_COLORS + (word) gotoxy::offset#0 -- pbuz1=pbuc1_plus_vwuz1 
    clc
    lda.z conio_cursor_color
    adc #<CONIO_SCREEN_COLORS
    sta.z conio_cursor_color
    lda.z conio_cursor_color+1
    adc #>CONIO_SCREEN_COLORS
    sta.z conio_cursor_color+1
    // gotoxy::@return
    // }
    // [58] return 
    rts
}
  // tod_str
// Convert time of day to a human-readable string "hh:mm:ss:10"
// tod_str(byte zp($a) tod_TENTHS, byte zp($d) tod_SEC, byte register(Y) tod_MIN, byte register(X) tod_HOURS)
tod_str: {
    .label tod_TENTHS = $a
    .label tod_SEC = $d
    // tod.HOURS>>4
    // [59] (byte~) tod_str::$0 ← (byte) tod_str::tod_HOURS#0 >> (byte) 4 -- vbuaa=vbuxx_ror_4 
    txa
    lsr
    lsr
    lsr
    lsr
    // '0'+(tod.HOURS>>4)
    // [60] (byte~) tod_str::$1 ← (byte) '0' + (byte~) tod_str::$0 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[0] = '0'+(tod.HOURS>>4)
    // [61] *((const byte*) tod_buffer) ← (byte~) tod_str::$1 -- _deref_pbuc1=vbuaa 
    sta tod_buffer
    // tod.HOURS&0x0f
    // [62] (byte~) tod_str::$2 ← (byte) tod_str::tod_HOURS#0 & (byte) $f -- vbuaa=vbuxx_band_vbuc1 
    txa
    and #$f
    // '0'+(tod.HOURS&0x0f)
    // [63] (byte~) tod_str::$3 ← (byte) '0' + (byte~) tod_str::$2 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[1] = '0'+(tod.HOURS&0x0f)
    // [64] *((const byte*) tod_buffer+(byte) 1) ← (byte~) tod_str::$3 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+1
    // tod.MIN>>4
    // [65] (byte~) tod_str::$4 ← (byte) tod_str::tod_MIN#0 >> (byte) 4 -- vbuaa=vbuyy_ror_4 
    tya
    lsr
    lsr
    lsr
    lsr
    // '0'+(tod.MIN>>4)
    // [66] (byte~) tod_str::$5 ← (byte) '0' + (byte~) tod_str::$4 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[3] = '0'+(tod.MIN>>4)
    // [67] *((const byte*) tod_buffer+(byte) 3) ← (byte~) tod_str::$5 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+3
    // tod.MIN&0x0f
    // [68] (byte~) tod_str::$6 ← (byte) tod_str::tod_MIN#0 & (byte) $f -- vbuaa=vbuyy_band_vbuc1 
    tya
    and #$f
    // '0'+(tod.MIN&0x0f)
    // [69] (byte~) tod_str::$7 ← (byte) '0' + (byte~) tod_str::$6 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[4] = '0'+(tod.MIN&0x0f)
    // [70] *((const byte*) tod_buffer+(byte) 4) ← (byte~) tod_str::$7 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+4
    // tod.SEC>>4
    // [71] (byte~) tod_str::$8 ← (byte) tod_str::tod_SEC#0 >> (byte) 4 -- vbuaa=vbuz1_ror_4 
    lda.z tod_SEC
    lsr
    lsr
    lsr
    lsr
    // '0'+(tod.SEC>>4)
    // [72] (byte~) tod_str::$9 ← (byte) '0' + (byte~) tod_str::$8 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[6] = '0'+(tod.SEC>>4)
    // [73] *((const byte*) tod_buffer+(byte) 6) ← (byte~) tod_str::$9 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+6
    // tod.SEC&0x0f
    // [74] (byte~) tod_str::$10 ← (byte) tod_str::tod_SEC#0 & (byte) $f -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and.z tod_SEC
    // '0'+(tod.SEC&0x0f)
    // [75] (byte~) tod_str::$11 ← (byte) '0' + (byte~) tod_str::$10 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[7] = '0'+(tod.SEC&0x0f)
    // [76] *((const byte*) tod_buffer+(byte) 7) ← (byte~) tod_str::$11 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+7
    // tod.TENTHS>>4
    // [77] (byte~) tod_str::$12 ← (byte) tod_str::tod_TENTHS#0 >> (byte) 4 -- vbuaa=vbuz1_ror_4 
    lda.z tod_TENTHS
    lsr
    lsr
    lsr
    lsr
    // '0'+(tod.TENTHS>>4)
    // [78] (byte~) tod_str::$13 ← (byte) '0' + (byte~) tod_str::$12 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[9] = '0'+(tod.TENTHS>>4)
    // [79] *((const byte*) tod_buffer+(byte) 9) ← (byte~) tod_str::$13 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+9
    // tod.TENTHS&0x0f
    // [80] (byte~) tod_str::$14 ← (byte) tod_str::tod_TENTHS#0 & (byte) $f -- vbuaa=vbuz1_band_vbuc1 
    lda #$f
    and.z tod_TENTHS
    // '0'+(tod.TENTHS&0x0f)
    // [81] (byte~) tod_str::$15 ← (byte) '0' + (byte~) tod_str::$14 -- vbuaa=vbuc1_plus_vbuaa 
    clc
    adc #'0'
    // tod_buffer[10] = '0'+(tod.TENTHS&0x0f)
    // [82] *((const byte*) tod_buffer+(byte) $a) ← (byte~) tod_str::$15 -- _deref_pbuc1=vbuaa 
    sta tod_buffer+$a
    // tod_str::@return
    // }
    // [83] return 
    rts
}
  // tod_read
// Read time of day
tod_read: {
    .label return_HOURS = $d
    .label return_MIN = 9
    // hours = CIA1->TOD_HOURS
    // [84] (byte) tod_read::return_HOURS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) -- vbuz1=_deref_pbuc1 
    // Reading sequence is important. TOD latches on reading hours until 10ths is read.
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS
    sta.z return_HOURS
    // mins = CIA1->TOD_MIN
    // [85] (byte) tod_read::return_MIN#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) -- vbuaa=_deref_pbuc1 
    lda CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_MIN
    // secs = CIA1->TOD_SEC
    // [86] (byte) tod_read::return_SEC#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) -- vbuxx=_deref_pbuc1 
    ldx CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_SEC
    // tenths = CIA1->TOD_10THS
    // [87] (byte) tod_read::return_TENTHS#0 ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) -- vbuyy=_deref_pbuc1 
    ldy CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_10THS
    // tod_read::@return
    // }
    // [88] return 
    rts
}
  // tod_init
// Initialize time-of-day clock
// This uses the MOS6526 CIA#1
// tod_init(byte zp(9) tod_TENTHS, byte zp($a) tod_SEC, byte register(X) tod_MIN, byte register(Y) tod_HOURS)
tod_init: {
    .label tod_TENTHS = 9
    .label tod_SEC = $a
    // CIA1->TIMER_A_CONTROL |= 0x80
    // [89] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL) | (byte) $80 -- _deref_pbuc1=_deref_pbuc2_bor_vbuc3 
    // Set 50hz (this assumes PAL!) (bit7=1)
    lda #$80
    ora CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL
    // CIA1->TIMER_B_CONTROL &= 0x7f
    // [90] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) ← *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL) & (byte) $7f -- _deref_pbuc1=_deref_pbuc2_band_vbuc3 
    // Writing TOD clock (bit7=0)
    lda #$7f
    and CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL
    // CIA1->TOD_HOURS = tod.HOURS
    // [91] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS) ← (byte) tod_init::tod_HOURS#0 -- _deref_pbuc1=vbuyy 
    // Reset TOD clock
    // Writing sequence is important. TOD stops when hours is written and starts when 10ths is written.
    sty CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS
    // CIA1->TOD_MIN = tod.MIN
    // [92] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN) ← (byte) tod_init::tod_MIN#0 -- _deref_pbuc1=vbuxx 
    stx CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_MIN
    // CIA1->TOD_SEC = tod.SEC
    // [93] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC) ← (byte) tod_init::tod_SEC#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_SEC
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_SEC
    // CIA1->TOD_10THS = tod.TENTHS
    // [94] *((byte*)(const nomodify struct MOS6526_CIA*) CIA1+(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS) ← (byte) tod_init::tod_TENTHS#0 -- _deref_pbuc1=vbuz1 
    lda.z tod_TENTHS
    sta CIA1+OFFSET_STRUCT_MOS6526_CIA_TOD_10THS
    // tod_init::@return
    // }
    // [95] return 
    rts
}
  // File Data
  // The buffer used by tod_str()
  tod_buffer: .text "00:00:00:00"
  .byte 0
  // Time of Day 00:00:00:00
  TOD_ZERO: .byte 0, 0, 0, 0

