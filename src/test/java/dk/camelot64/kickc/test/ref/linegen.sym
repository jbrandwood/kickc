(label) @18
(label) @begin
(label) @end
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word/dword/signed dword) 1024
(byte*) char_cursor
(byte*) char_cursor#1 char_cursor zp ZP_WORD:5 101.0
(byte*) char_cursor#11 char_cursor zp ZP_WORD:5 5.449999999999998
(byte*) char_cursor#2 char_cursor zp ZP_WORD:5 43.85714285714286
(byte*) char_cursor#32 char_cursor zp ZP_WORD:5 4.0
(byte*) char_cursor#45 char_cursor zp ZP_WORD:5 5.666666666666667
(byte*) char_cursor#47 char_cursor zp ZP_WORD:5 11.0
(byte*~) char_cursor#51 char_cursor zp ZP_WORD:5 22.0
(word()) div16u((word) div16u::dividend , (word) div16u::divisor)
(label) div16u::@2
(label) div16u::@return
(word) div16u::dividend
(word) div16u::divisor
(const word) div16u::divisor#0 divisor = (const word) lin16u_gen::length#0-(byte/signed byte/word/signed word/dword/signed dword) 1
(word) div16u::return
(word) div16u::return#0 return zp ZP_WORD:13 1.3333333333333333
(word) div16u::return#2 return zp ZP_WORD:13 4.0
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 22.0
(byte~) divr16u::$2 reg byte a 22.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@6
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#1 dividend zp ZP_WORD:7 2.75
(word) divr16u::dividend#3 dividend zp ZP_WORD:7 5.0
(word) divr16u::dividend#5 dividend zp ZP_WORD:7 2.0
(word) divr16u::divisor
(word) divr16u::divisor#6 divisor zp ZP_WORD:3 1.375
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 16.5
(byte) divr16u::i#2 reg byte x 1.6923076923076923
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp ZP_WORD:13 16.5
(word) divr16u::quotient#2 quotient zp ZP_WORD:13 11.0
(word) divr16u::quotient#3 quotient zp ZP_WORD:13 2.75
(word) divr16u::rem
(word) divr16u::rem#1 rem zp ZP_WORD:5 8.25
(word) divr16u::rem#10 rem zp ZP_WORD:5 4.0
(word) divr16u::rem#11 rem zp ZP_WORD:5 11.666666666666666
(word) divr16u::rem#2 rem zp ZP_WORD:5 22.0
(word) divr16u::rem#3 rem zp ZP_WORD:5 22.0
(word) divr16u::rem#4 rem zp ZP_WORD:5 4.0
(word) divr16u::rem#5 rem zp ZP_WORD:5 24.0
(word) divr16u::rem#6 rem zp ZP_WORD:5 11.0
(word) divr16u::return
(word) divr16u::return#0 return zp ZP_WORD:13 4.0
(word) divr16u::return#1 return zp ZP_WORD:13 5.285714285714286
(word) divr16u::return#3 return zp ZP_WORD:13 4.0
(void()) lin16u_gen((word) lin16u_gen::min , (word) lin16u_gen::max , (word*) lin16u_gen::lintab , (word) lin16u_gen::length)
(word~) lin16u_gen::$5 $5 zp ZP_WORD:7 22.0
(label) lin16u_gen::@1
(label) lin16u_gen::@3
(label) lin16u_gen::@4
(label) lin16u_gen::@return
(word) lin16u_gen::ampl
(const word) lin16u_gen::ampl#0 ampl = (const word) lin16u_gen::max#0-(const word) lin16u_gen::min#0
(word) lin16u_gen::i
(word) lin16u_gen::i#1 i zp ZP_WORD:5 16.5
(word) lin16u_gen::i#2 i zp ZP_WORD:5 4.4
(word) lin16u_gen::length
(const word) lin16u_gen::length#0 length = (byte/signed byte/word/signed word/dword/signed dword) 20
(word*) lin16u_gen::lintab
(word*) lin16u_gen::lintab#1 lintab zp ZP_WORD:3 7.333333333333333
(word*) lin16u_gen::lintab#2 lintab zp ZP_WORD:3 8.25
(word) lin16u_gen::max
(const word) lin16u_gen::max#0 max = (word/signed word/dword/signed dword) 29793
(word) lin16u_gen::min
(const word) lin16u_gen::min#0 min = (word/signed word/dword/signed dword) 557
(dword) lin16u_gen::step
(dword) lin16u_gen::step#0 step zp ZP_DWORD:17 1.625
(word) lin16u_gen::stepf
(word) lin16u_gen::stepf#0 stepf zp ZP_WORD:13 4.0
(word) lin16u_gen::stepi
(word) lin16u_gen::stepi#0 stepi zp ZP_WORD:15 0.8
(dword) lin16u_gen::val
(dword) lin16u_gen::val#1 val zp ZP_DWORD:9 5.5
(dword) lin16u_gen::val#2 val zp ZP_DWORD:9 11.0
(byte*) line_cursor
(byte*) line_cursor#1 line_cursor zp ZP_WORD:3 46.42857142857143
(byte*) line_cursor#19 line_cursor zp ZP_WORD:3 1.4444444444444446
(byte*) line_cursor#9 line_cursor zp ZP_WORD:3 204.0
(void()) main()
(label) main::@1
(label) main::@3
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(byte) main::i
(byte) main::i#1 i zp ZP_BYTE:2 11.0
(byte) main::i#2 i zp ZP_BYTE:2 4.888888888888889
(word[20]) main::lintab
(const word[20]) main::lintab#0 lintab = { fill( 20, 0) }
(const string) main::str str = (string) " @"
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 reg byte x 4.0
(byte) print_byte::b#1 reg byte x 4.0
(byte) print_byte::b#2 reg byte x 22.0
(byte) print_byte::b#3 reg byte x 4.75
(byte[]) print_byte::hextab
(const string) print_byte::hextab#0 hextab = (string) "0123456789abcdef"
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#2 reg byte a 6.0
(void()) print_cls()
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#1 sc zp ZP_WORD:3 16.5
(byte*) print_cls::sc#2 sc zp ZP_WORD:3 16.5
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp ZP_WORD:7 202.0
(byte*) print_str::str#2 str zp ZP_WORD:7 101.0
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#0 w zp ZP_WORD:7 5.0
(word) rem16u
(word) rem16u#13 rem16u zp ZP_WORD:5 0.4444444444444444

zp ZP_BYTE:2 [ main::i#2 main::i#1 ]
zp ZP_WORD:3 [ line_cursor#9 line_cursor#19 line_cursor#1 print_cls::sc#2 print_cls::sc#1 lin16u_gen::lintab#2 lin16u_gen::lintab#1 divr16u::divisor#6 ]
reg byte x [ print_byte::b#3 print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp ZP_WORD:5 [ char_cursor#32 char_cursor#45 char_cursor#47 char_cursor#51 char_cursor#2 char_cursor#11 char_cursor#1 lin16u_gen::i#2 lin16u_gen::i#1 divr16u::rem#5 divr16u::rem#10 divr16u::rem#4 divr16u::rem#11 divr16u::rem#6 divr16u::rem#1 divr16u::rem#2 divr16u::rem#3 rem16u#13 ]
zp ZP_WORD:7 [ print_str::str#2 print_str::str#0 divr16u::dividend#3 divr16u::dividend#5 divr16u::dividend#1 print_word::w#0 lin16u_gen::$5 ]
zp ZP_DWORD:9 [ lin16u_gen::val#2 lin16u_gen::val#1 ]
zp ZP_WORD:13 [ divr16u::quotient#3 divr16u::return#1 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#3 lin16u_gen::stepf#0 divr16u::return#0 div16u::return#0 div16u::return#2 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]
zp ZP_WORD:15 [ lin16u_gen::stepi#0 ]
zp ZP_DWORD:17 [ lin16u_gen::step#0 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
