
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [1] (byte) main::i#2 ← phi( main/(byte) 0 main::@3/(byte) main::i#1 )
  [2] (byte) sum::b#0 ← (byte) main::i#2 + (byte) 1
  [3] (byte) sum::c#0 ← (byte) main::i#2 + (byte) 2
  [4] (byte) sum::a#0 ← (byte) main::i#2
  [5] call sum 
  [6] (byte) sum::return#0 ← (byte) sum::return#1
  to:main::@2
main::@2: scope:[main]  from main::@1
  [7] (byte~) main::$2 ← (byte) sum::return#0
  [8] *((const byte*) SCREEN + (byte) main::i#2) ← (byte~) main::$2
  [9] (byte) sum2::b#0 ← (byte) main::i#2 + (byte) 1
  [10] (byte) sum2::c#0 ← (byte) main::i#2 + (byte) 2
  [11] (byte) sum2::a#0 ← (byte) main::i#2
  [12] call sum2 
  [13] (byte) sum2::return#0 ← (byte) sum2::return#1
  to:main::@3
main::@3: scope:[main]  from main::@2
  [14] (byte~) main::$5 ← (byte) sum2::return#0
  [15] *((const byte*) SCREEN2 + (byte) main::i#2) ← (byte~) main::$5
  [16] (byte) main::i#1 ← ++ (byte) main::i#2
  [17] if((byte) main::i#1!=(byte) $b) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  [18] return 
  to:@return

(byte()) sum((byte) sum::a , (byte) sum::b , (byte) sum::c)
sum: scope:[sum]  from main::@1
  [19] (byte~) sum::$0 ← (byte) sum::a#0 + (byte) sum::b#0
  [20] (byte) sum::return#1 ← (byte~) sum::$0 + (byte) sum::c#0
  to:sum::@return
sum::@return: scope:[sum]  from sum
  [21] return 
  to:@return

(byte()) sum2((byte) sum2::a , (byte) sum2::b , (byte) sum2::c)
sum2: scope:[sum2]  from main::@2
  [22] (byte~) sum2::$0 ← (byte) sum2::a#0 + (byte) sum2::b#0
  [23] (byte) sum2::return#1 ← (byte~) sum2::$0 + (byte) sum2::c#0
  to:sum2::@return
sum2::@return: scope:[sum2]  from sum2
  [24] return 
  to:@return
