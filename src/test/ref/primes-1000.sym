(label) @1
(label) @begin
(label) @end
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const word*) RADIX_DECIMAL_VALUES[]  = { (word) $2710, (word) $3e8, (word) $64, (word) $a }
(const byte) SIZEOF_SIGNED_WORD = (byte) 2
(const byte*) decimal_digits[(number) 6]  = { fill( 6, 0) }
(signed word()) div16s((signed word) div16s::dividend , (signed word) div16s::divisor)
(label) div16s::@return
(signed word) div16s::dividend
(signed word) div16s::dividend#0 dividend zp[2]:8 3667.333333333333
(signed word) div16s::divisor
(signed word) div16s::divisor#0 divisor zp[2]:13 5501.0
(signed word) div16s::return
(signed word()) divr16s((signed word) divr16s::dividend , (signed word) divr16s::divisor , (signed word) divr16s::rem)
(label) divr16s::@1
(label) divr16s::@2
(label) divr16s::@3
(label) divr16s::@4
(label) divr16s::@5
(label) divr16s::@6
(label) divr16s::@7
(label) divr16s::@8
(label) divr16s::@9
(label) divr16s::@return
(signed word) divr16s::dividend
(signed word) divr16s::dividend#0 dividend zp[2]:25 70001.0
(word) divr16s::dividendu
(signed word) divr16s::dividendu#1 dividendu zp[2]:25 100001.0
(word) divr16s::dividendu#3 dividendu zp[2]:25 42857.57142857143
(word) divr16s::dividendu#7 dividendu zp[2]:25 200002.0
(word) divr16s::dividendu#8 dividendu zp[2]:25 200002.0
(signed word) divr16s::divisor
(signed word) divr16s::divisor#0 divisor zp[2]:13 30000.428571428572
(word) divr16s::divisoru
(signed word) divr16s::divisoru#1 divisoru zp[2]:13 50000.5
(word) divr16s::divisoru#3 divisoru zp[2]:13 150001.5
(word) divr16s::divisoru#4 divisoru zp[2]:13 200002.0
(word) divr16s::divisoru#5 divisoru zp[2]:13 200002.0
(byte) divr16s::neg
(byte) divr16s::neg#2 reg byte y 100001.0
(byte) divr16s::neg#3 reg byte y 50000.5
(byte) divr16s::neg#4 reg byte y 75000.75
(signed word) divr16s::rem
(word) divr16s::remu
(word) divr16s::resultu
(signed word) divr16s::return
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 2.000000002E9
(byte~) divr16u::$2 reg byte a 2.000000002E9
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@6
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp[2]:25 2.5000000025E8
(word) divr16u::dividend#1 dividend zp[2]:25 366667.3333333334
(word) divr16u::dividend#2 dividend zp[2]:25 4.2871428628571427E8
(word) divr16u::divisor
(word) divr16u::divisor#0 divisor zp[2]:13 1.1765294135294119E8
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 1.5000000015E9
(byte) divr16u::i#2 reg byte x 1.53846154E8
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp[2]:27 1.5000000015E9
(word) divr16u::quotient#2 quotient zp[2]:27 1.000000001E9
(word) divr16u::quotient#3 quotient zp[2]:27 2.5000000025E8
(word) divr16u::rem
(word) divr16u::rem#0 rem zp[2]:15 7.5000000075E8
(word) divr16u::rem#1 rem zp[2]:15 2.000000002E9
(word) divr16u::rem#10 rem zp[2]:15 1.0003333346666666E9
(word) divr16u::rem#2 rem zp[2]:15 2.000000002E9
(word) divr16u::rem#4 rem zp[2]:15 2.000000002E9
(word) divr16u::rem#5 rem zp[2]:15 1.000000001E9
(word) divr16u::return
(word) divr16u::return#0 return zp[2]:27 1.000000001E9
(signed word) lastprime
(signed word) lastprime#10 lastprime zp[2]:4 44.888888888888886
(signed word) lastprime#15 lastprime zp[2]:4 8.08
(signed word) lasttest
(signed word) lasttest#11 lasttest zp[2]:2 36.72727272727273
(signed word) lasttest#17 lasttest zp[2]:2 59.27272727272727
(signed word) lasttest#2 lasttest zp[2]:2 202.0
(void()) main()
(signed dword~) main::$0 zp[4]:17 101.0
(signed word~) main::$12 zp[2]:25 202.0
(signed word~) main::$13 zp[2]:13 1001.0
(signed word~) main::$14 zp[2]:29 202.0
(signed word~) main::$15 zp[2]:27 202.0
(signed word*~) main::$16 zp[2]:25 202.0
(signed word*~) main::$17 zp[2]:13 2002.0
(signed word*~) main::$18 zp[2]:29 202.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(signed word) main::p
(signed word) main::p#0 p zp[2]:25 151.5
(signed dword()) mul16s((signed word) mul16s::a , (signed word) mul16s::b)
(word~) mul16s::$11 zp[2]:31 2002.0
(word~) mul16s::$12 zp[2]:33 2002.0
(word~) mul16s::$6 zp[2]:31 2002.0
(word~) mul16s::$9 zp[2]:33 2002.0
(label) mul16s::@1
(label) mul16s::@2
(label) mul16s::@3
(label) mul16s::@4
(label) mul16s::@5
(label) mul16s::@return
(signed word) mul16s::a
(signed word) mul16s::a#0 a zp[2]:25 78.71428571428571
(signed word) mul16s::b
(signed word) mul16s::b#0 b zp[2]:25 100.18181818181819
(dword) mul16s::m
(dword) mul16s::m#0 m zp[4]:17 1001.0
(dword) mul16s::m#1 m zp[4]:17 2002.0
(dword) mul16s::m#2 m zp[4]:17 2002.0
(dword) mul16s::m#4 m zp[4]:17 2002.0
(dword) mul16s::m#5 m zp[4]:17 1251.25
(signed dword) mul16s::return
(signed dword) mul16s::return#0 return zp[4]:17 367.33333333333337
(signed dword) mul16s::return#2 return zp[4]:17 202.0
(dword()) mul16u((word) mul16u::a , (word) mul16u::b)
(byte~) mul16u::$1 reg byte a 2000002.0
(label) mul16u::@1
(label) mul16u::@2
(label) mul16u::@3
(label) mul16u::@4
(label) mul16u::@return
(word) mul16u::a
(word) mul16u::a#0 a zp[2]:27 1000001.0
(word) mul16u::a#1 a zp[2]:27 3667.333333333333
(word) mul16u::a#2 a zp[2]:27 668334.1666666667
(word) mul16u::b
(word) mul16u::b#0 b zp[2]:31 1001.0
(dword) mul16u::mb
(dword) mul16u::mb#0 mb zp[4]:21 20002.0
(dword) mul16u::mb#1 mb zp[4]:21 2000002.0
(dword) mul16u::mb#2 mb zp[4]:21 430000.57142857136
(dword) mul16u::res
(dword) mul16u::res#1 res zp[4]:17 2000002.0
(dword) mul16u::res#2 res zp[4]:17 500167.3333333334
(dword) mul16u::res#6 res zp[4]:17 1000001.0
(dword) mul16u::return
(dword) mul16u::return#2 return zp[4]:17 2002.0
(const signed word*) primenum[(number) $3e8]  = { fill( $3e8, 0) }
(signed word) primeptr
(signed word) primeptr#11 primeptr zp[2]:6 1501.5
(signed word) primeptr#2 primeptr zp[2]:6 1001.0
(signed word) primeptr#6 primeptr zp[2]:6 500.5
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 2000002.0
(byte) print_char::ch#4 reg byte a 1.1000002E7
(byte*) print_char_cursor
(byte*) print_char_cursor#19 print_char_cursor zp[2]:10 1.0501053E7
(byte*) print_char_cursor#20 print_char_cursor zp[2]:10 500009.2727272727
(byte*) print_char_cursor#42 print_char_cursor zp[2]:10 63.72727272727272
(byte*) print_line_cursor
(byte*) print_screen
(void()) print_sint_decimal((signed word) print_sint_decimal::w)
(label) print_sint_decimal::@1
(label) print_sint_decimal::@2
(label) print_sint_decimal::@3
(label) print_sint_decimal::@4
(label) print_sint_decimal::@5
(label) print_sint_decimal::@return
(signed word) print_sint_decimal::w
(signed word) print_sint_decimal::w#0 w zp[2]:25 2002.0
(signed word) print_sint_decimal::w#1 w zp[2]:25 517.3333333333334
(signed word) print_sint_decimal::w#4 w zp[2]:25 2002.0
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:13 2000002.0
(byte*) print_str::str#2 str zp[2]:13 1000001.0
(signed word) rem16s
(signed word) rem16s#2 rem16s zp[2]:15 200002.0
(signed word) rem16s#29 rem16s zp[2]:15 200002.0
(signed word) rem16s#3 rem16s zp[2]:15 33500.5
(word) rem16u
(word) rem16u#1 rem16u zp[2]:15 250000.25
(signed word) testnum
(signed word) testnum#10 testnum zp[2]:8 300.54545454545456
(signed word) testnum#13 testnum zp[2]:8 23.307692307692307
(signed word) testnum#16 testnum zp[2]:8 513.125
(signed word) testnum#2 testnum zp[2]:8 202.0
(signed word) testnum#3 testnum zp[2]:8 2002.0
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(byte~) utoa::$10 reg byte a 2000002.0
(byte~) utoa::$11 reg byte a 20002.0
(label) utoa::@1
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@return
(byte*) utoa::buffer
(byte*) utoa::buffer#11 buffer zp[2]:13 287143.2857142857
(byte*) utoa::buffer#14 buffer zp[2]:13 1500001.5
(byte*) utoa::buffer#3 buffer zp[2]:13 20002.0
(byte*) utoa::buffer#4 buffer zp[2]:13 2000002.0
(byte) utoa::digit
(byte) utoa::digit#1 digit zp[1]:12 2000002.0
(byte) utoa::digit#2 digit zp[1]:12 285714.5714285714
(word) utoa::digit_value
(word) utoa::digit_value#0 digit_value zp[2]:31 600000.6000000001
(word*) utoa::digit_values
(byte) utoa::max_digits
(const byte) utoa::max_digits#1 max_digits = (byte) 5
(byte) utoa::radix
(byte) utoa::started
(byte) utoa::started#2 reg byte x 500000.5
(byte) utoa::started#4 reg byte x 1000001.0
(word) utoa::value
(word) utoa::value#0 value zp[2]:25 1000001.0
(word) utoa::value#1 value zp[2]:25 5501.0
(word) utoa::value#2 value zp[2]:25 572857.857142857
(word) utoa::value#6 value zp[2]:25 1500001.5
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(label) utoa_append::@1
(label) utoa_append::@2
(label) utoa_append::@3
(label) utoa_append::@return
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0 buffer zp[2]:13 1375000.25
(byte) utoa_append::digit
(byte) utoa_append::digit#1 reg byte x 1.0000000001E10
(byte) utoa_append::digit#2 reg byte x 1.00050000015E10
(word) utoa_append::return
(word) utoa_append::return#0 return zp[2]:25 2000002.0
(word) utoa_append::sub
(word) utoa_append::sub#0 sub zp[2]:31 3.3335000005E9
(word) utoa_append::value
(word) utoa_append::value#0 value zp[2]:25 3666667.333333333
(word) utoa_append::value#1 value zp[2]:25 2.0000000002E10
(word) utoa_append::value#2 value zp[2]:25 5.001833334166666E9

zp[2]:2 [ lasttest#11 lasttest#17 lasttest#2 ]
zp[2]:4 [ lastprime#15 lastprime#10 ]
zp[2]:6 [ primeptr#6 primeptr#11 primeptr#2 ]
zp[2]:8 [ testnum#16 testnum#2 testnum#13 testnum#10 testnum#3 div16s::dividend#0 ]
reg byte a [ print_char::ch#4 print_char::ch#0 ]
zp[2]:10 [ print_char_cursor#19 print_char_cursor#42 print_char_cursor#20 ]
zp[1]:12 [ utoa::digit#2 utoa::digit#1 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
zp[2]:13 [ divr16s::divisoru#3 divr16s::divisoru#4 divr16s::divisoru#5 divr16s::divisor#0 divr16u::divisor#0 divr16s::divisoru#1 div16s::divisor#0 main::$13 main::$17 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 print_str::str#2 print_str::str#0 ]
reg byte y [ divr16s::neg#4 divr16s::neg#2 divr16s::neg#3 ]
zp[2]:15 [ rem16s#3 rem16s#29 rem16s#2 rem16u#1 divr16u::rem#4 divr16u::rem#10 divr16u::rem#5 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
zp[4]:17 [ mul16s::m#4 mul16s::m#5 mul16s::m#1 mul16s::m#0 mul16s::m#2 mul16u::return#2 mul16s::return#0 mul16u::res#2 mul16u::res#6 mul16u::res#1 mul16s::return#2 main::$0 ]
zp[4]:21 [ mul16u::mb#2 mul16u::mb#0 mul16u::mb#1 ]
zp[2]:25 [ main::$12 main::$16 main::p#0 mul16s::a#0 mul16s::b#0 divr16s::dividendu#3 divr16s::dividendu#7 divr16s::dividendu#8 divr16u::dividend#2 divr16u::dividend#1 divr16u::dividend#0 divr16s::dividend#0 divr16s::dividendu#1 print_sint_decimal::w#4 print_sint_decimal::w#0 print_sint_decimal::w#1 utoa::value#2 utoa::value#6 utoa::value#1 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 ]
zp[2]:27 [ main::$15 mul16u::a#2 mul16u::a#1 mul16u::a#0 divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 ]
zp[2]:29 [ main::$14 main::$18 ]
reg byte a [ utoa::$11 ]
reg byte a [ utoa::$10 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
zp[2]:31 [ mul16s::$6 mul16s::$11 mul16u::b#0 utoa::digit_value#0 utoa_append::sub#0 ]
zp[2]:33 [ mul16s::$9 mul16s::$12 ]
reg byte a [ mul16u::$1 ]
