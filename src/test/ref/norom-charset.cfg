
(void()) main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@4
  [1] (byte*) main::charset#2 ← phi( main/(const byte*) CHARSET+(byte) 8 main::@4/(byte*) main::charset#1 )
  [1] (byte) main::c#2 ← phi( main/(byte) 0 main::@4/(byte) main::c#1 )
  [2] if((byte) main::c#2!=(byte) 4) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [3] *((const byte*) VIC_MEMORY) ← (byte)(word)(const byte*) SCREEN/(byte) $40|(word)(const byte*) CHARSET/(word) $400
  to:main::@return
main::@return: scope:[main]  from main::@3
  [4] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [5] (byte~) main::$7 ← (byte) main::c#2 << (byte) 1
  [6] (byte*) gen_char3::dst#0 ← (byte*) main::charset#2
  [7] (word) gen_char3::spec#0 ← *((const word*) charset_spec_row + (byte~) main::$7)
  [8] call gen_char3 
  to:main::@4
main::@4: scope:[main]  from main::@2
  [9] (byte*) main::charset#1 ← (byte*) main::charset#2 + (byte) 8
  [10] (byte) main::c#1 ← ++ (byte) main::c#2
  to:main::@1

(void()) gen_char3((byte*) gen_char3::dst , (word) gen_char3::spec)
gen_char3: scope:[gen_char3]  from main::@2
  [11] phi()
  to:gen_char3::@1
gen_char3::@1: scope:[gen_char3]  from gen_char3 gen_char3::@5
  [12] (byte) gen_char3::r#6 ← phi( gen_char3/(byte) 0 gen_char3::@5/(byte) gen_char3::r#1 )
  [12] (word) gen_char3::spec#4 ← phi( gen_char3/(word) gen_char3::spec#0 gen_char3::@5/(word) gen_char3::spec#1 )
  to:gen_char3::@2
gen_char3::@2: scope:[gen_char3]  from gen_char3::@1 gen_char3::@3
  [13] (byte) gen_char3::c#2 ← phi( gen_char3::@1/(byte) 0 gen_char3::@3/(byte) gen_char3::c#1 )
  [13] (byte) gen_char3::b#4 ← phi( gen_char3::@1/(byte) 0 gen_char3::@3/(byte) gen_char3::b#1 )
  [13] (word) gen_char3::spec#2 ← phi( gen_char3::@1/(word) gen_char3::spec#4 gen_char3::@3/(word) gen_char3::spec#1 )
  [14] (byte~) gen_char3::$0 ← > (word) gen_char3::spec#2
  [15] (byte~) gen_char3::$1 ← (byte~) gen_char3::$0 & (byte) $80
  [16] if((byte~) gen_char3::$1==(byte) 0) goto gen_char3::@3
  to:gen_char3::@4
gen_char3::@4: scope:[gen_char3]  from gen_char3::@2
  [17] (byte) gen_char3::b#2 ← (byte) gen_char3::b#4 | (byte) 1
  to:gen_char3::@3
gen_char3::@3: scope:[gen_char3]  from gen_char3::@2 gen_char3::@4
  [18] (byte) gen_char3::b#3 ← phi( gen_char3::@2/(byte) gen_char3::b#4 gen_char3::@4/(byte) gen_char3::b#2 )
  [19] (byte) gen_char3::b#1 ← (byte) gen_char3::b#3 << (byte) 1
  [20] (word) gen_char3::spec#1 ← (word) gen_char3::spec#2 << (byte) 1
  [21] (byte) gen_char3::c#1 ← ++ (byte) gen_char3::c#2
  [22] if((byte) gen_char3::c#1!=(byte) 3) goto gen_char3::@2
  to:gen_char3::@5
gen_char3::@5: scope:[gen_char3]  from gen_char3::@3
  [23] *((byte*) gen_char3::dst#0 + (byte) gen_char3::r#6) ← (byte) gen_char3::b#1
  [24] (byte) gen_char3::r#1 ← ++ (byte) gen_char3::r#6
  [25] if((byte) gen_char3::r#1!=(byte) 5) goto gen_char3::@1
  to:gen_char3::@return
gen_char3::@return: scope:[gen_char3]  from gen_char3::@5
  [26] return 
  to:@return
