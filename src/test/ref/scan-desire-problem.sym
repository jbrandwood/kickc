(label) @1
(label) @begin
(label) @end
(const byte*) BGCOL1 = (byte*) 53281
(const byte*) BGCOL2 = (byte*) 53282
(const byte*) BGCOL3 = (byte*) 53283
(const byte*) BGCOL4 = (byte*) 53284
(const byte) BLACK = (byte) 0
(const byte) BLUE = (byte) 6
(const byte*) BORDERCOL = (byte*) 53280
(const byte*) D018 = (byte*) 53272
(const byte) GREEN = (byte) 5
(const byte) RED = (byte) 2
(const byte*) SPRITES_COLS = (byte*) 53287
(const byte*) SPRITES_ENABLE = (byte*) 53269
(const byte*) SPRITES_EXPAND_X = (byte*) 53277
(const byte*) SPRITES_EXPAND_Y = (byte*) 53271
(const byte*) SPRITES_MC = (byte*) 53276
(const byte*) SPRITES_XMSB = (byte*) 53264
(const byte) WHITE = (byte) 1
(const byte) YELLOW = (byte) 7
(const byte*) charset = (byte*) 8192
(const byte*) colors = (byte*) 55296
(void()) draw_block((byte) draw_block::tileno , (byte) draw_block::x , (byte) draw_block::y , (byte) draw_block::color)
(byte*~) draw_block::$11 zp[2]:6 20002.0
(byte*~) draw_block::$12 zp[2]:8 20002.0
(byte*~) draw_block::$13 zp[2]:10 20002.0
(byte*~) draw_block::$14 zp[2]:12 20002.0
(byte*~) draw_block::$15 zp[2]:14 20002.0
(byte*~) draw_block::$16 zp[2]:16 20002.0
(byte*~) draw_block::$17 zp[2]:18 20002.0
(byte*~) draw_block::$18 zp[2]:20 20002.0
(label) draw_block::@1
(label) draw_block::@return
(byte) draw_block::color
(byte) draw_block::drawtile
(byte) draw_block::drawtile#0 reg byte x 10001.0
(byte) draw_block::tileno
(byte) draw_block::tileno#0 reg byte y 3667.333333333333
(byte) draw_block::tileno#1 reg byte y 2500.25
(byte) draw_block::x
(byte) draw_block::x#0 reg byte x 3667.333333333333
(word) draw_block::x1
(word) draw_block::x1#0 x1 zp[2]:20 3333.6666666666665
(byte) draw_block::y
(byte) draw_block::y#0 y zp[1]:3 3667.333333333333
(byte) draw_block::y#1 reg byte a 20002.0
(word) draw_block::z
(word) draw_block::z#0 z zp[2]:4 20002.0
(word) draw_block::z#1 z_1 zp[2]:20 5625.5625
(void()) init()
(label) init::@1
(label) init::@2
(label) init::@3
(label) init::@return
(label) init::toD0181
(byte*) init::toD0181_gfx
(byte) init::toD0181_return
(const byte) init::toD0181_return#0 toD0181_return = >(word)(const byte*) screen&(word) $3fff*(byte) 4|>(word)(const byte*) charset/(byte) 4&(byte) $f
(byte*) init::toD0181_screen
(void()) init_sprites()
(label) init_sprites::@return
(const byte*) level_address = (byte*) 12288
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(byte) main::tile
(byte) main::tile#0 reg byte y 2002.0
(byte) main::x
(byte) main::x#1 x zp[1]:2 202.0
(byte) main::x#2 x zp[1]:2 209.54545454545456
(byte) main::y
(byte) main::y#1 y zp[1]:3 2002.0
(byte) main::y#2 y zp[1]:3 625.625
(byte) main::z
(byte) main::z#0 reg byte a 2002.0
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1428.7142857142858
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:4 20002.0
(byte*) memset::dst#2 dst zp[2]:4 13668.333333333332
(byte*) memset::dst#4 dst zp[2]:4 2002.0
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:20 1833.6666666666665
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:4
(word()) mul8u((byte) mul8u::a , (byte) mul8u::b)
(byte~) mul8u::$1 reg byte a 2.00000002E8
(label) mul8u::@1
(label) mul8u::@2
(label) mul8u::@3
(label) mul8u::@4
(label) mul8u::@return
(byte) mul8u::a
(byte) mul8u::a#0 reg byte x 1.00000001E8
(byte) mul8u::a#1 reg byte x 55001.0
(byte) mul8u::a#2 reg byte x 6.668333416666667E7
(byte) mul8u::b
(const byte) mul8u::b#0 b = (byte) $28
(word) mul8u::mb
(word) mul8u::mb#1 mb zp[2]:6 2.00000002E8
(word) mul8u::mb#2 mb zp[2]:6 4.285714328571428E7
(word) mul8u::res
(word) mul8u::res#1 res zp[2]:4 2.00000002E8
(word) mul8u::res#2 res zp[2]:4 5.0001667333333336E7
(word) mul8u::res#6 res zp[2]:4 1.00000001E8
(word) mul8u::return
(word) mul8u::return#2 return zp[2]:4 20002.0
(const byte*) screen = (byte*) 1024
(const byte*) tileset = (byte*) 10240

zp[1]:2 [ main::x#2 main::x#1 ]
zp[1]:3 [ main::y#2 main::y#1 draw_block::y#0 ]
reg byte x [ mul8u::a#2 mul8u::a#1 mul8u::a#0 ]
zp[2]:4 [ memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 mul8u::res#2 mul8u::res#6 mul8u::res#1 mul8u::return#2 draw_block::z#0 ]
reg byte x [ memset::c#4 ]
reg byte a [ main::z#0 ]
reg byte y [ main::tile#0 ]
reg byte y [ draw_block::tileno#0 ]
reg byte x [ draw_block::x#0 ]
reg byte y [ draw_block::tileno#1 ]
reg byte a [ draw_block::y#1 ]
reg byte x [ draw_block::drawtile#0 ]
zp[2]:6 [ draw_block::$11 mul8u::mb#2 mul8u::mb#1 ]
zp[2]:8 [ draw_block::$12 ]
zp[2]:10 [ draw_block::$13 ]
zp[2]:12 [ draw_block::$14 ]
zp[2]:14 [ draw_block::$15 ]
zp[2]:16 [ draw_block::$16 ]
zp[2]:18 [ draw_block::$17 ]
reg byte a [ mul8u::$1 ]
zp[2]:20 [ memset::end#0 draw_block::x1#0 draw_block::z#1 draw_block::$18 ]
