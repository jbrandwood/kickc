
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] call conio_c64_init
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [6] phi()
  [7] call main
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [8] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [9] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [10] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [11] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [12] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [13] gotoxy::y#2 = conio_c64_init::line#2
  [14] call gotoxy
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [15] return 
  to:@return

__stackcall void cputc(char c)
cputc: scope:[cputc]  from printf_number_buffer::@8 printf_padding::@2 printf_str::@2
  [16] cputc::c#0 = stackidx(char,cputc::OFFSET_STACK_C)
  [17] if(cputc::c#0=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [18] conio_line_text[conio_cursor_x] = cputc::c#0
  [19] conio_line_color[conio_cursor_x] = LIGHT_BLUE
  [20] conio_cursor_x = ++ conio_cursor_x
  [21] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [22] phi()
  [23] call cputln
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [24] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [25] phi()
  [26] call cputln
  to:cputc::@return

void main()
main: scope:[main]  from __start::@1
  [27] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@10
  [28] main::i#12 = phi( main/0, main::@10/main::i#1 )
  to:main::@2
main::@2: scope:[main]  from main::@1
  [29] phi()
  [30] call clrscr
  to:main::@11
main::@11: scope:[main]  from main::@2
  [31] main::$19 = main::i#12 << 2
  [32] rol_fixed::val#0 = main::vals[main::$19]
  [33] call rol_fixed
  to:main::@3
main::@3: scope:[main]  from main::@11 main::@12
  [34] phi()
  [35] call kbhit
  [36] kbhit::return#2 = kbhit::return#0
  to:main::@12
main::@12: scope:[main]  from main::@3
  [37] main::$2 = kbhit::return#2
  [38] if(0==main::$2) goto main::@3
  to:main::@4
main::@4: scope:[main]  from main::@12
  [39] phi()
  [40] call clrscr
  to:main::@13
main::@13: scope:[main]  from main::@4
  [41] ror_fixed::val#0 = main::vals[main::$19]
  [42] call ror_fixed
  to:main::@5
main::@5: scope:[main]  from main::@13 main::@14
  [43] phi()
  [44] call kbhit
  [45] kbhit::return#3 = kbhit::return#0
  to:main::@14
main::@14: scope:[main]  from main::@5
  [46] main::$6 = kbhit::return#3
  [47] if(0==main::$6) goto main::@5
  to:main::@6
main::@6: scope:[main]  from main::@14
  [48] phi()
  [49] call clrscr
  to:main::@15
main::@15: scope:[main]  from main::@6
  [50] rol_var::val#0 = main::vals[main::$19]
  [51] call rol_var
  to:main::@7
main::@7: scope:[main]  from main::@15 main::@16
  [52] phi()
  [53] call kbhit
  [54] kbhit::return#4 = kbhit::return#0
  to:main::@16
main::@16: scope:[main]  from main::@7
  [55] main::$10 = kbhit::return#4
  [56] if(0==main::$10) goto main::@7
  to:main::@8
main::@8: scope:[main]  from main::@16
  [57] phi()
  [58] call clrscr
  to:main::@17
main::@17: scope:[main]  from main::@8
  [59] ror_var::val#0 = main::vals[main::$19]
  [60] call ror_var
  to:main::@9
main::@9: scope:[main]  from main::@17 main::@18
  [61] phi()
  [62] call kbhit
  [63] kbhit::return#10 = kbhit::return#0
  to:main::@18
main::@18: scope:[main]  from main::@9
  [64] main::$14 = kbhit::return#10
  [65] if(0==main::$14) goto main::@9
  to:main::@10
main::@10: scope:[main]  from main::@18
  [66] main::$16 = main::i#12 + 1
  [67] main::i#1 = main::$16 & 1
  to:main::@1

void gotoxy(char x , char y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1
  [68] if(gotoxy::y#2<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [69] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [70] gotoxy::y#4 = phi( gotoxy::@3/gotoxy::y#2, gotoxy/0 )
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1
  [71] conio_cursor_x = gotoxy::x#2
  [72] conio_cursor_y = gotoxy::y#4
  [73] gotoxy::$7 = (unsigned int)gotoxy::y#4
  [74] gotoxy::$8 = gotoxy::$7 << 2
  [75] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [76] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [77] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [78] conio_line_text = gotoxy::$5
  [79] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [80] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [81] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [82] conio_line_text = conio_line_text + $28
  [83] conio_line_color = conio_line_color + $28
  [84] conio_cursor_x = 0
  [85] conio_cursor_y = ++ conio_cursor_y
  [86] call cscroll
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [87] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from main::@2 main::@4 main::@6 main::@8
  [88] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [89] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [89] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [89] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [90] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [91] conio_cursor_x = 0
  [92] conio_cursor_y = 0
  [93] conio_line_text = DEFAULT_SCREEN
  [94] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [95] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [96] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [97] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [98] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [99] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [100] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [101] clrscr::line_text#5[clrscr::c#2] = ' '
  [102] clrscr::line_cols#5[clrscr::c#2] = LIGHT_BLUE
  [103] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

void rol_fixed(unsigned long val)
rol_fixed: scope:[rol_fixed]  from main::@11
  [104] phi()
  [105] call printf_str
  to:rol_fixed::@1
rol_fixed::@1: scope:[rol_fixed]  from rol_fixed
  [106] printf_ulong::uvalue#0 = rol_fixed::val#0 << 0
  [107] call printf_sint
  to:rol_fixed::@2
rol_fixed::@2: scope:[rol_fixed]  from rol_fixed::@1
  [108] phi()
  [109] call printf_str
  to:rol_fixed::@3
rol_fixed::@3: scope:[rol_fixed]  from rol_fixed::@2
  [110] phi()
  [111] call printf_ulong
  to:rol_fixed::@4
rol_fixed::@4: scope:[rol_fixed]  from rol_fixed::@3
  [112] phi()
  [113] call printf_str
  to:rol_fixed::@5
rol_fixed::@5: scope:[rol_fixed]  from rol_fixed::@4
  [114] printf_ulong::uvalue#1 = rol_fixed::val#0 << 1
  [115] call printf_sint
  to:rol_fixed::@6
rol_fixed::@6: scope:[rol_fixed]  from rol_fixed::@5
  [116] phi()
  [117] call printf_str
  to:rol_fixed::@7
rol_fixed::@7: scope:[rol_fixed]  from rol_fixed::@6
  [118] phi()
  [119] call printf_ulong
  to:rol_fixed::@8
rol_fixed::@8: scope:[rol_fixed]  from rol_fixed::@7
  [120] phi()
  [121] call printf_str
  to:rol_fixed::@9
rol_fixed::@9: scope:[rol_fixed]  from rol_fixed::@8
  [122] printf_ulong::uvalue#2 = rol_fixed::val#0 << 2
  [123] call printf_sint
  to:rol_fixed::@10
rol_fixed::@10: scope:[rol_fixed]  from rol_fixed::@9
  [124] phi()
  [125] call printf_str
  to:rol_fixed::@11
rol_fixed::@11: scope:[rol_fixed]  from rol_fixed::@10
  [126] phi()
  [127] call printf_ulong
  to:rol_fixed::@12
rol_fixed::@12: scope:[rol_fixed]  from rol_fixed::@11
  [128] phi()
  [129] call printf_str
  to:rol_fixed::@13
rol_fixed::@13: scope:[rol_fixed]  from rol_fixed::@12
  [130] printf_ulong::uvalue#3 = rol_fixed::val#0 << 3
  [131] call printf_sint
  to:rol_fixed::@14
rol_fixed::@14: scope:[rol_fixed]  from rol_fixed::@13
  [132] phi()
  [133] call printf_str
  to:rol_fixed::@15
rol_fixed::@15: scope:[rol_fixed]  from rol_fixed::@14
  [134] phi()
  [135] call printf_ulong
  to:rol_fixed::@16
rol_fixed::@16: scope:[rol_fixed]  from rol_fixed::@15
  [136] phi()
  [137] call printf_str
  to:rol_fixed::@17
rol_fixed::@17: scope:[rol_fixed]  from rol_fixed::@16
  [138] printf_ulong::uvalue#4 = rol_fixed::val#0 << 4
  [139] call printf_sint
  to:rol_fixed::@18
rol_fixed::@18: scope:[rol_fixed]  from rol_fixed::@17
  [140] phi()
  [141] call printf_str
  to:rol_fixed::@19
rol_fixed::@19: scope:[rol_fixed]  from rol_fixed::@18
  [142] phi()
  [143] call printf_ulong
  to:rol_fixed::@20
rol_fixed::@20: scope:[rol_fixed]  from rol_fixed::@19
  [144] phi()
  [145] call printf_str
  to:rol_fixed::@21
rol_fixed::@21: scope:[rol_fixed]  from rol_fixed::@20
  [146] printf_ulong::uvalue#5 = rol_fixed::val#0 << 5
  [147] call printf_sint
  to:rol_fixed::@22
rol_fixed::@22: scope:[rol_fixed]  from rol_fixed::@21
  [148] phi()
  [149] call printf_str
  to:rol_fixed::@23
rol_fixed::@23: scope:[rol_fixed]  from rol_fixed::@22
  [150] phi()
  [151] call printf_ulong
  to:rol_fixed::@24
rol_fixed::@24: scope:[rol_fixed]  from rol_fixed::@23
  [152] phi()
  [153] call printf_str
  to:rol_fixed::@25
rol_fixed::@25: scope:[rol_fixed]  from rol_fixed::@24
  [154] printf_ulong::uvalue#6 = rol_fixed::val#0 << 6
  [155] call printf_sint
  to:rol_fixed::@26
rol_fixed::@26: scope:[rol_fixed]  from rol_fixed::@25
  [156] phi()
  [157] call printf_str
  to:rol_fixed::@27
rol_fixed::@27: scope:[rol_fixed]  from rol_fixed::@26
  [158] phi()
  [159] call printf_ulong
  to:rol_fixed::@28
rol_fixed::@28: scope:[rol_fixed]  from rol_fixed::@27
  [160] phi()
  [161] call printf_str
  to:rol_fixed::@29
rol_fixed::@29: scope:[rol_fixed]  from rol_fixed::@28
  [162] printf_ulong::uvalue#7 = rol_fixed::val#0 << 7
  [163] call printf_sint
  to:rol_fixed::@30
rol_fixed::@30: scope:[rol_fixed]  from rol_fixed::@29
  [164] phi()
  [165] call printf_str
  to:rol_fixed::@31
rol_fixed::@31: scope:[rol_fixed]  from rol_fixed::@30
  [166] phi()
  [167] call printf_ulong
  to:rol_fixed::@32
rol_fixed::@32: scope:[rol_fixed]  from rol_fixed::@31
  [168] phi()
  [169] call printf_str
  to:rol_fixed::@33
rol_fixed::@33: scope:[rol_fixed]  from rol_fixed::@32
  [170] printf_ulong::uvalue#8 = rol_fixed::val#0 << 8
  [171] call printf_sint
  to:rol_fixed::@34
rol_fixed::@34: scope:[rol_fixed]  from rol_fixed::@33
  [172] phi()
  [173] call printf_str
  to:rol_fixed::@35
rol_fixed::@35: scope:[rol_fixed]  from rol_fixed::@34
  [174] phi()
  [175] call printf_ulong
  to:rol_fixed::@36
rol_fixed::@36: scope:[rol_fixed]  from rol_fixed::@35
  [176] phi()
  [177] call printf_str
  to:rol_fixed::@37
rol_fixed::@37: scope:[rol_fixed]  from rol_fixed::@36
  [178] printf_ulong::uvalue#9 = rol_fixed::val#0 << 9
  [179] call printf_sint
  to:rol_fixed::@38
rol_fixed::@38: scope:[rol_fixed]  from rol_fixed::@37
  [180] phi()
  [181] call printf_str
  to:rol_fixed::@39
rol_fixed::@39: scope:[rol_fixed]  from rol_fixed::@38
  [182] phi()
  [183] call printf_ulong
  to:rol_fixed::@40
rol_fixed::@40: scope:[rol_fixed]  from rol_fixed::@39
  [184] phi()
  [185] call printf_str
  to:rol_fixed::@41
rol_fixed::@41: scope:[rol_fixed]  from rol_fixed::@40
  [186] printf_ulong::uvalue#10 = rol_fixed::val#0 << $c
  [187] call printf_sint
  to:rol_fixed::@42
rol_fixed::@42: scope:[rol_fixed]  from rol_fixed::@41
  [188] phi()
  [189] call printf_str
  to:rol_fixed::@43
rol_fixed::@43: scope:[rol_fixed]  from rol_fixed::@42
  [190] phi()
  [191] call printf_ulong
  to:rol_fixed::@44
rol_fixed::@44: scope:[rol_fixed]  from rol_fixed::@43
  [192] phi()
  [193] call printf_str
  to:rol_fixed::@45
rol_fixed::@45: scope:[rol_fixed]  from rol_fixed::@44
  [194] printf_ulong::uvalue#11 = rol_fixed::val#0 << $f
  [195] call printf_sint
  to:rol_fixed::@46
rol_fixed::@46: scope:[rol_fixed]  from rol_fixed::@45
  [196] phi()
  [197] call printf_str
  to:rol_fixed::@47
rol_fixed::@47: scope:[rol_fixed]  from rol_fixed::@46
  [198] phi()
  [199] call printf_ulong
  to:rol_fixed::@48
rol_fixed::@48: scope:[rol_fixed]  from rol_fixed::@47
  [200] phi()
  [201] call printf_str
  to:rol_fixed::@49
rol_fixed::@49: scope:[rol_fixed]  from rol_fixed::@48
  [202] printf_ulong::uvalue#12 = rol_fixed::val#0 << $10
  [203] call printf_sint
  to:rol_fixed::@50
rol_fixed::@50: scope:[rol_fixed]  from rol_fixed::@49
  [204] phi()
  [205] call printf_str
  to:rol_fixed::@51
rol_fixed::@51: scope:[rol_fixed]  from rol_fixed::@50
  [206] phi()
  [207] call printf_ulong
  to:rol_fixed::@52
rol_fixed::@52: scope:[rol_fixed]  from rol_fixed::@51
  [208] phi()
  [209] call printf_str
  to:rol_fixed::@53
rol_fixed::@53: scope:[rol_fixed]  from rol_fixed::@52
  [210] printf_ulong::uvalue#13 = rol_fixed::val#0 << $11
  [211] call printf_sint
  to:rol_fixed::@54
rol_fixed::@54: scope:[rol_fixed]  from rol_fixed::@53
  [212] phi()
  [213] call printf_str
  to:rol_fixed::@55
rol_fixed::@55: scope:[rol_fixed]  from rol_fixed::@54
  [214] phi()
  [215] call printf_ulong
  to:rol_fixed::@56
rol_fixed::@56: scope:[rol_fixed]  from rol_fixed::@55
  [216] phi()
  [217] call printf_str
  to:rol_fixed::@57
rol_fixed::@57: scope:[rol_fixed]  from rol_fixed::@56
  [218] printf_ulong::uvalue#14 = rol_fixed::val#0 << $14
  [219] call printf_sint
  to:rol_fixed::@58
rol_fixed::@58: scope:[rol_fixed]  from rol_fixed::@57
  [220] phi()
  [221] call printf_str
  to:rol_fixed::@59
rol_fixed::@59: scope:[rol_fixed]  from rol_fixed::@58
  [222] phi()
  [223] call printf_ulong
  to:rol_fixed::@60
rol_fixed::@60: scope:[rol_fixed]  from rol_fixed::@59
  [224] phi()
  [225] call printf_str
  to:rol_fixed::@61
rol_fixed::@61: scope:[rol_fixed]  from rol_fixed::@60
  [226] printf_ulong::uvalue#15 = rol_fixed::val#0 << $17
  [227] call printf_sint
  to:rol_fixed::@62
rol_fixed::@62: scope:[rol_fixed]  from rol_fixed::@61
  [228] phi()
  [229] call printf_str
  to:rol_fixed::@63
rol_fixed::@63: scope:[rol_fixed]  from rol_fixed::@62
  [230] phi()
  [231] call printf_ulong
  to:rol_fixed::@64
rol_fixed::@64: scope:[rol_fixed]  from rol_fixed::@63
  [232] phi()
  [233] call printf_str
  to:rol_fixed::@65
rol_fixed::@65: scope:[rol_fixed]  from rol_fixed::@64
  [234] printf_ulong::uvalue#16 = rol_fixed::val#0 << $18
  [235] call printf_sint
  to:rol_fixed::@66
rol_fixed::@66: scope:[rol_fixed]  from rol_fixed::@65
  [236] phi()
  [237] call printf_str
  to:rol_fixed::@67
rol_fixed::@67: scope:[rol_fixed]  from rol_fixed::@66
  [238] phi()
  [239] call printf_ulong
  to:rol_fixed::@68
rol_fixed::@68: scope:[rol_fixed]  from rol_fixed::@67
  [240] phi()
  [241] call printf_str
  to:rol_fixed::@69
rol_fixed::@69: scope:[rol_fixed]  from rol_fixed::@68
  [242] printf_ulong::uvalue#17 = rol_fixed::val#0 << $19
  [243] call printf_sint
  to:rol_fixed::@70
rol_fixed::@70: scope:[rol_fixed]  from rol_fixed::@69
  [244] phi()
  [245] call printf_str
  to:rol_fixed::@71
rol_fixed::@71: scope:[rol_fixed]  from rol_fixed::@70
  [246] phi()
  [247] call printf_ulong
  to:rol_fixed::@72
rol_fixed::@72: scope:[rol_fixed]  from rol_fixed::@71
  [248] phi()
  [249] call printf_str
  to:rol_fixed::@73
rol_fixed::@73: scope:[rol_fixed]  from rol_fixed::@72
  [250] printf_ulong::uvalue#18 = rol_fixed::val#0 << $1c
  [251] call printf_sint
  to:rol_fixed::@74
rol_fixed::@74: scope:[rol_fixed]  from rol_fixed::@73
  [252] phi()
  [253] call printf_str
  to:rol_fixed::@75
rol_fixed::@75: scope:[rol_fixed]  from rol_fixed::@74
  [254] phi()
  [255] call printf_ulong
  to:rol_fixed::@76
rol_fixed::@76: scope:[rol_fixed]  from rol_fixed::@75
  [256] phi()
  [257] call printf_str
  to:rol_fixed::@77
rol_fixed::@77: scope:[rol_fixed]  from rol_fixed::@76
  [258] printf_ulong::uvalue#19 = rol_fixed::val#0 << $1f
  [259] call printf_sint
  to:rol_fixed::@78
rol_fixed::@78: scope:[rol_fixed]  from rol_fixed::@77
  [260] phi()
  [261] call printf_str
  to:rol_fixed::@79
rol_fixed::@79: scope:[rol_fixed]  from rol_fixed::@78
  [262] phi()
  [263] call printf_ulong
  to:rol_fixed::@80
rol_fixed::@80: scope:[rol_fixed]  from rol_fixed::@79
  [264] phi()
  [265] call printf_str
  to:rol_fixed::@81
rol_fixed::@81: scope:[rol_fixed]  from rol_fixed::@80
  [266] printf_ulong::uvalue#20 = rol_fixed::val#0 << $20
  [267] call printf_sint
  to:rol_fixed::@82
rol_fixed::@82: scope:[rol_fixed]  from rol_fixed::@81
  [268] phi()
  [269] call printf_str
  to:rol_fixed::@83
rol_fixed::@83: scope:[rol_fixed]  from rol_fixed::@82
  [270] phi()
  [271] call printf_ulong
  to:rol_fixed::@84
rol_fixed::@84: scope:[rol_fixed]  from rol_fixed::@83
  [272] phi()
  [273] call printf_str
  to:rol_fixed::@return
rol_fixed::@return: scope:[rol_fixed]  from rol_fixed::@84
  [274] return 
  to:@return

char kbhit()
kbhit: scope:[kbhit]  from main::@3 main::@5 main::@7 main::@9
  [275] *kbhit::CIA1_PORT_A = 0
  [276] kbhit::return#0 = ~ *kbhit::CIA1_PORT_B
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  [277] return 
  to:@return

void ror_fixed(unsigned long val)
ror_fixed: scope:[ror_fixed]  from main::@13
  [278] phi()
  [279] call printf_str
  to:ror_fixed::@1
ror_fixed::@1: scope:[ror_fixed]  from ror_fixed
  [280] printf_ulong::uvalue#21 = ror_fixed::val#0 >> 0
  [281] call printf_sint
  to:ror_fixed::@2
ror_fixed::@2: scope:[ror_fixed]  from ror_fixed::@1
  [282] phi()
  [283] call printf_str
  to:ror_fixed::@3
ror_fixed::@3: scope:[ror_fixed]  from ror_fixed::@2
  [284] phi()
  [285] call printf_ulong
  to:ror_fixed::@4
ror_fixed::@4: scope:[ror_fixed]  from ror_fixed::@3
  [286] phi()
  [287] call printf_str
  to:ror_fixed::@5
ror_fixed::@5: scope:[ror_fixed]  from ror_fixed::@4
  [288] printf_ulong::uvalue#22 = ror_fixed::val#0 >> 1
  [289] call printf_sint
  to:ror_fixed::@6
ror_fixed::@6: scope:[ror_fixed]  from ror_fixed::@5
  [290] phi()
  [291] call printf_str
  to:ror_fixed::@7
ror_fixed::@7: scope:[ror_fixed]  from ror_fixed::@6
  [292] phi()
  [293] call printf_ulong
  to:ror_fixed::@8
ror_fixed::@8: scope:[ror_fixed]  from ror_fixed::@7
  [294] phi()
  [295] call printf_str
  to:ror_fixed::@9
ror_fixed::@9: scope:[ror_fixed]  from ror_fixed::@8
  [296] printf_ulong::uvalue#23 = ror_fixed::val#0 >> 2
  [297] call printf_sint
  to:ror_fixed::@10
ror_fixed::@10: scope:[ror_fixed]  from ror_fixed::@9
  [298] phi()
  [299] call printf_str
  to:ror_fixed::@11
ror_fixed::@11: scope:[ror_fixed]  from ror_fixed::@10
  [300] phi()
  [301] call printf_ulong
  to:ror_fixed::@12
ror_fixed::@12: scope:[ror_fixed]  from ror_fixed::@11
  [302] phi()
  [303] call printf_str
  to:ror_fixed::@13
ror_fixed::@13: scope:[ror_fixed]  from ror_fixed::@12
  [304] printf_ulong::uvalue#24 = ror_fixed::val#0 >> 3
  [305] call printf_sint
  to:ror_fixed::@14
ror_fixed::@14: scope:[ror_fixed]  from ror_fixed::@13
  [306] phi()
  [307] call printf_str
  to:ror_fixed::@15
ror_fixed::@15: scope:[ror_fixed]  from ror_fixed::@14
  [308] phi()
  [309] call printf_ulong
  to:ror_fixed::@16
ror_fixed::@16: scope:[ror_fixed]  from ror_fixed::@15
  [310] phi()
  [311] call printf_str
  to:ror_fixed::@17
ror_fixed::@17: scope:[ror_fixed]  from ror_fixed::@16
  [312] printf_ulong::uvalue#25 = ror_fixed::val#0 >> 4
  [313] call printf_sint
  to:ror_fixed::@18
ror_fixed::@18: scope:[ror_fixed]  from ror_fixed::@17
  [314] phi()
  [315] call printf_str
  to:ror_fixed::@19
ror_fixed::@19: scope:[ror_fixed]  from ror_fixed::@18
  [316] phi()
  [317] call printf_ulong
  to:ror_fixed::@20
ror_fixed::@20: scope:[ror_fixed]  from ror_fixed::@19
  [318] phi()
  [319] call printf_str
  to:ror_fixed::@21
ror_fixed::@21: scope:[ror_fixed]  from ror_fixed::@20
  [320] printf_ulong::uvalue#26 = ror_fixed::val#0 >> 5
  [321] call printf_sint
  to:ror_fixed::@22
ror_fixed::@22: scope:[ror_fixed]  from ror_fixed::@21
  [322] phi()
  [323] call printf_str
  to:ror_fixed::@23
ror_fixed::@23: scope:[ror_fixed]  from ror_fixed::@22
  [324] phi()
  [325] call printf_ulong
  to:ror_fixed::@24
ror_fixed::@24: scope:[ror_fixed]  from ror_fixed::@23
  [326] phi()
  [327] call printf_str
  to:ror_fixed::@25
ror_fixed::@25: scope:[ror_fixed]  from ror_fixed::@24
  [328] printf_ulong::uvalue#27 = ror_fixed::val#0 >> 6
  [329] call printf_sint
  to:ror_fixed::@26
ror_fixed::@26: scope:[ror_fixed]  from ror_fixed::@25
  [330] phi()
  [331] call printf_str
  to:ror_fixed::@27
ror_fixed::@27: scope:[ror_fixed]  from ror_fixed::@26
  [332] phi()
  [333] call printf_ulong
  to:ror_fixed::@28
ror_fixed::@28: scope:[ror_fixed]  from ror_fixed::@27
  [334] phi()
  [335] call printf_str
  to:ror_fixed::@29
ror_fixed::@29: scope:[ror_fixed]  from ror_fixed::@28
  [336] printf_ulong::uvalue#28 = ror_fixed::val#0 >> 7
  [337] call printf_sint
  to:ror_fixed::@30
ror_fixed::@30: scope:[ror_fixed]  from ror_fixed::@29
  [338] phi()
  [339] call printf_str
  to:ror_fixed::@31
ror_fixed::@31: scope:[ror_fixed]  from ror_fixed::@30
  [340] phi()
  [341] call printf_ulong
  to:ror_fixed::@32
ror_fixed::@32: scope:[ror_fixed]  from ror_fixed::@31
  [342] phi()
  [343] call printf_str
  to:ror_fixed::@33
ror_fixed::@33: scope:[ror_fixed]  from ror_fixed::@32
  [344] printf_ulong::uvalue#29 = ror_fixed::val#0 >> 8
  [345] call printf_sint
  to:ror_fixed::@34
ror_fixed::@34: scope:[ror_fixed]  from ror_fixed::@33
  [346] phi()
  [347] call printf_str
  to:ror_fixed::@35
ror_fixed::@35: scope:[ror_fixed]  from ror_fixed::@34
  [348] phi()
  [349] call printf_ulong
  to:ror_fixed::@36
ror_fixed::@36: scope:[ror_fixed]  from ror_fixed::@35
  [350] phi()
  [351] call printf_str
  to:ror_fixed::@37
ror_fixed::@37: scope:[ror_fixed]  from ror_fixed::@36
  [352] printf_ulong::uvalue#30 = ror_fixed::val#0 >> 9
  [353] call printf_sint
  to:ror_fixed::@38
ror_fixed::@38: scope:[ror_fixed]  from ror_fixed::@37
  [354] phi()
  [355] call printf_str
  to:ror_fixed::@39
ror_fixed::@39: scope:[ror_fixed]  from ror_fixed::@38
  [356] phi()
  [357] call printf_ulong
  to:ror_fixed::@40
ror_fixed::@40: scope:[ror_fixed]  from ror_fixed::@39
  [358] phi()
  [359] call printf_str
  to:ror_fixed::@41
ror_fixed::@41: scope:[ror_fixed]  from ror_fixed::@40
  [360] printf_ulong::uvalue#31 = ror_fixed::val#0 >> $c
  [361] call printf_sint
  to:ror_fixed::@42
ror_fixed::@42: scope:[ror_fixed]  from ror_fixed::@41
  [362] phi()
  [363] call printf_str
  to:ror_fixed::@43
ror_fixed::@43: scope:[ror_fixed]  from ror_fixed::@42
  [364] phi()
  [365] call printf_ulong
  to:ror_fixed::@44
ror_fixed::@44: scope:[ror_fixed]  from ror_fixed::@43
  [366] phi()
  [367] call printf_str
  to:ror_fixed::@45
ror_fixed::@45: scope:[ror_fixed]  from ror_fixed::@44
  [368] printf_ulong::uvalue#32 = ror_fixed::val#0 >> $f
  [369] call printf_sint
  to:ror_fixed::@46
ror_fixed::@46: scope:[ror_fixed]  from ror_fixed::@45
  [370] phi()
  [371] call printf_str
  to:ror_fixed::@47
ror_fixed::@47: scope:[ror_fixed]  from ror_fixed::@46
  [372] phi()
  [373] call printf_ulong
  to:ror_fixed::@48
ror_fixed::@48: scope:[ror_fixed]  from ror_fixed::@47
  [374] phi()
  [375] call printf_str
  to:ror_fixed::@49
ror_fixed::@49: scope:[ror_fixed]  from ror_fixed::@48
  [376] printf_ulong::uvalue#33 = ror_fixed::val#0 >> $10
  [377] call printf_sint
  to:ror_fixed::@50
ror_fixed::@50: scope:[ror_fixed]  from ror_fixed::@49
  [378] phi()
  [379] call printf_str
  to:ror_fixed::@51
ror_fixed::@51: scope:[ror_fixed]  from ror_fixed::@50
  [380] phi()
  [381] call printf_ulong
  to:ror_fixed::@52
ror_fixed::@52: scope:[ror_fixed]  from ror_fixed::@51
  [382] phi()
  [383] call printf_str
  to:ror_fixed::@53
ror_fixed::@53: scope:[ror_fixed]  from ror_fixed::@52
  [384] printf_ulong::uvalue#34 = ror_fixed::val#0 >> $11
  [385] call printf_sint
  to:ror_fixed::@54
ror_fixed::@54: scope:[ror_fixed]  from ror_fixed::@53
  [386] phi()
  [387] call printf_str
  to:ror_fixed::@55
ror_fixed::@55: scope:[ror_fixed]  from ror_fixed::@54
  [388] phi()
  [389] call printf_ulong
  to:ror_fixed::@56
ror_fixed::@56: scope:[ror_fixed]  from ror_fixed::@55
  [390] phi()
  [391] call printf_str
  to:ror_fixed::@57
ror_fixed::@57: scope:[ror_fixed]  from ror_fixed::@56
  [392] printf_ulong::uvalue#35 = ror_fixed::val#0 >> $14
  [393] call printf_sint
  to:ror_fixed::@58
ror_fixed::@58: scope:[ror_fixed]  from ror_fixed::@57
  [394] phi()
  [395] call printf_str
  to:ror_fixed::@59
ror_fixed::@59: scope:[ror_fixed]  from ror_fixed::@58
  [396] phi()
  [397] call printf_ulong
  to:ror_fixed::@60
ror_fixed::@60: scope:[ror_fixed]  from ror_fixed::@59
  [398] phi()
  [399] call printf_str
  to:ror_fixed::@61
ror_fixed::@61: scope:[ror_fixed]  from ror_fixed::@60
  [400] printf_ulong::uvalue#36 = ror_fixed::val#0 >> $17
  [401] call printf_sint
  to:ror_fixed::@62
ror_fixed::@62: scope:[ror_fixed]  from ror_fixed::@61
  [402] phi()
  [403] call printf_str
  to:ror_fixed::@63
ror_fixed::@63: scope:[ror_fixed]  from ror_fixed::@62
  [404] phi()
  [405] call printf_ulong
  to:ror_fixed::@64
ror_fixed::@64: scope:[ror_fixed]  from ror_fixed::@63
  [406] phi()
  [407] call printf_str
  to:ror_fixed::@65
ror_fixed::@65: scope:[ror_fixed]  from ror_fixed::@64
  [408] printf_ulong::uvalue#37 = ror_fixed::val#0 >> $18
  [409] call printf_sint
  to:ror_fixed::@66
ror_fixed::@66: scope:[ror_fixed]  from ror_fixed::@65
  [410] phi()
  [411] call printf_str
  to:ror_fixed::@67
ror_fixed::@67: scope:[ror_fixed]  from ror_fixed::@66
  [412] phi()
  [413] call printf_ulong
  to:ror_fixed::@68
ror_fixed::@68: scope:[ror_fixed]  from ror_fixed::@67
  [414] phi()
  [415] call printf_str
  to:ror_fixed::@69
ror_fixed::@69: scope:[ror_fixed]  from ror_fixed::@68
  [416] printf_ulong::uvalue#38 = ror_fixed::val#0 >> $19
  [417] call printf_sint
  to:ror_fixed::@70
ror_fixed::@70: scope:[ror_fixed]  from ror_fixed::@69
  [418] phi()
  [419] call printf_str
  to:ror_fixed::@71
ror_fixed::@71: scope:[ror_fixed]  from ror_fixed::@70
  [420] phi()
  [421] call printf_ulong
  to:ror_fixed::@72
ror_fixed::@72: scope:[ror_fixed]  from ror_fixed::@71
  [422] phi()
  [423] call printf_str
  to:ror_fixed::@73
ror_fixed::@73: scope:[ror_fixed]  from ror_fixed::@72
  [424] printf_ulong::uvalue#39 = ror_fixed::val#0 >> $1c
  [425] call printf_sint
  to:ror_fixed::@74
ror_fixed::@74: scope:[ror_fixed]  from ror_fixed::@73
  [426] phi()
  [427] call printf_str
  to:ror_fixed::@75
ror_fixed::@75: scope:[ror_fixed]  from ror_fixed::@74
  [428] phi()
  [429] call printf_ulong
  to:ror_fixed::@76
ror_fixed::@76: scope:[ror_fixed]  from ror_fixed::@75
  [430] phi()
  [431] call printf_str
  to:ror_fixed::@77
ror_fixed::@77: scope:[ror_fixed]  from ror_fixed::@76
  [432] printf_ulong::uvalue#40 = ror_fixed::val#0 >> $1f
  [433] call printf_sint
  to:ror_fixed::@78
ror_fixed::@78: scope:[ror_fixed]  from ror_fixed::@77
  [434] phi()
  [435] call printf_str
  to:ror_fixed::@79
ror_fixed::@79: scope:[ror_fixed]  from ror_fixed::@78
  [436] phi()
  [437] call printf_ulong
  to:ror_fixed::@80
ror_fixed::@80: scope:[ror_fixed]  from ror_fixed::@79
  [438] phi()
  [439] call printf_str
  to:ror_fixed::@81
ror_fixed::@81: scope:[ror_fixed]  from ror_fixed::@80
  [440] printf_ulong::uvalue#41 = ror_fixed::val#0 >> $20
  [441] call printf_sint
  to:ror_fixed::@82
ror_fixed::@82: scope:[ror_fixed]  from ror_fixed::@81
  [442] phi()
  [443] call printf_str
  to:ror_fixed::@83
ror_fixed::@83: scope:[ror_fixed]  from ror_fixed::@82
  [444] phi()
  [445] call printf_ulong
  to:ror_fixed::@84
ror_fixed::@84: scope:[ror_fixed]  from ror_fixed::@83
  [446] phi()
  [447] call printf_str
  to:ror_fixed::@return
ror_fixed::@return: scope:[ror_fixed]  from ror_fixed::@84
  [448] return 
  to:@return

void rol_var(unsigned long val)
rol_var: scope:[rol_var]  from main::@15
  [449] phi()
  [450] call printf_str
  to:rol_var::@1
rol_var::@1: scope:[rol_var]  from rol_var rol_var::@6
  [451] rol_var::i#2 = phi( rol_var/0, rol_var::@6/rol_var::i#1 )
  [452] if(rol_var::i#2<$15*SIZEOF_CHAR) goto rol_var::@2
  to:rol_var::@return
rol_var::@return: scope:[rol_var]  from rol_var::@1
  [453] return 
  to:@return
rol_var::@2: scope:[rol_var]  from rol_var::@1
  [454] printf_ulong::uvalue#42 = rol_var::val#0 << rols[rol_var::i#2]
  [455] printf_uchar::uvalue#0 = rols[rol_var::i#2]
  [456] call printf_uchar
  to:rol_var::@3
rol_var::@3: scope:[rol_var]  from rol_var::@2
  [457] phi()
  [458] call printf_str
  to:rol_var::@4
rol_var::@4: scope:[rol_var]  from rol_var::@3
  [459] phi()
  [460] call printf_ulong
  to:rol_var::@5
rol_var::@5: scope:[rol_var]  from rol_var::@4
  [461] phi()
  [462] call printf_str
  to:rol_var::@6
rol_var::@6: scope:[rol_var]  from rol_var::@5
  [463] rol_var::i#1 = ++ rol_var::i#2
  to:rol_var::@1

void ror_var(unsigned long val)
ror_var: scope:[ror_var]  from main::@17
  [464] phi()
  [465] call printf_str
  to:ror_var::@1
ror_var::@1: scope:[ror_var]  from ror_var ror_var::@6
  [466] ror_var::i#2 = phi( ror_var/0, ror_var::@6/ror_var::i#1 )
  [467] if(ror_var::i#2<$15*SIZEOF_CHAR) goto ror_var::@2
  to:ror_var::@return
ror_var::@return: scope:[ror_var]  from ror_var::@1
  [468] return 
  to:@return
ror_var::@2: scope:[ror_var]  from ror_var::@1
  [469] printf_ulong::uvalue#43 = ror_var::val#0 >> rols[ror_var::i#2]
  [470] printf_uchar::uvalue#1 = rols[ror_var::i#2]
  [471] call printf_uchar
  to:ror_var::@3
ror_var::@3: scope:[ror_var]  from ror_var::@2
  [472] phi()
  [473] call printf_str
  to:ror_var::@4
ror_var::@4: scope:[ror_var]  from ror_var::@3
  [474] phi()
  [475] call printf_ulong
  to:ror_var::@5
ror_var::@5: scope:[ror_var]  from ror_var::@4
  [476] phi()
  [477] call printf_str
  to:ror_var::@6
ror_var::@6: scope:[ror_var]  from ror_var::@5
  [478] ror_var::i#1 = ++ ror_var::i#2
  to:ror_var::@1

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [479] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [480] phi()
  [481] call memcpy
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [482] phi()
  [483] call memcpy
  to:cscroll::@3
cscroll::@3: scope:[cscroll]  from cscroll::@2
  [484] phi()
  [485] call memset
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [486] phi()
  [487] call memset
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [488] conio_line_text = conio_line_text - $28
  [489] conio_line_color = conio_line_color - $28
  [490] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@5
  [491] return 
  to:@return

void printf_str(void (*putc)(char) , const char *s)
printf_str: scope:[printf_str]  from printf_number_buffer::@4 rol_fixed rol_fixed::@10 rol_fixed::@12 rol_fixed::@14 rol_fixed::@16 rol_fixed::@18 rol_fixed::@2 rol_fixed::@20 rol_fixed::@22 rol_fixed::@24 rol_fixed::@26 rol_fixed::@28 rol_fixed::@30 rol_fixed::@32 rol_fixed::@34 rol_fixed::@36 rol_fixed::@38 rol_fixed::@4 rol_fixed::@40 rol_fixed::@42 rol_fixed::@44 rol_fixed::@46 rol_fixed::@48 rol_fixed::@50 rol_fixed::@52 rol_fixed::@54 rol_fixed::@56 rol_fixed::@58 rol_fixed::@6 rol_fixed::@60 rol_fixed::@62 rol_fixed::@64 rol_fixed::@66 rol_fixed::@68 rol_fixed::@70 rol_fixed::@72 rol_fixed::@74 rol_fixed::@76 rol_fixed::@78 rol_fixed::@8 rol_fixed::@80 rol_fixed::@82 rol_fixed::@84 rol_var rol_var::@3 rol_var::@5 ror_fixed ror_fixed::@10 ror_fixed::@12 ror_fixed::@14 ror_fixed::@16 ror_fixed::@18 ror_fixed::@2 ror_fixed::@20 ror_fixed::@22 ror_fixed::@24 ror_fixed::@26 ror_fixed::@28 ror_fixed::@30 ror_fixed::@32 ror_fixed::@34 ror_fixed::@36 ror_fixed::@38 ror_fixed::@4 ror_fixed::@40 ror_fixed::@42 ror_fixed::@44 ror_fixed::@46 ror_fixed::@48 ror_fixed::@50 ror_fixed::@52 ror_fixed::@54 ror_fixed::@56 ror_fixed::@58 ror_fixed::@6 ror_fixed::@60 ror_fixed::@62 ror_fixed::@64 ror_fixed::@66 ror_fixed::@68 ror_fixed::@70 ror_fixed::@72 ror_fixed::@74 ror_fixed::@76 ror_fixed::@78 ror_fixed::@8 ror_fixed::@80 ror_fixed::@82 ror_fixed::@84 ror_var ror_var::@3 ror_var::@5
  [492] printf_str::s#95 = phi( printf_number_buffer::@4/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, rol_fixed/rol_fixed::s, rol_fixed::@10/s1, rol_fixed::@12/s2, rol_fixed::@14/s1, rol_fixed::@16/s2, rol_fixed::@18/s1, rol_fixed::@2/s1, rol_fixed::@20/s2, rol_fixed::@22/s1, rol_fixed::@24/s2, rol_fixed::@26/s1, rol_fixed::@28/s2, rol_fixed::@30/s1, rol_fixed::@32/s2, rol_fixed::@34/s1, rol_fixed::@36/s2, rol_fixed::@38/s1, rol_fixed::@4/s2, rol_fixed::@40/s2, rol_fixed::@42/s1, rol_fixed::@44/s2, rol_fixed::@46/s1, rol_fixed::@48/s2, rol_fixed::@50/s1, rol_fixed::@52/s2, rol_fixed::@54/s1, rol_fixed::@56/s2, rol_fixed::@58/s1, rol_fixed::@6/s1, rol_fixed::@60/s2, rol_fixed::@62/s1, rol_fixed::@64/s2, rol_fixed::@66/s1, rol_fixed::@68/s2, rol_fixed::@70/s1, rol_fixed::@72/s2, rol_fixed::@74/s1, rol_fixed::@76/s2, rol_fixed::@78/s1, rol_fixed::@8/s2, rol_fixed::@80/s2, rol_fixed::@82/s1, rol_fixed::@84/s2, rol_var/rol_var::s, rol_var::@3/s1, rol_var::@5/s2, ror_fixed/ror_fixed::s, ror_fixed::@10/s1, ror_fixed::@12/s2, ror_fixed::@14/s1, ror_fixed::@16/s2, ror_fixed::@18/s1, ror_fixed::@2/s1, ror_fixed::@20/s2, ror_fixed::@22/s1, ror_fixed::@24/s2, ror_fixed::@26/s1, ror_fixed::@28/s2, ror_fixed::@30/s1, ror_fixed::@32/s2, ror_fixed::@34/s1, ror_fixed::@36/s2, ror_fixed::@38/s1, ror_fixed::@4/s2, ror_fixed::@40/s2, ror_fixed::@42/s1, ror_fixed::@44/s2, ror_fixed::@46/s1, ror_fixed::@48/s2, ror_fixed::@50/s1, ror_fixed::@52/s2, ror_fixed::@54/s1, ror_fixed::@56/s2, ror_fixed::@58/s1, ror_fixed::@6/s1, ror_fixed::@60/s2, ror_fixed::@62/s1, ror_fixed::@64/s2, ror_fixed::@66/s1, ror_fixed::@68/s2, ror_fixed::@70/s1, ror_fixed::@72/s2, ror_fixed::@74/s1, ror_fixed::@76/s2, ror_fixed::@78/s1, ror_fixed::@8/s2, ror_fixed::@80/s2, ror_fixed::@82/s1, ror_fixed::@84/s2, ror_var/ror_var::s, ror_var::@3/s1, ror_var::@5/s2 )
  to:printf_str::@1
printf_str::@1: scope:[printf_str]  from printf_str printf_str::@2
  [493] printf_str::s#94 = phi( printf_str/printf_str::s#95, printf_str::@2/printf_str::s#0 )
  [494] printf_str::c#1 = *printf_str::s#94
  [495] printf_str::s#0 = ++ printf_str::s#94
  [496] if(0!=printf_str::c#1) goto printf_str::@2
  to:printf_str::@return
printf_str::@return: scope:[printf_str]  from printf_str::@1
  [497] return 
  to:@return
printf_str::@2: scope:[printf_str]  from printf_str::@1
  [498] stackpush(char) = printf_str::c#1
  [499] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_str::@1

void printf_sint(void (*putc)(char) , int value , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_sint: scope:[printf_sint]  from rol_fixed::@1 rol_fixed::@13 rol_fixed::@17 rol_fixed::@21 rol_fixed::@25 rol_fixed::@29 rol_fixed::@33 rol_fixed::@37 rol_fixed::@41 rol_fixed::@45 rol_fixed::@49 rol_fixed::@5 rol_fixed::@53 rol_fixed::@57 rol_fixed::@61 rol_fixed::@65 rol_fixed::@69 rol_fixed::@73 rol_fixed::@77 rol_fixed::@81 rol_fixed::@9 ror_fixed::@1 ror_fixed::@13 ror_fixed::@17 ror_fixed::@21 ror_fixed::@25 ror_fixed::@29 ror_fixed::@33 ror_fixed::@37 ror_fixed::@41 ror_fixed::@45 ror_fixed::@49 ror_fixed::@5 ror_fixed::@53 ror_fixed::@57 ror_fixed::@61 ror_fixed::@65 ror_fixed::@69 ror_fixed::@73 ror_fixed::@77 ror_fixed::@81 ror_fixed::@9
  [501] printf_sint::value#43 = phi( rol_fixed::@1/0, rol_fixed::@13/3, rol_fixed::@17/4, rol_fixed::@21/5, rol_fixed::@25/6, rol_fixed::@29/7, rol_fixed::@33/8, rol_fixed::@37/9, rol_fixed::@41/$c, rol_fixed::@45/$f, rol_fixed::@49/$10, rol_fixed::@5/1, rol_fixed::@53/$11, rol_fixed::@57/$14, rol_fixed::@61/$17, rol_fixed::@65/$18, rol_fixed::@69/$19, rol_fixed::@73/$1c, rol_fixed::@77/$1f, rol_fixed::@81/$20, rol_fixed::@9/2, ror_fixed::@1/0, ror_fixed::@13/3, ror_fixed::@17/4, ror_fixed::@21/5, ror_fixed::@25/6, ror_fixed::@29/7, ror_fixed::@33/8, ror_fixed::@37/9, ror_fixed::@41/$c, ror_fixed::@45/$f, ror_fixed::@49/$10, ror_fixed::@5/1, ror_fixed::@53/$11, ror_fixed::@57/$14, ror_fixed::@61/$17, ror_fixed::@65/$18, ror_fixed::@69/$19, ror_fixed::@73/$1c, ror_fixed::@77/$1f, ror_fixed::@81/$20, ror_fixed::@9/2 )
  [502] *((char *)&printf_buffer) = 0
  [503] if(printf_sint::value#43<0) goto printf_sint::@1
  to:printf_sint::@2
printf_sint::@1: scope:[printf_sint]  from printf_sint
  [504] printf_sint::value#0 = - printf_sint::value#43
  [505] *((char *)&printf_buffer) = '-'
  to:printf_sint::@2
printf_sint::@2: scope:[printf_sint]  from printf_sint printf_sint::@1
  [506] printf_sint::value#45 = phi( printf_sint::@1/printf_sint::value#0, printf_sint/printf_sint::value#43 )
  [507] utoa::value#1 = (unsigned int)printf_sint::value#45
  [508] call utoa
  to:printf_sint::@3
printf_sint::@3: scope:[printf_sint]  from printf_sint::@2
  [509] printf_number_buffer::buffer_sign#1 = *((char *)&printf_buffer)
  [510] call printf_number_buffer
  to:printf_sint::@return
printf_sint::@return: scope:[printf_sint]  from printf_sint::@3
  [511] return 
  to:@return

void printf_ulong(void (*putc)(char) , unsigned long uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_ulong: scope:[printf_ulong]  from rol_fixed::@11 rol_fixed::@15 rol_fixed::@19 rol_fixed::@23 rol_fixed::@27 rol_fixed::@3 rol_fixed::@31 rol_fixed::@35 rol_fixed::@39 rol_fixed::@43 rol_fixed::@47 rol_fixed::@51 rol_fixed::@55 rol_fixed::@59 rol_fixed::@63 rol_fixed::@67 rol_fixed::@7 rol_fixed::@71 rol_fixed::@75 rol_fixed::@79 rol_fixed::@83 rol_var::@4 ror_fixed::@11 ror_fixed::@15 ror_fixed::@19 ror_fixed::@23 ror_fixed::@27 ror_fixed::@3 ror_fixed::@31 ror_fixed::@35 ror_fixed::@39 ror_fixed::@43 ror_fixed::@47 ror_fixed::@51 ror_fixed::@55 ror_fixed::@59 ror_fixed::@63 ror_fixed::@67 ror_fixed::@7 ror_fixed::@71 ror_fixed::@75 ror_fixed::@79 ror_fixed::@83 ror_var::@4
  [512] printf_ulong::uvalue#44 = phi( rol_fixed::@11/printf_ulong::uvalue#2, rol_fixed::@15/printf_ulong::uvalue#3, rol_fixed::@19/printf_ulong::uvalue#4, rol_fixed::@23/printf_ulong::uvalue#5, rol_fixed::@27/printf_ulong::uvalue#6, rol_fixed::@3/printf_ulong::uvalue#0, rol_fixed::@31/printf_ulong::uvalue#7, rol_fixed::@35/printf_ulong::uvalue#8, rol_fixed::@39/printf_ulong::uvalue#9, rol_fixed::@43/printf_ulong::uvalue#10, rol_fixed::@47/printf_ulong::uvalue#11, rol_fixed::@51/printf_ulong::uvalue#12, rol_fixed::@55/printf_ulong::uvalue#13, rol_fixed::@59/printf_ulong::uvalue#14, rol_fixed::@63/printf_ulong::uvalue#15, rol_fixed::@67/printf_ulong::uvalue#16, rol_fixed::@7/printf_ulong::uvalue#1, rol_fixed::@71/printf_ulong::uvalue#17, rol_fixed::@75/printf_ulong::uvalue#18, rol_fixed::@79/printf_ulong::uvalue#19, rol_fixed::@83/printf_ulong::uvalue#20, rol_var::@4/printf_ulong::uvalue#42, ror_fixed::@11/printf_ulong::uvalue#23, ror_fixed::@15/printf_ulong::uvalue#24, ror_fixed::@19/printf_ulong::uvalue#25, ror_fixed::@23/printf_ulong::uvalue#26, ror_fixed::@27/printf_ulong::uvalue#27, ror_fixed::@3/printf_ulong::uvalue#21, ror_fixed::@31/printf_ulong::uvalue#28, ror_fixed::@35/printf_ulong::uvalue#29, ror_fixed::@39/printf_ulong::uvalue#30, ror_fixed::@43/printf_ulong::uvalue#31, ror_fixed::@47/printf_ulong::uvalue#32, ror_fixed::@51/printf_ulong::uvalue#33, ror_fixed::@55/printf_ulong::uvalue#34, ror_fixed::@59/printf_ulong::uvalue#35, ror_fixed::@63/printf_ulong::uvalue#36, ror_fixed::@67/printf_ulong::uvalue#37, ror_fixed::@7/printf_ulong::uvalue#22, ror_fixed::@71/printf_ulong::uvalue#38, ror_fixed::@75/printf_ulong::uvalue#39, ror_fixed::@79/printf_ulong::uvalue#40, ror_fixed::@83/printf_ulong::uvalue#41, ror_var::@4/printf_ulong::uvalue#43 )
  to:printf_ulong::@1
printf_ulong::@1: scope:[printf_ulong]  from printf_ulong
  [513] *((char *)&printf_buffer) = 0
  [514] ultoa::value#1 = printf_ulong::uvalue#44
  [515] call ultoa
  to:printf_ulong::@2
printf_ulong::@2: scope:[printf_ulong]  from printf_ulong::@1
  [516] printf_number_buffer::buffer_sign#0 = *((char *)&printf_buffer)
  [517] call printf_number_buffer
  to:printf_ulong::@return
printf_ulong::@return: scope:[printf_ulong]  from printf_ulong::@2
  [518] return 
  to:@return

void printf_uchar(void (*putc)(char) , char uvalue , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_uchar: scope:[printf_uchar]  from rol_var::@2 ror_var::@2
  [519] printf_uchar::uvalue#2 = phi( rol_var::@2/printf_uchar::uvalue#0, ror_var::@2/printf_uchar::uvalue#1 )
  to:printf_uchar::@1
printf_uchar::@1: scope:[printf_uchar]  from printf_uchar
  [520] *((char *)&printf_buffer) = 0
  [521] uctoa::value#1 = printf_uchar::uvalue#2
  [522] call uctoa
  to:printf_uchar::@2
printf_uchar::@2: scope:[printf_uchar]  from printf_uchar::@1
  [523] printf_number_buffer::buffer_sign#2 = *((char *)&printf_buffer)
  [524] call printf_number_buffer
  to:printf_uchar::@return
printf_uchar::@return: scope:[printf_uchar]  from printf_uchar::@2
  [525] return 
  to:@return

void * memcpy(void *destination , void *source , unsigned int num)
memcpy: scope:[memcpy]  from cscroll::@1 cscroll::@2
  [526] memcpy::destination#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN, cscroll::@2/(void *)COLORRAM )
  [526] memcpy::source#2 = phi( cscroll::@1/(void *)DEFAULT_SCREEN+$28, cscroll::@2/(void *)COLORRAM+$28 )
  [527] memcpy::src_end#0 = (char *)memcpy::source#2 + (unsigned int)$19*$28-$28
  [528] memcpy::src#4 = (char *)memcpy::source#2
  [529] memcpy::dst#4 = (char *)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [530] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [530] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [531] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [532] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [533] *memcpy::dst#2 = *memcpy::src#2
  [534] memcpy::dst#1 = ++ memcpy::dst#2
  [535] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void * memset(void *str , char c , unsigned int num)
memset: scope:[memset]  from cscroll::@3 cscroll::@4
  [536] memset::c#4 = phi( cscroll::@3/' ', cscroll::@4/LIGHT_BLUE )
  [536] memset::str#3 = phi( cscroll::@3/(void *)DEFAULT_SCREEN+(unsigned int)$19*$28-$28, cscroll::@4/(void *)COLORRAM+(unsigned int)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [537] memset::end#0 = (char *)memset::str#3 + $28
  [538] memset::dst#4 = (char *)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [539] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [540] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [541] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [542] *memset::dst#2 = memset::c#4
  [543] memset::dst#1 = ++ memset::dst#2
  to:memset::@2

void utoa(unsigned int value , char *buffer , char radix)
utoa: scope:[utoa]  from printf_sint::@2
  [544] phi()
  to:utoa::@1
utoa::@1: scope:[utoa]  from utoa utoa::@4
  [545] utoa::buffer#11 = phi( utoa::@4/utoa::buffer#14, utoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [545] utoa::started#2 = phi( utoa::@4/utoa::started#4, utoa/0 )
  [545] utoa::value#2 = phi( utoa::@4/utoa::value#6, utoa/utoa::value#1 )
  [545] utoa::digit#2 = phi( utoa::@4/utoa::digit#1, utoa/0 )
  [546] if(utoa::digit#2<5-1) goto utoa::@2
  to:utoa::@3
utoa::@3: scope:[utoa]  from utoa::@1
  [547] utoa::$11 = (char)utoa::value#2
  [548] *utoa::buffer#11 = DIGITS[utoa::$11]
  [549] utoa::buffer#3 = ++ utoa::buffer#11
  [550] *utoa::buffer#3 = 0
  to:utoa::@return
utoa::@return: scope:[utoa]  from utoa::@3
  [551] return 
  to:@return
utoa::@2: scope:[utoa]  from utoa::@1
  [552] utoa::$10 = utoa::digit#2 << 1
  [553] utoa::digit_value#0 = RADIX_DECIMAL_VALUES[utoa::$10]
  [554] if(0!=utoa::started#2) goto utoa::@5
  to:utoa::@7
utoa::@7: scope:[utoa]  from utoa::@2
  [555] if(utoa::value#2>=utoa::digit_value#0) goto utoa::@5
  to:utoa::@4
utoa::@4: scope:[utoa]  from utoa::@6 utoa::@7
  [556] utoa::buffer#14 = phi( utoa::@7/utoa::buffer#11, utoa::@6/utoa::buffer#4 )
  [556] utoa::started#4 = phi( utoa::@7/utoa::started#2, utoa::@6/1 )
  [556] utoa::value#6 = phi( utoa::@7/utoa::value#2, utoa::@6/utoa::value#0 )
  [557] utoa::digit#1 = ++ utoa::digit#2
  to:utoa::@1
utoa::@5: scope:[utoa]  from utoa::@2 utoa::@7
  [558] utoa_append::buffer#0 = utoa::buffer#11
  [559] utoa_append::value#0 = utoa::value#2
  [560] utoa_append::sub#0 = utoa::digit_value#0
  [561] call utoa_append
  [562] utoa_append::return#0 = utoa_append::value#2
  to:utoa::@6
utoa::@6: scope:[utoa]  from utoa::@5
  [563] utoa::value#0 = utoa_append::return#0
  [564] utoa::buffer#4 = ++ utoa::buffer#11
  to:utoa::@4

void printf_number_buffer(void (*putc)(char) , char buffer_sign , char *buffer_digits , char format_min_length , char format_justify_left , char format_sign_always , char format_zero_padding , char format_upper_case , char format_radix)
printf_number_buffer: scope:[printf_number_buffer]  from printf_sint::@3 printf_uchar::@2 printf_ulong::@2
  [565] printf_number_buffer::buffer_sign#10 = phi( printf_sint::@3/printf_number_buffer::buffer_sign#1, printf_uchar::@2/printf_number_buffer::buffer_sign#2, printf_ulong::@2/printf_number_buffer::buffer_sign#0 )
  [565] printf_number_buffer::format_zero_padding#10 = phi( printf_sint::@3/0, printf_uchar::@2/0, printf_ulong::@2/1 )
  [565] printf_number_buffer::format_min_length#3 = phi( printf_sint::@3/2, printf_uchar::@2/2, printf_ulong::@2/8 )
  [566] if(0==printf_number_buffer::format_min_length#3) goto printf_number_buffer::@1
  to:printf_number_buffer::@5
printf_number_buffer::@5: scope:[printf_number_buffer]  from printf_number_buffer
  [567] phi()
  [568] call strlen
  [569] strlen::return#2 = strlen::len#2
  to:printf_number_buffer::@11
printf_number_buffer::@11: scope:[printf_number_buffer]  from printf_number_buffer::@5
  [570] printf_number_buffer::$19 = strlen::return#2
  [571] printf_number_buffer::len#0 = (signed char)printf_number_buffer::$19
  [572] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@10
  to:printf_number_buffer::@6
printf_number_buffer::@6: scope:[printf_number_buffer]  from printf_number_buffer::@11
  [573] printf_number_buffer::len#1 = ++ printf_number_buffer::len#0
  to:printf_number_buffer::@10
printf_number_buffer::@10: scope:[printf_number_buffer]  from printf_number_buffer::@11 printf_number_buffer::@6
  [574] printf_number_buffer::len#2 = phi( printf_number_buffer::@11/printf_number_buffer::len#0, printf_number_buffer::@6/printf_number_buffer::len#1 )
  [575] printf_number_buffer::padding#1 = (signed char)printf_number_buffer::format_min_length#3 - printf_number_buffer::len#2
  [576] if(printf_number_buffer::padding#1>=0) goto printf_number_buffer::@15
  to:printf_number_buffer::@1
printf_number_buffer::@15: scope:[printf_number_buffer]  from printf_number_buffer::@10
  [577] phi()
  to:printf_number_buffer::@1
printf_number_buffer::@1: scope:[printf_number_buffer]  from printf_number_buffer printf_number_buffer::@10 printf_number_buffer::@15
  [578] printf_number_buffer::padding#10 = phi( printf_number_buffer/0, printf_number_buffer::@15/printf_number_buffer::padding#1, printf_number_buffer::@10/0 )
  to:printf_number_buffer::@13
printf_number_buffer::@13: scope:[printf_number_buffer]  from printf_number_buffer::@1
  [579] if(0!=printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@2
  to:printf_number_buffer::@12
printf_number_buffer::@12: scope:[printf_number_buffer]  from printf_number_buffer::@13
  [580] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@7
  to:printf_number_buffer::@2
printf_number_buffer::@7: scope:[printf_number_buffer]  from printf_number_buffer::@12
  [581] printf_padding::length#0 = (char)printf_number_buffer::padding#10
  [582] call printf_padding
  to:printf_number_buffer::@2
printf_number_buffer::@2: scope:[printf_number_buffer]  from printf_number_buffer::@12 printf_number_buffer::@13 printf_number_buffer::@7
  [583] if(0==printf_number_buffer::buffer_sign#10) goto printf_number_buffer::@3
  to:printf_number_buffer::@8
printf_number_buffer::@8: scope:[printf_number_buffer]  from printf_number_buffer::@2
  [584] stackpush(char) = printf_number_buffer::buffer_sign#10
  [585] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_number_buffer::@3
printf_number_buffer::@3: scope:[printf_number_buffer]  from printf_number_buffer::@2 printf_number_buffer::@8
  [587] if(0==printf_number_buffer::format_zero_padding#10) goto printf_number_buffer::@4
  to:printf_number_buffer::@14
printf_number_buffer::@14: scope:[printf_number_buffer]  from printf_number_buffer::@3
  [588] if(0!=printf_number_buffer::padding#10) goto printf_number_buffer::@9
  to:printf_number_buffer::@4
printf_number_buffer::@9: scope:[printf_number_buffer]  from printf_number_buffer::@14
  [589] printf_padding::length#1 = (char)printf_number_buffer::padding#10
  [590] call printf_padding
  to:printf_number_buffer::@4
printf_number_buffer::@4: scope:[printf_number_buffer]  from printf_number_buffer::@14 printf_number_buffer::@3 printf_number_buffer::@9
  [591] phi()
  [592] call printf_str
  to:printf_number_buffer::@return
printf_number_buffer::@return: scope:[printf_number_buffer]  from printf_number_buffer::@4
  [593] return 
  to:@return

void ultoa(unsigned long value , char *buffer , char radix)
ultoa: scope:[ultoa]  from printf_ulong::@1
  [594] phi()
  to:ultoa::@1
ultoa::@1: scope:[ultoa]  from ultoa ultoa::@4
  [595] ultoa::buffer#11 = phi( ultoa::@4/ultoa::buffer#14, ultoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [595] ultoa::started#2 = phi( ultoa::@4/ultoa::started#4, ultoa/0 )
  [595] ultoa::value#2 = phi( ultoa::@4/ultoa::value#6, ultoa/ultoa::value#1 )
  [595] ultoa::digit#2 = phi( ultoa::@4/ultoa::digit#1, ultoa/0 )
  [596] if(ultoa::digit#2<8-1) goto ultoa::@2
  to:ultoa::@3
ultoa::@3: scope:[ultoa]  from ultoa::@1
  [597] ultoa::$11 = (char)ultoa::value#2
  [598] *ultoa::buffer#11 = DIGITS[ultoa::$11]
  [599] ultoa::buffer#3 = ++ ultoa::buffer#11
  [600] *ultoa::buffer#3 = 0
  to:ultoa::@return
ultoa::@return: scope:[ultoa]  from ultoa::@3
  [601] return 
  to:@return
ultoa::@2: scope:[ultoa]  from ultoa::@1
  [602] ultoa::$10 = ultoa::digit#2 << 2
  [603] ultoa::digit_value#0 = RADIX_HEXADECIMAL_VALUES_LONG[ultoa::$10]
  [604] if(0!=ultoa::started#2) goto ultoa::@5
  to:ultoa::@7
ultoa::@7: scope:[ultoa]  from ultoa::@2
  [605] if(ultoa::value#2>=ultoa::digit_value#0) goto ultoa::@5
  to:ultoa::@4
ultoa::@4: scope:[ultoa]  from ultoa::@6 ultoa::@7
  [606] ultoa::buffer#14 = phi( ultoa::@7/ultoa::buffer#11, ultoa::@6/ultoa::buffer#4 )
  [606] ultoa::started#4 = phi( ultoa::@7/ultoa::started#2, ultoa::@6/1 )
  [606] ultoa::value#6 = phi( ultoa::@7/ultoa::value#2, ultoa::@6/ultoa::value#0 )
  [607] ultoa::digit#1 = ++ ultoa::digit#2
  to:ultoa::@1
ultoa::@5: scope:[ultoa]  from ultoa::@2 ultoa::@7
  [608] ultoa_append::buffer#0 = ultoa::buffer#11
  [609] ultoa_append::value#0 = ultoa::value#2
  [610] ultoa_append::sub#0 = ultoa::digit_value#0
  [611] call ultoa_append
  [612] ultoa_append::return#0 = ultoa_append::value#2
  to:ultoa::@6
ultoa::@6: scope:[ultoa]  from ultoa::@5
  [613] ultoa::value#0 = ultoa_append::return#0
  [614] ultoa::buffer#4 = ++ ultoa::buffer#11
  to:ultoa::@4

void uctoa(char value , char *buffer , char radix)
uctoa: scope:[uctoa]  from printf_uchar::@1
  [615] phi()
  to:uctoa::@1
uctoa::@1: scope:[uctoa]  from uctoa uctoa::@4
  [616] uctoa::buffer#11 = phi( uctoa::@4/uctoa::buffer#14, uctoa/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS )
  [616] uctoa::started#2 = phi( uctoa::@4/uctoa::started#4, uctoa/0 )
  [616] uctoa::value#2 = phi( uctoa::@4/uctoa::value#6, uctoa/uctoa::value#1 )
  [616] uctoa::digit#2 = phi( uctoa::@4/uctoa::digit#1, uctoa/0 )
  [617] if(uctoa::digit#2<3-1) goto uctoa::@2
  to:uctoa::@3
uctoa::@3: scope:[uctoa]  from uctoa::@1
  [618] *uctoa::buffer#11 = DIGITS[uctoa::value#2]
  [619] uctoa::buffer#3 = ++ uctoa::buffer#11
  [620] *uctoa::buffer#3 = 0
  to:uctoa::@return
uctoa::@return: scope:[uctoa]  from uctoa::@3
  [621] return 
  to:@return
uctoa::@2: scope:[uctoa]  from uctoa::@1
  [622] uctoa::digit_value#0 = RADIX_DECIMAL_VALUES_CHAR[uctoa::digit#2]
  [623] if(0!=uctoa::started#2) goto uctoa::@5
  to:uctoa::@7
uctoa::@7: scope:[uctoa]  from uctoa::@2
  [624] if(uctoa::value#2>=uctoa::digit_value#0) goto uctoa::@5
  to:uctoa::@4
uctoa::@4: scope:[uctoa]  from uctoa::@6 uctoa::@7
  [625] uctoa::buffer#14 = phi( uctoa::@7/uctoa::buffer#11, uctoa::@6/uctoa::buffer#4 )
  [625] uctoa::started#4 = phi( uctoa::@7/uctoa::started#2, uctoa::@6/1 )
  [625] uctoa::value#6 = phi( uctoa::@7/uctoa::value#2, uctoa::@6/uctoa::value#0 )
  [626] uctoa::digit#1 = ++ uctoa::digit#2
  to:uctoa::@1
uctoa::@5: scope:[uctoa]  from uctoa::@2 uctoa::@7
  [627] uctoa_append::buffer#0 = uctoa::buffer#11
  [628] uctoa_append::value#0 = uctoa::value#2
  [629] uctoa_append::sub#0 = uctoa::digit_value#0
  [630] call uctoa_append
  [631] uctoa_append::return#0 = uctoa_append::value#2
  to:uctoa::@6
uctoa::@6: scope:[uctoa]  from uctoa::@5
  [632] uctoa::value#0 = uctoa_append::return#0
  [633] uctoa::buffer#4 = ++ uctoa::buffer#11
  to:uctoa::@4

unsigned int utoa_append(char *buffer , unsigned int value , unsigned int sub)
utoa_append: scope:[utoa_append]  from utoa::@5
  [634] phi()
  to:utoa_append::@1
utoa_append::@1: scope:[utoa_append]  from utoa_append utoa_append::@2
  [635] utoa_append::digit#2 = phi( utoa_append/0, utoa_append::@2/utoa_append::digit#1 )
  [635] utoa_append::value#2 = phi( utoa_append/utoa_append::value#0, utoa_append::@2/utoa_append::value#1 )
  [636] if(utoa_append::value#2>=utoa_append::sub#0) goto utoa_append::@2
  to:utoa_append::@3
utoa_append::@3: scope:[utoa_append]  from utoa_append::@1
  [637] *utoa_append::buffer#0 = DIGITS[utoa_append::digit#2]
  to:utoa_append::@return
utoa_append::@return: scope:[utoa_append]  from utoa_append::@3
  [638] return 
  to:@return
utoa_append::@2: scope:[utoa_append]  from utoa_append::@1
  [639] utoa_append::digit#1 = ++ utoa_append::digit#2
  [640] utoa_append::value#1 = utoa_append::value#2 - utoa_append::sub#0
  to:utoa_append::@1

unsigned int strlen(char *str)
strlen: scope:[strlen]  from printf_number_buffer::@5
  [641] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [642] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [642] strlen::str#2 = phi( strlen/(char *)&printf_buffer+OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS, strlen::@2/strlen::str#0 )
  [643] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [644] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [645] strlen::len#1 = ++ strlen::len#2
  [646] strlen::str#0 = ++ strlen::str#2
  to:strlen::@1

void printf_padding(void (*putc)(char) , char pad , char length)
printf_padding: scope:[printf_padding]  from printf_number_buffer::@7 printf_number_buffer::@9
  [647] printf_padding::pad#5 = phi( printf_number_buffer::@9/'0', printf_number_buffer::@7/' ' )
  [647] printf_padding::length#4 = phi( printf_number_buffer::@9/printf_padding::length#1, printf_number_buffer::@7/printf_padding::length#0 )
  to:printf_padding::@1
printf_padding::@1: scope:[printf_padding]  from printf_padding printf_padding::@3
  [648] printf_padding::i#2 = phi( printf_padding/0, printf_padding::@3/printf_padding::i#1 )
  [649] if(printf_padding::i#2<printf_padding::length#4) goto printf_padding::@2
  to:printf_padding::@return
printf_padding::@return: scope:[printf_padding]  from printf_padding::@1
  [650] return 
  to:@return
printf_padding::@2: scope:[printf_padding]  from printf_padding::@1
  [651] stackpush(char) = printf_padding::pad#5
  [652] callexecute cputc 
  sideeffect stackpullpadding(1)
  to:printf_padding::@3
printf_padding::@3: scope:[printf_padding]  from printf_padding::@2
  [654] printf_padding::i#1 = ++ printf_padding::i#2
  to:printf_padding::@1

unsigned long ultoa_append(char *buffer , unsigned long value , unsigned long sub)
ultoa_append: scope:[ultoa_append]  from ultoa::@5
  [655] phi()
  to:ultoa_append::@1
ultoa_append::@1: scope:[ultoa_append]  from ultoa_append ultoa_append::@2
  [656] ultoa_append::digit#2 = phi( ultoa_append/0, ultoa_append::@2/ultoa_append::digit#1 )
  [656] ultoa_append::value#2 = phi( ultoa_append/ultoa_append::value#0, ultoa_append::@2/ultoa_append::value#1 )
  [657] if(ultoa_append::value#2>=ultoa_append::sub#0) goto ultoa_append::@2
  to:ultoa_append::@3
ultoa_append::@3: scope:[ultoa_append]  from ultoa_append::@1
  [658] *ultoa_append::buffer#0 = DIGITS[ultoa_append::digit#2]
  to:ultoa_append::@return
ultoa_append::@return: scope:[ultoa_append]  from ultoa_append::@3
  [659] return 
  to:@return
ultoa_append::@2: scope:[ultoa_append]  from ultoa_append::@1
  [660] ultoa_append::digit#1 = ++ ultoa_append::digit#2
  [661] ultoa_append::value#1 = ultoa_append::value#2 - ultoa_append::sub#0
  to:ultoa_append::@1

char uctoa_append(char *buffer , char value , char sub)
uctoa_append: scope:[uctoa_append]  from uctoa::@5
  [662] phi()
  to:uctoa_append::@1
uctoa_append::@1: scope:[uctoa_append]  from uctoa_append uctoa_append::@2
  [663] uctoa_append::digit#2 = phi( uctoa_append/0, uctoa_append::@2/uctoa_append::digit#1 )
  [663] uctoa_append::value#2 = phi( uctoa_append/uctoa_append::value#0, uctoa_append::@2/uctoa_append::value#1 )
  [664] if(uctoa_append::value#2>=uctoa_append::sub#0) goto uctoa_append::@2
  to:uctoa_append::@3
uctoa_append::@3: scope:[uctoa_append]  from uctoa_append::@1
  [665] *uctoa_append::buffer#0 = DIGITS[uctoa_append::digit#2]
  to:uctoa_append::@return
uctoa_append::@return: scope:[uctoa_append]  from uctoa_append::@3
  [666] return 
  to:@return
uctoa_append::@2: scope:[uctoa_append]  from uctoa_append::@1
  [667] uctoa_append::digit#1 = ++ uctoa_append::digit#2
  [668] uctoa_append::value#1 = uctoa_append::value#2 - uctoa_append::sub#0
  to:uctoa_append::@1
