__constant char buffer1[$a] = { fill( $a, 0) }
__constant char buffer2[$a] = { fill( $a, 0) }
__constant char hextab[] = "0123456789abcdef"z
void main()
char *newbuffer
char *newbuffer#0 // newbuffer zp[2]:10 2.375
char *newbuffer#22 // newbuffer_1 zp[2]:8 11.0
char *newbuffer#23 // newbuffer zp[2]:10 4.0
char *newbuffer#24 // newbuffer zp[2]:10 4.0
char *newbuffer#9 // newbuffer_1 zp[2]:8 2.75
char *oldbuffer
char *oldbuffer#22 // oldbuffer zp[2]:4 22.0
char *oldbuffer#9 // oldbuffer zp[2]:4 1.5714285714285714
void print()
char print::$0 // reg byte a 202.0
char print::$1 // reg byte a 202.0
char print::$2 // reg byte a 202.0
char print::$3 // reg byte a 202.0
char print::$4 // reg byte a 202.0
char print::$5 // reg byte a 202.0
char *screen
char *screen#0 // screen zp[2]:2 7.0
char *screen#12 // screen zp[2]:2 41.5
void swap()
char *tempbuffer
char *tempbuffer#0 // tempbuffer zp[2]:12 3.0
char *tempbuffer#21 // tempbuffer_1 zp[2]:6 7.333333333333333
char *tempbuffer#22 // tempbuffer zp[2]:12 2.0
char *tempbuffer#23 // tempbuffer zp[2]:12 2.0
char *tempbuffer#9 // tempbuffer_1 zp[2]:6 11.0

zp[2]:6 [ tempbuffer#9 tempbuffer#21 ]
zp[2]:2 [ screen#12 screen#0 ]
zp[2]:8 [ newbuffer#9 newbuffer#22 ]
zp[2]:4 [ oldbuffer#9 oldbuffer#22 ]
zp[2]:12 [ tempbuffer#0 tempbuffer#22 tempbuffer#23 ]
zp[2]:10 [ newbuffer#0 newbuffer#23 newbuffer#24 ]
reg byte a [ print::$3 ]
reg byte a [ print::$0 ]
reg byte a [ print::$4 ]
reg byte a [ print::$1 ]
reg byte a [ print::$5 ]
reg byte a [ print::$2 ]
