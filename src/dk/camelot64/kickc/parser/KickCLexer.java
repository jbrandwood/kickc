// Generated from /Users/jespergravgaard/c64/src/kickc/src/dk/camelot64/kickc/parser/KickC.g4 by ANTLR 4.7
package dk.camelot64.kickc.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KickCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, SIMPLETYPE=38, 
		STRING=39, BOOLEAN=40, NUMBER=41, NUMFLOAT=42, BINFLOAT=43, DECFLOAT=44, 
		HEXFLOAT=45, NUMINT=46, BININTEGER=47, DECINTEGER=48, HEXINTEGER=49, NAME=50, 
		WS=51, COMMENT_LINE=52, COMMENT_BLOCK=53;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "SIMPLETYPE", "STRING", "BOOLEAN", 
		"NUMBER", "NUMFLOAT", "BINFLOAT", "DECFLOAT", "HEXFLOAT", "NUMINT", "BININTEGER", 
		"DECINTEGER", "HEXINTEGER", "BINDIGIT", "DECDIGIT", "HEXDIGIT", "NAME", 
		"NAME_START", "NAME_CHAR", "WS", "COMMENT_LINE", "COMMENT_BLOCK"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'{'", "'}'", "'('", "')'", "'const'", "'='", "';'", "'if'", "'else'", 
		"'while'", "'do'", "'return'", "','", "'*'", "'['", "']'", "'+'", "'-'", 
		"'not'", "'!'", "'&'", "'>>'", "'<<'", "'/'", "'=='", "'!='", "'<>'", 
		"'<'", "'<='", "'=<'", "'>='", "'=>'", "'>'", "'and'", "'&&'", "'or'", 
		"'||'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "SIMPLETYPE", "STRING", "BOOLEAN", "NUMBER", "NUMFLOAT", "BINFLOAT", 
		"DECFLOAT", "HEXFLOAT", "NUMINT", "BININTEGER", "DECINTEGER", "HEXINTEGER", 
		"NAME", "WS", "COMMENT_LINE", "COMMENT_BLOCK"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KickCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "KickC.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67\u01a5\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\3\2\3\2\3"+
		"\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t"+
		"\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r"+
		"\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22"+
		"\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27"+
		"\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3#"+
		"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'"+
		"\u00fd\n\'\3(\3(\3(\3(\7(\u0103\n(\f(\16(\u0106\13(\3(\3(\3)\3)\3)\3)"+
		"\3)\3)\3)\3)\3)\5)\u0113\n)\3*\3*\5*\u0117\n*\3+\3+\3+\5+\u011c\n+\3,"+
		"\3,\3,\3,\3,\5,\u0123\n,\3,\7,\u0126\n,\f,\16,\u0129\13,\3,\3,\6,\u012d"+
		"\n,\r,\16,\u012e\3-\7-\u0132\n-\f-\16-\u0135\13-\3-\3-\6-\u0139\n-\r-"+
		"\16-\u013a\3.\3.\3.\3.\3.\5.\u0142\n.\3.\7.\u0145\n.\f.\16.\u0148\13."+
		"\3.\3.\6.\u014c\n.\r.\16.\u014d\3/\3/\3/\5/\u0153\n/\3\60\3\60\3\60\6"+
		"\60\u0158\n\60\r\60\16\60\u0159\3\60\3\60\6\60\u015e\n\60\r\60\16\60\u015f"+
		"\5\60\u0162\n\60\3\61\6\61\u0165\n\61\r\61\16\61\u0166\3\62\3\62\3\62"+
		"\3\62\3\62\5\62\u016e\n\62\3\62\6\62\u0171\n\62\r\62\16\62\u0172\3\63"+
		"\3\63\3\64\3\64\3\65\3\65\3\66\3\66\7\66\u017d\n\66\f\66\16\66\u0180\13"+
		"\66\3\67\3\67\38\38\39\69\u0187\n9\r9\169\u0188\39\39\3:\3:\3:\3:\7:\u0191"+
		"\n:\f:\16:\u0194\13:\3:\3:\3;\3;\3;\3;\7;\u019c\n;\f;\16;\u019f\13;\3"+
		";\3;\3;\3;\3;\3\u019d\2<\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f"+
		"\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63"+
		"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62"+
		"c\63e\2g\2i\2k\64m\2o\2q\65s\66u\67\3\2\13\3\2$$\4\2DDdd\3\2\62\63\3\2"+
		"\62;\5\2\62;CHch\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\4\2\f\f"+
		"\17\17\2\u01c0\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3"+
		"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2"+
		"\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3"+
		"\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2"+
		"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3"+
		"\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2"+
		"\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2"+
		"_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2k\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3"+
		"\2\2\2\3w\3\2\2\2\5y\3\2\2\2\7{\3\2\2\2\t}\3\2\2\2\13\177\3\2\2\2\r\u0085"+
		"\3\2\2\2\17\u0087\3\2\2\2\21\u0089\3\2\2\2\23\u008c\3\2\2\2\25\u0091\3"+
		"\2\2\2\27\u0097\3\2\2\2\31\u009a\3\2\2\2\33\u00a1\3\2\2\2\35\u00a3\3\2"+
		"\2\2\37\u00a5\3\2\2\2!\u00a7\3\2\2\2#\u00a9\3\2\2\2%\u00ab\3\2\2\2\'\u00ad"+
		"\3\2\2\2)\u00b1\3\2\2\2+\u00b3\3\2\2\2-\u00b5\3\2\2\2/\u00b8\3\2\2\2\61"+
		"\u00bb\3\2\2\2\63\u00bd\3\2\2\2\65\u00c0\3\2\2\2\67\u00c3\3\2\2\29\u00c6"+
		"\3\2\2\2;\u00c8\3\2\2\2=\u00cb\3\2\2\2?\u00ce\3\2\2\2A\u00d1\3\2\2\2C"+
		"\u00d4\3\2\2\2E\u00d6\3\2\2\2G\u00da\3\2\2\2I\u00dd\3\2\2\2K\u00e0\3\2"+
		"\2\2M\u00fc\3\2\2\2O\u00fe\3\2\2\2Q\u0112\3\2\2\2S\u0116\3\2\2\2U\u011b"+
		"\3\2\2\2W\u0122\3\2\2\2Y\u0133\3\2\2\2[\u0141\3\2\2\2]\u0152\3\2\2\2_"+
		"\u0161\3\2\2\2a\u0164\3\2\2\2c\u016d\3\2\2\2e\u0174\3\2\2\2g\u0176\3\2"+
		"\2\2i\u0178\3\2\2\2k\u017a\3\2\2\2m\u0181\3\2\2\2o\u0183\3\2\2\2q\u0186"+
		"\3\2\2\2s\u018c\3\2\2\2u\u0197\3\2\2\2wx\7}\2\2x\4\3\2\2\2yz\7\177\2\2"+
		"z\6\3\2\2\2{|\7*\2\2|\b\3\2\2\2}~\7+\2\2~\n\3\2\2\2\177\u0080\7e\2\2\u0080"+
		"\u0081\7q\2\2\u0081\u0082\7p\2\2\u0082\u0083\7u\2\2\u0083\u0084\7v\2\2"+
		"\u0084\f\3\2\2\2\u0085\u0086\7?\2\2\u0086\16\3\2\2\2\u0087\u0088\7=\2"+
		"\2\u0088\20\3\2\2\2\u0089\u008a\7k\2\2\u008a\u008b\7h\2\2\u008b\22\3\2"+
		"\2\2\u008c\u008d\7g\2\2\u008d\u008e\7n\2\2\u008e\u008f\7u\2\2\u008f\u0090"+
		"\7g\2\2\u0090\24\3\2\2\2\u0091\u0092\7y\2\2\u0092\u0093\7j\2\2\u0093\u0094"+
		"\7k\2\2\u0094\u0095\7n\2\2\u0095\u0096\7g\2\2\u0096\26\3\2\2\2\u0097\u0098"+
		"\7f\2\2\u0098\u0099\7q\2\2\u0099\30\3\2\2\2\u009a\u009b\7t\2\2\u009b\u009c"+
		"\7g\2\2\u009c\u009d\7v\2\2\u009d\u009e\7w\2\2\u009e\u009f\7t\2\2\u009f"+
		"\u00a0\7p\2\2\u00a0\32\3\2\2\2\u00a1\u00a2\7.\2\2\u00a2\34\3\2\2\2\u00a3"+
		"\u00a4\7,\2\2\u00a4\36\3\2\2\2\u00a5\u00a6\7]\2\2\u00a6 \3\2\2\2\u00a7"+
		"\u00a8\7_\2\2\u00a8\"\3\2\2\2\u00a9\u00aa\7-\2\2\u00aa$\3\2\2\2\u00ab"+
		"\u00ac\7/\2\2\u00ac&\3\2\2\2\u00ad\u00ae\7p\2\2\u00ae\u00af\7q\2\2\u00af"+
		"\u00b0\7v\2\2\u00b0(\3\2\2\2\u00b1\u00b2\7#\2\2\u00b2*\3\2\2\2\u00b3\u00b4"+
		"\7(\2\2\u00b4,\3\2\2\2\u00b5\u00b6\7@\2\2\u00b6\u00b7\7@\2\2\u00b7.\3"+
		"\2\2\2\u00b8\u00b9\7>\2\2\u00b9\u00ba\7>\2\2\u00ba\60\3\2\2\2\u00bb\u00bc"+
		"\7\61\2\2\u00bc\62\3\2\2\2\u00bd\u00be\7?\2\2\u00be\u00bf\7?\2\2\u00bf"+
		"\64\3\2\2\2\u00c0\u00c1\7#\2\2\u00c1\u00c2\7?\2\2\u00c2\66\3\2\2\2\u00c3"+
		"\u00c4\7>\2\2\u00c4\u00c5\7@\2\2\u00c58\3\2\2\2\u00c6\u00c7\7>\2\2\u00c7"+
		":\3\2\2\2\u00c8\u00c9\7>\2\2\u00c9\u00ca\7?\2\2\u00ca<\3\2\2\2\u00cb\u00cc"+
		"\7?\2\2\u00cc\u00cd\7>\2\2\u00cd>\3\2\2\2\u00ce\u00cf\7@\2\2\u00cf\u00d0"+
		"\7?\2\2\u00d0@\3\2\2\2\u00d1\u00d2\7?\2\2\u00d2\u00d3\7@\2\2\u00d3B\3"+
		"\2\2\2\u00d4\u00d5\7@\2\2\u00d5D\3\2\2\2\u00d6\u00d7\7c\2\2\u00d7\u00d8"+
		"\7p\2\2\u00d8\u00d9\7f\2\2\u00d9F\3\2\2\2\u00da\u00db\7(\2\2\u00db\u00dc"+
		"\7(\2\2\u00dcH\3\2\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7t\2\2\u00dfJ\3"+
		"\2\2\2\u00e0\u00e1\7~\2\2\u00e1\u00e2\7~\2\2\u00e2L\3\2\2\2\u00e3\u00e4"+
		"\7d\2\2\u00e4\u00e5\7{\2\2\u00e5\u00e6\7v\2\2\u00e6\u00fd\7g\2\2\u00e7"+
		"\u00e8\7y\2\2\u00e8\u00e9\7q\2\2\u00e9\u00ea\7t\2\2\u00ea\u00fd\7f\2\2"+
		"\u00eb\u00ec\7u\2\2\u00ec\u00ed\7v\2\2\u00ed\u00ee\7t\2\2\u00ee\u00ef"+
		"\7k\2\2\u00ef\u00f0\7p\2\2\u00f0\u00fd\7i\2\2\u00f1\u00f2\7d\2\2\u00f2"+
		"\u00f3\7q\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5\7n\2\2\u00f5\u00f6\7g\2\2"+
		"\u00f6\u00f7\7c\2\2\u00f7\u00fd\7p\2\2\u00f8\u00f9\7x\2\2\u00f9\u00fa"+
		"\7q\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fd\7f\2\2\u00fc\u00e3\3\2\2\2\u00fc"+
		"\u00e7\3\2\2\2\u00fc\u00eb\3\2\2\2\u00fc\u00f1\3\2\2\2\u00fc\u00f8\3\2"+
		"\2\2\u00fdN\3\2\2\2\u00fe\u0104\7$\2\2\u00ff\u0100\7^\2\2\u0100\u0103"+
		"\7$\2\2\u0101\u0103\n\2\2\2\u0102\u00ff\3\2\2\2\u0102\u0101\3\2\2\2\u0103"+
		"\u0106\3\2\2\2\u0104\u0102\3\2\2\2\u0104\u0105\3\2\2\2\u0105\u0107\3\2"+
		"\2\2\u0106\u0104\3\2\2\2\u0107\u0108\7$\2\2\u0108P\3\2\2\2\u0109\u010a"+
		"\7v\2\2\u010a\u010b\7t\2\2\u010b\u010c\7w\2\2\u010c\u0113\7g\2\2\u010d"+
		"\u010e\7h\2\2\u010e\u010f\7c\2\2\u010f\u0110\7n\2\2\u0110\u0111\7u\2\2"+
		"\u0111\u0113\7g\2\2\u0112\u0109\3\2\2\2\u0112\u010d\3\2\2\2\u0113R\3\2"+
		"\2\2\u0114\u0117\5U+\2\u0115\u0117\5]/\2\u0116\u0114\3\2\2\2\u0116\u0115"+
		"\3\2\2\2\u0117T\3\2\2\2\u0118\u011c\5W,\2\u0119\u011c\5Y-\2\u011a\u011c"+
		"\5[.\2\u011b\u0118\3\2\2\2\u011b\u0119\3\2\2\2\u011b\u011a\3\2\2\2\u011c"+
		"V\3\2\2\2\u011d\u0123\7\'\2\2\u011e\u011f\7\62\2\2\u011f\u0123\7d\2\2"+
		"\u0120\u0121\7\62\2\2\u0121\u0123\7D\2\2\u0122\u011d\3\2\2\2\u0122\u011e"+
		"\3\2\2\2\u0122\u0120\3\2\2\2\u0123\u0127\3\2\2\2\u0124\u0126\5e\63\2\u0125"+
		"\u0124\3\2\2\2\u0126\u0129\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128\3\2"+
		"\2\2\u0128\u012a\3\2\2\2\u0129\u0127\3\2\2\2\u012a\u012c\7\60\2\2\u012b"+
		"\u012d\5e\63\2\u012c\u012b\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012c\3\2"+
		"\2\2\u012e\u012f\3\2\2\2\u012fX\3\2\2\2\u0130\u0132\5g\64\2\u0131\u0130"+
		"\3\2\2\2\u0132\u0135\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134"+
		"\u0136\3\2\2\2\u0135\u0133\3\2\2\2\u0136\u0138\7\60\2\2\u0137\u0139\5"+
		"g\64\2\u0138\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3\2\2\2\u013a"+
		"\u013b\3\2\2\2\u013bZ\3\2\2\2\u013c\u0142\7&\2\2\u013d\u013e\7\62\2\2"+
		"\u013e\u0142\7z\2\2\u013f\u0140\7\62\2\2\u0140\u0142\7Z\2\2\u0141\u013c"+
		"\3\2\2\2\u0141\u013d\3\2\2\2\u0141\u013f\3\2\2\2\u0142\u0146\3\2\2\2\u0143"+
		"\u0145\5i\65\2\u0144\u0143\3\2\2\2\u0145\u0148\3\2\2\2\u0146\u0144\3\2"+
		"\2\2\u0146\u0147\3\2\2\2\u0147\u0149\3\2\2\2\u0148\u0146\3\2\2\2\u0149"+
		"\u014b\7\60\2\2\u014a\u014c\5i\65\2\u014b\u014a\3\2\2\2\u014c\u014d\3"+
		"\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\\\3\2\2\2\u014f\u0153"+
		"\5a\61\2\u0150\u0153\5c\62\2\u0151\u0153\5_\60\2\u0152\u014f\3\2\2\2\u0152"+
		"\u0150\3\2\2\2\u0152\u0151\3\2\2\2\u0153^\3\2\2\2\u0154\u0155\7\62\2\2"+
		"\u0155\u0157\t\3\2\2\u0156\u0158\5e\63\2\u0157\u0156\3\2\2\2\u0158\u0159"+
		"\3\2\2\2\u0159\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u0162\3\2\2\2\u015b"+
		"\u015d\7\'\2\2\u015c\u015e\5e\63\2\u015d\u015c\3\2\2\2\u015e\u015f\3\2"+
		"\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0162\3\2\2\2\u0161"+
		"\u0154\3\2\2\2\u0161\u015b\3\2\2\2\u0162`\3\2\2\2\u0163\u0165\5g\64\2"+
		"\u0164\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0164\3\2\2\2\u0166\u0167"+
		"\3\2\2\2\u0167b\3\2\2\2\u0168\u016e\7&\2\2\u0169\u016a\7\62\2\2\u016a"+
		"\u016e\7z\2\2\u016b\u016c\7\62\2\2\u016c\u016e\7Z\2\2\u016d\u0168\3\2"+
		"\2\2\u016d\u0169\3\2\2\2\u016d\u016b\3\2\2\2\u016e\u0170\3\2\2\2\u016f"+
		"\u0171\5i\65\2\u0170\u016f\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0170\3\2"+
		"\2\2\u0172\u0173\3\2\2\2\u0173d\3\2\2\2\u0174\u0175\t\4\2\2\u0175f\3\2"+
		"\2\2\u0176\u0177\t\5\2\2\u0177h\3\2\2\2\u0178\u0179\t\6\2\2\u0179j\3\2"+
		"\2\2\u017a\u017e\5m\67\2\u017b\u017d\5o8\2\u017c\u017b\3\2\2\2\u017d\u0180"+
		"\3\2\2\2\u017e\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017fl\3\2\2\2\u0180"+
		"\u017e\3\2\2\2\u0181\u0182\t\7\2\2\u0182n\3\2\2\2\u0183\u0184\t\b\2\2"+
		"\u0184p\3\2\2\2\u0185\u0187\t\t\2\2\u0186\u0185\3\2\2\2\u0187\u0188\3"+
		"\2\2\2\u0188\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u018a\3\2\2\2\u018a"+
		"\u018b\b9\2\2\u018br\3\2\2\2\u018c\u018d\7\61\2\2\u018d\u018e\7\61\2\2"+
		"\u018e\u0192\3\2\2\2\u018f\u0191\n\n\2\2\u0190\u018f\3\2\2\2\u0191\u0194"+
		"\3\2\2\2\u0192\u0190\3\2\2\2\u0192\u0193\3\2\2\2\u0193\u0195\3\2\2\2\u0194"+
		"\u0192\3\2\2\2\u0195\u0196\b:\2\2\u0196t\3\2\2\2\u0197\u0198\7\61\2\2"+
		"\u0198\u0199\7,\2\2\u0199\u019d\3\2\2\2\u019a\u019c\13\2\2\2\u019b\u019a"+
		"\3\2\2\2\u019c\u019f\3\2\2\2\u019d\u019e\3\2\2\2\u019d\u019b\3\2\2\2\u019e"+
		"\u01a0\3\2\2\2\u019f\u019d\3\2\2\2\u01a0\u01a1\7,\2\2\u01a1\u01a2\7\61"+
		"\2\2\u01a2\u01a3\3\2\2\2\u01a3\u01a4\b;\2\2\u01a4v\3\2\2\2\34\2\u00fc"+
		"\u0102\u0104\u0112\u0116\u011b\u0122\u0127\u012e\u0133\u013a\u0141\u0146"+
		"\u014d\u0152\u0159\u015f\u0161\u0166\u016d\u0172\u017e\u0188\u0192\u019d"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}