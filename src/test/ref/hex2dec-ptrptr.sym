constant byte* DIGITS[]  = "0123456789abcdef"
void cls()
byte* cls::sc
byte* cls::sc#1 sc zp[2]:2 151.5
byte* cls::sc#2 sc zp[2]:2 151.5
constant byte* cls::screen = (byte*) 1024
void main()
byte* main::screen
byte utoa16n(byte utoa16n::nybble , word** utoa16n::dst , byte utoa16n::started)
word** utoa16n::dst
byte utoa16n::nybble
byte utoa16n::nybble#0 reg byte a 22.0
byte utoa16n::nybble#1 reg byte a 11.0
byte utoa16n::nybble#2 reg byte a 11.0
byte utoa16n::nybble#3 reg byte a 22.0
byte utoa16n::nybble#4 reg byte a 49.2
byte utoa16n::return
byte utoa16n::return#0 reg byte x 22.0
byte utoa16n::return#1 reg byte x 22.0
byte utoa16n::return#4 reg byte x 32.0
byte utoa16n::started
byte utoa16n::started#1 reg byte x 22.0
byte utoa16n::started#2 reg byte x 22.0
byte utoa16n::started#7 reg byte x 41.0
void utoa16w(word utoa16w::value , byte* volatile utoa16w::dst)
byte~ utoa16w::$0 reg byte a 22.0
byte~ utoa16w::$3 reg byte a 22.0
byte~ utoa16w::$6 reg byte a 22.0
byte~ utoa16w::$9 reg byte a 22.0
byte* volatile utoa16w::dst loadstore zp[2]:4 0.65625
byte utoa16w::started
byte utoa16w::started#1 reg byte x 7.333333333333333
byte utoa16w::started#2 reg byte x 7.333333333333333
word utoa16w::value
word utoa16w::value#5 value zp[2]:2 2.75

zp[2]:2 [ utoa16w::value#5 cls::sc#2 cls::sc#1 ]
reg byte a [ utoa16n::nybble#4 utoa16n::nybble#0 utoa16n::nybble#1 utoa16n::nybble#2 utoa16n::nybble#3 ]
reg byte x [ utoa16n::return#4 utoa16n::started#7 utoa16n::started#1 utoa16n::started#2 ]
zp[2]:4 [ utoa16w::dst ]
reg byte a [ utoa16w::$0 ]
reg byte x [ utoa16n::return#0 ]
reg byte x [ utoa16w::started#1 ]
reg byte a [ utoa16w::$3 ]
reg byte x [ utoa16n::return#1 ]
reg byte x [ utoa16w::started#2 ]
reg byte a [ utoa16w::$6 ]
reg byte a [ utoa16w::$9 ]
