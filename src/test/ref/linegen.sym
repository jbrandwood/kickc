(label) @1
(label) @begin
(label) @end
(const byte) RADIX::BINARY BINARY = (number) 2
(const byte) RADIX::DECIMAL DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL OCTAL = (number) 8
(const byte) SIZEOF_WORD SIZEOF_WORD = (byte) 2
(word()) divr16u((word) divr16u::dividend , (word) divr16u::divisor , (word) divr16u::rem)
(byte~) divr16u::$1 reg byte a 22.0
(byte~) divr16u::$2 reg byte a 22.0
(label) divr16u::@1
(label) divr16u::@2
(label) divr16u::@3
(label) divr16u::@4
(label) divr16u::@5
(label) divr16u::@6
(label) divr16u::@return
(word) divr16u::dividend
(word) divr16u::dividend#0 dividend zp ZP_WORD:3 2.75
(word) divr16u::dividend#1 dividend zp ZP_WORD:3 4.0
(word) divr16u::dividend#3 dividend zp ZP_WORD:3 5.0
(word) divr16u::dividend#5 dividend zp ZP_WORD:3 4.0
(word) divr16u::divisor
(word) divr16u::divisor#6 divisor zp ZP_WORD:13 1.375
(byte) divr16u::i
(byte) divr16u::i#1 reg byte x 16.5
(byte) divr16u::i#2 reg byte x 1.6923076923076923
(word) divr16u::quotient
(word) divr16u::quotient#1 quotient zp ZP_WORD:15 16.5
(word) divr16u::quotient#2 quotient zp ZP_WORD:15 11.0
(word) divr16u::quotient#3 quotient zp ZP_WORD:15 2.75
(word) divr16u::rem
(word) divr16u::rem#0 rem zp ZP_WORD:23 8.25
(word) divr16u::rem#1 rem zp ZP_WORD:23 22.0
(word) divr16u::rem#10 rem zp ZP_WORD:23 4.0
(word) divr16u::rem#11 rem zp ZP_WORD:23 11.666666666666666
(word) divr16u::rem#2 rem zp ZP_WORD:23 22.0
(word) divr16u::rem#4 rem zp ZP_WORD:23 4.0
(word) divr16u::rem#5 rem zp ZP_WORD:23 24.0
(word) divr16u::rem#6 rem zp ZP_WORD:23 11.0
(word) divr16u::return
(word) divr16u::return#0 return zp ZP_WORD:15 5.285714285714286
(word) divr16u::return#2 return zp ZP_WORD:15 4.0
(word) divr16u::return#3 return zp ZP_WORD:15 4.0
(void()) lin16u_gen((word) lin16u_gen::min , (word) lin16u_gen::max , (word*) lin16u_gen::lintab , (word) lin16u_gen::length)
(word~) lin16u_gen::$6 $6 zp ZP_WORD:23 22.0
(label) lin16u_gen::@1
(label) lin16u_gen::@2
(label) lin16u_gen::@3
(label) lin16u_gen::@4
(label) lin16u_gen::@return
(word) lin16u_gen::ampl
(word) lin16u_gen::ampl#0 ampl zp ZP_WORD:3 4.0
(word) lin16u_gen::i
(word) lin16u_gen::i#1 i zp ZP_WORD:13 16.5
(word) lin16u_gen::i#4 i zp ZP_WORD:13 4.4
(word) lin16u_gen::length
(word*) lin16u_gen::lintab
(word*) lin16u_gen::lintab#10 lintab zp ZP_WORD:11 0.16666666666666666
(word*) lin16u_gen::lintab#3 lintab zp ZP_WORD:11 7.333333333333333
(word*) lin16u_gen::lintab#9 lintab zp ZP_WORD:11 8.75
(word) lin16u_gen::max
(word) lin16u_gen::max#3 max zp ZP_WORD:3 2.0
(word) lin16u_gen::min
(word) lin16u_gen::min#3 min zp ZP_WORD:5 0.36363636363636365
(dword) lin16u_gen::step
(dword) lin16u_gen::step#0 step zp ZP_DWORD:19 1.4444444444444446
(word) lin16u_gen::stepf
(word) lin16u_gen::stepf#0 stepf zp ZP_WORD:15 4.0
(word) lin16u_gen::stepi
(word) lin16u_gen::stepi#0 stepi zp ZP_WORD:17 0.8
(dword) lin16u_gen::val
(dword) lin16u_gen::val#0 val zp ZP_DWORD:7 4.0
(dword) lin16u_gen::val#1 val zp ZP_DWORD:7 5.5
(dword) lin16u_gen::val#4 val zp ZP_DWORD:7 11.666666666666666
(void()) main()
(byte~) main::$27 reg byte a 22.0
(byte~) main::$28 reg byte a 22.0
(byte~) main::$29 reg byte a 22.0
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(byte) main::i
(byte) main::i#1 reg byte x 16.5
(byte) main::i#12 reg byte x 3.142857142857143
(word[$14]) main::lintab1
(const word[$14]) main::lintab1#0 lintab1 = { fill( $14, 0) }
(word[$14]) main::lintab2
(const word[$14]) main::lintab2#0 lintab2 = { fill( $14, 0) }
(word[$14]) main::lintab3
(const word[$14]) main::lintab3#0 lintab3 = { fill( $14, 0) }
(const string) main::str str = (string) "   "
(const string) main::str1 str1 = (string) " "
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp ZP_WORD:11 16.5
(byte*) memset::dst#4 dst zp ZP_WORD:11 16.5
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(byte*) 1024
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0 reg byte a 4.0
(byte~) print_byte::$2 reg byte a 4.0
(label) print_byte::@1
(label) print_byte::@return
(byte) print_byte::b
(byte) print_byte::b#0 b zp ZP_BYTE:2 4.0
(byte) print_byte::b#1 b zp ZP_BYTE:2 4.0
(byte) print_byte::b#2 b zp ZP_BYTE:2 11.0
(byte) print_byte::b#3 b zp ZP_BYTE:2 4.75
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 4.0
(byte) print_char::ch#1 reg byte a 4.0
(byte) print_char::ch#2 reg byte a 6.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp ZP_WORD:3 101.0
(byte*~) print_char_cursor#102 print_char_cursor zp ZP_WORD:3 22.0
(byte*) print_char_cursor#11 print_char_cursor zp ZP_WORD:3 4.228571428571427
(byte*) print_char_cursor#2 print_char_cursor zp ZP_WORD:3 11.37037037037037
(byte*) print_char_cursor#50 print_char_cursor zp ZP_WORD:3 4.0
(byte*) print_char_cursor#81 print_char_cursor zp ZP_WORD:3 5.666666666666667
(byte*) print_char_cursor#86 print_char_cursor zp ZP_WORD:3 45.0
(byte*~) print_char_cursor#99 print_char_cursor zp ZP_WORD:3 4.0
(void()) print_cls()
(label) print_cls::@return
(byte[]) print_hextab
(const byte[]) print_hextab#0 print_hextab = (string) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#1 print_line_cursor zp ZP_WORD:11 8.225
(byte*) print_line_cursor#11 print_line_cursor zp ZP_WORD:11 204.0
(byte*) print_line_cursor#21 print_line_cursor zp ZP_WORD:11 15.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp ZP_WORD:5 202.0
(byte*) print_str::str#10 str zp ZP_WORD:5 101.5
(byte*) print_str::str#12 str zp ZP_WORD:5 2.0
(void()) print_word((word) print_word::w)
(label) print_word::@1
(label) print_word::@return
(word) print_word::w
(word) print_word::w#10 w zp ZP_WORD:5 12.333333333333332
(word) print_word::w#3 w zp ZP_WORD:5 22.0
(word) print_word::w#4 w zp ZP_WORD:5 22.0
(word) print_word::w#5 w zp ZP_WORD:5 22.0
(word) rem16u
(word) rem16u#1 rem16u zp ZP_WORD:23 0.8

reg byte x [ main::i#12 main::i#1 ]
zp ZP_BYTE:2 [ print_byte::b#3 print_byte::b#2 print_byte::b#0 print_byte::b#1 ]
reg byte a [ print_char::ch#2 print_char::ch#0 print_char::ch#1 ]
zp ZP_WORD:3 [ lin16u_gen::max#3 lin16u_gen::ampl#0 divr16u::dividend#3 divr16u::dividend#5 divr16u::dividend#1 divr16u::dividend#0 print_char_cursor#86 print_char_cursor#50 print_char_cursor#81 print_char_cursor#102 print_char_cursor#2 print_char_cursor#11 print_char_cursor#99 print_char_cursor#1 ]
zp ZP_WORD:5 [ lin16u_gen::min#3 print_str::str#10 print_str::str#12 print_str::str#0 print_word::w#10 print_word::w#3 print_word::w#4 print_word::w#5 ]
zp ZP_DWORD:7 [ lin16u_gen::val#4 lin16u_gen::val#1 lin16u_gen::val#0 ]
zp ZP_WORD:11 [ lin16u_gen::lintab#9 lin16u_gen::lintab#3 lin16u_gen::lintab#10 memset::dst#4 memset::dst#1 print_line_cursor#11 print_line_cursor#21 print_line_cursor#1 ]
zp ZP_WORD:13 [ divr16u::divisor#6 lin16u_gen::i#4 lin16u_gen::i#1 ]
zp ZP_WORD:15 [ divr16u::quotient#3 divr16u::return#0 divr16u::quotient#1 divr16u::quotient#2 divr16u::return#2 divr16u::return#3 lin16u_gen::stepf#0 ]
reg byte x [ divr16u::i#2 divr16u::i#1 ]
reg byte a [ main::$27 ]
reg byte a [ main::$28 ]
reg byte a [ main::$29 ]
reg byte a [ print_byte::$0 ]
reg byte a [ print_byte::$2 ]
zp ZP_WORD:17 [ lin16u_gen::stepi#0 ]
zp ZP_DWORD:19 [ lin16u_gen::step#0 ]
zp ZP_WORD:23 [ lin16u_gen::$6 divr16u::rem#5 divr16u::rem#10 divr16u::rem#4 divr16u::rem#11 divr16u::rem#6 divr16u::rem#0 divr16u::rem#1 divr16u::rem#2 rem16u#1 ]
reg byte a [ divr16u::$1 ]
reg byte a [ divr16u::$2 ]
