@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@1
  [5] (word) main::i#2 ← phi( main/(word) 0 main::@1/(word) main::i#1 )
  [6] (byte~) main::$0 ← (byte)(word) main::i#2
  [7] (word~) main::$3 ← (word) main::i#2 << (byte) 1
  [8] (byte*~) main::$11 ← (byte*)(const struct Point*) points + (word~) main::$3
  [9] *((byte*~) main::$11) ← (byte) 2
  [10] (byte*~) main::$12 ← (byte*)(const struct Point*) points+(const byte) OFFSET_STRUCT_POINT_Y + (word~) main::$3
  [11] *((byte*~) main::$12) ← (byte~) main::$0
  [12] (word) main::i#1 ← ++ (word) main::i#2
  [13] if((word) main::i#1!=(word) $1f4) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  [14] (word) main::i1#2 ← phi( main::@1/(word) 0 main::@2/(word) main::i1#1 )
  [15] (word~) main::$4 ← (word) main::i1#2 << (byte) 1
  [16] (byte*~) main::$13 ← (byte*)(const struct Point*) points + (word~) main::$4
  [17] (byte*~) main::$14 ← (byte*)(const struct Point*) main::SCREEN + (word~) main::$4
  [18] *((byte*~) main::$14) ← *((byte*~) main::$13)
  [19] (byte*~) main::$15 ← (byte*)(const struct Point*) points+(const byte) OFFSET_STRUCT_POINT_Y + (word~) main::$4
  [20] (byte*~) main::$16 ← (byte*)(const struct Point*) main::SCREEN+(const byte) OFFSET_STRUCT_POINT_Y + (word~) main::$4
  [21] *((byte*~) main::$16) ← *((byte*~) main::$15)
  [22] (word) main::i1#1 ← ++ (word) main::i1#2
  [23] if((word) main::i1#1!=(word) $1f4) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@2
  [24] return 
  to:@return
