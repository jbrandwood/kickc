import "basic-floats"
import "print"

byte* PROCPORT = $01;
byte* CHARGEN = $d000;
byte* SCREEN = $0400;

byte* RASTER = $d012;
byte* BORDERCOL = $d020;

byte* SPRITES_XPOS = $d000;
byte* SPRITES_YPOS = $d001;
byte* SPRITES_XMSB = $d010;
byte* SPRITES_ENABLE = $d015;
byte* SPRITES_EXPAND_Y = $d017;
byte* SPRITES_PRIORITY = $d01b;
byte* SPRITES_MC = $d01c;
byte* SPRITES_EXPAND_X = $d01d;
byte* SPRITES_MC1 = $d025;
byte* SPRITES_MC2 = $d026;
byte* SPRITES_COLS = $d027;

const byte sinlen_x = 221;
const byte[] sintab_x = $1000;
const byte sinlen_y = 197;
const byte[] sintab_y = $1100;
const byte[] sprites = $2000;

void main() {
    init();
    do {
        do { } while (*RASTER!=$ff);
        anim();
    } while(true);
}

void init() {
    for(byte* sc = SCREEN; sc<SCREEN+1000; sc++) {
        *sc = ' ';
    }
    place_sprites();
    gen_sprites();
    gen_sintab(sintab_x, sinlen_x, $10, $ff);
    gen_sintab(sintab_y, sinlen_y, $30, $d0);
}

byte sin_idx_x = 0;
byte sin_idx_y = 0;

void anim() {
    (*BORDERCOL)++;
    byte xidx = sin_idx_x;
    byte yidx = sin_idx_y;
    byte j2 = 12;
    for( byte j : 0..6) {
        SPRITES_XPOS[j2] = sintab_x[xidx];
        SPRITES_YPOS[j2] = sintab_y[yidx];
        xidx = xidx+10;
        if(xidx>=sinlen_x) {
            xidx = xidx-sinlen_x;
        }
        yidx = yidx+8;
        if(yidx>=sinlen_y) {
            yidx = yidx-sinlen_y;
        }
        j2--;
        j2--;
    }

    // Increment sin indices
    if(++sin_idx_x>=sinlen_x) {
        sin_idx_x = 0;
    }
    if(++sin_idx_y>=sinlen_y) {
        sin_idx_y = 0;
    }
    (*BORDERCOL)--;
}

void place_sprites() {
    *SPRITES_ENABLE = %01111111;
    *SPRITES_EXPAND_X = %01111111;
    *SPRITES_EXPAND_Y = %01111111;
    byte* sprites_ptr = SCREEN+$3f8;
    byte spr_id = (byte)(sprites/$40);
    byte spr_x = 60;
    byte j2 = 0;
    byte col = $5;
    for( byte j : 0..6) {
        sprites_ptr[j] = spr_id++;
        SPRITES_XPOS[j2] = spr_x;
        SPRITES_YPOS[j2] = 80;
        SPRITES_COLS[j] = col;
        spr_x = spr_x + 32;
        col = col^($7^$5);
        j2++;
        j2++;
    }
}

void gen_sprites() {
    byte[] cml = "camelot";
    byte* spr = sprites;
    for( byte i : 0..6 ) {
        gen_chargen_sprite(cml[i], spr);
        spr = spr + $40;
    }
}

// Generate a sprite from a C64 CHARGEN character (by making each pixel 3x3 pixels large)
// - c is the character to generate
// - sprite is a pointer to the position of the sprite to generate
void gen_chargen_sprite(byte ch, byte* sprite) {
    byte* chargen = CHARGEN+((word)ch)<<3;
    asm { sei }
    *PROCPORT = $32;
    for(byte y:0..7) {
      byte bits = chargen[y];
      byte s_gen = 0;
      byte s_gen_cnt = 0;
      for(byte x:0..7) {
        byte c = 0;
        if((bits & $80) != 0) {
           c = 1;
        }
        for(byte b : 0..2){
            s_gen = s_gen<<1 | c;
            if(++s_gen_cnt==8) {
                sprite[0] = s_gen;
                sprite[3] = s_gen;
                sprite[6] = s_gen;
                sprite++;
                s_gen = 0;
                s_gen_cnt = 0;
            }
        }
        bits = bits<<1;
      }
      sprite = sprite + 6;
    }
    *PROCPORT = $37;
    asm { cli }
}

// Generate a sinus table using BASIC floats
// - sintab is a pointer to the table to fill
// - length is the length of the sine table
// - min is the minimum value of the generated sinus
// - max is the maximum value of the generated sinus
void gen_sintab(byte* sintab, byte length, byte min, byte max) {
    byte[] f_i = {0, 0, 0, 0, 0};   // i * 2 * PI
    byte[] f_min = {0, 0, 0, 0, 0}; // amplitude/2 + min
    byte[] f_amp = {0, 0, 0, 0, 0}; // amplitude/2
    byte* f_2pi = $e2e5;            // 2 * PI
    setFAC((word)max);       // fac = max
    setARGtoFAC();           // arg = max
    // TODO: Kernel JSR clobbers A,X,Y
    asm {
        lda #0
        ldx #0
        ldy #0
    }
    setFAC((word)min);       // fac = min
    setMEMtoFAC(f_min);      // f_min = min
    subFACfromARG();         // fac = max - min
    setMEMtoFAC(f_amp);      // f_amp = max - min
    setFAC(2);               // fac = 2
    divMEMbyFAC(f_amp);      // fac = (max - min) / 2
    setMEMtoFAC(f_amp);      // f_amp = (max - min) / 2
    addMEMtoFAC(f_min);      // fac = min + (max - min) / 2
    setMEMtoFAC(f_min);      // f_min = min + (max - min) / 2
    for(byte i =0; i<length; i++) {
        setFAC((word)i);       // fac = i
        mulFACbyMEM(f_2pi);    // fac = i * 2 * PI
        setMEMtoFAC(f_i);      // f_i = i * 2 * PI
        setFAC((word)length);  // fac = length
        divMEMbyFAC(f_i);      // fac = i * 2 * PI / length
        sinFAC();              // fac = sin( i * 2 * PI / length )
        mulFACbyMEM(f_amp);    // fac =  sin( i * 2 * PI / length ) * (max - min) / 2
        addMEMtoFAC(f_min);    // fac =  sin( i * 2 * PI / length ) * (max - min) / 2 + min + (max - min) / 2
        sintab[i] = (byte)getFAC();
        (*BORDERCOL)++;
    }
}

Importing basic-floats
// Library wrapping the BASIC floating point functions
// See https://www.c64-wiki.com/wiki/Floating_point_arithmetic
// See http://www.pagetable.com/c64rom/c64rom_sc.html

// Zeropage addresses used to hold lo/hi-bytes of addresses of float numbers in MEM
const byte* memLo = $fe;
const byte* memHi = $ff;

// Prepare MEM pointers for operations using MEM
void prepareMEM(byte* mem) {
    *memLo = <mem;
    *memHi = >mem;
}

// FAC = word
// Set the FAC (floating point accumulator) to the integer value of a 16bit word
void setFAC(word w) {
    prepareMEM((byte*)w);
    // Load word register Y,A into FAC (floating point accumulator)
    asm {
        ldy $fe
        lda $ff
        jsr $b391
    }
}

// word = FAC
// Get the value of the FAC (floating point accumulator) as an integer 16bit word
// Destroys the value in the FAC in the process
word getFAC() {
    // Load FAC (floating point accumulator) integer part into word register Y,A
    asm {
        jsr $b1aa
        sty $fe
        sta $ff
    }
    word w = 0;
    <w = *memLo;
    >w = *memHi;
    return w;
}

// ARG = FAC
// Set the ARG (floating point argument) to the value of the FAC (floating point accumulator)
void setARGtoFAC() {
    asm {
        jsr $bc0f
    }
}

// FAC = ARG
// Set the FAC (floating point accumulator) to the value of the ARG (floating point argument)
void setFACtoARG() {
    asm {
        jsr $bbfc
    }
}

// MEM = FAC
// Stores the value of the FAC to memory
// Stores 5 bytes (means it is necessary to allocate 5 bytes to avoid clobbering other data using eg. byte[] mem = {0, 0, 0, 0, 0};)
void setMEMtoFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        ldx $fe
        ldy $ff
        jsr $bbd4
    }
}

// FAC = MEM
// Set the FAC to value from MEM (float saved in memory)
// Reads 5 bytes
void setFACtoMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $bba2
    }
}

// FAC = PI/2
// Set the FAC to PI/2
// Reads 5 bytes from the BASIC ROM
void setFACtoPIhalf() {
    asm {
        lda #$e0
        ldy #$e2
        jsr $bba2
    }
}

// FAC = 2*PI
// Set the FAC to 2*PI
// Reads 5 bytes from the BASIC ROM
void setFACto2PI() {
    asm {
        lda #$e5
        ldy #$e2
        jsr $bba2
    }
}

// ARG = MEM
// Load the ARG from memory
// Reads 5 bytes
void setARGtoMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $ba8c
    }
}

// FAC = MEM+FAC
// Set FAC to MEM (float saved in memory) plus FAC (float accumulator)
// Reads 5 bytes from memory
void addMEMtoFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe //memLo
        ldy $ff //memHi
        jsr $b867
    }
}

// FAC = ARG+FAC
// Add ARG (floating point argument) to FAC (floating point accumulator)
void addARGtoFAC() {
    asm {
        jsr $b86a
    }
}

// FAC = MEM-FAC
// Set FAC to MEM (float saved in memory) minus FAC (float accumulator)
// Reads 5 bytes from memory
void subFACfromMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $b850
    }
}

// FAC = ARG-FAC
// Set FAC to ARG minus FAC
void subFACfromARG() {
    asm {
        jsr $b853
    }
}

// FAC = MEM/FAC
// Set FAC to MEM (float saved in memory) divided by FAC (float accumulator)
// Reads 5 bytes from memory
void divMEMbyFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $bb0f
    }
}

// FAC = MEM*FAC
// Set FAC to MEM (float saved in memory) multiplied by FAC (float accumulator)
// Reads 5 bytes from memory
void mulFACbyMEM(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $ba28
    }
}

// FAC = MEM^FAC
// Set FAC to MEM (float saved in memory) raised to power of FAC (float accumulator)
// Reads 5 bytes from memory
void pwrMEMbyFAC(byte* mem) {
    prepareMEM(mem);
    asm {
        lda $fe
        ldy $ff
        jsr $bf78
    }
}

// FAC = int(FAC)
// Set FAC to integer part of the FAC - int(FAC)
// The integer part is defined as the next lower integer - like java floor()
void intFAC() {
    asm {
        jsr $bccc
    }
}

// FAC = sin(FAC)
// Set FAC to sinus of the FAC - sin(FAC)
// Sinus is calculated on radians (0-2*PI)
void sinFAC() {
    asm {
        jsr $e26b
    }
}

// FAC = cos(FAC)
// Set FAC to cosinus of the FAC - cos(FAC)
// Cosinus is calculated on radians (0-2*PI)
void cosFAC() {
    asm {
        jsr $e264
    }
}

// FAC = tan(FAC)
// Set FAC to the tangens of FAC - tan(FAC)
// Tangens is calculated on radians (0-2*PI)
void tanFAC() {
    asm {
        jsr $e2b4
    }
}

// FAC = atn(FAC)
// Set FAC to the arc tangens of FAC - atn(FAC)
// Arc Tangens is calculated on radians (0-2*PI)
void atnFAC() {
    asm {
        jsr $e303
    }
}

// FAC = sqr(FAC)
// Set FAC to the square root of FAC - sqr(FAC)
void sqrFAC() {
    asm {
        jsr $bf71
    }
}

// FAC = exp(FAC)
// Set FAC to the exponential function of FAC - exp(FAC)
// Exp is based on the natural logarithm e=2.71828183
void expFAC() {
    asm {
        jsr $bfed
    }
}

// FAC = log(FAC)
// Set FAC to the logarithm of FAC - log(FAC)
// Log is based on the natural logarithm e=2.71828183
void logFAC() {
    asm {
        jsr $b9ea
    }
}

// FAC = FAC/10
// Set FAC to FAC divided by 10
void divFACby10() {
    asm {
        jsr $bafe
    }
}

// FAC = FAC*10
// Set FAC to FAC multiplied by 10
void mulFACby10() {
    asm {
        jsr $bae2
    }
}

Importing print

byte* line_cursor = $0400;
byte* char_cursor = line_cursor;

// Print a zero-terminated string
void print_str(byte* str) {
    while(*str!='@') {
        *(char_cursor++) = *(str++);
    }
}

// Print a newline
void print_ln() {
    do {
        line_cursor = line_cursor + $28;
    } while (line_cursor<char_cursor);
    char_cursor = line_cursor;
}

// Print a word as HEX
void print_word(word w) {
    print_byte(>w);
    print_byte(<w);
}

// Print a byte as HEX
void print_byte(byte b) {
    // Table of hexadecimal digits
    const byte[] hextab = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };
    print_char(hextab[b>>4]);
    print_char(hextab[b&$f]);
}

// Print a single char
void print_char(byte ch) {
    *(char_cursor++) = ch;
}


Adding pre/post-modifier (byte*) char_cursor ← ++ (byte*) char_cursor
Adding pre/post-modifier (byte*) print_str::str ← ++ (byte*) print_str::str
Adding pre/post-modifier (byte*) char_cursor ← ++ (byte*) char_cursor
Adding pre/post-modifier (byte*) init::sc ← ++ (byte*) init::sc
Adding pre/post-modifier *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
Adding pre/post-modifier (byte) anim::j2 ← -- (byte) anim::j2
Adding pre/post-modifier (byte) anim::j2 ← -- (byte) anim::j2
Adding pre/post-modifier (byte) sin_idx_x ← ++ (byte) sin_idx_x
Adding pre/post-modifier (byte) sin_idx_y ← ++ (byte) sin_idx_y
Adding pre/post-modifier *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
Adding pre/post-modifier (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
Adding pre/post-modifier (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
Adding pre/post-modifier (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
Adding pre/post-modifier (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
Adding pre/post-modifier (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
Adding pre/post-modifier *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
Adding pre/post-modifier (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
Fixing lo/hi-lvalue lo=(getFAC::w) ← *(memLo)
Fixing lo/hi-lvalue hi=(getFAC::w) ← *(memHi)
PROGRAM
  (byte*) memLo ← (byte/word/signed word) 254
  (byte*) memHi ← (byte/word/signed word) 255
proc (void()) prepareMEM((byte*) prepareMEM::mem)
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem
  *((byte*) memLo) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem
  *((byte*) memHi) ← (byte~) prepareMEM::$1
prepareMEM::@return:
  return 
endproc // prepareMEM()
proc (void()) setFAC((word) setFAC::w)
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w
  (void~) setFAC::$1 ← call prepareMEM (byte*~) setFAC::$0 
  asm { ldy$felda$ffjsr$b391 }
setFAC::@return:
  return 
endproc // setFAC()
proc (word()) getFAC()
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w ← (word) getFAC::w lo= *((byte*) memLo)
  (word) getFAC::w ← (word) getFAC::w hi= *((byte*) memHi)
  (word) getFAC::return ← (word) getFAC::w
  goto getFAC::@return
getFAC::@return:
  (word) getFAC::return ← (word) getFAC::return
  return (word) getFAC::return
endproc // getFAC()
proc (void()) setARGtoFAC()
  asm { jsr$bc0f }
setARGtoFAC::@return:
  return 
endproc // setARGtoFAC()
proc (void()) setFACtoARG()
  asm { jsr$bbfc }
setFACtoARG::@return:
  return 
endproc // setFACtoARG()
proc (void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
  (void~) setMEMtoFAC::$0 ← call prepareMEM (byte*) setMEMtoFAC::mem 
  asm { ldx$feldy$ffjsr$bbd4 }
setMEMtoFAC::@return:
  return 
endproc // setMEMtoFAC()
proc (void()) setFACtoMEM((byte*) setFACtoMEM::mem)
  (void~) setFACtoMEM::$0 ← call prepareMEM (byte*) setFACtoMEM::mem 
  asm { lda$feldy$ffjsr$bba2 }
setFACtoMEM::@return:
  return 
endproc // setFACtoMEM()
proc (void()) setFACtoPIhalf()
  asm { lda#$e0ldy#$e2jsr$bba2 }
setFACtoPIhalf::@return:
  return 
endproc // setFACtoPIhalf()
proc (void()) setFACto2PI()
  asm { lda#$e5ldy#$e2jsr$bba2 }
setFACto2PI::@return:
  return 
endproc // setFACto2PI()
proc (void()) setARGtoMEM((byte*) setARGtoMEM::mem)
  (void~) setARGtoMEM::$0 ← call prepareMEM (byte*) setARGtoMEM::mem 
  asm { lda$feldy$ffjsr$ba8c }
setARGtoMEM::@return:
  return 
endproc // setARGtoMEM()
proc (void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
  (void~) addMEMtoFAC::$0 ← call prepareMEM (byte*) addMEMtoFAC::mem 
  asm { lda$feldy$ffjsr$b867 }
addMEMtoFAC::@return:
  return 
endproc // addMEMtoFAC()
proc (void()) addARGtoFAC()
  asm { jsr$b86a }
addARGtoFAC::@return:
  return 
endproc // addARGtoFAC()
proc (void()) subFACfromMEM((byte*) subFACfromMEM::mem)
  (void~) subFACfromMEM::$0 ← call prepareMEM (byte*) subFACfromMEM::mem 
  asm { lda$feldy$ffjsr$b850 }
subFACfromMEM::@return:
  return 
endproc // subFACfromMEM()
proc (void()) subFACfromARG()
  asm { jsr$b853 }
subFACfromARG::@return:
  return 
endproc // subFACfromARG()
proc (void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
  (void~) divMEMbyFAC::$0 ← call prepareMEM (byte*) divMEMbyFAC::mem 
  asm { lda$feldy$ffjsr$bb0f }
divMEMbyFAC::@return:
  return 
endproc // divMEMbyFAC()
proc (void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
  (void~) mulFACbyMEM::$0 ← call prepareMEM (byte*) mulFACbyMEM::mem 
  asm { lda$feldy$ffjsr$ba28 }
mulFACbyMEM::@return:
  return 
endproc // mulFACbyMEM()
proc (void()) pwrMEMbyFAC((byte*) pwrMEMbyFAC::mem)
  (void~) pwrMEMbyFAC::$0 ← call prepareMEM (byte*) pwrMEMbyFAC::mem 
  asm { lda$feldy$ffjsr$bf78 }
pwrMEMbyFAC::@return:
  return 
endproc // pwrMEMbyFAC()
proc (void()) intFAC()
  asm { jsr$bccc }
intFAC::@return:
  return 
endproc // intFAC()
proc (void()) sinFAC()
  asm { jsr$e26b }
sinFAC::@return:
  return 
endproc // sinFAC()
proc (void()) cosFAC()
  asm { jsr$e264 }
cosFAC::@return:
  return 
endproc // cosFAC()
proc (void()) tanFAC()
  asm { jsr$e2b4 }
tanFAC::@return:
  return 
endproc // tanFAC()
proc (void()) atnFAC()
  asm { jsr$e303 }
atnFAC::@return:
  return 
endproc // atnFAC()
proc (void()) sqrFAC()
  asm { jsr$bf71 }
sqrFAC::@return:
  return 
endproc // sqrFAC()
proc (void()) expFAC()
  asm { jsr$bfed }
expFAC::@return:
  return 
endproc // expFAC()
proc (void()) logFAC()
  asm { jsr$b9ea }
logFAC::@return:
  return 
endproc // logFAC()
proc (void()) divFACby10()
  asm { jsr$bafe }
divFACby10::@return:
  return 
endproc // divFACby10()
proc (void()) mulFACby10()
  asm { jsr$bae2 }
mulFACby10::@return:
  return 
endproc // mulFACby10()
  (byte*) line_cursor ← (word/signed word) 1024
  (byte*) char_cursor ← (byte*) line_cursor
proc (void()) print_str((byte*) print_str::str)
print_str::@1:
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  goto print_str::@3
print_str::@2:
  *((byte*) char_cursor) ← *((byte*) print_str::str)
  (byte*) char_cursor ← ++ (byte*) char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  goto print_str::@1
print_str::@3:
print_str::@return:
  return 
endproc // print_str()
proc (void()) print_ln()
print_ln::@1:
  (byte*~) print_ln::$0 ← (byte*) line_cursor + (byte/signed byte/word/signed word) 40
  (byte*) line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor < (byte*) char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  (byte*) char_cursor ← (byte*) line_cursor
print_ln::@return:
  return 
endproc // print_ln()
proc (void()) print_word((word) print_word::w)
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
print_word::@return:
  return 
endproc // print_word()
proc (void()) print_byte((byte) print_byte::b)
  (byte[]) print_byte::hextab ← { (byte) '0', (byte) '1', (byte) '2', (byte) '3', (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8', (byte) '9', (byte) 'a', (byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e', (byte) 'f' }
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word) 4
  (byte~) print_byte::$1 ← (byte[]) print_byte::hextab *idx (byte~) print_byte::$0
  (void~) print_byte::$2 ← call print_char (byte~) print_byte::$1 
  (byte~) print_byte::$3 ← (byte) print_byte::b & (byte/signed byte/word/signed word) 15
  (byte~) print_byte::$4 ← (byte[]) print_byte::hextab *idx (byte~) print_byte::$3
  (void~) print_byte::$5 ← call print_char (byte~) print_byte::$4 
print_byte::@return:
  return 
endproc // print_byte()
proc (void()) print_char((byte) print_char::ch)
  *((byte*) char_cursor) ← (byte) print_char::ch
  (byte*) char_cursor ← ++ (byte*) char_cursor
print_char::@return:
  return 
endproc // print_char()
  (byte*) PROCPORT ← (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN ← (word) 53248
  (byte*) SCREEN ← (word/signed word) 1024
  (byte*) RASTER ← (word) 53266
  (byte*) BORDERCOL ← (word) 53280
  (byte*) SPRITES_XPOS ← (word) 53248
  (byte*) SPRITES_YPOS ← (word) 53249
  (byte*) SPRITES_XMSB ← (word) 53264
  (byte*) SPRITES_ENABLE ← (word) 53269
  (byte*) SPRITES_EXPAND_Y ← (word) 53271
  (byte*) SPRITES_PRIORITY ← (word) 53275
  (byte*) SPRITES_MC ← (word) 53276
  (byte*) SPRITES_EXPAND_X ← (word) 53277
  (byte*) SPRITES_MC1 ← (word) 53285
  (byte*) SPRITES_MC2 ← (word) 53286
  (byte*) SPRITES_COLS ← (word) 53287
  (byte) sinlen_x ← (byte/word/signed word) 221
  (byte[]) sintab_x ← (word/signed word) 4096
  (byte) sinlen_y ← (byte/word/signed word) 197
  (byte[]) sintab_y ← (word/signed word) 4352
  (byte[]) sprites ← (word/signed word) 8192
proc (void()) main()
  (void~) main::$0 ← call init 
main::@1:
main::@2:
  (boolean~) main::$1 ← *((byte*) RASTER) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  (void~) main::$2 ← call anim 
  if(true) goto main::@1
main::@return:
  return 
endproc // main()
proc (void()) init()
  (byte*) init::sc ← (byte*) SCREEN
init::@1:
  *((byte*) init::sc) ← (byte) ' '
  (byte*) init::sc ← ++ (byte*) init::sc
  (byte*~) init::$0 ← (byte*) SCREEN + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  (void~) init::$2 ← call place_sprites 
  (void~) init::$3 ← call gen_sprites 
  (void~) init::$4 ← call gen_sintab (byte[]) sintab_x (byte) sinlen_x (byte/signed byte/word/signed word) 16 (byte/word/signed word) 255 
  (void~) init::$5 ← call gen_sintab (byte[]) sintab_y (byte) sinlen_y (byte/signed byte/word/signed word) 48 (byte/word/signed word) 208 
init::@return:
  return 
endproc // init()
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
proc (void()) anim()
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) anim::xidx ← (byte) sin_idx_x
  (byte) anim::yidx ← (byte) sin_idx_y
  (byte) anim::j2 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j ← (byte/signed byte/word/signed word) 0
anim::@1:
  (byte~) anim::$0 ← (byte[]) sintab_x *idx (byte) anim::xidx
  *((byte*) SPRITES_XPOS + (byte) anim::j2) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y *idx (byte) anim::yidx
  *((byte*) SPRITES_YPOS + (byte) anim::j2) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx >= (byte) sinlen_x
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  (byte~) anim::$5 ← (byte) anim::xidx - (byte) sinlen_x
  (byte) anim::xidx ← (byte~) anim::$5
anim::@2:
  (byte~) anim::$6 ← (byte) anim::yidx + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx >= (byte) sinlen_y
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  (byte~) anim::$9 ← (byte) anim::yidx - (byte) sinlen_y
  (byte) anim::yidx ← (byte~) anim::$9
anim::@3:
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j ← ++ (byte) anim::j
  (boolean~) anim::$10 ← (byte) anim::j != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  (byte) sin_idx_x ← ++ (byte) sin_idx_x
  (boolean~) anim::$11 ← (byte) sin_idx_x >= (byte) sinlen_x
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
anim::@4:
  (byte) sin_idx_y ← ++ (byte) sin_idx_y
  (boolean~) anim::$13 ← (byte) sin_idx_y >= (byte) sinlen_y
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
anim::@5:
  *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
anim::@return:
  return 
endproc // anim()
proc (void()) place_sprites()
  *((byte*) SPRITES_ENABLE) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j ← (byte/signed byte/word/signed word) 0
place_sprites::@1:
  *((byte*) place_sprites::sprites_ptr + (byte) place_sprites::j) ← (byte) place_sprites::spr_id
  (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
  *((byte*) SPRITES_XPOS + (byte) place_sprites::j2) ← (byte) place_sprites::spr_x
  *((byte*) SPRITES_YPOS + (byte) place_sprites::j2) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS + (byte) place_sprites::j) ← (byte) place_sprites::col
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col ^ (byte~) place_sprites::$4
  (byte) place_sprites::col ← (byte~) place_sprites::$5
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j ← ++ (byte) place_sprites::j
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
place_sprites::@return:
  return 
endproc // place_sprites()
proc (void()) gen_sprites()
  (byte[]) gen_sprites::cml ← (string) "camelot"
  (byte*) gen_sprites::spr ← (byte[]) sprites
  (byte) gen_sprites::i ← (byte/signed byte/word/signed word) 0
gen_sprites::@1:
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml *idx (byte) gen_sprites::i
  (void~) gen_sprites::$1 ← call gen_chargen_sprite (byte~) gen_sprites::$0 (byte*) gen_sprites::spr 
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i ← ++ (byte) gen_sprites::i
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
gen_sprites::@return:
  return 
endproc // gen_sprites()
proc (void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y ← (byte/signed byte/word/signed word) 0
gen_chargen_sprite::@1:
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen *idx (byte) gen_chargen_sprite::y
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x ← (byte/signed byte/word/signed word) 0
gen_chargen_sprite::@2:
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 1
gen_chargen_sprite::@3:
  (byte) gen_chargen_sprite::b ← (byte/signed byte/word/signed word) 0
gen_chargen_sprite::@4:
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c
  (byte) gen_chargen_sprite::s_gen ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen
  (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
gen_chargen_sprite::@5:
  (byte) gen_chargen_sprite::b ← ++ (byte) gen_chargen_sprite::b
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x ← ++ (byte) gen_chargen_sprite::x
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y ← ++ (byte) gen_chargen_sprite::y
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 55
  asm { cli }
gen_chargen_sprite::@return:
  return 
endproc // gen_chargen_sprite()
proc (void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
  (byte[]) gen_sintab::f_i ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi ← (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max
  (void~) gen_sintab::$1 ← call setFAC (word~) gen_sintab::$0 
  (void~) gen_sintab::$2 ← call setARGtoFAC 
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min
  (void~) gen_sintab::$4 ← call setFAC (word~) gen_sintab::$3 
  (void~) gen_sintab::$5 ← call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (void~) gen_sintab::$6 ← call subFACfromARG 
  (void~) gen_sintab::$7 ← call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$8 ← call setFAC (byte/signed byte/word/signed word) 2 
  (void~) gen_sintab::$9 ← call divMEMbyFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$10 ← call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$11 ← call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (void~) gen_sintab::$12 ← call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (byte) gen_sintab::i ← (byte/signed byte/word/signed word) 0
gen_sintab::@1:
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i
  (void~) gen_sintab::$14 ← call setFAC (word~) gen_sintab::$13 
  (void~) gen_sintab::$15 ← call mulFACbyMEM (byte*) gen_sintab::f_2pi 
  (void~) gen_sintab::$16 ← call setMEMtoFAC (byte[]) gen_sintab::f_i 
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length
  (void~) gen_sintab::$18 ← call setFAC (word~) gen_sintab::$17 
  (void~) gen_sintab::$19 ← call divMEMbyFAC (byte[]) gen_sintab::f_i 
  (void~) gen_sintab::$20 ← call sinFAC 
  (void~) gen_sintab::$21 ← call mulFACbyMEM (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$22 ← call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (word~) gen_sintab::$23 ← call getFAC 
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab + (byte) gen_sintab::i) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i < (byte) gen_sintab::length
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
gen_sintab::@return:
  return 
endproc // gen_sintab()
  call main 

SYMBOLS
(byte*) BORDERCOL
(byte*) CHARGEN
(byte*) PROCPORT
(byte*) RASTER
(byte*) SCREEN
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_MC
(byte*) SPRITES_MC1
(byte*) SPRITES_MC2
(byte*) SPRITES_PRIORITY
(byte*) SPRITES_XMSB
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(void()) addARGtoFAC()
(label) addARGtoFAC::@return
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(void~) addMEMtoFAC::$0
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(void()) anim()
(byte~) anim::$0
(byte~) anim::$1
(boolean~) anim::$10
(boolean~) anim::$11
(boolean~) anim::$12
(boolean~) anim::$13
(boolean~) anim::$14
(byte~) anim::$2
(boolean~) anim::$3
(boolean~) anim::$4
(byte~) anim::$5
(byte~) anim::$6
(boolean~) anim::$7
(boolean~) anim::$8
(byte~) anim::$9
(label) anim::@1
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@return
(byte) anim::j
(byte) anim::j2
(byte) anim::xidx
(byte) anim::yidx
(void()) atnFAC()
(label) atnFAC::@return
(byte*) char_cursor
(void()) cosFAC()
(label) cosFAC::@return
(void()) divFACby10()
(label) divFACby10::@return
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(void~) divMEMbyFAC::$0
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(void()) expFAC()
(label) expFAC::@return
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0
(word~) gen_chargen_sprite::$1
(boolean~) gen_chargen_sprite::$10
(boolean~) gen_chargen_sprite::$11
(byte~) gen_chargen_sprite::$12
(boolean~) gen_chargen_sprite::$13
(byte*~) gen_chargen_sprite::$14
(boolean~) gen_chargen_sprite::$15
(byte*~) gen_chargen_sprite::$2
(byte~) gen_chargen_sprite::$3
(byte~) gen_chargen_sprite::$4
(boolean~) gen_chargen_sprite::$5
(boolean~) gen_chargen_sprite::$6
(byte~) gen_chargen_sprite::$7
(byte~) gen_chargen_sprite::$8
(boolean~) gen_chargen_sprite::$9
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::ch
(byte*) gen_chargen_sprite::chargen
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen_cnt
(byte*) gen_chargen_sprite::sprite
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::y
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0
(void~) gen_sintab::$1
(void~) gen_sintab::$10
(void~) gen_sintab::$11
(void~) gen_sintab::$12
(word~) gen_sintab::$13
(void~) gen_sintab::$14
(void~) gen_sintab::$15
(void~) gen_sintab::$16
(word~) gen_sintab::$17
(void~) gen_sintab::$18
(void~) gen_sintab::$19
(void~) gen_sintab::$2
(void~) gen_sintab::$20
(void~) gen_sintab::$21
(void~) gen_sintab::$22
(word~) gen_sintab::$23
(byte~) gen_sintab::$24
(boolean~) gen_sintab::$25
(word~) gen_sintab::$3
(void~) gen_sintab::$4
(void~) gen_sintab::$5
(void~) gen_sintab::$6
(void~) gen_sintab::$7
(void~) gen_sintab::$8
(void~) gen_sintab::$9
(label) gen_sintab::@1
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(byte[]) gen_sintab::f_amp
(byte[]) gen_sintab::f_i
(byte[]) gen_sintab::f_min
(byte) gen_sintab::i
(byte) gen_sintab::length
(byte) gen_sintab::max
(byte) gen_sintab::min
(byte*) gen_sintab::sintab
(void()) gen_sprites()
(byte~) gen_sprites::$0
(void~) gen_sprites::$1
(byte*~) gen_sprites::$2
(boolean~) gen_sprites::$3
(label) gen_sprites::@1
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(byte) gen_sprites::i
(byte*) gen_sprites::spr
(word()) getFAC()
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::w
(void()) init()
(byte*~) init::$0
(boolean~) init::$1
(void~) init::$2
(void~) init::$3
(void~) init::$4
(void~) init::$5
(label) init::@1
(label) init::@return
(byte*) init::sc
(void()) intFAC()
(label) intFAC::@return
(byte*) line_cursor
(void()) logFAC()
(label) logFAC::@return
(void()) main()
(void~) main::$0
(boolean~) main::$1
(void~) main::$2
(label) main::@1
(label) main::@2
(label) main::@return
(byte*) memHi
(byte*) memLo
(void()) mulFACby10()
(label) mulFACby10::@return
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(void~) mulFACbyMEM::$0
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(void()) place_sprites()
(byte*~) place_sprites::$0
(byte[]~) place_sprites::$1
(byte~) place_sprites::$2
(byte~) place_sprites::$3
(byte~) place_sprites::$4
(byte~) place_sprites::$5
(boolean~) place_sprites::$6
(label) place_sprites::@1
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::j
(byte) place_sprites::j2
(byte) place_sprites::spr_id
(byte) place_sprites::spr_x
(byte*) place_sprites::sprites_ptr
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0
(byte~) prepareMEM::$1
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(void()) print_byte((byte) print_byte::b)
(byte~) print_byte::$0
(byte~) print_byte::$1
(void~) print_byte::$2
(byte~) print_byte::$3
(byte~) print_byte::$4
(void~) print_byte::$5
(label) print_byte::@return
(byte) print_byte::b
(byte[]) print_byte::hextab
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(void()) print_ln()
(byte*~) print_ln::$0
(boolean~) print_ln::$1
(label) print_ln::@1
(label) print_ln::@return
(void()) print_str((byte*) print_str::str)
(boolean~) print_str::$0
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(void()) print_word((word) print_word::w)
(byte~) print_word::$0
(void~) print_word::$1
(byte~) print_word::$2
(void~) print_word::$3
(label) print_word::@return
(word) print_word::w
(void()) pwrMEMbyFAC((byte*) pwrMEMbyFAC::mem)
(void~) pwrMEMbyFAC::$0
(label) pwrMEMbyFAC::@return
(byte*) pwrMEMbyFAC::mem
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setARGtoMEM((byte*) setARGtoMEM::mem)
(void~) setARGtoMEM::$0
(label) setARGtoMEM::@return
(byte*) setARGtoMEM::mem
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0
(void~) setFAC::$1
(label) setFAC::@return
(word) setFAC::w
(void()) setFACto2PI()
(label) setFACto2PI::@return
(void()) setFACtoARG()
(label) setFACtoARG::@return
(void()) setFACtoMEM((byte*) setFACtoMEM::mem)
(void~) setFACtoMEM::$0
(label) setFACtoMEM::@return
(byte*) setFACtoMEM::mem
(void()) setFACtoPIhalf()
(label) setFACtoPIhalf::@return
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(void~) setMEMtoFAC::$0
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_y
(byte) sinlen_x
(byte) sinlen_y
(byte[]) sintab_x
(byte[]) sintab_y
(byte[]) sprites
(void()) sqrFAC()
(label) sqrFAC::@return
(void()) subFACfromARG()
(label) subFACfromARG::@return
(void()) subFACfromMEM((byte*) subFACfromMEM::mem)
(void~) subFACfromMEM::$0
(label) subFACfromMEM::@return
(byte*) subFACfromMEM::mem
(void()) tanFAC()
(label) tanFAC::@return

Promoting byte/word/signed word to byte* in memLo ← ((byte*)) 254
Promoting byte/word/signed word to byte* in memHi ← ((byte*)) 255
Promoting word/signed word to byte* in line_cursor ← ((byte*)) 1024
Promoting byte/signed byte/word/signed word to byte* in PROCPORT ← ((byte*)) 1
Promoting word to byte* in CHARGEN ← ((byte*)) 53248
Promoting word/signed word to byte* in SCREEN ← ((byte*)) 1024
Promoting word to byte* in RASTER ← ((byte*)) 53266
Promoting word to byte* in BORDERCOL ← ((byte*)) 53280
Promoting word to byte* in SPRITES_XPOS ← ((byte*)) 53248
Promoting word to byte* in SPRITES_YPOS ← ((byte*)) 53249
Promoting word to byte* in SPRITES_XMSB ← ((byte*)) 53264
Promoting word to byte* in SPRITES_ENABLE ← ((byte*)) 53269
Promoting word to byte* in SPRITES_EXPAND_Y ← ((byte*)) 53271
Promoting word to byte* in SPRITES_PRIORITY ← ((byte*)) 53275
Promoting word to byte* in SPRITES_MC ← ((byte*)) 53276
Promoting word to byte* in SPRITES_EXPAND_X ← ((byte*)) 53277
Promoting word to byte* in SPRITES_MC1 ← ((byte*)) 53285
Promoting word to byte* in SPRITES_MC2 ← ((byte*)) 53286
Promoting word to byte* in SPRITES_COLS ← ((byte*)) 53287
Promoting word/signed word to byte[] in sintab_x ← ((byte*)) 4096
Promoting word/signed word to byte[] in sintab_y ← ((byte*)) 4352
Promoting word/signed word to byte[] in sprites ← ((byte*)) 8192
Promoting word to byte* in gen_sintab::f_2pi ← ((byte*)) 58085
INITIAL CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi ← ((byte*)) (byte/word/signed word) 255
  to:@1
prepareMEM: scope:[prepareMEM]  from
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem
  *((byte*) memLo) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem
  *((byte*) memHi) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
@1: scope:[]  from @begin
  to:@2
setFAC: scope:[setFAC]  from
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w
  (void~) setFAC::$1 ← call prepareMEM (byte*~) setFAC::$0 
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC
  return 
  to:@return
@2: scope:[]  from @1
  to:@3
getFAC: scope:[getFAC]  from
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w ← (word) getFAC::w lo= *((byte*) memLo)
  (word) getFAC::w ← (word) getFAC::w hi= *((byte*) memHi)
  (word) getFAC::return ← (word) getFAC::w
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC getFAC::@1
  (word) getFAC::return ← (word) getFAC::return
  return (word) getFAC::return
  to:@return
getFAC::@1: scope:[getFAC]  from
  to:getFAC::@return
@3: scope:[]  from @2
  to:@4
setARGtoFAC: scope:[setARGtoFAC]  from
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
@4: scope:[]  from @3
  to:@5
setFACtoARG: scope:[setFACtoARG]  from
  asm { jsr$bbfc }
  to:setFACtoARG::@return
setFACtoARG::@return: scope:[setFACtoARG]  from setFACtoARG
  return 
  to:@return
@5: scope:[]  from @4
  to:@6
setMEMtoFAC: scope:[setMEMtoFAC]  from
  (void~) setMEMtoFAC::$0 ← call prepareMEM (byte*) setMEMtoFAC::mem 
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC
  return 
  to:@return
@6: scope:[]  from @5
  to:@7
setFACtoMEM: scope:[setFACtoMEM]  from
  (void~) setFACtoMEM::$0 ← call prepareMEM (byte*) setFACtoMEM::mem 
  asm { lda$feldy$ffjsr$bba2 }
  to:setFACtoMEM::@return
setFACtoMEM::@return: scope:[setFACtoMEM]  from setFACtoMEM
  return 
  to:@return
@7: scope:[]  from @6
  to:@8
setFACtoPIhalf: scope:[setFACtoPIhalf]  from
  asm { lda#$e0ldy#$e2jsr$bba2 }
  to:setFACtoPIhalf::@return
setFACtoPIhalf::@return: scope:[setFACtoPIhalf]  from setFACtoPIhalf
  return 
  to:@return
@8: scope:[]  from @7
  to:@9
setFACto2PI: scope:[setFACto2PI]  from
  asm { lda#$e5ldy#$e2jsr$bba2 }
  to:setFACto2PI::@return
setFACto2PI::@return: scope:[setFACto2PI]  from setFACto2PI
  return 
  to:@return
@9: scope:[]  from @8
  to:@10
setARGtoMEM: scope:[setARGtoMEM]  from
  (void~) setARGtoMEM::$0 ← call prepareMEM (byte*) setARGtoMEM::mem 
  asm { lda$feldy$ffjsr$ba8c }
  to:setARGtoMEM::@return
setARGtoMEM::@return: scope:[setARGtoMEM]  from setARGtoMEM
  return 
  to:@return
@10: scope:[]  from @9
  to:@11
addMEMtoFAC: scope:[addMEMtoFAC]  from
  (void~) addMEMtoFAC::$0 ← call prepareMEM (byte*) addMEMtoFAC::mem 
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC
  return 
  to:@return
@11: scope:[]  from @10
  to:@12
addARGtoFAC: scope:[addARGtoFAC]  from
  asm { jsr$b86a }
  to:addARGtoFAC::@return
addARGtoFAC::@return: scope:[addARGtoFAC]  from addARGtoFAC
  return 
  to:@return
@12: scope:[]  from @11
  to:@13
subFACfromMEM: scope:[subFACfromMEM]  from
  (void~) subFACfromMEM::$0 ← call prepareMEM (byte*) subFACfromMEM::mem 
  asm { lda$feldy$ffjsr$b850 }
  to:subFACfromMEM::@return
subFACfromMEM::@return: scope:[subFACfromMEM]  from subFACfromMEM
  return 
  to:@return
@13: scope:[]  from @12
  to:@14
subFACfromARG: scope:[subFACfromARG]  from
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
@14: scope:[]  from @13
  to:@15
divMEMbyFAC: scope:[divMEMbyFAC]  from
  (void~) divMEMbyFAC::$0 ← call prepareMEM (byte*) divMEMbyFAC::mem 
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC
  return 
  to:@return
@15: scope:[]  from @14
  to:@16
mulFACbyMEM: scope:[mulFACbyMEM]  from
  (void~) mulFACbyMEM::$0 ← call prepareMEM (byte*) mulFACbyMEM::mem 
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM
  return 
  to:@return
@16: scope:[]  from @15
  to:@17
pwrMEMbyFAC: scope:[pwrMEMbyFAC]  from
  (void~) pwrMEMbyFAC::$0 ← call prepareMEM (byte*) pwrMEMbyFAC::mem 
  asm { lda$feldy$ffjsr$bf78 }
  to:pwrMEMbyFAC::@return
pwrMEMbyFAC::@return: scope:[pwrMEMbyFAC]  from pwrMEMbyFAC
  return 
  to:@return
@17: scope:[]  from @16
  to:@18
intFAC: scope:[intFAC]  from
  asm { jsr$bccc }
  to:intFAC::@return
intFAC::@return: scope:[intFAC]  from intFAC
  return 
  to:@return
@18: scope:[]  from @17
  to:@19
sinFAC: scope:[sinFAC]  from
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@19: scope:[]  from @18
  to:@20
cosFAC: scope:[cosFAC]  from
  asm { jsr$e264 }
  to:cosFAC::@return
cosFAC::@return: scope:[cosFAC]  from cosFAC
  return 
  to:@return
@20: scope:[]  from @19
  to:@21
tanFAC: scope:[tanFAC]  from
  asm { jsr$e2b4 }
  to:tanFAC::@return
tanFAC::@return: scope:[tanFAC]  from tanFAC
  return 
  to:@return
@21: scope:[]  from @20
  to:@22
atnFAC: scope:[atnFAC]  from
  asm { jsr$e303 }
  to:atnFAC::@return
atnFAC::@return: scope:[atnFAC]  from atnFAC
  return 
  to:@return
@22: scope:[]  from @21
  to:@23
sqrFAC: scope:[sqrFAC]  from
  asm { jsr$bf71 }
  to:sqrFAC::@return
sqrFAC::@return: scope:[sqrFAC]  from sqrFAC
  return 
  to:@return
@23: scope:[]  from @22
  to:@24
expFAC: scope:[expFAC]  from
  asm { jsr$bfed }
  to:expFAC::@return
expFAC::@return: scope:[expFAC]  from expFAC
  return 
  to:@return
@24: scope:[]  from @23
  to:@25
logFAC: scope:[logFAC]  from
  asm { jsr$b9ea }
  to:logFAC::@return
logFAC::@return: scope:[logFAC]  from logFAC
  return 
  to:@return
@25: scope:[]  from @24
  to:@26
divFACby10: scope:[divFACby10]  from
  asm { jsr$bafe }
  to:divFACby10::@return
divFACby10::@return: scope:[divFACby10]  from divFACby10
  return 
  to:@return
@26: scope:[]  from @25
  to:@27
mulFACby10: scope:[mulFACby10]  from
  asm { jsr$bae2 }
  to:mulFACby10::@return
mulFACby10::@return: scope:[mulFACby10]  from mulFACby10
  return 
  to:@return
@27: scope:[]  from @26
  (byte*) line_cursor ← ((byte*)) (word/signed word) 1024
  (byte*) char_cursor ← (byte*) line_cursor
  to:@28
print_str: scope:[print_str]  from
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  (boolean~) print_str::$0 ← *((byte*) print_str::str) != (byte) '@'
  if((boolean~) print_str::$0) goto print_str::@2
  to:print_str::@4
print_str::@2: scope:[print_str]  from print_str::@1 print_str::@5
  *((byte*) char_cursor) ← *((byte*) print_str::str)
  (byte*) char_cursor ← ++ (byte*) char_cursor
  (byte*) print_str::str ← ++ (byte*) print_str::str
  to:print_str::@1
print_str::@4: scope:[print_str]  from print_str::@1
  to:print_str::@3
print_str::@3: scope:[print_str]  from print_str::@4 print_str::@6
  to:print_str::@return
print_str::@5: scope:[print_str]  from
  to:print_str::@2
print_str::@6: scope:[print_str]  from
  to:print_str::@3
print_str::@return: scope:[print_str]  from print_str::@3
  return 
  to:@return
@28: scope:[]  from @27
  to:@29
print_ln: scope:[print_ln]  from
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  (byte*~) print_ln::$0 ← (byte*) line_cursor + (byte/signed byte/word/signed word) 40
  (byte*) line_cursor ← (byte*~) print_ln::$0
  (boolean~) print_ln::$1 ← (byte*) line_cursor < (byte*) char_cursor
  if((boolean~) print_ln::$1) goto print_ln::@1
  to:print_ln::@2
print_ln::@2: scope:[print_ln]  from print_ln::@1
  (byte*) char_cursor ← (byte*) line_cursor
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@2
  return 
  to:@return
@29: scope:[]  from @28
  to:@30
print_word: scope:[print_word]  from
  (byte~) print_word::$0 ← > (word) print_word::w
  (void~) print_word::$1 ← call print_byte (byte~) print_word::$0 
  (byte~) print_word::$2 ← < (word) print_word::w
  (void~) print_word::$3 ← call print_byte (byte~) print_word::$2 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word
  return 
  to:@return
@30: scope:[]  from @29
  to:@31
print_byte: scope:[print_byte]  from
  (byte[]) print_byte::hextab ← { (byte) '0', (byte) '1', (byte) '2', (byte) '3', (byte) '4', (byte) '5', (byte) '6', (byte) '7', (byte) '8', (byte) '9', (byte) 'a', (byte) 'b', (byte) 'c', (byte) 'd', (byte) 'e', (byte) 'f' }
  (byte~) print_byte::$0 ← (byte) print_byte::b >> (byte/signed byte/word/signed word) 4
  (byte~) print_byte::$1 ← (byte[]) print_byte::hextab *idx (byte~) print_byte::$0
  (void~) print_byte::$2 ← call print_char (byte~) print_byte::$1 
  (byte~) print_byte::$3 ← (byte) print_byte::b & (byte/signed byte/word/signed word) 15
  (byte~) print_byte::$4 ← (byte[]) print_byte::hextab *idx (byte~) print_byte::$3
  (void~) print_byte::$5 ← call print_char (byte~) print_byte::$4 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte
  return 
  to:@return
@31: scope:[]  from @30
  to:@32
print_char: scope:[print_char]  from
  *((byte*) char_cursor) ← (byte) print_char::ch
  (byte*) char_cursor ← ++ (byte*) char_cursor
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  return 
  to:@return
@32: scope:[]  from @31
  (byte*) PROCPORT ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN ← ((byte*)) (word) 53248
  (byte*) SCREEN ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER ← ((byte*)) (word) 53266
  (byte*) BORDERCOL ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS ← ((byte*)) (word) 53249
  (byte*) SPRITES_XMSB ← ((byte*)) (word) 53264
  (byte*) SPRITES_ENABLE ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y ← ((byte*)) (word) 53271
  (byte*) SPRITES_PRIORITY ← ((byte*)) (word) 53275
  (byte*) SPRITES_MC ← ((byte*)) (word) 53276
  (byte*) SPRITES_EXPAND_X ← ((byte*)) (word) 53277
  (byte*) SPRITES_MC1 ← ((byte*)) (word) 53285
  (byte*) SPRITES_MC2 ← ((byte*)) (word) 53286
  (byte*) SPRITES_COLS ← ((byte*)) (word) 53287
  (byte) sinlen_x ← (byte/word/signed word) 221
  (byte[]) sintab_x ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y ← (byte/word/signed word) 197
  (byte[]) sintab_y ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites ← ((byte*)) (word/signed word) 8192
  to:@33
main: scope:[main]  from
  (void~) main::$0 ← call init 
  to:main::@1
main::@1: scope:[main]  from main main::@3
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2
  (boolean~) main::$1 ← *((byte*) RASTER) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (void~) main::$2 ← call anim 
  if(true) goto main::@1
  to:main::@4
main::@4: scope:[main]  from main::@3
  to:main::@return
main::@return: scope:[main]  from main::@4
  return 
  to:@return
@33: scope:[]  from @32
  to:@34
init: scope:[init]  from
  (byte*) init::sc ← (byte*) SCREEN
  to:init::@1
init::@1: scope:[init]  from init init::@1
  *((byte*) init::sc) ← (byte) ' '
  (byte*) init::sc ← ++ (byte*) init::sc
  (byte*~) init::$0 ← (byte*) SCREEN + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (void~) init::$2 ← call place_sprites 
  (void~) init::$3 ← call gen_sprites 
  (void~) init::$4 ← call gen_sintab (byte[]) sintab_x (byte) sinlen_x (byte/signed byte/word/signed word) 16 (byte/word/signed word) 255 
  (void~) init::$5 ← call gen_sintab (byte[]) sintab_y (byte) sinlen_y (byte/signed byte/word/signed word) 48 (byte/word/signed word) 208 
  to:init::@return
init::@return: scope:[init]  from init::@2
  return 
  to:@return
@34: scope:[]  from @33
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
  to:@35
anim: scope:[anim]  from
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) anim::xidx ← (byte) sin_idx_x
  (byte) anim::yidx ← (byte) sin_idx_y
  (byte) anim::j2 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte~) anim::$0 ← (byte[]) sintab_x *idx (byte) anim::xidx
  *((byte*) SPRITES_XPOS + (byte) anim::j2) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y *idx (byte) anim::yidx
  *((byte*) SPRITES_YPOS + (byte) anim::j2) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx >= (byte) sinlen_x
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte~) anim::$6 ← (byte) anim::yidx + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx >= (byte) sinlen_y
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte~) anim::$5 ← (byte) anim::xidx - (byte) sinlen_x
  (byte) anim::xidx ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j ← ++ (byte) anim::j
  (boolean~) anim::$10 ← (byte) anim::j != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte~) anim::$9 ← (byte) anim::yidx - (byte) sinlen_y
  (byte) anim::yidx ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x ← ++ (byte) sin_idx_x
  (boolean~) anim::$11 ← (byte) sin_idx_x >= (byte) sinlen_x
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_y ← ++ (byte) sin_idx_y
  (boolean~) anim::$13 ← (byte) sin_idx_y >= (byte) sinlen_y
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
@35: scope:[]  from @34
  to:@36
place_sprites: scope:[place_sprites]  from
  *((byte*) SPRITES_ENABLE) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  *((byte*) place_sprites::sprites_ptr + (byte) place_sprites::j) ← (byte) place_sprites::spr_id
  (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
  *((byte*) SPRITES_XPOS + (byte) place_sprites::j2) ← (byte) place_sprites::spr_x
  *((byte*) SPRITES_YPOS + (byte) place_sprites::j2) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS + (byte) place_sprites::j) ← (byte) place_sprites::col
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col ^ (byte~) place_sprites::$4
  (byte) place_sprites::col ← (byte~) place_sprites::$5
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j ← ++ (byte) place_sprites::j
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@2
place_sprites::@2: scope:[place_sprites]  from place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@2
  return 
  to:@return
@36: scope:[]  from @35
  to:@37
gen_sprites: scope:[gen_sprites]  from
  (byte[]) gen_sprites::cml ← (string) "camelot"
  (byte*) gen_sprites::spr ← (byte[]) sprites
  (byte) gen_sprites::i ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@1
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml *idx (byte) gen_sprites::i
  (void~) gen_sprites::$1 ← call gen_chargen_sprite (byte~) gen_sprites::$0 (byte*) gen_sprites::spr 
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i ← ++ (byte) gen_sprites::i
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@2
gen_sprites::@2: scope:[gen_sprites]  from gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@2
  return 
  to:@return
@37: scope:[]  from @36
  to:@38
gen_chargen_sprite: scope:[gen_chargen_sprite]  from
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen *idx (byte) gen_chargen_sprite::y
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::b ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c
  (byte) gen_chargen_sprite::s_gen ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte) gen_chargen_sprite::b ← ++ (byte) gen_chargen_sprite::b
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen
  (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x ← ++ (byte) gen_chargen_sprite::x
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y ← ++ (byte) gen_chargen_sprite::y
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
@38: scope:[]  from @37
  to:@39
gen_sintab: scope:[gen_sintab]  from
  (byte[]) gen_sintab::f_i ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max
  (void~) gen_sintab::$1 ← call setFAC (word~) gen_sintab::$0 
  (void~) gen_sintab::$2 ← call setARGtoFAC 
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min
  (void~) gen_sintab::$4 ← call setFAC (word~) gen_sintab::$3 
  (void~) gen_sintab::$5 ← call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (void~) gen_sintab::$6 ← call subFACfromARG 
  (void~) gen_sintab::$7 ← call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$8 ← call setFAC (byte/signed byte/word/signed word) 2 
  (void~) gen_sintab::$9 ← call divMEMbyFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$10 ← call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$11 ← call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (void~) gen_sintab::$12 ← call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (byte) gen_sintab::i ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab gen_sintab::@1
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i
  (void~) gen_sintab::$14 ← call setFAC (word~) gen_sintab::$13 
  (void~) gen_sintab::$15 ← call mulFACbyMEM (byte*) gen_sintab::f_2pi 
  (void~) gen_sintab::$16 ← call setMEMtoFAC (byte[]) gen_sintab::f_i 
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length
  (void~) gen_sintab::$18 ← call setFAC (word~) gen_sintab::$17 
  (void~) gen_sintab::$19 ← call divMEMbyFAC (byte[]) gen_sintab::f_i 
  (void~) gen_sintab::$20 ← call sinFAC 
  (void~) gen_sintab::$21 ← call mulFACbyMEM (byte[]) gen_sintab::f_amp 
  (void~) gen_sintab::$22 ← call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (word~) gen_sintab::$23 ← call getFAC 
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab + (byte) gen_sintab::i) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i < (byte) gen_sintab::length
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@2
gen_sintab::@2: scope:[gen_sintab]  from gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@2
  return 
  to:@return
@39: scope:[]  from @38
  call main 
  to:@end
@end: scope:[]  from @39

Removing unused procedure setFACtoARG
Removing unused procedure setFACtoMEM
Removing unused procedure setFACtoPIhalf
Removing unused procedure setFACto2PI
Removing unused procedure setARGtoMEM
Removing unused procedure addARGtoFAC
Removing unused procedure subFACfromMEM
Removing unused procedure pwrMEMbyFAC
Removing unused procedure intFAC
Removing unused procedure cosFAC
Removing unused procedure tanFAC
Removing unused procedure atnFAC
Removing unused procedure sqrFAC
Removing unused procedure expFAC
Removing unused procedure logFAC
Removing unused procedure divFACby10
Removing unused procedure mulFACby10
Removing unused procedure print_str
Removing unused procedure print_ln
Removing unused procedure print_word
Removing unused procedure print_byte
Removing unused procedure print_char
Eliminating unused variable - keeping the call (void~) setFAC::$1
Eliminating unused variable - keeping the call (void~) setMEMtoFAC::$0
Eliminating unused variable - keeping the call (void~) addMEMtoFAC::$0
Eliminating unused variable - keeping the call (void~) divMEMbyFAC::$0
Eliminating unused variable - keeping the call (void~) mulFACbyMEM::$0
Eliminating unused variable (byte*) char_cursor and assignment [37] (byte*) char_cursor ← (byte*) line_cursor
Eliminating unused variable (byte*) SPRITES_XMSB and assignment [45] (byte*) SPRITES_XMSB ← ((byte*)) (word) 53264
Eliminating unused variable (byte*) SPRITES_PRIORITY and assignment [48] (byte*) SPRITES_PRIORITY ← ((byte*)) (word) 53275
Eliminating unused variable (byte*) SPRITES_MC and assignment [49] (byte*) SPRITES_MC ← ((byte*)) (word) 53276
Eliminating unused variable (byte*) SPRITES_MC1 and assignment [51] (byte*) SPRITES_MC1 ← ((byte*)) (word) 53285
Eliminating unused variable (byte*) SPRITES_MC2 and assignment [52] (byte*) SPRITES_MC2 ← ((byte*)) (word) 53286
Eliminating unused variable - keeping the call (void~) main::$0
Eliminating unused variable - keeping the call (void~) main::$2
Eliminating unused variable - keeping the call (void~) init::$2
Eliminating unused variable - keeping the call (void~) init::$3
Eliminating unused variable - keeping the call (void~) init::$4
Eliminating unused variable - keeping the call (void~) init::$5
Eliminating unused variable - keeping the call (void~) gen_sprites::$1
Eliminating unused variable - keeping the call (void~) gen_sintab::$1
Eliminating unused variable - keeping the call (void~) gen_sintab::$2
Eliminating unused variable - keeping the call (void~) gen_sintab::$4
Eliminating unused variable - keeping the call (void~) gen_sintab::$5
Eliminating unused variable - keeping the call (void~) gen_sintab::$6
Eliminating unused variable - keeping the call (void~) gen_sintab::$7
Eliminating unused variable - keeping the call (void~) gen_sintab::$8
Eliminating unused variable - keeping the call (void~) gen_sintab::$9
Eliminating unused variable - keeping the call (void~) gen_sintab::$10
Eliminating unused variable - keeping the call (void~) gen_sintab::$11
Eliminating unused variable - keeping the call (void~) gen_sintab::$12
Eliminating unused variable - keeping the call (void~) gen_sintab::$14
Eliminating unused variable - keeping the call (void~) gen_sintab::$15
Eliminating unused variable - keeping the call (void~) gen_sintab::$16
Eliminating unused variable - keeping the call (void~) gen_sintab::$18
Eliminating unused variable - keeping the call (void~) gen_sintab::$19
Eliminating unused variable - keeping the call (void~) gen_sintab::$20
Eliminating unused variable - keeping the call (void~) gen_sintab::$21
Eliminating unused variable - keeping the call (void~) gen_sintab::$22
Eliminating unused variable (byte*) line_cursor and assignment [36] (byte*) line_cursor ← ((byte*)) (word/signed word) 1024
Removing empty block @1
Removing empty block @2
Removing empty block getFAC::@1
Removing empty block @3
Removing empty block @4
Removing empty block @5
Removing empty block @6
Removing empty block @7
Removing empty block @8
Removing empty block @9
Removing empty block @10
Removing empty block @11
Removing empty block @12
Removing empty block @13
Removing empty block @14
Removing empty block @15
Removing empty block @16
Removing empty block @17
Removing empty block @18
Removing empty block @19
Removing empty block @20
Removing empty block @21
Removing empty block @22
Removing empty block @23
Removing empty block @24
Removing empty block @25
Removing empty block @26
Removing empty block @27
Removing empty block @28
Removing empty block @29
Removing empty block @30
Removing empty block @31
Removing empty block main::@4
Removing empty block @33
Removing empty block @35
Removing empty block place_sprites::@2
Removing empty block @36
Removing empty block gen_sprites::@2
Removing empty block @37
Removing empty block @38
Removing empty block gen_sintab::@2
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem
  *((byte*) memLo) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem
  *((byte*) memHi) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w
  call prepareMEM (byte*~) setFAC::$0 
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC
  return 
  to:@return
getFAC: scope:[getFAC]  from
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w ← (word) getFAC::w lo= *((byte*) memLo)
  (word) getFAC::w ← (word) getFAC::w hi= *((byte*) memHi)
  (word) getFAC::return ← (word) getFAC::w
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return ← (word) getFAC::return
  return (word) getFAC::return
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from
  call prepareMEM (byte*) setMEMtoFAC::mem 
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from
  call prepareMEM (byte*) addMEMtoFAC::mem 
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from
  call prepareMEM (byte*) divMEMbyFAC::mem 
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from
  call prepareMEM (byte*) mulFACbyMEM::mem 
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM
  return 
  to:@return
sinFAC: scope:[sinFAC]  from
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN ← ((byte*)) (word) 53248
  (byte*) SCREEN ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER ← ((byte*)) (word) 53266
  (byte*) BORDERCOL ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS ← ((byte*)) (word) 53287
  (byte) sinlen_x ← (byte/word/signed word) 221
  (byte[]) sintab_x ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y ← (byte/word/signed word) 197
  (byte[]) sintab_y ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from
  call init 
  to:main::@2
main::@1: scope:[main]  from main::@3
  to:main::@2
main::@2: scope:[main]  from main main::@1 main::@2
  (boolean~) main::$1 ← *((byte*) RASTER) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim 
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@3
  return 
  to:@return
init: scope:[init]  from
  (byte*) init::sc ← (byte*) SCREEN
  to:init::@1
init::@1: scope:[init]  from init init::@1
  *((byte*) init::sc) ← (byte) ' '
  (byte*) init::sc ← ++ (byte*) init::sc
  (byte*~) init::$0 ← (byte*) SCREEN + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites 
  call gen_sprites 
  call gen_sintab (byte[]) sintab_x (byte) sinlen_x (byte/signed byte/word/signed word) 16 (byte/word/signed word) 255 
  call gen_sintab (byte[]) sintab_y (byte) sinlen_y (byte/signed byte/word/signed word) 48 (byte/word/signed word) 208 
  to:init::@return
init::@return: scope:[init]  from init::@2
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) anim::xidx ← (byte) sin_idx_x
  (byte) anim::yidx ← (byte) sin_idx_y
  (byte) anim::j2 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte~) anim::$0 ← (byte[]) sintab_x *idx (byte) anim::xidx
  *((byte*) SPRITES_XPOS + (byte) anim::j2) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y *idx (byte) anim::yidx
  *((byte*) SPRITES_YPOS + (byte) anim::j2) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx >= (byte) sinlen_x
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte~) anim::$6 ← (byte) anim::yidx + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx >= (byte) sinlen_y
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte~) anim::$5 ← (byte) anim::xidx - (byte) sinlen_x
  (byte) anim::xidx ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j ← ++ (byte) anim::j
  (boolean~) anim::$10 ← (byte) anim::j != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte~) anim::$9 ← (byte) anim::yidx - (byte) sinlen_y
  (byte) anim::yidx ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x ← ++ (byte) sin_idx_x
  (boolean~) anim::$11 ← (byte) sin_idx_x >= (byte) sinlen_x
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_y ← ++ (byte) sin_idx_y
  (boolean~) anim::$13 ← (byte) sin_idx_y >= (byte) sinlen_y
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from
  *((byte*) SPRITES_ENABLE) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  *((byte*) place_sprites::sprites_ptr + (byte) place_sprites::j) ← (byte) place_sprites::spr_id
  (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
  *((byte*) SPRITES_XPOS + (byte) place_sprites::j2) ← (byte) place_sprites::spr_x
  *((byte*) SPRITES_YPOS + (byte) place_sprites::j2) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS + (byte) place_sprites::j) ← (byte) place_sprites::col
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col ^ (byte~) place_sprites::$4
  (byte) place_sprites::col ← (byte~) place_sprites::$5
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j ← ++ (byte) place_sprites::j
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from
  (byte[]) gen_sprites::cml ← (string) "camelot"
  (byte*) gen_sprites::spr ← (byte[]) sprites
  (byte) gen_sprites::i ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@1
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml *idx (byte) gen_sprites::i
  call gen_chargen_sprite (byte~) gen_sprites::$0 (byte*) gen_sprites::spr 
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i ← ++ (byte) gen_sprites::i
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@1
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen *idx (byte) gen_chargen_sprite::y
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::b ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c
  (byte) gen_chargen_sprite::s_gen ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte) gen_chargen_sprite::b ← ++ (byte) gen_chargen_sprite::b
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen
  (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x ← ++ (byte) gen_chargen_sprite::x
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y ← ++ (byte) gen_chargen_sprite::y
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from
  (byte[]) gen_sintab::f_i ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max
  call setFAC (word~) gen_sintab::$0 
  call setARGtoFAC 
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min
  call setFAC (word~) gen_sintab::$3 
  call setMEMtoFAC (byte[]) gen_sintab::f_min 
  call subFACfromARG 
  call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  call setFAC (byte/signed byte/word/signed word) 2 
  call divMEMbyFAC (byte[]) gen_sintab::f_amp 
  call setMEMtoFAC (byte[]) gen_sintab::f_amp 
  call addMEMtoFAC (byte[]) gen_sintab::f_min 
  call setMEMtoFAC (byte[]) gen_sintab::f_min 
  (byte) gen_sintab::i ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab gen_sintab::@1
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i
  call setFAC (word~) gen_sintab::$13 
  call mulFACbyMEM (byte*) gen_sintab::f_2pi 
  call setMEMtoFAC (byte[]) gen_sintab::f_i 
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length
  call setFAC (word~) gen_sintab::$17 
  call divMEMbyFAC (byte[]) gen_sintab::f_i 
  call sinFAC 
  call mulFACbyMEM (byte[]) gen_sintab::f_amp 
  call addMEMtoFAC (byte[]) gen_sintab::f_min 
  (word~) gen_sintab::$23 ← call getFAC 
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab + (byte) gen_sintab::i) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i < (byte) gen_sintab::length
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@1
  return 
  to:@return
@39: scope:[]  from @34
  call main 
  to:@end
@end: scope:[]  from @39

PROCEDURE MODIFY VARIABLE ANALYSIS
main modifies sin_idx_x
main modifies sin_idx_y
anim modifies sin_idx_x
anim modifies sin_idx_y

CONTROL FLOW GRAPH WITH ASSIGNMENT CALL
@begin: scope:[]  from
  (byte*) memLo ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem
  *((byte*) memLo) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem
  *((byte*) memHi) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w
  (byte*) prepareMEM::mem ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w ← (word) getFAC::w lo= *((byte*) memLo)
  (word) getFAC::w ← (word) getFAC::w hi= *((byte*) memHi)
  (word) getFAC::return ← (word) getFAC::w
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return ← (word) getFAC::return
  return (word) getFAC::return
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) prepareMEM::mem ← (byte*) setMEMtoFAC::mem
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) prepareMEM::mem ← (byte*) addMEMtoFAC::mem
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) prepareMEM::mem ← (byte*) divMEMbyFAC::mem
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) prepareMEM::mem ← (byte*) mulFACbyMEM::mem
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN ← ((byte*)) (word) 53248
  (byte*) SCREEN ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER ← ((byte*)) (word) 53266
  (byte*) BORDERCOL ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS ← ((byte*)) (word) 53287
  (byte) sinlen_x ← (byte/word/signed word) 221
  (byte[]) sintab_x ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y ← (byte/word/signed word) 197
  (byte[]) sintab_y ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (boolean~) main::$1 ← *((byte*) RASTER) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte) sin_idx_x ← (byte) sin_idx_x
  (byte) sin_idx_y ← (byte) sin_idx_y
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte) sin_idx_x ← (byte) sin_idx_x
  (byte) sin_idx_y ← (byte) sin_idx_y
  return 
  to:@return
init: scope:[init]  from main
  (byte*) init::sc ← (byte*) SCREEN
  to:init::@1
init::@1: scope:[init]  from init init::@1
  *((byte*) init::sc) ← (byte) ' '
  (byte*) init::sc ← ++ (byte*) init::sc
  (byte*~) init::$0 ← (byte*) SCREEN + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab ← (byte[]) sintab_x
  (byte) gen_sintab::length ← (byte) sinlen_x
  (byte) gen_sintab::min ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab ← (byte[]) sintab_y
  (byte) gen_sintab::length ← (byte) sinlen_y
  (byte) gen_sintab::min ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@6
init::@6: scope:[init]  from init::@5
  to:init::@return
init::@return: scope:[init]  from init::@6
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) anim::xidx ← (byte) sin_idx_x
  (byte) anim::yidx ← (byte) sin_idx_y
  (byte) anim::j2 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte~) anim::$0 ← (byte[]) sintab_x *idx (byte) anim::xidx
  *((byte*) SPRITES_XPOS + (byte) anim::j2) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y *idx (byte) anim::yidx
  *((byte*) SPRITES_YPOS + (byte) anim::j2) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx >= (byte) sinlen_x
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte~) anim::$6 ← (byte) anim::yidx + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx >= (byte) sinlen_y
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte~) anim::$5 ← (byte) anim::xidx - (byte) sinlen_x
  (byte) anim::xidx ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j2 ← -- (byte) anim::j2
  (byte) anim::j ← ++ (byte) anim::j
  (boolean~) anim::$10 ← (byte) anim::j != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte~) anim::$9 ← (byte) anim::yidx - (byte) sinlen_y
  (byte) anim::yidx ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x ← ++ (byte) sin_idx_x
  (boolean~) anim::$11 ← (byte) sin_idx_x >= (byte) sinlen_x
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_y ← ++ (byte) sin_idx_y
  (boolean~) anim::$13 ← (byte) sin_idx_y >= (byte) sinlen_y
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  *((byte*) BORDERCOL) ← -- *((byte*) BORDERCOL)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  (byte) sin_idx_x ← (byte) sin_idx_x
  (byte) sin_idx_y ← (byte) sin_idx_y
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((byte*) SPRITES_ENABLE) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  *((byte*) place_sprites::sprites_ptr + (byte) place_sprites::j) ← (byte) place_sprites::spr_id
  (byte) place_sprites::spr_id ← ++ (byte) place_sprites::spr_id
  *((byte*) SPRITES_XPOS + (byte) place_sprites::j2) ← (byte) place_sprites::spr_x
  *((byte*) SPRITES_YPOS + (byte) place_sprites::j2) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS + (byte) place_sprites::j) ← (byte) place_sprites::col
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col ^ (byte~) place_sprites::$4
  (byte) place_sprites::col ← (byte~) place_sprites::$5
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j2 ← ++ (byte) place_sprites::j2
  (byte) place_sprites::j ← ++ (byte) place_sprites::j
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte[]) gen_sprites::cml ← (string) "camelot"
  (byte*) gen_sprites::spr ← (byte[]) sprites
  (byte) gen_sprites::i ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml *idx (byte) gen_sprites::i
  (byte) gen_chargen_sprite::ch ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite ← (byte*) gen_sprites::spr
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i ← ++ (byte) gen_sprites::i
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen *idx (byte) gen_chargen_sprite::y
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::b ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c
  (byte) gen_chargen_sprite::s_gen ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt ← ++ (byte) gen_chargen_sprite::s_gen_cnt
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte) gen_chargen_sprite::b ← ++ (byte) gen_chargen_sprite::b
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen
  *((byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen
  (byte*) gen_chargen_sprite::sprite ← ++ (byte*) gen_chargen_sprite::sprite
  (byte) gen_chargen_sprite::s_gen ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x ← ++ (byte) gen_chargen_sprite::x
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y ← ++ (byte) gen_chargen_sprite::y
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte[]) gen_sintab::f_i ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max
  (word) setFAC::w ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min
  (word) setFAC::w ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem ← (byte[]) gen_sintab::f_min
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem ← (byte[]) gen_sintab::f_amp
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (word) setFAC::w ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem ← (byte[]) gen_sintab::f_amp
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem ← (byte[]) gen_sintab::f_amp
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem ← (byte[]) gen_sintab::f_min
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem ← (byte[]) gen_sintab::f_min
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte) gen_sintab::i ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i
  (word) setFAC::w ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem ← (byte*) gen_sintab::f_2pi
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem ← (byte[]) gen_sintab::f_i
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length
  (word) setFAC::w ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem ← (byte[]) gen_sintab::f_i
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem ← (byte[]) gen_sintab::f_amp
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem ← (byte[]) gen_sintab::f_min
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  (word) getFAC::return ← call getFAC param-assignment
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab + (byte) gen_sintab::i) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL) ← ++ *((byte*) BORDERCOL)
  (byte) gen_sintab::i ← ++ (byte) gen_sintab::i
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i < (byte) gen_sintab::length
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_x ← (byte) sin_idx_x
  (byte) sin_idx_y ← (byte) sin_idx_y
  to:@end
@end: scope:[]  from @40

Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
Completing Phi functions...
CONTROL FLOW GRAPH SSA
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::w#2 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  (word) getFAC::return#0 ← (word) getFAC::w#2
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return#3 ← phi( getFAC/(word) getFAC::return#0 )
  (word) getFAC::return#1 ← (word) getFAC::return#3
  return (word) getFAC::return#1
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#20 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#10 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#7 )
  (byte*) SPRITES_YPOS#16 ← phi( @39/(byte*) SPRITES_YPOS#18 )
  (byte*) SPRITES_XPOS#16 ← phi( @39/(byte*) SPRITES_XPOS#18 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#6 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#6 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#6 )
  (byte*) BORDERCOL#16 ← phi( @39/(byte*) BORDERCOL#21 )
  (byte) sin_idx_y#24 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#26 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#4 ← phi( @39/(byte*) RASTER#6 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#6 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  (byte*) SPRITES_YPOS#14 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#14 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) BORDERCOL#13 ← phi( main/(byte*) BORDERCOL#16 )
  (byte) sin_idx_y#21 ← phi( main/(byte) sin_idx_y#24 )
  (byte) sin_idx_x#23 ← phi( main/(byte) sin_idx_x#26 )
  (byte*) RASTER#3 ← phi( main/(byte*) RASTER#4 )
  to:main::@2
main::@1: scope:[main]  from main::@6
  (byte*) SPRITES_YPOS#13 ← phi( main::@6/(byte*) SPRITES_YPOS#17 )
  (byte*) SPRITES_XPOS#13 ← phi( main::@6/(byte*) SPRITES_XPOS#17 )
  (byte*) BORDERCOL#12 ← phi( main::@6/(byte*) BORDERCOL#17 )
  (byte) sin_idx_y#20 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#22 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte*) RASTER#2 ← phi( main::@6/(byte*) RASTER#5 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@1/(byte*) SPRITES_YPOS#13 main::@2/(byte*) SPRITES_YPOS#10 main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@1/(byte*) SPRITES_XPOS#13 main::@2/(byte*) SPRITES_XPOS#10 main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#8 ← phi( main::@1/(byte*) BORDERCOL#12 main::@2/(byte*) BORDERCOL#8 main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#18 ← phi( main::@1/(byte) sin_idx_y#20 main::@2/(byte) sin_idx_y#18 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#17 ← phi( main::@1/(byte) sin_idx_x#22 main::@2/(byte) sin_idx_x#17 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@1/(byte*) RASTER#2 main::@2/(byte*) RASTER#1 main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (byte*) RASTER#7 ← phi( main::@2/(byte*) RASTER#1 )
  (byte*) SPRITES_YPOS#6 ← phi( main::@2/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#6 ← phi( main::@2/(byte*) SPRITES_XPOS#10 )
  (byte*) BORDERCOL#4 ← phi( main::@2/(byte*) BORDERCOL#8 )
  (byte) sin_idx_y#13 ← phi( main::@2/(byte) sin_idx_y#18 )
  (byte) sin_idx_x#13 ← phi( main::@2/(byte) sin_idx_x#17 )
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte*) SPRITES_YPOS#17 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#17 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte*) BORDERCOL#17 ← phi( main::@3/(byte*) BORDERCOL#4 )
  (byte*) RASTER#5 ← phi( main::@3/(byte*) RASTER#7 )
  (byte) sin_idx_y#7 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#7 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte) sin_idx_x#0 ← (byte) sin_idx_x#7
  (byte) sin_idx_y#0 ← (byte) sin_idx_y#7
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte) sin_idx_y#8 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#8 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte) sin_idx_x#1 ← (byte) sin_idx_x#8
  (byte) sin_idx_y#1 ← (byte) sin_idx_y#8
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#16 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#46 ← phi( init/(byte*) BORDERCOL#47 init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#13 ← phi( init/(byte*) PROCPORT#15 init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#7 ← phi( init/(byte*) CHARGEN#8 init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#4 ← phi( init/(byte*) SPRITES_COLS#5 init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SPRITES_EXPAND_Y#3 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#3 ← phi( init/(byte*) SPRITES_EXPAND_X#4 init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#3 ← phi( init/(byte*) SPRITES_ENABLE#4 init::@1/(byte*) SPRITES_ENABLE#3 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 init::@1/(byte*) SCREEN#2 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (byte*) BORDERCOL#45 ← phi( init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#10 ← phi( init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#6 ← phi( init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#3 ← phi( init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#9 ← phi( init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#9 ← phi( init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#5 ← phi( init::@1/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#2 ← phi( init::@1/(byte*) SPRITES_ENABLE#3 )
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  (byte*) BORDERCOL#44 ← phi( init::@2/(byte*) BORDERCOL#45 )
  (byte*) PROCPORT#8 ← phi( init::@2/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#5 ← phi( init::@2/(byte*) CHARGEN#6 )
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) BORDERCOL#42 ← phi( init::@3/(byte*) BORDERCOL#44 )
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) BORDERCOL#43 ← phi( init::@4/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@6
init::@6: scope:[init]  from init::@5
  to:init::@return
init::@return: scope:[init]  from init::@6
  return 
  to:@return
@34: scope:[]  from @32
  (byte*) PROCPORT#21 ← phi( @32/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#11 ← phi( @32/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#8 ← phi( @32/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#19 ← phi( @32/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#19 ← phi( @32/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#7 ← phi( @32/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#7 ← phi( @32/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#7 ← phi( @32/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#26 ← phi( @32/(byte*) BORDERCOL#0 )
  (byte*) RASTER#8 ← phi( @32/(byte*) RASTER#0 )
  (byte*) SCREEN#7 ← phi( @32/(byte*) SCREEN#0 )
  (byte) sin_idx_x#2 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#2 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#4 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#22 ← phi( anim/(byte*) BORDERCOL#1 anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#25 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#24 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#14 )
  (byte) anim::j#5 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 anim::@3/(byte*) SPRITES_YPOS#4 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 anim::@3/(byte*) SPRITES_XPOS#4 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx#1 ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx#1 >= (byte) sinlen_x#0
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte*) BORDERCOL#18 ← phi( anim::@1/(byte*) BORDERCOL#22 anim::@6/(byte*) BORDERCOL#23 )
  (byte) sin_idx_y#22 ← phi( anim::@1/(byte) sin_idx_y#25 anim::@6/(byte) sin_idx_y#26 )
  (byte) sin_idx_x#18 ← phi( anim::@1/(byte) sin_idx_x#24 anim::@6/(byte) sin_idx_x#25 )
  (byte*) SPRITES_YPOS#7 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 anim::@6/(byte*) SPRITES_YPOS#12 )
  (byte*) SPRITES_XPOS#7 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 anim::@6/(byte*) SPRITES_XPOS#12 )
  (byte) anim::xidx#6 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::j#3 ← phi( anim::@1/(byte) anim::j#5 anim::@6/(byte) anim::j#6 )
  (byte) anim::j2#5 ← phi( anim::@1/(byte) anim::j2#3 anim::@6/(byte) anim::j2#7 )
  (byte) anim::yidx#4 ← phi( anim::@1/(byte) anim::yidx#3 anim::@6/(byte) anim::yidx#7 )
  (byte~) anim::$6 ← (byte) anim::yidx#4 + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx#1 ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx#1 >= (byte) sinlen_y#0
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte*) BORDERCOL#23 ← phi( anim::@1/(byte*) BORDERCOL#22 )
  (byte) sin_idx_y#26 ← phi( anim::@1/(byte) sin_idx_y#25 )
  (byte) sin_idx_x#25 ← phi( anim::@1/(byte) sin_idx_x#24 )
  (byte*) SPRITES_YPOS#12 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 )
  (byte*) SPRITES_XPOS#12 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 )
  (byte) anim::j#6 ← phi( anim::@1/(byte) anim::j#5 )
  (byte) anim::j2#7 ← phi( anim::@1/(byte) anim::j2#3 )
  (byte) anim::yidx#7 ← phi( anim::@1/(byte) anim::yidx#3 )
  (byte) anim::xidx#4 ← phi( anim::@1/(byte) anim::xidx#1 )
  (byte~) anim::$5 ← (byte) anim::xidx#4 - (byte) sinlen_x#0
  (byte) anim::xidx#2 ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte*) BORDERCOL#14 ← phi( anim::@2/(byte*) BORDERCOL#18 anim::@7/(byte*) BORDERCOL#19 )
  (byte) sin_idx_y#19 ← phi( anim::@2/(byte) sin_idx_y#22 anim::@7/(byte) sin_idx_y#23 )
  (byte) sin_idx_x#14 ← phi( anim::@2/(byte) sin_idx_x#18 anim::@7/(byte) sin_idx_x#19 )
  (byte*) SPRITES_YPOS#4 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 anim::@7/(byte*) SPRITES_YPOS#8 )
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte*) SPRITES_XPOS#4 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 anim::@7/(byte*) SPRITES_XPOS#8 )
  (byte) anim::xidx#5 ← phi( anim::@2/(byte) anim::xidx#6 anim::@7/(byte) anim::xidx#7 )
  (byte) anim::j#2 ← phi( anim::@2/(byte) anim::j#3 anim::@7/(byte) anim::j#4 )
  (byte) anim::j2#4 ← phi( anim::@2/(byte) anim::j2#5 anim::@7/(byte) anim::j2#6 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#4
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte*) BORDERCOL#19 ← phi( anim::@2/(byte*) BORDERCOL#18 )
  (byte) sin_idx_y#23 ← phi( anim::@2/(byte) sin_idx_y#22 )
  (byte) sin_idx_x#19 ← phi( anim::@2/(byte) sin_idx_x#18 )
  (byte*) SPRITES_YPOS#8 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 )
  (byte*) SPRITES_XPOS#8 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 )
  (byte) anim::xidx#7 ← phi( anim::@2/(byte) anim::xidx#6 )
  (byte) anim::j#4 ← phi( anim::@2/(byte) anim::j#3 )
  (byte) anim::j2#6 ← phi( anim::@2/(byte) anim::j2#5 )
  (byte) anim::yidx#5 ← phi( anim::@2/(byte) anim::yidx#1 )
  (byte~) anim::$9 ← (byte) anim::yidx#5 - (byte) sinlen_y#0
  (byte) anim::yidx#2 ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte*) BORDERCOL#9 ← phi( anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#14 ← phi( anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#10 ← phi( anim::@3/(byte) sin_idx_x#14 )
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$11 ← (byte) sin_idx_x#3 >= (byte) sinlen_x#0
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#21 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte*) BORDERCOL#6 ← phi( anim::@8/(byte*) BORDERCOL#9 anim::@9/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#10 ← phi( anim::@8/(byte) sin_idx_y#14 anim::@9/(byte) sin_idx_y#15 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$13 ← (byte) sin_idx_y#3 >= (byte) sinlen_y#0
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte*) BORDERCOL#10 ← phi( anim::@8/(byte*) BORDERCOL#9 )
  (byte) sin_idx_y#15 ← phi( anim::@8/(byte) sin_idx_y#14 )
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#16 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  (byte) sin_idx_x#15 ← phi( anim::@10/(byte) sin_idx_x#20 anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#2 ← phi( anim::@10/(byte*) BORDERCOL#5 anim::@4/(byte*) BORDERCOL#6 )
  *((byte*) BORDERCOL#2) ← -- *((byte*) BORDERCOL#2)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_x#20 ← phi( anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#5 ← phi( anim::@4/(byte*) BORDERCOL#6 )
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  (byte) sin_idx_y#11 ← phi( anim::@5/(byte) sin_idx_y#16 )
  (byte) sin_idx_x#11 ← phi( anim::@5/(byte) sin_idx_x#15 )
  (byte) sin_idx_x#5 ← (byte) sin_idx_x#11
  (byte) sin_idx_y#5 ← (byte) sin_idx_y#11
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#9 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#9 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#5 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr#0 ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id#0 ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 place_sprites::@1/(byte*) SPRITES_COLS#1 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 place_sprites::@1/(byte*) SPRITES_YPOS#2 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 place_sprites::@1/(byte*) SPRITES_XPOS#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x#1 ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::col#1 ← (byte~) place_sprites::$5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#8 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 gen_sprites::@3/(byte*) PROCPORT#6 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 gen_sprites::@3/(byte*) CHARGEN#4 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 gen_sprites::@3/(byte[]) gen_sprites::cml#2 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) PROCPORT#6 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#4 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte[]) gen_sprites::cml#2 ← phi( gen_sprites::@1/(byte[]) gen_sprites::cml#1 )
  (byte) gen_sprites::i#3 ← phi( gen_sprites::@1/(byte) gen_sprites::i#2 )
  (byte*) gen_sprites::spr#3 ← phi( gen_sprites::@1/(byte*) gen_sprites::spr#2 )
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr#3 + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr#1 ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#3
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::bits#0 ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#16 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#8 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#9 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte) gen_chargen_sprite::x#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#9 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#8 )
  (byte) gen_chargen_sprite::s_gen#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#9 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 gen_chargen_sprite::@6/(byte*) PROCPORT#17 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::chargen#9 )
  (byte) gen_chargen_sprite::y#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::x#8 )
  (byte) gen_chargen_sprite::bits#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::bits#8 )
  (byte*) gen_chargen_sprite::sprite#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::sprite#10 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen_cnt#7 )
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen#8 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte*) PROCPORT#17 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 )
  (byte*) gen_chargen_sprite::chargen#9 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 )
  (byte) gen_chargen_sprite::x#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 )
  (byte) gen_chargen_sprite::bits#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 )
  (byte) gen_chargen_sprite::s_gen_cnt#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 )
  (byte) gen_chargen_sprite::s_gen#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 )
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#6 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#8 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte) gen_chargen_sprite::x#4 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#5 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#7 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte*) gen_chargen_sprite::sprite#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::b#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#4 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt#1 == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) PROCPORT#9 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 gen_chargen_sprite::@7/(byte*) PROCPORT#12 )
  (byte*) gen_chargen_sprite::chargen#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::chargen#6 )
  (byte) gen_chargen_sprite::y#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::y#7 )
  (byte*) gen_chargen_sprite::sprite#8 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::x#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::x#5 )
  (byte) gen_chargen_sprite::bits#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::bits#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::c#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::c#5 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::b#4 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  (byte*) PROCPORT#12 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#6 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 )
  (byte) gen_chargen_sprite::y#7 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 )
  (byte) gen_chargen_sprite::x#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 )
  (byte) gen_chargen_sprite::bits#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 )
  (byte) gen_chargen_sprite::c#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::b#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 )
  (byte) gen_chargen_sprite::s_gen#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 )
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#4
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::s_gen_cnt#8 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#9 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte*) PROCPORT#7 ← phi( gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#3 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#4 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte*) gen_chargen_sprite::sprite#6 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits#1 ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) PROCPORT#4 ← phi( gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  (byte*) PROCPORT#2 ← phi( gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  *((byte*) PROCPORT#2) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#41 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#43 )
  (byte*) gen_sintab::sintab#23 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#23 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#4 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  (byte*) BORDERCOL#40 ← phi( gen_sintab/(byte*) BORDERCOL#41 )
  (byte*) gen_sintab::sintab#22 ← phi( gen_sintab/(byte*) gen_sintab::sintab#23 )
  (byte) gen_sintab::length#22 ← phi( gen_sintab/(byte) gen_sintab::length#23 )
  (byte[]) gen_sintab::f_i#21 ← phi( gen_sintab/(byte[]) gen_sintab::f_i#0 )
  (byte*) gen_sintab::f_2pi#21 ← phi( gen_sintab/(byte*) gen_sintab::f_2pi#0 )
  (byte[]) gen_sintab::f_amp#12 ← phi( gen_sintab/(byte[]) gen_sintab::f_amp#0 )
  (byte[]) gen_sintab::f_min#8 ← phi( gen_sintab/(byte[]) gen_sintab::f_min#0 )
  (byte) gen_sintab::min#3 ← phi( gen_sintab/(byte) gen_sintab::min#4 )
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  (byte*) BORDERCOL#39 ← phi( gen_sintab::@3/(byte*) BORDERCOL#40 )
  (byte*) gen_sintab::sintab#21 ← phi( gen_sintab::@3/(byte*) gen_sintab::sintab#22 )
  (byte) gen_sintab::length#21 ← phi( gen_sintab::@3/(byte) gen_sintab::length#22 )
  (byte[]) gen_sintab::f_i#20 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_i#21 )
  (byte*) gen_sintab::f_2pi#20 ← phi( gen_sintab::@3/(byte*) gen_sintab::f_2pi#21 )
  (byte[]) gen_sintab::f_amp#10 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_amp#12 )
  (byte[]) gen_sintab::f_min#5 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_min#8 )
  (byte) gen_sintab::min#2 ← phi( gen_sintab::@3/(byte) gen_sintab::min#3 )
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) BORDERCOL#38 ← phi( gen_sintab::@4/(byte*) BORDERCOL#39 )
  (byte*) gen_sintab::sintab#20 ← phi( gen_sintab::@4/(byte*) gen_sintab::sintab#21 )
  (byte) gen_sintab::length#20 ← phi( gen_sintab::@4/(byte) gen_sintab::length#21 )
  (byte[]) gen_sintab::f_i#19 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_i#20 )
  (byte*) gen_sintab::f_2pi#19 ← phi( gen_sintab::@4/(byte*) gen_sintab::f_2pi#20 )
  (byte[]) gen_sintab::f_amp#8 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_amp#10 )
  (byte[]) gen_sintab::f_min#1 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_min#5 )
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  (byte*) BORDERCOL#37 ← phi( gen_sintab::@5/(byte*) BORDERCOL#38 )
  (byte*) gen_sintab::sintab#19 ← phi( gen_sintab::@5/(byte*) gen_sintab::sintab#20 )
  (byte) gen_sintab::length#19 ← phi( gen_sintab::@5/(byte) gen_sintab::length#20 )
  (byte[]) gen_sintab::f_i#18 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_i#19 )
  (byte*) gen_sintab::f_2pi#17 ← phi( gen_sintab::@5/(byte*) gen_sintab::f_2pi#19 )
  (byte[]) gen_sintab::f_min#15 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_min#1 )
  (byte[]) gen_sintab::f_amp#5 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_amp#8 )
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) BORDERCOL#36 ← phi( gen_sintab::@6/(byte*) BORDERCOL#37 )
  (byte*) gen_sintab::sintab#18 ← phi( gen_sintab::@6/(byte*) gen_sintab::sintab#19 )
  (byte) gen_sintab::length#18 ← phi( gen_sintab::@6/(byte) gen_sintab::length#19 )
  (byte[]) gen_sintab::f_i#17 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_i#18 )
  (byte*) gen_sintab::f_2pi#15 ← phi( gen_sintab::@6/(byte*) gen_sintab::f_2pi#17 )
  (byte[]) gen_sintab::f_min#13 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_min#15 )
  (byte[]) gen_sintab::f_amp#1 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_amp#5 )
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (byte*) BORDERCOL#35 ← phi( gen_sintab::@7/(byte*) BORDERCOL#36 )
  (byte*) gen_sintab::sintab#17 ← phi( gen_sintab::@7/(byte*) gen_sintab::sintab#18 )
  (byte) gen_sintab::length#17 ← phi( gen_sintab::@7/(byte) gen_sintab::length#18 )
  (byte[]) gen_sintab::f_i#16 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_i#17 )
  (byte*) gen_sintab::f_2pi#13 ← phi( gen_sintab::@7/(byte*) gen_sintab::f_2pi#15 )
  (byte[]) gen_sintab::f_min#11 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_min#13 )
  (byte[]) gen_sintab::f_amp#6 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_amp#1 )
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) BORDERCOL#34 ← phi( gen_sintab::@8/(byte*) BORDERCOL#35 )
  (byte*) gen_sintab::sintab#16 ← phi( gen_sintab::@8/(byte*) gen_sintab::sintab#17 )
  (byte) gen_sintab::length#16 ← phi( gen_sintab::@8/(byte) gen_sintab::length#17 )
  (byte[]) gen_sintab::f_i#14 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_i#16 )
  (byte*) gen_sintab::f_2pi#11 ← phi( gen_sintab::@8/(byte*) gen_sintab::f_2pi#13 )
  (byte[]) gen_sintab::f_min#9 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_min#11 )
  (byte[]) gen_sintab::f_amp#2 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_amp#6 )
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) BORDERCOL#33 ← phi( gen_sintab::@9/(byte*) BORDERCOL#34 )
  (byte*) gen_sintab::sintab#15 ← phi( gen_sintab::@9/(byte*) gen_sintab::sintab#16 )
  (byte) gen_sintab::length#15 ← phi( gen_sintab::@9/(byte) gen_sintab::length#16 )
  (byte[]) gen_sintab::f_i#12 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_i#14 )
  (byte*) gen_sintab::f_2pi#9 ← phi( gen_sintab::@9/(byte*) gen_sintab::f_2pi#11 )
  (byte[]) gen_sintab::f_min#6 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_min#9 )
  (byte[]) gen_sintab::f_amp#3 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_amp#2 )
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) BORDERCOL#32 ← phi( gen_sintab::@10/(byte*) BORDERCOL#33 )
  (byte*) gen_sintab::sintab#14 ← phi( gen_sintab::@10/(byte*) gen_sintab::sintab#15 )
  (byte[]) gen_sintab::f_amp#20 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_amp#3 )
  (byte) gen_sintab::length#14 ← phi( gen_sintab::@10/(byte) gen_sintab::length#15 )
  (byte[]) gen_sintab::f_i#10 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_i#12 )
  (byte*) gen_sintab::f_2pi#7 ← phi( gen_sintab::@10/(byte*) gen_sintab::f_2pi#9 )
  (byte[]) gen_sintab::f_min#2 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_min#6 )
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#2
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) BORDERCOL#31 ← phi( gen_sintab::@11/(byte*) BORDERCOL#32 )
  (byte*) gen_sintab::sintab#13 ← phi( gen_sintab::@11/(byte*) gen_sintab::sintab#14 )
  (byte[]) gen_sintab::f_amp#18 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_amp#20 )
  (byte) gen_sintab::length#12 ← phi( gen_sintab::@11/(byte) gen_sintab::length#14 )
  (byte[]) gen_sintab::f_i#8 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_i#10 )
  (byte*) gen_sintab::f_2pi#5 ← phi( gen_sintab::@11/(byte*) gen_sintab::f_2pi#7 )
  (byte[]) gen_sintab::f_min#3 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_min#2 )
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte*) BORDERCOL#30 ← phi( gen_sintab::@12/(byte*) BORDERCOL#31 )
  (byte*) gen_sintab::sintab#12 ← phi( gen_sintab::@12/(byte*) gen_sintab::sintab#13 )
  (byte[]) gen_sintab::f_min#19 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_min#3 )
  (byte[]) gen_sintab::f_amp#16 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_amp#18 )
  (byte) gen_sintab::length#10 ← phi( gen_sintab::@12/(byte) gen_sintab::length#12 )
  (byte[]) gen_sintab::f_i#6 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_i#8 )
  (byte*) gen_sintab::f_2pi#3 ← phi( gen_sintab::@12/(byte*) gen_sintab::f_2pi#5 )
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#29 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 gen_sintab::@22/(byte*) BORDERCOL#3 )
  (byte*) gen_sintab::sintab#11 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@22/(byte*) gen_sintab::sintab#2 )
  (byte[]) gen_sintab::f_min#18 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#19 gen_sintab::@22/(byte[]) gen_sintab::f_min#20 )
  (byte[]) gen_sintab::f_amp#15 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#16 gen_sintab::@22/(byte[]) gen_sintab::f_amp#17 )
  (byte) gen_sintab::length#8 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@22/(byte) gen_sintab::length#3 )
  (byte[]) gen_sintab::f_i#5 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#6 gen_sintab::@22/(byte[]) gen_sintab::f_i#7 )
  (byte*) gen_sintab::f_2pi#2 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#3 gen_sintab::@22/(byte*) gen_sintab::f_2pi#4 )
  (byte) gen_sintab::i#2 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#2
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) BORDERCOL#28 ← phi( gen_sintab::@1/(byte*) BORDERCOL#29 )
  (byte) gen_sintab::i#11 ← phi( gen_sintab::@1/(byte) gen_sintab::i#2 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@1/(byte*) gen_sintab::sintab#11 )
  (byte[]) gen_sintab::f_min#17 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_min#18 )
  (byte[]) gen_sintab::f_amp#14 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_amp#15 )
  (byte) gen_sintab::length#6 ← phi( gen_sintab::@1/(byte) gen_sintab::length#8 )
  (byte[]) gen_sintab::f_i#3 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_i#5 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@1/(byte*) gen_sintab::f_2pi#2 )
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) gen_sintab::f_2pi#18 ← phi( gen_sintab::@14/(byte*) gen_sintab::f_2pi#1 )
  (byte*) BORDERCOL#27 ← phi( gen_sintab::@14/(byte*) BORDERCOL#28 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@14/(byte) gen_sintab::i#11 )
  (byte*) gen_sintab::sintab#9 ← phi( gen_sintab::@14/(byte*) gen_sintab::sintab#10 )
  (byte[]) gen_sintab::f_min#16 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_min#17 )
  (byte[]) gen_sintab::f_amp#13 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_amp#14 )
  (byte) gen_sintab::length#4 ← phi( gen_sintab::@14/(byte) gen_sintab::length#6 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_i#3 )
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (byte*) gen_sintab::f_2pi#16 ← phi( gen_sintab::@15/(byte*) gen_sintab::f_2pi#18 )
  (byte*) BORDERCOL#25 ← phi( gen_sintab::@15/(byte*) BORDERCOL#27 )
  (byte) gen_sintab::i#9 ← phi( gen_sintab::@15/(byte) gen_sintab::i#10 )
  (byte*) gen_sintab::sintab#8 ← phi( gen_sintab::@15/(byte*) gen_sintab::sintab#9 )
  (byte[]) gen_sintab::f_min#14 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_min#16 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_amp#13 )
  (byte[]) gen_sintab::f_i#4 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_i#1 )
  (byte) gen_sintab::length#2 ← phi( gen_sintab::@15/(byte) gen_sintab::length#4 )
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#2
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) gen_sintab::f_2pi#14 ← phi( gen_sintab::@16/(byte*) gen_sintab::f_2pi#16 )
  (byte) gen_sintab::length#13 ← phi( gen_sintab::@16/(byte) gen_sintab::length#2 )
  (byte*) BORDERCOL#24 ← phi( gen_sintab::@16/(byte*) BORDERCOL#25 )
  (byte) gen_sintab::i#8 ← phi( gen_sintab::@16/(byte) gen_sintab::i#9 )
  (byte*) gen_sintab::sintab#7 ← phi( gen_sintab::@16/(byte*) gen_sintab::sintab#8 )
  (byte[]) gen_sintab::f_min#12 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_min#14 )
  (byte[]) gen_sintab::f_amp#9 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_amp#11 )
  (byte[]) gen_sintab::f_i#2 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_i#4 )
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  (byte[]) gen_sintab::f_i#15 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_i#2 )
  (byte*) gen_sintab::f_2pi#12 ← phi( gen_sintab::@17/(byte*) gen_sintab::f_2pi#14 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@17/(byte) gen_sintab::length#13 )
  (byte*) BORDERCOL#20 ← phi( gen_sintab::@17/(byte*) BORDERCOL#24 )
  (byte) gen_sintab::i#7 ← phi( gen_sintab::@17/(byte) gen_sintab::i#8 )
  (byte*) gen_sintab::sintab#6 ← phi( gen_sintab::@17/(byte*) gen_sintab::sintab#7 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_min#12 )
  (byte[]) gen_sintab::f_amp#7 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_amp#9 )
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte[]) gen_sintab::f_i#13 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_i#15 )
  (byte*) gen_sintab::f_2pi#10 ← phi( gen_sintab::@18/(byte*) gen_sintab::f_2pi#12 )
  (byte) gen_sintab::length#9 ← phi( gen_sintab::@18/(byte) gen_sintab::length#11 )
  (byte*) BORDERCOL#15 ← phi( gen_sintab::@18/(byte*) BORDERCOL#20 )
  (byte) gen_sintab::i#6 ← phi( gen_sintab::@18/(byte) gen_sintab::i#7 )
  (byte*) gen_sintab::sintab#5 ← phi( gen_sintab::@18/(byte*) gen_sintab::sintab#6 )
  (byte[]) gen_sintab::f_min#7 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_min#10 )
  (byte[]) gen_sintab::f_amp#4 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_amp#7 )
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#4
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte[]) gen_sintab::f_amp#21 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_amp#4 )
  (byte[]) gen_sintab::f_i#11 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_i#13 )
  (byte*) gen_sintab::f_2pi#8 ← phi( gen_sintab::@19/(byte*) gen_sintab::f_2pi#10 )
  (byte) gen_sintab::length#7 ← phi( gen_sintab::@19/(byte) gen_sintab::length#9 )
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@19/(byte*) BORDERCOL#15 )
  (byte) gen_sintab::i#5 ← phi( gen_sintab::@19/(byte) gen_sintab::i#6 )
  (byte*) gen_sintab::sintab#4 ← phi( gen_sintab::@19/(byte*) gen_sintab::sintab#5 )
  (byte[]) gen_sintab::f_min#4 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_min#7 )
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#4
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  (byte[]) gen_sintab::f_min#21 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_min#4 )
  (byte[]) gen_sintab::f_amp#19 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_amp#21 )
  (byte[]) gen_sintab::f_i#9 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_i#11 )
  (byte*) gen_sintab::f_2pi#6 ← phi( gen_sintab::@20/(byte*) gen_sintab::f_2pi#8 )
  (byte) gen_sintab::length#5 ← phi( gen_sintab::@20/(byte) gen_sintab::length#7 )
  (byte*) BORDERCOL#7 ← phi( gen_sintab::@20/(byte*) BORDERCOL#11 )
  (byte) gen_sintab::i#4 ← phi( gen_sintab::@20/(byte) gen_sintab::i#5 )
  (byte*) gen_sintab::sintab#3 ← phi( gen_sintab::@20/(byte*) gen_sintab::sintab#4 )
  (word) getFAC::return#2 ← call getFAC param-assignment
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (byte[]) gen_sintab::f_min#20 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_min#21 )
  (byte[]) gen_sintab::f_amp#17 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_amp#19 )
  (byte[]) gen_sintab::f_i#7 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_i#9 )
  (byte*) gen_sintab::f_2pi#4 ← phi( gen_sintab::@21/(byte*) gen_sintab::f_2pi#6 )
  (byte) gen_sintab::length#3 ← phi( gen_sintab::@21/(byte) gen_sintab::length#5 )
  (byte*) BORDERCOL#3 ← phi( gen_sintab::@21/(byte*) BORDERCOL#7 )
  (byte) gen_sintab::i#3 ← phi( gen_sintab::@21/(byte) gen_sintab::i#4 )
  (byte*) gen_sintab::sintab#2 ← phi( gen_sintab::@21/(byte*) gen_sintab::sintab#3 )
  (word) getFAC::return#4 ← phi( gen_sintab::@21/(word) getFAC::return#2 )
  (word~) gen_sintab::$23 ← (word) getFAC::return#4
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#2 + (byte) gen_sintab::i#3) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#3) ← ++ *((byte*) BORDERCOL#3)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#3
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#3
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  (byte*) PROCPORT#20 ← phi( @34/(byte*) PROCPORT#21 )
  (byte*) CHARGEN#10 ← phi( @34/(byte*) CHARGEN#11 )
  (byte*) SPRITES_COLS#7 ← phi( @34/(byte*) SPRITES_COLS#8 )
  (byte*) SPRITES_YPOS#18 ← phi( @34/(byte*) SPRITES_YPOS#19 )
  (byte*) SPRITES_XPOS#18 ← phi( @34/(byte*) SPRITES_XPOS#19 )
  (byte*) SPRITES_EXPAND_Y#6 ← phi( @34/(byte*) SPRITES_EXPAND_Y#7 )
  (byte*) SPRITES_EXPAND_X#6 ← phi( @34/(byte*) SPRITES_EXPAND_X#7 )
  (byte*) SPRITES_ENABLE#6 ← phi( @34/(byte*) SPRITES_ENABLE#7 )
  (byte*) BORDERCOL#21 ← phi( @34/(byte*) BORDERCOL#26 )
  (byte*) RASTER#6 ← phi( @34/(byte*) RASTER#8 )
  (byte*) SCREEN#6 ← phi( @34/(byte*) SCREEN#7 )
  (byte) sin_idx_y#17 ← phi( @34/(byte) sin_idx_y#2 )
  (byte) sin_idx_x#16 ← phi( @34/(byte) sin_idx_x#2 )
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#16 )
  (byte) sin_idx_x#6 ← (byte) sin_idx_x#12
  (byte) sin_idx_y#6 ← (byte) sin_idx_y#12
  to:@end
@end: scope:[]  from @40

CONTROL FLOW GRAPH WITH ASSIGNMENT CALL & RETURN
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::w#2 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  (word) getFAC::return#0 ← (word) getFAC::w#2
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return#3 ← phi( getFAC/(word) getFAC::return#0 )
  (word) getFAC::return#1 ← (word) getFAC::return#3
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#20 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#10 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#7 )
  (byte*) SPRITES_YPOS#16 ← phi( @39/(byte*) SPRITES_YPOS#18 )
  (byte*) SPRITES_XPOS#16 ← phi( @39/(byte*) SPRITES_XPOS#18 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#6 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#6 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#6 )
  (byte*) BORDERCOL#16 ← phi( @39/(byte*) BORDERCOL#21 )
  (byte) sin_idx_y#24 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#26 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#4 ← phi( @39/(byte*) RASTER#6 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#6 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  (byte*) SPRITES_YPOS#14 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#14 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) BORDERCOL#13 ← phi( main/(byte*) BORDERCOL#16 )
  (byte) sin_idx_y#21 ← phi( main/(byte) sin_idx_y#24 )
  (byte) sin_idx_x#23 ← phi( main/(byte) sin_idx_x#26 )
  (byte*) RASTER#3 ← phi( main/(byte*) RASTER#4 )
  to:main::@2
main::@1: scope:[main]  from main::@6
  (byte*) SPRITES_YPOS#13 ← phi( main::@6/(byte*) SPRITES_YPOS#17 )
  (byte*) SPRITES_XPOS#13 ← phi( main::@6/(byte*) SPRITES_XPOS#17 )
  (byte*) BORDERCOL#12 ← phi( main::@6/(byte*) BORDERCOL#17 )
  (byte) sin_idx_y#20 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#22 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte*) RASTER#2 ← phi( main::@6/(byte*) RASTER#5 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@1/(byte*) SPRITES_YPOS#13 main::@2/(byte*) SPRITES_YPOS#10 main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@1/(byte*) SPRITES_XPOS#13 main::@2/(byte*) SPRITES_XPOS#10 main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#8 ← phi( main::@1/(byte*) BORDERCOL#12 main::@2/(byte*) BORDERCOL#8 main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#18 ← phi( main::@1/(byte) sin_idx_y#20 main::@2/(byte) sin_idx_y#18 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#17 ← phi( main::@1/(byte) sin_idx_x#22 main::@2/(byte) sin_idx_x#17 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@1/(byte*) RASTER#2 main::@2/(byte*) RASTER#1 main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (byte*) RASTER#7 ← phi( main::@2/(byte*) RASTER#1 )
  (byte*) SPRITES_YPOS#6 ← phi( main::@2/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#6 ← phi( main::@2/(byte*) SPRITES_XPOS#10 )
  (byte*) BORDERCOL#4 ← phi( main::@2/(byte*) BORDERCOL#8 )
  (byte) sin_idx_y#13 ← phi( main::@2/(byte) sin_idx_y#18 )
  (byte) sin_idx_x#13 ← phi( main::@2/(byte) sin_idx_x#17 )
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte*) SPRITES_YPOS#17 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#17 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte*) BORDERCOL#17 ← phi( main::@3/(byte*) BORDERCOL#4 )
  (byte*) RASTER#5 ← phi( main::@3/(byte*) RASTER#7 )
  (byte) sin_idx_y#7 ← phi( main::@3/(byte) sin_idx_y#5 )
  (byte) sin_idx_x#7 ← phi( main::@3/(byte) sin_idx_x#5 )
  (byte) sin_idx_x#0 ← (byte) sin_idx_x#7
  (byte) sin_idx_y#0 ← (byte) sin_idx_y#7
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte) sin_idx_y#8 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#8 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte) sin_idx_x#1 ← (byte) sin_idx_x#8
  (byte) sin_idx_y#1 ← (byte) sin_idx_y#8
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#16 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#46 ← phi( init/(byte*) BORDERCOL#47 init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#13 ← phi( init/(byte*) PROCPORT#15 init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#7 ← phi( init/(byte*) CHARGEN#8 init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#4 ← phi( init/(byte*) SPRITES_COLS#5 init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SPRITES_EXPAND_Y#3 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#3 ← phi( init/(byte*) SPRITES_EXPAND_X#4 init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#3 ← phi( init/(byte*) SPRITES_ENABLE#4 init::@1/(byte*) SPRITES_ENABLE#3 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 init::@1/(byte*) SCREEN#2 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (byte*) BORDERCOL#45 ← phi( init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#10 ← phi( init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#6 ← phi( init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#3 ← phi( init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#9 ← phi( init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#9 ← phi( init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#5 ← phi( init::@1/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#2 ← phi( init::@1/(byte*) SPRITES_ENABLE#3 )
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  (byte*) BORDERCOL#44 ← phi( init::@2/(byte*) BORDERCOL#45 )
  (byte*) PROCPORT#8 ← phi( init::@2/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#5 ← phi( init::@2/(byte*) CHARGEN#6 )
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) BORDERCOL#42 ← phi( init::@3/(byte*) BORDERCOL#44 )
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) BORDERCOL#43 ← phi( init::@4/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@6
init::@6: scope:[init]  from init::@5
  to:init::@return
init::@return: scope:[init]  from init::@6
  return 
  to:@return
@34: scope:[]  from @32
  (byte*) PROCPORT#21 ← phi( @32/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#11 ← phi( @32/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#8 ← phi( @32/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#19 ← phi( @32/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#19 ← phi( @32/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#7 ← phi( @32/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#7 ← phi( @32/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#7 ← phi( @32/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#26 ← phi( @32/(byte*) BORDERCOL#0 )
  (byte*) RASTER#8 ← phi( @32/(byte*) RASTER#0 )
  (byte*) SCREEN#7 ← phi( @32/(byte*) SCREEN#0 )
  (byte) sin_idx_x#2 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#2 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#4 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#22 ← phi( anim/(byte*) BORDERCOL#1 anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#25 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#24 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#14 )
  (byte) anim::j#5 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 anim::@3/(byte*) SPRITES_YPOS#4 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 anim::@3/(byte*) SPRITES_XPOS#4 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx#1 ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx#1 >= (byte) sinlen_x#0
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte*) BORDERCOL#18 ← phi( anim::@1/(byte*) BORDERCOL#22 anim::@6/(byte*) BORDERCOL#23 )
  (byte) sin_idx_y#22 ← phi( anim::@1/(byte) sin_idx_y#25 anim::@6/(byte) sin_idx_y#26 )
  (byte) sin_idx_x#18 ← phi( anim::@1/(byte) sin_idx_x#24 anim::@6/(byte) sin_idx_x#25 )
  (byte*) SPRITES_YPOS#7 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 anim::@6/(byte*) SPRITES_YPOS#12 )
  (byte*) SPRITES_XPOS#7 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 anim::@6/(byte*) SPRITES_XPOS#12 )
  (byte) anim::xidx#6 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::j#3 ← phi( anim::@1/(byte) anim::j#5 anim::@6/(byte) anim::j#6 )
  (byte) anim::j2#5 ← phi( anim::@1/(byte) anim::j2#3 anim::@6/(byte) anim::j2#7 )
  (byte) anim::yidx#4 ← phi( anim::@1/(byte) anim::yidx#3 anim::@6/(byte) anim::yidx#7 )
  (byte~) anim::$6 ← (byte) anim::yidx#4 + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx#1 ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx#1 >= (byte) sinlen_y#0
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte*) BORDERCOL#23 ← phi( anim::@1/(byte*) BORDERCOL#22 )
  (byte) sin_idx_y#26 ← phi( anim::@1/(byte) sin_idx_y#25 )
  (byte) sin_idx_x#25 ← phi( anim::@1/(byte) sin_idx_x#24 )
  (byte*) SPRITES_YPOS#12 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 )
  (byte*) SPRITES_XPOS#12 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 )
  (byte) anim::j#6 ← phi( anim::@1/(byte) anim::j#5 )
  (byte) anim::j2#7 ← phi( anim::@1/(byte) anim::j2#3 )
  (byte) anim::yidx#7 ← phi( anim::@1/(byte) anim::yidx#3 )
  (byte) anim::xidx#4 ← phi( anim::@1/(byte) anim::xidx#1 )
  (byte~) anim::$5 ← (byte) anim::xidx#4 - (byte) sinlen_x#0
  (byte) anim::xidx#2 ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte*) BORDERCOL#14 ← phi( anim::@2/(byte*) BORDERCOL#18 anim::@7/(byte*) BORDERCOL#19 )
  (byte) sin_idx_y#19 ← phi( anim::@2/(byte) sin_idx_y#22 anim::@7/(byte) sin_idx_y#23 )
  (byte) sin_idx_x#14 ← phi( anim::@2/(byte) sin_idx_x#18 anim::@7/(byte) sin_idx_x#19 )
  (byte*) SPRITES_YPOS#4 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 anim::@7/(byte*) SPRITES_YPOS#8 )
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte*) SPRITES_XPOS#4 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 anim::@7/(byte*) SPRITES_XPOS#8 )
  (byte) anim::xidx#5 ← phi( anim::@2/(byte) anim::xidx#6 anim::@7/(byte) anim::xidx#7 )
  (byte) anim::j#2 ← phi( anim::@2/(byte) anim::j#3 anim::@7/(byte) anim::j#4 )
  (byte) anim::j2#4 ← phi( anim::@2/(byte) anim::j2#5 anim::@7/(byte) anim::j2#6 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#4
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte*) BORDERCOL#19 ← phi( anim::@2/(byte*) BORDERCOL#18 )
  (byte) sin_idx_y#23 ← phi( anim::@2/(byte) sin_idx_y#22 )
  (byte) sin_idx_x#19 ← phi( anim::@2/(byte) sin_idx_x#18 )
  (byte*) SPRITES_YPOS#8 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 )
  (byte*) SPRITES_XPOS#8 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 )
  (byte) anim::xidx#7 ← phi( anim::@2/(byte) anim::xidx#6 )
  (byte) anim::j#4 ← phi( anim::@2/(byte) anim::j#3 )
  (byte) anim::j2#6 ← phi( anim::@2/(byte) anim::j2#5 )
  (byte) anim::yidx#5 ← phi( anim::@2/(byte) anim::yidx#1 )
  (byte~) anim::$9 ← (byte) anim::yidx#5 - (byte) sinlen_y#0
  (byte) anim::yidx#2 ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte*) BORDERCOL#9 ← phi( anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#14 ← phi( anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#10 ← phi( anim::@3/(byte) sin_idx_x#14 )
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$11 ← (byte) sin_idx_x#3 >= (byte) sinlen_x#0
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#21 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte*) BORDERCOL#6 ← phi( anim::@8/(byte*) BORDERCOL#9 anim::@9/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#10 ← phi( anim::@8/(byte) sin_idx_y#14 anim::@9/(byte) sin_idx_y#15 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$13 ← (byte) sin_idx_y#3 >= (byte) sinlen_y#0
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte*) BORDERCOL#10 ← phi( anim::@8/(byte*) BORDERCOL#9 )
  (byte) sin_idx_y#15 ← phi( anim::@8/(byte) sin_idx_y#14 )
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#16 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  (byte) sin_idx_x#15 ← phi( anim::@10/(byte) sin_idx_x#20 anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#2 ← phi( anim::@10/(byte*) BORDERCOL#5 anim::@4/(byte*) BORDERCOL#6 )
  *((byte*) BORDERCOL#2) ← -- *((byte*) BORDERCOL#2)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_x#20 ← phi( anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#5 ← phi( anim::@4/(byte*) BORDERCOL#6 )
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  (byte) sin_idx_y#11 ← phi( anim::@5/(byte) sin_idx_y#16 )
  (byte) sin_idx_x#11 ← phi( anim::@5/(byte) sin_idx_x#15 )
  (byte) sin_idx_x#5 ← (byte) sin_idx_x#11
  (byte) sin_idx_y#5 ← (byte) sin_idx_y#11
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#9 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#9 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#5 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr#0 ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id#0 ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 place_sprites::@1/(byte*) SPRITES_COLS#1 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 place_sprites::@1/(byte*) SPRITES_YPOS#2 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 place_sprites::@1/(byte*) SPRITES_XPOS#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x#1 ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::col#1 ← (byte~) place_sprites::$5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#8 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 gen_sprites::@3/(byte*) PROCPORT#6 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 gen_sprites::@3/(byte*) CHARGEN#4 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 gen_sprites::@3/(byte[]) gen_sprites::cml#2 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) PROCPORT#6 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#4 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte[]) gen_sprites::cml#2 ← phi( gen_sprites::@1/(byte[]) gen_sprites::cml#1 )
  (byte) gen_sprites::i#3 ← phi( gen_sprites::@1/(byte) gen_sprites::i#2 )
  (byte*) gen_sprites::spr#3 ← phi( gen_sprites::@1/(byte*) gen_sprites::spr#2 )
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr#3 + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr#1 ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#3
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::bits#0 ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#16 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#8 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#9 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte) gen_chargen_sprite::x#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#9 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#8 )
  (byte) gen_chargen_sprite::s_gen#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#9 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 gen_chargen_sprite::@6/(byte*) PROCPORT#17 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::chargen#9 )
  (byte) gen_chargen_sprite::y#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::x#8 )
  (byte) gen_chargen_sprite::bits#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::bits#8 )
  (byte*) gen_chargen_sprite::sprite#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::sprite#10 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen_cnt#7 )
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen#8 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte*) PROCPORT#17 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 )
  (byte*) gen_chargen_sprite::chargen#9 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 )
  (byte) gen_chargen_sprite::x#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 )
  (byte) gen_chargen_sprite::bits#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 )
  (byte) gen_chargen_sprite::s_gen_cnt#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 )
  (byte) gen_chargen_sprite::s_gen#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 )
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#6 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#8 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte) gen_chargen_sprite::x#4 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#5 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#7 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte*) gen_chargen_sprite::sprite#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::b#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#4 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt#1 == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) PROCPORT#9 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 gen_chargen_sprite::@7/(byte*) PROCPORT#12 )
  (byte*) gen_chargen_sprite::chargen#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::chargen#6 )
  (byte) gen_chargen_sprite::y#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::y#7 )
  (byte*) gen_chargen_sprite::sprite#8 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::x#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::x#5 )
  (byte) gen_chargen_sprite::bits#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::bits#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::c#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::c#5 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::b#4 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  (byte*) PROCPORT#12 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#6 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 )
  (byte) gen_chargen_sprite::y#7 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 )
  (byte) gen_chargen_sprite::x#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 )
  (byte) gen_chargen_sprite::bits#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 )
  (byte) gen_chargen_sprite::c#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::b#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 )
  (byte) gen_chargen_sprite::s_gen#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 )
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#4
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::s_gen_cnt#8 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#9 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte*) PROCPORT#7 ← phi( gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#3 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#4 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte*) gen_chargen_sprite::sprite#6 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits#1 ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) PROCPORT#4 ← phi( gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  (byte*) PROCPORT#2 ← phi( gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  *((byte*) PROCPORT#2) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#41 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#43 )
  (byte*) gen_sintab::sintab#23 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#23 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#4 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  (byte*) BORDERCOL#40 ← phi( gen_sintab/(byte*) BORDERCOL#41 )
  (byte*) gen_sintab::sintab#22 ← phi( gen_sintab/(byte*) gen_sintab::sintab#23 )
  (byte) gen_sintab::length#22 ← phi( gen_sintab/(byte) gen_sintab::length#23 )
  (byte[]) gen_sintab::f_i#21 ← phi( gen_sintab/(byte[]) gen_sintab::f_i#0 )
  (byte*) gen_sintab::f_2pi#21 ← phi( gen_sintab/(byte*) gen_sintab::f_2pi#0 )
  (byte[]) gen_sintab::f_amp#12 ← phi( gen_sintab/(byte[]) gen_sintab::f_amp#0 )
  (byte[]) gen_sintab::f_min#8 ← phi( gen_sintab/(byte[]) gen_sintab::f_min#0 )
  (byte) gen_sintab::min#3 ← phi( gen_sintab/(byte) gen_sintab::min#4 )
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  (byte*) BORDERCOL#39 ← phi( gen_sintab::@3/(byte*) BORDERCOL#40 )
  (byte*) gen_sintab::sintab#21 ← phi( gen_sintab::@3/(byte*) gen_sintab::sintab#22 )
  (byte) gen_sintab::length#21 ← phi( gen_sintab::@3/(byte) gen_sintab::length#22 )
  (byte[]) gen_sintab::f_i#20 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_i#21 )
  (byte*) gen_sintab::f_2pi#20 ← phi( gen_sintab::@3/(byte*) gen_sintab::f_2pi#21 )
  (byte[]) gen_sintab::f_amp#10 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_amp#12 )
  (byte[]) gen_sintab::f_min#5 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_min#8 )
  (byte) gen_sintab::min#2 ← phi( gen_sintab::@3/(byte) gen_sintab::min#3 )
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) BORDERCOL#38 ← phi( gen_sintab::@4/(byte*) BORDERCOL#39 )
  (byte*) gen_sintab::sintab#20 ← phi( gen_sintab::@4/(byte*) gen_sintab::sintab#21 )
  (byte) gen_sintab::length#20 ← phi( gen_sintab::@4/(byte) gen_sintab::length#21 )
  (byte[]) gen_sintab::f_i#19 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_i#20 )
  (byte*) gen_sintab::f_2pi#19 ← phi( gen_sintab::@4/(byte*) gen_sintab::f_2pi#20 )
  (byte[]) gen_sintab::f_amp#8 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_amp#10 )
  (byte[]) gen_sintab::f_min#1 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_min#5 )
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  (byte*) BORDERCOL#37 ← phi( gen_sintab::@5/(byte*) BORDERCOL#38 )
  (byte*) gen_sintab::sintab#19 ← phi( gen_sintab::@5/(byte*) gen_sintab::sintab#20 )
  (byte) gen_sintab::length#19 ← phi( gen_sintab::@5/(byte) gen_sintab::length#20 )
  (byte[]) gen_sintab::f_i#18 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_i#19 )
  (byte*) gen_sintab::f_2pi#17 ← phi( gen_sintab::@5/(byte*) gen_sintab::f_2pi#19 )
  (byte[]) gen_sintab::f_min#15 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_min#1 )
  (byte[]) gen_sintab::f_amp#5 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_amp#8 )
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) BORDERCOL#36 ← phi( gen_sintab::@6/(byte*) BORDERCOL#37 )
  (byte*) gen_sintab::sintab#18 ← phi( gen_sintab::@6/(byte*) gen_sintab::sintab#19 )
  (byte) gen_sintab::length#18 ← phi( gen_sintab::@6/(byte) gen_sintab::length#19 )
  (byte[]) gen_sintab::f_i#17 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_i#18 )
  (byte*) gen_sintab::f_2pi#15 ← phi( gen_sintab::@6/(byte*) gen_sintab::f_2pi#17 )
  (byte[]) gen_sintab::f_min#13 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_min#15 )
  (byte[]) gen_sintab::f_amp#1 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_amp#5 )
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (byte*) BORDERCOL#35 ← phi( gen_sintab::@7/(byte*) BORDERCOL#36 )
  (byte*) gen_sintab::sintab#17 ← phi( gen_sintab::@7/(byte*) gen_sintab::sintab#18 )
  (byte) gen_sintab::length#17 ← phi( gen_sintab::@7/(byte) gen_sintab::length#18 )
  (byte[]) gen_sintab::f_i#16 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_i#17 )
  (byte*) gen_sintab::f_2pi#13 ← phi( gen_sintab::@7/(byte*) gen_sintab::f_2pi#15 )
  (byte[]) gen_sintab::f_min#11 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_min#13 )
  (byte[]) gen_sintab::f_amp#6 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_amp#1 )
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) BORDERCOL#34 ← phi( gen_sintab::@8/(byte*) BORDERCOL#35 )
  (byte*) gen_sintab::sintab#16 ← phi( gen_sintab::@8/(byte*) gen_sintab::sintab#17 )
  (byte) gen_sintab::length#16 ← phi( gen_sintab::@8/(byte) gen_sintab::length#17 )
  (byte[]) gen_sintab::f_i#14 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_i#16 )
  (byte*) gen_sintab::f_2pi#11 ← phi( gen_sintab::@8/(byte*) gen_sintab::f_2pi#13 )
  (byte[]) gen_sintab::f_min#9 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_min#11 )
  (byte[]) gen_sintab::f_amp#2 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_amp#6 )
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) BORDERCOL#33 ← phi( gen_sintab::@9/(byte*) BORDERCOL#34 )
  (byte*) gen_sintab::sintab#15 ← phi( gen_sintab::@9/(byte*) gen_sintab::sintab#16 )
  (byte) gen_sintab::length#15 ← phi( gen_sintab::@9/(byte) gen_sintab::length#16 )
  (byte[]) gen_sintab::f_i#12 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_i#14 )
  (byte*) gen_sintab::f_2pi#9 ← phi( gen_sintab::@9/(byte*) gen_sintab::f_2pi#11 )
  (byte[]) gen_sintab::f_min#6 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_min#9 )
  (byte[]) gen_sintab::f_amp#3 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_amp#2 )
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) BORDERCOL#32 ← phi( gen_sintab::@10/(byte*) BORDERCOL#33 )
  (byte*) gen_sintab::sintab#14 ← phi( gen_sintab::@10/(byte*) gen_sintab::sintab#15 )
  (byte[]) gen_sintab::f_amp#20 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_amp#3 )
  (byte) gen_sintab::length#14 ← phi( gen_sintab::@10/(byte) gen_sintab::length#15 )
  (byte[]) gen_sintab::f_i#10 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_i#12 )
  (byte*) gen_sintab::f_2pi#7 ← phi( gen_sintab::@10/(byte*) gen_sintab::f_2pi#9 )
  (byte[]) gen_sintab::f_min#2 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_min#6 )
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#2
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) BORDERCOL#31 ← phi( gen_sintab::@11/(byte*) BORDERCOL#32 )
  (byte*) gen_sintab::sintab#13 ← phi( gen_sintab::@11/(byte*) gen_sintab::sintab#14 )
  (byte[]) gen_sintab::f_amp#18 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_amp#20 )
  (byte) gen_sintab::length#12 ← phi( gen_sintab::@11/(byte) gen_sintab::length#14 )
  (byte[]) gen_sintab::f_i#8 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_i#10 )
  (byte*) gen_sintab::f_2pi#5 ← phi( gen_sintab::@11/(byte*) gen_sintab::f_2pi#7 )
  (byte[]) gen_sintab::f_min#3 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_min#2 )
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte*) BORDERCOL#30 ← phi( gen_sintab::@12/(byte*) BORDERCOL#31 )
  (byte*) gen_sintab::sintab#12 ← phi( gen_sintab::@12/(byte*) gen_sintab::sintab#13 )
  (byte[]) gen_sintab::f_min#19 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_min#3 )
  (byte[]) gen_sintab::f_amp#16 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_amp#18 )
  (byte) gen_sintab::length#10 ← phi( gen_sintab::@12/(byte) gen_sintab::length#12 )
  (byte[]) gen_sintab::f_i#6 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_i#8 )
  (byte*) gen_sintab::f_2pi#3 ← phi( gen_sintab::@12/(byte*) gen_sintab::f_2pi#5 )
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#29 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 gen_sintab::@22/(byte*) BORDERCOL#3 )
  (byte*) gen_sintab::sintab#11 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@22/(byte*) gen_sintab::sintab#2 )
  (byte[]) gen_sintab::f_min#18 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#19 gen_sintab::@22/(byte[]) gen_sintab::f_min#20 )
  (byte[]) gen_sintab::f_amp#15 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#16 gen_sintab::@22/(byte[]) gen_sintab::f_amp#17 )
  (byte) gen_sintab::length#8 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@22/(byte) gen_sintab::length#3 )
  (byte[]) gen_sintab::f_i#5 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#6 gen_sintab::@22/(byte[]) gen_sintab::f_i#7 )
  (byte*) gen_sintab::f_2pi#2 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#3 gen_sintab::@22/(byte*) gen_sintab::f_2pi#4 )
  (byte) gen_sintab::i#2 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#2
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) BORDERCOL#28 ← phi( gen_sintab::@1/(byte*) BORDERCOL#29 )
  (byte) gen_sintab::i#11 ← phi( gen_sintab::@1/(byte) gen_sintab::i#2 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@1/(byte*) gen_sintab::sintab#11 )
  (byte[]) gen_sintab::f_min#17 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_min#18 )
  (byte[]) gen_sintab::f_amp#14 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_amp#15 )
  (byte) gen_sintab::length#6 ← phi( gen_sintab::@1/(byte) gen_sintab::length#8 )
  (byte[]) gen_sintab::f_i#3 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_i#5 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@1/(byte*) gen_sintab::f_2pi#2 )
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) gen_sintab::f_2pi#18 ← phi( gen_sintab::@14/(byte*) gen_sintab::f_2pi#1 )
  (byte*) BORDERCOL#27 ← phi( gen_sintab::@14/(byte*) BORDERCOL#28 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@14/(byte) gen_sintab::i#11 )
  (byte*) gen_sintab::sintab#9 ← phi( gen_sintab::@14/(byte*) gen_sintab::sintab#10 )
  (byte[]) gen_sintab::f_min#16 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_min#17 )
  (byte[]) gen_sintab::f_amp#13 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_amp#14 )
  (byte) gen_sintab::length#4 ← phi( gen_sintab::@14/(byte) gen_sintab::length#6 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_i#3 )
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (byte*) gen_sintab::f_2pi#16 ← phi( gen_sintab::@15/(byte*) gen_sintab::f_2pi#18 )
  (byte*) BORDERCOL#25 ← phi( gen_sintab::@15/(byte*) BORDERCOL#27 )
  (byte) gen_sintab::i#9 ← phi( gen_sintab::@15/(byte) gen_sintab::i#10 )
  (byte*) gen_sintab::sintab#8 ← phi( gen_sintab::@15/(byte*) gen_sintab::sintab#9 )
  (byte[]) gen_sintab::f_min#14 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_min#16 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_amp#13 )
  (byte[]) gen_sintab::f_i#4 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_i#1 )
  (byte) gen_sintab::length#2 ← phi( gen_sintab::@15/(byte) gen_sintab::length#4 )
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#2
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) gen_sintab::f_2pi#14 ← phi( gen_sintab::@16/(byte*) gen_sintab::f_2pi#16 )
  (byte) gen_sintab::length#13 ← phi( gen_sintab::@16/(byte) gen_sintab::length#2 )
  (byte*) BORDERCOL#24 ← phi( gen_sintab::@16/(byte*) BORDERCOL#25 )
  (byte) gen_sintab::i#8 ← phi( gen_sintab::@16/(byte) gen_sintab::i#9 )
  (byte*) gen_sintab::sintab#7 ← phi( gen_sintab::@16/(byte*) gen_sintab::sintab#8 )
  (byte[]) gen_sintab::f_min#12 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_min#14 )
  (byte[]) gen_sintab::f_amp#9 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_amp#11 )
  (byte[]) gen_sintab::f_i#2 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_i#4 )
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  (byte[]) gen_sintab::f_i#15 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_i#2 )
  (byte*) gen_sintab::f_2pi#12 ← phi( gen_sintab::@17/(byte*) gen_sintab::f_2pi#14 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@17/(byte) gen_sintab::length#13 )
  (byte*) BORDERCOL#20 ← phi( gen_sintab::@17/(byte*) BORDERCOL#24 )
  (byte) gen_sintab::i#7 ← phi( gen_sintab::@17/(byte) gen_sintab::i#8 )
  (byte*) gen_sintab::sintab#6 ← phi( gen_sintab::@17/(byte*) gen_sintab::sintab#7 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_min#12 )
  (byte[]) gen_sintab::f_amp#7 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_amp#9 )
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte[]) gen_sintab::f_i#13 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_i#15 )
  (byte*) gen_sintab::f_2pi#10 ← phi( gen_sintab::@18/(byte*) gen_sintab::f_2pi#12 )
  (byte) gen_sintab::length#9 ← phi( gen_sintab::@18/(byte) gen_sintab::length#11 )
  (byte*) BORDERCOL#15 ← phi( gen_sintab::@18/(byte*) BORDERCOL#20 )
  (byte) gen_sintab::i#6 ← phi( gen_sintab::@18/(byte) gen_sintab::i#7 )
  (byte*) gen_sintab::sintab#5 ← phi( gen_sintab::@18/(byte*) gen_sintab::sintab#6 )
  (byte[]) gen_sintab::f_min#7 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_min#10 )
  (byte[]) gen_sintab::f_amp#4 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_amp#7 )
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#4
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte[]) gen_sintab::f_amp#21 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_amp#4 )
  (byte[]) gen_sintab::f_i#11 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_i#13 )
  (byte*) gen_sintab::f_2pi#8 ← phi( gen_sintab::@19/(byte*) gen_sintab::f_2pi#10 )
  (byte) gen_sintab::length#7 ← phi( gen_sintab::@19/(byte) gen_sintab::length#9 )
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@19/(byte*) BORDERCOL#15 )
  (byte) gen_sintab::i#5 ← phi( gen_sintab::@19/(byte) gen_sintab::i#6 )
  (byte*) gen_sintab::sintab#4 ← phi( gen_sintab::@19/(byte*) gen_sintab::sintab#5 )
  (byte[]) gen_sintab::f_min#4 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_min#7 )
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#4
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  (byte[]) gen_sintab::f_min#21 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_min#4 )
  (byte[]) gen_sintab::f_amp#19 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_amp#21 )
  (byte[]) gen_sintab::f_i#9 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_i#11 )
  (byte*) gen_sintab::f_2pi#6 ← phi( gen_sintab::@20/(byte*) gen_sintab::f_2pi#8 )
  (byte) gen_sintab::length#5 ← phi( gen_sintab::@20/(byte) gen_sintab::length#7 )
  (byte*) BORDERCOL#7 ← phi( gen_sintab::@20/(byte*) BORDERCOL#11 )
  (byte) gen_sintab::i#4 ← phi( gen_sintab::@20/(byte) gen_sintab::i#5 )
  (byte*) gen_sintab::sintab#3 ← phi( gen_sintab::@20/(byte*) gen_sintab::sintab#4 )
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#1
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (byte[]) gen_sintab::f_min#20 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_min#21 )
  (byte[]) gen_sintab::f_amp#17 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_amp#19 )
  (byte[]) gen_sintab::f_i#7 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_i#9 )
  (byte*) gen_sintab::f_2pi#4 ← phi( gen_sintab::@21/(byte*) gen_sintab::f_2pi#6 )
  (byte) gen_sintab::length#3 ← phi( gen_sintab::@21/(byte) gen_sintab::length#5 )
  (byte*) BORDERCOL#3 ← phi( gen_sintab::@21/(byte*) BORDERCOL#7 )
  (byte) gen_sintab::i#3 ← phi( gen_sintab::@21/(byte) gen_sintab::i#4 )
  (byte*) gen_sintab::sintab#2 ← phi( gen_sintab::@21/(byte*) gen_sintab::sintab#3 )
  (word) getFAC::return#4 ← phi( gen_sintab::@21/(word) getFAC::return#2 )
  (word~) gen_sintab::$23 ← (word) getFAC::return#4
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#2 + (byte) gen_sintab::i#3) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#3) ← ++ *((byte*) BORDERCOL#3)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#3
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#3
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  (byte*) PROCPORT#20 ← phi( @34/(byte*) PROCPORT#21 )
  (byte*) CHARGEN#10 ← phi( @34/(byte*) CHARGEN#11 )
  (byte*) SPRITES_COLS#7 ← phi( @34/(byte*) SPRITES_COLS#8 )
  (byte*) SPRITES_YPOS#18 ← phi( @34/(byte*) SPRITES_YPOS#19 )
  (byte*) SPRITES_XPOS#18 ← phi( @34/(byte*) SPRITES_XPOS#19 )
  (byte*) SPRITES_EXPAND_Y#6 ← phi( @34/(byte*) SPRITES_EXPAND_Y#7 )
  (byte*) SPRITES_EXPAND_X#6 ← phi( @34/(byte*) SPRITES_EXPAND_X#7 )
  (byte*) SPRITES_ENABLE#6 ← phi( @34/(byte*) SPRITES_ENABLE#7 )
  (byte*) BORDERCOL#21 ← phi( @34/(byte*) BORDERCOL#26 )
  (byte*) RASTER#6 ← phi( @34/(byte*) RASTER#8 )
  (byte*) SCREEN#6 ← phi( @34/(byte*) SCREEN#7 )
  (byte) sin_idx_y#17 ← phi( @34/(byte) sin_idx_y#2 )
  (byte) sin_idx_x#16 ← phi( @34/(byte) sin_idx_x#2 )
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#1 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#1 )
  (byte) sin_idx_x#6 ← (byte) sin_idx_x#12
  (byte) sin_idx_y#6 ← (byte) sin_idx_y#12
  to:@end
@end: scope:[]  from @40

INITIAL SSA SYMBOL TABLE
(label) @32
(label) @34
(label) @39
(label) @40
(label) @begin
(label) @end
(byte*) BORDERCOL
(byte*) BORDERCOL#0
(byte*) BORDERCOL#1
(byte*) BORDERCOL#10
(byte*) BORDERCOL#11
(byte*) BORDERCOL#12
(byte*) BORDERCOL#13
(byte*) BORDERCOL#14
(byte*) BORDERCOL#15
(byte*) BORDERCOL#16
(byte*) BORDERCOL#17
(byte*) BORDERCOL#18
(byte*) BORDERCOL#19
(byte*) BORDERCOL#2
(byte*) BORDERCOL#20
(byte*) BORDERCOL#21
(byte*) BORDERCOL#22
(byte*) BORDERCOL#23
(byte*) BORDERCOL#24
(byte*) BORDERCOL#25
(byte*) BORDERCOL#26
(byte*) BORDERCOL#27
(byte*) BORDERCOL#28
(byte*) BORDERCOL#29
(byte*) BORDERCOL#3
(byte*) BORDERCOL#30
(byte*) BORDERCOL#31
(byte*) BORDERCOL#32
(byte*) BORDERCOL#33
(byte*) BORDERCOL#34
(byte*) BORDERCOL#35
(byte*) BORDERCOL#36
(byte*) BORDERCOL#37
(byte*) BORDERCOL#38
(byte*) BORDERCOL#39
(byte*) BORDERCOL#4
(byte*) BORDERCOL#40
(byte*) BORDERCOL#41
(byte*) BORDERCOL#42
(byte*) BORDERCOL#43
(byte*) BORDERCOL#44
(byte*) BORDERCOL#45
(byte*) BORDERCOL#46
(byte*) BORDERCOL#47
(byte*) BORDERCOL#5
(byte*) BORDERCOL#6
(byte*) BORDERCOL#7
(byte*) BORDERCOL#8
(byte*) BORDERCOL#9
(byte*) CHARGEN
(byte*) CHARGEN#0
(byte*) CHARGEN#1
(byte*) CHARGEN#10
(byte*) CHARGEN#11
(byte*) CHARGEN#2
(byte*) CHARGEN#3
(byte*) CHARGEN#4
(byte*) CHARGEN#5
(byte*) CHARGEN#6
(byte*) CHARGEN#7
(byte*) CHARGEN#8
(byte*) CHARGEN#9
(byte*) PROCPORT
(byte*) PROCPORT#0
(byte*) PROCPORT#1
(byte*) PROCPORT#10
(byte*) PROCPORT#11
(byte*) PROCPORT#12
(byte*) PROCPORT#13
(byte*) PROCPORT#14
(byte*) PROCPORT#15
(byte*) PROCPORT#16
(byte*) PROCPORT#17
(byte*) PROCPORT#18
(byte*) PROCPORT#19
(byte*) PROCPORT#2
(byte*) PROCPORT#20
(byte*) PROCPORT#21
(byte*) PROCPORT#3
(byte*) PROCPORT#4
(byte*) PROCPORT#5
(byte*) PROCPORT#6
(byte*) PROCPORT#7
(byte*) PROCPORT#8
(byte*) PROCPORT#9
(byte*) RASTER
(byte*) RASTER#0
(byte*) RASTER#1
(byte*) RASTER#2
(byte*) RASTER#3
(byte*) RASTER#4
(byte*) RASTER#5
(byte*) RASTER#6
(byte*) RASTER#7
(byte*) RASTER#8
(byte*) SCREEN
(byte*) SCREEN#0
(byte*) SCREEN#1
(byte*) SCREEN#2
(byte*) SCREEN#3
(byte*) SCREEN#4
(byte*) SCREEN#5
(byte*) SCREEN#6
(byte*) SCREEN#7
(byte*) SPRITES_COLS
(byte*) SPRITES_COLS#0
(byte*) SPRITES_COLS#1
(byte*) SPRITES_COLS#2
(byte*) SPRITES_COLS#3
(byte*) SPRITES_COLS#4
(byte*) SPRITES_COLS#5
(byte*) SPRITES_COLS#6
(byte*) SPRITES_COLS#7
(byte*) SPRITES_COLS#8
(byte*) SPRITES_ENABLE
(byte*) SPRITES_ENABLE#0
(byte*) SPRITES_ENABLE#1
(byte*) SPRITES_ENABLE#2
(byte*) SPRITES_ENABLE#3
(byte*) SPRITES_ENABLE#4
(byte*) SPRITES_ENABLE#5
(byte*) SPRITES_ENABLE#6
(byte*) SPRITES_ENABLE#7
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_X#0
(byte*) SPRITES_EXPAND_X#1
(byte*) SPRITES_EXPAND_X#2
(byte*) SPRITES_EXPAND_X#3
(byte*) SPRITES_EXPAND_X#4
(byte*) SPRITES_EXPAND_X#5
(byte*) SPRITES_EXPAND_X#6
(byte*) SPRITES_EXPAND_X#7
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_EXPAND_Y#0
(byte*) SPRITES_EXPAND_Y#1
(byte*) SPRITES_EXPAND_Y#2
(byte*) SPRITES_EXPAND_Y#3
(byte*) SPRITES_EXPAND_Y#4
(byte*) SPRITES_EXPAND_Y#5
(byte*) SPRITES_EXPAND_Y#6
(byte*) SPRITES_EXPAND_Y#7
(byte*) SPRITES_XPOS
(byte*) SPRITES_XPOS#0
(byte*) SPRITES_XPOS#1
(byte*) SPRITES_XPOS#10
(byte*) SPRITES_XPOS#11
(byte*) SPRITES_XPOS#12
(byte*) SPRITES_XPOS#13
(byte*) SPRITES_XPOS#14
(byte*) SPRITES_XPOS#15
(byte*) SPRITES_XPOS#16
(byte*) SPRITES_XPOS#17
(byte*) SPRITES_XPOS#18
(byte*) SPRITES_XPOS#19
(byte*) SPRITES_XPOS#2
(byte*) SPRITES_XPOS#3
(byte*) SPRITES_XPOS#4
(byte*) SPRITES_XPOS#5
(byte*) SPRITES_XPOS#6
(byte*) SPRITES_XPOS#7
(byte*) SPRITES_XPOS#8
(byte*) SPRITES_XPOS#9
(byte*) SPRITES_YPOS
(byte*) SPRITES_YPOS#0
(byte*) SPRITES_YPOS#1
(byte*) SPRITES_YPOS#10
(byte*) SPRITES_YPOS#11
(byte*) SPRITES_YPOS#12
(byte*) SPRITES_YPOS#13
(byte*) SPRITES_YPOS#14
(byte*) SPRITES_YPOS#15
(byte*) SPRITES_YPOS#16
(byte*) SPRITES_YPOS#17
(byte*) SPRITES_YPOS#18
(byte*) SPRITES_YPOS#19
(byte*) SPRITES_YPOS#2
(byte*) SPRITES_YPOS#3
(byte*) SPRITES_YPOS#4
(byte*) SPRITES_YPOS#5
(byte*) SPRITES_YPOS#6
(byte*) SPRITES_YPOS#7
(byte*) SPRITES_YPOS#8
(byte*) SPRITES_YPOS#9
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(label) addMEMtoFAC::@1
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(byte*) addMEMtoFAC::mem#0
(byte*) addMEMtoFAC::mem#1
(byte*) addMEMtoFAC::mem#2
(void()) anim()
(byte~) anim::$0
(byte~) anim::$1
(boolean~) anim::$10
(boolean~) anim::$11
(boolean~) anim::$12
(boolean~) anim::$13
(boolean~) anim::$14
(byte~) anim::$2
(boolean~) anim::$3
(boolean~) anim::$4
(byte~) anim::$5
(byte~) anim::$6
(boolean~) anim::$7
(boolean~) anim::$8
(byte~) anim::$9
(label) anim::@1
(label) anim::@10
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@9
(label) anim::@return
(byte) anim::j
(byte) anim::j#0
(byte) anim::j#1
(byte) anim::j#2
(byte) anim::j#3
(byte) anim::j#4
(byte) anim::j#5
(byte) anim::j#6
(byte) anim::j2
(byte) anim::j2#0
(byte) anim::j2#1
(byte) anim::j2#2
(byte) anim::j2#3
(byte) anim::j2#4
(byte) anim::j2#5
(byte) anim::j2#6
(byte) anim::j2#7
(byte) anim::xidx
(byte) anim::xidx#0
(byte) anim::xidx#1
(byte) anim::xidx#2
(byte) anim::xidx#3
(byte) anim::xidx#4
(byte) anim::xidx#5
(byte) anim::xidx#6
(byte) anim::xidx#7
(byte) anim::yidx
(byte) anim::yidx#0
(byte) anim::yidx#1
(byte) anim::yidx#2
(byte) anim::yidx#3
(byte) anim::yidx#4
(byte) anim::yidx#5
(byte) anim::yidx#6
(byte) anim::yidx#7
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(label) divMEMbyFAC::@1
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#0
(byte*) divMEMbyFAC::mem#1
(byte*) divMEMbyFAC::mem#2
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0
(word~) gen_chargen_sprite::$1
(boolean~) gen_chargen_sprite::$10
(boolean~) gen_chargen_sprite::$11
(byte~) gen_chargen_sprite::$12
(boolean~) gen_chargen_sprite::$13
(byte*~) gen_chargen_sprite::$14
(boolean~) gen_chargen_sprite::$15
(byte*~) gen_chargen_sprite::$2
(byte~) gen_chargen_sprite::$3
(byte~) gen_chargen_sprite::$4
(boolean~) gen_chargen_sprite::$5
(boolean~) gen_chargen_sprite::$6
(byte~) gen_chargen_sprite::$7
(byte~) gen_chargen_sprite::$8
(boolean~) gen_chargen_sprite::$9
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@10
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@6
(label) gen_chargen_sprite::@7
(label) gen_chargen_sprite::@8
(label) gen_chargen_sprite::@9
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#0
(byte) gen_chargen_sprite::b#1
(byte) gen_chargen_sprite::b#2
(byte) gen_chargen_sprite::b#3
(byte) gen_chargen_sprite::b#4
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0
(byte) gen_chargen_sprite::bits#1
(byte) gen_chargen_sprite::bits#2
(byte) gen_chargen_sprite::bits#3
(byte) gen_chargen_sprite::bits#4
(byte) gen_chargen_sprite::bits#5
(byte) gen_chargen_sprite::bits#6
(byte) gen_chargen_sprite::bits#7
(byte) gen_chargen_sprite::bits#8
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#0
(byte) gen_chargen_sprite::c#1
(byte) gen_chargen_sprite::c#2
(byte) gen_chargen_sprite::c#3
(byte) gen_chargen_sprite::c#4
(byte) gen_chargen_sprite::c#5
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0
(byte) gen_chargen_sprite::ch#1
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0
(byte*) gen_chargen_sprite::chargen#1
(byte*) gen_chargen_sprite::chargen#2
(byte*) gen_chargen_sprite::chargen#3
(byte*) gen_chargen_sprite::chargen#4
(byte*) gen_chargen_sprite::chargen#5
(byte*) gen_chargen_sprite::chargen#6
(byte*) gen_chargen_sprite::chargen#7
(byte*) gen_chargen_sprite::chargen#8
(byte*) gen_chargen_sprite::chargen#9
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#0
(byte) gen_chargen_sprite::s_gen#1
(byte) gen_chargen_sprite::s_gen#2
(byte) gen_chargen_sprite::s_gen#3
(byte) gen_chargen_sprite::s_gen#4
(byte) gen_chargen_sprite::s_gen#5
(byte) gen_chargen_sprite::s_gen#6
(byte) gen_chargen_sprite::s_gen#7
(byte) gen_chargen_sprite::s_gen#8
(byte) gen_chargen_sprite::s_gen#9
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#0
(byte) gen_chargen_sprite::s_gen_cnt#1
(byte) gen_chargen_sprite::s_gen_cnt#2
(byte) gen_chargen_sprite::s_gen_cnt#3
(byte) gen_chargen_sprite::s_gen_cnt#4
(byte) gen_chargen_sprite::s_gen_cnt#5
(byte) gen_chargen_sprite::s_gen_cnt#6
(byte) gen_chargen_sprite::s_gen_cnt#7
(byte) gen_chargen_sprite::s_gen_cnt#8
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0
(byte*) gen_chargen_sprite::sprite#1
(byte*) gen_chargen_sprite::sprite#10
(byte*) gen_chargen_sprite::sprite#11
(byte*) gen_chargen_sprite::sprite#12
(byte*) gen_chargen_sprite::sprite#2
(byte*) gen_chargen_sprite::sprite#3
(byte*) gen_chargen_sprite::sprite#4
(byte*) gen_chargen_sprite::sprite#5
(byte*) gen_chargen_sprite::sprite#6
(byte*) gen_chargen_sprite::sprite#7
(byte*) gen_chargen_sprite::sprite#8
(byte*) gen_chargen_sprite::sprite#9
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#0
(byte) gen_chargen_sprite::x#1
(byte) gen_chargen_sprite::x#2
(byte) gen_chargen_sprite::x#3
(byte) gen_chargen_sprite::x#4
(byte) gen_chargen_sprite::x#5
(byte) gen_chargen_sprite::x#6
(byte) gen_chargen_sprite::x#7
(byte) gen_chargen_sprite::x#8
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#0
(byte) gen_chargen_sprite::y#1
(byte) gen_chargen_sprite::y#10
(byte) gen_chargen_sprite::y#2
(byte) gen_chargen_sprite::y#3
(byte) gen_chargen_sprite::y#4
(byte) gen_chargen_sprite::y#5
(byte) gen_chargen_sprite::y#6
(byte) gen_chargen_sprite::y#7
(byte) gen_chargen_sprite::y#8
(byte) gen_chargen_sprite::y#9
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0
(word~) gen_sintab::$13
(word~) gen_sintab::$17
(word~) gen_sintab::$23
(byte~) gen_sintab::$24
(boolean~) gen_sintab::$25
(word~) gen_sintab::$3
(label) gen_sintab::@1
(label) gen_sintab::@10
(label) gen_sintab::@11
(label) gen_sintab::@12
(label) gen_sintab::@13
(label) gen_sintab::@14
(label) gen_sintab::@15
(label) gen_sintab::@16
(label) gen_sintab::@17
(label) gen_sintab::@18
(label) gen_sintab::@19
(label) gen_sintab::@20
(label) gen_sintab::@21
(label) gen_sintab::@22
(label) gen_sintab::@3
(label) gen_sintab::@4
(label) gen_sintab::@5
(label) gen_sintab::@6
(label) gen_sintab::@7
(label) gen_sintab::@8
(label) gen_sintab::@9
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(byte*) gen_sintab::f_2pi#0
(byte*) gen_sintab::f_2pi#1
(byte*) gen_sintab::f_2pi#10
(byte*) gen_sintab::f_2pi#11
(byte*) gen_sintab::f_2pi#12
(byte*) gen_sintab::f_2pi#13
(byte*) gen_sintab::f_2pi#14
(byte*) gen_sintab::f_2pi#15
(byte*) gen_sintab::f_2pi#16
(byte*) gen_sintab::f_2pi#17
(byte*) gen_sintab::f_2pi#18
(byte*) gen_sintab::f_2pi#19
(byte*) gen_sintab::f_2pi#2
(byte*) gen_sintab::f_2pi#20
(byte*) gen_sintab::f_2pi#21
(byte*) gen_sintab::f_2pi#3
(byte*) gen_sintab::f_2pi#4
(byte*) gen_sintab::f_2pi#5
(byte*) gen_sintab::f_2pi#6
(byte*) gen_sintab::f_2pi#7
(byte*) gen_sintab::f_2pi#8
(byte*) gen_sintab::f_2pi#9
(byte[]) gen_sintab::f_amp
(byte[]) gen_sintab::f_amp#0
(byte[]) gen_sintab::f_amp#1
(byte[]) gen_sintab::f_amp#10
(byte[]) gen_sintab::f_amp#11
(byte[]) gen_sintab::f_amp#12
(byte[]) gen_sintab::f_amp#13
(byte[]) gen_sintab::f_amp#14
(byte[]) gen_sintab::f_amp#15
(byte[]) gen_sintab::f_amp#16
(byte[]) gen_sintab::f_amp#17
(byte[]) gen_sintab::f_amp#18
(byte[]) gen_sintab::f_amp#19
(byte[]) gen_sintab::f_amp#2
(byte[]) gen_sintab::f_amp#20
(byte[]) gen_sintab::f_amp#21
(byte[]) gen_sintab::f_amp#3
(byte[]) gen_sintab::f_amp#4
(byte[]) gen_sintab::f_amp#5
(byte[]) gen_sintab::f_amp#6
(byte[]) gen_sintab::f_amp#7
(byte[]) gen_sintab::f_amp#8
(byte[]) gen_sintab::f_amp#9
(byte[]) gen_sintab::f_i
(byte[]) gen_sintab::f_i#0
(byte[]) gen_sintab::f_i#1
(byte[]) gen_sintab::f_i#10
(byte[]) gen_sintab::f_i#11
(byte[]) gen_sintab::f_i#12
(byte[]) gen_sintab::f_i#13
(byte[]) gen_sintab::f_i#14
(byte[]) gen_sintab::f_i#15
(byte[]) gen_sintab::f_i#16
(byte[]) gen_sintab::f_i#17
(byte[]) gen_sintab::f_i#18
(byte[]) gen_sintab::f_i#19
(byte[]) gen_sintab::f_i#2
(byte[]) gen_sintab::f_i#20
(byte[]) gen_sintab::f_i#21
(byte[]) gen_sintab::f_i#3
(byte[]) gen_sintab::f_i#4
(byte[]) gen_sintab::f_i#5
(byte[]) gen_sintab::f_i#6
(byte[]) gen_sintab::f_i#7
(byte[]) gen_sintab::f_i#8
(byte[]) gen_sintab::f_i#9
(byte[]) gen_sintab::f_min
(byte[]) gen_sintab::f_min#0
(byte[]) gen_sintab::f_min#1
(byte[]) gen_sintab::f_min#10
(byte[]) gen_sintab::f_min#11
(byte[]) gen_sintab::f_min#12
(byte[]) gen_sintab::f_min#13
(byte[]) gen_sintab::f_min#14
(byte[]) gen_sintab::f_min#15
(byte[]) gen_sintab::f_min#16
(byte[]) gen_sintab::f_min#17
(byte[]) gen_sintab::f_min#18
(byte[]) gen_sintab::f_min#19
(byte[]) gen_sintab::f_min#2
(byte[]) gen_sintab::f_min#20
(byte[]) gen_sintab::f_min#21
(byte[]) gen_sintab::f_min#3
(byte[]) gen_sintab::f_min#4
(byte[]) gen_sintab::f_min#5
(byte[]) gen_sintab::f_min#6
(byte[]) gen_sintab::f_min#7
(byte[]) gen_sintab::f_min#8
(byte[]) gen_sintab::f_min#9
(byte) gen_sintab::i
(byte) gen_sintab::i#0
(byte) gen_sintab::i#1
(byte) gen_sintab::i#10
(byte) gen_sintab::i#11
(byte) gen_sintab::i#2
(byte) gen_sintab::i#3
(byte) gen_sintab::i#4
(byte) gen_sintab::i#5
(byte) gen_sintab::i#6
(byte) gen_sintab::i#7
(byte) gen_sintab::i#8
(byte) gen_sintab::i#9
(byte) gen_sintab::length
(byte) gen_sintab::length#0
(byte) gen_sintab::length#1
(byte) gen_sintab::length#10
(byte) gen_sintab::length#11
(byte) gen_sintab::length#12
(byte) gen_sintab::length#13
(byte) gen_sintab::length#14
(byte) gen_sintab::length#15
(byte) gen_sintab::length#16
(byte) gen_sintab::length#17
(byte) gen_sintab::length#18
(byte) gen_sintab::length#19
(byte) gen_sintab::length#2
(byte) gen_sintab::length#20
(byte) gen_sintab::length#21
(byte) gen_sintab::length#22
(byte) gen_sintab::length#23
(byte) gen_sintab::length#3
(byte) gen_sintab::length#4
(byte) gen_sintab::length#5
(byte) gen_sintab::length#6
(byte) gen_sintab::length#7
(byte) gen_sintab::length#8
(byte) gen_sintab::length#9
(byte) gen_sintab::max
(byte) gen_sintab::max#0
(byte) gen_sintab::max#1
(byte) gen_sintab::max#2
(byte) gen_sintab::min
(byte) gen_sintab::min#0
(byte) gen_sintab::min#1
(byte) gen_sintab::min#2
(byte) gen_sintab::min#3
(byte) gen_sintab::min#4
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#0
(byte*) gen_sintab::sintab#1
(byte*) gen_sintab::sintab#10
(byte*) gen_sintab::sintab#11
(byte*) gen_sintab::sintab#12
(byte*) gen_sintab::sintab#13
(byte*) gen_sintab::sintab#14
(byte*) gen_sintab::sintab#15
(byte*) gen_sintab::sintab#16
(byte*) gen_sintab::sintab#17
(byte*) gen_sintab::sintab#18
(byte*) gen_sintab::sintab#19
(byte*) gen_sintab::sintab#2
(byte*) gen_sintab::sintab#20
(byte*) gen_sintab::sintab#21
(byte*) gen_sintab::sintab#22
(byte*) gen_sintab::sintab#23
(byte*) gen_sintab::sintab#3
(byte*) gen_sintab::sintab#4
(byte*) gen_sintab::sintab#5
(byte*) gen_sintab::sintab#6
(byte*) gen_sintab::sintab#7
(byte*) gen_sintab::sintab#8
(byte*) gen_sintab::sintab#9
(void()) gen_sprites()
(byte~) gen_sprites::$0
(byte*~) gen_sprites::$2
(boolean~) gen_sprites::$3
(label) gen_sprites::@1
(label) gen_sprites::@3
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(byte[]) gen_sprites::cml#0
(byte[]) gen_sprites::cml#1
(byte[]) gen_sprites::cml#2
(byte) gen_sprites::i
(byte) gen_sprites::i#0
(byte) gen_sprites::i#1
(byte) gen_sprites::i#2
(byte) gen_sprites::i#3
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#0
(byte*) gen_sprites::spr#1
(byte*) gen_sprites::spr#2
(byte*) gen_sprites::spr#3
(word()) getFAC()
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::return#0
(word) getFAC::return#1
(word) getFAC::return#2
(word) getFAC::return#3
(word) getFAC::return#4
(word) getFAC::w
(word) getFAC::w#0
(word) getFAC::w#1
(word) getFAC::w#2
(void()) init()
(byte*~) init::$0
(boolean~) init::$1
(label) init::@1
(label) init::@2
(label) init::@3
(label) init::@4
(label) init::@5
(label) init::@6
(label) init::@return
(byte*) init::sc
(byte*) init::sc#0
(byte*) init::sc#1
(byte*) init::sc#2
(void()) main()
(boolean~) main::$1
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@5
(label) main::@6
(label) main::@return
(byte*) memHi
(byte*) memHi#0
(byte*) memLo
(byte*) memLo#0
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(label) mulFACbyMEM::@1
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#0
(byte*) mulFACbyMEM::mem#1
(byte*) mulFACbyMEM::mem#2
(void()) place_sprites()
(byte*~) place_sprites::$0
(byte[]~) place_sprites::$1
(byte~) place_sprites::$2
(byte~) place_sprites::$3
(byte~) place_sprites::$4
(byte~) place_sprites::$5
(boolean~) place_sprites::$6
(label) place_sprites::@1
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::col#0
(byte) place_sprites::col#1
(byte) place_sprites::col#2
(byte) place_sprites::j
(byte) place_sprites::j#0
(byte) place_sprites::j#1
(byte) place_sprites::j#2
(byte) place_sprites::j2
(byte) place_sprites::j2#0
(byte) place_sprites::j2#1
(byte) place_sprites::j2#2
(byte) place_sprites::j2#3
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#0
(byte) place_sprites::spr_id#1
(byte) place_sprites::spr_id#2
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#0
(byte) place_sprites::spr_x#1
(byte) place_sprites::spr_x#2
(byte*) place_sprites::sprites_ptr
(byte*) place_sprites::sprites_ptr#0
(byte*) place_sprites::sprites_ptr#1
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0
(byte~) prepareMEM::$1
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#0
(byte*) prepareMEM::mem#1
(byte*) prepareMEM::mem#2
(byte*) prepareMEM::mem#3
(byte*) prepareMEM::mem#4
(byte*) prepareMEM::mem#5
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0
(label) setFAC::@1
(label) setFAC::@return
(word) setFAC::w
(word) setFAC::w#0
(word) setFAC::w#1
(word) setFAC::w#2
(word) setFAC::w#3
(word) setFAC::w#4
(word) setFAC::w#5
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(label) setMEMtoFAC::@1
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#0
(byte*) setMEMtoFAC::mem#1
(byte*) setMEMtoFAC::mem#2
(byte*) setMEMtoFAC::mem#3
(byte*) setMEMtoFAC::mem#4
(byte*) setMEMtoFAC::mem#5
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_x#0
(byte) sin_idx_x#1
(byte) sin_idx_x#10
(byte) sin_idx_x#11
(byte) sin_idx_x#12
(byte) sin_idx_x#13
(byte) sin_idx_x#14
(byte) sin_idx_x#15
(byte) sin_idx_x#16
(byte) sin_idx_x#17
(byte) sin_idx_x#18
(byte) sin_idx_x#19
(byte) sin_idx_x#2
(byte) sin_idx_x#20
(byte) sin_idx_x#21
(byte) sin_idx_x#22
(byte) sin_idx_x#23
(byte) sin_idx_x#24
(byte) sin_idx_x#25
(byte) sin_idx_x#26
(byte) sin_idx_x#3
(byte) sin_idx_x#4
(byte) sin_idx_x#5
(byte) sin_idx_x#6
(byte) sin_idx_x#7
(byte) sin_idx_x#8
(byte) sin_idx_x#9
(byte) sin_idx_y
(byte) sin_idx_y#0
(byte) sin_idx_y#1
(byte) sin_idx_y#10
(byte) sin_idx_y#11
(byte) sin_idx_y#12
(byte) sin_idx_y#13
(byte) sin_idx_y#14
(byte) sin_idx_y#15
(byte) sin_idx_y#16
(byte) sin_idx_y#17
(byte) sin_idx_y#18
(byte) sin_idx_y#19
(byte) sin_idx_y#2
(byte) sin_idx_y#20
(byte) sin_idx_y#21
(byte) sin_idx_y#22
(byte) sin_idx_y#23
(byte) sin_idx_y#24
(byte) sin_idx_y#25
(byte) sin_idx_y#26
(byte) sin_idx_y#3
(byte) sin_idx_y#4
(byte) sin_idx_y#5
(byte) sin_idx_y#6
(byte) sin_idx_y#7
(byte) sin_idx_y#8
(byte) sin_idx_y#9
(byte) sinlen_x
(byte) sinlen_x#0
(byte) sinlen_y
(byte) sinlen_y#0
(byte[]) sintab_x
(byte[]) sintab_x#0
(byte[]) sintab_y
(byte[]) sintab_y#0
(byte[]) sprites
(byte[]) sprites#0
(void()) subFACfromARG()
(label) subFACfromARG::@return

Culled Empty Block (label) init::@6
Succesful SSA optimization Pass2CullEmptyBlocks
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::w#2 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  (word) getFAC::return#0 ← (word) getFAC::w#2
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return#3 ← phi( getFAC/(word) getFAC::return#0 )
  (word) getFAC::return#1 ← (word) getFAC::return#3
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#20 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#10 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#7 )
  (byte*) SPRITES_YPOS#16 ← phi( @39/(byte*) SPRITES_YPOS#18 )
  (byte*) SPRITES_XPOS#16 ← phi( @39/(byte*) SPRITES_XPOS#18 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#6 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#6 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#6 )
  (byte*) BORDERCOL#16 ← phi( @39/(byte*) BORDERCOL#21 )
  (byte) sin_idx_y#24 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#26 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#4 ← phi( @39/(byte*) RASTER#6 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#6 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  (byte*) SPRITES_YPOS#14 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#14 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) BORDERCOL#13 ← phi( main/(byte*) BORDERCOL#16 )
  (byte) sin_idx_y#21 ← phi( main/(byte) sin_idx_y#24 )
  (byte) sin_idx_x#23 ← phi( main/(byte) sin_idx_x#26 )
  (byte*) RASTER#3 ← phi( main/(byte*) RASTER#4 )
  to:main::@2
main::@1: scope:[main]  from main::@6
  (byte*) SPRITES_YPOS#13 ← phi( main::@6/(byte*) SPRITES_YPOS#17 )
  (byte*) SPRITES_XPOS#13 ← phi( main::@6/(byte*) SPRITES_XPOS#17 )
  (byte*) BORDERCOL#12 ← phi( main::@6/(byte*) BORDERCOL#17 )
  (byte) sin_idx_y#20 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#22 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte*) RASTER#2 ← phi( main::@6/(byte*) RASTER#5 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@1/(byte*) SPRITES_YPOS#13 main::@2/(byte*) SPRITES_YPOS#10 main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@1/(byte*) SPRITES_XPOS#13 main::@2/(byte*) SPRITES_XPOS#10 main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#8 ← phi( main::@1/(byte*) BORDERCOL#12 main::@2/(byte*) BORDERCOL#8 main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#18 ← phi( main::@1/(byte) sin_idx_y#20 main::@2/(byte) sin_idx_y#18 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#17 ← phi( main::@1/(byte) sin_idx_x#22 main::@2/(byte) sin_idx_x#17 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@1/(byte*) RASTER#2 main::@2/(byte*) RASTER#1 main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (byte*) RASTER#7 ← phi( main::@2/(byte*) RASTER#1 )
  (byte*) SPRITES_YPOS#6 ← phi( main::@2/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#6 ← phi( main::@2/(byte*) SPRITES_XPOS#10 )
  (byte*) BORDERCOL#4 ← phi( main::@2/(byte*) BORDERCOL#8 )
  (byte) sin_idx_y#13 ← phi( main::@2/(byte) sin_idx_y#18 )
  (byte) sin_idx_x#13 ← phi( main::@2/(byte) sin_idx_x#17 )
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte*) SPRITES_YPOS#17 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#17 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte*) BORDERCOL#17 ← phi( main::@3/(byte*) BORDERCOL#4 )
  (byte*) RASTER#5 ← phi( main::@3/(byte*) RASTER#7 )
  (byte) sin_idx_y#7 ← phi( main::@3/(byte) sin_idx_y#5 )
  (byte) sin_idx_x#7 ← phi( main::@3/(byte) sin_idx_x#5 )
  (byte) sin_idx_x#0 ← (byte) sin_idx_x#7
  (byte) sin_idx_y#0 ← (byte) sin_idx_y#7
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte) sin_idx_y#8 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#8 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte) sin_idx_x#1 ← (byte) sin_idx_x#8
  (byte) sin_idx_y#1 ← (byte) sin_idx_y#8
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#16 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#46 ← phi( init/(byte*) BORDERCOL#47 init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#13 ← phi( init/(byte*) PROCPORT#15 init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#7 ← phi( init/(byte*) CHARGEN#8 init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#4 ← phi( init/(byte*) SPRITES_COLS#5 init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SPRITES_EXPAND_Y#3 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#3 ← phi( init/(byte*) SPRITES_EXPAND_X#4 init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#3 ← phi( init/(byte*) SPRITES_ENABLE#4 init::@1/(byte*) SPRITES_ENABLE#3 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 init::@1/(byte*) SCREEN#2 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (byte*) BORDERCOL#45 ← phi( init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#10 ← phi( init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#6 ← phi( init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#3 ← phi( init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#9 ← phi( init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#9 ← phi( init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#5 ← phi( init::@1/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#2 ← phi( init::@1/(byte*) SPRITES_ENABLE#3 )
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  (byte*) BORDERCOL#44 ← phi( init::@2/(byte*) BORDERCOL#45 )
  (byte*) PROCPORT#8 ← phi( init::@2/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#5 ← phi( init::@2/(byte*) CHARGEN#6 )
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) BORDERCOL#42 ← phi( init::@3/(byte*) BORDERCOL#44 )
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) BORDERCOL#43 ← phi( init::@4/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte*) PROCPORT#21 ← phi( @32/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#11 ← phi( @32/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#8 ← phi( @32/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#19 ← phi( @32/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#19 ← phi( @32/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#7 ← phi( @32/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#7 ← phi( @32/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#7 ← phi( @32/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#26 ← phi( @32/(byte*) BORDERCOL#0 )
  (byte*) RASTER#8 ← phi( @32/(byte*) RASTER#0 )
  (byte*) SCREEN#7 ← phi( @32/(byte*) SCREEN#0 )
  (byte) sin_idx_x#2 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#2 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#4 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#22 ← phi( anim/(byte*) BORDERCOL#1 anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#25 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#24 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#14 )
  (byte) anim::j#5 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 anim::@3/(byte*) SPRITES_YPOS#4 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 anim::@3/(byte*) SPRITES_XPOS#4 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx#1 ← (byte~) anim::$2
  (boolean~) anim::$3 ← (byte) anim::xidx#1 >= (byte) sinlen_x#0
  (boolean~) anim::$4 ← ! (boolean~) anim::$3
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte*) BORDERCOL#18 ← phi( anim::@1/(byte*) BORDERCOL#22 anim::@6/(byte*) BORDERCOL#23 )
  (byte) sin_idx_y#22 ← phi( anim::@1/(byte) sin_idx_y#25 anim::@6/(byte) sin_idx_y#26 )
  (byte) sin_idx_x#18 ← phi( anim::@1/(byte) sin_idx_x#24 anim::@6/(byte) sin_idx_x#25 )
  (byte*) SPRITES_YPOS#7 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 anim::@6/(byte*) SPRITES_YPOS#12 )
  (byte*) SPRITES_XPOS#7 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 anim::@6/(byte*) SPRITES_XPOS#12 )
  (byte) anim::xidx#6 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::j#3 ← phi( anim::@1/(byte) anim::j#5 anim::@6/(byte) anim::j#6 )
  (byte) anim::j2#5 ← phi( anim::@1/(byte) anim::j2#3 anim::@6/(byte) anim::j2#7 )
  (byte) anim::yidx#4 ← phi( anim::@1/(byte) anim::yidx#3 anim::@6/(byte) anim::yidx#7 )
  (byte~) anim::$6 ← (byte) anim::yidx#4 + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx#1 ← (byte~) anim::$6
  (boolean~) anim::$7 ← (byte) anim::yidx#1 >= (byte) sinlen_y#0
  (boolean~) anim::$8 ← ! (boolean~) anim::$7
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte*) BORDERCOL#23 ← phi( anim::@1/(byte*) BORDERCOL#22 )
  (byte) sin_idx_y#26 ← phi( anim::@1/(byte) sin_idx_y#25 )
  (byte) sin_idx_x#25 ← phi( anim::@1/(byte) sin_idx_x#24 )
  (byte*) SPRITES_YPOS#12 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 )
  (byte*) SPRITES_XPOS#12 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 )
  (byte) anim::j#6 ← phi( anim::@1/(byte) anim::j#5 )
  (byte) anim::j2#7 ← phi( anim::@1/(byte) anim::j2#3 )
  (byte) anim::yidx#7 ← phi( anim::@1/(byte) anim::yidx#3 )
  (byte) anim::xidx#4 ← phi( anim::@1/(byte) anim::xidx#1 )
  (byte~) anim::$5 ← (byte) anim::xidx#4 - (byte) sinlen_x#0
  (byte) anim::xidx#2 ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte*) BORDERCOL#14 ← phi( anim::@2/(byte*) BORDERCOL#18 anim::@7/(byte*) BORDERCOL#19 )
  (byte) sin_idx_y#19 ← phi( anim::@2/(byte) sin_idx_y#22 anim::@7/(byte) sin_idx_y#23 )
  (byte) sin_idx_x#14 ← phi( anim::@2/(byte) sin_idx_x#18 anim::@7/(byte) sin_idx_x#19 )
  (byte*) SPRITES_YPOS#4 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 anim::@7/(byte*) SPRITES_YPOS#8 )
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte*) SPRITES_XPOS#4 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 anim::@7/(byte*) SPRITES_XPOS#8 )
  (byte) anim::xidx#5 ← phi( anim::@2/(byte) anim::xidx#6 anim::@7/(byte) anim::xidx#7 )
  (byte) anim::j#2 ← phi( anim::@2/(byte) anim::j#3 anim::@7/(byte) anim::j#4 )
  (byte) anim::j2#4 ← phi( anim::@2/(byte) anim::j2#5 anim::@7/(byte) anim::j2#6 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#4
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte*) BORDERCOL#19 ← phi( anim::@2/(byte*) BORDERCOL#18 )
  (byte) sin_idx_y#23 ← phi( anim::@2/(byte) sin_idx_y#22 )
  (byte) sin_idx_x#19 ← phi( anim::@2/(byte) sin_idx_x#18 )
  (byte*) SPRITES_YPOS#8 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 )
  (byte*) SPRITES_XPOS#8 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 )
  (byte) anim::xidx#7 ← phi( anim::@2/(byte) anim::xidx#6 )
  (byte) anim::j#4 ← phi( anim::@2/(byte) anim::j#3 )
  (byte) anim::j2#6 ← phi( anim::@2/(byte) anim::j2#5 )
  (byte) anim::yidx#5 ← phi( anim::@2/(byte) anim::yidx#1 )
  (byte~) anim::$9 ← (byte) anim::yidx#5 - (byte) sinlen_y#0
  (byte) anim::yidx#2 ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte*) BORDERCOL#9 ← phi( anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#14 ← phi( anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#10 ← phi( anim::@3/(byte) sin_idx_x#14 )
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$11 ← (byte) sin_idx_x#3 >= (byte) sinlen_x#0
  (boolean~) anim::$12 ← ! (boolean~) anim::$11
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#21 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte*) BORDERCOL#6 ← phi( anim::@8/(byte*) BORDERCOL#9 anim::@9/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#10 ← phi( anim::@8/(byte) sin_idx_y#14 anim::@9/(byte) sin_idx_y#15 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$13 ← (byte) sin_idx_y#3 >= (byte) sinlen_y#0
  (boolean~) anim::$14 ← ! (boolean~) anim::$13
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte*) BORDERCOL#10 ← phi( anim::@8/(byte*) BORDERCOL#9 )
  (byte) sin_idx_y#15 ← phi( anim::@8/(byte) sin_idx_y#14 )
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#16 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  (byte) sin_idx_x#15 ← phi( anim::@10/(byte) sin_idx_x#20 anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#2 ← phi( anim::@10/(byte*) BORDERCOL#5 anim::@4/(byte*) BORDERCOL#6 )
  *((byte*) BORDERCOL#2) ← -- *((byte*) BORDERCOL#2)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_x#20 ← phi( anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#5 ← phi( anim::@4/(byte*) BORDERCOL#6 )
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  (byte) sin_idx_y#11 ← phi( anim::@5/(byte) sin_idx_y#16 )
  (byte) sin_idx_x#11 ← phi( anim::@5/(byte) sin_idx_x#15 )
  (byte) sin_idx_x#5 ← (byte) sin_idx_x#11
  (byte) sin_idx_y#5 ← (byte) sin_idx_y#11
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#9 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#9 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#5 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr#0 ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id#0 ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 place_sprites::@1/(byte*) SPRITES_COLS#1 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 place_sprites::@1/(byte*) SPRITES_YPOS#2 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 place_sprites::@1/(byte*) SPRITES_XPOS#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x#1 ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::col#1 ← (byte~) place_sprites::$5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#8 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 gen_sprites::@3/(byte*) PROCPORT#6 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 gen_sprites::@3/(byte*) CHARGEN#4 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 gen_sprites::@3/(byte[]) gen_sprites::cml#2 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) PROCPORT#6 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#4 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte[]) gen_sprites::cml#2 ← phi( gen_sprites::@1/(byte[]) gen_sprites::cml#1 )
  (byte) gen_sprites::i#3 ← phi( gen_sprites::@1/(byte) gen_sprites::i#2 )
  (byte*) gen_sprites::spr#3 ← phi( gen_sprites::@1/(byte*) gen_sprites::spr#2 )
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr#3 + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr#1 ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#3
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::bits#0 ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#16 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#8 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#9 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte) gen_chargen_sprite::x#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#9 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#8 )
  (byte) gen_chargen_sprite::s_gen#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#9 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
  (boolean~) gen_chargen_sprite::$6 ← ! (boolean~) gen_chargen_sprite::$5
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 gen_chargen_sprite::@6/(byte*) PROCPORT#17 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::chargen#9 )
  (byte) gen_chargen_sprite::y#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::x#8 )
  (byte) gen_chargen_sprite::bits#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::bits#8 )
  (byte*) gen_chargen_sprite::sprite#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::sprite#10 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen_cnt#7 )
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen#8 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte*) PROCPORT#17 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 )
  (byte*) gen_chargen_sprite::chargen#9 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 )
  (byte) gen_chargen_sprite::x#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 )
  (byte) gen_chargen_sprite::bits#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 )
  (byte) gen_chargen_sprite::s_gen_cnt#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 )
  (byte) gen_chargen_sprite::s_gen#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 )
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#6 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#8 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte) gen_chargen_sprite::x#4 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#5 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#7 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte*) gen_chargen_sprite::sprite#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::b#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#4 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt#1 == (byte/signed byte/word/signed word) 8
  (boolean~) gen_chargen_sprite::$10 ← ! (boolean~) gen_chargen_sprite::$9
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) PROCPORT#9 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 gen_chargen_sprite::@7/(byte*) PROCPORT#12 )
  (byte*) gen_chargen_sprite::chargen#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::chargen#6 )
  (byte) gen_chargen_sprite::y#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::y#7 )
  (byte*) gen_chargen_sprite::sprite#8 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::x#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::x#5 )
  (byte) gen_chargen_sprite::bits#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::bits#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::c#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::c#5 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::b#4 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  (byte*) PROCPORT#12 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#6 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 )
  (byte) gen_chargen_sprite::y#7 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 )
  (byte) gen_chargen_sprite::x#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 )
  (byte) gen_chargen_sprite::bits#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 )
  (byte) gen_chargen_sprite::c#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::b#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 )
  (byte) gen_chargen_sprite::s_gen#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 )
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#4
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::s_gen_cnt#8 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#9 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte*) PROCPORT#7 ← phi( gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#3 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#4 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte*) gen_chargen_sprite::sprite#6 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits#1 ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) PROCPORT#4 ← phi( gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  (byte*) PROCPORT#2 ← phi( gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  *((byte*) PROCPORT#2) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#41 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#43 )
  (byte*) gen_sintab::sintab#23 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#23 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#4 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  (byte*) BORDERCOL#40 ← phi( gen_sintab/(byte*) BORDERCOL#41 )
  (byte*) gen_sintab::sintab#22 ← phi( gen_sintab/(byte*) gen_sintab::sintab#23 )
  (byte) gen_sintab::length#22 ← phi( gen_sintab/(byte) gen_sintab::length#23 )
  (byte[]) gen_sintab::f_i#21 ← phi( gen_sintab/(byte[]) gen_sintab::f_i#0 )
  (byte*) gen_sintab::f_2pi#21 ← phi( gen_sintab/(byte*) gen_sintab::f_2pi#0 )
  (byte[]) gen_sintab::f_amp#12 ← phi( gen_sintab/(byte[]) gen_sintab::f_amp#0 )
  (byte[]) gen_sintab::f_min#8 ← phi( gen_sintab/(byte[]) gen_sintab::f_min#0 )
  (byte) gen_sintab::min#3 ← phi( gen_sintab/(byte) gen_sintab::min#4 )
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  (byte*) BORDERCOL#39 ← phi( gen_sintab::@3/(byte*) BORDERCOL#40 )
  (byte*) gen_sintab::sintab#21 ← phi( gen_sintab::@3/(byte*) gen_sintab::sintab#22 )
  (byte) gen_sintab::length#21 ← phi( gen_sintab::@3/(byte) gen_sintab::length#22 )
  (byte[]) gen_sintab::f_i#20 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_i#21 )
  (byte*) gen_sintab::f_2pi#20 ← phi( gen_sintab::@3/(byte*) gen_sintab::f_2pi#21 )
  (byte[]) gen_sintab::f_amp#10 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_amp#12 )
  (byte[]) gen_sintab::f_min#5 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_min#8 )
  (byte) gen_sintab::min#2 ← phi( gen_sintab::@3/(byte) gen_sintab::min#3 )
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) BORDERCOL#38 ← phi( gen_sintab::@4/(byte*) BORDERCOL#39 )
  (byte*) gen_sintab::sintab#20 ← phi( gen_sintab::@4/(byte*) gen_sintab::sintab#21 )
  (byte) gen_sintab::length#20 ← phi( gen_sintab::@4/(byte) gen_sintab::length#21 )
  (byte[]) gen_sintab::f_i#19 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_i#20 )
  (byte*) gen_sintab::f_2pi#19 ← phi( gen_sintab::@4/(byte*) gen_sintab::f_2pi#20 )
  (byte[]) gen_sintab::f_amp#8 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_amp#10 )
  (byte[]) gen_sintab::f_min#1 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_min#5 )
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  (byte*) BORDERCOL#37 ← phi( gen_sintab::@5/(byte*) BORDERCOL#38 )
  (byte*) gen_sintab::sintab#19 ← phi( gen_sintab::@5/(byte*) gen_sintab::sintab#20 )
  (byte) gen_sintab::length#19 ← phi( gen_sintab::@5/(byte) gen_sintab::length#20 )
  (byte[]) gen_sintab::f_i#18 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_i#19 )
  (byte*) gen_sintab::f_2pi#17 ← phi( gen_sintab::@5/(byte*) gen_sintab::f_2pi#19 )
  (byte[]) gen_sintab::f_min#15 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_min#1 )
  (byte[]) gen_sintab::f_amp#5 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_amp#8 )
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) BORDERCOL#36 ← phi( gen_sintab::@6/(byte*) BORDERCOL#37 )
  (byte*) gen_sintab::sintab#18 ← phi( gen_sintab::@6/(byte*) gen_sintab::sintab#19 )
  (byte) gen_sintab::length#18 ← phi( gen_sintab::@6/(byte) gen_sintab::length#19 )
  (byte[]) gen_sintab::f_i#17 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_i#18 )
  (byte*) gen_sintab::f_2pi#15 ← phi( gen_sintab::@6/(byte*) gen_sintab::f_2pi#17 )
  (byte[]) gen_sintab::f_min#13 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_min#15 )
  (byte[]) gen_sintab::f_amp#1 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_amp#5 )
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (byte*) BORDERCOL#35 ← phi( gen_sintab::@7/(byte*) BORDERCOL#36 )
  (byte*) gen_sintab::sintab#17 ← phi( gen_sintab::@7/(byte*) gen_sintab::sintab#18 )
  (byte) gen_sintab::length#17 ← phi( gen_sintab::@7/(byte) gen_sintab::length#18 )
  (byte[]) gen_sintab::f_i#16 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_i#17 )
  (byte*) gen_sintab::f_2pi#13 ← phi( gen_sintab::@7/(byte*) gen_sintab::f_2pi#15 )
  (byte[]) gen_sintab::f_min#11 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_min#13 )
  (byte[]) gen_sintab::f_amp#6 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_amp#1 )
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) BORDERCOL#34 ← phi( gen_sintab::@8/(byte*) BORDERCOL#35 )
  (byte*) gen_sintab::sintab#16 ← phi( gen_sintab::@8/(byte*) gen_sintab::sintab#17 )
  (byte) gen_sintab::length#16 ← phi( gen_sintab::@8/(byte) gen_sintab::length#17 )
  (byte[]) gen_sintab::f_i#14 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_i#16 )
  (byte*) gen_sintab::f_2pi#11 ← phi( gen_sintab::@8/(byte*) gen_sintab::f_2pi#13 )
  (byte[]) gen_sintab::f_min#9 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_min#11 )
  (byte[]) gen_sintab::f_amp#2 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_amp#6 )
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) BORDERCOL#33 ← phi( gen_sintab::@9/(byte*) BORDERCOL#34 )
  (byte*) gen_sintab::sintab#15 ← phi( gen_sintab::@9/(byte*) gen_sintab::sintab#16 )
  (byte) gen_sintab::length#15 ← phi( gen_sintab::@9/(byte) gen_sintab::length#16 )
  (byte[]) gen_sintab::f_i#12 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_i#14 )
  (byte*) gen_sintab::f_2pi#9 ← phi( gen_sintab::@9/(byte*) gen_sintab::f_2pi#11 )
  (byte[]) gen_sintab::f_min#6 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_min#9 )
  (byte[]) gen_sintab::f_amp#3 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_amp#2 )
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) BORDERCOL#32 ← phi( gen_sintab::@10/(byte*) BORDERCOL#33 )
  (byte*) gen_sintab::sintab#14 ← phi( gen_sintab::@10/(byte*) gen_sintab::sintab#15 )
  (byte[]) gen_sintab::f_amp#20 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_amp#3 )
  (byte) gen_sintab::length#14 ← phi( gen_sintab::@10/(byte) gen_sintab::length#15 )
  (byte[]) gen_sintab::f_i#10 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_i#12 )
  (byte*) gen_sintab::f_2pi#7 ← phi( gen_sintab::@10/(byte*) gen_sintab::f_2pi#9 )
  (byte[]) gen_sintab::f_min#2 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_min#6 )
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#2
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) BORDERCOL#31 ← phi( gen_sintab::@11/(byte*) BORDERCOL#32 )
  (byte*) gen_sintab::sintab#13 ← phi( gen_sintab::@11/(byte*) gen_sintab::sintab#14 )
  (byte[]) gen_sintab::f_amp#18 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_amp#20 )
  (byte) gen_sintab::length#12 ← phi( gen_sintab::@11/(byte) gen_sintab::length#14 )
  (byte[]) gen_sintab::f_i#8 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_i#10 )
  (byte*) gen_sintab::f_2pi#5 ← phi( gen_sintab::@11/(byte*) gen_sintab::f_2pi#7 )
  (byte[]) gen_sintab::f_min#3 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_min#2 )
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte*) BORDERCOL#30 ← phi( gen_sintab::@12/(byte*) BORDERCOL#31 )
  (byte*) gen_sintab::sintab#12 ← phi( gen_sintab::@12/(byte*) gen_sintab::sintab#13 )
  (byte[]) gen_sintab::f_min#19 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_min#3 )
  (byte[]) gen_sintab::f_amp#16 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_amp#18 )
  (byte) gen_sintab::length#10 ← phi( gen_sintab::@12/(byte) gen_sintab::length#12 )
  (byte[]) gen_sintab::f_i#6 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_i#8 )
  (byte*) gen_sintab::f_2pi#3 ← phi( gen_sintab::@12/(byte*) gen_sintab::f_2pi#5 )
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#29 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 gen_sintab::@22/(byte*) BORDERCOL#3 )
  (byte*) gen_sintab::sintab#11 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@22/(byte*) gen_sintab::sintab#2 )
  (byte[]) gen_sintab::f_min#18 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#19 gen_sintab::@22/(byte[]) gen_sintab::f_min#20 )
  (byte[]) gen_sintab::f_amp#15 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#16 gen_sintab::@22/(byte[]) gen_sintab::f_amp#17 )
  (byte) gen_sintab::length#8 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@22/(byte) gen_sintab::length#3 )
  (byte[]) gen_sintab::f_i#5 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#6 gen_sintab::@22/(byte[]) gen_sintab::f_i#7 )
  (byte*) gen_sintab::f_2pi#2 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#3 gen_sintab::@22/(byte*) gen_sintab::f_2pi#4 )
  (byte) gen_sintab::i#2 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#2
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) BORDERCOL#28 ← phi( gen_sintab::@1/(byte*) BORDERCOL#29 )
  (byte) gen_sintab::i#11 ← phi( gen_sintab::@1/(byte) gen_sintab::i#2 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@1/(byte*) gen_sintab::sintab#11 )
  (byte[]) gen_sintab::f_min#17 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_min#18 )
  (byte[]) gen_sintab::f_amp#14 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_amp#15 )
  (byte) gen_sintab::length#6 ← phi( gen_sintab::@1/(byte) gen_sintab::length#8 )
  (byte[]) gen_sintab::f_i#3 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_i#5 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@1/(byte*) gen_sintab::f_2pi#2 )
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) gen_sintab::f_2pi#18 ← phi( gen_sintab::@14/(byte*) gen_sintab::f_2pi#1 )
  (byte*) BORDERCOL#27 ← phi( gen_sintab::@14/(byte*) BORDERCOL#28 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@14/(byte) gen_sintab::i#11 )
  (byte*) gen_sintab::sintab#9 ← phi( gen_sintab::@14/(byte*) gen_sintab::sintab#10 )
  (byte[]) gen_sintab::f_min#16 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_min#17 )
  (byte[]) gen_sintab::f_amp#13 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_amp#14 )
  (byte) gen_sintab::length#4 ← phi( gen_sintab::@14/(byte) gen_sintab::length#6 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_i#3 )
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (byte*) gen_sintab::f_2pi#16 ← phi( gen_sintab::@15/(byte*) gen_sintab::f_2pi#18 )
  (byte*) BORDERCOL#25 ← phi( gen_sintab::@15/(byte*) BORDERCOL#27 )
  (byte) gen_sintab::i#9 ← phi( gen_sintab::@15/(byte) gen_sintab::i#10 )
  (byte*) gen_sintab::sintab#8 ← phi( gen_sintab::@15/(byte*) gen_sintab::sintab#9 )
  (byte[]) gen_sintab::f_min#14 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_min#16 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_amp#13 )
  (byte[]) gen_sintab::f_i#4 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_i#1 )
  (byte) gen_sintab::length#2 ← phi( gen_sintab::@15/(byte) gen_sintab::length#4 )
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#2
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) gen_sintab::f_2pi#14 ← phi( gen_sintab::@16/(byte*) gen_sintab::f_2pi#16 )
  (byte) gen_sintab::length#13 ← phi( gen_sintab::@16/(byte) gen_sintab::length#2 )
  (byte*) BORDERCOL#24 ← phi( gen_sintab::@16/(byte*) BORDERCOL#25 )
  (byte) gen_sintab::i#8 ← phi( gen_sintab::@16/(byte) gen_sintab::i#9 )
  (byte*) gen_sintab::sintab#7 ← phi( gen_sintab::@16/(byte*) gen_sintab::sintab#8 )
  (byte[]) gen_sintab::f_min#12 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_min#14 )
  (byte[]) gen_sintab::f_amp#9 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_amp#11 )
  (byte[]) gen_sintab::f_i#2 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_i#4 )
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  (byte[]) gen_sintab::f_i#15 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_i#2 )
  (byte*) gen_sintab::f_2pi#12 ← phi( gen_sintab::@17/(byte*) gen_sintab::f_2pi#14 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@17/(byte) gen_sintab::length#13 )
  (byte*) BORDERCOL#20 ← phi( gen_sintab::@17/(byte*) BORDERCOL#24 )
  (byte) gen_sintab::i#7 ← phi( gen_sintab::@17/(byte) gen_sintab::i#8 )
  (byte*) gen_sintab::sintab#6 ← phi( gen_sintab::@17/(byte*) gen_sintab::sintab#7 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_min#12 )
  (byte[]) gen_sintab::f_amp#7 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_amp#9 )
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte[]) gen_sintab::f_i#13 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_i#15 )
  (byte*) gen_sintab::f_2pi#10 ← phi( gen_sintab::@18/(byte*) gen_sintab::f_2pi#12 )
  (byte) gen_sintab::length#9 ← phi( gen_sintab::@18/(byte) gen_sintab::length#11 )
  (byte*) BORDERCOL#15 ← phi( gen_sintab::@18/(byte*) BORDERCOL#20 )
  (byte) gen_sintab::i#6 ← phi( gen_sintab::@18/(byte) gen_sintab::i#7 )
  (byte*) gen_sintab::sintab#5 ← phi( gen_sintab::@18/(byte*) gen_sintab::sintab#6 )
  (byte[]) gen_sintab::f_min#7 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_min#10 )
  (byte[]) gen_sintab::f_amp#4 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_amp#7 )
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#4
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte[]) gen_sintab::f_amp#21 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_amp#4 )
  (byte[]) gen_sintab::f_i#11 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_i#13 )
  (byte*) gen_sintab::f_2pi#8 ← phi( gen_sintab::@19/(byte*) gen_sintab::f_2pi#10 )
  (byte) gen_sintab::length#7 ← phi( gen_sintab::@19/(byte) gen_sintab::length#9 )
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@19/(byte*) BORDERCOL#15 )
  (byte) gen_sintab::i#5 ← phi( gen_sintab::@19/(byte) gen_sintab::i#6 )
  (byte*) gen_sintab::sintab#4 ← phi( gen_sintab::@19/(byte*) gen_sintab::sintab#5 )
  (byte[]) gen_sintab::f_min#4 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_min#7 )
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#4
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  (byte[]) gen_sintab::f_min#21 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_min#4 )
  (byte[]) gen_sintab::f_amp#19 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_amp#21 )
  (byte[]) gen_sintab::f_i#9 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_i#11 )
  (byte*) gen_sintab::f_2pi#6 ← phi( gen_sintab::@20/(byte*) gen_sintab::f_2pi#8 )
  (byte) gen_sintab::length#5 ← phi( gen_sintab::@20/(byte) gen_sintab::length#7 )
  (byte*) BORDERCOL#7 ← phi( gen_sintab::@20/(byte*) BORDERCOL#11 )
  (byte) gen_sintab::i#4 ← phi( gen_sintab::@20/(byte) gen_sintab::i#5 )
  (byte*) gen_sintab::sintab#3 ← phi( gen_sintab::@20/(byte*) gen_sintab::sintab#4 )
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#1
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (byte[]) gen_sintab::f_min#20 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_min#21 )
  (byte[]) gen_sintab::f_amp#17 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_amp#19 )
  (byte[]) gen_sintab::f_i#7 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_i#9 )
  (byte*) gen_sintab::f_2pi#4 ← phi( gen_sintab::@21/(byte*) gen_sintab::f_2pi#6 )
  (byte) gen_sintab::length#3 ← phi( gen_sintab::@21/(byte) gen_sintab::length#5 )
  (byte*) BORDERCOL#3 ← phi( gen_sintab::@21/(byte*) BORDERCOL#7 )
  (byte) gen_sintab::i#3 ← phi( gen_sintab::@21/(byte) gen_sintab::i#4 )
  (byte*) gen_sintab::sintab#2 ← phi( gen_sintab::@21/(byte*) gen_sintab::sintab#3 )
  (word) getFAC::return#4 ← phi( gen_sintab::@21/(word) getFAC::return#2 )
  (word~) gen_sintab::$23 ← (word) getFAC::return#4
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#2 + (byte) gen_sintab::i#3) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#3) ← ++ *((byte*) BORDERCOL#3)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#3
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#3
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  (byte*) PROCPORT#20 ← phi( @34/(byte*) PROCPORT#21 )
  (byte*) CHARGEN#10 ← phi( @34/(byte*) CHARGEN#11 )
  (byte*) SPRITES_COLS#7 ← phi( @34/(byte*) SPRITES_COLS#8 )
  (byte*) SPRITES_YPOS#18 ← phi( @34/(byte*) SPRITES_YPOS#19 )
  (byte*) SPRITES_XPOS#18 ← phi( @34/(byte*) SPRITES_XPOS#19 )
  (byte*) SPRITES_EXPAND_Y#6 ← phi( @34/(byte*) SPRITES_EXPAND_Y#7 )
  (byte*) SPRITES_EXPAND_X#6 ← phi( @34/(byte*) SPRITES_EXPAND_X#7 )
  (byte*) SPRITES_ENABLE#6 ← phi( @34/(byte*) SPRITES_ENABLE#7 )
  (byte*) BORDERCOL#21 ← phi( @34/(byte*) BORDERCOL#26 )
  (byte*) RASTER#6 ← phi( @34/(byte*) RASTER#8 )
  (byte*) SCREEN#6 ← phi( @34/(byte*) SCREEN#7 )
  (byte) sin_idx_y#17 ← phi( @34/(byte) sin_idx_y#2 )
  (byte) sin_idx_x#16 ← phi( @34/(byte) sin_idx_x#2 )
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#1 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#1 )
  (byte) sin_idx_x#6 ← (byte) sin_idx_x#12
  (byte) sin_idx_y#6 ← (byte) sin_idx_y#12
  to:@end
@end: scope:[]  from @40

Inversing boolean not (boolean~) anim::$4 ← (byte) anim::xidx#1 < (byte) sinlen_x#0 from (boolean~) anim::$3 ← (byte) anim::xidx#1 >= (byte) sinlen_x#0
Inversing boolean not (boolean~) anim::$8 ← (byte) anim::yidx#1 < (byte) sinlen_y#0 from (boolean~) anim::$7 ← (byte) anim::yidx#1 >= (byte) sinlen_y#0
Inversing boolean not (boolean~) anim::$12 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0 from (boolean~) anim::$11 ← (byte) sin_idx_x#3 >= (byte) sinlen_x#0
Inversing boolean not (boolean~) anim::$14 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0 from (boolean~) anim::$13 ← (byte) sin_idx_y#3 >= (byte) sinlen_y#0
Inversing boolean not (boolean~) gen_chargen_sprite::$6 ← (byte~) gen_chargen_sprite::$4 == (byte/signed byte/word/signed word) 0 from (boolean~) gen_chargen_sprite::$5 ← (byte~) gen_chargen_sprite::$4 != (byte/signed byte/word/signed word) 0
Inversing boolean not (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word) 8 from (boolean~) gen_chargen_sprite::$9 ← (byte) gen_chargen_sprite::s_gen_cnt#1 == (byte/signed byte/word/signed word) 8
Succesful SSA optimization Pass2UnaryNotSimplification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::w#2 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  (word) getFAC::return#0 ← (word) getFAC::w#2
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  (word) getFAC::return#3 ← phi( getFAC/(word) getFAC::return#0 )
  (word) getFAC::return#1 ← (word) getFAC::return#3
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#20 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#10 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#7 )
  (byte*) SPRITES_YPOS#16 ← phi( @39/(byte*) SPRITES_YPOS#18 )
  (byte*) SPRITES_XPOS#16 ← phi( @39/(byte*) SPRITES_XPOS#18 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#6 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#6 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#6 )
  (byte*) BORDERCOL#16 ← phi( @39/(byte*) BORDERCOL#21 )
  (byte) sin_idx_y#24 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#26 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#4 ← phi( @39/(byte*) RASTER#6 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#6 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  (byte*) SPRITES_YPOS#14 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#14 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) BORDERCOL#13 ← phi( main/(byte*) BORDERCOL#16 )
  (byte) sin_idx_y#21 ← phi( main/(byte) sin_idx_y#24 )
  (byte) sin_idx_x#23 ← phi( main/(byte) sin_idx_x#26 )
  (byte*) RASTER#3 ← phi( main/(byte*) RASTER#4 )
  to:main::@2
main::@1: scope:[main]  from main::@6
  (byte*) SPRITES_YPOS#13 ← phi( main::@6/(byte*) SPRITES_YPOS#17 )
  (byte*) SPRITES_XPOS#13 ← phi( main::@6/(byte*) SPRITES_XPOS#17 )
  (byte*) BORDERCOL#12 ← phi( main::@6/(byte*) BORDERCOL#17 )
  (byte) sin_idx_y#20 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#22 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte*) RASTER#2 ← phi( main::@6/(byte*) RASTER#5 )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@1/(byte*) SPRITES_YPOS#13 main::@2/(byte*) SPRITES_YPOS#10 main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@1/(byte*) SPRITES_XPOS#13 main::@2/(byte*) SPRITES_XPOS#10 main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#8 ← phi( main::@1/(byte*) BORDERCOL#12 main::@2/(byte*) BORDERCOL#8 main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#18 ← phi( main::@1/(byte) sin_idx_y#20 main::@2/(byte) sin_idx_y#18 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#17 ← phi( main::@1/(byte) sin_idx_x#22 main::@2/(byte) sin_idx_x#17 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@1/(byte*) RASTER#2 main::@2/(byte*) RASTER#1 main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  (byte*) RASTER#7 ← phi( main::@2/(byte*) RASTER#1 )
  (byte*) SPRITES_YPOS#6 ← phi( main::@2/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#6 ← phi( main::@2/(byte*) SPRITES_XPOS#10 )
  (byte*) BORDERCOL#4 ← phi( main::@2/(byte*) BORDERCOL#8 )
  (byte) sin_idx_y#13 ← phi( main::@2/(byte) sin_idx_y#18 )
  (byte) sin_idx_x#13 ← phi( main::@2/(byte) sin_idx_x#17 )
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte*) SPRITES_YPOS#17 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#17 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte*) BORDERCOL#17 ← phi( main::@3/(byte*) BORDERCOL#4 )
  (byte*) RASTER#5 ← phi( main::@3/(byte*) RASTER#7 )
  (byte) sin_idx_y#7 ← phi( main::@3/(byte) sin_idx_y#5 )
  (byte) sin_idx_x#7 ← phi( main::@3/(byte) sin_idx_x#5 )
  (byte) sin_idx_x#0 ← (byte) sin_idx_x#7
  (byte) sin_idx_y#0 ← (byte) sin_idx_y#7
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  (byte) sin_idx_y#8 ← phi( main::@6/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#8 ← phi( main::@6/(byte) sin_idx_x#0 )
  (byte) sin_idx_x#1 ← (byte) sin_idx_x#8
  (byte) sin_idx_y#1 ← (byte) sin_idx_y#8
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#16 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#16 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#16 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#46 ← phi( init/(byte*) BORDERCOL#47 init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#13 ← phi( init/(byte*) PROCPORT#15 init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#7 ← phi( init/(byte*) CHARGEN#8 init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#4 ← phi( init/(byte*) SPRITES_COLS#5 init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SPRITES_EXPAND_Y#3 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#3 ← phi( init/(byte*) SPRITES_EXPAND_X#4 init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#3 ← phi( init/(byte*) SPRITES_ENABLE#4 init::@1/(byte*) SPRITES_ENABLE#3 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 init::@1/(byte*) SCREEN#2 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  (byte*) BORDERCOL#45 ← phi( init::@1/(byte*) BORDERCOL#46 )
  (byte*) PROCPORT#10 ← phi( init::@1/(byte*) PROCPORT#13 )
  (byte*) CHARGEN#6 ← phi( init::@1/(byte*) CHARGEN#7 )
  (byte*) SPRITES_COLS#3 ← phi( init::@1/(byte*) SPRITES_COLS#4 )
  (byte*) SPRITES_YPOS#9 ← phi( init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#9 ← phi( init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#5 ← phi( init::@1/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_Y#3 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init::@1/(byte*) SPRITES_EXPAND_X#3 )
  (byte*) SPRITES_ENABLE#2 ← phi( init::@1/(byte*) SPRITES_ENABLE#3 )
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  (byte*) BORDERCOL#44 ← phi( init::@2/(byte*) BORDERCOL#45 )
  (byte*) PROCPORT#8 ← phi( init::@2/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#5 ← phi( init::@2/(byte*) CHARGEN#6 )
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) BORDERCOL#42 ← phi( init::@3/(byte*) BORDERCOL#44 )
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) BORDERCOL#43 ← phi( init::@4/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte*) PROCPORT#21 ← phi( @32/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#11 ← phi( @32/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#8 ← phi( @32/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#19 ← phi( @32/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#19 ← phi( @32/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#7 ← phi( @32/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#7 ← phi( @32/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#7 ← phi( @32/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#26 ← phi( @32/(byte*) BORDERCOL#0 )
  (byte*) RASTER#8 ← phi( @32/(byte*) RASTER#0 )
  (byte*) SCREEN#7 ← phi( @32/(byte*) SCREEN#0 )
  (byte) sin_idx_x#2 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#2 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#6 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#6 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#4 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#22 ← phi( anim/(byte*) BORDERCOL#1 anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#25 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#24 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#14 )
  (byte) anim::j#5 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 anim::@3/(byte*) SPRITES_YPOS#4 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 anim::@3/(byte*) SPRITES_XPOS#4 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte~) anim::$2 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (byte) anim::xidx#1 ← (byte~) anim::$2
  (boolean~) anim::$4 ← (byte) anim::xidx#1 < (byte) sinlen_x#0
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte*) BORDERCOL#18 ← phi( anim::@1/(byte*) BORDERCOL#22 anim::@6/(byte*) BORDERCOL#23 )
  (byte) sin_idx_y#22 ← phi( anim::@1/(byte) sin_idx_y#25 anim::@6/(byte) sin_idx_y#26 )
  (byte) sin_idx_x#18 ← phi( anim::@1/(byte) sin_idx_x#24 anim::@6/(byte) sin_idx_x#25 )
  (byte*) SPRITES_YPOS#7 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 anim::@6/(byte*) SPRITES_YPOS#12 )
  (byte*) SPRITES_XPOS#7 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 anim::@6/(byte*) SPRITES_XPOS#12 )
  (byte) anim::xidx#6 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::j#3 ← phi( anim::@1/(byte) anim::j#5 anim::@6/(byte) anim::j#6 )
  (byte) anim::j2#5 ← phi( anim::@1/(byte) anim::j2#3 anim::@6/(byte) anim::j2#7 )
  (byte) anim::yidx#4 ← phi( anim::@1/(byte) anim::yidx#3 anim::@6/(byte) anim::yidx#7 )
  (byte~) anim::$6 ← (byte) anim::yidx#4 + (byte/signed byte/word/signed word) 8
  (byte) anim::yidx#1 ← (byte~) anim::$6
  (boolean~) anim::$8 ← (byte) anim::yidx#1 < (byte) sinlen_y#0
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte*) BORDERCOL#23 ← phi( anim::@1/(byte*) BORDERCOL#22 )
  (byte) sin_idx_y#26 ← phi( anim::@1/(byte) sin_idx_y#25 )
  (byte) sin_idx_x#25 ← phi( anim::@1/(byte) sin_idx_x#24 )
  (byte*) SPRITES_YPOS#12 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 )
  (byte*) SPRITES_XPOS#12 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 )
  (byte) anim::j#6 ← phi( anim::@1/(byte) anim::j#5 )
  (byte) anim::j2#7 ← phi( anim::@1/(byte) anim::j2#3 )
  (byte) anim::yidx#7 ← phi( anim::@1/(byte) anim::yidx#3 )
  (byte) anim::xidx#4 ← phi( anim::@1/(byte) anim::xidx#1 )
  (byte~) anim::$5 ← (byte) anim::xidx#4 - (byte) sinlen_x#0
  (byte) anim::xidx#2 ← (byte~) anim::$5
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte*) BORDERCOL#14 ← phi( anim::@2/(byte*) BORDERCOL#18 anim::@7/(byte*) BORDERCOL#19 )
  (byte) sin_idx_y#19 ← phi( anim::@2/(byte) sin_idx_y#22 anim::@7/(byte) sin_idx_y#23 )
  (byte) sin_idx_x#14 ← phi( anim::@2/(byte) sin_idx_x#18 anim::@7/(byte) sin_idx_x#19 )
  (byte*) SPRITES_YPOS#4 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 anim::@7/(byte*) SPRITES_YPOS#8 )
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte*) SPRITES_XPOS#4 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 anim::@7/(byte*) SPRITES_XPOS#8 )
  (byte) anim::xidx#5 ← phi( anim::@2/(byte) anim::xidx#6 anim::@7/(byte) anim::xidx#7 )
  (byte) anim::j#2 ← phi( anim::@2/(byte) anim::j#3 anim::@7/(byte) anim::j#4 )
  (byte) anim::j2#4 ← phi( anim::@2/(byte) anim::j2#5 anim::@7/(byte) anim::j2#6 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#4
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte*) BORDERCOL#19 ← phi( anim::@2/(byte*) BORDERCOL#18 )
  (byte) sin_idx_y#23 ← phi( anim::@2/(byte) sin_idx_y#22 )
  (byte) sin_idx_x#19 ← phi( anim::@2/(byte) sin_idx_x#18 )
  (byte*) SPRITES_YPOS#8 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 )
  (byte*) SPRITES_XPOS#8 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 )
  (byte) anim::xidx#7 ← phi( anim::@2/(byte) anim::xidx#6 )
  (byte) anim::j#4 ← phi( anim::@2/(byte) anim::j#3 )
  (byte) anim::j2#6 ← phi( anim::@2/(byte) anim::j2#5 )
  (byte) anim::yidx#5 ← phi( anim::@2/(byte) anim::yidx#1 )
  (byte~) anim::$9 ← (byte) anim::yidx#5 - (byte) sinlen_y#0
  (byte) anim::yidx#2 ← (byte~) anim::$9
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte*) BORDERCOL#9 ← phi( anim::@3/(byte*) BORDERCOL#14 )
  (byte) sin_idx_y#14 ← phi( anim::@3/(byte) sin_idx_y#19 )
  (byte) sin_idx_x#10 ← phi( anim::@3/(byte) sin_idx_x#14 )
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$12 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#21 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte*) BORDERCOL#6 ← phi( anim::@8/(byte*) BORDERCOL#9 anim::@9/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#10 ← phi( anim::@8/(byte) sin_idx_y#14 anim::@9/(byte) sin_idx_y#15 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$14 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte*) BORDERCOL#10 ← phi( anim::@8/(byte*) BORDERCOL#9 )
  (byte) sin_idx_y#15 ← phi( anim::@8/(byte) sin_idx_y#14 )
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#16 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  (byte) sin_idx_x#15 ← phi( anim::@10/(byte) sin_idx_x#20 anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#2 ← phi( anim::@10/(byte*) BORDERCOL#5 anim::@4/(byte*) BORDERCOL#6 )
  *((byte*) BORDERCOL#2) ← -- *((byte*) BORDERCOL#2)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_x#20 ← phi( anim::@4/(byte) sin_idx_x#21 )
  (byte*) BORDERCOL#5 ← phi( anim::@4/(byte*) BORDERCOL#6 )
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  (byte) sin_idx_y#11 ← phi( anim::@5/(byte) sin_idx_y#16 )
  (byte) sin_idx_x#11 ← phi( anim::@5/(byte) sin_idx_x#15 )
  (byte) sin_idx_x#5 ← (byte) sin_idx_x#11
  (byte) sin_idx_y#5 ← (byte) sin_idx_y#11
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#9 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#9 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#5 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*~) place_sprites::$0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte*) place_sprites::sprites_ptr#0 ← (byte*~) place_sprites::$0
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte~) place_sprites::$2 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_id#0 ← (byte~) place_sprites::$2
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 place_sprites::@1/(byte*) SPRITES_COLS#1 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 place_sprites::@1/(byte*) SPRITES_YPOS#2 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 place_sprites::@1/(byte*) SPRITES_XPOS#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte~) place_sprites::$3 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::spr_x#1 ← (byte~) place_sprites::$3
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte~) place_sprites::$5 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::col#1 ← (byte~) place_sprites::$5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#8 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 gen_sprites::@3/(byte*) PROCPORT#6 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 gen_sprites::@3/(byte*) CHARGEN#4 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 gen_sprites::@3/(byte[]) gen_sprites::cml#2 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) PROCPORT#6 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#4 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte[]) gen_sprites::cml#2 ← phi( gen_sprites::@1/(byte[]) gen_sprites::cml#1 )
  (byte) gen_sprites::i#3 ← phi( gen_sprites::@1/(byte) gen_sprites::i#2 )
  (byte*) gen_sprites::spr#3 ← phi( gen_sprites::@1/(byte*) gen_sprites::spr#2 )
  (byte*~) gen_sprites::$2 ← (byte*) gen_sprites::spr#3 + (byte/signed byte/word/signed word) 64
  (byte*) gen_sprites::spr#1 ← (byte*~) gen_sprites::$2
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#3
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*~) gen_chargen_sprite::$2 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*~) gen_chargen_sprite::$2
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte~) gen_chargen_sprite::$3 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::bits#0 ← (byte~) gen_chargen_sprite::$3
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#16 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#8 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#9 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte) gen_chargen_sprite::x#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#9 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#8 )
  (byte) gen_chargen_sprite::s_gen#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#9 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$6 ← (byte~) gen_chargen_sprite::$4 == (byte/signed byte/word/signed word) 0
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 gen_chargen_sprite::@6/(byte*) PROCPORT#17 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::chargen#9 )
  (byte) gen_chargen_sprite::y#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::x#8 )
  (byte) gen_chargen_sprite::bits#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::bits#8 )
  (byte*) gen_chargen_sprite::sprite#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::sprite#10 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen_cnt#7 )
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen#8 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte*) PROCPORT#17 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 )
  (byte*) gen_chargen_sprite::chargen#9 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#9 )
  (byte) gen_chargen_sprite::x#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 )
  (byte) gen_chargen_sprite::bits#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#9 )
  (byte) gen_chargen_sprite::s_gen_cnt#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 )
  (byte) gen_chargen_sprite::s_gen#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 )
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#6 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#8 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte) gen_chargen_sprite::x#4 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#5 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#7 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte*) gen_chargen_sprite::sprite#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::b#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#4 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte~) gen_chargen_sprite::$8 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$8
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) PROCPORT#9 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 gen_chargen_sprite::@7/(byte*) PROCPORT#12 )
  (byte*) gen_chargen_sprite::chargen#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::chargen#6 )
  (byte) gen_chargen_sprite::y#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::y#7 )
  (byte*) gen_chargen_sprite::sprite#8 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::x#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::x#5 )
  (byte) gen_chargen_sprite::bits#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::bits#6 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::c#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::c#5 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::b#4 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  (byte*) PROCPORT#12 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#6 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 )
  (byte) gen_chargen_sprite::y#7 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 )
  (byte) gen_chargen_sprite::x#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 )
  (byte) gen_chargen_sprite::bits#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 )
  (byte) gen_chargen_sprite::c#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::b#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#5 )
  (byte) gen_chargen_sprite::s_gen#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 )
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#4
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::s_gen_cnt#8 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#9 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte*) PROCPORT#7 ← phi( gen_chargen_sprite::@5/(byte*) PROCPORT#9 )
  (byte*) gen_chargen_sprite::chargen#3 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#4 )
  (byte) gen_chargen_sprite::y#4 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#5 )
  (byte*) gen_chargen_sprite::sprite#6 ← phi( gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#8 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#3 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#4 )
  (byte~) gen_chargen_sprite::$12 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::bits#1 ← (byte~) gen_chargen_sprite::$12
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) PROCPORT#4 ← phi( gen_chargen_sprite::@8/(byte*) PROCPORT#7 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#3 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#4 )
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#6 )
  (byte*~) gen_chargen_sprite::$14 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*~) gen_chargen_sprite::$14
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  (byte*) PROCPORT#2 ← phi( gen_chargen_sprite::@9/(byte*) PROCPORT#4 )
  *((byte*) PROCPORT#2) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#41 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#43 )
  (byte*) gen_sintab::sintab#23 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#23 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#4 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  (byte*) BORDERCOL#40 ← phi( gen_sintab/(byte*) BORDERCOL#41 )
  (byte*) gen_sintab::sintab#22 ← phi( gen_sintab/(byte*) gen_sintab::sintab#23 )
  (byte) gen_sintab::length#22 ← phi( gen_sintab/(byte) gen_sintab::length#23 )
  (byte[]) gen_sintab::f_i#21 ← phi( gen_sintab/(byte[]) gen_sintab::f_i#0 )
  (byte*) gen_sintab::f_2pi#21 ← phi( gen_sintab/(byte*) gen_sintab::f_2pi#0 )
  (byte[]) gen_sintab::f_amp#12 ← phi( gen_sintab/(byte[]) gen_sintab::f_amp#0 )
  (byte[]) gen_sintab::f_min#8 ← phi( gen_sintab/(byte[]) gen_sintab::f_min#0 )
  (byte) gen_sintab::min#3 ← phi( gen_sintab/(byte) gen_sintab::min#4 )
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  (byte*) BORDERCOL#39 ← phi( gen_sintab::@3/(byte*) BORDERCOL#40 )
  (byte*) gen_sintab::sintab#21 ← phi( gen_sintab::@3/(byte*) gen_sintab::sintab#22 )
  (byte) gen_sintab::length#21 ← phi( gen_sintab::@3/(byte) gen_sintab::length#22 )
  (byte[]) gen_sintab::f_i#20 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_i#21 )
  (byte*) gen_sintab::f_2pi#20 ← phi( gen_sintab::@3/(byte*) gen_sintab::f_2pi#21 )
  (byte[]) gen_sintab::f_amp#10 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_amp#12 )
  (byte[]) gen_sintab::f_min#5 ← phi( gen_sintab::@3/(byte[]) gen_sintab::f_min#8 )
  (byte) gen_sintab::min#2 ← phi( gen_sintab::@3/(byte) gen_sintab::min#3 )
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) BORDERCOL#38 ← phi( gen_sintab::@4/(byte*) BORDERCOL#39 )
  (byte*) gen_sintab::sintab#20 ← phi( gen_sintab::@4/(byte*) gen_sintab::sintab#21 )
  (byte) gen_sintab::length#20 ← phi( gen_sintab::@4/(byte) gen_sintab::length#21 )
  (byte[]) gen_sintab::f_i#19 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_i#20 )
  (byte*) gen_sintab::f_2pi#19 ← phi( gen_sintab::@4/(byte*) gen_sintab::f_2pi#20 )
  (byte[]) gen_sintab::f_amp#8 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_amp#10 )
  (byte[]) gen_sintab::f_min#1 ← phi( gen_sintab::@4/(byte[]) gen_sintab::f_min#5 )
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  (byte*) BORDERCOL#37 ← phi( gen_sintab::@5/(byte*) BORDERCOL#38 )
  (byte*) gen_sintab::sintab#19 ← phi( gen_sintab::@5/(byte*) gen_sintab::sintab#20 )
  (byte) gen_sintab::length#19 ← phi( gen_sintab::@5/(byte) gen_sintab::length#20 )
  (byte[]) gen_sintab::f_i#18 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_i#19 )
  (byte*) gen_sintab::f_2pi#17 ← phi( gen_sintab::@5/(byte*) gen_sintab::f_2pi#19 )
  (byte[]) gen_sintab::f_min#15 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_min#1 )
  (byte[]) gen_sintab::f_amp#5 ← phi( gen_sintab::@5/(byte[]) gen_sintab::f_amp#8 )
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) BORDERCOL#36 ← phi( gen_sintab::@6/(byte*) BORDERCOL#37 )
  (byte*) gen_sintab::sintab#18 ← phi( gen_sintab::@6/(byte*) gen_sintab::sintab#19 )
  (byte) gen_sintab::length#18 ← phi( gen_sintab::@6/(byte) gen_sintab::length#19 )
  (byte[]) gen_sintab::f_i#17 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_i#18 )
  (byte*) gen_sintab::f_2pi#15 ← phi( gen_sintab::@6/(byte*) gen_sintab::f_2pi#17 )
  (byte[]) gen_sintab::f_min#13 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_min#15 )
  (byte[]) gen_sintab::f_amp#1 ← phi( gen_sintab::@6/(byte[]) gen_sintab::f_amp#5 )
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (byte*) BORDERCOL#35 ← phi( gen_sintab::@7/(byte*) BORDERCOL#36 )
  (byte*) gen_sintab::sintab#17 ← phi( gen_sintab::@7/(byte*) gen_sintab::sintab#18 )
  (byte) gen_sintab::length#17 ← phi( gen_sintab::@7/(byte) gen_sintab::length#18 )
  (byte[]) gen_sintab::f_i#16 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_i#17 )
  (byte*) gen_sintab::f_2pi#13 ← phi( gen_sintab::@7/(byte*) gen_sintab::f_2pi#15 )
  (byte[]) gen_sintab::f_min#11 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_min#13 )
  (byte[]) gen_sintab::f_amp#6 ← phi( gen_sintab::@7/(byte[]) gen_sintab::f_amp#1 )
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) BORDERCOL#34 ← phi( gen_sintab::@8/(byte*) BORDERCOL#35 )
  (byte*) gen_sintab::sintab#16 ← phi( gen_sintab::@8/(byte*) gen_sintab::sintab#17 )
  (byte) gen_sintab::length#16 ← phi( gen_sintab::@8/(byte) gen_sintab::length#17 )
  (byte[]) gen_sintab::f_i#14 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_i#16 )
  (byte*) gen_sintab::f_2pi#11 ← phi( gen_sintab::@8/(byte*) gen_sintab::f_2pi#13 )
  (byte[]) gen_sintab::f_min#9 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_min#11 )
  (byte[]) gen_sintab::f_amp#2 ← phi( gen_sintab::@8/(byte[]) gen_sintab::f_amp#6 )
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) BORDERCOL#33 ← phi( gen_sintab::@9/(byte*) BORDERCOL#34 )
  (byte*) gen_sintab::sintab#15 ← phi( gen_sintab::@9/(byte*) gen_sintab::sintab#16 )
  (byte) gen_sintab::length#15 ← phi( gen_sintab::@9/(byte) gen_sintab::length#16 )
  (byte[]) gen_sintab::f_i#12 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_i#14 )
  (byte*) gen_sintab::f_2pi#9 ← phi( gen_sintab::@9/(byte*) gen_sintab::f_2pi#11 )
  (byte[]) gen_sintab::f_min#6 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_min#9 )
  (byte[]) gen_sintab::f_amp#3 ← phi( gen_sintab::@9/(byte[]) gen_sintab::f_amp#2 )
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) BORDERCOL#32 ← phi( gen_sintab::@10/(byte*) BORDERCOL#33 )
  (byte*) gen_sintab::sintab#14 ← phi( gen_sintab::@10/(byte*) gen_sintab::sintab#15 )
  (byte[]) gen_sintab::f_amp#20 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_amp#3 )
  (byte) gen_sintab::length#14 ← phi( gen_sintab::@10/(byte) gen_sintab::length#15 )
  (byte[]) gen_sintab::f_i#10 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_i#12 )
  (byte*) gen_sintab::f_2pi#7 ← phi( gen_sintab::@10/(byte*) gen_sintab::f_2pi#9 )
  (byte[]) gen_sintab::f_min#2 ← phi( gen_sintab::@10/(byte[]) gen_sintab::f_min#6 )
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#2
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) BORDERCOL#31 ← phi( gen_sintab::@11/(byte*) BORDERCOL#32 )
  (byte*) gen_sintab::sintab#13 ← phi( gen_sintab::@11/(byte*) gen_sintab::sintab#14 )
  (byte[]) gen_sintab::f_amp#18 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_amp#20 )
  (byte) gen_sintab::length#12 ← phi( gen_sintab::@11/(byte) gen_sintab::length#14 )
  (byte[]) gen_sintab::f_i#8 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_i#10 )
  (byte*) gen_sintab::f_2pi#5 ← phi( gen_sintab::@11/(byte*) gen_sintab::f_2pi#7 )
  (byte[]) gen_sintab::f_min#3 ← phi( gen_sintab::@11/(byte[]) gen_sintab::f_min#2 )
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#3
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte*) BORDERCOL#30 ← phi( gen_sintab::@12/(byte*) BORDERCOL#31 )
  (byte*) gen_sintab::sintab#12 ← phi( gen_sintab::@12/(byte*) gen_sintab::sintab#13 )
  (byte[]) gen_sintab::f_min#19 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_min#3 )
  (byte[]) gen_sintab::f_amp#16 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_amp#18 )
  (byte) gen_sintab::length#10 ← phi( gen_sintab::@12/(byte) gen_sintab::length#12 )
  (byte[]) gen_sintab::f_i#6 ← phi( gen_sintab::@12/(byte[]) gen_sintab::f_i#8 )
  (byte*) gen_sintab::f_2pi#3 ← phi( gen_sintab::@12/(byte*) gen_sintab::f_2pi#5 )
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#29 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 gen_sintab::@22/(byte*) BORDERCOL#3 )
  (byte*) gen_sintab::sintab#11 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@22/(byte*) gen_sintab::sintab#2 )
  (byte[]) gen_sintab::f_min#18 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#19 gen_sintab::@22/(byte[]) gen_sintab::f_min#20 )
  (byte[]) gen_sintab::f_amp#15 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#16 gen_sintab::@22/(byte[]) gen_sintab::f_amp#17 )
  (byte) gen_sintab::length#8 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@22/(byte) gen_sintab::length#3 )
  (byte[]) gen_sintab::f_i#5 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#6 gen_sintab::@22/(byte[]) gen_sintab::f_i#7 )
  (byte*) gen_sintab::f_2pi#2 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#3 gen_sintab::@22/(byte*) gen_sintab::f_2pi#4 )
  (byte) gen_sintab::i#2 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#2
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) BORDERCOL#28 ← phi( gen_sintab::@1/(byte*) BORDERCOL#29 )
  (byte) gen_sintab::i#11 ← phi( gen_sintab::@1/(byte) gen_sintab::i#2 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@1/(byte*) gen_sintab::sintab#11 )
  (byte[]) gen_sintab::f_min#17 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_min#18 )
  (byte[]) gen_sintab::f_amp#14 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_amp#15 )
  (byte) gen_sintab::length#6 ← phi( gen_sintab::@1/(byte) gen_sintab::length#8 )
  (byte[]) gen_sintab::f_i#3 ← phi( gen_sintab::@1/(byte[]) gen_sintab::f_i#5 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@1/(byte*) gen_sintab::f_2pi#2 )
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) gen_sintab::f_2pi#18 ← phi( gen_sintab::@14/(byte*) gen_sintab::f_2pi#1 )
  (byte*) BORDERCOL#27 ← phi( gen_sintab::@14/(byte*) BORDERCOL#28 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@14/(byte) gen_sintab::i#11 )
  (byte*) gen_sintab::sintab#9 ← phi( gen_sintab::@14/(byte*) gen_sintab::sintab#10 )
  (byte[]) gen_sintab::f_min#16 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_min#17 )
  (byte[]) gen_sintab::f_amp#13 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_amp#14 )
  (byte) gen_sintab::length#4 ← phi( gen_sintab::@14/(byte) gen_sintab::length#6 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@14/(byte[]) gen_sintab::f_i#3 )
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (byte*) gen_sintab::f_2pi#16 ← phi( gen_sintab::@15/(byte*) gen_sintab::f_2pi#18 )
  (byte*) BORDERCOL#25 ← phi( gen_sintab::@15/(byte*) BORDERCOL#27 )
  (byte) gen_sintab::i#9 ← phi( gen_sintab::@15/(byte) gen_sintab::i#10 )
  (byte*) gen_sintab::sintab#8 ← phi( gen_sintab::@15/(byte*) gen_sintab::sintab#9 )
  (byte[]) gen_sintab::f_min#14 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_min#16 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_amp#13 )
  (byte[]) gen_sintab::f_i#4 ← phi( gen_sintab::@15/(byte[]) gen_sintab::f_i#1 )
  (byte) gen_sintab::length#2 ← phi( gen_sintab::@15/(byte) gen_sintab::length#4 )
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#2
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) gen_sintab::f_2pi#14 ← phi( gen_sintab::@16/(byte*) gen_sintab::f_2pi#16 )
  (byte) gen_sintab::length#13 ← phi( gen_sintab::@16/(byte) gen_sintab::length#2 )
  (byte*) BORDERCOL#24 ← phi( gen_sintab::@16/(byte*) BORDERCOL#25 )
  (byte) gen_sintab::i#8 ← phi( gen_sintab::@16/(byte) gen_sintab::i#9 )
  (byte*) gen_sintab::sintab#7 ← phi( gen_sintab::@16/(byte*) gen_sintab::sintab#8 )
  (byte[]) gen_sintab::f_min#12 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_min#14 )
  (byte[]) gen_sintab::f_amp#9 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_amp#11 )
  (byte[]) gen_sintab::f_i#2 ← phi( gen_sintab::@16/(byte[]) gen_sintab::f_i#4 )
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#2
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  (byte[]) gen_sintab::f_i#15 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_i#2 )
  (byte*) gen_sintab::f_2pi#12 ← phi( gen_sintab::@17/(byte*) gen_sintab::f_2pi#14 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@17/(byte) gen_sintab::length#13 )
  (byte*) BORDERCOL#20 ← phi( gen_sintab::@17/(byte*) BORDERCOL#24 )
  (byte) gen_sintab::i#7 ← phi( gen_sintab::@17/(byte) gen_sintab::i#8 )
  (byte*) gen_sintab::sintab#6 ← phi( gen_sintab::@17/(byte*) gen_sintab::sintab#7 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_min#12 )
  (byte[]) gen_sintab::f_amp#7 ← phi( gen_sintab::@17/(byte[]) gen_sintab::f_amp#9 )
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte[]) gen_sintab::f_i#13 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_i#15 )
  (byte*) gen_sintab::f_2pi#10 ← phi( gen_sintab::@18/(byte*) gen_sintab::f_2pi#12 )
  (byte) gen_sintab::length#9 ← phi( gen_sintab::@18/(byte) gen_sintab::length#11 )
  (byte*) BORDERCOL#15 ← phi( gen_sintab::@18/(byte*) BORDERCOL#20 )
  (byte) gen_sintab::i#6 ← phi( gen_sintab::@18/(byte) gen_sintab::i#7 )
  (byte*) gen_sintab::sintab#5 ← phi( gen_sintab::@18/(byte*) gen_sintab::sintab#6 )
  (byte[]) gen_sintab::f_min#7 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_min#10 )
  (byte[]) gen_sintab::f_amp#4 ← phi( gen_sintab::@18/(byte[]) gen_sintab::f_amp#7 )
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#4
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte[]) gen_sintab::f_amp#21 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_amp#4 )
  (byte[]) gen_sintab::f_i#11 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_i#13 )
  (byte*) gen_sintab::f_2pi#8 ← phi( gen_sintab::@19/(byte*) gen_sintab::f_2pi#10 )
  (byte) gen_sintab::length#7 ← phi( gen_sintab::@19/(byte) gen_sintab::length#9 )
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@19/(byte*) BORDERCOL#15 )
  (byte) gen_sintab::i#5 ← phi( gen_sintab::@19/(byte) gen_sintab::i#6 )
  (byte*) gen_sintab::sintab#4 ← phi( gen_sintab::@19/(byte*) gen_sintab::sintab#5 )
  (byte[]) gen_sintab::f_min#4 ← phi( gen_sintab::@19/(byte[]) gen_sintab::f_min#7 )
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#4
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  (byte[]) gen_sintab::f_min#21 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_min#4 )
  (byte[]) gen_sintab::f_amp#19 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_amp#21 )
  (byte[]) gen_sintab::f_i#9 ← phi( gen_sintab::@20/(byte[]) gen_sintab::f_i#11 )
  (byte*) gen_sintab::f_2pi#6 ← phi( gen_sintab::@20/(byte*) gen_sintab::f_2pi#8 )
  (byte) gen_sintab::length#5 ← phi( gen_sintab::@20/(byte) gen_sintab::length#7 )
  (byte*) BORDERCOL#7 ← phi( gen_sintab::@20/(byte*) BORDERCOL#11 )
  (byte) gen_sintab::i#4 ← phi( gen_sintab::@20/(byte) gen_sintab::i#5 )
  (byte*) gen_sintab::sintab#3 ← phi( gen_sintab::@20/(byte*) gen_sintab::sintab#4 )
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#1
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (byte[]) gen_sintab::f_min#20 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_min#21 )
  (byte[]) gen_sintab::f_amp#17 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_amp#19 )
  (byte[]) gen_sintab::f_i#7 ← phi( gen_sintab::@21/(byte[]) gen_sintab::f_i#9 )
  (byte*) gen_sintab::f_2pi#4 ← phi( gen_sintab::@21/(byte*) gen_sintab::f_2pi#6 )
  (byte) gen_sintab::length#3 ← phi( gen_sintab::@21/(byte) gen_sintab::length#5 )
  (byte*) BORDERCOL#3 ← phi( gen_sintab::@21/(byte*) BORDERCOL#7 )
  (byte) gen_sintab::i#3 ← phi( gen_sintab::@21/(byte) gen_sintab::i#4 )
  (byte*) gen_sintab::sintab#2 ← phi( gen_sintab::@21/(byte*) gen_sintab::sintab#3 )
  (word) getFAC::return#4 ← phi( gen_sintab::@21/(word) getFAC::return#2 )
  (word~) gen_sintab::$23 ← (word) getFAC::return#4
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#2 + (byte) gen_sintab::i#3) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#3) ← ++ *((byte*) BORDERCOL#3)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#3
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#3
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  (byte*) PROCPORT#20 ← phi( @34/(byte*) PROCPORT#21 )
  (byte*) CHARGEN#10 ← phi( @34/(byte*) CHARGEN#11 )
  (byte*) SPRITES_COLS#7 ← phi( @34/(byte*) SPRITES_COLS#8 )
  (byte*) SPRITES_YPOS#18 ← phi( @34/(byte*) SPRITES_YPOS#19 )
  (byte*) SPRITES_XPOS#18 ← phi( @34/(byte*) SPRITES_XPOS#19 )
  (byte*) SPRITES_EXPAND_Y#6 ← phi( @34/(byte*) SPRITES_EXPAND_Y#7 )
  (byte*) SPRITES_EXPAND_X#6 ← phi( @34/(byte*) SPRITES_EXPAND_X#7 )
  (byte*) SPRITES_ENABLE#6 ← phi( @34/(byte*) SPRITES_ENABLE#7 )
  (byte*) BORDERCOL#21 ← phi( @34/(byte*) BORDERCOL#26 )
  (byte*) RASTER#6 ← phi( @34/(byte*) RASTER#8 )
  (byte*) SCREEN#6 ← phi( @34/(byte*) SCREEN#7 )
  (byte) sin_idx_y#17 ← phi( @34/(byte) sin_idx_y#2 )
  (byte) sin_idx_x#16 ← phi( @34/(byte) sin_idx_x#2 )
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#1 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#1 )
  (byte) sin_idx_x#6 ← (byte) sin_idx_x#12
  (byte) sin_idx_y#6 ← (byte) sin_idx_y#12
  to:@end
@end: scope:[]  from @40

Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#0 setFAC::$0
Not aliassing across scopes: setMEMtoFAC::mem#5 setMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: addMEMtoFAC::mem#2 addMEMtoFAC::mem#0
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: divMEMbyFAC::mem#2 divMEMbyFAC::mem#1
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: mulFACbyMEM::mem#2 mulFACbyMEM::mem#0
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: SCREEN#4 SCREEN#6
Not aliassing across scopes: RASTER#4 RASTER#6
Not aliassing across scopes: sin_idx_x#26 sin_idx_x#16
Not aliassing across scopes: sin_idx_y#24 sin_idx_y#17
Not aliassing across scopes: BORDERCOL#16 BORDERCOL#21
Not aliassing across scopes: SPRITES_ENABLE#5 SPRITES_ENABLE#6
Not aliassing across scopes: SPRITES_EXPAND_X#5 SPRITES_EXPAND_X#6
Not aliassing across scopes: SPRITES_EXPAND_Y#5 SPRITES_EXPAND_Y#6
Not aliassing across scopes: SPRITES_XPOS#16 SPRITES_XPOS#18
Not aliassing across scopes: SPRITES_YPOS#16 SPRITES_YPOS#18
Not aliassing across scopes: SPRITES_COLS#6 SPRITES_COLS#7
Not aliassing across scopes: CHARGEN#9 CHARGEN#10
Not aliassing across scopes: PROCPORT#18 PROCPORT#20
Not aliassing across scopes: sin_idx_x#7 sin_idx_x#5
Not aliassing across scopes: sin_idx_y#7 sin_idx_y#5
Not aliassing across scopes: SCREEN#1 SCREEN#4
Not aliassing across scopes: SPRITES_ENABLE#4 SPRITES_ENABLE#5
Not aliassing across scopes: SPRITES_EXPAND_X#4 SPRITES_EXPAND_X#5
Not aliassing across scopes: SPRITES_EXPAND_Y#4 SPRITES_EXPAND_Y#5
Not aliassing across scopes: SPRITES_XPOS#15 SPRITES_XPOS#16
Not aliassing across scopes: SPRITES_YPOS#15 SPRITES_YPOS#16
Not aliassing across scopes: SPRITES_COLS#5 SPRITES_COLS#6
Not aliassing across scopes: CHARGEN#8 CHARGEN#9
Not aliassing across scopes: PROCPORT#15 PROCPORT#18
Not aliassing across scopes: BORDERCOL#47 BORDERCOL#16
Not aliassing across scopes: init::sc#0 SCREEN#1
Not aliassing across scopes: gen_sintab::sintab#0 sintab_x#0
Not aliassing across scopes: gen_sintab::length#0 sinlen_x#0
Not aliassing across scopes: gen_sintab::sintab#1 sintab_y#0
Not aliassing across scopes: gen_sintab::length#1 sinlen_y#0
Not aliassing across scopes: BORDERCOL#1 BORDERCOL#4
Not aliassing across scopes: sin_idx_x#9 sin_idx_x#13
Not aliassing across scopes: sin_idx_y#9 sin_idx_y#13
Not aliassing across scopes: SPRITES_XPOS#3 SPRITES_XPOS#6
Not aliassing across scopes: SPRITES_YPOS#3 SPRITES_YPOS#6
Not aliassing across scopes: anim::xidx#0 sin_idx_x#9
Not aliassing across scopes: anim::yidx#0 sin_idx_y#9
Not aliassing across scopes: SPRITES_ENABLE#1 SPRITES_ENABLE#2
Not aliassing across scopes: SPRITES_EXPAND_X#1 SPRITES_EXPAND_X#2
Not aliassing across scopes: SPRITES_EXPAND_Y#1 SPRITES_EXPAND_Y#2
Not aliassing across scopes: SCREEN#3 SCREEN#5
Not aliassing across scopes: SPRITES_XPOS#5 SPRITES_XPOS#9
Not aliassing across scopes: SPRITES_YPOS#5 SPRITES_YPOS#9
Not aliassing across scopes: SPRITES_COLS#2 SPRITES_COLS#3
Not aliassing across scopes: CHARGEN#3 CHARGEN#5
Not aliassing across scopes: PROCPORT#5 PROCPORT#8
Not aliassing across scopes: gen_sprites::spr#0 sprites#0
Not aliassing across scopes: gen_chargen_sprite::ch#0 gen_sprites::$0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::ch#1 gen_chargen_sprite::ch#0
Not aliassing across scopes: CHARGEN#1 CHARGEN#2
Not aliassing across scopes: PROCPORT#1 PROCPORT#3
Not aliassing across scopes: gen_chargen_sprite::sprite#12 gen_chargen_sprite::sprite#0
Not aliassing across scopes: gen_sintab::max#2 gen_sintab::max#0
Not aliassing across scopes: gen_sintab::min#4 gen_sintab::min#0
Not aliassing across scopes: gen_sintab::length#23 gen_sintab::length#0
Not aliassing across scopes: gen_sintab::sintab#23 gen_sintab::sintab#0
Not aliassing across scopes: BORDERCOL#41 BORDERCOL#42
Not aliassing across scopes: setFAC::w#0 gen_sintab::$0
Not aliassing across scopes: setFAC::w#1 gen_sintab::$3
Not aliassing across scopes: setMEMtoFAC::mem#0 gen_sintab::f_min#1
Not aliassing across scopes: setMEMtoFAC::mem#1 gen_sintab::f_amp#1
Not aliassing across scopes: divMEMbyFAC::mem#0 gen_sintab::f_amp#2
Not aliassing across scopes: setMEMtoFAC::mem#2 gen_sintab::f_amp#3
Not aliassing across scopes: addMEMtoFAC::mem#0 gen_sintab::f_min#2
Not aliassing across scopes: setMEMtoFAC::mem#3 gen_sintab::f_min#3
Not aliassing across scopes: setFAC::w#3 gen_sintab::$13
Not aliassing across scopes: mulFACbyMEM::mem#0 gen_sintab::f_2pi#1
Not aliassing across scopes: setMEMtoFAC::mem#4 gen_sintab::f_i#1
Not aliassing across scopes: setFAC::w#4 gen_sintab::$17
Not aliassing across scopes: divMEMbyFAC::mem#1 gen_sintab::f_i#2
Not aliassing across scopes: mulFACbyMEM::mem#1 gen_sintab::f_amp#4
Not aliassing across scopes: addMEMtoFAC::mem#1 gen_sintab::f_min#4
Not aliassing across scopes: getFAC::return#2 getFAC::return#1
Not aliassing across scopes: gen_sintab::$23 getFAC::return#4
Not aliassing across scopes: sin_idx_x#12 sin_idx_x#1
Not aliassing across scopes: sin_idx_y#12 sin_idx_y#1
Alias (word) getFAC::return#0 = (word) getFAC::w#2 (word) getFAC::return#3 (word) getFAC::return#1 
Alias (byte*) RASTER#3 = (byte*) RASTER#4 
Alias (byte) sin_idx_x#23 = (byte) sin_idx_x#26 
Alias (byte) sin_idx_y#21 = (byte) sin_idx_y#24 
Alias (byte*) BORDERCOL#13 = (byte*) BORDERCOL#16 
Alias (byte*) SPRITES_XPOS#14 = (byte*) SPRITES_XPOS#16 
Alias (byte*) SPRITES_YPOS#14 = (byte*) SPRITES_YPOS#16 
Alias (byte*) RASTER#1 = (byte*) RASTER#2 (byte*) RASTER#5 (byte*) RASTER#7 
Alias (byte) sin_idx_x#0 = (byte) sin_idx_x#22 (byte) sin_idx_x#7 (byte) sin_idx_x#8 (byte) sin_idx_x#1 
Alias (byte) sin_idx_y#0 = (byte) sin_idx_y#20 (byte) sin_idx_y#7 (byte) sin_idx_y#8 (byte) sin_idx_y#1 
Alias (byte*) BORDERCOL#12 = (byte*) BORDERCOL#17 (byte*) BORDERCOL#4 (byte*) BORDERCOL#8 
Alias (byte*) SPRITES_XPOS#10 = (byte*) SPRITES_XPOS#13 (byte*) SPRITES_XPOS#17 (byte*) SPRITES_XPOS#6 
Alias (byte*) SPRITES_YPOS#10 = (byte*) SPRITES_YPOS#13 (byte*) SPRITES_YPOS#17 (byte*) SPRITES_YPOS#6 
Alias (byte) sin_idx_x#13 = (byte) sin_idx_x#17 
Alias (byte) sin_idx_y#13 = (byte) sin_idx_y#18 
Alias (byte*) SPRITES_ENABLE#2 = (byte*) SPRITES_ENABLE#3 
Alias (byte*) SPRITES_EXPAND_X#2 = (byte*) SPRITES_EXPAND_X#3 
Alias (byte*) SPRITES_EXPAND_Y#2 = (byte*) SPRITES_EXPAND_Y#3 
Alias (byte*) SCREEN#2 = (byte*) SCREEN#5 
Alias (byte*) SPRITES_XPOS#11 = (byte*) SPRITES_XPOS#9 
Alias (byte*) SPRITES_YPOS#11 = (byte*) SPRITES_YPOS#9 
Alias (byte*) SPRITES_COLS#3 = (byte*) SPRITES_COLS#4 
Alias (byte*) CHARGEN#5 = (byte*) CHARGEN#6 (byte*) CHARGEN#7 
Alias (byte*) PROCPORT#10 = (byte*) PROCPORT#13 (byte*) PROCPORT#8 
Alias (byte*) BORDERCOL#42 = (byte*) BORDERCOL#45 (byte*) BORDERCOL#46 (byte*) BORDERCOL#44 (byte*) BORDERCOL#43 
Alias (byte*) SCREEN#0 = (byte*) SCREEN#7 (byte*) SCREEN#6 
Alias (byte*) RASTER#0 = (byte*) RASTER#8 (byte*) RASTER#6 
Alias (byte*) BORDERCOL#0 = (byte*) BORDERCOL#26 (byte*) BORDERCOL#21 
Alias (byte*) SPRITES_ENABLE#0 = (byte*) SPRITES_ENABLE#7 (byte*) SPRITES_ENABLE#6 
Alias (byte*) SPRITES_EXPAND_X#0 = (byte*) SPRITES_EXPAND_X#7 (byte*) SPRITES_EXPAND_X#6 
Alias (byte*) SPRITES_EXPAND_Y#0 = (byte*) SPRITES_EXPAND_Y#7 (byte*) SPRITES_EXPAND_Y#6 
Alias (byte*) SPRITES_XPOS#0 = (byte*) SPRITES_XPOS#19 (byte*) SPRITES_XPOS#18 
Alias (byte*) SPRITES_YPOS#0 = (byte*) SPRITES_YPOS#19 (byte*) SPRITES_YPOS#18 
Alias (byte*) SPRITES_COLS#0 = (byte*) SPRITES_COLS#8 (byte*) SPRITES_COLS#7 
Alias (byte*) CHARGEN#0 = (byte*) CHARGEN#11 (byte*) CHARGEN#10 
Alias (byte*) PROCPORT#0 = (byte*) PROCPORT#21 (byte*) PROCPORT#20 
Alias (byte) anim::xidx#1 = (byte~) anim::$2 (byte) anim::xidx#4 
Alias (byte) anim::yidx#1 = (byte~) anim::$6 (byte) anim::yidx#5 
Alias (byte) anim::yidx#3 = (byte) anim::yidx#7 
Alias (byte) anim::j2#3 = (byte) anim::j2#7 
Alias (byte) anim::j#5 = (byte) anim::j#6 
Alias (byte*) SPRITES_XPOS#1 = (byte*) SPRITES_XPOS#12 
Alias (byte*) SPRITES_YPOS#1 = (byte*) SPRITES_YPOS#12 
Alias (byte) sin_idx_x#24 = (byte) sin_idx_x#25 
Alias (byte) sin_idx_y#25 = (byte) sin_idx_y#26 
Alias (byte*) BORDERCOL#22 = (byte*) BORDERCOL#23 
Alias (byte) anim::xidx#2 = (byte~) anim::$5 
Alias (byte) anim::j2#5 = (byte) anim::j2#6 
Alias (byte) anim::j#3 = (byte) anim::j#4 
Alias (byte) anim::xidx#6 = (byte) anim::xidx#7 
Alias (byte*) SPRITES_XPOS#7 = (byte*) SPRITES_XPOS#8 
Alias (byte*) SPRITES_YPOS#7 = (byte*) SPRITES_YPOS#8 
Alias (byte) sin_idx_x#18 = (byte) sin_idx_x#19 
Alias (byte) sin_idx_y#22 = (byte) sin_idx_y#23 
Alias (byte*) BORDERCOL#18 = (byte*) BORDERCOL#19 
Alias (byte) anim::yidx#2 = (byte~) anim::$9 
Alias (byte) sin_idx_x#10 = (byte) sin_idx_x#14 
Alias (byte) sin_idx_y#14 = (byte) sin_idx_y#19 (byte) sin_idx_y#15 
Alias (byte*) BORDERCOL#10 = (byte*) BORDERCOL#9 (byte*) BORDERCOL#14 
Alias (byte*) BORDERCOL#5 = (byte*) BORDERCOL#6 
Alias (byte) sin_idx_x#20 = (byte) sin_idx_x#21 
Alias (byte) sin_idx_x#11 = (byte) sin_idx_x#15 (byte) sin_idx_x#5 
Alias (byte) sin_idx_y#11 = (byte) sin_idx_y#16 (byte) sin_idx_y#5 
Alias (byte*) place_sprites::sprites_ptr#0 = (byte*~) place_sprites::$0 
Alias (byte) place_sprites::spr_id#0 = (byte~) place_sprites::$2 
Alias (byte) place_sprites::spr_x#1 = (byte~) place_sprites::$3 
Alias (byte) place_sprites::col#1 = (byte~) place_sprites::$5 
Alias (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#3 
Alias (byte) gen_sprites::i#2 = (byte) gen_sprites::i#3 
Alias (byte[]) gen_sprites::cml#1 = (byte[]) gen_sprites::cml#2 
Alias (byte*) CHARGEN#2 = (byte*) CHARGEN#4 
Alias (byte*) PROCPORT#3 = (byte*) PROCPORT#6 
Alias (byte*) gen_sprites::spr#1 = (byte*~) gen_sprites::$2 
Alias (byte*) gen_chargen_sprite::chargen#0 = (byte*~) gen_chargen_sprite::$2 
Alias (byte) gen_chargen_sprite::bits#0 = (byte~) gen_chargen_sprite::$3 
Alias (byte) gen_chargen_sprite::s_gen#7 = (byte) gen_chargen_sprite::s_gen#8 
Alias (byte) gen_chargen_sprite::s_gen_cnt#6 = (byte) gen_chargen_sprite::s_gen_cnt#7 
Alias (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#9 
Alias (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#8 
Alias (byte) gen_chargen_sprite::x#7 = (byte) gen_chargen_sprite::x#8 
Alias (byte) gen_chargen_sprite::y#10 = (byte) gen_chargen_sprite::y#9 
Alias (byte*) gen_chargen_sprite::chargen#8 = (byte*) gen_chargen_sprite::chargen#9 
Alias (byte*) PROCPORT#16 = (byte*) PROCPORT#17 
Alias (byte) gen_chargen_sprite::s_gen#1 = (byte~) gen_chargen_sprite::$8 (byte) gen_chargen_sprite::s_gen#4 
Alias (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#5 
Alias (byte) gen_chargen_sprite::b#3 = (byte) gen_chargen_sprite::b#4 
Alias (byte) gen_chargen_sprite::c#2 = (byte) gen_chargen_sprite::c#5 
Alias (byte) gen_chargen_sprite::bits#5 = (byte) gen_chargen_sprite::bits#6 
Alias (byte) gen_chargen_sprite::x#4 = (byte) gen_chargen_sprite::x#5 
Alias (byte) gen_chargen_sprite::y#6 = (byte) gen_chargen_sprite::y#7 
Alias (byte*) gen_chargen_sprite::chargen#5 = (byte*) gen_chargen_sprite::chargen#6 
Alias (byte*) PROCPORT#11 = (byte*) PROCPORT#12 
Alias (byte) gen_chargen_sprite::bits#3 = (byte) gen_chargen_sprite::bits#4 
Alias (byte) gen_chargen_sprite::x#2 = (byte) gen_chargen_sprite::x#3 
Alias (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#6 (byte*) gen_chargen_sprite::sprite#8 
Alias (byte) gen_chargen_sprite::y#3 = (byte) gen_chargen_sprite::y#4 (byte) gen_chargen_sprite::y#5 
Alias (byte*) gen_chargen_sprite::chargen#2 = (byte*) gen_chargen_sprite::chargen#3 (byte*) gen_chargen_sprite::chargen#4 
Alias (byte*) PROCPORT#2 = (byte*) PROCPORT#7 (byte*) PROCPORT#9 (byte*) PROCPORT#4 
Alias (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#9 
Alias (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#8 
Alias (byte) gen_chargen_sprite::bits#1 = (byte~) gen_chargen_sprite::$12 
Alias (byte*) gen_chargen_sprite::sprite#2 = (byte*~) gen_chargen_sprite::$14 
Alias (byte) gen_sintab::min#2 = (byte) gen_sintab::min#3 (byte) gen_sintab::min#4 
Alias (byte[]) gen_sintab::f_min#0 = (byte[]) gen_sintab::f_min#8 (byte[]) gen_sintab::f_min#5 (byte[]) gen_sintab::f_min#1 (byte[]) gen_sintab::f_min#15 (byte[]) gen_sintab::f_min#13 (byte[]) gen_sintab::f_min#11 (byte[]) gen_sintab::f_min#9 (byte[]) gen_sintab::f_min#6 (byte[]) gen_sintab::f_min#2 (byte[]) gen_sintab::f_min#3 (byte[]) gen_sintab::f_min#19 
Alias (byte[]) gen_sintab::f_amp#0 = (byte[]) gen_sintab::f_amp#12 (byte[]) gen_sintab::f_amp#10 (byte[]) gen_sintab::f_amp#8 (byte[]) gen_sintab::f_amp#5 (byte[]) gen_sintab::f_amp#1 (byte[]) gen_sintab::f_amp#6 (byte[]) gen_sintab::f_amp#2 (byte[]) gen_sintab::f_amp#3 (byte[]) gen_sintab::f_amp#20 (byte[]) gen_sintab::f_amp#18 (byte[]) gen_sintab::f_amp#16 
Alias (byte*) gen_sintab::f_2pi#0 = (byte*) gen_sintab::f_2pi#21 (byte*) gen_sintab::f_2pi#20 (byte*) gen_sintab::f_2pi#19 (byte*) gen_sintab::f_2pi#17 (byte*) gen_sintab::f_2pi#15 (byte*) gen_sintab::f_2pi#13 (byte*) gen_sintab::f_2pi#11 (byte*) gen_sintab::f_2pi#9 (byte*) gen_sintab::f_2pi#7 (byte*) gen_sintab::f_2pi#5 (byte*) gen_sintab::f_2pi#3 
Alias (byte[]) gen_sintab::f_i#0 = (byte[]) gen_sintab::f_i#21 (byte[]) gen_sintab::f_i#20 (byte[]) gen_sintab::f_i#19 (byte[]) gen_sintab::f_i#18 (byte[]) gen_sintab::f_i#17 (byte[]) gen_sintab::f_i#16 (byte[]) gen_sintab::f_i#14 (byte[]) gen_sintab::f_i#12 (byte[]) gen_sintab::f_i#10 (byte[]) gen_sintab::f_i#8 (byte[]) gen_sintab::f_i#6 
Alias (byte) gen_sintab::length#10 = (byte) gen_sintab::length#22 (byte) gen_sintab::length#23 (byte) gen_sintab::length#21 (byte) gen_sintab::length#20 (byte) gen_sintab::length#19 (byte) gen_sintab::length#18 (byte) gen_sintab::length#17 (byte) gen_sintab::length#16 (byte) gen_sintab::length#15 (byte) gen_sintab::length#14 (byte) gen_sintab::length#12 
Alias (byte*) gen_sintab::sintab#12 = (byte*) gen_sintab::sintab#22 (byte*) gen_sintab::sintab#23 (byte*) gen_sintab::sintab#21 (byte*) gen_sintab::sintab#20 (byte*) gen_sintab::sintab#19 (byte*) gen_sintab::sintab#18 (byte*) gen_sintab::sintab#17 (byte*) gen_sintab::sintab#16 (byte*) gen_sintab::sintab#15 (byte*) gen_sintab::sintab#14 (byte*) gen_sintab::sintab#13 
Alias (byte*) BORDERCOL#30 = (byte*) BORDERCOL#40 (byte*) BORDERCOL#41 (byte*) BORDERCOL#39 (byte*) BORDERCOL#38 (byte*) BORDERCOL#37 (byte*) BORDERCOL#36 (byte*) BORDERCOL#35 (byte*) BORDERCOL#34 (byte*) BORDERCOL#33 (byte*) BORDERCOL#32 (byte*) BORDERCOL#31 
Alias (byte*) gen_sintab::f_2pi#1 = (byte*) gen_sintab::f_2pi#2 (byte*) gen_sintab::f_2pi#18 (byte*) gen_sintab::f_2pi#16 (byte*) gen_sintab::f_2pi#14 (byte*) gen_sintab::f_2pi#12 (byte*) gen_sintab::f_2pi#10 (byte*) gen_sintab::f_2pi#8 (byte*) gen_sintab::f_2pi#6 (byte*) gen_sintab::f_2pi#4 
Alias (byte[]) gen_sintab::f_i#1 = (byte[]) gen_sintab::f_i#3 (byte[]) gen_sintab::f_i#5 (byte[]) gen_sintab::f_i#4 (byte[]) gen_sintab::f_i#2 (byte[]) gen_sintab::f_i#15 (byte[]) gen_sintab::f_i#13 (byte[]) gen_sintab::f_i#11 (byte[]) gen_sintab::f_i#9 (byte[]) gen_sintab::f_i#7 
Alias (byte) gen_sintab::length#11 = (byte) gen_sintab::length#6 (byte) gen_sintab::length#8 (byte) gen_sintab::length#4 (byte) gen_sintab::length#2 (byte) gen_sintab::length#13 (byte) gen_sintab::length#9 (byte) gen_sintab::length#7 (byte) gen_sintab::length#5 (byte) gen_sintab::length#3 
Alias (byte[]) gen_sintab::f_amp#11 = (byte[]) gen_sintab::f_amp#14 (byte[]) gen_sintab::f_amp#15 (byte[]) gen_sintab::f_amp#13 (byte[]) gen_sintab::f_amp#9 (byte[]) gen_sintab::f_amp#7 (byte[]) gen_sintab::f_amp#4 (byte[]) gen_sintab::f_amp#21 (byte[]) gen_sintab::f_amp#19 (byte[]) gen_sintab::f_amp#17 
Alias (byte[]) gen_sintab::f_min#10 = (byte[]) gen_sintab::f_min#17 (byte[]) gen_sintab::f_min#18 (byte[]) gen_sintab::f_min#16 (byte[]) gen_sintab::f_min#14 (byte[]) gen_sintab::f_min#12 (byte[]) gen_sintab::f_min#7 (byte[]) gen_sintab::f_min#4 (byte[]) gen_sintab::f_min#21 (byte[]) gen_sintab::f_min#20 
Alias (byte*) gen_sintab::sintab#10 = (byte*) gen_sintab::sintab#11 (byte*) gen_sintab::sintab#9 (byte*) gen_sintab::sintab#8 (byte*) gen_sintab::sintab#7 (byte*) gen_sintab::sintab#6 (byte*) gen_sintab::sintab#5 (byte*) gen_sintab::sintab#4 (byte*) gen_sintab::sintab#3 (byte*) gen_sintab::sintab#2 
Alias (byte) gen_sintab::i#10 = (byte) gen_sintab::i#11 (byte) gen_sintab::i#2 (byte) gen_sintab::i#9 (byte) gen_sintab::i#8 (byte) gen_sintab::i#7 (byte) gen_sintab::i#6 (byte) gen_sintab::i#5 (byte) gen_sintab::i#4 (byte) gen_sintab::i#3 
Alias (byte*) BORDERCOL#11 = (byte*) BORDERCOL#28 (byte*) BORDERCOL#29 (byte*) BORDERCOL#27 (byte*) BORDERCOL#25 (byte*) BORDERCOL#24 (byte*) BORDERCOL#20 (byte*) BORDERCOL#15 (byte*) BORDERCOL#7 (byte*) BORDERCOL#3 
Alias (word) getFAC::return#2 = (word) getFAC::return#4 
Alias (byte) sin_idx_x#16 = (byte) sin_idx_x#2 
Alias (byte) sin_idx_y#17 = (byte) sin_idx_y#2 
Alias (byte) sin_idx_x#12 = (byte) sin_idx_x#6 
Alias (byte) sin_idx_y#12 = (byte) sin_idx_y#6 
Succesful SSA optimization Pass2AliasElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#14 ← phi( @39/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#14 ← phi( @39/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#13 ← phi( @39/(byte*) BORDERCOL#0 )
  (byte) sin_idx_y#21 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#23 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#3 ← phi( @39/(byte*) RASTER#0 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#0 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@1/(byte*) SPRITES_YPOS#10 main::@2/(byte*) SPRITES_YPOS#10 main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@1/(byte*) SPRITES_XPOS#10 main::@2/(byte*) SPRITES_XPOS#10 main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#12 ← phi( main::@1/(byte*) BORDERCOL#12 main::@2/(byte*) BORDERCOL#12 main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#0 main::@2/(byte) sin_idx_y#13 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#0 main::@2/(byte) sin_idx_x#13 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@1/(byte*) RASTER#1 main::@2/(byte*) RASTER#1 main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte) sin_idx_y#0 ← phi( main::@3/(byte) sin_idx_y#11 )
  (byte) sin_idx_x#0 ← phi( main::@3/(byte) sin_idx_x#11 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#13 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#14 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#42 ← phi( init/(byte*) BORDERCOL#47 init::@1/(byte*) BORDERCOL#42 )
  (byte*) PROCPORT#10 ← phi( init/(byte*) PROCPORT#15 init::@1/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#5 ← phi( init/(byte*) CHARGEN#8 init::@1/(byte*) CHARGEN#5 )
  (byte*) SPRITES_COLS#3 ← phi( init/(byte*) SPRITES_COLS#5 init::@1/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 init::@1/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init/(byte*) SPRITES_EXPAND_X#4 init::@1/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#2 ← phi( init/(byte*) SPRITES_ENABLE#4 init::@1/(byte*) SPRITES_ENABLE#2 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 init::@1/(byte*) SCREEN#2 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x#16 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#17 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#10 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#12 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#22 ← phi( anim/(byte*) BORDERCOL#1 anim::@3/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#25 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#14 )
  (byte) sin_idx_x#24 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#10 )
  (byte) anim::j#5 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 anim::@3/(byte*) SPRITES_YPOS#4 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 anim::@3/(byte*) SPRITES_XPOS#4 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (boolean~) anim::$4 ← (byte) anim::xidx#1 < (byte) sinlen_x#0
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte*) BORDERCOL#18 ← phi( anim::@1/(byte*) BORDERCOL#22 anim::@6/(byte*) BORDERCOL#22 )
  (byte) sin_idx_y#22 ← phi( anim::@1/(byte) sin_idx_y#25 anim::@6/(byte) sin_idx_y#25 )
  (byte) sin_idx_x#18 ← phi( anim::@1/(byte) sin_idx_x#24 anim::@6/(byte) sin_idx_x#24 )
  (byte*) SPRITES_YPOS#7 ← phi( anim::@1/(byte*) SPRITES_YPOS#1 anim::@6/(byte*) SPRITES_YPOS#1 )
  (byte*) SPRITES_XPOS#7 ← phi( anim::@1/(byte*) SPRITES_XPOS#1 anim::@6/(byte*) SPRITES_XPOS#1 )
  (byte) anim::xidx#6 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::j#3 ← phi( anim::@1/(byte) anim::j#5 anim::@6/(byte) anim::j#5 )
  (byte) anim::j2#5 ← phi( anim::@1/(byte) anim::j2#3 anim::@6/(byte) anim::j2#3 )
  (byte) anim::yidx#4 ← phi( anim::@1/(byte) anim::yidx#3 anim::@6/(byte) anim::yidx#3 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#4 + (byte/signed byte/word/signed word) 8
  (boolean~) anim::$8 ← (byte) anim::yidx#1 < (byte) sinlen_y#0
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte*) BORDERCOL#10 ← phi( anim::@2/(byte*) BORDERCOL#18 anim::@7/(byte*) BORDERCOL#18 )
  (byte) sin_idx_y#14 ← phi( anim::@2/(byte) sin_idx_y#22 anim::@7/(byte) sin_idx_y#22 )
  (byte) sin_idx_x#10 ← phi( anim::@2/(byte) sin_idx_x#18 anim::@7/(byte) sin_idx_x#18 )
  (byte*) SPRITES_YPOS#4 ← phi( anim::@2/(byte*) SPRITES_YPOS#7 anim::@7/(byte*) SPRITES_YPOS#7 )
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte*) SPRITES_XPOS#4 ← phi( anim::@2/(byte*) SPRITES_XPOS#7 anim::@7/(byte*) SPRITES_XPOS#7 )
  (byte) anim::xidx#5 ← phi( anim::@2/(byte) anim::xidx#6 anim::@7/(byte) anim::xidx#6 )
  (byte) anim::j#2 ← phi( anim::@2/(byte) anim::j#3 anim::@7/(byte) anim::j#3 )
  (byte) anim::j2#4 ← phi( anim::@2/(byte) anim::j2#5 anim::@7/(byte) anim::j2#5 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#4
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$12 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#20 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte*) BORDERCOL#5 ← phi( anim::@8/(byte*) BORDERCOL#10 anim::@9/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#10 ← phi( anim::@8/(byte) sin_idx_y#14 anim::@9/(byte) sin_idx_y#14 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$14 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  (byte) sin_idx_x#11 ← phi( anim::@10/(byte) sin_idx_x#20 anim::@4/(byte) sin_idx_x#20 )
  (byte*) BORDERCOL#2 ← phi( anim::@10/(byte*) BORDERCOL#5 anim::@4/(byte*) BORDERCOL#5 )
  *((byte*) BORDERCOL#2) ← -- *((byte*) BORDERCOL#2)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*) place_sprites::sprites_ptr#0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte) place_sprites::spr_id#0 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 place_sprites::@1/(byte*) SPRITES_COLS#1 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 place_sprites::@1/(byte*) SPRITES_YPOS#2 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 place_sprites::@1/(byte*) SPRITES_XPOS#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 gen_sprites::@3/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 gen_sprites::@3/(byte*) CHARGEN#2 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 gen_sprites::@3/(byte[]) gen_sprites::cml#1 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#2 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#16 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#2 )
  (byte*) gen_chargen_sprite::chargen#8 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#3 )
  (byte) gen_chargen_sprite::x#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#7 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$6 ← (byte~) gen_chargen_sprite::$4 == (byte/signed byte/word/signed word) 0
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@2/(byte*) PROCPORT#16 gen_chargen_sprite::@6/(byte*) PROCPORT#16 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::chargen#8 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::chargen#8 )
  (byte) gen_chargen_sprite::y#8 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::y#10 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::x#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::x#7 )
  (byte) gen_chargen_sprite::bits#7 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#7 ← phi( gen_chargen_sprite::@2/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@6/(byte*) gen_chargen_sprite::sprite#10 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen_cnt#6 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen_cnt#6 )
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::s_gen#7 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::s_gen#7 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 gen_chargen_sprite::@5/(byte*) PROCPORT#2 )
  (byte*) gen_chargen_sprite::chargen#5 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::y#6 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#8 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#3 )
  (byte) gen_chargen_sprite::x#4 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#2 )
  (byte) gen_chargen_sprite::bits#5 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#7 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#4 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) PROCPORT#2 ← phi( gen_chargen_sprite::@4/(byte*) PROCPORT#11 gen_chargen_sprite::@7/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::chargen#5 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::chargen#5 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::y#6 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::y#6 )
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::x#4 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::x#4 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::bits#5 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::bits#5 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::c#4 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::c#2 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::b#3 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::b#3 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#2) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#30 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 gen_sintab::@22/(byte*) BORDERCOL#11 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@22/(byte*) gen_sintab::sintab#10 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#0 gen_sintab::@22/(byte[]) gen_sintab::f_min#10 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#0 gen_sintab::@22/(byte[]) gen_sintab::f_amp#11 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@22/(byte) gen_sintab::length#11 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#0 gen_sintab::@22/(byte[]) gen_sintab::f_i#1 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#0 gen_sintab::@22/(byte*) gen_sintab::f_2pi#1 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#11
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#1
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#11
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#10 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#11) ← ++ *((byte*) BORDERCOL#11)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#11
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#0 )
  to:@end
@end: scope:[]  from @40

Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#0 setFAC::$0
Not aliassing across scopes: setMEMtoFAC::mem#5 setMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: addMEMtoFAC::mem#2 addMEMtoFAC::mem#0
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: divMEMbyFAC::mem#2 divMEMbyFAC::mem#1
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: mulFACbyMEM::mem#2 mulFACbyMEM::mem#0
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: SCREEN#4 SCREEN#0
Not aliassing across scopes: RASTER#3 RASTER#0
Not aliassing across scopes: sin_idx_x#23 sin_idx_x#16
Not aliassing across scopes: sin_idx_y#21 sin_idx_y#17
Not aliassing across scopes: BORDERCOL#13 BORDERCOL#0
Not aliassing across scopes: SPRITES_ENABLE#5 SPRITES_ENABLE#0
Not aliassing across scopes: SPRITES_EXPAND_X#5 SPRITES_EXPAND_X#0
Not aliassing across scopes: SPRITES_EXPAND_Y#5 SPRITES_EXPAND_Y#0
Not aliassing across scopes: SPRITES_XPOS#14 SPRITES_XPOS#0
Not aliassing across scopes: SPRITES_YPOS#14 SPRITES_YPOS#0
Not aliassing across scopes: SPRITES_COLS#6 SPRITES_COLS#0
Not aliassing across scopes: CHARGEN#9 CHARGEN#0
Not aliassing across scopes: PROCPORT#18 PROCPORT#0
Not aliassing identity: RASTER#1 RASTER#1
Not aliassing identity: BORDERCOL#12 BORDERCOL#12
Not aliassing identity: SPRITES_XPOS#10 SPRITES_XPOS#10
Not aliassing identity: SPRITES_YPOS#10 SPRITES_YPOS#10
Not aliassing across scopes: sin_idx_x#0 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#0 sin_idx_y#11
Not aliassing across scopes: SCREEN#1 SCREEN#4
Not aliassing across scopes: SPRITES_ENABLE#4 SPRITES_ENABLE#5
Not aliassing across scopes: SPRITES_EXPAND_X#4 SPRITES_EXPAND_X#5
Not aliassing across scopes: SPRITES_EXPAND_Y#4 SPRITES_EXPAND_Y#5
Not aliassing across scopes: SPRITES_XPOS#15 SPRITES_XPOS#14
Not aliassing across scopes: SPRITES_YPOS#15 SPRITES_YPOS#14
Not aliassing across scopes: SPRITES_COLS#5 SPRITES_COLS#6
Not aliassing across scopes: CHARGEN#8 CHARGEN#9
Not aliassing across scopes: PROCPORT#15 PROCPORT#18
Not aliassing across scopes: BORDERCOL#47 BORDERCOL#13
Not aliassing across scopes: init::sc#0 SCREEN#1
Not aliassing across scopes: gen_sintab::sintab#0 sintab_x#0
Not aliassing across scopes: gen_sintab::length#0 sinlen_x#0
Not aliassing across scopes: gen_sintab::sintab#1 sintab_y#0
Not aliassing across scopes: gen_sintab::length#1 sinlen_y#0
Not aliassing across scopes: BORDERCOL#1 BORDERCOL#12
Not aliassing across scopes: sin_idx_x#9 sin_idx_x#13
Not aliassing across scopes: sin_idx_y#9 sin_idx_y#13
Not aliassing across scopes: SPRITES_XPOS#3 SPRITES_XPOS#10
Not aliassing across scopes: SPRITES_YPOS#3 SPRITES_YPOS#10
Not aliassing across scopes: anim::xidx#0 sin_idx_x#9
Not aliassing across scopes: anim::yidx#0 sin_idx_y#9
Not aliassing across scopes: SPRITES_ENABLE#1 SPRITES_ENABLE#2
Not aliassing across scopes: SPRITES_EXPAND_X#1 SPRITES_EXPAND_X#2
Not aliassing across scopes: SPRITES_EXPAND_Y#1 SPRITES_EXPAND_Y#2
Not aliassing across scopes: SCREEN#3 SCREEN#2
Not aliassing across scopes: SPRITES_XPOS#5 SPRITES_XPOS#11
Not aliassing across scopes: SPRITES_YPOS#5 SPRITES_YPOS#11
Not aliassing across scopes: SPRITES_COLS#2 SPRITES_COLS#3
Not aliassing across scopes: CHARGEN#3 CHARGEN#5
Not aliassing across scopes: PROCPORT#5 PROCPORT#10
Not aliassing across scopes: gen_sprites::spr#0 sprites#0
Not aliassing across scopes: gen_chargen_sprite::ch#0 gen_sprites::$0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::ch#1 gen_chargen_sprite::ch#0
Not aliassing across scopes: CHARGEN#1 CHARGEN#2
Not aliassing across scopes: PROCPORT#1 PROCPORT#3
Not aliassing across scopes: gen_chargen_sprite::sprite#12 gen_chargen_sprite::sprite#0
Not aliassing across scopes: gen_sintab::max#2 gen_sintab::max#0
Not aliassing across scopes: gen_sintab::min#2 gen_sintab::min#0
Not aliassing across scopes: gen_sintab::length#10 gen_sintab::length#0
Not aliassing across scopes: gen_sintab::sintab#12 gen_sintab::sintab#0
Not aliassing across scopes: BORDERCOL#30 BORDERCOL#42
Not aliassing across scopes: setFAC::w#0 gen_sintab::$0
Not aliassing across scopes: setFAC::w#1 gen_sintab::$3
Not aliassing across scopes: setMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: divMEMbyFAC::mem#0 gen_sintab::f_amp#0
Not aliassing across scopes: setMEMtoFAC::mem#2 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#3 gen_sintab::f_min#0
Not aliassing across scopes: setFAC::w#3 gen_sintab::$13
Not aliassing across scopes: mulFACbyMEM::mem#0 gen_sintab::f_2pi#1
Not aliassing across scopes: setMEMtoFAC::mem#4 gen_sintab::f_i#1
Not aliassing across scopes: setFAC::w#4 gen_sintab::$17
Not aliassing across scopes: divMEMbyFAC::mem#1 gen_sintab::f_i#1
Not aliassing across scopes: mulFACbyMEM::mem#1 gen_sintab::f_amp#11
Not aliassing across scopes: addMEMtoFAC::mem#1 gen_sintab::f_min#10
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Not aliassing across scopes: sin_idx_x#12 sin_idx_x#0
Not aliassing across scopes: sin_idx_y#12 sin_idx_y#0
Alias (byte) anim::yidx#3 = (byte) anim::yidx#4 
Alias (byte) anim::j2#3 = (byte) anim::j2#5 (byte) anim::j2#4 
Alias (byte) anim::j#2 = (byte) anim::j#3 (byte) anim::j#5 
Alias (byte*) SPRITES_XPOS#1 = (byte*) SPRITES_XPOS#7 (byte*) SPRITES_XPOS#4 
Alias (byte*) SPRITES_YPOS#1 = (byte*) SPRITES_YPOS#7 (byte*) SPRITES_YPOS#4 
Alias (byte) sin_idx_x#10 = (byte) sin_idx_x#18 (byte) sin_idx_x#24 
Alias (byte) sin_idx_y#10 = (byte) sin_idx_y#22 (byte) sin_idx_y#25 (byte) sin_idx_y#14 
Alias (byte*) BORDERCOL#10 = (byte*) BORDERCOL#18 (byte*) BORDERCOL#22 (byte*) BORDERCOL#5 (byte*) BORDERCOL#2 
Alias (byte) anim::xidx#5 = (byte) anim::xidx#6 
Alias (byte) sin_idx_x#11 = (byte) sin_idx_x#20 
Alias (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#7 
Alias (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#6 
Alias (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#7 
Alias (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#7 
Alias (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#7 
Alias (byte) gen_chargen_sprite::y#10 = (byte) gen_chargen_sprite::y#8 
Alias (byte*) gen_chargen_sprite::chargen#7 = (byte*) gen_chargen_sprite::chargen#8 
Alias (byte*) PROCPORT#14 = (byte*) PROCPORT#16 
Alias (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#3 
Alias (byte) gen_chargen_sprite::c#2 = (byte) gen_chargen_sprite::c#4 
Alias (byte) gen_chargen_sprite::bits#3 = (byte) gen_chargen_sprite::bits#5 
Alias (byte) gen_chargen_sprite::x#2 = (byte) gen_chargen_sprite::x#4 
Alias (byte) gen_chargen_sprite::y#3 = (byte) gen_chargen_sprite::y#6 
Alias (byte*) gen_chargen_sprite::chargen#2 = (byte*) gen_chargen_sprite::chargen#5 
Alias (byte*) PROCPORT#11 = (byte*) PROCPORT#2 
Succesful SSA optimization Pass2AliasElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#14 ← phi( @39/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#14 ← phi( @39/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#13 ← phi( @39/(byte*) BORDERCOL#0 )
  (byte) sin_idx_y#21 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#23 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#3 ← phi( @39/(byte*) RASTER#0 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#0 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@1/(byte*) SPRITES_YPOS#10 main::@2/(byte*) SPRITES_YPOS#10 main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@1/(byte*) SPRITES_XPOS#10 main::@2/(byte*) SPRITES_XPOS#10 main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#12 ← phi( main::@1/(byte*) BORDERCOL#12 main::@2/(byte*) BORDERCOL#12 main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#0 main::@2/(byte) sin_idx_y#13 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#0 main::@2/(byte) sin_idx_x#13 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@1/(byte*) RASTER#1 main::@2/(byte*) RASTER#1 main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte) sin_idx_y#0 ← phi( main::@3/(byte) sin_idx_y#11 )
  (byte) sin_idx_x#0 ← phi( main::@3/(byte) sin_idx_x#11 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#13 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#14 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#42 ← phi( init/(byte*) BORDERCOL#47 init::@1/(byte*) BORDERCOL#42 )
  (byte*) PROCPORT#10 ← phi( init/(byte*) PROCPORT#15 init::@1/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#5 ← phi( init/(byte*) CHARGEN#8 init::@1/(byte*) CHARGEN#5 )
  (byte*) SPRITES_COLS#3 ← phi( init/(byte*) SPRITES_COLS#5 init::@1/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 init::@1/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 init::@1/(byte*) SPRITES_XPOS#11 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 init::@1/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init/(byte*) SPRITES_EXPAND_X#4 init::@1/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#2 ← phi( init/(byte*) SPRITES_ENABLE#4 init::@1/(byte*) SPRITES_ENABLE#2 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 init::@1/(byte*) SCREEN#2 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x#16 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#17 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#10 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#12 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#10 ← phi( anim/(byte*) BORDERCOL#1 anim::@3/(byte*) BORDERCOL#10 )
  (byte) sin_idx_y#10 ← phi( anim/(byte) sin_idx_y#9 anim::@3/(byte) sin_idx_y#10 )
  (byte) sin_idx_x#10 ← phi( anim/(byte) sin_idx_x#9 anim::@3/(byte) sin_idx_x#10 )
  (byte) anim::j#2 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 anim::@3/(byte*) SPRITES_YPOS#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 anim::@3/(byte*) SPRITES_XPOS#1 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (boolean~) anim::$4 ← (byte) anim::xidx#1 < (byte) sinlen_x#0
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  (boolean~) anim::$8 ← (byte) anim::yidx#1 < (byte) sinlen_y#0
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$12 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$14 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((byte*) BORDERCOL#10) ← -- *((byte*) BORDERCOL#10)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*) place_sprites::sprites_ptr#0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte) place_sprites::spr_id#0 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 place_sprites::@1/(byte*) SPRITES_COLS#1 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 place_sprites::@1/(byte*) SPRITES_YPOS#2 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 place_sprites::@1/(byte*) SPRITES_XPOS#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 place_sprites::@1/(byte*) place_sprites::sprites_ptr#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 gen_sprites::@3/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 gen_sprites::@3/(byte*) CHARGEN#2 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 gen_sprites::@3/(byte[]) gen_sprites::cml#1 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#3 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$6 ← (byte~) gen_chargen_sprite::$4 == (byte/signed byte/word/signed word) 0
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 gen_chargen_sprite::@5/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#10 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::y#3 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::x#2 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#2 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::bits#3 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::c#2 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#11) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#30 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 gen_sintab::@22/(byte*) BORDERCOL#11 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 gen_sintab::@22/(byte*) gen_sintab::sintab#10 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#0 gen_sintab::@22/(byte[]) gen_sintab::f_min#10 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#0 gen_sintab::@22/(byte[]) gen_sintab::f_amp#11 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 gen_sintab::@22/(byte) gen_sintab::length#11 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#0 gen_sintab::@22/(byte[]) gen_sintab::f_i#1 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#0 gen_sintab::@22/(byte*) gen_sintab::f_2pi#1 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#11
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#1
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#11
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#10 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#11) ← ++ *((byte*) BORDERCOL#11)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#11
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#0 )
  to:@end
@end: scope:[]  from @40

Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#0 setFAC::$0
Not aliassing across scopes: setMEMtoFAC::mem#5 setMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: addMEMtoFAC::mem#2 addMEMtoFAC::mem#0
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: divMEMbyFAC::mem#2 divMEMbyFAC::mem#1
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: mulFACbyMEM::mem#2 mulFACbyMEM::mem#0
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: SCREEN#4 SCREEN#0
Not aliassing across scopes: RASTER#3 RASTER#0
Not aliassing across scopes: sin_idx_x#23 sin_idx_x#16
Not aliassing across scopes: sin_idx_y#21 sin_idx_y#17
Not aliassing across scopes: BORDERCOL#13 BORDERCOL#0
Not aliassing across scopes: SPRITES_ENABLE#5 SPRITES_ENABLE#0
Not aliassing across scopes: SPRITES_EXPAND_X#5 SPRITES_EXPAND_X#0
Not aliassing across scopes: SPRITES_EXPAND_Y#5 SPRITES_EXPAND_Y#0
Not aliassing across scopes: SPRITES_XPOS#14 SPRITES_XPOS#0
Not aliassing across scopes: SPRITES_YPOS#14 SPRITES_YPOS#0
Not aliassing across scopes: SPRITES_COLS#6 SPRITES_COLS#0
Not aliassing across scopes: CHARGEN#9 CHARGEN#0
Not aliassing across scopes: PROCPORT#18 PROCPORT#0
Not aliassing identity: RASTER#1 RASTER#1
Not aliassing identity: BORDERCOL#12 BORDERCOL#12
Not aliassing identity: SPRITES_XPOS#10 SPRITES_XPOS#10
Not aliassing identity: SPRITES_YPOS#10 SPRITES_YPOS#10
Not aliassing across scopes: sin_idx_x#0 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#0 sin_idx_y#11
Not aliassing across scopes: SCREEN#1 SCREEN#4
Not aliassing across scopes: SPRITES_ENABLE#4 SPRITES_ENABLE#5
Not aliassing across scopes: SPRITES_EXPAND_X#4 SPRITES_EXPAND_X#5
Not aliassing across scopes: SPRITES_EXPAND_Y#4 SPRITES_EXPAND_Y#5
Not aliassing across scopes: SPRITES_XPOS#15 SPRITES_XPOS#14
Not aliassing across scopes: SPRITES_YPOS#15 SPRITES_YPOS#14
Not aliassing across scopes: SPRITES_COLS#5 SPRITES_COLS#6
Not aliassing across scopes: CHARGEN#8 CHARGEN#9
Not aliassing across scopes: PROCPORT#15 PROCPORT#18
Not aliassing across scopes: BORDERCOL#47 BORDERCOL#13
Not aliassing across scopes: init::sc#0 SCREEN#1
Not aliassing across scopes: gen_sintab::sintab#0 sintab_x#0
Not aliassing across scopes: gen_sintab::length#0 sinlen_x#0
Not aliassing across scopes: gen_sintab::sintab#1 sintab_y#0
Not aliassing across scopes: gen_sintab::length#1 sinlen_y#0
Not aliassing across scopes: BORDERCOL#1 BORDERCOL#12
Not aliassing across scopes: sin_idx_x#9 sin_idx_x#13
Not aliassing across scopes: sin_idx_y#9 sin_idx_y#13
Not aliassing across scopes: SPRITES_XPOS#3 SPRITES_XPOS#10
Not aliassing across scopes: SPRITES_YPOS#3 SPRITES_YPOS#10
Not aliassing across scopes: anim::xidx#0 sin_idx_x#9
Not aliassing across scopes: anim::yidx#0 sin_idx_y#9
Not aliassing across scopes: SPRITES_ENABLE#1 SPRITES_ENABLE#2
Not aliassing across scopes: SPRITES_EXPAND_X#1 SPRITES_EXPAND_X#2
Not aliassing across scopes: SPRITES_EXPAND_Y#1 SPRITES_EXPAND_Y#2
Not aliassing across scopes: SCREEN#3 SCREEN#2
Not aliassing across scopes: SPRITES_XPOS#5 SPRITES_XPOS#11
Not aliassing across scopes: SPRITES_YPOS#5 SPRITES_YPOS#11
Not aliassing across scopes: SPRITES_COLS#2 SPRITES_COLS#3
Not aliassing across scopes: CHARGEN#3 CHARGEN#5
Not aliassing across scopes: PROCPORT#5 PROCPORT#10
Not aliassing across scopes: gen_sprites::spr#0 sprites#0
Not aliassing across scopes: gen_chargen_sprite::ch#0 gen_sprites::$0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::ch#1 gen_chargen_sprite::ch#0
Not aliassing across scopes: CHARGEN#1 CHARGEN#2
Not aliassing across scopes: PROCPORT#1 PROCPORT#3
Not aliassing across scopes: gen_chargen_sprite::sprite#12 gen_chargen_sprite::sprite#0
Not aliassing across scopes: gen_sintab::max#2 gen_sintab::max#0
Not aliassing across scopes: gen_sintab::min#2 gen_sintab::min#0
Not aliassing across scopes: gen_sintab::length#10 gen_sintab::length#0
Not aliassing across scopes: gen_sintab::sintab#12 gen_sintab::sintab#0
Not aliassing across scopes: BORDERCOL#30 BORDERCOL#42
Not aliassing across scopes: setFAC::w#0 gen_sintab::$0
Not aliassing across scopes: setFAC::w#1 gen_sintab::$3
Not aliassing across scopes: setMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#1 gen_sintab::f_amp#0
Not aliassing across scopes: divMEMbyFAC::mem#0 gen_sintab::f_amp#0
Not aliassing across scopes: setMEMtoFAC::mem#2 gen_sintab::f_amp#0
Not aliassing across scopes: addMEMtoFAC::mem#0 gen_sintab::f_min#0
Not aliassing across scopes: setMEMtoFAC::mem#3 gen_sintab::f_min#0
Not aliassing across scopes: setFAC::w#3 gen_sintab::$13
Not aliassing across scopes: mulFACbyMEM::mem#0 gen_sintab::f_2pi#1
Not aliassing across scopes: setMEMtoFAC::mem#4 gen_sintab::f_i#1
Not aliassing across scopes: setFAC::w#4 gen_sintab::$17
Not aliassing across scopes: divMEMbyFAC::mem#1 gen_sintab::f_i#1
Not aliassing across scopes: mulFACbyMEM::mem#1 gen_sintab::f_amp#11
Not aliassing across scopes: addMEMtoFAC::mem#1 gen_sintab::f_min#10
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Not aliassing across scopes: sin_idx_x#12 sin_idx_x#0
Not aliassing across scopes: sin_idx_y#12 sin_idx_y#0
Self Phi Eliminated (byte*) RASTER#1
Self Phi Eliminated (byte*) RASTER#1
Self Phi Eliminated (byte) sin_idx_x#13
Self Phi Eliminated (byte) sin_idx_y#13
Self Phi Eliminated (byte*) BORDERCOL#12
Self Phi Eliminated (byte*) BORDERCOL#12
Self Phi Eliminated (byte*) SPRITES_XPOS#10
Self Phi Eliminated (byte*) SPRITES_XPOS#10
Self Phi Eliminated (byte*) SPRITES_YPOS#10
Self Phi Eliminated (byte*) SPRITES_YPOS#10
Self Phi Eliminated (byte*) SCREEN#2
Self Phi Eliminated (byte*) SPRITES_ENABLE#2
Self Phi Eliminated (byte*) SPRITES_EXPAND_X#2
Self Phi Eliminated (byte*) SPRITES_EXPAND_Y#2
Self Phi Eliminated (byte*) SPRITES_XPOS#11
Self Phi Eliminated (byte*) SPRITES_YPOS#11
Self Phi Eliminated (byte*) SPRITES_COLS#3
Self Phi Eliminated (byte*) CHARGEN#5
Self Phi Eliminated (byte*) PROCPORT#10
Self Phi Eliminated (byte*) BORDERCOL#42
Self Phi Eliminated (byte*) SPRITES_XPOS#1
Self Phi Eliminated (byte*) SPRITES_YPOS#1
Self Phi Eliminated (byte) sin_idx_x#10
Self Phi Eliminated (byte) sin_idx_y#10
Self Phi Eliminated (byte*) BORDERCOL#10
Self Phi Eliminated (byte*) place_sprites::sprites_ptr#1
Self Phi Eliminated (byte*) SPRITES_XPOS#2
Self Phi Eliminated (byte*) SPRITES_YPOS#2
Self Phi Eliminated (byte*) SPRITES_COLS#1
Self Phi Eliminated (byte[]) gen_sprites::cml#1
Self Phi Eliminated (byte*) CHARGEN#2
Self Phi Eliminated (byte*) PROCPORT#3
Self Phi Eliminated (byte) gen_chargen_sprite::c#2
Self Phi Eliminated (byte) gen_chargen_sprite::bits#3
Self Phi Eliminated (byte) gen_chargen_sprite::x#2
Self Phi Eliminated (byte) gen_chargen_sprite::y#3
Self Phi Eliminated (byte*) gen_chargen_sprite::chargen#2
Self Phi Eliminated (byte*) PROCPORT#11
Self Phi Eliminated (byte*) gen_sintab::f_2pi#1
Self Phi Eliminated (byte[]) gen_sintab::f_i#1
Self Phi Eliminated (byte) gen_sintab::length#11
Self Phi Eliminated (byte[]) gen_sintab::f_amp#11
Self Phi Eliminated (byte[]) gen_sintab::f_min#10
Self Phi Eliminated (byte*) gen_sintab::sintab#10
Self Phi Eliminated (byte*) BORDERCOL#11
Succesful SSA optimization Pass2SelfPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  (byte*) PROCPORT#18 ← phi( @39/(byte*) PROCPORT#0 )
  (byte*) CHARGEN#9 ← phi( @39/(byte*) CHARGEN#0 )
  (byte*) SPRITES_COLS#6 ← phi( @39/(byte*) SPRITES_COLS#0 )
  (byte*) SPRITES_YPOS#14 ← phi( @39/(byte*) SPRITES_YPOS#0 )
  (byte*) SPRITES_XPOS#14 ← phi( @39/(byte*) SPRITES_XPOS#0 )
  (byte*) SPRITES_EXPAND_Y#5 ← phi( @39/(byte*) SPRITES_EXPAND_Y#0 )
  (byte*) SPRITES_EXPAND_X#5 ← phi( @39/(byte*) SPRITES_EXPAND_X#0 )
  (byte*) SPRITES_ENABLE#5 ← phi( @39/(byte*) SPRITES_ENABLE#0 )
  (byte*) BORDERCOL#13 ← phi( @39/(byte*) BORDERCOL#0 )
  (byte) sin_idx_y#21 ← phi( @39/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#23 ← phi( @39/(byte) sin_idx_x#16 )
  (byte*) RASTER#3 ← phi( @39/(byte*) RASTER#0 )
  (byte*) SCREEN#4 ← phi( @39/(byte*) SCREEN#0 )
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte*) SPRITES_YPOS#10 ← phi( main::@5/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#10 ← phi( main::@5/(byte*) SPRITES_XPOS#14 )
  (byte*) BORDERCOL#12 ← phi( main::@5/(byte*) BORDERCOL#13 )
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#0 main::@5/(byte) sin_idx_y#21 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#0 main::@5/(byte) sin_idx_x#23 )
  (byte*) RASTER#1 ← phi( main::@5/(byte*) RASTER#3 )
  (boolean~) main::$1 ← *((byte*) RASTER#1) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  (byte) sin_idx_y#0 ← phi( main::@3/(byte) sin_idx_y#11 )
  (byte) sin_idx_x#0 ← phi( main::@3/(byte) sin_idx_x#11 )
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  (byte*) BORDERCOL#47 ← phi( main/(byte*) BORDERCOL#13 )
  (byte*) PROCPORT#15 ← phi( main/(byte*) PROCPORT#18 )
  (byte*) CHARGEN#8 ← phi( main/(byte*) CHARGEN#9 )
  (byte*) SPRITES_COLS#5 ← phi( main/(byte*) SPRITES_COLS#6 )
  (byte*) SPRITES_YPOS#15 ← phi( main/(byte*) SPRITES_YPOS#14 )
  (byte*) SPRITES_XPOS#15 ← phi( main/(byte*) SPRITES_XPOS#14 )
  (byte*) SPRITES_EXPAND_Y#4 ← phi( main/(byte*) SPRITES_EXPAND_Y#5 )
  (byte*) SPRITES_EXPAND_X#4 ← phi( main/(byte*) SPRITES_EXPAND_X#5 )
  (byte*) SPRITES_ENABLE#4 ← phi( main/(byte*) SPRITES_ENABLE#5 )
  (byte*) SCREEN#1 ← phi( main/(byte*) SCREEN#4 )
  (byte*) init::sc#0 ← (byte*) SCREEN#1
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) BORDERCOL#42 ← phi( init/(byte*) BORDERCOL#47 )
  (byte*) PROCPORT#10 ← phi( init/(byte*) PROCPORT#15 )
  (byte*) CHARGEN#5 ← phi( init/(byte*) CHARGEN#8 )
  (byte*) SPRITES_COLS#3 ← phi( init/(byte*) SPRITES_COLS#5 )
  (byte*) SPRITES_YPOS#11 ← phi( init/(byte*) SPRITES_YPOS#15 )
  (byte*) SPRITES_XPOS#11 ← phi( init/(byte*) SPRITES_XPOS#15 )
  (byte*) SPRITES_EXPAND_Y#2 ← phi( init/(byte*) SPRITES_EXPAND_Y#4 )
  (byte*) SPRITES_EXPAND_X#2 ← phi( init/(byte*) SPRITES_EXPAND_X#4 )
  (byte*) SPRITES_ENABLE#2 ← phi( init/(byte*) SPRITES_ENABLE#4 )
  (byte*) SCREEN#2 ← phi( init/(byte*) SCREEN#1 )
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#2 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x#16 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#17 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  (byte*) SPRITES_YPOS#3 ← phi( main::@3/(byte*) SPRITES_YPOS#10 )
  (byte*) SPRITES_XPOS#3 ← phi( main::@3/(byte*) SPRITES_XPOS#10 )
  (byte) sin_idx_y#9 ← phi( main::@3/(byte) sin_idx_y#13 )
  (byte) sin_idx_x#9 ← phi( main::@3/(byte) sin_idx_x#13 )
  (byte*) BORDERCOL#1 ← phi( main::@3/(byte*) BORDERCOL#12 )
  *((byte*) BORDERCOL#1) ← ++ *((byte*) BORDERCOL#1)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#9
  (byte) anim::yidx#0 ← (byte) sin_idx_y#9
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte*) BORDERCOL#10 ← phi( anim/(byte*) BORDERCOL#1 )
  (byte) sin_idx_y#10 ← phi( anim/(byte) sin_idx_y#9 )
  (byte) sin_idx_x#10 ← phi( anim/(byte) sin_idx_x#9 )
  (byte) anim::j#2 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte*) SPRITES_YPOS#1 ← phi( anim/(byte*) SPRITES_YPOS#3 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte*) SPRITES_XPOS#1 ← phi( anim/(byte*) SPRITES_XPOS#3 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#1 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (boolean~) anim::$4 ← (byte) anim::xidx#1 < (byte) sinlen_x#0
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  (boolean~) anim::$8 ← (byte) anim::yidx#1 < (byte) sinlen_y#0
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#10
  (boolean~) anim::$12 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#10
  (boolean~) anim::$14 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((byte*) BORDERCOL#10) ← -- *((byte*) BORDERCOL#10)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  (byte*) SPRITES_COLS#2 ← phi( init::@2/(byte*) SPRITES_COLS#3 )
  (byte*) SPRITES_YPOS#5 ← phi( init::@2/(byte*) SPRITES_YPOS#11 )
  (byte*) SPRITES_XPOS#5 ← phi( init::@2/(byte*) SPRITES_XPOS#11 )
  (byte*) SCREEN#3 ← phi( init::@2/(byte*) SCREEN#2 )
  (byte*) SPRITES_EXPAND_Y#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_Y#2 )
  (byte*) SPRITES_EXPAND_X#1 ← phi( init::@2/(byte*) SPRITES_EXPAND_X#2 )
  (byte*) SPRITES_ENABLE#1 ← phi( init::@2/(byte*) SPRITES_ENABLE#2 )
  *((byte*) SPRITES_ENABLE#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#1) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#1) ← (byte/signed byte/word/signed word) 127
  (byte*) place_sprites::sprites_ptr#0 ← (byte*) SCREEN#3 + (word/signed word) 1016
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte) place_sprites::spr_id#0 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte*) SPRITES_COLS#1 ← phi( place_sprites/(byte*) SPRITES_COLS#2 )
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte*) SPRITES_YPOS#2 ← phi( place_sprites/(byte*) SPRITES_YPOS#5 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte*) SPRITES_XPOS#2 ← phi( place_sprites/(byte*) SPRITES_XPOS#5 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte*) place_sprites::sprites_ptr#1 ← phi( place_sprites/(byte*) place_sprites::sprites_ptr#0 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#2 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#2 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#1 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) PROCPORT#5 ← phi( init::@3/(byte*) PROCPORT#10 )
  (byte*) CHARGEN#3 ← phi( init::@3/(byte*) CHARGEN#5 )
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) PROCPORT#3 ← phi( gen_sprites/(byte*) PROCPORT#5 )
  (byte*) CHARGEN#2 ← phi( gen_sprites/(byte*) CHARGEN#3 )
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte[]) gen_sprites::cml#1 ← phi( gen_sprites/(byte[]) gen_sprites::cml#0 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#1 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (byte*) gen_chargen_sprite::sprite#12 ← phi( gen_sprites::@1/(byte*) gen_chargen_sprite::sprite#0 )
  (byte*) PROCPORT#1 ← phi( gen_sprites::@1/(byte*) PROCPORT#3 )
  (byte*) CHARGEN#1 ← phi( gen_sprites::@1/(byte*) CHARGEN#2 )
  (byte) gen_chargen_sprite::ch#1 ← phi( gen_sprites::@1/(byte) gen_chargen_sprite::ch#0 )
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#1
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*) CHARGEN#1 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((byte*) PROCPORT#1) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#1 gen_chargen_sprite::@9/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#12 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#11 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#2 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#3 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$6 ← (byte~) gen_chargen_sprite::$4 == (byte/signed byte/word/signed word) 0
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) PROCPORT#11 ← phi( gen_chargen_sprite::@3/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#2 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::x#6 )
  (byte) gen_chargen_sprite::bits#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::bits#2 )
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::c#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::c#3 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#2
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#2
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#3
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#11) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) BORDERCOL#30 ← phi( init::@4/(byte*) BORDERCOL#42 init::@5/(byte*) BORDERCOL#42 )
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte*) BORDERCOL#11 ← phi( gen_sintab::@13/(byte*) BORDERCOL#30 )
  (byte*) gen_sintab::sintab#10 ← phi( gen_sintab::@13/(byte*) gen_sintab::sintab#12 )
  (byte[]) gen_sintab::f_min#10 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_min#0 )
  (byte[]) gen_sintab::f_amp#11 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_amp#0 )
  (byte) gen_sintab::length#11 ← phi( gen_sintab::@13/(byte) gen_sintab::length#10 )
  (byte[]) gen_sintab::f_i#1 ← phi( gen_sintab::@13/(byte[]) gen_sintab::f_i#0 )
  (byte*) gen_sintab::f_2pi#1 ← phi( gen_sintab::@13/(byte*) gen_sintab::f_2pi#0 )
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#1
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#11
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#1
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#11
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#10 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#11) ← ++ *((byte*) BORDERCOL#11)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#11
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  (byte) sin_idx_y#12 ← phi( @39/(byte) sin_idx_y#0 )
  (byte) sin_idx_x#12 ← phi( @39/(byte) sin_idx_x#0 )
  to:@end
@end: scope:[]  from @40

Redundant Phi (byte*) SCREEN#4 (byte*) SCREEN#0
Redundant Phi (byte*) RASTER#3 (byte*) RASTER#0
Redundant Phi (byte) sin_idx_x#23 (byte) sin_idx_x#16
Redundant Phi (byte) sin_idx_y#21 (byte) sin_idx_y#17
Redundant Phi (byte*) BORDERCOL#13 (byte*) BORDERCOL#0
Redundant Phi (byte*) SPRITES_ENABLE#5 (byte*) SPRITES_ENABLE#0
Redundant Phi (byte*) SPRITES_EXPAND_X#5 (byte*) SPRITES_EXPAND_X#0
Redundant Phi (byte*) SPRITES_EXPAND_Y#5 (byte*) SPRITES_EXPAND_Y#0
Redundant Phi (byte*) SPRITES_XPOS#14 (byte*) SPRITES_XPOS#0
Redundant Phi (byte*) SPRITES_YPOS#14 (byte*) SPRITES_YPOS#0
Redundant Phi (byte*) SPRITES_COLS#6 (byte*) SPRITES_COLS#0
Redundant Phi (byte*) CHARGEN#9 (byte*) CHARGEN#0
Redundant Phi (byte*) PROCPORT#18 (byte*) PROCPORT#0
Redundant Phi (byte*) RASTER#1 (byte*) RASTER#3
Redundant Phi (byte*) BORDERCOL#12 (byte*) BORDERCOL#13
Redundant Phi (byte*) SPRITES_XPOS#10 (byte*) SPRITES_XPOS#14
Redundant Phi (byte*) SPRITES_YPOS#10 (byte*) SPRITES_YPOS#14
Redundant Phi (byte) sin_idx_x#0 (byte) sin_idx_x#11
Redundant Phi (byte) sin_idx_y#0 (byte) sin_idx_y#11
Redundant Phi (byte*) SCREEN#1 (byte*) SCREEN#4
Redundant Phi (byte*) SPRITES_ENABLE#4 (byte*) SPRITES_ENABLE#5
Redundant Phi (byte*) SPRITES_EXPAND_X#4 (byte*) SPRITES_EXPAND_X#5
Redundant Phi (byte*) SPRITES_EXPAND_Y#4 (byte*) SPRITES_EXPAND_Y#5
Redundant Phi (byte*) SPRITES_XPOS#15 (byte*) SPRITES_XPOS#14
Redundant Phi (byte*) SPRITES_YPOS#15 (byte*) SPRITES_YPOS#14
Redundant Phi (byte*) SPRITES_COLS#5 (byte*) SPRITES_COLS#6
Redundant Phi (byte*) CHARGEN#8 (byte*) CHARGEN#9
Redundant Phi (byte*) PROCPORT#15 (byte*) PROCPORT#18
Redundant Phi (byte*) BORDERCOL#47 (byte*) BORDERCOL#13
Redundant Phi (byte*) SCREEN#2 (byte*) SCREEN#1
Redundant Phi (byte*) SPRITES_ENABLE#2 (byte*) SPRITES_ENABLE#4
Redundant Phi (byte*) SPRITES_EXPAND_X#2 (byte*) SPRITES_EXPAND_X#4
Redundant Phi (byte*) SPRITES_EXPAND_Y#2 (byte*) SPRITES_EXPAND_Y#4
Redundant Phi (byte*) SPRITES_XPOS#11 (byte*) SPRITES_XPOS#15
Redundant Phi (byte*) SPRITES_YPOS#11 (byte*) SPRITES_YPOS#15
Redundant Phi (byte*) SPRITES_COLS#3 (byte*) SPRITES_COLS#5
Redundant Phi (byte*) CHARGEN#5 (byte*) CHARGEN#8
Redundant Phi (byte*) PROCPORT#10 (byte*) PROCPORT#15
Redundant Phi (byte*) BORDERCOL#42 (byte*) BORDERCOL#47
Redundant Phi (byte*) BORDERCOL#1 (byte*) BORDERCOL#12
Redundant Phi (byte) sin_idx_x#9 (byte) sin_idx_x#13
Redundant Phi (byte) sin_idx_y#9 (byte) sin_idx_y#13
Redundant Phi (byte*) SPRITES_XPOS#3 (byte*) SPRITES_XPOS#10
Redundant Phi (byte*) SPRITES_YPOS#3 (byte*) SPRITES_YPOS#10
Redundant Phi (byte*) SPRITES_XPOS#1 (byte*) SPRITES_XPOS#3
Redundant Phi (byte*) SPRITES_YPOS#1 (byte*) SPRITES_YPOS#3
Redundant Phi (byte) sin_idx_x#10 (byte) sin_idx_x#9
Redundant Phi (byte) sin_idx_y#10 (byte) sin_idx_y#9
Redundant Phi (byte*) BORDERCOL#10 (byte*) BORDERCOL#1
Redundant Phi (byte*) SPRITES_ENABLE#1 (byte*) SPRITES_ENABLE#2
Redundant Phi (byte*) SPRITES_EXPAND_X#1 (byte*) SPRITES_EXPAND_X#2
Redundant Phi (byte*) SPRITES_EXPAND_Y#1 (byte*) SPRITES_EXPAND_Y#2
Redundant Phi (byte*) SCREEN#3 (byte*) SCREEN#2
Redundant Phi (byte*) SPRITES_XPOS#5 (byte*) SPRITES_XPOS#11
Redundant Phi (byte*) SPRITES_YPOS#5 (byte*) SPRITES_YPOS#11
Redundant Phi (byte*) SPRITES_COLS#2 (byte*) SPRITES_COLS#3
Redundant Phi (byte*) place_sprites::sprites_ptr#1 (byte*) place_sprites::sprites_ptr#0
Redundant Phi (byte*) SPRITES_XPOS#2 (byte*) SPRITES_XPOS#5
Redundant Phi (byte*) SPRITES_YPOS#2 (byte*) SPRITES_YPOS#5
Redundant Phi (byte*) SPRITES_COLS#1 (byte*) SPRITES_COLS#2
Redundant Phi (byte*) CHARGEN#3 (byte*) CHARGEN#5
Redundant Phi (byte*) PROCPORT#5 (byte*) PROCPORT#10
Redundant Phi (byte[]) gen_sprites::cml#1 (byte[]) gen_sprites::cml#0
Redundant Phi (byte*) CHARGEN#2 (byte*) CHARGEN#3
Redundant Phi (byte*) PROCPORT#3 (byte*) PROCPORT#5
Redundant Phi (byte) gen_chargen_sprite::ch#1 (byte) gen_chargen_sprite::ch#0
Redundant Phi (byte*) CHARGEN#1 (byte*) CHARGEN#2
Redundant Phi (byte*) PROCPORT#1 (byte*) PROCPORT#3
Redundant Phi (byte*) gen_chargen_sprite::sprite#12 (byte*) gen_chargen_sprite::sprite#0
Redundant Phi (byte) gen_chargen_sprite::c#2 (byte) gen_chargen_sprite::c#3
Redundant Phi (byte) gen_chargen_sprite::bits#3 (byte) gen_chargen_sprite::bits#2
Redundant Phi (byte) gen_chargen_sprite::x#2 (byte) gen_chargen_sprite::x#6
Redundant Phi (byte) gen_chargen_sprite::y#3 (byte) gen_chargen_sprite::y#10
Redundant Phi (byte*) gen_chargen_sprite::chargen#2 (byte*) gen_chargen_sprite::chargen#7
Redundant Phi (byte*) PROCPORT#11 (byte*) PROCPORT#14
Redundant Phi (byte*) BORDERCOL#30 (byte*) BORDERCOL#42
Redundant Phi (byte*) gen_sintab::f_2pi#1 (byte*) gen_sintab::f_2pi#0
Redundant Phi (byte[]) gen_sintab::f_i#1 (byte[]) gen_sintab::f_i#0
Redundant Phi (byte) gen_sintab::length#11 (byte) gen_sintab::length#10
Redundant Phi (byte[]) gen_sintab::f_amp#11 (byte[]) gen_sintab::f_amp#0
Redundant Phi (byte[]) gen_sintab::f_min#10 (byte[]) gen_sintab::f_min#0
Redundant Phi (byte*) gen_sintab::sintab#10 (byte*) gen_sintab::sintab#12
Redundant Phi (byte*) BORDERCOL#11 (byte*) BORDERCOL#30
Redundant Phi (byte) sin_idx_x#12 (byte) sin_idx_x#0
Redundant Phi (byte) sin_idx_y#12 (byte) sin_idx_y#0
Succesful SSA optimization Pass2RedundantPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#11 main::@5/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#11 main::@5/(byte) sin_idx_x#16 )
  (boolean~) main::$1 ← *((byte*) RASTER#0) != (byte/word/signed word) 255
  if((boolean~) main::$1) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  (byte*) init::sc#0 ← (byte*) SCREEN#0
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#0 + (word/signed word) 1000
  (boolean~) init::$1 ← (byte*) init::sc#1 < (byte*~) init::$0
  if((boolean~) init::$1) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x#16 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#17 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  *((byte*) BORDERCOL#0) ← ++ *((byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  (boolean~) anim::$4 ← (byte) anim::xidx#1 < (byte) sinlen_x#0
  if((boolean~) anim::$4) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  (boolean~) anim::$8 ← (byte) anim::yidx#1 < (byte) sinlen_y#0
  if((boolean~) anim::$8) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  (boolean~) anim::$10 ← (byte) anim::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) anim::$10) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  (boolean~) anim::$12 ← (byte) sin_idx_x#3 < (byte) sinlen_x#0
  if((boolean~) anim::$12) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  (boolean~) anim::$14 ← (byte) sin_idx_y#3 < (byte) sinlen_y#0
  if((boolean~) anim::$14) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((byte*) BORDERCOL#0) ← -- *((byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  (byte*) place_sprites::sprites_ptr#0 ← (byte*) SCREEN#0 + (word/signed word) 1016
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte) place_sprites::spr_id#0 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  (boolean~) place_sprites::$6 ← (byte) place_sprites::j#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) place_sprites::$6) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  (boolean~) gen_sprites::$3 ← (byte) gen_sprites::i#1 != (byte/signed byte/word/signed word) 7
  if((boolean~) gen_sprites::$3) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  (boolean~) gen_chargen_sprite::$6 ← (byte~) gen_chargen_sprite::$4 == (byte/signed byte/word/signed word) 0
  if((boolean~) gen_chargen_sprite::$6) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  (boolean~) gen_chargen_sprite::$10 ← (byte) gen_chargen_sprite::s_gen_cnt#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$10) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  (boolean~) gen_chargen_sprite::$11 ← (byte) gen_chargen_sprite::b#1 != (byte/signed byte/word/signed word) 3
  if((boolean~) gen_chargen_sprite::$11) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  (boolean~) gen_chargen_sprite::$13 ← (byte) gen_chargen_sprite::x#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$13) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  (boolean~) gen_chargen_sprite::$15 ← (byte) gen_chargen_sprite::y#1 != (byte/signed byte/word/signed word) 8
  if((boolean~) gen_chargen_sprite::$15) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#0) ← ++ *((byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  (boolean~) gen_sintab::$25 ← (byte) gen_sintab::i#1 < (byte) gen_sintab::length#10
  if((boolean~) gen_sintab::$25) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  to:@end
@end: scope:[]  from @40

Simple Condition (boolean~) main::$1 if(*((byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
Simple Condition (boolean~) init::$1 if((byte*) init::sc#1<(byte*~) init::$0) goto init::@1
Simple Condition (boolean~) anim::$4 if((byte) anim::xidx#1<(byte) sinlen_x#0) goto anim::@2
Simple Condition (boolean~) anim::$8 if((byte) anim::yidx#1<(byte) sinlen_y#0) goto anim::@3
Simple Condition (boolean~) anim::$10 if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
Simple Condition (boolean~) anim::$12 if((byte) sin_idx_x#3<(byte) sinlen_x#0) goto anim::@4
Simple Condition (boolean~) anim::$14 if((byte) sin_idx_y#3<(byte) sinlen_y#0) goto anim::@5
Simple Condition (boolean~) place_sprites::$6 if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
Simple Condition (boolean~) gen_sprites::$3 if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
Simple Condition (boolean~) gen_chargen_sprite::$6 if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
Simple Condition (boolean~) gen_chargen_sprite::$10 if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
Simple Condition (boolean~) gen_chargen_sprite::$11 if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
Simple Condition (boolean~) gen_chargen_sprite::$13 if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
Simple Condition (boolean~) gen_chargen_sprite::$15 if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
Simple Condition (boolean~) gen_sintab::$25 if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
Succesful SSA optimization Pass2ConditionalJumpSimplification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  (byte*) memLo#0 ← ((byte*)) (byte/word/signed word) 254
  (byte*) memHi#0 ← ((byte*)) (byte/word/signed word) 255
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#0 ← (byte/signed byte/word/signed word) 0
  (word) getFAC::w#1 ← (word) getFAC::w#0 lo= *((byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  (byte*) PROCPORT#0 ← ((byte*)) (byte/signed byte/word/signed word) 1
  (byte*) CHARGEN#0 ← ((byte*)) (word) 53248
  (byte*) SCREEN#0 ← ((byte*)) (word/signed word) 1024
  (byte*) RASTER#0 ← ((byte*)) (word) 53266
  (byte*) BORDERCOL#0 ← ((byte*)) (word) 53280
  (byte*) SPRITES_XPOS#0 ← ((byte*)) (word) 53248
  (byte*) SPRITES_YPOS#0 ← ((byte*)) (word) 53249
  (byte*) SPRITES_ENABLE#0 ← ((byte*)) (word) 53269
  (byte*) SPRITES_EXPAND_Y#0 ← ((byte*)) (word) 53271
  (byte*) SPRITES_EXPAND_X#0 ← ((byte*)) (word) 53277
  (byte*) SPRITES_COLS#0 ← ((byte*)) (word) 53287
  (byte) sinlen_x#0 ← (byte/word/signed word) 221
  (byte[]) sintab_x#0 ← ((byte*)) (word/signed word) 4096
  (byte) sinlen_y#0 ← (byte/word/signed word) 197
  (byte[]) sintab_y#0 ← ((byte*)) (word/signed word) 4352
  (byte[]) sprites#0 ← ((byte*)) (word/signed word) 8192
  to:@34
main: scope:[main]  from @39
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#11 main::@5/(byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#11 main::@5/(byte) sin_idx_x#16 )
  if(*((byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  (byte*) init::sc#0 ← (byte*) SCREEN#0
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (byte*) SCREEN#0 + (word/signed word) 1000
  if((byte*) init::sc#1<(byte*~) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab#0 ← (byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (byte) sinlen_x#0
  (byte) gen_sintab::min#0 ← (byte/signed byte/word/signed word) 16
  (byte) gen_sintab::max#0 ← (byte/word/signed word) 255
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab#1 ← (byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (byte) sinlen_y#0
  (byte) gen_sintab::min#1 ← (byte/signed byte/word/signed word) 48
  (byte) gen_sintab::max#1 ← (byte/word/signed word) 208
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  (byte) sin_idx_x#16 ← (byte/signed byte/word/signed word) 0
  (byte) sin_idx_y#17 ← (byte/signed byte/word/signed word) 0
  to:@39
anim: scope:[anim]  from main::@3
  *((byte*) BORDERCOL#0) ← ++ *((byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  (byte) anim::j2#0 ← (byte/signed byte/word/signed word) 12
  (byte) anim::j#0 ← (byte/signed byte/word/signed word) 0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  (byte) sin_idx_x#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((byte*) BORDERCOL#0) ← -- *((byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  (byte) sin_idx_y#4 ← (byte/signed byte/word/signed word) 0
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  (byte*) place_sprites::sprites_ptr#0 ← (byte*) SCREEN#0 + (word/signed word) 1016
  (byte[]~) place_sprites::$1 ← (byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte) place_sprites::spr_id#0 ← ((byte)) (byte[]~) place_sprites::$1
  (byte) place_sprites::spr_x#0 ← (byte/signed byte/word/signed word) 60
  (byte) place_sprites::j2#0 ← (byte/signed byte/word/signed word) 0
  (byte) place_sprites::col#0 ← (byte/signed byte/word/signed word) 5
  (byte) place_sprites::j#0 ← (byte/signed byte/word/signed word) 0
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte~) place_sprites::$4 ← (byte/signed byte/word/signed word) 7 ^ (byte/signed byte/word/signed word) 5
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte~) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte[]) gen_sprites::cml#0 ← (string) "camelot"
  (byte*) gen_sprites::spr#0 ← (byte[]) sprites#0
  (byte) gen_sprites::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  (byte) gen_chargen_sprite::y#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  (byte) gen_chargen_sprite::s_gen#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#0 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::x#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte) gen_chargen_sprite::c#0 ← (byte/signed byte/word/signed word) 0
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(byte) gen_chargen_sprite::c#1 )
  (byte) gen_chargen_sprite::b#0 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  (byte) gen_chargen_sprite::c#1 ← (byte/signed byte/word/signed word) 1
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte) gen_chargen_sprite::s_gen#2 ← (byte/signed byte/word/signed word) 0
  (byte) gen_chargen_sprite::s_gen_cnt#2 ← (byte/signed byte/word/signed word) 0
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte) gen_sintab::min#0 init::@5/(byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte) gen_sintab::max#0 init::@5/(byte) gen_sintab::max#1 )
  (byte[]) gen_sintab::f_i#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_min#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte[]) gen_sintab::f_amp#0 ← { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
  (byte*) gen_sintab::f_2pi#0 ← ((byte*)) (word) 58085
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  (word) setFAC::w#2 ← (byte/signed byte/word/signed word) 2
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem#0 ← (byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem#2 ← (byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem#0 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem#3 ← (byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  (byte) gen_sintab::i#0 ← (byte/signed byte/word/signed word) 0
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem#0 ← (byte*) gen_sintab::f_2pi#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem#4 ← (byte[]) gen_sintab::f_i#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem#1 ← (byte[]) gen_sintab::f_i#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem#1 ← (byte[]) gen_sintab::f_amp#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem#1 ← (byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((byte*) BORDERCOL#0) ← ++ *((byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  to:@end
@end: scope:[]  from @40

Constant (const byte*) memLo#0 = ((byte*))254
Constant (const byte*) memHi#0 = ((byte*))255
Constant (const word) getFAC::w#0 = 0
Constant (const byte*) PROCPORT#0 = ((byte*))1
Constant (const byte*) CHARGEN#0 = ((byte*))53248
Constant (const byte*) SCREEN#0 = ((byte*))1024
Constant (const byte*) RASTER#0 = ((byte*))53266
Constant (const byte*) BORDERCOL#0 = ((byte*))53280
Constant (const byte*) SPRITES_XPOS#0 = ((byte*))53248
Constant (const byte*) SPRITES_YPOS#0 = ((byte*))53249
Constant (const byte*) SPRITES_ENABLE#0 = ((byte*))53269
Constant (const byte*) SPRITES_EXPAND_Y#0 = ((byte*))53271
Constant (const byte*) SPRITES_EXPAND_X#0 = ((byte*))53277
Constant (const byte*) SPRITES_COLS#0 = ((byte*))53287
Constant (const byte) sinlen_x#0 = 221
Constant (const byte[]) sintab_x#0 = ((byte*))4096
Constant (const byte) sinlen_y#0 = 197
Constant (const byte[]) sintab_y#0 = ((byte*))4352
Constant (const byte[]) sprites#0 = ((byte*))8192
Constant (const byte) gen_sintab::min#0 = 16
Constant (const byte) gen_sintab::max#0 = 255
Constant (const byte) gen_sintab::min#1 = 48
Constant (const byte) gen_sintab::max#1 = 208
Constant (const byte) sin_idx_x#16 = 0
Constant (const byte) sin_idx_y#17 = 0
Constant (const byte) anim::j2#0 = 12
Constant (const byte) anim::j#0 = 0
Constant (const byte) sin_idx_x#4 = 0
Constant (const byte) sin_idx_y#4 = 0
Constant (const byte) place_sprites::spr_x#0 = 60
Constant (const byte) place_sprites::j2#0 = 0
Constant (const byte) place_sprites::col#0 = 5
Constant (const byte) place_sprites::j#0 = 0
Constant (const byte) place_sprites::$4 = 7^5
Constant (const byte[]) gen_sprites::cml#0 = "camelot"
Constant (const byte) gen_sprites::i#0 = 0
Constant (const byte) gen_chargen_sprite::y#0 = 0
Constant (const byte) gen_chargen_sprite::s_gen#0 = 0
Constant (const byte) gen_chargen_sprite::s_gen_cnt#0 = 0
Constant (const byte) gen_chargen_sprite::x#0 = 0
Constant (const byte) gen_chargen_sprite::c#0 = 0
Constant (const byte) gen_chargen_sprite::b#0 = 0
Constant (const byte) gen_chargen_sprite::c#1 = 1
Constant (const byte) gen_chargen_sprite::s_gen#2 = 0
Constant (const byte) gen_chargen_sprite::s_gen_cnt#2 = 0
Constant (const byte[]) gen_sintab::f_i#0 = { 0, 0, 0, 0, 0 }
Constant (const byte[]) gen_sintab::f_min#0 = { 0, 0, 0, 0, 0 }
Constant (const byte[]) gen_sintab::f_amp#0 = { 0, 0, 0, 0, 0 }
Constant (const byte*) gen_sintab::f_2pi#0 = ((byte*))58085
Constant (const word) setFAC::w#2 = 2
Constant (const byte) gen_sintab::i#0 = 0
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  to:@34
main: scope:[main]  from @39
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#11 main::@5/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#11 main::@5/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  (byte*) init::sc#0 ← (const byte*) SCREEN#0
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  (byte*~) init::$0 ← (const byte*) SCREEN#0 + (word/signed word) 1000
  if((byte*) init::sc#1<(byte*~) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  (byte*) gen_sintab::sintab#0 ← (const byte[]) sintab_x#0
  (byte) gen_sintab::length#0 ← (const byte) sinlen_x#0
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  (byte*) gen_sintab::sintab#1 ← (const byte[]) sintab_y#0
  (byte) gen_sintab::length#1 ← (const byte) sinlen_y#0
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  to:@39
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  (byte*) place_sprites::sprites_ptr#0 ← (const byte*) SCREEN#0 + (word/signed word) 1016
  (byte[]~) place_sprites::$1 ← (const byte[]) sprites#0 / (byte/signed byte/word/signed word) 64
  (byte) place_sprites::spr_id#0 ← ((byte)) (byte[]~) place_sprites::$1
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  (byte*) gen_sprites::spr#0 ← (const byte[]) sprites#0
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(byte*) gen_sintab::sintab#0 init::@5/(byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(byte) gen_sintab::length#0 init::@5/(byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  (byte*) setMEMtoFAC::mem#0 ← (const byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  (byte*) setMEMtoFAC::mem#1 ← (const byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  (byte*) divMEMbyFAC::mem#0 ← (const byte[]) gen_sintab::f_amp#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  (byte*) setMEMtoFAC::mem#2 ← (const byte[]) gen_sintab::f_amp#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  (byte*) addMEMtoFAC::mem#0 ← (const byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  (byte*) setMEMtoFAC::mem#3 ← (const byte[]) gen_sintab::f_min#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  (byte*) mulFACbyMEM::mem#0 ← (const byte*) gen_sintab::f_2pi#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  (byte*) setMEMtoFAC::mem#4 ← (const byte[]) gen_sintab::f_i#0
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  (byte*) divMEMbyFAC::mem#1 ← (const byte[]) gen_sintab::f_i#0
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  (byte*) mulFACbyMEM::mem#1 ← (const byte[]) gen_sintab::f_amp#0
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  (byte*) addMEMtoFAC::mem#1 ← (const byte[]) gen_sintab::f_min#0
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  to:@end
@end: scope:[]  from @40

Constant (const byte*) init::sc#0 = SCREEN#0
Constant (const byte*) init::$0 = SCREEN#0+1000
Constant (const byte*) gen_sintab::sintab#0 = sintab_x#0
Constant (const byte) gen_sintab::length#0 = sinlen_x#0
Constant (const byte*) gen_sintab::sintab#1 = sintab_y#0
Constant (const byte) gen_sintab::length#1 = sinlen_y#0
Constant (const byte*) place_sprites::sprites_ptr#0 = SCREEN#0+1016
Constant (const byte[]) place_sprites::$1 = sprites#0/64
Constant (const byte*) gen_sprites::spr#0 = sprites#0
Constant (const byte*) setMEMtoFAC::mem#0 = gen_sintab::f_min#0
Constant (const byte*) setMEMtoFAC::mem#1 = gen_sintab::f_amp#0
Constant (const byte*) divMEMbyFAC::mem#0 = gen_sintab::f_amp#0
Constant (const byte*) setMEMtoFAC::mem#2 = gen_sintab::f_amp#0
Constant (const byte*) addMEMtoFAC::mem#0 = gen_sintab::f_min#0
Constant (const byte*) setMEMtoFAC::mem#3 = gen_sintab::f_min#0
Constant (const byte*) mulFACbyMEM::mem#0 = gen_sintab::f_2pi#0
Constant (const byte*) setMEMtoFAC::mem#4 = gen_sintab::f_i#0
Constant (const byte*) divMEMbyFAC::mem#1 = gen_sintab::f_i#0
Constant (const byte*) mulFACbyMEM::mem#1 = gen_sintab::f_amp#0
Constant (const byte*) addMEMtoFAC::mem#1 = gen_sintab::f_min#0
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  to:@34
main: scope:[main]  from @39
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#11 main::@5/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#11 main::@5/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  to:@39
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  (byte) place_sprites::spr_id#0 ← ((byte)) (const byte[]) place_sprites::$1
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  to:@end
@end: scope:[]  from @40

Constant (const byte) place_sprites::spr_id#0 = ((byte))place_sprites::$1
Succesful SSA optimization Pass2ConstantIdentification
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@32
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
@32: scope:[]  from @begin
  to:@34
main: scope:[main]  from @39
  call init param-assignment
  to:main::@5
main::@5: scope:[main]  from main
  to:main::@2
main::@1: scope:[main]  from main::@6
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@2 main::@5
  (byte) sin_idx_y#13 ← phi( main::@1/(byte) sin_idx_y#11 main::@5/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@1/(byte) sin_idx_x#11 main::@5/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
@34: scope:[]  from @32
  to:@39
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(const byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@13
gen_sintab::@13: scope:[gen_sintab]  from gen_sintab::@12
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@13 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@13/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @34
  call main param-assignment
  to:@40
@40: scope:[]  from @39
  to:@end
@end: scope:[]  from @40

Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) place_sprites::spr_x#2
Multiple usages for variable. Not optimizing sub-constant (byte) gen_sprites::i#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_sprites::spr#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_chargen_sprite::sprite#4
Culled Empty Block (label) @32
Culled Empty Block (label) main::@5
Culled Empty Block (label) main::@1
Culled Empty Block (label) @34
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Culled Empty Block (label) gen_sintab::@13
Culled Empty Block (label) @40
Succesful SSA optimization Pass2CullEmptyBlocks
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@39
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(const byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 gen_chargen_sprite::@8/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::y#10 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39

Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#0 setFAC::$0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::ch#0 gen_sprites::$0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: setFAC::w#0 gen_sintab::$0
Not aliassing across scopes: setFAC::w#1 gen_sintab::$3
Not aliassing across scopes: setFAC::w#3 gen_sintab::$13
Not aliassing across scopes: setFAC::w#4 gen_sintab::$17
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Self Phi Eliminated (byte) gen_chargen_sprite::y#10
Self Phi Eliminated (byte*) gen_chargen_sprite::chargen#7
Self Phi Eliminated (byte*) PROCPORT#14
Succesful SSA optimization Pass2SelfPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@39
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(const byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#14 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#7 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte*) PROCPORT#14 ← phi( gen_chargen_sprite::@1/(byte*) PROCPORT#19 )
  (byte*) gen_chargen_sprite::chargen#7 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::chargen#1 )
  (byte) gen_chargen_sprite::y#10 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::y#2 )
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#10
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#14) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39

Redundant Phi (byte) gen_chargen_sprite::y#10 (byte) gen_chargen_sprite::y#2
Redundant Phi (byte*) gen_chargen_sprite::chargen#7 (byte*) gen_chargen_sprite::chargen#1
Redundant Phi (byte*) PROCPORT#14 (byte*) PROCPORT#19
Succesful SSA optimization Pass2RedundantPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@39
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(const byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 gen_chargen_sprite::@9/(byte*) PROCPORT#19 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::chargen#1 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#19) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39

Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) place_sprites::spr_x#2
Multiple usages for variable. Not optimizing sub-constant (byte) gen_sprites::i#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_sprites::spr#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_chargen_sprite::sprite#4
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#0 setFAC::$0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::ch#0 gen_sprites::$0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: setFAC::w#0 gen_sintab::$0
Not aliassing across scopes: setFAC::w#1 gen_sintab::$3
Not aliassing across scopes: setFAC::w#3 gen_sintab::$13
Not aliassing across scopes: setFAC::w#4 gen_sintab::$17
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Self Phi Eliminated (byte*) gen_chargen_sprite::chargen#1
Self Phi Eliminated (byte*) PROCPORT#19
Succesful SSA optimization Pass2SelfPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@39
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(const byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) PROCPORT#19 ← phi( gen_chargen_sprite/(const byte*) PROCPORT#0 )
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte*) gen_chargen_sprite::chargen#1 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::chargen#0 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#1 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((byte*) PROCPORT#19) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39

Redundant Phi (byte*) gen_chargen_sprite::chargen#1 (byte*) gen_chargen_sprite::chargen#0
Redundant Phi (byte*) PROCPORT#19 (const byte*) PROCPORT#0
Succesful SSA optimization Pass2RedundantPhiElimination
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@39
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(const word) setFAC::w#2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (const word) getFAC::w#0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte*) setMEMtoFAC::mem#2 gen_sintab::@12/(const byte*) setMEMtoFAC::mem#3 gen_sintab::@15/(const byte*) setMEMtoFAC::mem#4 gen_sintab::@5/(const byte*) setMEMtoFAC::mem#0 gen_sintab::@7/(const byte*) setMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte*) addMEMtoFAC::mem#0 gen_sintab::@20/(const byte*) addMEMtoFAC::mem#1 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte*) divMEMbyFAC::mem#1 gen_sintab::@9/(const byte*) divMEMbyFAC::mem#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) mulFACbyMEM::mem#0 gen_sintab::@19/(const byte*) mulFACbyMEM::mem#1 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(const byte) sin_idx_y#17 )
  (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(const byte) sin_idx_x#16 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) init::sc#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) init::$0) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(const byte) anim::j#0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(const byte) anim::j2#0 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(const byte) sin_idx_x#4 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(const byte) sin_idx_y#4 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(const byte) place_sprites::col#0 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(const byte) place_sprites::j2#0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(const byte) place_sprites::spr_x#0 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(const byte) place_sprites::j#0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/(const byte) place_sprites::spr_id#0 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (const byte) place_sprites::$4
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte*) gen_sprites::spr#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(const byte) gen_sprites::i#0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(const byte) gen_chargen_sprite::y#0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::x#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen_cnt#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(const byte) gen_chargen_sprite::s_gen#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(const byte) gen_chargen_sprite::c#0 gen_chargen_sprite::@6/(const byte) gen_chargen_sprite::c#1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(const byte) gen_chargen_sprite::b#0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen_cnt#2 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(const byte) gen_chargen_sprite::s_gen#2 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte*) gen_sintab::sintab#0 init::@5/(const byte*) gen_sintab::sintab#1 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) gen_sintab::length#0 init::@5/(const byte) gen_sintab::length#1 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(const byte) gen_sintab::min#0 init::@5/(const byte) gen_sintab::min#1 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(const byte) gen_sintab::max#0 init::@5/(const byte) gen_sintab::max#1 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(const byte) gen_sintab::i#0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39

Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) place_sprites::spr_x#2
Multiple usages for variable. Not optimizing sub-constant (byte) gen_sprites::i#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_sprites::spr#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_chargen_sprite::sprite#4
Not culling empty block because it shares successor with its predecessor. (label) anim::@9
Not culling empty block because it shares successor with its predecessor. (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Not aliassing across scopes: prepareMEM::mem#5 prepareMEM::mem#2
Not aliassing across scopes: setFAC::w#5 setFAC::w#0
Not aliassing across scopes: prepareMEM::mem#0 setFAC::$0
Not aliassing across scopes: prepareMEM::mem#1 setMEMtoFAC::mem#5
Not aliassing across scopes: prepareMEM::mem#2 addMEMtoFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#3 divMEMbyFAC::mem#2
Not aliassing across scopes: prepareMEM::mem#4 mulFACbyMEM::mem#2
Not aliassing across scopes: sin_idx_x#13 sin_idx_x#11
Not aliassing across scopes: sin_idx_y#13 sin_idx_y#11
Not aliassing across scopes: anim::xidx#0 sin_idx_x#13
Not aliassing across scopes: anim::yidx#0 sin_idx_y#13
Not aliassing across scopes: gen_chargen_sprite::ch#0 gen_sprites::$0
Not aliassing across scopes: gen_chargen_sprite::sprite#0 gen_sprites::spr#2
Not aliassing across scopes: gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0
Not aliassing across scopes: setFAC::w#0 gen_sintab::$0
Not aliassing across scopes: setFAC::w#1 gen_sintab::$3
Not aliassing across scopes: setFAC::w#3 gen_sintab::$13
Not aliassing across scopes: setFAC::w#4 gen_sintab::$17
Not aliassing across scopes: getFAC::return#2 getFAC::return#0
Not aliassing across scopes: gen_sintab::$23 getFAC::return#2
Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::xidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) anim::yidx#3
Multiple usages for variable. Not optimizing sub-constant (byte) place_sprites::spr_x#2
Multiple usages for variable. Not optimizing sub-constant (byte) gen_sprites::i#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_sprites::spr#2
Multiple usages for variable. Not optimizing sub-constant (byte*) gen_chargen_sprite::sprite#4
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) setFAC::w#2
Inlining constant with var siblings (const word) getFAC::w#0
Inlining constant with var siblings (const byte*) setMEMtoFAC::mem#0
Inlining constant with var siblings (const byte*) setMEMtoFAC::mem#1
Inlining constant with var siblings (const byte*) setMEMtoFAC::mem#2
Inlining constant with var siblings (const byte*) setMEMtoFAC::mem#3
Inlining constant with var siblings (const byte*) setMEMtoFAC::mem#4
Inlining constant with var siblings (const byte*) addMEMtoFAC::mem#0
Inlining constant with var siblings (const byte*) addMEMtoFAC::mem#1
Inlining constant with var siblings (const byte*) divMEMbyFAC::mem#0
Inlining constant with var siblings (const byte*) divMEMbyFAC::mem#1
Inlining constant with var siblings (const byte*) mulFACbyMEM::mem#0
Inlining constant with var siblings (const byte*) mulFACbyMEM::mem#1
Inlining constant with var siblings (const byte*) init::sc#0
Inlining constant with var siblings (const byte*) init::sc#0
Inlining constant with var siblings (const byte) anim::j2#0
Inlining constant with var siblings (const byte) anim::j2#0
Inlining constant with var siblings (const byte) anim::j2#0
Inlining constant with var siblings (const byte) anim::j#0
Inlining constant with var siblings (const byte) anim::j#0
Inlining constant with var siblings (const byte) place_sprites::spr_x#0
Inlining constant with var siblings (const byte) place_sprites::spr_x#0
Inlining constant with var siblings (const byte) place_sprites::j2#0
Inlining constant with var siblings (const byte) place_sprites::j2#0
Inlining constant with var siblings (const byte) place_sprites::j2#0
Inlining constant with var siblings (const byte) place_sprites::col#0
Inlining constant with var siblings (const byte) place_sprites::col#0
Inlining constant with var siblings (const byte) place_sprites::j#0
Inlining constant with var siblings (const byte) place_sprites::j#0
Inlining constant with var siblings (const byte) place_sprites::spr_id#0
Inlining constant with var siblings (const byte) place_sprites::spr_id#0
Inlining constant with var siblings (const byte) gen_sprites::i#0
Inlining constant with var siblings (const byte) gen_sprites::i#0
Inlining constant with var siblings (const byte*) gen_sprites::spr#0
Inlining constant with var siblings (const byte*) gen_sprites::spr#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::y#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::y#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::x#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::x#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::c#0
Inlining constant with different constant siblings (const byte) gen_chargen_sprite::c#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::b#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::b#0
Inlining constant with var siblings (const byte) gen_chargen_sprite::c#1
Inlining constant with different constant siblings (const byte) gen_chargen_sprite::c#1
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_chargen_sprite::s_gen_cnt#2
Inlining constant with var siblings (const byte) gen_sintab::min#0
Inlining constant with different constant siblings (const byte) gen_sintab::min#0
Inlining constant with var siblings (const byte) gen_sintab::max#0
Inlining constant with different constant siblings (const byte) gen_sintab::max#0
Inlining constant with var siblings (const byte) gen_sintab::min#1
Inlining constant with different constant siblings (const byte) gen_sintab::min#1
Inlining constant with var siblings (const byte) gen_sintab::max#1
Inlining constant with different constant siblings (const byte) gen_sintab::max#1
Inlining constant with var siblings (const byte) gen_sintab::i#0
Inlining constant with var siblings (const byte) gen_sintab::i#0
Inlining constant with var siblings (const byte*) gen_sintab::sintab#0
Inlining constant with var siblings (const byte) gen_sintab::length#0
Inlining constant with var siblings (const byte*) gen_sintab::sintab#1
Inlining constant with var siblings (const byte) gen_sintab::length#1
Inlining constant with var siblings (const byte) sin_idx_x#16
Inlining constant with var siblings (const byte) sin_idx_x#16
Inlining constant with var siblings (const byte) sin_idx_x#16
Inlining constant with var siblings (const byte) sin_idx_y#17
Inlining constant with var siblings (const byte) sin_idx_y#17
Inlining constant with var siblings (const byte) sin_idx_y#17
Inlining constant with var siblings (const byte) sin_idx_x#4
Inlining constant with var siblings (const byte) sin_idx_x#4
Inlining constant with var siblings (const byte) sin_idx_x#4
Inlining constant with var siblings (const byte) sin_idx_y#4
Inlining constant with var siblings (const byte) sin_idx_y#4
Inlining constant with var siblings (const byte) sin_idx_y#4
Constant inlined gen_sintab::min#1 = (byte/signed byte/word/signed word) 48
Constant inlined setFAC::w#2 = (byte/signed byte/word/signed word) 2
Constant inlined place_sprites::j#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_sintab::min#0 = (byte/signed byte/word/signed word) 16
Constant inlined place_sprites::$4 = (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5
Constant inlined sin_idx_x#16 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::s_gen_cnt#2 = (byte/signed byte/word/signed word) 0
Constant inlined gen_sintab::length#1 = (const byte) sinlen_y#0
Constant inlined place_sprites::$1 = (const byte[]) sprites#0/(byte/signed byte/word/signed word) 64
Constant inlined gen_chargen_sprite::s_gen_cnt#0 = (byte/signed byte/word/signed word) 0
Constant inlined anim::j#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::b#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::c#0 = (byte/signed byte/word/signed word) 0
Constant inlined place_sprites::spr_id#0 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64
Constant inlined divMEMbyFAC::mem#1 = (const byte[]) gen_sintab::f_i#0
Constant inlined divMEMbyFAC::mem#0 = (const byte[]) gen_sintab::f_amp#0
Constant inlined setMEMtoFAC::mem#3 = (const byte[]) gen_sintab::f_min#0
Constant inlined init::sc#0 = (const byte*) SCREEN#0
Constant inlined setMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0
Constant inlined setMEMtoFAC::mem#1 = (const byte[]) gen_sintab::f_amp#0
Constant inlined setMEMtoFAC::mem#0 = (const byte[]) gen_sintab::f_min#0
Constant inlined gen_sintab::i#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::s_gen#2 = (byte/signed byte/word/signed word) 0
Constant inlined place_sprites::spr_x#0 = (byte/signed byte/word/signed word) 60
Constant inlined gen_chargen_sprite::s_gen#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::c#1 = (byte/signed byte/word/signed word) 1
Constant inlined setMEMtoFAC::mem#4 = (const byte[]) gen_sintab::f_i#0
Constant inlined addMEMtoFAC::mem#0 = (const byte[]) gen_sintab::f_min#0
Constant inlined gen_sprites::i#0 = (byte/signed byte/word/signed word) 0
Constant inlined addMEMtoFAC::mem#1 = (const byte[]) gen_sintab::f_min#0
Constant inlined place_sprites::col#0 = (byte/signed byte/word/signed word) 5
Constant inlined gen_sprites::spr#0 = (const byte[]) sprites#0
Constant inlined sin_idx_y#17 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::x#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_chargen_sprite::y#0 = (byte/signed byte/word/signed word) 0
Constant inlined gen_sintab::sintab#0 = (const byte[]) sintab_x#0
Constant inlined place_sprites::j2#0 = (byte/signed byte/word/signed word) 0
Constant inlined sin_idx_y#4 = (byte/signed byte/word/signed word) 0
Constant inlined gen_sintab::sintab#1 = (const byte[]) sintab_y#0
Constant inlined sin_idx_x#4 = (byte/signed byte/word/signed word) 0
Constant inlined init::$0 = (const byte*) SCREEN#0+(word/signed word) 1000
Constant inlined gen_sintab::length#0 = (const byte) sinlen_x#0
Constant inlined gen_sintab::max#0 = (byte/word/signed word) 255
Constant inlined gen_sintab::max#1 = (byte/word/signed word) 208
Constant inlined mulFACbyMEM::mem#0 = (const byte*) gen_sintab::f_2pi#0
Constant inlined mulFACbyMEM::mem#1 = (const byte[]) gen_sintab::f_amp#0
Constant inlined getFAC::w#0 = (byte/signed byte/word/signed word) 0
Constant inlined anim::j2#0 = (byte/signed byte/word/signed word) 12
Succesful SSA optimization Pass2ConstantInlining
CONTROL FLOW GRAPH
@begin: scope:[]  from
  to:@39
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(byte/signed byte/word/signed word) 2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte[]) gen_sintab::f_amp#0 gen_sintab::@12/(const byte[]) gen_sintab::f_min#0 gen_sintab::@15/(const byte[]) gen_sintab::f_i#0 gen_sintab::@5/(const byte[]) gen_sintab::f_min#0 gen_sintab::@7/(const byte[]) gen_sintab::f_amp#0 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte[]) gen_sintab::f_min#0 gen_sintab::@20/(const byte[]) gen_sintab::f_min#0 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte[]) gen_sintab::f_i#0 gen_sintab::@9/(const byte[]) gen_sintab::f_amp#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) gen_sintab::f_2pi#0 gen_sintab::@19/(const byte[]) gen_sintab::f_amp#0 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(byte/signed byte/word/signed word) 0 )
  (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(byte/signed byte/word/signed word) 0 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@1
  (byte*) init::sc#2 ← phi( init/(const byte*) SCREEN#0 init::@1/(byte*) init::sc#1 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  (byte) anim::j#2 ← phi( anim/(byte/signed byte/word/signed word) 0 anim::@3/(byte) anim::j#1 )
  (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 )
  (byte) anim::j2#3 ← phi( anim/(byte/signed byte/word/signed word) 12 anim::@3/(byte) anim::j2#2 )
  (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2
  to:anim::@6
anim::@2: scope:[anim]  from anim::@1 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3
  to:anim::@7
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  to:anim::@2
anim::@3: scope:[anim]  from anim::@2 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1
  to:anim::@8
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  to:anim::@3
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@4
  to:anim::@9
anim::@4: scope:[anim]  from anim::@8 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@8/(byte) sin_idx_x#3 anim::@9/(byte/signed byte/word/signed word) 0 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@5
  to:anim::@10
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@5: scope:[anim]  from anim::@10 anim::@4
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte/signed byte/word/signed word) 0 anim::@4/(byte) sin_idx_y#3 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 5 place_sprites::@1/(byte) place_sprites::col#1 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@1/(byte) place_sprites::j2#2 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 60 place_sprites::@1/(byte) place_sprites::spr_x#1 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@1/(byte) place_sprites::j#1 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 place_sprites::@1/(byte) place_sprites::spr_id#1 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte[]) sprites#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte/signed byte/word/signed word) 0 gen_sprites::@3/(byte) gen_sprites::i#1 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@6/(byte/signed byte/word/signed word) 1 )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte[]) sintab_x#0 init::@5/(const byte[]) sintab_y#0 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) sinlen_x#0 init::@5/(const byte) sinlen_y#0 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte/signed byte/word/signed word) 16 init::@5/(byte/signed byte/word/signed word) 48 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte/word/signed word) 255 init::@5/(byte/word/signed word) 208 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word) 0 gen_sintab::@22/(byte) gen_sintab::i#1 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39

FINAL SYMBOL TABLE
(label) @39
(label) @begin
(label) @end
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 = ((byte*))(word) 53280
(byte*) CHARGEN
(const byte*) CHARGEN#0 = ((byte*))(word) 53248
(byte*) PROCPORT
(const byte*) PROCPORT#0 = ((byte*))(byte/signed byte/word/signed word) 1
(byte*) RASTER
(const byte*) RASTER#0 = ((byte*))(word) 53266
(byte*) SCREEN
(const byte*) SCREEN#0 = ((byte*))(word/signed word) 1024
(byte*) SPRITES_COLS
(const byte*) SPRITES_COLS#0 = ((byte*))(word) 53287
(byte*) SPRITES_ENABLE
(const byte*) SPRITES_ENABLE#0 = ((byte*))(word) 53269
(byte*) SPRITES_EXPAND_X
(const byte*) SPRITES_EXPAND_X#0 = ((byte*))(word) 53277
(byte*) SPRITES_EXPAND_Y
(const byte*) SPRITES_EXPAND_Y#0 = ((byte*))(word) 53271
(byte*) SPRITES_XPOS
(const byte*) SPRITES_XPOS#0 = ((byte*))(word) 53248
(byte*) SPRITES_YPOS
(const byte*) SPRITES_YPOS#0 = ((byte*))(word) 53249
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(label) addMEMtoFAC::@1
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(byte*) addMEMtoFAC::mem#2
(void()) anim()
(byte~) anim::$0
(byte~) anim::$1
(label) anim::@1
(label) anim::@10
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@9
(label) anim::@return
(byte) anim::j
(byte) anim::j#1
(byte) anim::j#2
(byte) anim::j2
(byte) anim::j2#1
(byte) anim::j2#2
(byte) anim::j2#3
(byte) anim::xidx
(byte) anim::xidx#0
(byte) anim::xidx#1
(byte) anim::xidx#2
(byte) anim::xidx#3
(byte) anim::xidx#5
(byte) anim::yidx
(byte) anim::yidx#0
(byte) anim::yidx#1
(byte) anim::yidx#2
(byte) anim::yidx#3
(byte) anim::yidx#6
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(label) divMEMbyFAC::@1
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#2
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0
(word~) gen_chargen_sprite::$1
(byte~) gen_chargen_sprite::$4
(byte~) gen_chargen_sprite::$7
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@10
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@6
(label) gen_chargen_sprite::@7
(label) gen_chargen_sprite::@8
(label) gen_chargen_sprite::@9
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#1
(byte) gen_chargen_sprite::b#2
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0
(byte) gen_chargen_sprite::bits#1
(byte) gen_chargen_sprite::bits#2
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#3
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#1
(byte) gen_chargen_sprite::s_gen#3
(byte) gen_chargen_sprite::s_gen#5
(byte) gen_chargen_sprite::s_gen#6
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#1
(byte) gen_chargen_sprite::s_gen_cnt#3
(byte) gen_chargen_sprite::s_gen_cnt#4
(byte) gen_chargen_sprite::s_gen_cnt#5
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0
(byte*) gen_chargen_sprite::sprite#1
(byte*) gen_chargen_sprite::sprite#10
(byte*) gen_chargen_sprite::sprite#11
(byte*) gen_chargen_sprite::sprite#2
(byte*) gen_chargen_sprite::sprite#3
(byte*) gen_chargen_sprite::sprite#4
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#1
(byte) gen_chargen_sprite::x#6
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#1
(byte) gen_chargen_sprite::y#2
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0
(word~) gen_sintab::$13
(word~) gen_sintab::$17
(word~) gen_sintab::$23
(byte~) gen_sintab::$24
(word~) gen_sintab::$3
(label) gen_sintab::@1
(label) gen_sintab::@10
(label) gen_sintab::@11
(label) gen_sintab::@12
(label) gen_sintab::@14
(label) gen_sintab::@15
(label) gen_sintab::@16
(label) gen_sintab::@17
(label) gen_sintab::@18
(label) gen_sintab::@19
(label) gen_sintab::@20
(label) gen_sintab::@21
(label) gen_sintab::@22
(label) gen_sintab::@3
(label) gen_sintab::@4
(label) gen_sintab::@5
(label) gen_sintab::@6
(label) gen_sintab::@7
(label) gen_sintab::@8
(label) gen_sintab::@9
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(const byte*) gen_sintab::f_2pi#0 = ((byte*))(word) 58085
(byte[]) gen_sintab::f_amp
(const byte[]) gen_sintab::f_amp#0 = { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
(byte[]) gen_sintab::f_i
(const byte[]) gen_sintab::f_i#0 = { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
(byte[]) gen_sintab::f_min
(const byte[]) gen_sintab::f_min#0 = { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
(byte) gen_sintab::i
(byte) gen_sintab::i#1
(byte) gen_sintab::i#10
(byte) gen_sintab::length
(byte) gen_sintab::length#10
(byte) gen_sintab::max
(byte) gen_sintab::max#2
(byte) gen_sintab::min
(byte) gen_sintab::min#2
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#12
(void()) gen_sprites()
(byte~) gen_sprites::$0
(label) gen_sprites::@1
(label) gen_sprites::@3
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(const byte[]) gen_sprites::cml#0 = (string) "camelot"
(byte) gen_sprites::i
(byte) gen_sprites::i#1
(byte) gen_sprites::i#2
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#1
(byte*) gen_sprites::spr#2
(word()) getFAC()
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::return#0
(word) getFAC::return#2
(word) getFAC::w
(word) getFAC::w#1
(void()) init()
(label) init::@1
(label) init::@2
(label) init::@3
(label) init::@4
(label) init::@5
(label) init::@return
(byte*) init::sc
(byte*) init::sc#1
(byte*) init::sc#2
(void()) main()
(label) main::@2
(label) main::@3
(label) main::@6
(label) main::@return
(byte*) memHi
(const byte*) memHi#0 = ((byte*))(byte/word/signed word) 255
(byte*) memLo
(const byte*) memLo#0 = ((byte*))(byte/word/signed word) 254
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(label) mulFACbyMEM::@1
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#2
(void()) place_sprites()
(label) place_sprites::@1
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::col#1
(byte) place_sprites::col#2
(byte) place_sprites::j
(byte) place_sprites::j#1
(byte) place_sprites::j#2
(byte) place_sprites::j2
(byte) place_sprites::j2#1
(byte) place_sprites::j2#2
(byte) place_sprites::j2#3
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#1
(byte) place_sprites::spr_id#2
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#1
(byte) place_sprites::spr_x#2
(byte*) place_sprites::sprites_ptr
(const byte*) place_sprites::sprites_ptr#0 = (const byte*) SCREEN#0+(word/signed word) 1016
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0
(byte~) prepareMEM::$1
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#0
(byte*) prepareMEM::mem#1
(byte*) prepareMEM::mem#2
(byte*) prepareMEM::mem#3
(byte*) prepareMEM::mem#4
(byte*) prepareMEM::mem#5
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0
(label) setFAC::@1
(label) setFAC::@return
(word) setFAC::w
(word) setFAC::w#0
(word) setFAC::w#1
(word) setFAC::w#3
(word) setFAC::w#4
(word) setFAC::w#5
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(label) setMEMtoFAC::@1
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#5
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_x#11
(byte) sin_idx_x#13
(byte) sin_idx_x#3
(byte) sin_idx_y
(byte) sin_idx_y#11
(byte) sin_idx_y#13
(byte) sin_idx_y#3
(byte) sinlen_x
(const byte) sinlen_x#0 = (byte/word/signed word) 221
(byte) sinlen_y
(const byte) sinlen_y#0 = (byte/word/signed word) 197
(byte[]) sintab_x
(const byte[]) sintab_x#0 = ((byte*))(word/signed word) 4096
(byte[]) sintab_y
(const byte[]) sintab_y#0 = ((byte*))(word/signed word) 4352
(byte[]) sprites
(const byte[]) sprites#0 = ((byte*))(word/signed word) 8192
(void()) subFACfromARG()
(label) subFACfromARG::@return

Block Sequence Planned @begin @39 @end main main::@2 main::@3 main::@6 main::@return anim anim::@1 anim::@6 anim::@2 anim::@7 anim::@3 anim::@8 anim::@9 anim::@4 anim::@10 anim::@5 anim::@return init init::@1 init::@2 init::@3 init::@4 init::@5 init::@return gen_sintab gen_sintab::@3 gen_sintab::@4 gen_sintab::@5 gen_sintab::@6 gen_sintab::@7 gen_sintab::@8 gen_sintab::@9 gen_sintab::@10 gen_sintab::@11 gen_sintab::@12 gen_sintab::@1 gen_sintab::@14 gen_sintab::@15 gen_sintab::@16 gen_sintab::@17 gen_sintab::@18 gen_sintab::@19 gen_sintab::@20 gen_sintab::@21 gen_sintab::@22 gen_sintab::@return getFAC getFAC::@return addMEMtoFAC addMEMtoFAC::@1 addMEMtoFAC::@return prepareMEM prepareMEM::@return mulFACbyMEM mulFACbyMEM::@1 mulFACbyMEM::@return sinFAC sinFAC::@return divMEMbyFAC divMEMbyFAC::@1 divMEMbyFAC::@return setFAC setFAC::@1 setFAC::@return setMEMtoFAC setMEMtoFAC::@1 setMEMtoFAC::@return subFACfromARG subFACfromARG::@return setARGtoFAC setARGtoFAC::@return gen_sprites gen_sprites::@1 gen_sprites::@3 gen_sprites::@return gen_chargen_sprite gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@5 gen_chargen_sprite::@8 gen_chargen_sprite::@9 gen_chargen_sprite::@10 gen_chargen_sprite::@return place_sprites place_sprites::@1 place_sprites::@return 
Added new block during phi lifting main::@7(between main::@6 and main::@2)
Added new block during phi lifting anim::@11(between anim::@3 and anim::@1)
Added new block during phi lifting anim::@12(between anim::@1 and anim::@2)
Added new block during phi lifting anim::@13(between anim::@2 and anim::@3)
Added new block during phi lifting anim::@14(between anim::@8 and anim::@4)
Added new block during phi lifting anim::@15(between anim::@4 and anim::@5)
Added new block during phi lifting init::@7(between init::@1 and init::@1)
Added new block during phi lifting gen_sintab::@23(between gen_sintab::@22 and gen_sintab::@1)
Added new block during phi lifting gen_sprites::@4(between gen_sprites::@3 and gen_sprites::@1)
Added new block during phi lifting gen_chargen_sprite::@11(between gen_chargen_sprite::@9 and gen_chargen_sprite::@1)
Added new block during phi lifting gen_chargen_sprite::@12(between gen_chargen_sprite::@8 and gen_chargen_sprite::@2)
Added new block during phi lifting gen_chargen_sprite::@13(between gen_chargen_sprite::@5 and gen_chargen_sprite::@4)
Added new block during phi lifting gen_chargen_sprite::@14(between gen_chargen_sprite::@4 and gen_chargen_sprite::@5)
Added new block during phi lifting place_sprites::@3(between place_sprites::@1 and place_sprites::@1)
Block Sequence Planned @begin @39 @end main main::@2 main::@3 main::@6 main::@return main::@7 anim anim::@1 anim::@6 anim::@2 anim::@7 anim::@3 anim::@8 anim::@9 anim::@4 anim::@10 anim::@5 anim::@return anim::@15 anim::@14 anim::@11 anim::@13 anim::@12 init init::@1 init::@2 init::@3 init::@4 init::@5 init::@return init::@7 gen_sintab gen_sintab::@3 gen_sintab::@4 gen_sintab::@5 gen_sintab::@6 gen_sintab::@7 gen_sintab::@8 gen_sintab::@9 gen_sintab::@10 gen_sintab::@11 gen_sintab::@12 gen_sintab::@1 gen_sintab::@14 gen_sintab::@15 gen_sintab::@16 gen_sintab::@17 gen_sintab::@18 gen_sintab::@19 gen_sintab::@20 gen_sintab::@21 gen_sintab::@22 gen_sintab::@return gen_sintab::@23 getFAC getFAC::@return addMEMtoFAC addMEMtoFAC::@1 addMEMtoFAC::@return prepareMEM prepareMEM::@return mulFACbyMEM mulFACbyMEM::@1 mulFACbyMEM::@return sinFAC sinFAC::@return divMEMbyFAC divMEMbyFAC::@1 divMEMbyFAC::@return setFAC setFAC::@1 setFAC::@return setMEMtoFAC setMEMtoFAC::@1 setMEMtoFAC::@return subFACfromARG subFACfromARG::@return setARGtoFAC setARGtoFAC::@return gen_sprites gen_sprites::@1 gen_sprites::@3 gen_sprites::@return gen_sprites::@4 gen_chargen_sprite gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@5 gen_chargen_sprite::@8 gen_chargen_sprite::@9 gen_chargen_sprite::@10 gen_chargen_sprite::@return gen_chargen_sprite::@11 gen_chargen_sprite::@12 gen_chargen_sprite::@13 gen_chargen_sprite::@14 place_sprites place_sprites::@1 place_sprites::@return place_sprites::@3 
CONTROL FLOW GRAPH - PHI LIFTED
@begin: scope:[]  from
  to:@39
@39: scope:[]  from @begin
  call main param-assignment
  to:@end
@end: scope:[]  from @39
main: scope:[main]  from @39
  call init param-assignment
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@7
  (byte) sin_idx_y#13 ← phi( main::@7/(byte~) sin_idx_y#27 main/(byte/signed byte/word/signed word) 0 )
  (byte) sin_idx_x#13 ← phi( main::@7/(byte~) sin_idx_x#27 main/(byte/signed byte/word/signed word) 0 )
  if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@2
  call anim param-assignment
  to:main::@6
main::@6: scope:[main]  from main::@3
  if(true) goto main::@7
  to:main::@return
main::@return: scope:[main]  from main::@6
  return 
  to:@return
main::@7: scope:[main]  from main::@6
  (byte~) sin_idx_x#27 ← (byte) sin_idx_x#11
  (byte~) sin_idx_y#27 ← (byte) sin_idx_y#11
  to:main::@2
anim: scope:[anim]  from main::@3
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) anim::xidx#0 ← (byte) sin_idx_x#13
  (byte) anim::yidx#0 ← (byte) sin_idx_y#13
  (byte~) anim::xidx#8 ← (byte) anim::xidx#0
  (byte~) anim::yidx#8 ← (byte) anim::yidx#0
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@11
  (byte) anim::j#2 ← phi( anim/(byte/signed byte/word/signed word) 0 anim::@11/(byte~) anim::j#7 )
  (byte) anim::yidx#3 ← phi( anim/(byte~) anim::yidx#8 anim::@11/(byte~) anim::yidx#9 )
  (byte) anim::j2#3 ← phi( anim/(byte/signed byte/word/signed word) 12 anim::@11/(byte~) anim::j2#8 )
  (byte) anim::xidx#3 ← phi( anim/(byte~) anim::xidx#8 anim::@11/(byte~) anim::xidx#9 )
  (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3
  *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0
  (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3
  *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1
  (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10
  if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@12
  to:anim::@6
anim::@6: scope:[anim]  from anim::@1
  (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0
  (byte~) anim::xidx#11 ← (byte) anim::xidx#2
  to:anim::@2
anim::@2: scope:[anim]  from anim::@12 anim::@6
  (byte) anim::xidx#5 ← phi( anim::@12/(byte~) anim::xidx#10 anim::@6/(byte~) anim::xidx#11 )
  (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8
  if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@13
  to:anim::@7
anim::@7: scope:[anim]  from anim::@2
  (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0
  (byte~) anim::yidx#11 ← (byte) anim::yidx#2
  to:anim::@3
anim::@3: scope:[anim]  from anim::@13 anim::@7
  (byte) anim::yidx#6 ← phi( anim::@13/(byte~) anim::yidx#10 anim::@7/(byte~) anim::yidx#11 )
  (byte) anim::j2#1 ← -- (byte) anim::j2#3
  (byte) anim::j2#2 ← -- (byte) anim::j2#1
  (byte) anim::j#1 ← ++ (byte) anim::j#2
  if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@11
  to:anim::@8
anim::@8: scope:[anim]  from anim::@3
  (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13
  if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14
  to:anim::@9
anim::@9: scope:[anim]  from anim::@8
  to:anim::@4
anim::@4: scope:[anim]  from anim::@14 anim::@9
  (byte) sin_idx_x#11 ← phi( anim::@14/(byte~) sin_idx_x#28 anim::@9/(byte/signed byte/word/signed word) 0 )
  (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13
  if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15
  to:anim::@10
anim::@10: scope:[anim]  from anim::@4
  to:anim::@5
anim::@5: scope:[anim]  from anim::@10 anim::@15
  (byte) sin_idx_y#11 ← phi( anim::@10/(byte/signed byte/word/signed word) 0 anim::@15/(byte~) sin_idx_y#28 )
  *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0)
  to:anim::@return
anim::@return: scope:[anim]  from anim::@5
  return 
  to:@return
anim::@15: scope:[anim]  from anim::@4
  (byte~) sin_idx_y#28 ← (byte) sin_idx_y#3
  to:anim::@5
anim::@14: scope:[anim]  from anim::@8
  (byte~) sin_idx_x#28 ← (byte) sin_idx_x#3
  to:anim::@4
anim::@11: scope:[anim]  from anim::@3
  (byte~) anim::xidx#9 ← (byte) anim::xidx#5
  (byte~) anim::j2#8 ← (byte) anim::j2#2
  (byte~) anim::yidx#9 ← (byte) anim::yidx#6
  (byte~) anim::j#7 ← (byte) anim::j#1
  to:anim::@1
anim::@13: scope:[anim]  from anim::@2
  (byte~) anim::yidx#10 ← (byte) anim::yidx#1
  to:anim::@3
anim::@12: scope:[anim]  from anim::@1
  (byte~) anim::xidx#10 ← (byte) anim::xidx#1
  to:anim::@2
init: scope:[init]  from main
  to:init::@1
init::@1: scope:[init]  from init init::@7
  (byte*) init::sc#2 ← phi( init/(const byte*) SCREEN#0 init::@7/(byte*~) init::sc#3 )
  *((byte*) init::sc#2) ← (byte) ' '
  (byte*) init::sc#1 ← ++ (byte*) init::sc#2
  if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@7
  to:init::@2
init::@2: scope:[init]  from init::@1
  call place_sprites param-assignment
  to:init::@3
init::@3: scope:[init]  from init::@2
  call gen_sprites param-assignment
  to:init::@4
init::@4: scope:[init]  from init::@3
  call gen_sintab param-assignment
  to:init::@5
init::@5: scope:[init]  from init::@4
  call gen_sintab param-assignment
  to:init::@return
init::@return: scope:[init]  from init::@5
  return 
  to:@return
init::@7: scope:[init]  from init::@1
  (byte*~) init::sc#3 ← (byte*) init::sc#1
  to:init::@1
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte[]) sintab_x#0 init::@5/(const byte[]) sintab_y#0 )
  (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) sinlen_x#0 init::@5/(const byte) sinlen_y#0 )
  (byte) gen_sintab::min#2 ← phi( init::@4/(byte/signed byte/word/signed word) 16 init::@5/(byte/signed byte/word/signed word) 48 )
  (byte) gen_sintab::max#2 ← phi( init::@4/(byte/word/signed word) 255 init::@5/(byte/word/signed word) 208 )
  (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2
  (word) setFAC::w#0 ← (word~) gen_sintab::$0
  (word~) setFAC::w#6 ← (word) setFAC::w#0
  call setFAC param-assignment
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  call setARGtoFAC param-assignment
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2
  (word) setFAC::w#1 ← (word~) gen_sintab::$3
  (word~) setFAC::w#9 ← (word) setFAC::w#1
  call setFAC param-assignment
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  call setMEMtoFAC param-assignment
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  call subFACfromARG param-assignment
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  call setMEMtoFAC param-assignment
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  call setFAC param-assignment
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  call divMEMbyFAC param-assignment
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  call setMEMtoFAC param-assignment
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  call addMEMtoFAC param-assignment
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  call setMEMtoFAC param-assignment
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@23
  (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word) 0 gen_sintab::@23/(byte~) gen_sintab::i#12 )
  (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10
  (word) setFAC::w#3 ← (word~) gen_sintab::$13
  (word~) setFAC::w#7 ← (word) setFAC::w#3
  call setFAC param-assignment
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  call mulFACbyMEM param-assignment
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  call setMEMtoFAC param-assignment
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10
  (word) setFAC::w#4 ← (word~) gen_sintab::$17
  (word~) setFAC::w#8 ← (word) setFAC::w#4
  call setFAC param-assignment
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  call divMEMbyFAC param-assignment
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  call sinFAC param-assignment
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  call mulFACbyMEM param-assignment
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  call addMEMtoFAC param-assignment
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  call getFAC param-assignment
  (word) getFAC::return#2 ← (word) getFAC::return#0
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  (word~) gen_sintab::$23 ← (word) getFAC::return#2
  (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23
  *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24
  *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0)
  (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10
  if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@23
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  return 
  to:@return
gen_sintab::@23: scope:[gen_sintab]  from gen_sintab::@22
  (byte~) gen_sintab::i#12 ← (byte) gen_sintab::i#1
  to:gen_sintab::@1
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0)
  (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0)
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  return 
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte[]) gen_sintab::f_min#0 gen_sintab::@20/(const byte[]) gen_sintab::f_min#0 )
  (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2
  (byte*~) prepareMEM::mem#6 ← (byte*) prepareMEM::mem#2
  call prepareMEM param-assignment
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  return 
  to:@return
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*~) prepareMEM::mem#6 divMEMbyFAC/(byte*~) prepareMEM::mem#7 mulFACbyMEM/(byte*~) prepareMEM::mem#8 setFAC/(byte*~) prepareMEM::mem#9 setMEMtoFAC/(byte*~) prepareMEM::mem#10 )
  (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5
  *((const byte*) memLo#0) ← (byte~) prepareMEM::$0
  (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5
  *((const byte*) memHi#0) ← (byte~) prepareMEM::$1
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  return 
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) gen_sintab::f_2pi#0 gen_sintab::@19/(const byte[]) gen_sintab::f_amp#0 )
  (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2
  (byte*~) prepareMEM::mem#8 ← (byte*) prepareMEM::mem#4
  call prepareMEM param-assignment
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  return 
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  return 
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte[]) gen_sintab::f_i#0 gen_sintab::@9/(const byte[]) gen_sintab::f_amp#0 )
  (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2
  (byte*~) prepareMEM::mem#7 ← (byte*) prepareMEM::mem#3
  call prepareMEM param-assignment
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  return 
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  (word) setFAC::w#5 ← phi( gen_sintab/(word~) setFAC::w#6 gen_sintab::@1/(word~) setFAC::w#7 gen_sintab::@16/(word~) setFAC::w#8 gen_sintab::@4/(word~) setFAC::w#9 gen_sintab::@8/(byte/signed byte/word/signed word) 2 )
  (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5
  (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0
  (byte*~) prepareMEM::mem#9 ← (byte*) prepareMEM::mem#0
  call prepareMEM param-assignment
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  return 
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte[]) gen_sintab::f_amp#0 gen_sintab::@12/(const byte[]) gen_sintab::f_min#0 gen_sintab::@15/(const byte[]) gen_sintab::f_i#0 gen_sintab::@5/(const byte[]) gen_sintab::f_min#0 gen_sintab::@7/(const byte[]) gen_sintab::f_amp#0 )
  (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5
  (byte*~) prepareMEM::mem#10 ← (byte*) prepareMEM::mem#1
  call prepareMEM param-assignment
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  return 
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  return 
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  return 
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@4
  (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte[]) sprites#0 gen_sprites::@4/(byte*~) gen_sprites::spr#4 )
  (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte/signed byte/word/signed word) 0 gen_sprites::@4/(byte~) gen_sprites::i#4 )
  (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2
  (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0
  (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2
  call gen_chargen_sprite param-assignment
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64
  (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2
  if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@4
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  return 
  to:@return
gen_sprites::@4: scope:[gen_sprites]  from gen_sprites::@3
  (byte~) gen_sprites::i#4 ← (byte) gen_sprites::i#1
  (byte*~) gen_sprites::spr#4 ← (byte*) gen_sprites::spr#1
  to:gen_sprites::@1
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0
  (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3
  (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1
  asm { sei }
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50
  (byte*~) gen_chargen_sprite::sprite#13 ← (byte*) gen_chargen_sprite::sprite#0
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@11
  (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*~) gen_chargen_sprite::sprite#13 gen_chargen_sprite::@11/(byte*~) gen_chargen_sprite::sprite#14 )
  (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@11/(byte~) gen_chargen_sprite::y#11 )
  (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2
  (byte~) gen_chargen_sprite::bits#9 ← (byte) gen_chargen_sprite::bits#0
  (byte*~) gen_chargen_sprite::sprite#15 ← (byte*) gen_chargen_sprite::sprite#11
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@12
  (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::x#9 )
  (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*~) gen_chargen_sprite::sprite#15 gen_chargen_sprite::@12/(byte*~) gen_chargen_sprite::sprite#16 )
  (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::s_gen_cnt#9 )
  (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::s_gen#10 )
  (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte~) gen_chargen_sprite::bits#9 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::bits#10 )
  (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128
  if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@6/(byte/signed byte/word/signed word) 1 )
  (byte~) gen_chargen_sprite::s_gen#11 ← (byte) gen_chargen_sprite::s_gen#5
  (byte~) gen_chargen_sprite::s_gen_cnt#10 ← (byte) gen_chargen_sprite::s_gen_cnt#4
  (byte*~) gen_chargen_sprite::sprite#17 ← (byte*) gen_chargen_sprite::sprite#10
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@13 gen_chargen_sprite::@3
  (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*~) gen_chargen_sprite::sprite#17 gen_chargen_sprite::@13/(byte*~) gen_chargen_sprite::sprite#18 )
  (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@13/(byte~) gen_chargen_sprite::b#5 )
  (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte~) gen_chargen_sprite::s_gen_cnt#10 gen_chargen_sprite::@13/(byte~) gen_chargen_sprite::s_gen_cnt#11 )
  (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte~) gen_chargen_sprite::s_gen#11 gen_chargen_sprite::@13/(byte~) gen_chargen_sprite::s_gen#12 )
  (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3
  (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3
  if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@14
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1
  *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1
  (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3
  (byte*~) gen_chargen_sprite::sprite#20 ← (byte*) gen_chargen_sprite::sprite#1
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@14 gen_chargen_sprite::@7
  (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@14/(byte*~) gen_chargen_sprite::sprite#19 gen_chargen_sprite::@7/(byte*~) gen_chargen_sprite::sprite#20 )
  (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@14/(byte~) gen_chargen_sprite::s_gen_cnt#12 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 )
  (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@14/(byte~) gen_chargen_sprite::s_gen#13 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 )
  (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2
  if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@13
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1
  (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6
  if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@12
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6
  (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2
  if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@11
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  return 
  to:@return
gen_chargen_sprite::@11: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  (byte~) gen_chargen_sprite::y#11 ← (byte) gen_chargen_sprite::y#1
  (byte*~) gen_chargen_sprite::sprite#14 ← (byte*) gen_chargen_sprite::sprite#2
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@12: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  (byte~) gen_chargen_sprite::bits#10 ← (byte) gen_chargen_sprite::bits#1
  (byte~) gen_chargen_sprite::s_gen#10 ← (byte) gen_chargen_sprite::s_gen#6
  (byte~) gen_chargen_sprite::s_gen_cnt#9 ← (byte) gen_chargen_sprite::s_gen_cnt#5
  (byte*~) gen_chargen_sprite::sprite#16 ← (byte*) gen_chargen_sprite::sprite#4
  (byte~) gen_chargen_sprite::x#9 ← (byte) gen_chargen_sprite::x#1
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@13: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  (byte~) gen_chargen_sprite::s_gen#12 ← (byte) gen_chargen_sprite::s_gen#6
  (byte~) gen_chargen_sprite::s_gen_cnt#11 ← (byte) gen_chargen_sprite::s_gen_cnt#5
  (byte~) gen_chargen_sprite::b#5 ← (byte) gen_chargen_sprite::b#1
  (byte*~) gen_chargen_sprite::sprite#18 ← (byte*) gen_chargen_sprite::sprite#4
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@14: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  (byte~) gen_chargen_sprite::s_gen#13 ← (byte) gen_chargen_sprite::s_gen#1
  (byte~) gen_chargen_sprite::s_gen_cnt#12 ← (byte) gen_chargen_sprite::s_gen_cnt#1
  (byte*~) gen_chargen_sprite::sprite#19 ← (byte*) gen_chargen_sprite::sprite#3
  to:gen_chargen_sprite::@5
place_sprites: scope:[place_sprites]  from init::@2
  *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127
  *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@3
  (byte) place_sprites::col#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 5 place_sprites::@3/(byte~) place_sprites::col#3 )
  (byte) place_sprites::j2#3 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@3/(byte~) place_sprites::j2#4 )
  (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 60 place_sprites::@3/(byte~) place_sprites::spr_x#3 )
  (byte) place_sprites::j#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@3/(byte~) place_sprites::j#3 )
  (byte) place_sprites::spr_id#2 ← phi( place_sprites/((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 place_sprites::@3/(byte~) place_sprites::spr_id#3 )
  *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2
  (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2
  *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2
  *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80
  *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2
  (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32
  (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5
  (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3
  (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1
  (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2
  if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@3
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  return 
  to:@return
place_sprites::@3: scope:[place_sprites]  from place_sprites::@1
  (byte~) place_sprites::spr_id#3 ← (byte) place_sprites::spr_id#1
  (byte~) place_sprites::j#3 ← (byte) place_sprites::j#1
  (byte~) place_sprites::spr_x#3 ← (byte) place_sprites::spr_x#1
  (byte~) place_sprites::j2#4 ← (byte) place_sprites::j2#2
  (byte~) place_sprites::col#3 ← (byte) place_sprites::col#1
  to:place_sprites::@1

Adding NOP phi() at start of @begin
Adding NOP phi() at start of @39
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of anim::@9
Adding NOP phi() at start of anim::@10
Adding NOP phi() at start of init
Adding NOP phi() at start of init::@2
Adding NOP phi() at start of init::@3
Adding NOP phi() at start of init::@4
Adding NOP phi() at start of init::@5
Adding NOP phi() at start of gen_sintab::@3
Adding NOP phi() at start of gen_sintab::@5
Adding NOP phi() at start of gen_sintab::@6
Adding NOP phi() at start of gen_sintab::@7
Adding NOP phi() at start of gen_sintab::@8
Adding NOP phi() at start of gen_sintab::@9
Adding NOP phi() at start of gen_sintab::@10
Adding NOP phi() at start of gen_sintab::@11
Adding NOP phi() at start of gen_sintab::@12
Adding NOP phi() at start of gen_sintab::@14
Adding NOP phi() at start of gen_sintab::@15
Adding NOP phi() at start of gen_sintab::@17
Adding NOP phi() at start of gen_sintab::@18
Adding NOP phi() at start of gen_sintab::@19
Adding NOP phi() at start of gen_sintab::@20
Adding NOP phi() at start of gen_sintab::@21
Adding NOP phi() at start of gen_sprites
Adding NOP phi() at start of gen_chargen_sprite::@6
CALL GRAPH
Calls in [] to main:2 
Calls in [main] to init:5 anim:9 
Calls in [init] to place_sprites:62 gen_sprites:64 gen_sintab:66 gen_sintab:68 
Calls in [gen_sintab] to setFAC:75 setARGtoFAC:77 setFAC:82 setMEMtoFAC:84 subFACfromARG:86 setMEMtoFAC:88 setFAC:90 divMEMbyFAC:92 setMEMtoFAC:94 addMEMtoFAC:96 setMEMtoFAC:98 setFAC:103 mulFACbyMEM:105 setMEMtoFAC:107 setFAC:111 divMEMbyFAC:113 sinFAC:115 mulFACbyMEM:117 addMEMtoFAC:119 getFAC:121 
Calls in [addMEMtoFAC] to prepareMEM:138 
Calls in [mulFACbyMEM] to prepareMEM:150 
Calls in [divMEMbyFAC] to prepareMEM:158 
Calls in [setFAC] to prepareMEM:165 
Calls in [setMEMtoFAC] to prepareMEM:171 
Calls in [gen_sprites] to gen_chargen_sprite:183 

Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
CONTROL FLOW GRAPH - LIVE RANGES FOUND
@begin: scope:[]  from
  [0] phi() [ ]
  to:@39
@39: scope:[]  from @begin
  [1] phi() [ ]
  [2] call main param-assignment [ ]
  to:@end
@end: scope:[]  from @39
  [3] phi() [ ]
main: scope:[main]  from @39
  [4] phi() [ ]
  [5] call init param-assignment [ ]
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@7
  [6] (byte) sin_idx_y#13 ← phi( main::@7/(byte~) sin_idx_y#27 main/(byte/signed byte/word/signed word) 0 ) [ sin_idx_x#13 sin_idx_y#13 ]
  [6] (byte) sin_idx_x#13 ← phi( main::@7/(byte~) sin_idx_x#27 main/(byte/signed byte/word/signed word) 0 ) [ sin_idx_x#13 sin_idx_y#13 ]
  [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ]
  to:main::@3
main::@3: scope:[main]  from main::@2
  [8] phi() [ sin_idx_x#13 sin_idx_y#13 ]
  [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ]
  to:main::@6
main::@6: scope:[main]  from main::@3
  [10] if(true) goto main::@7 [ sin_idx_x#11 sin_idx_y#11 ]
  to:main::@return
main::@return: scope:[main]  from main::@6
  [11] return  [ ]
  to:@return
main::@7: scope:[main]  from main::@6
  [12] (byte~) sin_idx_x#27 ← (byte) sin_idx_x#11 [ sin_idx_x#27 sin_idx_y#11 ]
  [13] (byte~) sin_idx_y#27 ← (byte) sin_idx_y#11 [ sin_idx_x#27 sin_idx_y#27 ]
  to:main::@2
anim: scope:[anim]  from main::@3
  [14] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ]
  [15] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ]
  [16] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ]
  [17] (byte~) anim::xidx#8 ← (byte) anim::xidx#0 [ sin_idx_x#13 sin_idx_y#13 anim::yidx#0 anim::xidx#8 ]
  [18] (byte~) anim::yidx#8 ← (byte) anim::yidx#0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#8 anim::yidx#8 ]
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@11
  [19] (byte) anim::j#2 ← phi( anim/(byte/signed byte/word/signed word) 0 anim::@11/(byte~) anim::j#7 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [19] (byte) anim::yidx#3 ← phi( anim/(byte~) anim::yidx#8 anim::@11/(byte~) anim::yidx#9 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [19] (byte) anim::j2#3 ← phi( anim/(byte/signed byte/word/signed word) 12 anim::@11/(byte~) anim::j2#8 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [19] (byte) anim::xidx#3 ← phi( anim/(byte~) anim::xidx#8 anim::@11/(byte~) anim::xidx#9 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [20] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ]
  [21] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [22] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ]
  [23] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [24] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ]
  [25] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@12 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ]
  to:anim::@6
anim::@6: scope:[anim]  from anim::@1
  [26] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ]
  [27] (byte~) anim::xidx#11 ← (byte) anim::xidx#2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#11 ]
  to:anim::@2
anim::@2: scope:[anim]  from anim::@12 anim::@6
  [28] (byte) anim::xidx#5 ← phi( anim::@12/(byte~) anim::xidx#10 anim::@6/(byte~) anim::xidx#11 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#5 ]
  [29] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ]
  [30] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@13 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ]
  to:anim::@7
anim::@7: scope:[anim]  from anim::@2
  [31] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ]
  [32] (byte~) anim::yidx#11 ← (byte) anim::yidx#2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#11 ]
  to:anim::@3
anim::@3: scope:[anim]  from anim::@13 anim::@7
  [33] (byte) anim::yidx#6 ← phi( anim::@13/(byte~) anim::yidx#10 anim::@7/(byte~) anim::yidx#11 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#6 ]
  [34] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ]
  [35] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#2 ]
  [36] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::yidx#6 anim::j2#2 anim::j#1 ]
  [37] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@11 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::yidx#6 anim::j2#2 anim::j#1 ]
  to:anim::@8
anim::@8: scope:[anim]  from anim::@3
  [38] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ]
  [39] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ]
  to:anim::@9
anim::@9: scope:[anim]  from anim::@8
  [40] phi() [ sin_idx_y#13 ]
  to:anim::@4
anim::@4: scope:[anim]  from anim::@14 anim::@9
  [41] (byte) sin_idx_x#11 ← phi( anim::@14/(byte~) sin_idx_x#28 anim::@9/(byte/signed byte/word/signed word) 0 ) [ sin_idx_y#13 sin_idx_x#11 ]
  [42] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ]
  [43] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ]
  to:anim::@10
anim::@10: scope:[anim]  from anim::@4
  [44] phi() [ sin_idx_x#11 ]
  to:anim::@5
anim::@5: scope:[anim]  from anim::@10 anim::@15
  [45] (byte) sin_idx_y#11 ← phi( anim::@10/(byte/signed byte/word/signed word) 0 anim::@15/(byte~) sin_idx_y#28 ) [ sin_idx_x#11 sin_idx_y#11 ]
  [46] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ]
  to:anim::@return
anim::@return: scope:[anim]  from anim::@5
  [47] return  [ sin_idx_x#11 sin_idx_y#11 ]
  to:@return
anim::@15: scope:[anim]  from anim::@4
  [48] (byte~) sin_idx_y#28 ← (byte) sin_idx_y#3 [ sin_idx_x#11 sin_idx_y#28 ]
  to:anim::@5
anim::@14: scope:[anim]  from anim::@8
  [49] (byte~) sin_idx_x#28 ← (byte) sin_idx_x#3 [ sin_idx_y#13 sin_idx_x#28 ]
  to:anim::@4
anim::@11: scope:[anim]  from anim::@3
  [50] (byte~) anim::xidx#9 ← (byte) anim::xidx#5 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#9 anim::yidx#6 anim::j2#2 anim::j#1 ]
  [51] (byte~) anim::j2#8 ← (byte) anim::j2#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#9 anim::j2#8 anim::yidx#6 anim::j#1 ]
  [52] (byte~) anim::yidx#9 ← (byte) anim::yidx#6 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#9 anim::j2#8 anim::yidx#9 anim::j#1 ]
  [53] (byte~) anim::j#7 ← (byte) anim::j#1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#9 anim::j2#8 anim::yidx#9 anim::j#7 ]
  to:anim::@1
anim::@13: scope:[anim]  from anim::@2
  [54] (byte~) anim::yidx#10 ← (byte) anim::yidx#1 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#10 ]
  to:anim::@3
anim::@12: scope:[anim]  from anim::@1
  [55] (byte~) anim::xidx#10 ← (byte) anim::xidx#1 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#10 ]
  to:anim::@2
init: scope:[init]  from main
  [56] phi() [ ]
  to:init::@1
init::@1: scope:[init]  from init init::@7
  [57] (byte*) init::sc#2 ← phi( init/(const byte*) SCREEN#0 init::@7/(byte*~) init::sc#3 ) [ init::sc#2 ]
  [58] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ]
  [59] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ]
  [60] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@7 [ init::sc#1 ]
  to:init::@2
init::@2: scope:[init]  from init::@1
  [61] phi() [ ]
  [62] call place_sprites param-assignment [ ]
  to:init::@3
init::@3: scope:[init]  from init::@2
  [63] phi() [ ]
  [64] call gen_sprites param-assignment [ ]
  to:init::@4
init::@4: scope:[init]  from init::@3
  [65] phi() [ ]
  [66] call gen_sintab param-assignment [ ]
  to:init::@5
init::@5: scope:[init]  from init::@4
  [67] phi() [ ]
  [68] call gen_sintab param-assignment [ ]
  to:init::@return
init::@return: scope:[init]  from init::@5
  [69] return  [ ]
  to:@return
init::@7: scope:[init]  from init::@1
  [70] (byte*~) init::sc#3 ← (byte*) init::sc#1 [ init::sc#3 ]
  to:init::@1
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  [71] (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte[]) sintab_x#0 init::@5/(const byte[]) sintab_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [71] (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) sinlen_x#0 init::@5/(const byte) sinlen_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [71] (byte) gen_sintab::min#2 ← phi( init::@4/(byte/signed byte/word/signed word) 16 init::@5/(byte/signed byte/word/signed word) 48 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [71] (byte) gen_sintab::max#2 ← phi( init::@4/(byte/word/signed word) 255 init::@5/(byte/word/signed word) 208 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [72] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ]
  [73] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ]
  [74] (word~) setFAC::w#6 ← (word) setFAC::w#0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#6 ]
  [75] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  [76] phi() [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [77] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  [79] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ]
  [80] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ]
  [81] (word~) setFAC::w#9 ← (word) setFAC::w#1 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#9 ]
  [82] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  [83] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [84] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  [85] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [86] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  [87] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [88] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  [89] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [90] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  [91] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [92] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  [93] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [94] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  [95] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [96] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  [97] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [98] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@23
  [99] (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word) 0 gen_sintab::@23/(byte~) gen_sintab::i#12 ) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [100] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ]
  [101] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ]
  [102] (word~) setFAC::w#7 ← (word) setFAC::w#3 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#7 ]
  [103] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  [104] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [105] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  [106] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [107] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  [108] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ]
  [109] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ]
  [110] (word~) setFAC::w#8 ← (word) setFAC::w#4 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#8 ]
  [111] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  [112] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [113] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  [114] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [115] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  [116] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [117] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  [118] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [119] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  [120] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [121] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ]
  [122] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ]
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  [123] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ]
  [124] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ]
  [125] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [126] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [127] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ]
  [128] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ]
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  [129] return  [ ]
  to:@return
gen_sintab::@23: scope:[gen_sintab]  from gen_sintab::@22
  [130] (byte~) gen_sintab::i#12 ← (byte) gen_sintab::i#1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#12 ]
  to:gen_sintab::@1
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  [132] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ]
  [133] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ]
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  [134] return  [ getFAC::return#0 ]
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  [135] (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte[]) gen_sintab::f_min#0 gen_sintab::@20/(const byte[]) gen_sintab::f_min#0 ) [ addMEMtoFAC::mem#2 ]
  [136] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ]
  [137] (byte*~) prepareMEM::mem#6 ← (byte*) prepareMEM::mem#2 [ prepareMEM::mem#6 ]
  [138] call prepareMEM param-assignment [ ]
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  [140] return  [ ]
  to:@return
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  [141] (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*~) prepareMEM::mem#6 divMEMbyFAC/(byte*~) prepareMEM::mem#7 mulFACbyMEM/(byte*~) prepareMEM::mem#8 setFAC/(byte*~) prepareMEM::mem#9 setMEMtoFAC/(byte*~) prepareMEM::mem#10 ) [ prepareMEM::mem#5 ]
  [142] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ]
  [143] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ]
  [144] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ]
  [145] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ]
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  [146] return  [ ]
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  [147] (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) gen_sintab::f_2pi#0 gen_sintab::@19/(const byte[]) gen_sintab::f_amp#0 ) [ mulFACbyMEM::mem#2 ]
  [148] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ]
  [149] (byte*~) prepareMEM::mem#8 ← (byte*) prepareMEM::mem#4 [ prepareMEM::mem#8 ]
  [150] call prepareMEM param-assignment [ ]
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  [152] return  [ ]
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  [154] return  [ ]
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  [155] (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte[]) gen_sintab::f_i#0 gen_sintab::@9/(const byte[]) gen_sintab::f_amp#0 ) [ divMEMbyFAC::mem#2 ]
  [156] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ]
  [157] (byte*~) prepareMEM::mem#7 ← (byte*) prepareMEM::mem#3 [ prepareMEM::mem#7 ]
  [158] call prepareMEM param-assignment [ ]
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  [160] return  [ ]
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  [161] (word) setFAC::w#5 ← phi( gen_sintab/(word~) setFAC::w#6 gen_sintab::@1/(word~) setFAC::w#7 gen_sintab::@16/(word~) setFAC::w#8 gen_sintab::@4/(word~) setFAC::w#9 gen_sintab::@8/(byte/signed byte/word/signed word) 2 ) [ setFAC::w#5 ]
  [162] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ]
  [163] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ]
  [164] (byte*~) prepareMEM::mem#9 ← (byte*) prepareMEM::mem#0 [ prepareMEM::mem#9 ]
  [165] call prepareMEM param-assignment [ ]
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  [167] return  [ ]
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  [168] (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte[]) gen_sintab::f_amp#0 gen_sintab::@12/(const byte[]) gen_sintab::f_min#0 gen_sintab::@15/(const byte[]) gen_sintab::f_i#0 gen_sintab::@5/(const byte[]) gen_sintab::f_min#0 gen_sintab::@7/(const byte[]) gen_sintab::f_amp#0 ) [ setMEMtoFAC::mem#5 ]
  [169] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ]
  [170] (byte*~) prepareMEM::mem#10 ← (byte*) prepareMEM::mem#1 [ prepareMEM::mem#10 ]
  [171] call prepareMEM param-assignment [ ]
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  [173] return  [ ]
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  [175] return  [ ]
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  [177] return  [ ]
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  [178] phi() [ ]
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@4
  [179] (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte[]) sprites#0 gen_sprites::@4/(byte*~) gen_sprites::spr#4 ) [ gen_sprites::i#2 gen_sprites::spr#2 ]
  [179] (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte/signed byte/word/signed word) 0 gen_sprites::@4/(byte~) gen_sprites::i#4 ) [ gen_sprites::i#2 gen_sprites::spr#2 ]
  [180] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ]
  [181] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ]
  [182] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ]
  [183] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ]
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  [184] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ]
  [185] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::spr#1 gen_sprites::i#1 ]
  [186] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@4 [ gen_sprites::spr#1 gen_sprites::i#1 ]
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  [187] return  [ ]
  to:@return
gen_sprites::@4: scope:[gen_sprites]  from gen_sprites::@3
  [188] (byte~) gen_sprites::i#4 ← (byte) gen_sprites::i#1 [ gen_sprites::i#4 gen_sprites::spr#1 ]
  [189] (byte*~) gen_sprites::spr#4 ← (byte*) gen_sprites::spr#1 [ gen_sprites::i#4 gen_sprites::spr#4 ]
  to:gen_sprites::@1
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  [190] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ]
  [191] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ]
  [192] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ]
  asm { sei }
  [194] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ]
  [195] (byte*~) gen_chargen_sprite::sprite#13 ← (byte*) gen_chargen_sprite::sprite#0 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::sprite#13 ]
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@11
  [196] (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*~) gen_chargen_sprite::sprite#13 gen_chargen_sprite::@11/(byte*~) gen_chargen_sprite::sprite#14 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ]
  [196] (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@11/(byte~) gen_chargen_sprite::y#11 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ]
  [197] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ]
  [198] (byte~) gen_chargen_sprite::bits#9 ← (byte) gen_chargen_sprite::bits#0 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#9 ]
  [199] (byte*~) gen_chargen_sprite::sprite#15 ← (byte*) gen_chargen_sprite::sprite#11 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#9 gen_chargen_sprite::sprite#15 ]
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@12
  [200] (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::x#9 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [200] (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*~) gen_chargen_sprite::sprite#15 gen_chargen_sprite::@12/(byte*~) gen_chargen_sprite::sprite#16 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [200] (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::s_gen_cnt#9 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [200] (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::s_gen#10 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [200] (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte~) gen_chargen_sprite::bits#9 gen_chargen_sprite::@12/(byte~) gen_chargen_sprite::bits#10 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [201] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ]
  [202] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  [203] phi() [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  [204] (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@6/(byte/signed byte/word/signed word) 1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 ]
  [205] (byte~) gen_chargen_sprite::s_gen#11 ← (byte) gen_chargen_sprite::s_gen#5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#11 ]
  [206] (byte~) gen_chargen_sprite::s_gen_cnt#10 ← (byte) gen_chargen_sprite::s_gen_cnt#4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#11 gen_chargen_sprite::s_gen_cnt#10 ]
  [207] (byte*~) gen_chargen_sprite::sprite#17 ← (byte*) gen_chargen_sprite::sprite#10 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#11 gen_chargen_sprite::s_gen_cnt#10 gen_chargen_sprite::sprite#17 ]
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@13 gen_chargen_sprite::@3
  [208] (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*~) gen_chargen_sprite::sprite#17 gen_chargen_sprite::@13/(byte*~) gen_chargen_sprite::sprite#18 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [208] (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@13/(byte~) gen_chargen_sprite::b#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [208] (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte~) gen_chargen_sprite::s_gen_cnt#10 gen_chargen_sprite::@13/(byte~) gen_chargen_sprite::s_gen_cnt#11 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [208] (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte~) gen_chargen_sprite::s_gen#11 gen_chargen_sprite::@13/(byte~) gen_chargen_sprite::s_gen#12 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [209] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ]
  [210] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ]
  [211] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ]
  [212] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@14 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ]
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  [213] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ]
  [214] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ]
  [215] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [216] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ]
  [217] (byte*~) gen_chargen_sprite::sprite#20 ← (byte*) gen_chargen_sprite::sprite#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#20 ]
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@14 gen_chargen_sprite::@7
  [218] (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@14/(byte*~) gen_chargen_sprite::sprite#19 gen_chargen_sprite::@7/(byte*~) gen_chargen_sprite::sprite#20 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ]
  [218] (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@14/(byte~) gen_chargen_sprite::s_gen_cnt#12 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ]
  [218] (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@14/(byte~) gen_chargen_sprite::s_gen#13 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ]
  [219] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::b#1 ]
  [220] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@13 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::b#1 ]
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  [221] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::bits#1 ]
  [222] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::bits#1 gen_chargen_sprite::x#1 ]
  [223] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@12 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::bits#1 gen_chargen_sprite::x#1 ]
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  [224] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ]
  [225] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::y#1 ]
  [226] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@11 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::y#1 ]
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  [227] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ]
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  [229] return  [ ]
  to:@return
gen_chargen_sprite::@11: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  [230] (byte~) gen_chargen_sprite::y#11 ← (byte) gen_chargen_sprite::y#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#11 gen_chargen_sprite::sprite#2 ]
  [231] (byte*~) gen_chargen_sprite::sprite#14 ← (byte*) gen_chargen_sprite::sprite#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#11 gen_chargen_sprite::sprite#14 ]
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@12: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  [232] (byte~) gen_chargen_sprite::bits#10 ← (byte) gen_chargen_sprite::bits#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#10 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ]
  [233] (byte~) gen_chargen_sprite::s_gen#10 ← (byte) gen_chargen_sprite::s_gen#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#10 gen_chargen_sprite::s_gen#10 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ]
  [234] (byte~) gen_chargen_sprite::s_gen_cnt#9 ← (byte) gen_chargen_sprite::s_gen_cnt#5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#10 gen_chargen_sprite::s_gen#10 gen_chargen_sprite::s_gen_cnt#9 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ]
  [235] (byte*~) gen_chargen_sprite::sprite#16 ← (byte*) gen_chargen_sprite::sprite#4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#10 gen_chargen_sprite::s_gen#10 gen_chargen_sprite::s_gen_cnt#9 gen_chargen_sprite::sprite#16 gen_chargen_sprite::x#1 ]
  [236] (byte~) gen_chargen_sprite::x#9 ← (byte) gen_chargen_sprite::x#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#10 gen_chargen_sprite::s_gen#10 gen_chargen_sprite::s_gen_cnt#9 gen_chargen_sprite::sprite#16 gen_chargen_sprite::x#9 ]
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@13: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  [237] (byte~) gen_chargen_sprite::s_gen#12 ← (byte) gen_chargen_sprite::s_gen#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#12 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::b#1 ]
  [238] (byte~) gen_chargen_sprite::s_gen_cnt#11 ← (byte) gen_chargen_sprite::s_gen_cnt#5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#12 gen_chargen_sprite::s_gen_cnt#11 gen_chargen_sprite::sprite#4 gen_chargen_sprite::b#1 ]
  [239] (byte~) gen_chargen_sprite::b#5 ← (byte) gen_chargen_sprite::b#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#12 gen_chargen_sprite::s_gen_cnt#11 gen_chargen_sprite::b#5 gen_chargen_sprite::sprite#4 ]
  [240] (byte*~) gen_chargen_sprite::sprite#18 ← (byte*) gen_chargen_sprite::sprite#4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#12 gen_chargen_sprite::s_gen_cnt#11 gen_chargen_sprite::b#5 gen_chargen_sprite::sprite#18 ]
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@14: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  [241] (byte~) gen_chargen_sprite::s_gen#13 ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::s_gen#13 ]
  [242] (byte~) gen_chargen_sprite::s_gen_cnt#12 ← (byte) gen_chargen_sprite::s_gen_cnt#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#13 gen_chargen_sprite::s_gen_cnt#12 ]
  [243] (byte*~) gen_chargen_sprite::sprite#19 ← (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::s_gen#13 gen_chargen_sprite::s_gen_cnt#12 gen_chargen_sprite::sprite#19 ]
  to:gen_chargen_sprite::@5
place_sprites: scope:[place_sprites]  from init::@2
  [244] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ]
  [245] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ]
  [246] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ]
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@3
  [247] (byte) place_sprites::col#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 5 place_sprites::@3/(byte~) place_sprites::col#3 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [247] (byte) place_sprites::j2#3 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@3/(byte~) place_sprites::j2#4 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [247] (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 60 place_sprites::@3/(byte~) place_sprites::spr_x#3 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [247] (byte) place_sprites::j#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@3/(byte~) place_sprites::j#3 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [247] (byte) place_sprites::spr_id#2 ← phi( place_sprites/((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 place_sprites::@3/(byte~) place_sprites::spr_id#3 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [248] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [249] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [250] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [251] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [252] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [253] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ]
  [254] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ]
  [255] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ]
  [256] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#2 ]
  [257] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#2 place_sprites::j#1 ]
  [258] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@3 [ place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#2 place_sprites::j#1 ]
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  [259] return  [ ]
  to:@return
place_sprites::@3: scope:[place_sprites]  from place_sprites::@1
  [260] (byte~) place_sprites::spr_id#3 ← (byte) place_sprites::spr_id#1 [ place_sprites::spr_id#3 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#2 place_sprites::j#1 ]
  [261] (byte~) place_sprites::j#3 ← (byte) place_sprites::j#1 [ place_sprites::spr_id#3 place_sprites::j#3 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#2 ]
  [262] (byte~) place_sprites::spr_x#3 ← (byte) place_sprites::spr_x#1 [ place_sprites::spr_id#3 place_sprites::j#3 place_sprites::spr_x#3 place_sprites::col#1 place_sprites::j2#2 ]
  [263] (byte~) place_sprites::j2#4 ← (byte) place_sprites::j2#2 [ place_sprites::spr_id#3 place_sprites::j#3 place_sprites::spr_x#3 place_sprites::j2#4 place_sprites::col#1 ]
  [264] (byte~) place_sprites::col#3 ← (byte) place_sprites::col#1 [ place_sprites::spr_id#3 place_sprites::j#3 place_sprites::spr_x#3 place_sprites::j2#4 place_sprites::col#3 ]
  to:place_sprites::@1

Created 44 initial phi equivalence classes
Coalesced [12] sin_idx_x#27 ← sin_idx_x#11
Coalesced [13] sin_idx_y#27 ← sin_idx_y#11
Coalesced [17] anim::xidx#8 ← anim::xidx#0
Coalesced [18] anim::yidx#8 ← anim::yidx#0
Coalesced [27] anim::xidx#11 ← anim::xidx#2
Coalesced [32] anim::yidx#11 ← anim::yidx#2
Coalesced [48] sin_idx_y#28 ← sin_idx_y#3
Coalesced [49] sin_idx_x#28 ← sin_idx_x#3
Coalesced [50] anim::xidx#9 ← anim::xidx#5
Coalesced [51] anim::j2#8 ← anim::j2#2
Coalesced [52] anim::yidx#9 ← anim::yidx#6
Coalesced [53] anim::j#7 ← anim::j#1
Coalesced [54] anim::yidx#10 ← anim::yidx#1
Coalesced [55] anim::xidx#10 ← anim::xidx#1
Coalesced [70] init::sc#3 ← init::sc#1
Coalesced [74] setFAC::w#6 ← setFAC::w#0
Coalesced [81] setFAC::w#9 ← setFAC::w#1
Coalesced [102] setFAC::w#7 ← setFAC::w#3
Coalesced [110] setFAC::w#8 ← setFAC::w#4
Coalesced [130] gen_sintab::i#12 ← gen_sintab::i#1
Coalesced [137] prepareMEM::mem#6 ← prepareMEM::mem#2
Coalesced [149] prepareMEM::mem#8 ← prepareMEM::mem#4
Coalesced [157] prepareMEM::mem#7 ← prepareMEM::mem#3
Coalesced [164] prepareMEM::mem#9 ← prepareMEM::mem#0
Coalesced [170] prepareMEM::mem#10 ← prepareMEM::mem#1
Coalesced [188] gen_sprites::i#4 ← gen_sprites::i#1
Coalesced [189] gen_sprites::spr#4 ← gen_sprites::spr#1
Coalesced [195] gen_chargen_sprite::sprite#13 ← gen_chargen_sprite::sprite#0
Coalesced [198] gen_chargen_sprite::bits#9 ← gen_chargen_sprite::bits#0
Coalesced [199] gen_chargen_sprite::sprite#15 ← gen_chargen_sprite::sprite#11
Coalesced [205] gen_chargen_sprite::s_gen#11 ← gen_chargen_sprite::s_gen#5
Coalesced [206] gen_chargen_sprite::s_gen_cnt#10 ← gen_chargen_sprite::s_gen_cnt#4
Coalesced [207] gen_chargen_sprite::sprite#17 ← gen_chargen_sprite::sprite#10
Coalesced [217] gen_chargen_sprite::sprite#20 ← gen_chargen_sprite::sprite#1
Coalesced [230] gen_chargen_sprite::y#11 ← gen_chargen_sprite::y#1
Coalesced [231] gen_chargen_sprite::sprite#14 ← gen_chargen_sprite::sprite#2
Coalesced [232] gen_chargen_sprite::bits#10 ← gen_chargen_sprite::bits#1
Coalesced [233] gen_chargen_sprite::s_gen#10 ← gen_chargen_sprite::s_gen#6
Coalesced [234] gen_chargen_sprite::s_gen_cnt#9 ← gen_chargen_sprite::s_gen_cnt#5
Coalesced [235] gen_chargen_sprite::sprite#16 ← gen_chargen_sprite::sprite#4
Coalesced [236] gen_chargen_sprite::x#9 ← gen_chargen_sprite::x#1
Coalesced (already) [237] gen_chargen_sprite::s_gen#12 ← gen_chargen_sprite::s_gen#6
Coalesced (already) [238] gen_chargen_sprite::s_gen_cnt#11 ← gen_chargen_sprite::s_gen_cnt#5
Coalesced [239] gen_chargen_sprite::b#5 ← gen_chargen_sprite::b#1
Coalesced (already) [240] gen_chargen_sprite::sprite#18 ← gen_chargen_sprite::sprite#4
Coalesced [241] gen_chargen_sprite::s_gen#13 ← gen_chargen_sprite::s_gen#1
Coalesced [242] gen_chargen_sprite::s_gen_cnt#12 ← gen_chargen_sprite::s_gen_cnt#1
Coalesced (already) [243] gen_chargen_sprite::sprite#19 ← gen_chargen_sprite::sprite#3
Coalesced [260] place_sprites::spr_id#3 ← place_sprites::spr_id#1
Coalesced [261] place_sprites::j#3 ← place_sprites::j#1
Coalesced [262] place_sprites::spr_x#3 ← place_sprites::spr_x#1
Coalesced [263] place_sprites::j2#4 ← place_sprites::j2#2
Coalesced [264] place_sprites::col#3 ← place_sprites::col#1
Coalesced down to 33 phi equivalence classes
Culled Empty Block (label) main::@7
Culled Empty Block (label) anim::@9
Culled Empty Block (label) anim::@10
Not culling empty block because it shares successor with its predecessor. (label) anim::@15
Not culling empty block because it shares successor with its predecessor. (label) anim::@14
Culled Empty Block (label) anim::@11
Culled Empty Block (label) anim::@13
Culled Empty Block (label) anim::@12
Culled Empty Block (label) init::@7
Culled Empty Block (label) gen_sintab::@23
Culled Empty Block (label) gen_sprites::@4
Not culling empty block because it shares successor with its predecessor. (label) gen_chargen_sprite::@6
Culled Empty Block (label) gen_chargen_sprite::@11
Culled Empty Block (label) gen_chargen_sprite::@12
Culled Empty Block (label) gen_chargen_sprite::@13
Culled Empty Block (label) gen_chargen_sprite::@14
Culled Empty Block (label) place_sprites::@3
Block Sequence Planned @begin @39 @end main main::@2 main::@3 main::@6 main::@return anim anim::@1 anim::@6 anim::@2 anim::@7 anim::@3 anim::@8 anim::@4 anim::@5 anim::@return anim::@15 anim::@14 init init::@1 init::@2 init::@3 init::@4 init::@5 init::@return gen_sintab gen_sintab::@3 gen_sintab::@4 gen_sintab::@5 gen_sintab::@6 gen_sintab::@7 gen_sintab::@8 gen_sintab::@9 gen_sintab::@10 gen_sintab::@11 gen_sintab::@12 gen_sintab::@1 gen_sintab::@14 gen_sintab::@15 gen_sintab::@16 gen_sintab::@17 gen_sintab::@18 gen_sintab::@19 gen_sintab::@20 gen_sintab::@21 gen_sintab::@22 gen_sintab::@return getFAC getFAC::@return addMEMtoFAC addMEMtoFAC::@1 addMEMtoFAC::@return prepareMEM prepareMEM::@return mulFACbyMEM mulFACbyMEM::@1 mulFACbyMEM::@return sinFAC sinFAC::@return divMEMbyFAC divMEMbyFAC::@1 divMEMbyFAC::@return setFAC setFAC::@1 setFAC::@return setMEMtoFAC setMEMtoFAC::@1 setMEMtoFAC::@return subFACfromARG subFACfromARG::@return setARGtoFAC setARGtoFAC::@return gen_sprites gen_sprites::@1 gen_sprites::@3 gen_sprites::@return gen_chargen_sprite gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@5 gen_chargen_sprite::@8 gen_chargen_sprite::@9 gen_chargen_sprite::@10 gen_chargen_sprite::@return place_sprites place_sprites::@1 place_sprites::@return 
Adding NOP phi() at start of @begin
Adding NOP phi() at start of @39
Adding NOP phi() at start of @end
Adding NOP phi() at start of main
Adding NOP phi() at start of main::@3
Adding NOP phi() at start of anim::@15
Adding NOP phi() at start of anim::@14
Adding NOP phi() at start of init
Adding NOP phi() at start of init::@2
Adding NOP phi() at start of init::@3
Adding NOP phi() at start of init::@4
Adding NOP phi() at start of init::@5
Adding NOP phi() at start of gen_sintab::@3
Adding NOP phi() at start of gen_sintab::@5
Adding NOP phi() at start of gen_sintab::@6
Adding NOP phi() at start of gen_sintab::@7
Adding NOP phi() at start of gen_sintab::@8
Adding NOP phi() at start of gen_sintab::@9
Adding NOP phi() at start of gen_sintab::@10
Adding NOP phi() at start of gen_sintab::@11
Adding NOP phi() at start of gen_sintab::@12
Adding NOP phi() at start of gen_sintab::@14
Adding NOP phi() at start of gen_sintab::@15
Adding NOP phi() at start of gen_sintab::@17
Adding NOP phi() at start of gen_sintab::@18
Adding NOP phi() at start of gen_sintab::@19
Adding NOP phi() at start of gen_sintab::@20
Adding NOP phi() at start of gen_sintab::@21
Adding NOP phi() at start of gen_sprites
Adding NOP phi() at start of gen_chargen_sprite::@6
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
Propagating live ranges...
CONTROL FLOW GRAPH - BEFORE EFFECTIVE LIVE RANGES
@begin: scope:[]  from
  [0] phi() [ ]
  to:@39
@39: scope:[]  from @begin
  [1] phi() [ ]
  [2] call main param-assignment [ ]
  to:@end
@end: scope:[]  from @39
  [3] phi() [ ]
main: scope:[main]  from @39
  [4] phi() [ ]
  [5] call init param-assignment [ ]
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  [6] (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(byte/signed byte/word/signed word) 0 ) [ sin_idx_x#13 sin_idx_y#13 ]
  [6] (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(byte/signed byte/word/signed word) 0 ) [ sin_idx_x#13 sin_idx_y#13 ]
  [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ]
  to:main::@3
main::@3: scope:[main]  from main::@2
  [8] phi() [ sin_idx_x#13 sin_idx_y#13 ]
  [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ]
  to:main::@6
main::@6: scope:[main]  from main::@3
  [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ]
  to:main::@return
main::@return: scope:[main]  from main::@6
  [11] return  [ ]
  to:@return
anim: scope:[anim]  from main::@3
  [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ]
  [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ]
  [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ]
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  [15] (byte) anim::j#2 ← phi( anim/(byte/signed byte/word/signed word) 0 anim::@3/(byte) anim::j#1 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [15] (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [15] (byte) anim::j2#3 ← phi( anim/(byte/signed byte/word/signed word) 12 anim::@3/(byte) anim::j2#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [15] (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ]
  [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ]
  [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ]
  [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ]
  [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ]
  to:anim::@6
anim::@6: scope:[anim]  from anim::@1
  [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ]
  to:anim::@2
anim::@2: scope:[anim]  from anim::@1 anim::@6
  [23] (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#5 ]
  [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ]
  [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ]
  to:anim::@7
anim::@7: scope:[anim]  from anim::@2
  [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ]
  to:anim::@3
anim::@3: scope:[anim]  from anim::@2 anim::@7
  [27] (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#6 ]
  [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ]
  [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ]
  [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ]
  [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ]
  to:anim::@8
anim::@8: scope:[anim]  from anim::@3
  [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ]
  [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ]
  to:anim::@4
anim::@4: scope:[anim]  from anim::@14 anim::@8
  [34] (byte) sin_idx_x#11 ← phi( anim::@14/(byte) sin_idx_x#3 anim::@8/(byte/signed byte/word/signed word) 0 ) [ sin_idx_y#13 sin_idx_x#11 ]
  [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ]
  [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ]
  to:anim::@5
anim::@5: scope:[anim]  from anim::@15 anim::@4
  [37] (byte) sin_idx_y#11 ← phi( anim::@4/(byte/signed byte/word/signed word) 0 anim::@15/(byte) sin_idx_y#3 ) [ sin_idx_x#11 sin_idx_y#11 ]
  [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ]
  to:anim::@return
anim::@return: scope:[anim]  from anim::@5
  [39] return  [ sin_idx_x#11 sin_idx_y#11 ]
  to:@return
anim::@15: scope:[anim]  from anim::@4
  [40] phi() [ sin_idx_x#11 sin_idx_y#3 ]
  to:anim::@5
anim::@14: scope:[anim]  from anim::@8
  [41] phi() [ sin_idx_y#13 sin_idx_x#3 ]
  to:anim::@4
init: scope:[init]  from main
  [42] phi() [ ]
  to:init::@1
init::@1: scope:[init]  from init init::@1
  [43] (byte*) init::sc#2 ← phi( init/(const byte*) SCREEN#0 init::@1/(byte*) init::sc#1 ) [ init::sc#2 ]
  [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ]
  [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ]
  [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ]
  to:init::@2
init::@2: scope:[init]  from init::@1
  [47] phi() [ ]
  [48] call place_sprites param-assignment [ ]
  to:init::@3
init::@3: scope:[init]  from init::@2
  [49] phi() [ ]
  [50] call gen_sprites param-assignment [ ]
  to:init::@4
init::@4: scope:[init]  from init::@3
  [51] phi() [ ]
  [52] call gen_sintab param-assignment [ ]
  to:init::@5
init::@5: scope:[init]  from init::@4
  [53] phi() [ ]
  [54] call gen_sintab param-assignment [ ]
  to:init::@return
init::@return: scope:[init]  from init::@5
  [55] return  [ ]
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  [56] (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte[]) sintab_x#0 init::@5/(const byte[]) sintab_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [56] (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) sinlen_x#0 init::@5/(const byte) sinlen_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [56] (byte) gen_sintab::min#2 ← phi( init::@4/(byte/signed byte/word/signed word) 16 init::@5/(byte/signed byte/word/signed word) 48 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [56] (byte) gen_sintab::max#2 ← phi( init::@4/(byte/word/signed word) 255 init::@5/(byte/word/signed word) 208 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ]
  [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ]
  [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  [60] phi() [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ]
  [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ]
  [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  [66] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  [68] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  [70] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  [72] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  [74] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  [76] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  [78] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  [80] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ]
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  [82] (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word) 0 gen_sintab::@22/(byte) gen_sintab::i#1 ) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ]
  [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ]
  [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  [86] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  [88] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ]
  [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ]
  [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  [93] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  [95] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  [97] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  [99] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  [101] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ]
  [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ]
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ]
  [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ]
  [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ]
  [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ]
  [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ]
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  [110] return  [ ]
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ]
  [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ]
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  [114] return  [ getFAC::return#0 ]
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  [115] (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte[]) gen_sintab::f_min#0 gen_sintab::@20/(const byte[]) gen_sintab::f_min#0 ) [ addMEMtoFAC::mem#2 ]
  [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ]
  [117] call prepareMEM param-assignment [ ]
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  [119] return  [ ]
  to:@return
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  [120] (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 ) [ prepareMEM::mem#5 ]
  [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ]
  [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ]
  [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ]
  [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ]
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  [125] return  [ ]
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  [126] (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) gen_sintab::f_2pi#0 gen_sintab::@19/(const byte[]) gen_sintab::f_amp#0 ) [ mulFACbyMEM::mem#2 ]
  [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ]
  [128] call prepareMEM param-assignment [ ]
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  [130] return  [ ]
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  [132] return  [ ]
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  [133] (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte[]) gen_sintab::f_i#0 gen_sintab::@9/(const byte[]) gen_sintab::f_amp#0 ) [ divMEMbyFAC::mem#2 ]
  [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ]
  [135] call prepareMEM param-assignment [ ]
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  [137] return  [ ]
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  [138] (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(byte/signed byte/word/signed word) 2 ) [ setFAC::w#5 ]
  [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ]
  [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ]
  [141] call prepareMEM param-assignment [ ]
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  [143] return  [ ]
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  [144] (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte[]) gen_sintab::f_amp#0 gen_sintab::@12/(const byte[]) gen_sintab::f_min#0 gen_sintab::@15/(const byte[]) gen_sintab::f_i#0 gen_sintab::@5/(const byte[]) gen_sintab::f_min#0 gen_sintab::@7/(const byte[]) gen_sintab::f_amp#0 ) [ setMEMtoFAC::mem#5 ]
  [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ]
  [146] call prepareMEM param-assignment [ ]
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  [148] return  [ ]
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  [150] return  [ ]
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  [152] return  [ ]
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  [153] phi() [ ]
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  [154] (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte[]) sprites#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 ) [ gen_sprites::i#2 gen_sprites::spr#2 ]
  [154] (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte/signed byte/word/signed word) 0 gen_sprites::@3/(byte) gen_sprites::i#1 ) [ gen_sprites::i#2 gen_sprites::spr#2 ]
  [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ]
  [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ]
  [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ]
  [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ]
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ]
  [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ]
  [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ]
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  [162] return  [ ]
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ]
  [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ]
  [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ]
  asm { sei }
  [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ]
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  [168] (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ]
  [168] (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ]
  [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ]
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  [170] (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [170] (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [170] (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [170] (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [170] (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ]
  [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  [173] phi() [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ]
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  [174] (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@6/(byte/signed byte/word/signed word) 1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 ]
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  [175] (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [175] (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [175] (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [175] (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ]
  [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ]
  [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ]
  [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ]
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ]
  [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ]
  [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ]
  [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ]
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  [184] (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ]
  [184] (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ]
  [184] (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ]
  [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ]
  [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ]
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ]
  [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ]
  [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ]
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ]
  [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ]
  [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ]
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ]
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  [195] return  [ ]
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ]
  [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ]
  [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ]
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  [199] (byte) place_sprites::col#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 5 place_sprites::@1/(byte) place_sprites::col#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [199] (byte) place_sprites::j2#3 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@1/(byte) place_sprites::j2#2 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [199] (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 60 place_sprites::@1/(byte) place_sprites::spr_x#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [199] (byte) place_sprites::j#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@1/(byte) place_sprites::j#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [199] (byte) place_sprites::spr_id#2 ← phi( place_sprites/((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 place_sprites::@1/(byte) place_sprites::spr_id#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ]
  [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ]
  [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ]
  [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ]
  [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ]
  [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ]
  [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ]
  [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ]
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  [211] return  [ ]
  to:@return

CONTROL FLOW GRAPH - PHI MEM COALESCED
@begin: scope:[]  from
  [0] phi() [ ] ( )
  to:@39
@39: scope:[]  from @begin
  [1] phi() [ ] ( )
  [2] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @39
  [3] phi() [ ] ( )
main: scope:[main]  from @39
  [4] phi() [ ] ( main:2 [ ] )
  [5] call init param-assignment [ ] ( main:2 [ ] )
  to:main::@2
main::@2: scope:[main]  from main main::@2 main::@6
  [6] (byte) sin_idx_y#13 ← phi( main::@6/(byte) sin_idx_y#11 main/(byte/signed byte/word/signed word) 0 ) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  [6] (byte) sin_idx_x#13 ← phi( main::@6/(byte) sin_idx_x#11 main/(byte/signed byte/word/signed word) 0 ) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  to:main::@3
main::@3: scope:[main]  from main::@2
  [8] phi() [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] )
  [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:main::@6
main::@6: scope:[main]  from main::@3
  [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:main::@return
main::@return: scope:[main]  from main::@6
  [11] return  [ ] ( main:2 [ ] )
  to:@return
anim: scope:[anim]  from main::@3
  [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] )
  [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] )
  [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] )
  to:anim::@1
anim::@1: scope:[anim]  from anim anim::@3
  [15] (byte) anim::j#2 ← phi( anim/(byte/signed byte/word/signed word) 0 anim::@3/(byte) anim::j#1 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] )
  [15] (byte) anim::yidx#3 ← phi( anim/(byte) anim::yidx#0 anim::@3/(byte) anim::yidx#6 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] )
  [15] (byte) anim::j2#3 ← phi( anim/(byte/signed byte/word/signed word) 12 anim::@3/(byte) anim::j2#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] )
  [15] (byte) anim::xidx#3 ← phi( anim/(byte) anim::xidx#0 anim::@3/(byte) anim::xidx#5 ) [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] )
  [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] )
  [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] )
  [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] )
  [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] )
  [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] )
  [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] )
  to:anim::@6
anim::@6: scope:[anim]  from anim::@1
  [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] )
  to:anim::@2
anim::@2: scope:[anim]  from anim::@1 anim::@6
  [23] (byte) anim::xidx#5 ← phi( anim::@1/(byte) anim::xidx#1 anim::@6/(byte) anim::xidx#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#5 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#5 ] )
  [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] )
  [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] )
  to:anim::@7
anim::@7: scope:[anim]  from anim::@2
  [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] )
  to:anim::@3
anim::@3: scope:[anim]  from anim::@2 anim::@7
  [27] (byte) anim::yidx#6 ← phi( anim::@2/(byte) anim::yidx#1 anim::@7/(byte) anim::yidx#2 ) [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#6 ] )
  [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] )
  [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] )
  [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] )
  [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] )
  to:anim::@8
anim::@8: scope:[anim]  from anim::@3
  [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] )
  [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] )
  to:anim::@4
anim::@4: scope:[anim]  from anim::@14 anim::@8
  [34] (byte) sin_idx_x#11 ← phi( anim::@14/(byte) sin_idx_x#3 anim::@8/(byte/signed byte/word/signed word) 0 ) [ sin_idx_y#13 sin_idx_x#11 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#11 ] )
  [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] )
  [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] )
  to:anim::@5
anim::@5: scope:[anim]  from anim::@15 anim::@4
  [37] (byte) sin_idx_y#11 ← phi( anim::@4/(byte/signed byte/word/signed word) 0 anim::@15/(byte) sin_idx_y#3 ) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
  [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:anim::@return
anim::@return: scope:[anim]  from anim::@5
  [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
  to:@return
anim::@15: scope:[anim]  from anim::@4
  [40] phi() [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] )
  to:anim::@5
anim::@14: scope:[anim]  from anim::@8
  [41] phi() [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] )
  to:anim::@4
init: scope:[init]  from main
  [42] phi() [ ] ( main:2::init:5 [ ] )
  to:init::@1
init::@1: scope:[init]  from init init::@1
  [43] (byte*) init::sc#2 ← phi( init/(const byte*) SCREEN#0 init::@1/(byte*) init::sc#1 ) [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] )
  [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] )
  [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] )
  [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] )
  to:init::@2
init::@2: scope:[init]  from init::@1
  [47] phi() [ ] ( main:2::init:5 [ ] )
  [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@3
init::@3: scope:[init]  from init::@2
  [49] phi() [ ] ( main:2::init:5 [ ] )
  [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@4
init::@4: scope:[init]  from init::@3
  [51] phi() [ ] ( main:2::init:5 [ ] )
  [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@5
init::@5: scope:[init]  from init::@4
  [53] phi() [ ] ( main:2::init:5 [ ] )
  [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  to:init::@return
init::@return: scope:[init]  from init::@5
  [55] return  [ ] ( main:2::init:5 [ ] )
  to:@return
gen_sintab: scope:[gen_sintab]  from init::@4 init::@5
  [56] (byte*) gen_sintab::sintab#12 ← phi( init::@4/(const byte[]) sintab_x#0 init::@5/(const byte[]) sintab_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [56] (byte) gen_sintab::length#10 ← phi( init::@4/(const byte) sinlen_x#0 init::@5/(const byte) sinlen_y#0 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [56] (byte) gen_sintab::min#2 ← phi( init::@4/(byte/signed byte/word/signed word) 16 init::@5/(byte/signed byte/word/signed word) 48 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [56] (byte) gen_sintab::max#2 ← phi( init::@4/(byte/word/signed word) 255 init::@5/(byte/word/signed word) 208 ) [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::max#2 gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] )
  [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
  [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@3
gen_sintab::@3: scope:[gen_sintab]  from gen_sintab
  [60] phi() [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@4
gen_sintab::@4: scope:[gen_sintab]  from gen_sintab::@3
  asm { lda#0ldx#0ldy#0 }
  [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] )
  [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
  [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@5
gen_sintab::@5: scope:[gen_sintab]  from gen_sintab::@4
  [66] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@6
gen_sintab::@6: scope:[gen_sintab]  from gen_sintab::@5
  [68] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@7
gen_sintab::@7: scope:[gen_sintab]  from gen_sintab::@6
  [70] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@8
gen_sintab::@8: scope:[gen_sintab]  from gen_sintab::@7
  [72] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@9
gen_sintab::@9: scope:[gen_sintab]  from gen_sintab::@8
  [74] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@10
gen_sintab::@10: scope:[gen_sintab]  from gen_sintab::@9
  [76] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@11
gen_sintab::@11: scope:[gen_sintab]  from gen_sintab::@10
  [78] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@12
gen_sintab::@12: scope:[gen_sintab]  from gen_sintab::@11
  [80] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:gen_sintab::@1
gen_sintab::@1: scope:[gen_sintab]  from gen_sintab::@12 gen_sintab::@22
  [82] (byte) gen_sintab::i#10 ← phi( gen_sintab::@12/(byte/signed byte/word/signed word) 0 gen_sintab::@22/(byte) gen_sintab::i#1 ) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] )
  [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
  [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@14
gen_sintab::@14: scope:[gen_sintab]  from gen_sintab::@1
  [86] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@15
gen_sintab::@15: scope:[gen_sintab]  from gen_sintab::@14
  [88] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@16
gen_sintab::@16: scope:[gen_sintab]  from gen_sintab::@15
  [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] )
  [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
  [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@17
gen_sintab::@17: scope:[gen_sintab]  from gen_sintab::@16
  [93] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@18
gen_sintab::@18: scope:[gen_sintab]  from gen_sintab::@17
  [95] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@19
gen_sintab::@19: scope:[gen_sintab]  from gen_sintab::@18
  [97] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@20
gen_sintab::@20: scope:[gen_sintab]  from gen_sintab::@19
  [99] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:gen_sintab::@21
gen_sintab::@21: scope:[gen_sintab]  from gen_sintab::@20
  [101] phi() [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
  [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
  to:gen_sintab::@22
gen_sintab::@22: scope:[gen_sintab]  from gen_sintab::@21
  [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
  [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] )
  [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] )
  [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] )
  to:gen_sintab::@return
gen_sintab::@return: scope:[gen_sintab]  from gen_sintab::@22
  [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
  to:@return
getFAC: scope:[getFAC]  from gen_sintab::@21
  asm { jsr$b1aasty$festa$ff }
  [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] )
  [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
  to:getFAC::@return
getFAC::@return: scope:[getFAC]  from getFAC
  [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
  to:@return
addMEMtoFAC: scope:[addMEMtoFAC]  from gen_sintab::@11 gen_sintab::@20
  [115] (byte*) addMEMtoFAC::mem#2 ← phi( gen_sintab::@11/(const byte[]) gen_sintab::f_min#0 gen_sintab::@20/(const byte[]) gen_sintab::f_min#0 ) [ addMEMtoFAC::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 addMEMtoFAC::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 addMEMtoFAC::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 addMEMtoFAC::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 addMEMtoFAC::mem#2 ] )
  [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
  [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:addMEMtoFAC::@1
addMEMtoFAC::@1: scope:[addMEMtoFAC]  from addMEMtoFAC
  asm { lda$feldy$ffjsr$b867 }
  to:addMEMtoFAC::@return
addMEMtoFAC::@return: scope:[addMEMtoFAC]  from addMEMtoFAC::@1
  [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
prepareMEM: scope:[prepareMEM]  from addMEMtoFAC divMEMbyFAC mulFACbyMEM setFAC setMEMtoFAC
  [120] (byte*) prepareMEM::mem#5 ← phi( addMEMtoFAC/(byte*) prepareMEM::mem#2 divMEMbyFAC/(byte*) prepareMEM::mem#3 mulFACbyMEM/(byte*) prepareMEM::mem#4 setFAC/(byte*) prepareMEM::mem#0 setMEMtoFAC/(byte*) prepareMEM::mem#1 ) [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] )
  [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] )
  [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] )
  [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] )
  [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:prepareMEM::@return
prepareMEM::@return: scope:[prepareMEM]  from prepareMEM
  [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
mulFACbyMEM: scope:[mulFACbyMEM]  from gen_sintab::@14 gen_sintab::@19
  [126] (byte*) mulFACbyMEM::mem#2 ← phi( gen_sintab::@14/(const byte*) gen_sintab::f_2pi#0 gen_sintab::@19/(const byte[]) gen_sintab::f_amp#0 ) [ mulFACbyMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 mulFACbyMEM::mem#2 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 mulFACbyMEM::mem#2 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 mulFACbyMEM::mem#2 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 mulFACbyMEM::mem#2 ] )
  [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
  [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:mulFACbyMEM::@1
mulFACbyMEM::@1: scope:[mulFACbyMEM]  from mulFACbyMEM
  asm { lda$feldy$ffjsr$ba28 }
  to:mulFACbyMEM::@return
mulFACbyMEM::@return: scope:[mulFACbyMEM]  from mulFACbyMEM::@1
  [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
sinFAC: scope:[sinFAC]  from gen_sintab::@18
  asm { jsr$e26b }
  to:sinFAC::@return
sinFAC::@return: scope:[sinFAC]  from sinFAC
  [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
divMEMbyFAC: scope:[divMEMbyFAC]  from gen_sintab::@17 gen_sintab::@9
  [133] (byte*) divMEMbyFAC::mem#2 ← phi( gen_sintab::@17/(const byte[]) gen_sintab::f_i#0 gen_sintab::@9/(const byte[]) gen_sintab::f_amp#0 ) [ divMEMbyFAC::mem#2 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 divMEMbyFAC::mem#2 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 divMEMbyFAC::mem#2 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 divMEMbyFAC::mem#2 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 divMEMbyFAC::mem#2 ] )
  [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
  [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:divMEMbyFAC::@1
divMEMbyFAC::@1: scope:[divMEMbyFAC]  from divMEMbyFAC
  asm { lda$feldy$ffjsr$bb0f }
  to:divMEMbyFAC::@return
divMEMbyFAC::@return: scope:[divMEMbyFAC]  from divMEMbyFAC::@1
  [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
setFAC: scope:[setFAC]  from gen_sintab gen_sintab::@1 gen_sintab::@16 gen_sintab::@4 gen_sintab::@8
  [138] (word) setFAC::w#5 ← phi( gen_sintab/(word) setFAC::w#0 gen_sintab::@1/(word) setFAC::w#3 gen_sintab::@16/(word) setFAC::w#4 gen_sintab::@4/(word) setFAC::w#1 gen_sintab::@8/(byte/signed byte/word/signed word) 2 ) [ setFAC::w#5 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#5 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#5 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#5 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#5 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#5 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#5 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#5 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#5 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#5 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#5 ] )
  [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] )
  [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
  [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:setFAC::@1
setFAC::@1: scope:[setFAC]  from setFAC
  asm { ldy$felda$ffjsr$b391 }
  to:setFAC::@return
setFAC::@return: scope:[setFAC]  from setFAC::@1
  [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
setMEMtoFAC: scope:[setMEMtoFAC]  from gen_sintab::@10 gen_sintab::@12 gen_sintab::@15 gen_sintab::@5 gen_sintab::@7
  [144] (byte*) setMEMtoFAC::mem#5 ← phi( gen_sintab::@10/(const byte[]) gen_sintab::f_amp#0 gen_sintab::@12/(const byte[]) gen_sintab::f_min#0 gen_sintab::@15/(const byte[]) gen_sintab::f_i#0 gen_sintab::@5/(const byte[]) gen_sintab::f_min#0 gen_sintab::@7/(const byte[]) gen_sintab::f_amp#0 ) [ setMEMtoFAC::mem#5 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setMEMtoFAC::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setMEMtoFAC::mem#5 ] )
  [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
  [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:setMEMtoFAC::@1
setMEMtoFAC::@1: scope:[setMEMtoFAC]  from setMEMtoFAC
  asm { ldx$feldy$ffjsr$bbd4 }
  to:setMEMtoFAC::@return
setMEMtoFAC::@return: scope:[setMEMtoFAC]  from setMEMtoFAC::@1
  [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  to:@return
subFACfromARG: scope:[subFACfromARG]  from gen_sintab::@6
  asm { jsr$b853 }
  to:subFACfromARG::@return
subFACfromARG::@return: scope:[subFACfromARG]  from subFACfromARG
  [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:@return
setARGtoFAC: scope:[setARGtoFAC]  from gen_sintab::@3
  asm { jsr$bc0f }
  to:setARGtoFAC::@return
setARGtoFAC::@return: scope:[setARGtoFAC]  from setARGtoFAC
  [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  to:@return
gen_sprites: scope:[gen_sprites]  from init::@3
  [153] phi() [ ] ( main:2::init:5::gen_sprites:50 [ ] )
  to:gen_sprites::@1
gen_sprites::@1: scope:[gen_sprites]  from gen_sprites gen_sprites::@3
  [154] (byte*) gen_sprites::spr#2 ← phi( gen_sprites/(const byte[]) sprites#0 gen_sprites::@3/(byte*) gen_sprites::spr#1 ) [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  [154] (byte) gen_sprites::i#2 ← phi( gen_sprites/(byte/signed byte/word/signed word) 0 gen_sprites::@3/(byte) gen_sprites::i#1 ) [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] )
  [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] )
  [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] )
  [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  to:gen_sprites::@3
gen_sprites::@3: scope:[gen_sprites]  from gen_sprites::@1
  [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] )
  [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] )
  [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] )
  to:gen_sprites::@return
gen_sprites::@return: scope:[gen_sprites]  from gen_sprites::@3
  [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
  to:@return
gen_chargen_sprite: scope:[gen_chargen_sprite]  from gen_sprites::@1
  [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] )
  [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] )
  [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] )
  asm { sei }
  [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] )
  to:gen_chargen_sprite::@1
gen_chargen_sprite::@1: scope:[gen_chargen_sprite]  from gen_chargen_sprite gen_chargen_sprite::@9
  [168] (byte*) gen_chargen_sprite::sprite#11 ← phi( gen_chargen_sprite/(byte*) gen_chargen_sprite::sprite#0 gen_chargen_sprite::@9/(byte*) gen_chargen_sprite::sprite#2 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] )
  [168] (byte) gen_chargen_sprite::y#2 ← phi( gen_chargen_sprite/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@9/(byte) gen_chargen_sprite::y#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 ] )
  [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] )
  to:gen_chargen_sprite::@2
gen_chargen_sprite::@2: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@1 gen_chargen_sprite::@8
  [170] (byte) gen_chargen_sprite::x#6 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::x#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [170] (byte*) gen_chargen_sprite::sprite#10 ← phi( gen_chargen_sprite::@1/(byte*) gen_chargen_sprite::sprite#11 gen_chargen_sprite::@8/(byte*) gen_chargen_sprite::sprite#4 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [170] (byte) gen_chargen_sprite::s_gen_cnt#4 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen_cnt#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [170] (byte) gen_chargen_sprite::s_gen#5 ← phi( gen_chargen_sprite::@1/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::s_gen#6 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [170] (byte) gen_chargen_sprite::bits#2 ← phi( gen_chargen_sprite::@1/(byte) gen_chargen_sprite::bits#0 gen_chargen_sprite::@8/(byte) gen_chargen_sprite::bits#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] )
  [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  to:gen_chargen_sprite::@6
gen_chargen_sprite::@6: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2
  [173] phi() [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] )
  to:gen_chargen_sprite::@3
gen_chargen_sprite::@3: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@2 gen_chargen_sprite::@6
  [174] (byte) gen_chargen_sprite::c#3 ← phi( gen_chargen_sprite::@2/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@6/(byte/signed byte/word/signed word) 1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 ] )
  to:gen_chargen_sprite::@4
gen_chargen_sprite::@4: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@3 gen_chargen_sprite::@5
  [175] (byte*) gen_chargen_sprite::sprite#3 ← phi( gen_chargen_sprite::@3/(byte*) gen_chargen_sprite::sprite#10 gen_chargen_sprite::@5/(byte*) gen_chargen_sprite::sprite#4 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [175] (byte) gen_chargen_sprite::b#2 ← phi( gen_chargen_sprite::@3/(byte/signed byte/word/signed word) 0 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::b#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [175] (byte) gen_chargen_sprite::s_gen_cnt#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen_cnt#5 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [175] (byte) gen_chargen_sprite::s_gen#3 ← phi( gen_chargen_sprite::@3/(byte) gen_chargen_sprite::s_gen#5 gen_chargen_sprite::@5/(byte) gen_chargen_sprite::s_gen#6 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] )
  [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] )
  [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] )
  [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] )
  to:gen_chargen_sprite::@7
gen_chargen_sprite::@7: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4
  [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] )
  [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] )
  [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] )
  [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] )
  to:gen_chargen_sprite::@5
gen_chargen_sprite::@5: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@4 gen_chargen_sprite::@7
  [184] (byte*) gen_chargen_sprite::sprite#4 ← phi( gen_chargen_sprite::@4/(byte*) gen_chargen_sprite::sprite#3 gen_chargen_sprite::@7/(byte*) gen_chargen_sprite::sprite#1 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] )
  [184] (byte) gen_chargen_sprite::s_gen_cnt#5 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen_cnt#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] )
  [184] (byte) gen_chargen_sprite::s_gen#6 ← phi( gen_chargen_sprite::@4/(byte) gen_chargen_sprite::s_gen#1 gen_chargen_sprite::@7/(byte/signed byte/word/signed word) 0 ) [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 ] )
  [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] )
  [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] )
  to:gen_chargen_sprite::@8
gen_chargen_sprite::@8: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@5
  [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] )
  [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] )
  [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] )
  to:gen_chargen_sprite::@9
gen_chargen_sprite::@9: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@8
  [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] )
  [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] )
  [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] )
  to:gen_chargen_sprite::@10
gen_chargen_sprite::@10: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@9
  [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  asm { cli }
  to:gen_chargen_sprite::@return
gen_chargen_sprite::@return: scope:[gen_chargen_sprite]  from gen_chargen_sprite::@10
  [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
  to:@return
place_sprites: scope:[place_sprites]  from init::@2
  [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] )
  [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] )
  [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] )
  to:place_sprites::@1
place_sprites::@1: scope:[place_sprites]  from place_sprites place_sprites::@1
  [199] (byte) place_sprites::col#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 5 place_sprites::@1/(byte) place_sprites::col#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [199] (byte) place_sprites::j2#3 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@1/(byte) place_sprites::j2#2 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [199] (byte) place_sprites::spr_x#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 60 place_sprites::@1/(byte) place_sprites::spr_x#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [199] (byte) place_sprites::j#2 ← phi( place_sprites/(byte/signed byte/word/signed word) 0 place_sprites::@1/(byte) place_sprites::j#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [199] (byte) place_sprites::spr_id#2 ← phi( place_sprites/((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 place_sprites::@1/(byte) place_sprites::spr_id#1 ) [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] )
  [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] )
  [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] )
  [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] )
  [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] )
  [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] )
  [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] )
  [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] )
  to:place_sprites::@return
place_sprites::@return: scope:[place_sprites]  from place_sprites::@1
  [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
  to:@return

DOMINATORS
@begin dominated by  @begin 
@39 dominated by  @begin @39 
@end dominated by  @end @begin @39 
main dominated by  main @begin @39 
main::@2 dominated by  main main::@2 @begin @39 
main::@3 dominated by  main main::@2 main::@3 @begin @39 
main::@6 dominated by  main main::@2 main::@6 main::@3 @begin @39 
main::@return dominated by  main main::@2 main::@6 main::@3 @begin @39 main::@return 
anim dominated by  main main::@2 main::@3 @begin @39 anim 
anim::@1 dominated by  main main::@2 main::@3 @begin @39 anim anim::@1 
anim::@6 dominated by  main main::@2 main::@3 @begin @39 anim anim::@6 anim::@1 
anim::@2 dominated by  main main::@2 main::@3 @begin @39 anim anim::@2 anim::@1 
anim::@7 dominated by  main main::@2 main::@3 @begin @39 anim anim::@2 anim::@1 anim::@7 
anim::@3 dominated by  main main::@2 main::@3 @begin @39 anim anim::@3 anim::@2 anim::@1 
anim::@8 dominated by  main main::@2 main::@3 @begin @39 anim anim::@3 anim::@2 anim::@1 anim::@8 
anim::@4 dominated by  main main::@2 main::@3 @begin @39 anim anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 
anim::@5 dominated by  main main::@2 main::@3 @begin @39 anim anim::@5 anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 
anim::@return dominated by  main main::@2 main::@3 @begin @39 anim anim::@5 anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 anim::@return 
anim::@15 dominated by  main main::@2 main::@3 @begin @39 anim anim::@4 anim::@3 anim::@2 anim::@1 anim::@8 anim::@15 
anim::@14 dominated by  main main::@2 main::@3 @begin @39 anim anim::@3 anim::@2 anim::@1 anim::@8 anim::@14 
init dominated by  main init @begin @39 
init::@1 dominated by  main init @begin @39 init::@1 
init::@2 dominated by  main init @begin @39 init::@2 init::@1 
init::@3 dominated by  main init @begin @39 init::@3 init::@2 init::@1 
init::@4 dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 
init::@5 dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@5 init::@4 
init::@return dominated by  main init @begin @39 init::@return init::@3 init::@2 init::@1 init::@5 init::@4 
gen_sintab dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab 
gen_sintab::@3 dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@4 dominated by  main gen_sintab::@4 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@5 dominated by  main gen_sintab::@4 gen_sintab::@5 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@6 dominated by  gen_sintab::@6 main gen_sintab::@4 gen_sintab::@5 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@7 dominated by  gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@8 dominated by  gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@9 dominated by  gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@10 dominated by  gen_sintab::@10 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@11 dominated by  gen_sintab::@10 gen_sintab::@11 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@12 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sintab::@1 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@14 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@15 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@16 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@17 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@17 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@18 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@19 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@20 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 init @begin gen_sintab::@20 @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@21 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 init gen_sintab::@21 @begin gen_sintab::@20 @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@22 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 init gen_sintab::@21 @begin gen_sintab::@20 gen_sintab::@22 @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
gen_sintab::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 gen_sintab::@return init gen_sintab::@21 @begin gen_sintab::@20 gen_sintab::@22 @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
getFAC dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 init gen_sintab::@21 @begin gen_sintab::@20 @39 init::@3 init::@2 init::@1 init::@4 getFAC gen_sintab::@3 gen_sintab::@1 gen_sintab 
getFAC::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@19 gen_sintab::@8 gen_sintab::@9 init gen_sintab::@21 @begin gen_sintab::@20 @39 init::@3 init::@2 init::@1 init::@4 getFAC gen_sintab::@3 gen_sintab::@1 getFAC::@return gen_sintab 
addMEMtoFAC dominated by  gen_sintab::@10 gen_sintab::@11 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 addMEMtoFAC gen_sintab::@3 gen_sintab 
addMEMtoFAC::@1 dominated by  gen_sintab::@10 gen_sintab::@11 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 addMEMtoFAC::@1 init::@3 init::@2 init::@1 init::@4 addMEMtoFAC gen_sintab::@3 gen_sintab 
addMEMtoFAC::@return dominated by  gen_sintab::@10 gen_sintab::@11 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 addMEMtoFAC::@1 init::@3 init::@2 init::@1 init::@4 addMEMtoFAC addMEMtoFAC::@return gen_sintab::@3 gen_sintab 
prepareMEM dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 prepareMEM gen_sintab 
prepareMEM::@return dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 prepareMEM::@return prepareMEM gen_sintab 
mulFACbyMEM dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 mulFACbyMEM init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
mulFACbyMEM::@1 dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 mulFACbyMEM init @begin @39 init::@3 init::@2 init::@1 init::@4 mulFACbyMEM::@1 gen_sintab::@3 gen_sintab::@1 gen_sintab 
mulFACbyMEM::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 mulFACbyMEM::@return gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 mulFACbyMEM init @begin @39 init::@3 init::@2 init::@1 init::@4 mulFACbyMEM::@1 gen_sintab::@3 gen_sintab::@1 gen_sintab 
sinFAC dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@8 gen_sintab::@9 init @begin @39 sinFAC init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
sinFAC::@return dominated by  gen_sintab::@10 gen_sintab::@12 gen_sintab::@11 gen_sintab::@14 gen_sintab::@6 gen_sintab::@16 gen_sintab::@7 gen_sintab::@15 main gen_sintab::@4 gen_sintab::@18 gen_sintab::@5 gen_sintab::@17 gen_sintab::@8 gen_sintab::@9 init @begin @39 sinFAC init::@3 init::@2 init::@1 sinFAC::@return init::@4 gen_sintab::@3 gen_sintab::@1 gen_sintab 
divMEMbyFAC dominated by  gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 divMEMbyFAC gen_sintab::@3 gen_sintab 
divMEMbyFAC::@1 dominated by  gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 divMEMbyFAC::@1 divMEMbyFAC gen_sintab::@3 gen_sintab 
divMEMbyFAC::@return dominated by  gen_sintab::@6 gen_sintab::@7 main gen_sintab::@4 gen_sintab::@5 gen_sintab::@8 gen_sintab::@9 init @begin @39 init::@3 init::@2 init::@1 init::@4 divMEMbyFAC::@1 divMEMbyFAC gen_sintab::@3 divMEMbyFAC::@return gen_sintab 
setFAC dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 setFAC gen_sintab 
setFAC::@1 dominated by  main init @begin @39 init::@3 init::@2 init::@1 init::@4 setFAC setFAC::@1 gen_sintab 
setFAC::@return dominated by  setFAC::@return main init @begin @39 init::@3 init::@2 init::@1 init::@4 setFAC setFAC::@1 gen_sintab 
setMEMtoFAC dominated by  main gen_sintab::@4 gen_sintab::@5 init @begin @39 setMEMtoFAC init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
setMEMtoFAC::@1 dominated by  main gen_sintab::@4 gen_sintab::@5 init @begin @39 setMEMtoFAC init::@3 init::@2 init::@1 init::@4 setMEMtoFAC::@1 gen_sintab::@3 gen_sintab 
setMEMtoFAC::@return dominated by  main gen_sintab::@4 gen_sintab::@5 init @begin @39 setMEMtoFAC init::@3 init::@2 init::@1 init::@4 setMEMtoFAC::@1 setMEMtoFAC::@return gen_sintab::@3 gen_sintab 
subFACfromARG dominated by  gen_sintab::@6 main gen_sintab::@4 gen_sintab::@5 init @begin @39 subFACfromARG init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
subFACfromARG::@return dominated by  gen_sintab::@6 main gen_sintab::@4 gen_sintab::@5 init @begin @39 subFACfromARG init::@3 init::@2 init::@1 init::@4 subFACfromARG::@return gen_sintab::@3 gen_sintab 
setARGtoFAC dominated by  main setARGtoFAC init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
setARGtoFAC::@return dominated by  main setARGtoFAC setARGtoFAC::@return init @begin @39 init::@3 init::@2 init::@1 init::@4 gen_sintab::@3 gen_sintab 
gen_sprites dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 
gen_sprites::@1 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 
gen_sprites::@3 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_sprites::@3 
gen_sprites::@return dominated by  main gen_sprites::@return init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_sprites::@3 
gen_chargen_sprite dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite 
gen_chargen_sprite::@1 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@1 gen_chargen_sprite 
gen_chargen_sprite::@2 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite 
gen_chargen_sprite::@6 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite 
gen_chargen_sprite::@3 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@3 gen_chargen_sprite 
gen_chargen_sprite::@4 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
gen_chargen_sprite::@7 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@7 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
gen_chargen_sprite::@5 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
gen_chargen_sprite::@8 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
gen_chargen_sprite::@9 dominated by  main init @begin @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
gen_chargen_sprite::@10 dominated by  main init @begin gen_chargen_sprite::@10 @39 gen_sprites init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
gen_chargen_sprite::@return dominated by  main init @begin gen_chargen_sprite::@10 @39 gen_sprites gen_chargen_sprite::@return init::@3 init::@2 init::@1 gen_sprites::@1 gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@1 gen_chargen_sprite::@2 gen_chargen_sprite::@5 gen_chargen_sprite::@3 gen_chargen_sprite::@4 gen_chargen_sprite 
place_sprites dominated by  main init @begin @39 init::@2 init::@1 place_sprites 
place_sprites::@1 dominated by  main init @begin @39 init::@2 init::@1 place_sprites::@1 place_sprites 
place_sprites::@return dominated by  main init @begin @39 place_sprites::@return init::@2 init::@1 place_sprites::@1 place_sprites 

Found back edge: Loop head: main::@2 tails: main::@2 blocks: null
Found back edge: Loop head: main::@2 tails: main::@6 blocks: null
Found back edge: Loop head: anim::@1 tails: anim::@3 blocks: null
Found back edge: Loop head: init::@1 tails: init::@1 blocks: null
Found back edge: Loop head: gen_sintab::@1 tails: gen_sintab::@22 blocks: null
Found back edge: Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: null
Found back edge: Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: null
Found back edge: Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: null
Found back edge: Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: null
Found back edge: Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: null
Populated: Loop head: main::@2 tails: main::@2 blocks: main::@2 
Populated: Loop head: main::@2 tails: main::@6 blocks: main::@6 main::@3 main::@2 
Populated: Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6 
Populated: Loop head: init::@1 tails: init::@1 blocks: init::@1 
Populated: Loop head: gen_sintab::@1 tails: gen_sintab::@22 blocks: gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1 
Populated: Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1 
Populated: Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 
Populated: Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 
Populated: Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1 
Populated: Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1 
NATURAL LOOPS
Loop head: main::@2 tails: main::@2 blocks: main::@2 
Loop head: main::@2 tails: main::@6 blocks: main::@6 main::@3 main::@2 
Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6 
Loop head: init::@1 tails: init::@1 blocks: init::@1 
Loop head: gen_sintab::@1 tails: gen_sintab::@22 blocks: gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1 
Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1 
Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 
Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 
Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1 
Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1 

Found 0 loops in scope []
Found 2 loops in scope [main]
  Loop head: main::@2 tails: main::@2 blocks: main::@2 
  Loop head: main::@2 tails: main::@6 blocks: main::@6 main::@3 main::@2 
Found 1 loops in scope [init]
  Loop head: init::@1 tails: init::@1 blocks: init::@1 
Found 1 loops in scope [anim]
  Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6 
Found 1 loops in scope [place_sprites]
  Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1 
Found 1 loops in scope [gen_sprites]
  Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1 
Found 1 loops in scope [gen_sintab]
  Loop head: gen_sintab::@1 tails: gen_sintab::@22 blocks: gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1 
Found 3 loops in scope [gen_chargen_sprite]
  Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 
  Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 
  Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1 
Found 0 loops in scope [setFAC]
Found 0 loops in scope [setARGtoFAC]
Found 0 loops in scope [setMEMtoFAC]
Found 0 loops in scope [subFACfromARG]
Found 0 loops in scope [divMEMbyFAC]
Found 0 loops in scope [addMEMtoFAC]
Found 0 loops in scope [mulFACbyMEM]
Found 0 loops in scope [sinFAC]
Found 0 loops in scope [getFAC]
Found 0 loops in scope [prepareMEM]
NATURAL LOOPS WITH DEPTH
Loop head: main::@2 tails: main::@2 blocks: main::@2  depth: 2
Loop head: main::@2 tails: main::@6 blocks: main::@6 main::@3 main::@2  depth: 1
Loop head: anim::@1 tails: anim::@3 blocks: anim::@3 anim::@2 anim::@7 anim::@1 anim::@6  depth: 2
Loop head: init::@1 tails: init::@1 blocks: init::@1  depth: 1
Loop head: gen_sintab::@1 tails: gen_sintab::@22 blocks: gen_sintab::@22 gen_sintab::@21 gen_sintab::@20 gen_sintab::@19 gen_sintab::@18 gen_sintab::@17 gen_sintab::@16 gen_sintab::@15 gen_sintab::@14 gen_sintab::@1  depth: 1
Loop head: gen_sprites::@1 tails: gen_sprites::@3 blocks: gen_sprites::@3 gen_sprites::@1  depth: 1
Loop head: gen_chargen_sprite::@4 tails: gen_chargen_sprite::@5 blocks: gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7  depth: 4
Loop head: gen_chargen_sprite::@2 tails: gen_chargen_sprite::@8 blocks: gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6  depth: 3
Loop head: gen_chargen_sprite::@1 tails: gen_chargen_sprite::@9 blocks: gen_chargen_sprite::@9 gen_chargen_sprite::@8 gen_chargen_sprite::@5 gen_chargen_sprite::@4 gen_chargen_sprite::@7 gen_chargen_sprite::@3 gen_chargen_sprite::@2 gen_chargen_sprite::@6 gen_chargen_sprite::@1  depth: 2
Loop head: place_sprites::@1 tails: place_sprites::@1 blocks: place_sprites::@1  depth: 1


VARIABLE REGISTER WEIGHTS
(byte*) BORDERCOL
(byte*) CHARGEN
(byte*) PROCPORT
(byte*) RASTER
(byte*) SCREEN
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(byte*) addMEMtoFAC::mem
(byte*) addMEMtoFAC::mem#2 2.0
(void()) anim()
(byte~) anim::$0 202.0
(byte~) anim::$1 202.0
(byte) anim::j
(byte) anim::j#1 151.5
(byte) anim::j#2 13.466666666666667
(byte) anim::j2
(byte) anim::j2#1 202.0
(byte) anim::j2#2 67.33333333333333
(byte) anim::j2#3 31.076923076923077
(byte) anim::xidx
(byte) anim::xidx#0 2.0
(byte) anim::xidx#1 202.0
(byte) anim::xidx#2 202.0
(byte) anim::xidx#3 61.0
(byte) anim::xidx#5 33.666666666666664
(byte) anim::yidx
(byte) anim::yidx#0 4.0
(byte) anim::yidx#1 202.0
(byte) anim::yidx#2 202.0
(byte) anim::yidx#3 33.888888888888886
(byte) anim::yidx#6 60.599999999999994
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#2 2.0
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0 4.0
(word~) gen_chargen_sprite::$1 4.0
(byte~) gen_chargen_sprite::$4 2002.0
(byte~) gen_chargen_sprite::$7 20002.0
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#1 15001.5
(byte) gen_chargen_sprite::b#2 2000.2
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0 202.0
(byte) gen_chargen_sprite::bits#1 667.3333333333334
(byte) gen_chargen_sprite::bits#2 182.58823529411765
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#3 769.3076923076923
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0 6.5
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0 3.678571428571429
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#1 10001.0
(byte) gen_chargen_sprite::s_gen#3 21003.0
(byte) gen_chargen_sprite::s_gen#5 400.4
(byte) gen_chargen_sprite::s_gen#6 3500.5
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#1 15001.5
(byte) gen_chargen_sprite::s_gen_cnt#3 7001.0
(byte) gen_chargen_sprite::s_gen_cnt#4 400.4
(byte) gen_chargen_sprite::s_gen_cnt#5 3500.5
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0 2.1666666666666665
(byte*) gen_chargen_sprite::sprite#1 20002.0
(byte*) gen_chargen_sprite::sprite#10 420.59999999999997
(byte*) gen_chargen_sprite::sprite#11 102.0
(byte*) gen_chargen_sprite::sprite#2 67.33333333333333
(byte*) gen_chargen_sprite::sprite#3 7625.875
(byte*) gen_chargen_sprite::sprite#4 5184.166666666666
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#1 1501.5
(byte) gen_chargen_sprite::x#6 111.22222222222223
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#1 151.5
(byte) gen_chargen_sprite::y#2 13.173913043478262
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0 4.0
(word~) gen_sintab::$13 22.0
(word~) gen_sintab::$17 22.0
(word~) gen_sintab::$23 22.0
(byte~) gen_sintab::$24 22.0
(word~) gen_sintab::$3 4.0
(byte*) gen_sintab::f_2pi
(byte[]) gen_sintab::f_amp
(byte[]) gen_sintab::f_i
(byte[]) gen_sintab::f_min
(byte) gen_sintab::i
(byte) gen_sintab::i#1 16.5
(byte) gen_sintab::i#10 1.6923076923076923
(byte) gen_sintab::length
(byte) gen_sintab::length#10 0.4074074074074074
(byte) gen_sintab::max
(byte) gen_sintab::max#2 2.0
(byte) gen_sintab::min
(byte) gen_sintab::min#2 0.2857142857142857
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#12 0.2037037037037037
(void()) gen_sprites()
(byte~) gen_sprites::$0 22.0
(byte[]) gen_sprites::cml
(byte) gen_sprites::i
(byte) gen_sprites::i#1 16.5
(byte) gen_sprites::i#2 5.5
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#1 7.333333333333333
(byte*) gen_sprites::spr#2 6.6000000000000005
(word()) getFAC()
(word) getFAC::return
(word) getFAC::return#0 4.333333333333333
(word) getFAC::return#2 22.0
(word) getFAC::w
(word) getFAC::w#1 4.0
(void()) init()
(byte*) init::sc
(byte*) init::sc#1 16.5
(byte*) init::sc#2 16.5
(void()) main()
(byte*) memHi
(byte*) memLo
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#2 2.0
(void()) place_sprites()
(byte) place_sprites::col
(byte) place_sprites::col#1 4.4
(byte) place_sprites::col#2 4.714285714285714
(byte) place_sprites::j
(byte) place_sprites::j#1 16.5
(byte) place_sprites::j#2 4.4
(byte) place_sprites::j2
(byte) place_sprites::j2#1 22.0
(byte) place_sprites::j2#2 7.333333333333333
(byte) place_sprites::j2#3 5.5
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#1 2.2
(byte) place_sprites::spr_id#2 16.5
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#1 3.6666666666666665
(byte) place_sprites::spr_x#2 5.5
(byte*) place_sprites::sprites_ptr
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0 4.0
(byte~) prepareMEM::$1 4.0
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#0 4.0
(byte*) prepareMEM::mem#1 4.0
(byte*) prepareMEM::mem#2 4.0
(byte*) prepareMEM::mem#3 4.0
(byte*) prepareMEM::mem#4 4.0
(byte*) prepareMEM::mem#5 4.666666666666666
(void()) setARGtoFAC()
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0 4.0
(word) setFAC::w
(word) setFAC::w#0 4.0
(word) setFAC::w#1 4.0
(word) setFAC::w#3 22.0
(word) setFAC::w#4 22.0
(word) setFAC::w#5 28.0
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#5 2.0
(void()) sinFAC()
(byte) sin_idx_x
(byte) sin_idx_x#11 1.4444444444444446
(byte) sin_idx_x#13 0.6521739130434783
(byte) sin_idx_x#3 2.0
(byte) sin_idx_y
(byte) sin_idx_y#11 2.6
(byte) sin_idx_y#13 0.5555555555555556
(byte) sin_idx_y#3 2.0
(byte) sinlen_x
(byte) sinlen_y
(byte[]) sintab_x
(byte[]) sintab_y
(byte[]) sprites
(void()) subFACfromARG()

Initial phi equivalence classes
[ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
[ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
[ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
[ anim::j2#3 anim::j2#2 ]
[ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
[ anim::j#2 anim::j#1 ]
[ init::sc#2 init::sc#1 ]
[ gen_sintab::max#2 ]
[ gen_sintab::min#2 ]
[ gen_sintab::length#10 ]
[ gen_sintab::sintab#12 ]
[ gen_sintab::i#10 gen_sintab::i#1 ]
[ addMEMtoFAC::mem#2 ]
[ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ]
[ mulFACbyMEM::mem#2 ]
[ divMEMbyFAC::mem#2 ]
[ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ]
[ setMEMtoFAC::mem#5 ]
[ gen_sprites::i#2 gen_sprites::i#1 ]
[ gen_sprites::spr#2 gen_sprites::spr#1 ]
[ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
[ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
[ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
[ gen_chargen_sprite::c#3 ]
[ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
[ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
[ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
[ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
[ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
[ place_sprites::j#2 place_sprites::j#1 ]
[ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
[ place_sprites::j2#3 place_sprites::j2#2 ]
[ place_sprites::col#2 place_sprites::col#1 ]
Added variable anim::$0 to zero page equivalence class [ anim::$0 ]
Added variable anim::$1 to zero page equivalence class [ anim::$1 ]
Added variable anim::j2#1 to zero page equivalence class [ anim::j2#1 ]
Added variable gen_sintab::$0 to zero page equivalence class [ gen_sintab::$0 ]
Added variable gen_sintab::$3 to zero page equivalence class [ gen_sintab::$3 ]
Added variable gen_sintab::$13 to zero page equivalence class [ gen_sintab::$13 ]
Added variable gen_sintab::$17 to zero page equivalence class [ gen_sintab::$17 ]
Added variable getFAC::return#2 to zero page equivalence class [ getFAC::return#2 ]
Added variable gen_sintab::$23 to zero page equivalence class [ gen_sintab::$23 ]
Added variable gen_sintab::$24 to zero page equivalence class [ gen_sintab::$24 ]
Added variable getFAC::w#1 to zero page equivalence class [ getFAC::w#1 ]
Added variable getFAC::return#0 to zero page equivalence class [ getFAC::return#0 ]
Added variable prepareMEM::$0 to zero page equivalence class [ prepareMEM::$0 ]
Added variable prepareMEM::$1 to zero page equivalence class [ prepareMEM::$1 ]
Added variable setFAC::$0 to zero page equivalence class [ setFAC::$0 ]
Added variable gen_sprites::$0 to zero page equivalence class [ gen_sprites::$0 ]
Added variable gen_chargen_sprite::ch#0 to zero page equivalence class [ gen_chargen_sprite::ch#0 ]
Added variable gen_chargen_sprite::$0 to zero page equivalence class [ gen_chargen_sprite::$0 ]
Added variable gen_chargen_sprite::$1 to zero page equivalence class [ gen_chargen_sprite::$1 ]
Added variable gen_chargen_sprite::chargen#0 to zero page equivalence class [ gen_chargen_sprite::chargen#0 ]
Added variable gen_chargen_sprite::$4 to zero page equivalence class [ gen_chargen_sprite::$4 ]
Added variable gen_chargen_sprite::$7 to zero page equivalence class [ gen_chargen_sprite::$7 ]
Added variable place_sprites::j2#1 to zero page equivalence class [ place_sprites::j2#1 ]
Complete equivalence classes
[ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
[ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
[ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
[ anim::j2#3 anim::j2#2 ]
[ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
[ anim::j#2 anim::j#1 ]
[ init::sc#2 init::sc#1 ]
[ gen_sintab::max#2 ]
[ gen_sintab::min#2 ]
[ gen_sintab::length#10 ]
[ gen_sintab::sintab#12 ]
[ gen_sintab::i#10 gen_sintab::i#1 ]
[ addMEMtoFAC::mem#2 ]
[ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ]
[ mulFACbyMEM::mem#2 ]
[ divMEMbyFAC::mem#2 ]
[ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ]
[ setMEMtoFAC::mem#5 ]
[ gen_sprites::i#2 gen_sprites::i#1 ]
[ gen_sprites::spr#2 gen_sprites::spr#1 ]
[ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
[ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
[ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
[ gen_chargen_sprite::c#3 ]
[ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
[ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
[ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
[ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
[ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
[ place_sprites::j#2 place_sprites::j#1 ]
[ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
[ place_sprites::j2#3 place_sprites::j2#2 ]
[ place_sprites::col#2 place_sprites::col#1 ]
[ anim::$0 ]
[ anim::$1 ]
[ anim::j2#1 ]
[ gen_sintab::$0 ]
[ gen_sintab::$3 ]
[ gen_sintab::$13 ]
[ gen_sintab::$17 ]
[ getFAC::return#2 ]
[ gen_sintab::$23 ]
[ gen_sintab::$24 ]
[ getFAC::w#1 ]
[ getFAC::return#0 ]
[ prepareMEM::$0 ]
[ prepareMEM::$1 ]
[ setFAC::$0 ]
[ gen_sprites::$0 ]
[ gen_chargen_sprite::ch#0 ]
[ gen_chargen_sprite::$0 ]
[ gen_chargen_sprite::$1 ]
[ gen_chargen_sprite::chargen#0 ]
[ gen_chargen_sprite::$4 ]
[ gen_chargen_sprite::$7 ]
[ place_sprites::j2#1 ]
Allocated zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
Allocated zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
Allocated zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
Allocated zp ZP_BYTE:5 [ anim::j2#3 anim::j2#2 ]
Allocated zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
Allocated zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ]
Allocated zp ZP_PTR_BYTE:8 [ init::sc#2 init::sc#1 ]
Allocated zp ZP_BYTE:10 [ gen_sintab::max#2 ]
Allocated zp ZP_BYTE:11 [ gen_sintab::min#2 ]
Allocated zp ZP_BYTE:12 [ gen_sintab::length#10 ]
Allocated zp ZP_PTR_BYTE:13 [ gen_sintab::sintab#12 ]
Allocated zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ]
Allocated zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 ]
Allocated zp ZP_PTR_BYTE:18 [ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ]
Allocated zp ZP_PTR_BYTE:20 [ mulFACbyMEM::mem#2 ]
Allocated zp ZP_PTR_BYTE:22 [ divMEMbyFAC::mem#2 ]
Allocated zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ]
Allocated zp ZP_PTR_BYTE:26 [ setMEMtoFAC::mem#5 ]
Allocated zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ]
Allocated zp ZP_PTR_BYTE:29 [ gen_sprites::spr#2 gen_sprites::spr#1 ]
Allocated zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Allocated zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Allocated zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Allocated zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ]
Allocated zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Allocated zp ZP_BYTE:36 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
Allocated zp ZP_BYTE:37 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
Allocated zp ZP_PTR_BYTE:38 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ]
Allocated zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
Allocated zp ZP_BYTE:41 [ place_sprites::j#2 place_sprites::j#1 ]
Allocated zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
Allocated zp ZP_BYTE:43 [ place_sprites::j2#3 place_sprites::j2#2 ]
Allocated zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ]
Allocated zp ZP_BYTE:45 [ anim::$0 ]
Allocated zp ZP_BYTE:46 [ anim::$1 ]
Allocated zp ZP_BYTE:47 [ anim::j2#1 ]
Allocated zp ZP_WORD:48 [ gen_sintab::$0 ]
Allocated zp ZP_WORD:50 [ gen_sintab::$3 ]
Allocated zp ZP_WORD:52 [ gen_sintab::$13 ]
Allocated zp ZP_WORD:54 [ gen_sintab::$17 ]
Allocated zp ZP_WORD:56 [ getFAC::return#2 ]
Allocated zp ZP_WORD:58 [ gen_sintab::$23 ]
Allocated zp ZP_BYTE:60 [ gen_sintab::$24 ]
Allocated zp ZP_WORD:61 [ getFAC::w#1 ]
Allocated zp ZP_WORD:63 [ getFAC::return#0 ]
Allocated zp ZP_BYTE:65 [ prepareMEM::$0 ]
Allocated zp ZP_BYTE:66 [ prepareMEM::$1 ]
Allocated zp ZP_PTR_BYTE:67 [ setFAC::$0 ]
Allocated zp ZP_BYTE:69 [ gen_sprites::$0 ]
Allocated zp ZP_BYTE:70 [ gen_chargen_sprite::ch#0 ]
Allocated zp ZP_WORD:71 [ gen_chargen_sprite::$0 ]
Allocated zp ZP_WORD:73 [ gen_chargen_sprite::$1 ]
Allocated zp ZP_PTR_BYTE:75 [ gen_chargen_sprite::chargen#0 ]
Allocated zp ZP_BYTE:77 [ gen_chargen_sprite::$4 ]
Allocated zp ZP_BYTE:78 [ gen_chargen_sprite::$7 ]
Allocated zp ZP_BYTE:79 [ place_sprites::j2#1 ]
INITIAL ASM
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
b39_from_bbegin:
  jmp b39
//SEG4 @39
b39:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
main_from_b39:
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
bend_from_b39:
  jmp bend
//SEG8 @end
bend:
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
  init_from_main:
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  b2_from_main:
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  b2_from_b6:
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
    jmp b2
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
    jmp b3
  //SEG22 main::@3
  b3:
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
    jmp b6
  //SEG24 main::@6
  b6:
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2_from_b6
    jmp breturn
  //SEG26 main::@return
  breturn:
  //SEG27 [11] return  [ ] ( main:2 [ ] )
    rts
}
//SEG28 anim
anim: {
    .label _0 = $2d
    .label _1 = $2e
    .label xidx = 4
    .label yidx = 6
    .label j2 = $2f
    .label j2_2 = 5
    .label j = 7
    .label j2_3 = 5
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  b1_from_anim:
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- zpby1=coby1 
    lda #$c
    sta j2_3
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  b1_from_b3:
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
    jmp b1
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx xidx
    lda sintab_x,x
    sta _0
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda _0
    ldx j2_3
    sta SPRITES_XPOS,x
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx yidx
    lda sintab_y,x
    sta _1
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda _1
    ldx j2_3
    sta SPRITES_YPOS,x
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda xidx
    cmp #sinlen_x
    bcc b2_from_b1
    jmp b6
  //SEG49 anim::@6
  b6:
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  b2_from_b1:
  b2_from_b6:
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
    jmp b2
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda yidx
    cmp #sinlen_y
    bcc b3_from_b2
    jmp b7
  //SEG56 anim::@7
  b7:
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  b3_from_b2:
  b3_from_b7:
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
    jmp b3
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- zpby1=_dec_zpby2 
    lda j2_3
    sta j2
    dec j2
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- zpby1=_dec_zpby2 
    lda j2
    sta j2_2
    dec j2_2
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1_from_b3
    jmp b8
  //SEG65 anim::@8
  b8:
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14_from_b8
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  b4_from_b8:
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
    jmp b4
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15_from_b4
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  b5_from_b4:
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
    jmp b5
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
    jmp breturn
  //SEG77 anim::@return
  breturn:
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  b15_from_b4:
    jmp b15
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  b5_from_b15:
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  b14_from_b8:
    jmp b14
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  b4_from_b14:
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 8
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  b1_from_init:
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  b1_from_b1:
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
    jmp b1
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1_from_b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1_from_b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  b2_from_b1:
    jmp b2
  //SEG97 init::@2
  b2:
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  b3_from_b2:
    jmp b3
  //SEG100 init::@3
  b3:
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
  gen_sprites_from_b3:
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  b4_from_b3:
    jmp b4
  //SEG104 init::@4
  b4:
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  gen_sintab_from_b4:
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- zpby1=coby1 
    lda #$ff
    sta gen_sintab.max
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  b5_from_b4:
    jmp b5
  //SEG112 init::@5
  b5:
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  gen_sintab_from_b5:
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- zpby1=coby1 
    lda #$d0
    sta gen_sintab.max
    jsr gen_sintab
    jmp breturn
  //SEG119 init::@return
  breturn:
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $30
    .label _3 = $32
    .label _13 = $34
    .label _17 = $36
    .label _23 = $3a
    .label _24 = $3c
    .label i = $f
    .label max = $a
    .label min = $b
    .label length = $c
    .label sintab = $d
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_zpby1 
    lda max
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ) -- zpwo1=zpwo2 
    lda _0
    sta setFAC.w
    lda _0+1
    sta setFAC.w+1
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  setFAC_from_gen_sintab:
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  b3_from_gen_sintab:
    jmp b3
  //SEG128 gen_sintab::@3
  b3:
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
    jmp b4
  //SEG130 gen_sintab::@4
  b4:
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    ldx #0
    ldy #0
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    lda #0
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ) -- zpwo1=zpwo2 
    lda _3
    sta setFAC.w
    lda _3+1
    sta setFAC.w+1
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  setFAC_from_b4:
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  b5_from_b4:
    jmp b5
  //SEG138 gen_sintab::@5
  b5:
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  setMEMtoFAC_from_b5:
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  b6_from_b5:
    jmp b6
  //SEG143 gen_sintab::@6
  b6:
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  b7_from_b6:
    jmp b7
  //SEG146 gen_sintab::@7
  b7:
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  setMEMtoFAC_from_b7:
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  b8_from_b7:
    jmp b8
  //SEG151 gen_sintab::@8
  b8:
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  setFAC_from_b8:
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  b9_from_b8:
    jmp b9
  //SEG156 gen_sintab::@9
  b9:
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  divMEMbyFAC_from_b9:
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  b10_from_b9:
    jmp b10
  //SEG161 gen_sintab::@10
  b10:
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  setMEMtoFAC_from_b10:
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  b11_from_b10:
    jmp b11
  //SEG166 gen_sintab::@11
  b11:
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  addMEMtoFAC_from_b11:
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  b12_from_b11:
    jmp b12
  //SEG171 gen_sintab::@12
  b12:
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  setMEMtoFAC_from_b12:
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  b1_from_b12:
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  b1_from_b22:
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
    jmp b1
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ) -- zpwo1=zpwo2 
    lda _13
    sta setFAC.w
    lda _13+1
    sta setFAC.w+1
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  setFAC_from_b1:
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  b14_from_b1:
    jmp b14
  //SEG186 gen_sintab::@14
  b14:
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  mulFACbyMEM_from_b14:
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  b15_from_b14:
    jmp b15
  //SEG191 gen_sintab::@15
  b15:
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  setMEMtoFAC_from_b15:
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
    jmp b16
  //SEG195 gen_sintab::@16
  b16:
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ) -- zpwo1=zpwo2 
    lda _17
    sta setFAC.w
    lda _17+1
    sta setFAC.w+1
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  setFAC_from_b16:
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  b17_from_b16:
    jmp b17
  //SEG202 gen_sintab::@17
  b17:
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  divMEMbyFAC_from_b17:
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  b18_from_b17:
    jmp b18
  //SEG207 gen_sintab::@18
  b18:
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  b19_from_b18:
    jmp b19
  //SEG210 gen_sintab::@19
  b19:
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  mulFACbyMEM_from_b19:
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  b20_from_b19:
    jmp b20
  //SEG215 gen_sintab::@20
  b20:
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  addMEMtoFAC_from_b20:
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  b21_from_b20:
    jmp b21
  //SEG220 gen_sintab::@21
  b21:
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ) -- zpwo1=zpwo2 
    lda getFAC.return
    sta getFAC.return_2
    lda getFAC.return+1
    sta getFAC.return_2+1
    jmp b22
  //SEG223 gen_sintab::@22
  b22:
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ) -- zpwo1=zpwo2 
    lda getFAC.return_2
    sta _23
    lda getFAC.return_2+1
    sta _23+1
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- zpby1=_byte_zpwo1 
    lda _23
    sta _24
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=zpby2 
    lda _24
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1_from_b22
    jmp breturn
  //SEG230 gen_sintab::@return
  breturn:
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $3d
    .label return = $3f
    .label return_2 = $38
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo2_sethi__deref_cowo1 
    lda memHi
    sta return+1
    lda w
    sta return
    jmp breturn
  //SEG236 getFAC::@return
  breturn:
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = $10
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] ) -- zpptrby1=zpptrby2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  prepareMEM_from_addMEMtoFAC:
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG243 addMEMtoFAC::@1
  b1:
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
    jmp breturn
  //SEG245 addMEMtoFAC::@return
  breturn:
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label _0 = $41
    .label _1 = $42
    .label mem = $12
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- zpby1=_lo_zpptrby1 
    lda mem
    sta _0
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=zpby1 
    lda _0
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- zpby1=_hi_zpptrby1 
    lda mem+1
    sta _1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=zpby1 
    lda _1
    sta memHi
    jmp breturn
  //SEG252 prepareMEM::@return
  breturn:
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = $14
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] ) -- zpptrby1=zpptrby2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  prepareMEM_from_mulFACbyMEM:
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG259 mulFACbyMEM::@1
  b1:
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
    jmp breturn
  //SEG261 mulFACbyMEM::@return
  breturn:
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
    jmp breturn
  //SEG265 sinFAC::@return
  breturn:
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = $16
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] ) -- zpptrby1=zpptrby2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  prepareMEM_from_divMEMbyFAC:
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG272 divMEMbyFAC::@1
  b1:
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
    jmp breturn
  //SEG274 divMEMbyFAC::@return
  breturn:
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = $43
    .label w = $18
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] ) -- zpptrby1=zpptrby2 
    lda _0
    sta prepareMEM.mem
    lda _0+1
    sta prepareMEM.mem+1
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  prepareMEM_from_setFAC:
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG282 setFAC::@1
  b1:
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
    jmp breturn
  //SEG284 setFAC::@return
  breturn:
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = $1a
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] ) -- zpptrby1=zpptrby2 
    lda mem
    sta prepareMEM.mem
    lda mem+1
    sta prepareMEM.mem+1
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  prepareMEM_from_setMEMtoFAC:
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
    jmp b1
  //SEG291 setMEMtoFAC::@1
  b1:
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
    jmp breturn
  //SEG293 setMEMtoFAC::@return
  breturn:
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
    jmp breturn
  //SEG297 subFACfromARG::@return
  breturn:
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
    jmp breturn
  //SEG301 setARGtoFAC::@return
  breturn:
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label _0 = $45
    .label spr = $1d
    .label i = $1c
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  b1_from_gen_sprites:
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  b1_from_b3:
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
    jmp b1
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- zpby1=cowo1_derefidx_zpby2 
    ldx i
    lda cml,x
    sta _0
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- zpby1=zpby2 
    lda _0
    sta gen_chargen_sprite.ch
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
    jmp b3
  //SEG315 gen_sprites::@3
  b3:
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1_from_b3
    jmp breturn
  //SEG319 gen_sprites::@return
  breturn:
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $47
    .label _1 = $49
    .label _4 = $4d
    .label _7 = $4e
    .label ch = $46
    .label sprite = $26
    .label chargen = $4b
    .label bits = $20
    .label s_gen = $23
    .label s_gen_cnt = $24
    .label b = $25
    .label x = $21
    .label y = $1f
    .label c = $22
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_zpby1 
    lda ch
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo2_rol_3 
    lda _1
    asl
    sta _0
    lda _1+1
    rol
    sta _0+1
    lda _1
    asl
    sta _0
    lda _1+1
    rol
    sta _0+1
    lda _1
    asl
    sta _0
    lda _1+1
    rol
    sta _0+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  b1_from_gen_chargen_sprite:
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  b1_from_b9:
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
    jmp b1
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  b2_from_b1:
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- zpby1=coby1 
    lda #0
    sta s_gen_cnt
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    lda #0
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  b2_from_b8:
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- zpby1=zpby2_band_coby1 
    lda bits
    and #$80
    sta _4
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- zpby1_eq_0_then_la1 
    lda _4
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  b6_from_b2:
    jmp b6
  //SEG351 gen_chargen_sprite::@6
  b6:
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  b3_from_b6:
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
    jmp b3
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  b4_from_b3:
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- zpby1=coby1 
    lda #0
    sta b
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  b4_from_b5:
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- zpby1=zpby2_rol_1 
    lda s_gen
    asl
    sta _7
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=zpby2_bor_zpby3 
    lda _7
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- zpby1=_inc_zpby1 
    inc s_gen_cnt
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda s_gen_cnt
    cmp #8
    bne b5_from_b4
    jmp b7
  //SEG372 gen_chargen_sprite::@7
  b7:
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  b5_from_b7:
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- zpby1=coby1 
    lda #0
    sta s_gen_cnt
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    lda #0
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  b5_from_b4:
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
    jmp b5
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- zpby1=_inc_zpby1 
    inc b
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda b
    cmp #3
    bne b4_from_b5
    jmp b8
  //SEG388 gen_chargen_sprite::@8
  b8:
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2_from_b8
    jmp b9
  //SEG392 gen_chargen_sprite::@9
  b9:
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1_from_b9
    jmp b10
  //SEG396 gen_chargen_sprite::@10
  b10:
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
    jmp breturn
  //SEG399 gen_chargen_sprite::@return
  breturn:
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = $28
    .label spr_x = $2a
    .label col = $2c
    .label j2 = $4f
    .label j2_2 = $2b
    .label j = $29
    .label j2_3 = $2b
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  b1_from_place_sprites:
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta j2_3
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- zpby1=coby1 
    lda #0
    sta j
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  b1_from_b1:
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
    jmp b1
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda spr_id
    ldx j
    sta sprites_ptr,x
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda spr_x
    ldx j2_3
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_zpby1=coby2 
    lda #$50
    ldx j2_3
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_zpby1=zpby2 
    lda col
    ldx j
    sta SPRITES_COLS,x
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- zpby1=_inc_zpby2 
    lda j2_3
    sta j2
    inc j2
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- zpby1=_inc_zpby2 
    lda j2
    sta j2_2
    inc j2_2
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1_from_b1
    jmp breturn
  //SEG429 place_sprites::@return
  breturn:
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

REGISTER UPLIFT POTENTIAL REGISTERS
Statement [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
Statement [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:5 [ anim::j2#3 anim::j2#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ]
Statement [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) always clobbers reg byte a 
Statement [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
Statement [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) always clobbers reg byte a 
Statement [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) always clobbers reg byte a 
Statement [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:11 [ gen_sintab::min#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:12 [ gen_sintab::length#10 ]
Statement [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ) always clobbers reg byte a 
Statement asm { lda#0ldx#0ldy#0 } always clobbers reg byte a reg byte x reg byte y 
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:11 [ gen_sintab::min#2 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:11 [ gen_sintab::min#2 ]
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:12 [ gen_sintab::length#10 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:12 [ gen_sintab::length#10 ]
Statement [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) always clobbers reg byte a 
Statement [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ) always clobbers reg byte a 
Statement [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ]
Statement [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ) always clobbers reg byte a 
Statement [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) always clobbers reg byte a 
Statement [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ) always clobbers reg byte a 
Statement [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ) always clobbers reg byte a 
Statement [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ) always clobbers reg byte a 
Statement [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) always clobbers reg byte a 
Statement [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) always clobbers reg byte a 
Statement [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) always clobbers reg byte a 
Statement [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] ) always clobbers reg byte a 
Statement asm { lda$feldy$ffjsr$b867 } always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ]
Statement [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) always clobbers reg byte a 
Statement [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) always clobbers reg byte a 
Statement [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] ) always clobbers reg byte a 
Statement asm { lda$feldy$ffjsr$ba28 } always clobbers reg byte a reg byte y 
Statement [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] ) always clobbers reg byte a 
Statement asm { lda$feldy$ffjsr$bb0f } always clobbers reg byte a reg byte y 
Statement [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) always clobbers reg byte a 
Statement [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] ) always clobbers reg byte a 
Statement asm { ldy$felda$ffjsr$b391 } always clobbers reg byte a reg byte y 
Statement [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] ) always clobbers reg byte a 
Statement asm { ldx$feldy$ffjsr$bbd4 } always clobbers reg byte x reg byte y 
Removing always clobbered register reg byte x as potential for zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ]
Statement [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:70 [ gen_chargen_sprite::ch#0 ]
Statement [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) always clobbers reg byte a 
Statement [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) always clobbers reg byte a 
Statement [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) always clobbers reg byte a 
Statement [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Statement [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:36 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Statement [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:37 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
Statement [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a 
Statement [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:37 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
Removing always clobbered register reg byte y as potential for zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Statement [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Statement [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) always clobbers reg byte a reg byte y 
Statement [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) always clobbers reg byte a 
Statement [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) always clobbers reg byte a 
Statement [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) always clobbers reg byte a 
Statement [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) always clobbers reg byte a 
Statement [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) always clobbers reg byte a 
Statement [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:41 [ place_sprites::j#2 place_sprites::j#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:43 [ place_sprites::j2#3 place_sprites::j2#2 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ]
Removing always clobbered register reg byte a as potential for zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
Statement [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) always clobbers reg byte a 
Statement [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) always clobbers reg byte a 
Statement [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) always clobbers reg byte a 
Statement [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) always clobbers reg byte a 
Statement [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) always clobbers reg byte a 
Statement [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) always clobbers reg byte a 
Statement [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) always clobbers reg byte a 
Statement [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) always clobbers reg byte a reg byte y 
Statement [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) always clobbers reg byte a 
Statement [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) always clobbers reg byte a 
Statement [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ) always clobbers reg byte a 
Statement asm { lda#0ldx#0ldy#0 } always clobbers reg byte a reg byte x reg byte y 
Statement [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) always clobbers reg byte a 
Statement [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ) always clobbers reg byte a 
Statement [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) always clobbers reg byte a 
Statement [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ) always clobbers reg byte a 
Statement [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) always clobbers reg byte a 
Statement [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ) always clobbers reg byte a 
Statement [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ) always clobbers reg byte a 
Statement [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ) always clobbers reg byte a 
Statement [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) always clobbers reg byte a 
Statement [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) always clobbers reg byte y 
Statement [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) always clobbers reg byte a 
Statement [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) always clobbers reg byte a 
Statement [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) always clobbers reg byte a 
Statement [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] ) always clobbers reg byte a 
Statement asm { lda$feldy$ffjsr$b867 } always clobbers reg byte a reg byte y 
Statement [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) always clobbers reg byte a 
Statement [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) always clobbers reg byte a 
Statement [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] ) always clobbers reg byte a 
Statement asm { lda$feldy$ffjsr$ba28 } always clobbers reg byte a reg byte y 
Statement [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] ) always clobbers reg byte a 
Statement asm { lda$feldy$ffjsr$bb0f } always clobbers reg byte a reg byte y 
Statement [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) always clobbers reg byte a 
Statement [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] ) always clobbers reg byte a 
Statement asm { ldy$felda$ffjsr$b391 } always clobbers reg byte a reg byte y 
Statement [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] ) always clobbers reg byte a 
Statement asm { ldx$feldy$ffjsr$bbd4 } always clobbers reg byte x reg byte y 
Statement [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) always clobbers reg byte a 
Statement [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) always clobbers reg byte a 
Statement [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) always clobbers reg byte a 
Statement [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) always clobbers reg byte a 
Statement [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) always clobbers reg byte a 
Statement [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) always clobbers reg byte a reg byte y 
Statement [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) always clobbers reg byte a 
Statement [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) always clobbers reg byte a 
Statement [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a 
Statement [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Statement [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) always clobbers reg byte a reg byte y 
Statement [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) always clobbers reg byte a reg byte y 
Statement [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) always clobbers reg byte a 
Statement [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) always clobbers reg byte a 
Statement [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) always clobbers reg byte a 
Statement [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) always clobbers reg byte a 
Statement [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) always clobbers reg byte a 
Statement [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) always clobbers reg byte a 
Statement [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) always clobbers reg byte a 
Statement [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) always clobbers reg byte a 
Statement [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) always clobbers reg byte a 
Potential registers zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] : zp ZP_BYTE:2 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] : zp ZP_BYTE:3 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] : zp ZP_BYTE:4 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:5 [ anim::j2#3 anim::j2#2 ] : zp ZP_BYTE:5 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] : zp ZP_BYTE:6 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ] : zp ZP_BYTE:7 , reg byte x , reg byte y , 
Potential registers zp ZP_PTR_BYTE:8 [ init::sc#2 init::sc#1 ] : zp ZP_PTR_BYTE:8 , 
Potential registers zp ZP_BYTE:10 [ gen_sintab::max#2 ] : zp ZP_BYTE:10 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:11 [ gen_sintab::min#2 ] : zp ZP_BYTE:11 , 
Potential registers zp ZP_BYTE:12 [ gen_sintab::length#10 ] : zp ZP_BYTE:12 , 
Potential registers zp ZP_PTR_BYTE:13 [ gen_sintab::sintab#12 ] : zp ZP_PTR_BYTE:13 , 
Potential registers zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ] : zp ZP_BYTE:15 , 
Potential registers zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 ] : zp ZP_PTR_BYTE:16 , 
Potential registers zp ZP_PTR_BYTE:18 [ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ] : zp ZP_PTR_BYTE:18 , 
Potential registers zp ZP_PTR_BYTE:20 [ mulFACbyMEM::mem#2 ] : zp ZP_PTR_BYTE:20 , 
Potential registers zp ZP_PTR_BYTE:22 [ divMEMbyFAC::mem#2 ] : zp ZP_PTR_BYTE:22 , 
Potential registers zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] : zp ZP_WORD:24 , 
Potential registers zp ZP_PTR_BYTE:26 [ setMEMtoFAC::mem#5 ] : zp ZP_PTR_BYTE:26 , 
Potential registers zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ] : zp ZP_BYTE:28 , reg byte x , 
Potential registers zp ZP_PTR_BYTE:29 [ gen_sprites::spr#2 gen_sprites::spr#1 ] : zp ZP_PTR_BYTE:29 , 
Potential registers zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] : zp ZP_BYTE:31 , reg byte x , 
Potential registers zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] : zp ZP_BYTE:32 , reg byte x , 
Potential registers zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] : zp ZP_BYTE:33 , reg byte x , 
Potential registers zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ] : zp ZP_BYTE:34 , reg byte x , 
Potential registers zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] : zp ZP_BYTE:35 , reg byte x , 
Potential registers zp ZP_BYTE:36 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ] : zp ZP_BYTE:36 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:37 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ] : zp ZP_BYTE:37 , reg byte x , 
Potential registers zp ZP_PTR_BYTE:38 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] : zp ZP_PTR_BYTE:38 , 
Potential registers zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] : zp ZP_BYTE:40 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:41 [ place_sprites::j#2 place_sprites::j#1 ] : zp ZP_BYTE:41 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] : zp ZP_BYTE:42 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:43 [ place_sprites::j2#3 place_sprites::j2#2 ] : zp ZP_BYTE:43 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ] : zp ZP_BYTE:44 , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:45 [ anim::$0 ] : zp ZP_BYTE:45 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:46 [ anim::$1 ] : zp ZP_BYTE:46 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:47 [ anim::j2#1 ] : zp ZP_BYTE:47 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:48 [ gen_sintab::$0 ] : zp ZP_WORD:48 , 
Potential registers zp ZP_WORD:50 [ gen_sintab::$3 ] : zp ZP_WORD:50 , 
Potential registers zp ZP_WORD:52 [ gen_sintab::$13 ] : zp ZP_WORD:52 , 
Potential registers zp ZP_WORD:54 [ gen_sintab::$17 ] : zp ZP_WORD:54 , 
Potential registers zp ZP_WORD:56 [ getFAC::return#2 ] : zp ZP_WORD:56 , 
Potential registers zp ZP_WORD:58 [ gen_sintab::$23 ] : zp ZP_WORD:58 , 
Potential registers zp ZP_BYTE:60 [ gen_sintab::$24 ] : zp ZP_BYTE:60 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:61 [ getFAC::w#1 ] : zp ZP_WORD:61 , 
Potential registers zp ZP_WORD:63 [ getFAC::return#0 ] : zp ZP_WORD:63 , 
Potential registers zp ZP_BYTE:65 [ prepareMEM::$0 ] : zp ZP_BYTE:65 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:66 [ prepareMEM::$1 ] : zp ZP_BYTE:66 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_PTR_BYTE:67 [ setFAC::$0 ] : zp ZP_PTR_BYTE:67 , 
Potential registers zp ZP_BYTE:69 [ gen_sprites::$0 ] : zp ZP_BYTE:69 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:70 [ gen_chargen_sprite::ch#0 ] : zp ZP_BYTE:70 , reg byte x , reg byte y , 
Potential registers zp ZP_WORD:71 [ gen_chargen_sprite::$0 ] : zp ZP_WORD:71 , 
Potential registers zp ZP_WORD:73 [ gen_chargen_sprite::$1 ] : zp ZP_WORD:73 , 
Potential registers zp ZP_PTR_BYTE:75 [ gen_chargen_sprite::chargen#0 ] : zp ZP_PTR_BYTE:75 , 
Potential registers zp ZP_BYTE:77 [ gen_chargen_sprite::$4 ] : zp ZP_BYTE:77 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:78 [ gen_chargen_sprite::$7 ] : zp ZP_BYTE:78 , reg byte a , reg byte x , reg byte y , 
Potential registers zp ZP_BYTE:79 [ place_sprites::j2#1 ] : zp ZP_BYTE:79 , reg byte a , reg byte x , reg byte y , 

REGISTER UPLIFT SCOPES
Uplift Scope [gen_chargen_sprite] 34,904.9: zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] 33,404.14: zp ZP_PTR_BYTE:38 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] 25,903.4: zp ZP_BYTE:36 [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ] 20,002: zp ZP_BYTE:78 [ gen_chargen_sprite::$7 ] 17,001.7: zp ZP_BYTE:37 [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ] 2,002: zp ZP_BYTE:77 [ gen_chargen_sprite::$4 ] 1,612.72: zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] 1,051.92: zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] 769.31: zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ] 164.67: zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] 6.5: zp ZP_BYTE:70 [ gen_chargen_sprite::ch#0 ] 4: zp ZP_WORD:71 [ gen_chargen_sprite::$0 ] 4: zp ZP_WORD:73 [ gen_chargen_sprite::$1 ] 3.68: zp ZP_PTR_BYTE:75 [ gen_chargen_sprite::chargen#0 ] 
Uplift Scope [anim] 502.49: zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] 500.67: zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] 202: zp ZP_BYTE:45 [ anim::$0 ] 202: zp ZP_BYTE:46 [ anim::$1 ] 202: zp ZP_BYTE:47 [ anim::j2#1 ] 164.97: zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ] 98.41: zp ZP_BYTE:5 [ anim::j2#3 anim::j2#2 ] 
Uplift Scope [gen_sintab] 22: zp ZP_WORD:52 [ gen_sintab::$13 ] 22: zp ZP_WORD:54 [ gen_sintab::$17 ] 22: zp ZP_WORD:58 [ gen_sintab::$23 ] 22: zp ZP_BYTE:60 [ gen_sintab::$24 ] 18.19: zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ] 4: zp ZP_WORD:48 [ gen_sintab::$0 ] 4: zp ZP_WORD:50 [ gen_sintab::$3 ] 2: zp ZP_BYTE:10 [ gen_sintab::max#2 ] 0.41: zp ZP_BYTE:12 [ gen_sintab::length#10 ] 0.29: zp ZP_BYTE:11 [ gen_sintab::min#2 ] 0.2: zp ZP_PTR_BYTE:13 [ gen_sintab::sintab#12 ] 
Uplift Scope [place_sprites] 22: zp ZP_BYTE:79 [ place_sprites::j2#1 ] 20.9: zp ZP_BYTE:41 [ place_sprites::j#2 place_sprites::j#1 ] 18.7: zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] 12.83: zp ZP_BYTE:43 [ place_sprites::j2#3 place_sprites::j2#2 ] 9.17: zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] 9.11: zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ] 
Uplift Scope [setFAC] 80: zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] 4: zp ZP_PTR_BYTE:67 [ setFAC::$0 ] 
Uplift Scope [gen_sprites] 22: zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ] 22: zp ZP_BYTE:69 [ gen_sprites::$0 ] 13.93: zp ZP_PTR_BYTE:29 [ gen_sprites::spr#2 gen_sprites::spr#1 ] 
Uplift Scope [init] 33: zp ZP_PTR_BYTE:8 [ init::sc#2 init::sc#1 ] 
Uplift Scope [prepareMEM] 24.67: zp ZP_PTR_BYTE:18 [ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ] 4: zp ZP_BYTE:65 [ prepareMEM::$0 ] 4: zp ZP_BYTE:66 [ prepareMEM::$1 ] 
Uplift Scope [getFAC] 22: zp ZP_WORD:56 [ getFAC::return#2 ] 4.33: zp ZP_WORD:63 [ getFAC::return#0 ] 4: zp ZP_WORD:61 [ getFAC::w#1 ] 
Uplift Scope [] 5.16: zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] 4.1: zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] 
Uplift Scope [setMEMtoFAC] 2: zp ZP_PTR_BYTE:26 [ setMEMtoFAC::mem#5 ] 
Uplift Scope [addMEMtoFAC] 2: zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 ] 
Uplift Scope [divMEMbyFAC] 2: zp ZP_PTR_BYTE:22 [ divMEMbyFAC::mem#2 ] 
Uplift Scope [mulFACbyMEM] 2: zp ZP_PTR_BYTE:20 [ mulFACbyMEM::mem#2 ] 
Uplift Scope [setARGtoFAC] 
Uplift Scope [subFACfromARG] 
Uplift Scope [sinFAC] 
Uplift Scope [main] 

Uplifting [gen_chargen_sprite] best 1072523 combination zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] zp ZP_PTR_BYTE:38 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] reg byte y [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ] reg byte a [ gen_chargen_sprite::$7 ] reg byte x [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ] reg byte a [ gen_chargen_sprite::$4 ] zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ] zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] reg byte x [ gen_chargen_sprite::ch#0 ] zp ZP_WORD:71 [ gen_chargen_sprite::$0 ] zp ZP_WORD:73 [ gen_chargen_sprite::$1 ] zp ZP_PTR_BYTE:75 [ gen_chargen_sprite::chargen#0 ] 
Uplifting [anim] best 1068623 combination zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] reg byte a [ anim::$0 ] reg byte a [ anim::$1 ] reg byte y [ anim::j2#1 ] zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ] reg byte y [ anim::j2#3 anim::j2#2 ] 
Uplifting [gen_sintab] best 1068556 combination zp ZP_WORD:52 [ gen_sintab::$13 ] zp ZP_WORD:54 [ gen_sintab::$17 ] zp ZP_WORD:58 [ gen_sintab::$23 ] reg byte a [ gen_sintab::$24 ] zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ] zp ZP_WORD:48 [ gen_sintab::$0 ] zp ZP_WORD:50 [ gen_sintab::$3 ] reg byte x [ gen_sintab::max#2 ] zp ZP_BYTE:12 [ gen_sintab::length#10 ] zp ZP_BYTE:11 [ gen_sintab::min#2 ] zp ZP_PTR_BYTE:13 [ gen_sintab::sintab#12 ] 
Uplifting [place_sprites] best 1068136 combination reg byte x [ place_sprites::j2#1 ] reg byte y [ place_sprites::j#2 place_sprites::j#1 ] zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] reg byte x [ place_sprites::j2#3 place_sprites::j2#2 ] zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ] 
Uplifting [setFAC] best 1068136 combination zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] zp ZP_PTR_BYTE:67 [ setFAC::$0 ] 
Uplifting [gen_sprites] best 1068096 combination zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ] reg byte a [ gen_sprites::$0 ] zp ZP_PTR_BYTE:29 [ gen_sprites::spr#2 gen_sprites::spr#1 ] 
Uplifting [init] best 1068096 combination zp ZP_PTR_BYTE:8 [ init::sc#2 init::sc#1 ] 
Uplifting [prepareMEM] best 1068084 combination zp ZP_PTR_BYTE:18 [ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ] reg byte a [ prepareMEM::$0 ] reg byte a [ prepareMEM::$1 ] 
Uplifting [getFAC] best 1068084 combination zp ZP_WORD:56 [ getFAC::return#2 ] zp ZP_WORD:63 [ getFAC::return#0 ] zp ZP_WORD:61 [ getFAC::w#1 ] 
Uplifting [] best 1068084 combination zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] 
Uplifting [setMEMtoFAC] best 1068084 combination zp ZP_PTR_BYTE:26 [ setMEMtoFAC::mem#5 ] 
Uplifting [addMEMtoFAC] best 1068084 combination zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 ] 
Uplifting [divMEMbyFAC] best 1068084 combination zp ZP_PTR_BYTE:22 [ divMEMbyFAC::mem#2 ] 
Uplifting [mulFACbyMEM] best 1068084 combination zp ZP_PTR_BYTE:20 [ mulFACbyMEM::mem#2 ] 
Uplifting [setARGtoFAC] best 1068084 combination 
Uplifting [subFACfromARG] best 1068084 combination 
Uplifting [sinFAC] best 1068084 combination 
Uplifting [main] best 1068084 combination 
Attempting to uplift remaining variables inzp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Uplifting [gen_chargen_sprite] best 1068084 combination zp ZP_BYTE:35 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Uplifting [gen_chargen_sprite] best 1068084 combination zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ]
Uplifting [gen_chargen_sprite] best 1068084 combination zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ]
Uplifting [gen_chargen_sprite] best 1068084 combination zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ]
Uplifting [anim] best 1068084 combination zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ]
Uplifting [anim] best 1068084 combination zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:7 [ anim::j#2 anim::j#1 ]
Uplifting [anim] best 1068084 combination zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ]
Uplifting [gen_chargen_sprite] best 1068084 combination zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ]
Uplifting [gen_sprites] best 1068084 combination zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ]
Uplifting [place_sprites] best 1068084 combination zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ]
Uplifting [gen_sintab] best 1068084 combination zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ]
Uplifting [place_sprites] best 1068084 combination zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ]
Uplifting [place_sprites] best 1068084 combination zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ]
Uplifting [] best 1068084 combination zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ]
Uplifting [] best 1068084 combination zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:12 [ gen_sintab::length#10 ]
Uplifting [gen_sintab] best 1068084 combination zp ZP_BYTE:12 [ gen_sintab::length#10 ] 
Attempting to uplift remaining variables inzp ZP_BYTE:11 [ gen_sintab::min#2 ]
Uplifting [gen_sintab] best 1068084 combination zp ZP_BYTE:11 [ gen_sintab::min#2 ] 
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 ] ] with [ zp ZP_BYTE:11 [ gen_sintab::min#2 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 ] ] with [ zp ZP_BYTE:15 [ gen_sintab::i#10 gen_sintab::i#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 gen_sintab::i#10 gen_sintab::i#1 ] ] with [ zp ZP_BYTE:28 [ gen_sprites::i#2 gen_sprites::i#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 gen_sintab::i#10 gen_sintab::i#1 gen_sprites::i#2 gen_sprites::i#1 ] ] with [ zp ZP_BYTE:40 [ place_sprites::spr_id#2 place_sprites::spr_id#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 ] ] with [ zp ZP_BYTE:12 [ gen_sintab::length#10 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 gen_sintab::length#10 ] ] with [ zp ZP_BYTE:31 [ gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 gen_sintab::length#10 gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 ] ] with [ zp ZP_BYTE:42 [ place_sprites::spr_x#2 place_sprites::spr_x#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 ] ] with [ zp ZP_BYTE:32 [ gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 ] ] with [ zp ZP_BYTE:44 [ place_sprites::col#2 place_sprites::col#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:6 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 ] ] with [ zp ZP_BYTE:33 [ gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ] ]
Coalescing zero page register [ zp ZP_BYTE:7 [ anim::j#2 anim::j#1 ] ] with [ zp ZP_BYTE:34 [ gen_chargen_sprite::c#3 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:8 [ init::sc#2 init::sc#1 ] ] with [ zp ZP_PTR_BYTE:13 [ gen_sintab::sintab#12 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:8 [ init::sc#2 init::sc#1 gen_sintab::sintab#12 ] ] with [ zp ZP_PTR_BYTE:29 [ gen_sprites::spr#2 gen_sprites::spr#1 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 ] ] with [ zp ZP_PTR_BYTE:18 [ prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 ] ] with [ zp ZP_PTR_BYTE:20 [ mulFACbyMEM::mem#2 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 mulFACbyMEM::mem#2 ] ] with [ zp ZP_PTR_BYTE:22 [ divMEMbyFAC::mem#2 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 ] ] with [ zp ZP_PTR_BYTE:26 [ setMEMtoFAC::mem#5 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setMEMtoFAC::mem#5 ] ] with [ zp ZP_PTR_BYTE:38 [ gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] ]
Coalescing zero page register [ zp ZP_PTR_BYTE:16 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setMEMtoFAC::mem#5 gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 ] ] with [ zp ZP_PTR_BYTE:67 [ setFAC::$0 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 ] ] with [ zp ZP_WORD:48 [ gen_sintab::$0 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 ] ] with [ zp ZP_WORD:50 [ gen_sintab::$3 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 ] ] with [ zp ZP_WORD:52 [ gen_sintab::$13 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 ] ] with [ zp ZP_WORD:54 [ gen_sintab::$17 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 ] ] with [ zp ZP_WORD:56 [ getFAC::return#2 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 ] ] with [ zp ZP_WORD:58 [ gen_sintab::$23 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 gen_sintab::$23 ] ] with [ zp ZP_WORD:61 [ getFAC::w#1 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 gen_sintab::$23 getFAC::w#1 ] ] with [ zp ZP_WORD:63 [ getFAC::return#0 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 gen_sintab::$23 getFAC::w#1 getFAC::return#0 ] ] with [ zp ZP_WORD:71 [ gen_chargen_sprite::$0 ] ]
Coalescing zero page register [ zp ZP_WORD:24 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 gen_sintab::$23 getFAC::w#1 getFAC::return#0 gen_chargen_sprite::$0 ] ] with [ zp ZP_WORD:73 [ gen_chargen_sprite::$1 ] ]
Allocated (was zp ZP_BYTE:6) zp ZP_BYTE:5 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
Allocated (was zp ZP_BYTE:7) zp ZP_BYTE:6 [ anim::j#2 anim::j#1 gen_chargen_sprite::c#3 ]
Allocated (was zp ZP_PTR_BYTE:8) zp ZP_PTR_BYTE:7 [ init::sc#2 init::sc#1 gen_sintab::sintab#12 gen_sprites::spr#2 gen_sprites::spr#1 ]
Allocated (was zp ZP_PTR_BYTE:16) zp ZP_PTR_BYTE:9 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setMEMtoFAC::mem#5 gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 setFAC::$0 ]
Allocated (was zp ZP_WORD:24) zp ZP_WORD:11 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 gen_sintab::$23 getFAC::w#1 getFAC::return#0 gen_chargen_sprite::$0 gen_chargen_sprite::$1 ]
Allocated (was zp ZP_BYTE:35) zp ZP_BYTE:13 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
Allocated (was zp ZP_PTR_BYTE:75) zp ZP_PTR_BYTE:14 [ gen_chargen_sprite::chargen#0 ]
Removing instruction jmp b39
Removing instruction jmp bend
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b6
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b6
Removing instruction jmp b2
Removing instruction jmp b7
Removing instruction jmp b3
Removing instruction jmp b8
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp b15
Removing instruction jmp b14
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp breturn
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b6
Removing instruction jmp b7
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b10
Removing instruction jmp b11
Removing instruction jmp b12
Removing instruction jmp b1
Removing instruction jmp b14
Removing instruction jmp b15
Removing instruction jmp b16
Removing instruction jmp b17
Removing instruction jmp b18
Removing instruction jmp b19
Removing instruction jmp b20
Removing instruction jmp b21
Removing instruction jmp b22
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b3
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b6
Removing instruction jmp b3
Removing instruction jmp b4
Removing instruction jmp b7
Removing instruction jmp b5
Removing instruction jmp b8
Removing instruction jmp b9
Removing instruction jmp b10
Removing instruction jmp breturn
Removing instruction jmp b1
Removing instruction jmp breturn
Succesful ASM optimization Pass5NextJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
b39_from_bbegin:
//SEG4 @39
b39:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
main_from_b39:
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
bend_from_b39:
//SEG8 @end
bend:
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
  init_from_main:
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  b2_from_main:
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  b2_from_b6:
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
  //SEG22 main::@3
  b3:
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  b6:
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2_from_b6
  //SEG26 main::@return
  breturn:
  //SEG27 [11] return  [ ] ( main:2 [ ] )
    rts
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  b1_from_anim:
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  b1_from_b3:
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda xidx
    cmp #sinlen_x
    bcc b2_from_b1
  //SEG49 anim::@6
  b6:
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  b2_from_b1:
  b2_from_b6:
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    lda yidx
    cmp #sinlen_y
    bcc b3_from_b2
  //SEG56 anim::@7
  b7:
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  b3_from_b2:
  b3_from_b7:
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1_from_b3
  //SEG65 anim::@8
  b8:
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14_from_b8
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  b4_from_b8:
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15_from_b4
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  b5_from_b4:
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  breturn:
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  b15_from_b4:
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  b5_from_b15:
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  b14_from_b8:
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  b4_from_b14:
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  b1_from_init:
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  b1_from_b1:
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1_from_b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1_from_b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  b2_from_b1:
  //SEG97 init::@2
  b2:
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  b3_from_b2:
  //SEG100 init::@3
  b3:
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
  gen_sprites_from_b3:
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  b4_from_b3:
  //SEG104 init::@4
  b4:
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  gen_sintab_from_b4:
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  b5_from_b4:
  //SEG112 init::@5
  b5:
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  gen_sintab_from_b5:
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  breturn:
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  setFAC_from_gen_sintab:
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  b3_from_gen_sintab:
  //SEG128 gen_sintab::@3
  b3:
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  b4:
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    ldx #0
    ldy #0
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    lda #0
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  setFAC_from_b4:
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  b5_from_b4:
  //SEG138 gen_sintab::@5
  b5:
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  setMEMtoFAC_from_b5:
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  b6_from_b5:
  //SEG143 gen_sintab::@6
  b6:
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  b7_from_b6:
  //SEG146 gen_sintab::@7
  b7:
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  setMEMtoFAC_from_b7:
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  b8_from_b7:
  //SEG151 gen_sintab::@8
  b8:
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  setFAC_from_b8:
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  b9_from_b8:
  //SEG156 gen_sintab::@9
  b9:
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  divMEMbyFAC_from_b9:
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  b10_from_b9:
  //SEG161 gen_sintab::@10
  b10:
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  setMEMtoFAC_from_b10:
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  b11_from_b10:
  //SEG166 gen_sintab::@11
  b11:
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  addMEMtoFAC_from_b11:
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  b12_from_b11:
  //SEG171 gen_sintab::@12
  b12:
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  setMEMtoFAC_from_b12:
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  b1_from_b12:
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  b1_from_b22:
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  setFAC_from_b1:
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  b14_from_b1:
  //SEG186 gen_sintab::@14
  b14:
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  mulFACbyMEM_from_b14:
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  b15_from_b14:
  //SEG191 gen_sintab::@15
  b15:
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  setMEMtoFAC_from_b15:
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  b16:
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  setFAC_from_b16:
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  b17_from_b16:
  //SEG202 gen_sintab::@17
  b17:
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  divMEMbyFAC_from_b17:
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  b18_from_b17:
  //SEG207 gen_sintab::@18
  b18:
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  b19_from_b18:
  //SEG210 gen_sintab::@19
  b19:
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  mulFACbyMEM_from_b19:
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  b20_from_b19:
  //SEG215 gen_sintab::@20
  b20:
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  addMEMtoFAC_from_b20:
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  b21_from_b20:
  //SEG220 gen_sintab::@21
  b21:
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  b22:
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1_from_b22
  //SEG230 gen_sintab::@return
  breturn:
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  breturn:
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  prepareMEM_from_addMEMtoFAC:
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  b1:
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  breturn:
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  breturn:
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  prepareMEM_from_mulFACbyMEM:
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  b1:
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  breturn:
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  breturn:
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  prepareMEM_from_divMEMbyFAC:
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  b1:
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  breturn:
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  prepareMEM_from_setFAC:
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  b1:
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  breturn:
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  prepareMEM_from_setMEMtoFAC:
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  b1:
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  breturn:
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  breturn:
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  breturn:
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  b1_from_gen_sprites:
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  b1_from_b3:
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  b3:
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1_from_b3
  //SEG319 gen_sprites::@return
  breturn:
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  b1_from_gen_chargen_sprite:
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  b1_from_b9:
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  b2_from_b1:
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    ldy #0
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    lda #0
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  b2_from_b8:
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  b6_from_b2:
  //SEG351 gen_chargen_sprite::@6
  b6:
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  b3_from_b6:
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  b4_from_b3:
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  b4_from_b5:
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5_from_b4
  //SEG372 gen_chargen_sprite::@7
  b7:
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  b5_from_b7:
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    lda #0
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  b5_from_b4:
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4_from_b5
  //SEG388 gen_chargen_sprite::@8
  b8:
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2_from_b8
  //SEG392 gen_chargen_sprite::@9
  b9:
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1_from_b9
  //SEG396 gen_chargen_sprite::@10
  b10:
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  breturn:
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  b1_from_place_sprites:
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  b1_from_b1:
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1_from_b1
  //SEG429 place_sprites::@return
  breturn:
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction lda #0
Removing instruction lda xidx
Removing instruction lda yidx
Replacing instruction ldx #0 with TAX
Replacing instruction ldy #0 with TAY
Replacing instruction lda #0 with TXA
Replacing instruction ldy #0 with TAY
Removing instruction lda #0
Replacing instruction lda #0 with TYA
Removing instruction lda #$7f
Removing instruction lda #$7f
Succesful ASM optimization Pass5UnnecesaryLoadElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
bbegin:
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
b39_from_bbegin:
//SEG4 @39
b39:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
main_from_b39:
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
bend_from_b39:
//SEG8 @end
bend:
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
  init_from_main:
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  b2_from_main:
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  b2_from_b6:
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  b3_from_b2:
  //SEG22 main::@3
  b3:
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  b6:
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2_from_b6
  //SEG26 main::@return
  breturn:
  //SEG27 [11] return  [ ] ( main:2 [ ] )
    rts
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  b1_from_anim:
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  b1_from_b3:
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2_from_b1
  //SEG49 anim::@6
  b6:
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  b2_from_b1:
  b2_from_b6:
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3_from_b2
  //SEG56 anim::@7
  b7:
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  b3_from_b2:
  b3_from_b7:
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1_from_b3
  //SEG65 anim::@8
  b8:
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14_from_b8
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  b4_from_b8:
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15_from_b4
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  b5_from_b4:
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  breturn:
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  b15_from_b4:
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  b5_from_b15:
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  b14_from_b8:
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  b4_from_b14:
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  b1_from_init:
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  b1_from_b1:
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1_from_b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1_from_b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  b2_from_b1:
  //SEG97 init::@2
  b2:
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  b3_from_b2:
  //SEG100 init::@3
  b3:
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
  gen_sprites_from_b3:
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  b4_from_b3:
  //SEG104 init::@4
  b4:
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  gen_sintab_from_b4:
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  b5_from_b4:
  //SEG112 init::@5
  b5:
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  gen_sintab_from_b5:
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  breturn:
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  setFAC_from_gen_sintab:
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  b3_from_gen_sintab:
  //SEG128 gen_sintab::@3
  b3:
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  b4:
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  setFAC_from_b4:
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  b5_from_b4:
  //SEG138 gen_sintab::@5
  b5:
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  setMEMtoFAC_from_b5:
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  b6_from_b5:
  //SEG143 gen_sintab::@6
  b6:
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  b7_from_b6:
  //SEG146 gen_sintab::@7
  b7:
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  setMEMtoFAC_from_b7:
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  b8_from_b7:
  //SEG151 gen_sintab::@8
  b8:
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  setFAC_from_b8:
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  b9_from_b8:
  //SEG156 gen_sintab::@9
  b9:
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  divMEMbyFAC_from_b9:
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  b10_from_b9:
  //SEG161 gen_sintab::@10
  b10:
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  setMEMtoFAC_from_b10:
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  b11_from_b10:
  //SEG166 gen_sintab::@11
  b11:
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  addMEMtoFAC_from_b11:
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  b12_from_b11:
  //SEG171 gen_sintab::@12
  b12:
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  setMEMtoFAC_from_b12:
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  b1_from_b12:
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  b1_from_b22:
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  setFAC_from_b1:
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  b14_from_b1:
  //SEG186 gen_sintab::@14
  b14:
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  mulFACbyMEM_from_b14:
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  b15_from_b14:
  //SEG191 gen_sintab::@15
  b15:
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  setMEMtoFAC_from_b15:
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  b16:
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  setFAC_from_b16:
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  b17_from_b16:
  //SEG202 gen_sintab::@17
  b17:
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  divMEMbyFAC_from_b17:
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  b18_from_b17:
  //SEG207 gen_sintab::@18
  b18:
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  b19_from_b18:
  //SEG210 gen_sintab::@19
  b19:
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  mulFACbyMEM_from_b19:
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  b20_from_b19:
  //SEG215 gen_sintab::@20
  b20:
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  addMEMtoFAC_from_b20:
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  b21_from_b20:
  //SEG220 gen_sintab::@21
  b21:
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  b22:
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1_from_b22
  //SEG230 gen_sintab::@return
  breturn:
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  breturn:
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  prepareMEM_from_addMEMtoFAC:
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  b1:
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  breturn:
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  breturn:
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  prepareMEM_from_mulFACbyMEM:
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  b1:
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  breturn:
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  breturn:
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  prepareMEM_from_divMEMbyFAC:
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  b1:
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  breturn:
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  prepareMEM_from_setFAC:
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  b1:
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  breturn:
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  prepareMEM_from_setMEMtoFAC:
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  b1:
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  breturn:
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  breturn:
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  breturn:
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  b1_from_gen_sprites:
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  b1_from_b3:
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  b3:
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1_from_b3
  //SEG319 gen_sprites::@return
  breturn:
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  b1_from_gen_chargen_sprite:
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  b1_from_b9:
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  b2_from_b1:
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  b2_from_b8:
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  b6_from_b2:
  //SEG351 gen_chargen_sprite::@6
  b6:
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  b3_from_b6:
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  b4_from_b3:
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  b4_from_b5:
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5_from_b4
  //SEG372 gen_chargen_sprite::@7
  b7:
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  b5_from_b7:
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  b5_from_b4:
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4_from_b5
  //SEG388 gen_chargen_sprite::@8
  b8:
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2_from_b8
  //SEG392 gen_chargen_sprite::@9
  b9:
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1_from_b9
  //SEG396 gen_chargen_sprite::@10
  b10:
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  breturn:
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  b1_from_place_sprites:
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  b1_from_b1:
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1_from_b1
  //SEG429 place_sprites::@return
  breturn:
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Replacing label b2_from_b6 with b2
Replacing label b2_from_b1 with b2
Replacing label b3_from_b2 with b3
Replacing label b1_from_b3 with b1
Replacing label b14_from_b8 with b14
Replacing label b15_from_b4 with b15
Replacing label b1_from_b1 with b1
Replacing label b1_from_b1 with b1
Replacing label b1_from_b22 with b1
Replacing label b1_from_b3 with b1
Replacing label b5_from_b4 with b5
Replacing label b4_from_b5 with b4
Replacing label b2_from_b8 with b2
Replacing label b1_from_b9 with b1
Replacing label b1_from_b1 with b1
Removing instruction bbegin:
Removing instruction b39_from_bbegin:
Removing instruction main_from_b39:
Removing instruction bend_from_b39:
Removing instruction b2_from_b6:
Removing instruction b3_from_b2:
Removing instruction b1_from_b3:
Removing instruction b2_from_b1:
Removing instruction b2_from_b6:
Removing instruction b3_from_b2:
Removing instruction b3_from_b7:
Removing instruction b15_from_b4:
Removing instruction b5_from_b15:
Removing instruction b14_from_b8:
Removing instruction b4_from_b14:
Removing instruction b1_from_b1:
Removing instruction b2_from_b1:
Removing instruction b3_from_b2:
Removing instruction gen_sprites_from_b3:
Removing instruction b4_from_b3:
Removing instruction gen_sintab_from_b4:
Removing instruction b5_from_b4:
Removing instruction gen_sintab_from_b5:
Removing instruction b3_from_gen_sintab:
Removing instruction b5_from_b4:
Removing instruction setMEMtoFAC_from_b5:
Removing instruction b6_from_b5:
Removing instruction b7_from_b6:
Removing instruction setMEMtoFAC_from_b7:
Removing instruction b8_from_b7:
Removing instruction setFAC_from_b8:
Removing instruction b9_from_b8:
Removing instruction divMEMbyFAC_from_b9:
Removing instruction b10_from_b9:
Removing instruction setMEMtoFAC_from_b10:
Removing instruction b11_from_b10:
Removing instruction addMEMtoFAC_from_b11:
Removing instruction b12_from_b11:
Removing instruction setMEMtoFAC_from_b12:
Removing instruction b1_from_b22:
Removing instruction b14_from_b1:
Removing instruction mulFACbyMEM_from_b14:
Removing instruction b15_from_b14:
Removing instruction setMEMtoFAC_from_b15:
Removing instruction b17_from_b16:
Removing instruction divMEMbyFAC_from_b17:
Removing instruction b18_from_b17:
Removing instruction b19_from_b18:
Removing instruction mulFACbyMEM_from_b19:
Removing instruction b20_from_b19:
Removing instruction addMEMtoFAC_from_b20:
Removing instruction b21_from_b20:
Removing instruction b1_from_b3:
Removing instruction b1_from_b9:
Removing instruction b2_from_b8:
Removing instruction b6_from_b2:
Removing instruction b3_from_b6:
Removing instruction b4_from_b3:
Removing instruction b4_from_b5:
Removing instruction b5_from_b4:
Removing instruction b1_from_b1:
Succesful ASM optimization Pass5RedundantLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
b39:
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
bend:
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
  init_from_main:
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  b2_from_main:
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  b3:
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  b6:
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  breturn:
  //SEG27 [11] return  [ ] ( main:2 [ ] )
    rts
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  b1_from_anim:
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  b6:
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  b7:
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  b8:
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  b4_from_b8:
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  b5_from_b4:
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  breturn:
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  b1_from_init:
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  b2:
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  b3:
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  b4:
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  b5:
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  breturn:
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  setFAC_from_gen_sintab:
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  b3:
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  b4:
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  setFAC_from_b4:
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  b5:
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  b6:
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  b7:
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  b8:
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  b9:
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  b10:
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  b11:
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  b12:
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  b1_from_b12:
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  setFAC_from_b1:
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  b14:
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  b15:
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  b16:
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  setFAC_from_b16:
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  b17:
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  b18:
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  b19:
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  b20:
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  b21:
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  b22:
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  breturn:
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  breturn:
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  prepareMEM_from_addMEMtoFAC:
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  b1:
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  breturn:
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  breturn:
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  prepareMEM_from_mulFACbyMEM:
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  b1:
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  breturn:
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  breturn:
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  prepareMEM_from_divMEMbyFAC:
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  b1:
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  breturn:
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  prepareMEM_from_setFAC:
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  b1:
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  breturn:
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  prepareMEM_from_setMEMtoFAC:
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  b1:
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  breturn:
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  breturn:
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  breturn:
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  b1_from_gen_sprites:
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  b3:
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  breturn:
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  b1_from_gen_chargen_sprite:
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  b2_from_b1:
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  b6:
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  b7:
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  b5_from_b7:
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  b8:
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  b9:
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  b10:
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  breturn:
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  b1_from_place_sprites:
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  breturn:
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction b39:
Removing instruction bend:
Removing instruction init_from_main:
Removing instruction b2_from_main:
Removing instruction b3:
Removing instruction b6:
Removing instruction breturn:
Removing instruction b1_from_anim:
Removing instruction b6:
Removing instruction b7:
Removing instruction b8:
Removing instruction b4_from_b8:
Removing instruction b5_from_b4:
Removing instruction breturn:
Removing instruction b1_from_init:
Removing instruction b2:
Removing instruction b3:
Removing instruction b4:
Removing instruction b5:
Removing instruction breturn:
Removing instruction setFAC_from_gen_sintab:
Removing instruction b3:
Removing instruction b4:
Removing instruction setFAC_from_b4:
Removing instruction b5:
Removing instruction b6:
Removing instruction b7:
Removing instruction b8:
Removing instruction b9:
Removing instruction b10:
Removing instruction b11:
Removing instruction b12:
Removing instruction b1_from_b12:
Removing instruction setFAC_from_b1:
Removing instruction b14:
Removing instruction b15:
Removing instruction b16:
Removing instruction setFAC_from_b16:
Removing instruction b17:
Removing instruction b18:
Removing instruction b19:
Removing instruction b20:
Removing instruction b21:
Removing instruction b22:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction prepareMEM_from_addMEMtoFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction prepareMEM_from_mulFACbyMEM:
Removing instruction b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction prepareMEM_from_divMEMbyFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction prepareMEM_from_setFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction prepareMEM_from_setMEMtoFAC:
Removing instruction b1:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction breturn:
Removing instruction b1_from_gen_sprites:
Removing instruction b3:
Removing instruction breturn:
Removing instruction b1_from_gen_chargen_sprite:
Removing instruction b2_from_b1:
Removing instruction b6:
Removing instruction b7:
Removing instruction b5_from_b7:
Removing instruction b8:
Removing instruction b9:
Removing instruction b10:
Removing instruction breturn:
Removing instruction b1_from_place_sprites:
Removing instruction breturn:
Succesful ASM optimization Pass5UnusedLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2_from_b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
    rts
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b14
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b15
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Skipping double jump to b2 in bne b2_from_b2
Skipping double jump to b4 in bcc b14
Skipping double jump to b5 in bcc b15
Succesful ASM optimization Pass5DoubleJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
    rts
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing unreachable instruction rts
Succesful ASM optimization Pass5UnreachableCodeElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b2_from_b2:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b3_from_b2
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b3_from_b2:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Relabelling long label b2_from_b2 to b1
Relabelling long label b3_from_b2 to b6
Succesful ASM optimization Pass5RelabelLongLabels
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b1:
    jmp b2
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
    jmp b1
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
    jmp b1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
    jmp b1
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
    jmp b1
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
    jmp b2
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
    jmp b4
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
    jmp b5
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
    jmp b1
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction jmp b2
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b1
Removing instruction jmp b2
Removing instruction jmp b4
Removing instruction jmp b5
Removing instruction jmp b1
Succesful ASM optimization Pass5NextJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b1:
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda xidx
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    lda yidx
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction lda xidx
Removing instruction lda yidx
Removing instruction lda s_gen
Succesful ASM optimization Pass5UnnecesaryLoadElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  b1:
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction b1:
Succesful ASM optimization Pass5RedundantLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  b15:
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  b14:
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction b15:
Removing instruction b14:
Succesful ASM optimization Pass5UnusedLabelElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
    jmp b5
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
    jmp b4
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing unreachable instruction jmp b5
Removing unreachable instruction jmp b4
Succesful ASM optimization Pass5UnreachableCodeElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
    jmp b2
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction jmp b2
Succesful ASM optimization Pass5NextJumpElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction lda s_gen
Succesful ASM optimization Pass5UnnecesaryLoadElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    lda s_gen
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

Removing instruction lda s_gen
Succesful ASM optimization Pass5UnnecesaryLoadElimination
ASSEMBLER
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

FINAL SYMBOL TABLE
(label) @39
(label) @begin
(label) @end
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word) 53280
(byte*) CHARGEN
(const byte*) CHARGEN#0 CHARGEN = ((byte*))(word) 53248
(byte*) PROCPORT
(const byte*) PROCPORT#0 PROCPORT = ((byte*))(byte/signed byte/word/signed word) 1
(byte*) RASTER
(const byte*) RASTER#0 RASTER = ((byte*))(word) 53266
(byte*) SCREEN
(const byte*) SCREEN#0 SCREEN = ((byte*))(word/signed word) 1024
(byte*) SPRITES_COLS
(const byte*) SPRITES_COLS#0 SPRITES_COLS = ((byte*))(word) 53287
(byte*) SPRITES_ENABLE
(const byte*) SPRITES_ENABLE#0 SPRITES_ENABLE = ((byte*))(word) 53269
(byte*) SPRITES_EXPAND_X
(const byte*) SPRITES_EXPAND_X#0 SPRITES_EXPAND_X = ((byte*))(word) 53277
(byte*) SPRITES_EXPAND_Y
(const byte*) SPRITES_EXPAND_Y#0 SPRITES_EXPAND_Y = ((byte*))(word) 53271
(byte*) SPRITES_XPOS
(const byte*) SPRITES_XPOS#0 SPRITES_XPOS = ((byte*))(word) 53248
(byte*) SPRITES_YPOS
(const byte*) SPRITES_YPOS#0 SPRITES_YPOS = ((byte*))(word) 53249
(void()) addMEMtoFAC((byte*) addMEMtoFAC::mem)
(label) addMEMtoFAC::@1
(label) addMEMtoFAC::@return
(byte*) addMEMtoFAC::mem
(byte*) addMEMtoFAC::mem#2 mem zp ZP_PTR_BYTE:9 2.0
(void()) anim()
(byte~) anim::$0 reg byte a 202.0
(byte~) anim::$1 reg byte a 202.0
(label) anim::@1
(label) anim::@14
(label) anim::@15
(label) anim::@2
(label) anim::@3
(label) anim::@4
(label) anim::@5
(label) anim::@6
(label) anim::@7
(label) anim::@8
(label) anim::@return
(byte) anim::j
(byte) anim::j#1 j zp ZP_BYTE:6 151.5
(byte) anim::j#2 j zp ZP_BYTE:6 13.466666666666667
(byte) anim::j2
(byte) anim::j2#1 reg byte y 202.0
(byte) anim::j2#2 reg byte y 67.33333333333333
(byte) anim::j2#3 reg byte y 31.076923076923077
(byte) anim::xidx
(byte) anim::xidx#0 xidx zp ZP_BYTE:4 2.0
(byte) anim::xidx#1 xidx zp ZP_BYTE:4 202.0
(byte) anim::xidx#2 xidx zp ZP_BYTE:4 202.0
(byte) anim::xidx#3 xidx zp ZP_BYTE:4 61.0
(byte) anim::xidx#5 xidx zp ZP_BYTE:4 33.666666666666664
(byte) anim::yidx
(byte) anim::yidx#0 yidx zp ZP_BYTE:5 4.0
(byte) anim::yidx#1 yidx zp ZP_BYTE:5 202.0
(byte) anim::yidx#2 yidx zp ZP_BYTE:5 202.0
(byte) anim::yidx#3 yidx zp ZP_BYTE:5 33.888888888888886
(byte) anim::yidx#6 yidx zp ZP_BYTE:5 60.599999999999994
(void()) divMEMbyFAC((byte*) divMEMbyFAC::mem)
(label) divMEMbyFAC::@1
(label) divMEMbyFAC::@return
(byte*) divMEMbyFAC::mem
(byte*) divMEMbyFAC::mem#2 mem zp ZP_PTR_BYTE:9 2.0
(void()) gen_chargen_sprite((byte) gen_chargen_sprite::ch , (byte*) gen_chargen_sprite::sprite)
(word~) gen_chargen_sprite::$0 $0 zp ZP_WORD:11 4.0
(word~) gen_chargen_sprite::$1 $1 zp ZP_WORD:11 4.0
(byte~) gen_chargen_sprite::$4 reg byte a 2002.0
(byte~) gen_chargen_sprite::$7 reg byte a 20002.0
(label) gen_chargen_sprite::@1
(label) gen_chargen_sprite::@10
(label) gen_chargen_sprite::@2
(label) gen_chargen_sprite::@3
(label) gen_chargen_sprite::@4
(label) gen_chargen_sprite::@5
(label) gen_chargen_sprite::@6
(label) gen_chargen_sprite::@7
(label) gen_chargen_sprite::@8
(label) gen_chargen_sprite::@9
(label) gen_chargen_sprite::@return
(byte) gen_chargen_sprite::b
(byte) gen_chargen_sprite::b#1 reg byte x 15001.5
(byte) gen_chargen_sprite::b#2 reg byte x 2000.2
(byte) gen_chargen_sprite::bits
(byte) gen_chargen_sprite::bits#0 bits zp ZP_BYTE:4 202.0
(byte) gen_chargen_sprite::bits#1 bits zp ZP_BYTE:4 667.3333333333334
(byte) gen_chargen_sprite::bits#2 bits zp ZP_BYTE:4 182.58823529411765
(byte) gen_chargen_sprite::c
(byte) gen_chargen_sprite::c#3 c zp ZP_BYTE:6 769.3076923076923
(byte) gen_chargen_sprite::ch
(byte) gen_chargen_sprite::ch#0 reg byte x 6.5
(byte*) gen_chargen_sprite::chargen
(byte*) gen_chargen_sprite::chargen#0 chargen zp ZP_PTR_BYTE:14 3.678571428571429
(byte) gen_chargen_sprite::s_gen
(byte) gen_chargen_sprite::s_gen#1 s_gen zp ZP_BYTE:13 10001.0
(byte) gen_chargen_sprite::s_gen#3 s_gen zp ZP_BYTE:13 21003.0
(byte) gen_chargen_sprite::s_gen#5 s_gen zp ZP_BYTE:13 400.4
(byte) gen_chargen_sprite::s_gen#6 s_gen zp ZP_BYTE:13 3500.5
(byte) gen_chargen_sprite::s_gen_cnt
(byte) gen_chargen_sprite::s_gen_cnt#1 reg byte y 15001.5
(byte) gen_chargen_sprite::s_gen_cnt#3 reg byte y 7001.0
(byte) gen_chargen_sprite::s_gen_cnt#4 reg byte y 400.4
(byte) gen_chargen_sprite::s_gen_cnt#5 reg byte y 3500.5
(byte*) gen_chargen_sprite::sprite
(byte*) gen_chargen_sprite::sprite#0 sprite zp ZP_PTR_BYTE:9 2.1666666666666665
(byte*) gen_chargen_sprite::sprite#1 sprite zp ZP_PTR_BYTE:9 20002.0
(byte*) gen_chargen_sprite::sprite#10 sprite zp ZP_PTR_BYTE:9 420.59999999999997
(byte*) gen_chargen_sprite::sprite#11 sprite zp ZP_PTR_BYTE:9 102.0
(byte*) gen_chargen_sprite::sprite#2 sprite zp ZP_PTR_BYTE:9 67.33333333333333
(byte*) gen_chargen_sprite::sprite#3 sprite zp ZP_PTR_BYTE:9 7625.875
(byte*) gen_chargen_sprite::sprite#4 sprite zp ZP_PTR_BYTE:9 5184.166666666666
(byte) gen_chargen_sprite::x
(byte) gen_chargen_sprite::x#1 x zp ZP_BYTE:5 1501.5
(byte) gen_chargen_sprite::x#6 x zp ZP_BYTE:5 111.22222222222223
(byte) gen_chargen_sprite::y
(byte) gen_chargen_sprite::y#1 y zp ZP_BYTE:3 151.5
(byte) gen_chargen_sprite::y#2 y zp ZP_BYTE:3 13.173913043478262
(void()) gen_sintab((byte*) gen_sintab::sintab , (byte) gen_sintab::length , (byte) gen_sintab::min , (byte) gen_sintab::max)
(word~) gen_sintab::$0 $0 zp ZP_WORD:11 4.0
(word~) gen_sintab::$13 $13 zp ZP_WORD:11 22.0
(word~) gen_sintab::$17 $17 zp ZP_WORD:11 22.0
(word~) gen_sintab::$23 $23 zp ZP_WORD:11 22.0
(byte~) gen_sintab::$24 reg byte a 22.0
(word~) gen_sintab::$3 $3 zp ZP_WORD:11 4.0
(label) gen_sintab::@1
(label) gen_sintab::@10
(label) gen_sintab::@11
(label) gen_sintab::@12
(label) gen_sintab::@14
(label) gen_sintab::@15
(label) gen_sintab::@16
(label) gen_sintab::@17
(label) gen_sintab::@18
(label) gen_sintab::@19
(label) gen_sintab::@20
(label) gen_sintab::@21
(label) gen_sintab::@22
(label) gen_sintab::@3
(label) gen_sintab::@4
(label) gen_sintab::@5
(label) gen_sintab::@6
(label) gen_sintab::@7
(label) gen_sintab::@8
(label) gen_sintab::@9
(label) gen_sintab::@return
(byte*) gen_sintab::f_2pi
(const byte*) gen_sintab::f_2pi#0 f_2pi = ((byte*))(word) 58085
(byte[]) gen_sintab::f_amp
(const byte[]) gen_sintab::f_amp#0 f_amp = { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
(byte[]) gen_sintab::f_i
(const byte[]) gen_sintab::f_i#0 f_i = { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
(byte[]) gen_sintab::f_min
(const byte[]) gen_sintab::f_min#0 f_min = { (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0, (byte/signed byte/word/signed word) 0 }
(byte) gen_sintab::i
(byte) gen_sintab::i#1 i zp ZP_BYTE:2 16.5
(byte) gen_sintab::i#10 i zp ZP_BYTE:2 1.6923076923076923
(byte) gen_sintab::length
(byte) gen_sintab::length#10 length zp ZP_BYTE:3 0.4074074074074074
(byte) gen_sintab::max
(byte) gen_sintab::max#2 reg byte x 2.0
(byte) gen_sintab::min
(byte) gen_sintab::min#2 min zp ZP_BYTE:2 0.2857142857142857
(byte*) gen_sintab::sintab
(byte*) gen_sintab::sintab#12 sintab zp ZP_PTR_BYTE:7 0.2037037037037037
(void()) gen_sprites()
(byte~) gen_sprites::$0 reg byte a 22.0
(label) gen_sprites::@1
(label) gen_sprites::@3
(label) gen_sprites::@return
(byte[]) gen_sprites::cml
(const byte[]) gen_sprites::cml#0 cml = (string) "camelot"
(byte) gen_sprites::i
(byte) gen_sprites::i#1 i zp ZP_BYTE:2 16.5
(byte) gen_sprites::i#2 i zp ZP_BYTE:2 5.5
(byte*) gen_sprites::spr
(byte*) gen_sprites::spr#1 spr zp ZP_PTR_BYTE:7 7.333333333333333
(byte*) gen_sprites::spr#2 spr zp ZP_PTR_BYTE:7 6.6000000000000005
(word()) getFAC()
(label) getFAC::@return
(word) getFAC::return
(word) getFAC::return#0 return zp ZP_WORD:11 4.333333333333333
(word) getFAC::return#2 return zp ZP_WORD:11 22.0
(word) getFAC::w
(word) getFAC::w#1 w zp ZP_WORD:11 4.0
(void()) init()
(label) init::@1
(label) init::@2
(label) init::@3
(label) init::@4
(label) init::@5
(label) init::@return
(byte*) init::sc
(byte*) init::sc#1 sc zp ZP_PTR_BYTE:7 16.5
(byte*) init::sc#2 sc zp ZP_PTR_BYTE:7 16.5
(void()) main()
(label) main::@2
(label) main::@3
(label) main::@6
(label) main::@return
(byte*) memHi
(const byte*) memHi#0 memHi = ((byte*))(byte/word/signed word) 255
(byte*) memLo
(const byte*) memLo#0 memLo = ((byte*))(byte/word/signed word) 254
(void()) mulFACbyMEM((byte*) mulFACbyMEM::mem)
(label) mulFACbyMEM::@1
(label) mulFACbyMEM::@return
(byte*) mulFACbyMEM::mem
(byte*) mulFACbyMEM::mem#2 mem zp ZP_PTR_BYTE:9 2.0
(void()) place_sprites()
(label) place_sprites::@1
(label) place_sprites::@return
(byte) place_sprites::col
(byte) place_sprites::col#1 col zp ZP_BYTE:4 4.4
(byte) place_sprites::col#2 col zp ZP_BYTE:4 4.714285714285714
(byte) place_sprites::j
(byte) place_sprites::j#1 reg byte y 16.5
(byte) place_sprites::j#2 reg byte y 4.4
(byte) place_sprites::j2
(byte) place_sprites::j2#1 reg byte x 22.0
(byte) place_sprites::j2#2 reg byte x 7.333333333333333
(byte) place_sprites::j2#3 reg byte x 5.5
(byte) place_sprites::spr_id
(byte) place_sprites::spr_id#1 spr_id zp ZP_BYTE:2 2.2
(byte) place_sprites::spr_id#2 spr_id zp ZP_BYTE:2 16.5
(byte) place_sprites::spr_x
(byte) place_sprites::spr_x#1 spr_x zp ZP_BYTE:3 3.6666666666666665
(byte) place_sprites::spr_x#2 spr_x zp ZP_BYTE:3 5.5
(byte*) place_sprites::sprites_ptr
(const byte*) place_sprites::sprites_ptr#0 sprites_ptr = (const byte*) SCREEN#0+(word/signed word) 1016
(void()) prepareMEM((byte*) prepareMEM::mem)
(byte~) prepareMEM::$0 reg byte a 4.0
(byte~) prepareMEM::$1 reg byte a 4.0
(label) prepareMEM::@return
(byte*) prepareMEM::mem
(byte*) prepareMEM::mem#0 mem zp ZP_PTR_BYTE:9 4.0
(byte*) prepareMEM::mem#1 mem zp ZP_PTR_BYTE:9 4.0
(byte*) prepareMEM::mem#2 mem zp ZP_PTR_BYTE:9 4.0
(byte*) prepareMEM::mem#3 mem zp ZP_PTR_BYTE:9 4.0
(byte*) prepareMEM::mem#4 mem zp ZP_PTR_BYTE:9 4.0
(byte*) prepareMEM::mem#5 mem zp ZP_PTR_BYTE:9 4.666666666666666
(void()) setARGtoFAC()
(label) setARGtoFAC::@return
(void()) setFAC((word) setFAC::w)
(byte*~) setFAC::$0 $0 zp ZP_PTR_BYTE:9 4.0
(label) setFAC::@1
(label) setFAC::@return
(word) setFAC::w
(word) setFAC::w#0 w zp ZP_WORD:11 4.0
(word) setFAC::w#1 w zp ZP_WORD:11 4.0
(word) setFAC::w#3 w zp ZP_WORD:11 22.0
(word) setFAC::w#4 w zp ZP_WORD:11 22.0
(word) setFAC::w#5 w zp ZP_WORD:11 28.0
(void()) setMEMtoFAC((byte*) setMEMtoFAC::mem)
(label) setMEMtoFAC::@1
(label) setMEMtoFAC::@return
(byte*) setMEMtoFAC::mem
(byte*) setMEMtoFAC::mem#5 mem zp ZP_PTR_BYTE:9 2.0
(void()) sinFAC()
(label) sinFAC::@return
(byte) sin_idx_x
(byte) sin_idx_x#11 sin_idx_x zp ZP_BYTE:2 1.4444444444444446
(byte) sin_idx_x#13 sin_idx_x zp ZP_BYTE:2 0.6521739130434783
(byte) sin_idx_x#3 sin_idx_x zp ZP_BYTE:2 2.0
(byte) sin_idx_y
(byte) sin_idx_y#11 sin_idx_y zp ZP_BYTE:3 2.6
(byte) sin_idx_y#13 sin_idx_y zp ZP_BYTE:3 0.5555555555555556
(byte) sin_idx_y#3 sin_idx_y zp ZP_BYTE:3 2.0
(byte) sinlen_x
(const byte) sinlen_x#0 sinlen_x = (byte/word/signed word) 221
(byte) sinlen_y
(const byte) sinlen_y#0 sinlen_y = (byte/word/signed word) 197
(byte[]) sintab_x
(const byte[]) sintab_x#0 sintab_x = ((byte*))(word/signed word) 4096
(byte[]) sintab_y
(const byte[]) sintab_y#0 sintab_y = ((byte*))(word/signed word) 4352
(byte[]) sprites
(const byte[]) sprites#0 sprites = ((byte*))(word/signed word) 8192
(void()) subFACfromARG()
(label) subFACfromARG::@return

zp ZP_BYTE:2 [ sin_idx_x#13 sin_idx_x#11 sin_idx_x#3 gen_sintab::min#2 gen_sintab::i#10 gen_sintab::i#1 gen_sprites::i#2 gen_sprites::i#1 place_sprites::spr_id#2 place_sprites::spr_id#1 ]
zp ZP_BYTE:3 [ sin_idx_y#13 sin_idx_y#11 sin_idx_y#3 gen_sintab::length#10 gen_chargen_sprite::y#2 gen_chargen_sprite::y#1 place_sprites::spr_x#2 place_sprites::spr_x#1 ]
zp ZP_BYTE:4 [ anim::xidx#3 anim::xidx#0 anim::xidx#5 anim::xidx#1 anim::xidx#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::bits#0 gen_chargen_sprite::bits#1 place_sprites::col#2 place_sprites::col#1 ]
reg byte y [ anim::j2#3 anim::j2#2 ]
zp ZP_BYTE:5 [ anim::yidx#3 anim::yidx#0 anim::yidx#6 anim::yidx#1 anim::yidx#2 gen_chargen_sprite::x#6 gen_chargen_sprite::x#1 ]
zp ZP_BYTE:6 [ anim::j#2 anim::j#1 gen_chargen_sprite::c#3 ]
zp ZP_PTR_BYTE:7 [ init::sc#2 init::sc#1 gen_sintab::sintab#12 gen_sprites::spr#2 gen_sprites::spr#1 ]
reg byte x [ gen_sintab::max#2 ]
zp ZP_PTR_BYTE:9 [ addMEMtoFAC::mem#2 prepareMEM::mem#5 prepareMEM::mem#2 prepareMEM::mem#3 prepareMEM::mem#4 prepareMEM::mem#0 prepareMEM::mem#1 mulFACbyMEM::mem#2 divMEMbyFAC::mem#2 setMEMtoFAC::mem#5 gen_chargen_sprite::sprite#3 gen_chargen_sprite::sprite#10 gen_chargen_sprite::sprite#11 gen_chargen_sprite::sprite#0 gen_chargen_sprite::sprite#2 gen_chargen_sprite::sprite#4 gen_chargen_sprite::sprite#1 setFAC::$0 ]
zp ZP_WORD:11 [ setFAC::w#5 setFAC::w#0 setFAC::w#3 setFAC::w#4 setFAC::w#1 gen_sintab::$0 gen_sintab::$3 gen_sintab::$13 gen_sintab::$17 getFAC::return#2 gen_sintab::$23 getFAC::w#1 getFAC::return#0 gen_chargen_sprite::$0 gen_chargen_sprite::$1 ]
zp ZP_BYTE:13 [ gen_chargen_sprite::s_gen#3 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen#1 ]
reg byte y [ gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::s_gen_cnt#1 ]
reg byte x [ gen_chargen_sprite::b#2 gen_chargen_sprite::b#1 ]
reg byte y [ place_sprites::j#2 place_sprites::j#1 ]
reg byte x [ place_sprites::j2#3 place_sprites::j2#2 ]
reg byte a [ anim::$0 ]
reg byte a [ anim::$1 ]
reg byte y [ anim::j2#1 ]
reg byte a [ gen_sintab::$24 ]
reg byte a [ prepareMEM::$0 ]
reg byte a [ prepareMEM::$1 ]
reg byte a [ gen_sprites::$0 ]
reg byte x [ gen_chargen_sprite::ch#0 ]
zp ZP_PTR_BYTE:14 [ gen_chargen_sprite::chargen#0 ]
reg byte a [ gen_chargen_sprite::$4 ]
reg byte a [ gen_chargen_sprite::$7 ]
reg byte x [ place_sprites::j2#1 ]

FINAL CODE
//SEG0 Basic Upstart
.pc = $801 "Basic"
:BasicUpstart(main)
.pc = $80d "Program"
//SEG1 Global Constants & labels
  .const memLo = $fe
  .const memHi = $ff
  .const PROCPORT = 1
  .const CHARGEN = $d000
  .const SCREEN = $400
  .const RASTER = $d012
  .const BORDERCOL = $d020
  .const SPRITES_XPOS = $d000
  .const SPRITES_YPOS = $d001
  .const SPRITES_ENABLE = $d015
  .const SPRITES_EXPAND_Y = $d017
  .const SPRITES_EXPAND_X = $d01d
  .const SPRITES_COLS = $d027
  .const sinlen_x = $dd
  .const sintab_x = $1000
  .const sinlen_y = $c5
  .const sintab_y = $1100
  .const sprites = $2000
  .label sin_idx_x = 2
  .label sin_idx_y = 3
//SEG2 @begin
//SEG3 [1] phi from @begin to @39 [phi:@begin->@39]
//SEG4 @39
//SEG5 [2] call main param-assignment [ ] ( )
//SEG6 [4] phi from @39 to main [phi:@39->main]
  jsr main
//SEG7 [3] phi from @39 to @end [phi:@39->@end]
//SEG8 @end
//SEG9 main
main: {
  //SEG10 [5] call init param-assignment [ ] ( main:2 [ ] )
  //SEG11 [42] phi from main to init [phi:main->init]
    jsr init
  //SEG12 [6] phi from main to main::@2 [phi:main->main::@2]
  //SEG13 [6] phi (byte) sin_idx_y#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG14 [6] phi (byte) sin_idx_x#13 = (byte/signed byte/word/signed word) 0 [phi:main->main::@2#1] -- zpby1=coby1 
    sta sin_idx_x
  //SEG15 [6] phi from main::@2 to main::@2 [phi:main::@2->main::@2]
  //SEG16 [6] phi from main::@6 to main::@2 [phi:main::@6->main::@2]
  //SEG17 [6] phi (byte) sin_idx_y#13 = (byte) sin_idx_y#11 [phi:main::@6->main::@2#0] -- register_copy 
  //SEG18 [6] phi (byte) sin_idx_x#13 = (byte) sin_idx_x#11 [phi:main::@6->main::@2#1] -- register_copy 
  //SEG19 main::@2
  b2:
  //SEG20 [7] if(*((const byte*) RASTER#0)!=(byte/word/signed word) 255) goto main::@2 [ sin_idx_x#13 sin_idx_y#13 ] ( main:2 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1_neq_coby2_then_la1 
    lda RASTER
    cmp #$ff
    bne b2
  //SEG21 [8] phi from main::@2 to main::@3 [phi:main::@2->main::@3]
  //SEG22 main::@3
  //SEG23 [9] call anim param-assignment [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] )
    jsr anim
  //SEG24 main::@6
  //SEG25 [10] if(true) goto main::@2 [ sin_idx_x#11 sin_idx_y#11 ] ( main:2 [ sin_idx_x#11 sin_idx_y#11 ] ) -- true_then_la1 
    jmp b2
  //SEG26 main::@return
  //SEG27 [11] return  [ ] ( main:2 [ ] )
}
//SEG28 anim
anim: {
    .label xidx = 4
    .label yidx = 5
    .label j = 6
  //SEG29 [12] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ sin_idx_x#13 sin_idx_y#13 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG30 [13] (byte) anim::xidx#0 ← (byte) sin_idx_x#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_x
    sta xidx
  //SEG31 [14] (byte) anim::yidx#0 ← (byte) sin_idx_y#13 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#0 anim::yidx#0 ] ) -- zpby1=zpby2 
    lda sin_idx_y
    sta yidx
  //SEG32 [15] phi from anim to anim::@1 [phi:anim->anim::@1]
  //SEG33 [15] phi (byte) anim::j#2 = (byte/signed byte/word/signed word) 0 [phi:anim->anim::@1#0] -- zpby1=coby1 
    lda #0
    sta j
  //SEG34 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#0 [phi:anim->anim::@1#1] -- register_copy 
  //SEG35 [15] phi (byte) anim::j2#3 = (byte/signed byte/word/signed word) 12 [phi:anim->anim::@1#2] -- yby=coby1 
    ldy #$c
  //SEG36 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#0 [phi:anim->anim::@1#3] -- register_copy 
  //SEG37 [15] phi from anim::@3 to anim::@1 [phi:anim::@3->anim::@1]
  //SEG38 [15] phi (byte) anim::j#2 = (byte) anim::j#1 [phi:anim::@3->anim::@1#0] -- register_copy 
  //SEG39 [15] phi (byte) anim::yidx#3 = (byte) anim::yidx#6 [phi:anim::@3->anim::@1#1] -- register_copy 
  //SEG40 [15] phi (byte) anim::j2#3 = (byte) anim::j2#2 [phi:anim::@3->anim::@1#2] -- register_copy 
  //SEG41 [15] phi (byte) anim::xidx#3 = (byte) anim::xidx#5 [phi:anim::@3->anim::@1#3] -- register_copy 
  //SEG42 anim::@1
  b1:
  //SEG43 [16] (byte~) anim::$0 ← (const byte[]) sintab_x#0 *idx (byte) anim::xidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx xidx
    lda sintab_x,x
  //SEG44 [17] *((const byte*) SPRITES_XPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$0 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_XPOS,y
  //SEG45 [18] (byte~) anim::$1 ← (const byte[]) sintab_y#0 *idx (byte) anim::yidx#3 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 anim::$1 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx yidx
    lda sintab_y,x
  //SEG46 [19] *((const byte*) SPRITES_YPOS#0 + (byte) anim::j2#3) ← (byte~) anim::$1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#3 anim::j2#3 anim::yidx#3 anim::j#2 ] ) -- cowo1_derefidx_yby=aby 
    sta SPRITES_YPOS,y
  //SEG47 [20] (byte) anim::xidx#1 ← (byte) anim::xidx#3 + (byte/signed byte/word/signed word) 10 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda xidx
    clc
    adc #$a
    sta xidx
  //SEG48 [21] if((byte) anim::xidx#1<(const byte) sinlen_x#0) goto anim::@2 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_x
    bcc b2
  //SEG49 anim::@6
  //SEG50 [22] (byte) anim::xidx#2 ← (byte) anim::xidx#1 - (const byte) sinlen_x#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::yidx#3 anim::j#2 anim::xidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_x
    sta xidx
  //SEG51 [23] phi from anim::@1 anim::@6 to anim::@2 [phi:anim::@1/anim::@6->anim::@2]
  //SEG52 [23] phi (byte) anim::xidx#5 = (byte) anim::xidx#1 [phi:anim::@1/anim::@6->anim::@2#0] -- register_copy 
  //SEG53 anim::@2
  b2:
  //SEG54 [24] (byte) anim::yidx#1 ← (byte) anim::yidx#3 + (byte/signed byte/word/signed word) 8 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda yidx
    clc
    adc #8
    sta yidx
  //SEG55 [25] if((byte) anim::yidx#1<(const byte) sinlen_y#0) goto anim::@3 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#1 ] ) -- zpby1_lt_coby1_then_la1 
    cmp #sinlen_y
    bcc b3
  //SEG56 anim::@7
  //SEG57 [26] (byte) anim::yidx#2 ← (byte) anim::yidx#1 - (const byte) sinlen_y#0 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j2#3 anim::j#2 anim::xidx#5 anim::yidx#2 ] ) -- zpby1=zpby1_minus_coby1 
    sec
    sbc #sinlen_y
    sta yidx
  //SEG58 [27] phi from anim::@2 anim::@7 to anim::@3 [phi:anim::@2/anim::@7->anim::@3]
  //SEG59 [27] phi (byte) anim::yidx#6 = (byte) anim::yidx#1 [phi:anim::@2/anim::@7->anim::@3#0] -- register_copy 
  //SEG60 anim::@3
  b3:
  //SEG61 [28] (byte) anim::j2#1 ← -- (byte) anim::j2#3 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::yidx#6 anim::j2#1 ] ) -- yby=_dec_yby 
    dey
  //SEG62 [29] (byte) anim::j2#2 ← -- (byte) anim::j2#1 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::j#2 anim::xidx#5 anim::j2#2 anim::yidx#6 ] ) -- yby=_dec_yby 
    dey
  //SEG63 [30] (byte) anim::j#1 ← ++ (byte) anim::j#2 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1=_inc_zpby1 
    inc j
  //SEG64 [31] if((byte) anim::j#1!=(byte/signed byte/word/signed word) 7) goto anim::@1 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ( main:2::anim:9 [ sin_idx_x#13 sin_idx_y#13 anim::xidx#5 anim::j2#2 anim::yidx#6 anim::j#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda j
    cmp #7
    bne b1
  //SEG65 anim::@8
  //SEG66 [32] (byte) sin_idx_x#3 ← ++ (byte) sin_idx_x#13 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_x
  //SEG67 [33] if((byte) sin_idx_x#3<(const byte) sinlen_x#0) goto anim::@14 [ sin_idx_y#13 sin_idx_x#3 ] ( main:2::anim:9 [ sin_idx_y#13 sin_idx_x#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_x
    cmp #sinlen_x
    bcc b4
  //SEG68 [34] phi from anim::@8 to anim::@4 [phi:anim::@8->anim::@4]
  //SEG69 [34] phi (byte) sin_idx_x#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@8->anim::@4#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_x
  //SEG70 anim::@4
  b4:
  //SEG71 [35] (byte) sin_idx_y#3 ← ++ (byte) sin_idx_y#13 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1=_inc_zpby1 
    inc sin_idx_y
  //SEG72 [36] if((byte) sin_idx_y#3<(const byte) sinlen_y#0) goto anim::@15 [ sin_idx_x#11 sin_idx_y#3 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#3 ] ) -- zpby1_lt_coby1_then_la1 
    lda sin_idx_y
    cmp #sinlen_y
    bcc b5
  //SEG73 [37] phi from anim::@4 to anim::@5 [phi:anim::@4->anim::@5]
  //SEG74 [37] phi (byte) sin_idx_y#11 = (byte/signed byte/word/signed word) 0 [phi:anim::@4->anim::@5#0] -- zpby1=coby1 
    lda #0
    sta sin_idx_y
  //SEG75 anim::@5
  b5:
  //SEG76 [38] *((const byte*) BORDERCOL#0) ← -- *((const byte*) BORDERCOL#0) [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] ) -- _deref_cowo1=_dec__deref_cowo1 
    dec BORDERCOL
  //SEG77 anim::@return
  //SEG78 [39] return  [ sin_idx_x#11 sin_idx_y#11 ] ( main:2::anim:9 [ sin_idx_x#11 sin_idx_y#11 ] )
    rts
  //SEG79 [40] phi from anim::@4 to anim::@15 [phi:anim::@4->anim::@15]
  //SEG80 anim::@15
  //SEG81 [37] phi from anim::@15 to anim::@5 [phi:anim::@15->anim::@5]
  //SEG82 [37] phi (byte) sin_idx_y#11 = (byte) sin_idx_y#3 [phi:anim::@15->anim::@5#0] -- register_copy 
  //SEG83 [41] phi from anim::@8 to anim::@14 [phi:anim::@8->anim::@14]
  //SEG84 anim::@14
  //SEG85 [34] phi from anim::@14 to anim::@4 [phi:anim::@14->anim::@4]
  //SEG86 [34] phi (byte) sin_idx_x#11 = (byte) sin_idx_x#3 [phi:anim::@14->anim::@4#0] -- register_copy 
}
//SEG87 init
init: {
    .label sc = 7
  //SEG88 [43] phi from init to init::@1 [phi:init->init::@1]
  //SEG89 [43] phi (byte*) init::sc#2 = (const byte*) SCREEN#0 [phi:init->init::@1#0] -- zpptrby1=cowo1 
    lda #<SCREEN
    sta sc
    lda #>SCREEN
    sta sc+1
  //SEG90 [43] phi from init::@1 to init::@1 [phi:init::@1->init::@1]
  //SEG91 [43] phi (byte*) init::sc#2 = (byte*) init::sc#1 [phi:init::@1->init::@1#0] -- register_copy 
  //SEG92 init::@1
  b1:
  //SEG93 [44] *((byte*) init::sc#2) ← (byte) ' ' [ init::sc#2 ] ( main:2::init:5 [ init::sc#2 ] ) -- _deref_zpptrby1=coby1 
    ldy #0
    lda #' '
    sta (sc),y
  //SEG94 [45] (byte*) init::sc#1 ← ++ (byte*) init::sc#2 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sc
    bne !+
    inc sc+1
  !:
  //SEG95 [46] if((byte*) init::sc#1<(const byte*) SCREEN#0+(word/signed word) 1000) goto init::@1 [ init::sc#1 ] ( main:2::init:5 [ init::sc#1 ] ) -- zpptrby1_lt_cowo1_then_la1 
    lda sc+1
    cmp #>SCREEN+$3e8
    bcc b1
    bne !+
    lda sc
    cmp #<SCREEN+$3e8
    bcc b1
  !:
  //SEG96 [47] phi from init::@1 to init::@2 [phi:init::@1->init::@2]
  //SEG97 init::@2
  //SEG98 [48] call place_sprites param-assignment [ ] ( main:2::init:5 [ ] )
    jsr place_sprites
  //SEG99 [49] phi from init::@2 to init::@3 [phi:init::@2->init::@3]
  //SEG100 init::@3
  //SEG101 [50] call gen_sprites param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG102 [153] phi from init::@3 to gen_sprites [phi:init::@3->gen_sprites]
    jsr gen_sprites
  //SEG103 [51] phi from init::@3 to init::@4 [phi:init::@3->init::@4]
  //SEG104 init::@4
  //SEG105 [52] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG106 [56] phi from init::@4 to gen_sintab [phi:init::@4->gen_sintab]
  //SEG107 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_x#0 [phi:init::@4->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_x
    sta gen_sintab.sintab
    lda #>sintab_x
    sta gen_sintab.sintab+1
  //SEG108 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_x#0 [phi:init::@4->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_x
    sta gen_sintab.length
  //SEG109 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 16 [phi:init::@4->gen_sintab#2] -- zpby1=coby1 
    lda #$10
    sta gen_sintab.min
  //SEG110 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 255 [phi:init::@4->gen_sintab#3] -- xby=coby1 
    ldx #$ff
    jsr gen_sintab
  //SEG111 [53] phi from init::@4 to init::@5 [phi:init::@4->init::@5]
  //SEG112 init::@5
  //SEG113 [54] call gen_sintab param-assignment [ ] ( main:2::init:5 [ ] )
  //SEG114 [56] phi from init::@5 to gen_sintab [phi:init::@5->gen_sintab]
  //SEG115 [56] phi (byte*) gen_sintab::sintab#12 = (const byte[]) sintab_y#0 [phi:init::@5->gen_sintab#0] -- zpptrby1=cowo1 
    lda #<sintab_y
    sta gen_sintab.sintab
    lda #>sintab_y
    sta gen_sintab.sintab+1
  //SEG116 [56] phi (byte) gen_sintab::length#10 = (const byte) sinlen_y#0 [phi:init::@5->gen_sintab#1] -- zpby1=coby1 
    lda #sinlen_y
    sta gen_sintab.length
  //SEG117 [56] phi (byte) gen_sintab::min#2 = (byte/signed byte/word/signed word) 48 [phi:init::@5->gen_sintab#2] -- zpby1=coby1 
    lda #$30
    sta gen_sintab.min
  //SEG118 [56] phi (byte) gen_sintab::max#2 = (byte/word/signed word) 208 [phi:init::@5->gen_sintab#3] -- xby=coby1 
    ldx #$d0
    jsr gen_sintab
  //SEG119 init::@return
  //SEG120 [55] return  [ ] ( main:2::init:5 [ ] )
    rts
}
//SEG121 gen_sintab
gen_sintab: {
    .const f_2pi = $e2e5
    .label _0 = $b
    .label _3 = $b
    .label _13 = $b
    .label _17 = $b
    .label _23 = $b
    .label i = 2
    .label min = 2
    .label length = 3
    .label sintab = 7
  //SEG122 [57] (word~) gen_sintab::$0 ← ((word)) (byte) gen_sintab::max#2 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG123 [58] (word) setFAC::w#0 ← (word~) gen_sintab::$0 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#0 ] )
    // (word) setFAC::w#0 = (word~) gen_sintab::$0  // register copy zp ZP_WORD:11
  //SEG124 [59] call setFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG125 [138] phi from gen_sintab to setFAC [phi:gen_sintab->setFAC]
  //SEG126 [138] phi (word) setFAC::w#5 = (word) setFAC::w#0 [phi:gen_sintab->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG127 [60] phi from gen_sintab to gen_sintab::@3 [phi:gen_sintab->gen_sintab::@3]
  //SEG128 gen_sintab::@3
  //SEG129 [61] call setARGtoFAC param-assignment [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr setARGtoFAC
  //SEG130 gen_sintab::@4
  //SEG131 asm { lda#0ldx#0ldy#0 }
    lda #0
    tax
    tay
  //SEG132 [63] (word~) gen_sintab::$3 ← ((word)) (byte) gen_sintab::min#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::$3 ] ) -- zpwo1=_word_zpby1 
    lda min
    sta _3
    txa
    sta _3+1
  //SEG133 [64] (word) setFAC::w#1 ← (word~) gen_sintab::$3 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::w#1 ] )
    // (word) setFAC::w#1 = (word~) gen_sintab::$3  // register copy zp ZP_WORD:11
  //SEG134 [65] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG135 [138] phi from gen_sintab::@4 to setFAC [phi:gen_sintab::@4->setFAC]
  //SEG136 [138] phi (word) setFAC::w#5 = (word) setFAC::w#1 [phi:gen_sintab::@4->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG137 [66] phi from gen_sintab::@4 to gen_sintab::@5 [phi:gen_sintab::@4->gen_sintab::@5]
  //SEG138 gen_sintab::@5
  //SEG139 [67] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG140 [144] phi from gen_sintab::@5 to setMEMtoFAC [phi:gen_sintab::@5->setMEMtoFAC]
  //SEG141 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@5->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG142 [68] phi from gen_sintab::@5 to gen_sintab::@6 [phi:gen_sintab::@5->gen_sintab::@6]
  //SEG143 gen_sintab::@6
  //SEG144 [69] call subFACfromARG param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    jsr subFACfromARG
  //SEG145 [70] phi from gen_sintab::@6 to gen_sintab::@7 [phi:gen_sintab::@6->gen_sintab::@7]
  //SEG146 gen_sintab::@7
  //SEG147 [71] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG148 [144] phi from gen_sintab::@7 to setMEMtoFAC [phi:gen_sintab::@7->setMEMtoFAC]
  //SEG149 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@7->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG150 [72] phi from gen_sintab::@7 to gen_sintab::@8 [phi:gen_sintab::@7->gen_sintab::@8]
  //SEG151 gen_sintab::@8
  //SEG152 [73] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG153 [138] phi from gen_sintab::@8 to setFAC [phi:gen_sintab::@8->setFAC]
  //SEG154 [138] phi (word) setFAC::w#5 = (byte/signed byte/word/signed word) 2 [phi:gen_sintab::@8->setFAC#0] -- zpwo1=coby1 
    lda #2
    sta setFAC.w
    lda #0
    sta setFAC.w+1
    jsr setFAC
  //SEG155 [74] phi from gen_sintab::@8 to gen_sintab::@9 [phi:gen_sintab::@8->gen_sintab::@9]
  //SEG156 gen_sintab::@9
  //SEG157 [75] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG158 [133] phi from gen_sintab::@9 to divMEMbyFAC [phi:gen_sintab::@9->divMEMbyFAC]
  //SEG159 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@9->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta divMEMbyFAC.mem
    lda #>f_amp
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG160 [76] phi from gen_sintab::@9 to gen_sintab::@10 [phi:gen_sintab::@9->gen_sintab::@10]
  //SEG161 gen_sintab::@10
  //SEG162 [77] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG163 [144] phi from gen_sintab::@10 to setMEMtoFAC [phi:gen_sintab::@10->setMEMtoFAC]
  //SEG164 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@10->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta setMEMtoFAC.mem
    lda #>f_amp
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG165 [78] phi from gen_sintab::@10 to gen_sintab::@11 [phi:gen_sintab::@10->gen_sintab::@11]
  //SEG166 gen_sintab::@11
  //SEG167 [79] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG168 [115] phi from gen_sintab::@11 to addMEMtoFAC [phi:gen_sintab::@11->addMEMtoFAC]
  //SEG169 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@11->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG170 [80] phi from gen_sintab::@11 to gen_sintab::@12 [phi:gen_sintab::@11->gen_sintab::@12]
  //SEG171 gen_sintab::@12
  //SEG172 [81] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
  //SEG173 [144] phi from gen_sintab::@12 to setMEMtoFAC [phi:gen_sintab::@12->setMEMtoFAC]
  //SEG174 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@12->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta setMEMtoFAC.mem
    lda #>f_min
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG175 [82] phi from gen_sintab::@12 to gen_sintab::@1 [phi:gen_sintab::@12->gen_sintab::@1]
  //SEG176 [82] phi (byte) gen_sintab::i#10 = (byte/signed byte/word/signed word) 0 [phi:gen_sintab::@12->gen_sintab::@1#0] -- zpby1=coby1 
    lda #0
    sta i
  //SEG177 [82] phi from gen_sintab::@22 to gen_sintab::@1 [phi:gen_sintab::@22->gen_sintab::@1]
  //SEG178 [82] phi (byte) gen_sintab::i#10 = (byte) gen_sintab::i#1 [phi:gen_sintab::@22->gen_sintab::@1#0] -- register_copy 
  //SEG179 gen_sintab::@1
  b1:
  //SEG180 [83] (word~) gen_sintab::$13 ← ((word)) (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$13 ] ) -- zpwo1=_word_zpby1 
    lda i
    sta _13
    lda #0
    sta _13+1
  //SEG181 [84] (word) setFAC::w#3 ← (word~) gen_sintab::$13 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#3 ] )
    // (word) setFAC::w#3 = (word~) gen_sintab::$13  // register copy zp ZP_WORD:11
  //SEG182 [85] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG183 [138] phi from gen_sintab::@1 to setFAC [phi:gen_sintab::@1->setFAC]
  //SEG184 [138] phi (word) setFAC::w#5 = (word) setFAC::w#3 [phi:gen_sintab::@1->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG185 [86] phi from gen_sintab::@1 to gen_sintab::@14 [phi:gen_sintab::@1->gen_sintab::@14]
  //SEG186 gen_sintab::@14
  //SEG187 [87] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG188 [126] phi from gen_sintab::@14 to mulFACbyMEM [phi:gen_sintab::@14->mulFACbyMEM]
  //SEG189 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte*) gen_sintab::f_2pi#0 [phi:gen_sintab::@14->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_2pi
    sta mulFACbyMEM.mem
    lda #>f_2pi
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG190 [88] phi from gen_sintab::@14 to gen_sintab::@15 [phi:gen_sintab::@14->gen_sintab::@15]
  //SEG191 gen_sintab::@15
  //SEG192 [89] call setMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG193 [144] phi from gen_sintab::@15 to setMEMtoFAC [phi:gen_sintab::@15->setMEMtoFAC]
  //SEG194 [144] phi (byte*) setMEMtoFAC::mem#5 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@15->setMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta setMEMtoFAC.mem
    lda #>f_i
    sta setMEMtoFAC.mem+1
    jsr setMEMtoFAC
  //SEG195 gen_sintab::@16
  //SEG196 [90] (word~) gen_sintab::$17 ← ((word)) (byte) gen_sintab::length#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$17 ] ) -- zpwo1=_word_zpby1 
    lda length
    sta _17
    lda #0
    sta _17+1
  //SEG197 [91] (word) setFAC::w#4 ← (word~) gen_sintab::$17 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::w#4 ] )
    // (word) setFAC::w#4 = (word~) gen_sintab::$17  // register copy zp ZP_WORD:11
  //SEG198 [92] call setFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG199 [138] phi from gen_sintab::@16 to setFAC [phi:gen_sintab::@16->setFAC]
  //SEG200 [138] phi (word) setFAC::w#5 = (word) setFAC::w#4 [phi:gen_sintab::@16->setFAC#0] -- register_copy 
    jsr setFAC
  //SEG201 [93] phi from gen_sintab::@16 to gen_sintab::@17 [phi:gen_sintab::@16->gen_sintab::@17]
  //SEG202 gen_sintab::@17
  //SEG203 [94] call divMEMbyFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG204 [133] phi from gen_sintab::@17 to divMEMbyFAC [phi:gen_sintab::@17->divMEMbyFAC]
  //SEG205 [133] phi (byte*) divMEMbyFAC::mem#2 = (const byte[]) gen_sintab::f_i#0 [phi:gen_sintab::@17->divMEMbyFAC#0] -- zpptrby1=cowo1 
    lda #<f_i
    sta divMEMbyFAC.mem
    lda #>f_i
    sta divMEMbyFAC.mem+1
    jsr divMEMbyFAC
  //SEG206 [95] phi from gen_sintab::@17 to gen_sintab::@18 [phi:gen_sintab::@17->gen_sintab::@18]
  //SEG207 gen_sintab::@18
  //SEG208 [96] call sinFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    jsr sinFAC
  //SEG209 [97] phi from gen_sintab::@18 to gen_sintab::@19 [phi:gen_sintab::@18->gen_sintab::@19]
  //SEG210 gen_sintab::@19
  //SEG211 [98] call mulFACbyMEM param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG212 [126] phi from gen_sintab::@19 to mulFACbyMEM [phi:gen_sintab::@19->mulFACbyMEM]
  //SEG213 [126] phi (byte*) mulFACbyMEM::mem#2 = (const byte[]) gen_sintab::f_amp#0 [phi:gen_sintab::@19->mulFACbyMEM#0] -- zpptrby1=cowo1 
    lda #<f_amp
    sta mulFACbyMEM.mem
    lda #>f_amp
    sta mulFACbyMEM.mem+1
    jsr mulFACbyMEM
  //SEG214 [99] phi from gen_sintab::@19 to gen_sintab::@20 [phi:gen_sintab::@19->gen_sintab::@20]
  //SEG215 gen_sintab::@20
  //SEG216 [100] call addMEMtoFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG217 [115] phi from gen_sintab::@20 to addMEMtoFAC [phi:gen_sintab::@20->addMEMtoFAC]
  //SEG218 [115] phi (byte*) addMEMtoFAC::mem#2 = (const byte[]) gen_sintab::f_min#0 [phi:gen_sintab::@20->addMEMtoFAC#0] -- zpptrby1=cowo1 
    lda #<f_min
    sta addMEMtoFAC.mem
    lda #>f_min
    sta addMEMtoFAC.mem+1
    jsr addMEMtoFAC
  //SEG219 [101] phi from gen_sintab::@20 to gen_sintab::@21 [phi:gen_sintab::@20->gen_sintab::@21]
  //SEG220 gen_sintab::@21
  //SEG221 [102] call getFAC param-assignment [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    jsr getFAC
  //SEG222 [103] (word) getFAC::return#2 ← (word) getFAC::return#0 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#2 ] )
    // (word) getFAC::return#2 = (word) getFAC::return#0  // register copy zp ZP_WORD:11
  //SEG223 gen_sintab::@22
  //SEG224 [104] (word~) gen_sintab::$23 ← (word) getFAC::return#2 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$23 ] )
    // (word~) gen_sintab::$23 = (word) getFAC::return#2  // register copy zp ZP_WORD:11
  //SEG225 [105] (byte~) gen_sintab::$24 ← ((byte)) (word~) gen_sintab::$23 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 gen_sintab::$24 ] ) -- aby=_byte_zpwo1 
    lda _23
  //SEG226 [106] *((byte*) gen_sintab::sintab#12 + (byte) gen_sintab::i#10) ← (byte~) gen_sintab::$24 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- zpptrby1_derefidx_zpby1=aby 
    ldy i
    sta (sintab),y
  //SEG227 [107] *((const byte*) BORDERCOL#0) ← ++ *((const byte*) BORDERCOL#0) [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=_inc__deref_cowo1 
    inc BORDERCOL
  //SEG228 [108] (byte) gen_sintab::i#1 ← ++ (byte) gen_sintab::i#10 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG229 [109] if((byte) gen_sintab::i#1<(byte) gen_sintab::length#10) goto gen_sintab::@1 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ( main:2::init:5::gen_sintab:52 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] main:2::init:5::gen_sintab:54 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#1 ] ) -- zpby1_lt_zpby2_then_la1 
    lda i
    cmp length
    bcc b1
  //SEG230 gen_sintab::@return
  //SEG231 [110] return  [ ] ( main:2::init:5::gen_sintab:52 [ ] main:2::init:5::gen_sintab:54 [ ] )
    rts
    f_i: .byte 0, 0, 0, 0, 0
    f_min: .byte 0, 0, 0, 0, 0
    f_amp: .byte 0, 0, 0, 0, 0
}
//SEG232 getFAC
getFAC: {
    .label w = $b
    .label return = $b
  //SEG233 asm { jsr$b1aasty$festa$ff }
    jsr $b1aa
    sty $fe
    sta $ff
  //SEG234 [112] (word) getFAC::w#1 ← (byte/signed byte/word/signed word) 0 lo= *((const byte*) memLo#0) [ getFAC::w#1 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::w#1 ] ) -- zpwo1=coby1_setlo__deref_cowo2 
    lda memLo
    sta w
    lda #0
    sta w+1
  //SEG235 [113] (word) getFAC::return#0 ← (word) getFAC::w#1 hi= *((const byte*) memHi#0) [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] ) -- zpwo1=zpwo1_sethi__deref_cowo1 
    lda memHi
    sta return+1
  //SEG236 getFAC::@return
  //SEG237 [114] return  [ getFAC::return#0 ] ( main:2::init:5::gen_sintab:52::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] main:2::init:5::gen_sintab:54::getFAC:102 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 getFAC::return#0 ] )
    rts
}
//SEG238 addMEMtoFAC
addMEMtoFAC: {
    .label mem = 9
  //SEG239 [116] (byte*) prepareMEM::mem#2 ← (byte*) addMEMtoFAC::mem#2 [ prepareMEM::mem#2 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#2 ] )
    // (byte*) prepareMEM::mem#2 = (byte*) addMEMtoFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG240 [117] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG241 [120] phi from addMEMtoFAC to prepareMEM [phi:addMEMtoFAC->prepareMEM]
  //SEG242 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#2 [phi:addMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG243 addMEMtoFAC::@1
  //SEG244 asm { lda$feldy$ffjsr$b867 }
    lda $fe
    ldy $ff
    jsr $b867
  //SEG245 addMEMtoFAC::@return
  //SEG246 [119] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG247 prepareMEM
prepareMEM: {
    .label mem = 9
  //SEG248 [121] (byte~) prepareMEM::$0 ← < (byte*) prepareMEM::mem#5 [ prepareMEM::mem#5 prepareMEM::$0 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 prepareMEM::$0 ] ) -- aby=_lo_zpptrby1 
    lda mem
  //SEG249 [122] *((const byte*) memLo#0) ← (byte~) prepareMEM::$0 [ prepareMEM::mem#5 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#5 ] ) -- _deref_cowo1=aby 
    sta memLo
  //SEG250 [123] (byte~) prepareMEM::$1 ← > (byte*) prepareMEM::mem#5 [ prepareMEM::$1 ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::$1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::$1 ] ) -- aby=_hi_zpptrby1 
    lda mem+1
  //SEG251 [124] *((const byte*) memHi#0) ← (byte~) prepareMEM::$1 [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] ) -- _deref_cowo1=aby 
    sta memHi
  //SEG252 prepareMEM::@return
  //SEG253 [125] return  [ ] ( main:2::init:5::gen_sintab:52::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:79::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::addMEMtoFAC:100::prepareMEM:117 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98::prepareMEM:128 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94::prepareMEM:135 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59::prepareMEM:141 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92::prepareMEM:141 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89::prepareMEM:146 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG254 mulFACbyMEM
mulFACbyMEM: {
    .label mem = 9
  //SEG255 [127] (byte*) prepareMEM::mem#4 ← (byte*) mulFACbyMEM::mem#2 [ prepareMEM::mem#4 ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#4 ] )
    // (byte*) prepareMEM::mem#4 = (byte*) mulFACbyMEM::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG256 [128] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG257 [120] phi from mulFACbyMEM to prepareMEM [phi:mulFACbyMEM->prepareMEM]
  //SEG258 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#4 [phi:mulFACbyMEM->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG259 mulFACbyMEM::@1
  //SEG260 asm { lda$feldy$ffjsr$ba28 }
    lda $fe
    ldy $ff
    jsr $ba28
  //SEG261 mulFACbyMEM::@return
  //SEG262 [130] return  [ ] ( main:2::init:5::gen_sintab:52::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:87 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::mulFACbyMEM:98 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG263 sinFAC
sinFAC: {
  //SEG264 asm { jsr$e26b }
    jsr $e26b
  //SEG265 sinFAC::@return
  //SEG266 [132] return  [ ] ( main:2::init:5::gen_sintab:52::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::sinFAC:96 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG267 divMEMbyFAC
divMEMbyFAC: {
    .label mem = 9
  //SEG268 [134] (byte*) prepareMEM::mem#3 ← (byte*) divMEMbyFAC::mem#2 [ prepareMEM::mem#3 ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#3 ] )
    // (byte*) prepareMEM::mem#3 = (byte*) divMEMbyFAC::mem#2  // register copy zp ZP_PTR_BYTE:9
  //SEG269 [135] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG270 [120] phi from divMEMbyFAC to prepareMEM [phi:divMEMbyFAC->prepareMEM]
  //SEG271 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#3 [phi:divMEMbyFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG272 divMEMbyFAC::@1
  //SEG273 asm { lda$feldy$ffjsr$bb0f }
    lda $fe
    ldy $ff
    jsr $bb0f
  //SEG274 divMEMbyFAC::@return
  //SEG275 [137] return  [ ] ( main:2::init:5::gen_sintab:52::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:75 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::divMEMbyFAC:94 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG276 setFAC
setFAC: {
    .label _0 = 9
    .label w = $b
  //SEG277 [139] (byte*~) setFAC::$0 ← ((byte*)) (word) setFAC::w#5 [ setFAC::$0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 setFAC::$0 ] ) -- zpptrby1=_ptrby_zpwo1 
    lda w
    sta _0
    lda w+1
    sta _0+1
  //SEG278 [140] (byte*) prepareMEM::mem#0 ← (byte*~) setFAC::$0 [ prepareMEM::mem#0 ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#0 ] )
    // (byte*) prepareMEM::mem#0 = (byte*~) setFAC::$0  // register copy zp ZP_PTR_BYTE:9
  //SEG279 [141] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG280 [120] phi from setFAC to prepareMEM [phi:setFAC->prepareMEM]
  //SEG281 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#0 [phi:setFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG282 setFAC::@1
  //SEG283 asm { ldy$felda$ffjsr$b391 }
    ldy $fe
    lda $ff
    jsr $b391
  //SEG284 setFAC::@return
  //SEG285 [143] return  [ ] ( main:2::init:5::gen_sintab:52::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:59 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:65 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setFAC:73 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:85 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:52::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setFAC:92 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG286 setMEMtoFAC
setMEMtoFAC: {
    .label mem = 9
  //SEG287 [145] (byte*) prepareMEM::mem#1 ← (byte*) setMEMtoFAC::mem#5 [ prepareMEM::mem#1 ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 prepareMEM::mem#1 ] )
    // (byte*) prepareMEM::mem#1 = (byte*) setMEMtoFAC::mem#5  // register copy zp ZP_PTR_BYTE:9
  //SEG288 [146] call prepareMEM param-assignment [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
  //SEG289 [120] phi from setMEMtoFAC to prepareMEM [phi:setMEMtoFAC->prepareMEM]
  //SEG290 [120] phi (byte*) prepareMEM::mem#5 = (byte*) prepareMEM::mem#1 [phi:setMEMtoFAC->prepareMEM#0] -- register_copy 
    jsr prepareMEM
  //SEG291 setMEMtoFAC::@1
  //SEG292 asm { ldx$feldy$ffjsr$bbd4 }
    ldx $fe
    ldy $ff
    jsr $bbd4
  //SEG293 setMEMtoFAC::@return
  //SEG294 [148] return  [ ] ( main:2::init:5::gen_sintab:52::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:67 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:71 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:77 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:81 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:52::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] main:2::init:5::gen_sintab:54::setMEMtoFAC:89 [ gen_sintab::length#10 gen_sintab::sintab#12 gen_sintab::i#10 ] )
    rts
}
//SEG295 subFACfromARG
subFACfromARG: {
  //SEG296 asm { jsr$b853 }
    jsr $b853
  //SEG297 subFACfromARG::@return
  //SEG298 [150] return  [ ] ( main:2::init:5::gen_sintab:52::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::subFACfromARG:69 [ gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG299 setARGtoFAC
setARGtoFAC: {
  //SEG300 asm { jsr$bc0f }
    jsr $bc0f
  //SEG301 setARGtoFAC::@return
  //SEG302 [152] return  [ ] ( main:2::init:5::gen_sintab:52::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] main:2::init:5::gen_sintab:54::setARGtoFAC:61 [ gen_sintab::min#2 gen_sintab::length#10 gen_sintab::sintab#12 ] )
    rts
}
//SEG303 gen_sprites
gen_sprites: {
    .label spr = 7
    .label i = 2
  //SEG304 [154] phi from gen_sprites to gen_sprites::@1 [phi:gen_sprites->gen_sprites::@1]
  //SEG305 [154] phi (byte*) gen_sprites::spr#2 = (const byte[]) sprites#0 [phi:gen_sprites->gen_sprites::@1#0] -- zpptrby1=cowo1 
    lda #<sprites
    sta spr
    lda #>sprites
    sta spr+1
  //SEG306 [154] phi (byte) gen_sprites::i#2 = (byte/signed byte/word/signed word) 0 [phi:gen_sprites->gen_sprites::@1#1] -- zpby1=coby1 
    lda #0
    sta i
  //SEG307 [154] phi from gen_sprites::@3 to gen_sprites::@1 [phi:gen_sprites::@3->gen_sprites::@1]
  //SEG308 [154] phi (byte*) gen_sprites::spr#2 = (byte*) gen_sprites::spr#1 [phi:gen_sprites::@3->gen_sprites::@1#0] -- register_copy 
  //SEG309 [154] phi (byte) gen_sprites::i#2 = (byte) gen_sprites::i#1 [phi:gen_sprites::@3->gen_sprites::@1#1] -- register_copy 
  //SEG310 gen_sprites::@1
  b1:
  //SEG311 [155] (byte~) gen_sprites::$0 ← (const byte[]) gen_sprites::cml#0 *idx (byte) gen_sprites::i#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_sprites::$0 ] ) -- aby=cowo1_derefidx_zpby1 
    ldx i
    lda cml,x
  //SEG312 [156] (byte) gen_chargen_sprite::ch#0 ← (byte~) gen_sprites::$0 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 ] ) -- xby=aby 
    tax
  //SEG313 [157] (byte*) gen_chargen_sprite::sprite#0 ← (byte*) gen_sprites::spr#2 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::ch#0 gen_chargen_sprite::sprite#0 ] ) -- zpptrby1=zpptrby2 
    lda spr
    sta gen_chargen_sprite.sprite
    lda spr+1
    sta gen_chargen_sprite.sprite+1
  //SEG314 [158] call gen_chargen_sprite param-assignment [ gen_sprites::i#2 gen_sprites::spr#2 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    jsr gen_chargen_sprite
  //SEG315 gen_sprites::@3
  //SEG316 [159] (byte*) gen_sprites::spr#1 ← (byte*) gen_sprites::spr#2 + (byte/signed byte/word/signed word) 64 [ gen_sprites::i#2 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#2 gen_sprites::spr#1 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda spr
    clc
    adc #$40
    sta spr
    bcc !+
    inc spr+1
  !:
  //SEG317 [160] (byte) gen_sprites::i#1 ← ++ (byte) gen_sprites::i#2 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1=_inc_zpby1 
    inc i
  //SEG318 [161] if((byte) gen_sprites::i#1!=(byte/signed byte/word/signed word) 7) goto gen_sprites::@1 [ gen_sprites::i#1 gen_sprites::spr#1 ] ( main:2::init:5::gen_sprites:50 [ gen_sprites::i#1 gen_sprites::spr#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda i
    cmp #7
    bne b1
  //SEG319 gen_sprites::@return
  //SEG320 [162] return  [ ] ( main:2::init:5::gen_sprites:50 [ ] )
    rts
    cml: .text "camelot"
}
//SEG321 gen_chargen_sprite
gen_chargen_sprite: {
    .label _0 = $b
    .label _1 = $b
    .label sprite = 9
    .label chargen = $e
    .label bits = 4
    .label s_gen = $d
    .label x = 5
    .label y = 3
    .label c = 6
  //SEG322 [163] (word~) gen_chargen_sprite::$0 ← ((word)) (byte) gen_chargen_sprite::ch#0 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$0 ] ) -- zpwo1=_word_xby 
    txa
    sta _0
    lda #0
    sta _0+1
  //SEG323 [164] (word~) gen_chargen_sprite::$1 ← (word~) gen_chargen_sprite::$0 << (byte/signed byte/word/signed word) 3 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::$1 ] ) -- zpwo1=zpwo1_rol_3 
    asl _1
    rol _1+1
    asl _1
    rol _1+1
    asl _1
    rol _1+1
  //SEG324 [165] (byte*) gen_chargen_sprite::chargen#0 ← (const byte*) CHARGEN#0 + (word~) gen_chargen_sprite::$1 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- zpptrby1=cowo1_plus_zpwo1 
    lda #<CHARGEN
    clc
    adc _1
    sta chargen
    lda #>CHARGEN
    adc _1+1
    sta chargen+1
  //SEG325 asm { sei }
    sei
  //SEG326 [167] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 50 [ gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::sprite#0 gen_chargen_sprite::chargen#0 ] ) -- _deref_cowo1=coby2 
    lda #$32
    sta PROCPORT
  //SEG327 [168] phi from gen_chargen_sprite to gen_chargen_sprite::@1 [phi:gen_chargen_sprite->gen_chargen_sprite::@1]
  //SEG328 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG329 [168] phi (byte) gen_chargen_sprite::y#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite->gen_chargen_sprite::@1#1] -- zpby1=coby1 
    lda #0
    sta y
  //SEG330 [168] phi from gen_chargen_sprite::@9 to gen_chargen_sprite::@1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1]
  //SEG331 [168] phi (byte*) gen_chargen_sprite::sprite#11 = (byte*) gen_chargen_sprite::sprite#2 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#0] -- register_copy 
  //SEG332 [168] phi (byte) gen_chargen_sprite::y#2 = (byte) gen_chargen_sprite::y#1 [phi:gen_chargen_sprite::@9->gen_chargen_sprite::@1#1] -- register_copy 
  //SEG333 gen_chargen_sprite::@1
  b1:
  //SEG334 [169] (byte) gen_chargen_sprite::bits#0 ← (byte*) gen_chargen_sprite::chargen#0 *idx (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#11 gen_chargen_sprite::bits#0 ] ) -- zpby1=zpptrby1_derefidx_zpby2 
    ldy y
    lda (chargen),y
    sta bits
  //SEG335 [170] phi from gen_chargen_sprite::@1 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2]
  //SEG336 [170] phi (byte) gen_chargen_sprite::x#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#0] -- zpby1=coby1 
    lda #0
    sta x
  //SEG337 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#11 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG338 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#2] -- yby=coby1 
    tay
  //SEG339 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#3] -- zpby1=coby1 
    sta s_gen
  //SEG340 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#0 [phi:gen_chargen_sprite::@1->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG341 [170] phi from gen_chargen_sprite::@8 to gen_chargen_sprite::@2 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2]
  //SEG342 [170] phi (byte) gen_chargen_sprite::x#6 = (byte) gen_chargen_sprite::x#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#0] -- register_copy 
  //SEG343 [170] phi (byte*) gen_chargen_sprite::sprite#10 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#1] -- register_copy 
  //SEG344 [170] phi (byte) gen_chargen_sprite::s_gen_cnt#4 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#2] -- register_copy 
  //SEG345 [170] phi (byte) gen_chargen_sprite::s_gen#5 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#3] -- register_copy 
  //SEG346 [170] phi (byte) gen_chargen_sprite::bits#2 = (byte) gen_chargen_sprite::bits#1 [phi:gen_chargen_sprite::@8->gen_chargen_sprite::@2#4] -- register_copy 
  //SEG347 gen_chargen_sprite::@2
  b2:
  //SEG348 [171] (byte~) gen_chargen_sprite::$4 ← (byte) gen_chargen_sprite::bits#2 & (byte/word/signed word) 128 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 gen_chargen_sprite::$4 ] ) -- aby=zpby1_band_coby1 
    lda bits
    and #$80
  //SEG349 [172] if((byte~) gen_chargen_sprite::$4==(byte/signed byte/word/signed word) 0) goto gen_chargen_sprite::@3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::s_gen#5 gen_chargen_sprite::s_gen_cnt#4 gen_chargen_sprite::sprite#10 gen_chargen_sprite::x#6 ] ) -- aby_eq_0_then_la1 
    cmp #0
    beq b6
  //SEG350 [173] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@6 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@6]
  //SEG351 gen_chargen_sprite::@6
  //SEG352 [174] phi from gen_chargen_sprite::@6 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3]
  //SEG353 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 1 [phi:gen_chargen_sprite::@6->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #1
    sta c
    jmp b3
  //SEG354 [174] phi from gen_chargen_sprite::@2 to gen_chargen_sprite::@3 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3]
  b6:
  //SEG355 [174] phi (byte) gen_chargen_sprite::c#3 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@2->gen_chargen_sprite::@3#0] -- zpby1=coby1 
    lda #0
    sta c
  //SEG356 gen_chargen_sprite::@3
  b3:
  //SEG357 [175] phi from gen_chargen_sprite::@3 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4]
  //SEG358 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#10 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG359 [175] phi (byte) gen_chargen_sprite::b#2 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#1] -- xby=coby1 
    ldx #0
  //SEG360 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#4 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG361 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#5 [phi:gen_chargen_sprite::@3->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG362 [175] phi from gen_chargen_sprite::@5 to gen_chargen_sprite::@4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4]
  //SEG363 [175] phi (byte*) gen_chargen_sprite::sprite#3 = (byte*) gen_chargen_sprite::sprite#4 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#0] -- register_copy 
  //SEG364 [175] phi (byte) gen_chargen_sprite::b#2 = (byte) gen_chargen_sprite::b#1 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#1] -- register_copy 
  //SEG365 [175] phi (byte) gen_chargen_sprite::s_gen_cnt#3 = (byte) gen_chargen_sprite::s_gen_cnt#5 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#2] -- register_copy 
  //SEG366 [175] phi (byte) gen_chargen_sprite::s_gen#3 = (byte) gen_chargen_sprite::s_gen#6 [phi:gen_chargen_sprite::@5->gen_chargen_sprite::@4#3] -- register_copy 
  //SEG367 gen_chargen_sprite::@4
  b4:
  //SEG368 [176] (byte~) gen_chargen_sprite::$7 ← (byte) gen_chargen_sprite::s_gen#3 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::$7 ] ) -- aby=zpby1_rol_1 
    lda s_gen
    asl
  //SEG369 [177] (byte) gen_chargen_sprite::s_gen#1 ← (byte~) gen_chargen_sprite::$7 | (byte) gen_chargen_sprite::c#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::s_gen_cnt#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpby1=aby_bor_zpby2 
    ora c
    sta s_gen
  //SEG370 [178] (byte) gen_chargen_sprite::s_gen_cnt#1 ← ++ (byte) gen_chargen_sprite::s_gen_cnt#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby=_inc_yby 
    iny
  //SEG371 [179] if((byte) gen_chargen_sprite::s_gen_cnt#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@5 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 gen_chargen_sprite::s_gen_cnt#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #8
    bne b5
  //SEG372 gen_chargen_sprite::@7
  //SEG373 [180] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 0) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #0
    sta (sprite),y
  //SEG374 [181] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 3) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 gen_chargen_sprite::s_gen#1 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #3
    sta (sprite),y
  //SEG375 [182] *((byte*) gen_chargen_sprite::sprite#3 + (byte/signed byte/word/signed word) 6) ← (byte) gen_chargen_sprite::s_gen#1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#3 ] ) -- zpptrby1_derefidx_coby1=zpby1 
    ldy #6
    sta (sprite),y
  //SEG376 [183] (byte*) gen_chargen_sprite::sprite#1 ← ++ (byte*) gen_chargen_sprite::sprite#3 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::c#3 gen_chargen_sprite::b#2 gen_chargen_sprite::sprite#1 ] ) -- zpptrby1=_inc_zpptrby1 
    inc sprite
    bne !+
    inc sprite+1
  !:
  //SEG377 [184] phi from gen_chargen_sprite::@7 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5]
  //SEG378 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#1 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG379 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#1] -- yby=coby1 
    ldy #0
  //SEG380 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte/signed byte/word/signed word) 0 [phi:gen_chargen_sprite::@7->gen_chargen_sprite::@5#2] -- zpby1=coby1 
    tya
    sta s_gen
  //SEG381 [184] phi from gen_chargen_sprite::@4 to gen_chargen_sprite::@5 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5]
  //SEG382 [184] phi (byte*) gen_chargen_sprite::sprite#4 = (byte*) gen_chargen_sprite::sprite#3 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#0] -- register_copy 
  //SEG383 [184] phi (byte) gen_chargen_sprite::s_gen_cnt#5 = (byte) gen_chargen_sprite::s_gen_cnt#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#1] -- register_copy 
  //SEG384 [184] phi (byte) gen_chargen_sprite::s_gen#6 = (byte) gen_chargen_sprite::s_gen#1 [phi:gen_chargen_sprite::@4->gen_chargen_sprite::@5#2] -- register_copy 
  //SEG385 gen_chargen_sprite::@5
  b5:
  //SEG386 [185] (byte) gen_chargen_sprite::b#1 ← ++ (byte) gen_chargen_sprite::b#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby=_inc_xby 
    inx
  //SEG387 [186] if((byte) gen_chargen_sprite::b#1!=(byte/signed byte/word/signed word) 3) goto gen_chargen_sprite::@4 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#2 gen_chargen_sprite::x#6 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::c#3 gen_chargen_sprite::b#1 ] ) -- xby_neq_coby1_then_la1 
    cpx #3
    bne b4
  //SEG388 gen_chargen_sprite::@8
  //SEG389 [187] (byte) gen_chargen_sprite::bits#1 ← (byte) gen_chargen_sprite::bits#2 << (byte/signed byte/word/signed word) 1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::x#6 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 ] ) -- zpby1=zpby1_rol_1 
    asl bits
  //SEG390 [188] (byte) gen_chargen_sprite::x#1 ← ++ (byte) gen_chargen_sprite::x#6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1=_inc_zpby1 
    inc x
  //SEG391 [189] if((byte) gen_chargen_sprite::x#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::bits#1 gen_chargen_sprite::s_gen#6 gen_chargen_sprite::s_gen_cnt#5 gen_chargen_sprite::sprite#4 gen_chargen_sprite::x#1 ] ) -- zpby1_neq_coby1_then_la1 
    lda x
    cmp #8
    bne b2
  //SEG392 gen_chargen_sprite::@9
  //SEG393 [190] (byte*) gen_chargen_sprite::sprite#2 ← (byte*) gen_chargen_sprite::sprite#4 + (byte/signed byte/word/signed word) 6 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#2 gen_chargen_sprite::sprite#2 ] ) -- zpptrby1=zpptrby1_plus_coby1 
    lda sprite
    clc
    adc #6
    sta sprite
    bcc !+
    inc sprite+1
  !:
  //SEG394 [191] (byte) gen_chargen_sprite::y#1 ← ++ (byte) gen_chargen_sprite::y#2 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1=_inc_zpby1 
    inc y
  //SEG395 [192] if((byte) gen_chargen_sprite::y#1!=(byte/signed byte/word/signed word) 8) goto gen_chargen_sprite::@1 [ gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 gen_chargen_sprite::chargen#0 gen_chargen_sprite::y#1 gen_chargen_sprite::sprite#2 ] ) -- zpby1_neq_coby1_then_la1 
    lda y
    cmp #8
    bne b1
  //SEG396 gen_chargen_sprite::@10
  //SEG397 [193] *((const byte*) PROCPORT#0) ← (byte/signed byte/word/signed word) 55 [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] ) -- _deref_cowo1=coby2 
    lda #$37
    sta PROCPORT
  //SEG398 asm { cli }
    cli
  //SEG399 gen_chargen_sprite::@return
  //SEG400 [195] return  [ ] ( main:2::init:5::gen_sprites:50::gen_chargen_sprite:158 [ gen_sprites::i#2 gen_sprites::spr#2 ] )
    rts
}
//SEG401 place_sprites
place_sprites: {
    .const sprites_ptr = SCREEN+$3f8
    .label spr_id = 2
    .label spr_x = 3
    .label col = 4
  //SEG402 [196] *((const byte*) SPRITES_ENABLE#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    lda #$7f
    sta SPRITES_ENABLE
  //SEG403 [197] *((const byte*) SPRITES_EXPAND_X#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_X
  //SEG404 [198] *((const byte*) SPRITES_EXPAND_Y#0) ← (byte/signed byte/word/signed word) 127 [ ] ( main:2::init:5::place_sprites:48 [ ] ) -- _deref_cowo1=coby2 
    sta SPRITES_EXPAND_Y
  //SEG405 [199] phi from place_sprites to place_sprites::@1 [phi:place_sprites->place_sprites::@1]
  //SEG406 [199] phi (byte) place_sprites::col#2 = (byte/signed byte/word/signed word) 5 [phi:place_sprites->place_sprites::@1#0] -- zpby1=coby1 
    lda #5
    sta col
  //SEG407 [199] phi (byte) place_sprites::j2#3 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#1] -- xby=coby1 
    ldx #0
  //SEG408 [199] phi (byte) place_sprites::spr_x#2 = (byte/signed byte/word/signed word) 60 [phi:place_sprites->place_sprites::@1#2] -- zpby1=coby1 
    lda #$3c
    sta spr_x
  //SEG409 [199] phi (byte) place_sprites::j#2 = (byte/signed byte/word/signed word) 0 [phi:place_sprites->place_sprites::@1#3] -- yby=coby1 
    ldy #0
  //SEG410 [199] phi (byte) place_sprites::spr_id#2 = ((byte))(const byte[]) sprites#0/(byte/signed byte/word/signed word) 64 [phi:place_sprites->place_sprites::@1#4] -- zpby1=coby1 
    lda #$ff & sprites/$40
    sta spr_id
  //SEG411 [199] phi from place_sprites::@1 to place_sprites::@1 [phi:place_sprites::@1->place_sprites::@1]
  //SEG412 [199] phi (byte) place_sprites::col#2 = (byte) place_sprites::col#1 [phi:place_sprites::@1->place_sprites::@1#0] -- register_copy 
  //SEG413 [199] phi (byte) place_sprites::j2#3 = (byte) place_sprites::j2#2 [phi:place_sprites::@1->place_sprites::@1#1] -- register_copy 
  //SEG414 [199] phi (byte) place_sprites::spr_x#2 = (byte) place_sprites::spr_x#1 [phi:place_sprites::@1->place_sprites::@1#2] -- register_copy 
  //SEG415 [199] phi (byte) place_sprites::j#2 = (byte) place_sprites::j#1 [phi:place_sprites::@1->place_sprites::@1#3] -- register_copy 
  //SEG416 [199] phi (byte) place_sprites::spr_id#2 = (byte) place_sprites::spr_id#1 [phi:place_sprites::@1->place_sprites::@1#4] -- register_copy 
  //SEG417 place_sprites::@1
  b1:
  //SEG418 [200] *((const byte*) place_sprites::sprites_ptr#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::spr_id#2 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#2 place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 ] ) -- cowo1_derefidx_yby=zpby1 
    lda spr_id
    sta sprites_ptr,y
  //SEG419 [201] (byte) place_sprites::spr_id#1 ← ++ (byte) place_sprites::spr_id#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- zpby1=_inc_zpby1 
    inc spr_id
  //SEG420 [202] *((const byte*) SPRITES_XPOS#0 + (byte) place_sprites::j2#3) ← (byte) place_sprites::spr_x#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=zpby1 
    lda spr_x
    sta SPRITES_XPOS,x
  //SEG421 [203] *((const byte*) SPRITES_YPOS#0 + (byte) place_sprites::j2#3) ← (byte/signed byte/word/signed word) 80 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_xby=coby2 
    lda #$50
    sta SPRITES_YPOS,x
  //SEG422 [204] *((const byte*) SPRITES_COLS#0 + (byte) place_sprites::j#2) ← (byte) place_sprites::col#2 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_x#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 ] ) -- cowo1_derefidx_yby=zpby1 
    lda col
    sta SPRITES_COLS,y
  //SEG423 [205] (byte) place_sprites::spr_x#1 ← (byte) place_sprites::spr_x#2 + (byte/signed byte/word/signed word) 32 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::col#2 place_sprites::spr_id#1 place_sprites::spr_x#1 ] ) -- zpby1=zpby1_plus_coby1 
    lda spr_x
    clc
    adc #$20
    sta spr_x
  //SEG424 [206] (byte) place_sprites::col#1 ← (byte) place_sprites::col#2 ^ (byte/signed byte/word/signed word) 7^(byte/signed byte/word/signed word) 5 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::j2#3 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 ] ) -- zpby1=zpby1_bxor_coby1 
    lda col
    eor #7^5
    sta col
  //SEG425 [207] (byte) place_sprites::j2#1 ← ++ (byte) place_sprites::j2#3 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::col#1 place_sprites::j2#1 ] ) -- xby=_inc_xby 
    inx
  //SEG426 [208] (byte) place_sprites::j2#2 ← ++ (byte) place_sprites::j2#1 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::j#2 place_sprites::spr_id#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- xby=_inc_xby 
    inx
  //SEG427 [209] (byte) place_sprites::j#1 ← ++ (byte) place_sprites::j#2 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby=_inc_yby 
    iny
  //SEG428 [210] if((byte) place_sprites::j#1!=(byte/signed byte/word/signed word) 7) goto place_sprites::@1 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ( main:2::init:5::place_sprites:48 [ place_sprites::spr_id#1 place_sprites::j#1 place_sprites::spr_x#1 place_sprites::j2#2 place_sprites::col#1 ] ) -- yby_neq_coby1_then_la1 
    cpy #7
    bne b1
  //SEG429 place_sprites::@return
  //SEG430 [211] return  [ ] ( main:2::init:5::place_sprites:48 [ ] )
    rts
}

