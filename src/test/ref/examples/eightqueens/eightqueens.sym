(label) @1
(label) @2
(label) @begin
(label) @end
(const nomodify struct MOS6526_CIA*) CIA1 = (struct MOS6526_CIA*) 56320
(const nomodify byte*) CONIO_SCREEN_COLORS = (byte*) 55296
(const nomodify byte*) CONIO_SCREEN_TEXT = (byte*) 1024
(const nomodify byte) CONIO_TEXTCOLOR_DEFAULT = (byte) $e
(const byte*) DIGITS[]  = (byte*) "0123456789abcdef"z
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_A_CONTROL = (byte) $e
(const byte) OFFSET_STRUCT_MOS6526_CIA_TIMER_B_CONTROL = (byte) $f
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_10THS = (byte) 8
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_HOURS = (byte) $b
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_MIN = (byte) $a
(const byte) OFFSET_STRUCT_MOS6526_CIA_TOD_SEC = (byte) 9
(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS = (byte) 1
(const byte) OFFSET_STRUCT_TIME_OF_DAY_HOURS = (byte) 3
(const byte) OFFSET_STRUCT_TIME_OF_DAY_MIN = (byte) 2
(const byte) OFFSET_STRUCT_TIME_OF_DAY_SEC = (byte) 1
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const word*) RADIX_DECIMAL_VALUES[]  = { (word) $2710, (word) $3e8, (word) $64, (word) $a }
(const dword*) RADIX_DECIMAL_VALUES_LONG[]  = { (dword) $3b9aca00, (dword) $5f5e100, (dword) $989680, (dword) $f4240, (dword) $186a0, (dword) $2710, (dword) $3e8, (dword) $64, (dword) $a }
(const byte*) RADIX_HEXADECIMAL_VALUES_CHAR[]  = { (byte) $10 }
(const byte) SIZEOF_STRUCT_PRINTF_BUFFER_NUMBER = (byte) $c
(byte) TIME_OF_DAY::HOURS
(byte) TIME_OF_DAY::MIN
(byte) TIME_OF_DAY::SEC
(byte) TIME_OF_DAY::TENTHS
(struct TIME_OF_DAY) TOD_ZERO loadstore mem[4] = { TENTHS: (byte) 0, SEC: (byte) 0, MIN: (byte) 0, HOURS: (byte) 0 }
(const byte*) board[(number) $14]  = { fill( $14, 0) }
(void()) clrscr()
(label) clrscr::@1
(label) clrscr::@2
(label) clrscr::@3
(label) clrscr::@4
(label) clrscr::@5
(label) clrscr::@return
(byte) clrscr::c
(byte) clrscr::c#1 reg byte y 20002.0
(byte) clrscr::c#2 reg byte y 12501.25
(byte) clrscr::l
(byte) clrscr::l#1 reg byte x 2002.0
(byte) clrscr::l#2 reg byte x 333.6666666666667
(byte*) clrscr::line_cols
(byte*) clrscr::line_cols#1 line_cols zp[2]:22 1001.0
(byte*) clrscr::line_cols#5 line_cols zp[2]:22 1500.375
(byte*) clrscr::line_text
(byte*) clrscr::line_text#1 line_text zp[2]:18 667.3333333333334
(byte*) clrscr::line_text#5 line_text zp[2]:18 1714.7142857142858
(byte) conio_cursor_x loadstore zp[1]:20 8.426966297758988E11
(byte) conio_cursor_y loadstore zp[1]:21 1.6580310881347715E13
(byte*) conio_line_color loadstore zp[2]:24 1.1693121693651371E13
(byte*) conio_line_text loadstore zp[2]:22 1.1570680628796385E13
(dword) count
(dword) count#10 count zp[4]:2 276.51724137931035
(dword) count#25 count zp[4]:2 387.19354838709677
(void()) cputc((byte) cputc::c)
(label) cputc::@1
(label) cputc::@2
(label) cputc::@3
(label) cputc::@return
(byte) cputc::c
(byte) cputc::c#0 reg byte a 2.0000000002E10
(byte) cputc::c#1 reg byte a 2.000000000002E12
(byte) cputc::c#2 reg byte a 2.00000002E8
(byte) cputc::c#3 reg byte a 1.05050500000025E13
(void()) cputln()
(label) cputln::@return
(void()) cputs((to_nomodify byte*) cputs::s)
(label) cputs::@1
(label) cputs::@2
(label) cputs::@return
(byte) cputs::c
(byte) cputs::c#1 reg byte a 1.0000000001E10
(to_nomodify byte*) cputs::s
(to_nomodify byte*) cputs::s#0 s zp[2]:16 5.0000000005E9
(to_nomodify byte*) cputs::s#13 s zp[2]:16 1.5500000002E10
(to_nomodify byte*) cputs::s#14 s zp[2]:16 1.000000001E9
(void()) cscroll()
(label) cscroll::@1
(label) cscroll::@2
(label) cscroll::@3
(label) cscroll::@4
(label) cscroll::@5
(label) cscroll::@return
(void()) gotoxy((byte) gotoxy::x , (byte) gotoxy::y)
(label) gotoxy::@1
(label) gotoxy::@return
(word) gotoxy::line_offset
(const word) gotoxy::line_offset#0 line_offset = (word)(const byte) gotoxy::y#2*(byte) $28
(byte) gotoxy::x
(const byte) gotoxy::x#2 x = (byte) 0
(byte) gotoxy::y
(const byte) gotoxy::y#2 y = (byte) 5
(byte()) legal((byte) legal::row , (byte) legal::column)
(byte~) legal::$0 reg byte x 2000002.0
(label) legal::@1
(label) legal::@2
(label) legal::@3
(label) legal::@4
(label) legal::@5
(label) legal::@return
(byte) legal::column
(byte) legal::column#0 column zp[1]:35 235353.23529411765
(label) legal::diff1
(label) legal::diff1_@1
(label) legal::diff1_@3
(label) legal::diff1_@return
(byte) legal::diff1_a
(byte) legal::diff1_a#0 reg byte a 2000002.0
(byte) legal::diff1_b
(byte) legal::diff1_return
(byte) legal::diff1_return#0 diff1_return zp[1]:36 2000002.0
(byte) legal::diff1_return#1 diff1_return zp[1]:36 2000002.0
(byte) legal::diff1_return#2 diff1_return zp[1]:36 600000.6000000001
(label) legal::diff2
(label) legal::diff2_@1
(label) legal::diff2_@3
(label) legal::diff2_@return
(byte) legal::diff2_a
(byte) legal::diff2_b
(byte) legal::diff2_return
(byte) legal::diff2_return#0 reg byte a 2000002.0
(byte) legal::diff2_return#1 reg byte a 2000002.0
(byte) legal::diff2_return#2 reg byte a 3000003.0
(byte) legal::i
(byte) legal::i#1 reg byte y 2000002.0
(byte) legal::i#10 reg byte y 571429.1428571428
(byte) legal::return
(byte) legal::return#0 reg byte a 2002.0
(byte) legal::return#4 reg byte a 333.6666666666667
(byte) legal::row
(byte) legal::row#0 row zp[1]:28 222278.05555555556
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@2
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(label) main::@return
(const byte*) main::s[(byte) $29]  = (byte*) " - n queens problem using backtracking -"
(const byte*) main::s1[(byte) $13]  = (byte*) "
number of queens:"
(const byte*) main::s2[(byte) $e]  = (byte*) "

solutions: "
(const byte*) main::s3[(byte) 8]  = (byte*) " time: "
(const byte*) main::s4[(byte) 3]  = (byte*) ".
"
(void*()) memcpy((void*) memcpy::destination , (void*) memcpy::source , (word) memcpy::num)
(label) memcpy::@1
(label) memcpy::@2
(label) memcpy::@return
(void*) memcpy::destination
(void*) memcpy::destination#2 destination zp[2]:18
(byte*) memcpy::dst
(byte*) memcpy::dst#1 dst zp[2]:18 1.0E20
(byte*) memcpy::dst#2 dst zp[2]:18 1.0000333333333333E20
(byte*) memcpy::dst#4 dst zp[2]:18 2.0E16
(word) memcpy::num
(void*) memcpy::return
(void*) memcpy::source
(void*) memcpy::source#2 source zp[2]:10
(byte*) memcpy::src
(byte*) memcpy::src#1 src zp[2]:10 2.0E20
(byte*) memcpy::src#2 src zp[2]:10 1.000025E20
(byte*) memcpy::src#4 src zp[2]:10 1.0E16
(byte*) memcpy::src_end
(byte*) memcpy::src_end#0 src_end zp[2]:37 1.250125E19
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@3
(label) memset::@return
(byte) memset::c
(byte) memset::c#4 reg byte x 1.4285714285714287E19
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:10 2.0E20
(byte*) memset::dst#2 dst zp[2]:10 1.3333666666666666E20
(byte*) memset::dst#4 dst zp[2]:10 2.0E16
(byte*) memset::end
(byte*) memset::end#0 end zp[2]:37 1.6668333333333332E19
(word) memset::num
(void*) memset::return
(void*) memset::str
(void*) memset::str#3 str zp[2]:10
(void()) print()
(label) print::@1
(label) print::@10
(label) print::@11
(label) print::@12
(label) print::@13
(label) print::@14
(label) print::@15
(label) print::@2
(label) print::@3
(label) print::@4
(label) print::@5
(label) print::@6
(label) print::@7
(label) print::@8
(label) print::@9
(label) print::@return
(byte) print::i
(byte) print::i#1 i zp[1]:29 2000002.0
(byte) print::i#2 i zp[1]:29 1000001.0
(byte) print::i1
(byte) print::i1#1 i1 zp[1]:30 2000002.0
(byte) print::i1#2 i1 zp[1]:30 1000000.357142857
(byte) print::j
(byte) print::j#1 j zp[1]:12 2.0000002E7
(byte) print::j#2 j zp[1]:12 5714286.285714285
(const byte*) print::s[(byte) 3]  = (byte*) "
#"
(const byte*) print::s1[(byte) 4]  = (byte*) ":
 "
(const byte*) print::s2[(byte) 2]  = (byte*) "
"
(const byte*) print::s3[(byte) 2]  = (byte*) "Q"
(const byte*) print::s4[(byte) 2]  = (byte*) "-"
(struct printf_buffer_number) printf_buffer loadstore mem[12] = {}
(const byte*) printf_buffer_number::digits[(number) $b]  = { fill( $b, 0) }
(byte) printf_buffer_number::sign
(byte) printf_format_number::justify_left
(byte) printf_format_number::min_length
(byte) printf_format_number::radix
(byte) printf_format_number::sign_always
(byte) printf_format_number::upper_case
(byte) printf_format_number::zero_padding
(byte) printf_format_string::justify_left
(byte) printf_format_string::min_length
(void()) printf_number_buffer((byte) printf_number_buffer::buffer_sign , (byte*) printf_number_buffer::buffer_digits , (byte) printf_number_buffer::format_min_length , (byte) printf_number_buffer::format_justify_left , (byte) printf_number_buffer::format_sign_always , (byte) printf_number_buffer::format_zero_padding , (byte) printf_number_buffer::format_upper_case , (byte) printf_number_buffer::format_radix)
(word~) printf_number_buffer::$19 zp[2]:10 1.00000001E8
(label) printf_number_buffer::@1
(label) printf_number_buffer::@10
(label) printf_number_buffer::@11
(label) printf_number_buffer::@12
(label) printf_number_buffer::@13
(label) printf_number_buffer::@14
(label) printf_number_buffer::@15
(label) printf_number_buffer::@16
(label) printf_number_buffer::@17
(label) printf_number_buffer::@18
(label) printf_number_buffer::@19
(label) printf_number_buffer::@2
(label) printf_number_buffer::@20
(label) printf_number_buffer::@21
(label) printf_number_buffer::@3
(label) printf_number_buffer::@4
(label) printf_number_buffer::@5
(label) printf_number_buffer::@6
(label) printf_number_buffer::@7
(label) printf_number_buffer::@8
(label) printf_number_buffer::@9
(label) printf_number_buffer::@return
(struct printf_buffer_number) printf_number_buffer::buffer
(byte*) printf_number_buffer::buffer_digits
(byte) printf_number_buffer::buffer_sign
(byte) printf_number_buffer::buffer_sign#0 buffer_sign zp[1]:13 200002.0
(byte) printf_number_buffer::buffer_sign#1 buffer_sign zp[1]:13 202.0
(byte) printf_number_buffer::buffer_sign#10 buffer_sign zp[1]:13 1.55050053E7
(byte) printf_number_buffer::buffer_sign#2 buffer_sign zp[1]:13 2.0000002E7
(struct printf_format_number) printf_number_buffer::format
(byte) printf_number_buffer::format_justify_left
(byte) printf_number_buffer::format_justify_left#10 format_justify_left zp[1]:35 6451612.9677419355
(byte) printf_number_buffer::format_min_length
(byte) printf_number_buffer::format_min_length#3 reg byte x 1.00000001E7
(byte) printf_number_buffer::format_radix
(byte) printf_number_buffer::format_sign_always
(byte) printf_number_buffer::format_upper_case
(byte) printf_number_buffer::format_upper_case#10 format_upper_case zp[1]:14 3846153.8846153845
(byte) printf_number_buffer::format_zero_padding
(byte) printf_number_buffer::format_zero_padding#10 format_zero_padding zp[1]:12 9375000.09375
(signed byte) printf_number_buffer::len
(signed byte) printf_number_buffer::len#0 reg byte y 1.500000015E8
(signed byte) printf_number_buffer::len#1 reg byte y 2.00000002E8
(signed byte) printf_number_buffer::len#2 reg byte y 3.00000003E8
(signed byte) printf_number_buffer::padding
(signed byte) printf_number_buffer::padding#1 padding zp[1]:36 1.00000001E8
(signed byte) printf_number_buffer::padding#10 padding zp[1]:36 1.904761923809524E7
(void()) printf_padding((byte) printf_padding::pad , (byte) printf_padding::length)
(label) printf_padding::@1
(label) printf_padding::@2
(label) printf_padding::@3
(label) printf_padding::@return
(byte) printf_padding::i
(byte) printf_padding::i#1 i zp[1]:27 2.000000000002E12
(byte) printf_padding::i#2 i zp[1]:27 7.5000000000075E11
(byte) printf_padding::length
(byte) printf_padding::length#0 length zp[1]:15 2.00000002E8
(byte) printf_padding::length#1 length zp[1]:15 2.00000002E8
(byte) printf_padding::length#2 length zp[1]:15 2.00000002E8
(byte) printf_padding::length#6 length zp[1]:15 1.6671666666733334E11
(byte) printf_padding::pad
(byte) printf_padding::pad#7 pad zp[1]:26 1.6666666666683334E11
(void()) printf_string((byte*) printf_string::str , (byte) printf_string::format_min_length , (byte) printf_string::format_justify_left)
(label) printf_string::@1
(label) printf_string::@return
(struct printf_format_string) printf_string::format
(byte) printf_string::format_justify_left
(byte) printf_string::format_min_length
(signed byte) printf_string::len
(signed byte) printf_string::padding
(byte*) printf_string::str
(void()) printf_uchar((byte) printf_uchar::uvalue , (byte) printf_uchar::format_min_length , (byte) printf_uchar::format_justify_left , (byte) printf_uchar::format_sign_always , (byte) printf_uchar::format_zero_padding , (byte) printf_uchar::format_upper_case , (byte) printf_uchar::format_radix)
(label) printf_uchar::@1
(label) printf_uchar::@2
(label) printf_uchar::@return
(struct printf_format_number) printf_uchar::format
(byte) printf_uchar::format_justify_left
(byte) printf_uchar::format_min_length
(byte) printf_uchar::format_radix
(byte) printf_uchar::format_sign_always
(byte) printf_uchar::format_upper_case
(byte) printf_uchar::format_zero_padding
(byte) printf_uchar::uvalue
(byte) printf_uchar::uvalue#0 reg byte x 2000002.0
(byte) printf_uchar::uvalue#1 reg byte x 2000002.0
(byte) printf_uchar::uvalue#2 reg byte x 6000001.5
(void()) printf_uint((word) printf_uint::uvalue , (byte) printf_uint::format_min_length , (byte) printf_uint::format_justify_left , (byte) printf_uint::format_sign_always , (byte) printf_uint::format_zero_padding , (byte) printf_uint::format_upper_case , (byte) printf_uint::format_radix)
(label) printf_uint::@1
(label) printf_uint::@2
(label) printf_uint::@return
(struct printf_format_number) printf_uint::format
(byte) printf_uint::format_justify_left
(const byte) printf_uint::format_justify_left#0 format_justify_left = (byte) 0
(byte) printf_uint::format_min_length
(const byte) printf_uint::format_min_length#0 format_min_length = (byte) 0
(byte) printf_uint::format_radix
(byte) printf_uint::format_sign_always
(byte) printf_uint::format_upper_case
(const byte) printf_uint::format_upper_case#0 format_upper_case = (byte) 0
(byte) printf_uint::format_zero_padding
(const byte) printf_uint::format_zero_padding#0 format_zero_padding = (byte) 0
(word) printf_uint::uvalue
(const word) printf_uint::uvalue#0 uvalue = (byte) 8
(void()) printf_ulong((dword) printf_ulong::uvalue , (byte) printf_ulong::format_min_length , (byte) printf_ulong::format_justify_left , (byte) printf_ulong::format_sign_always , (byte) printf_ulong::format_zero_padding , (byte) printf_ulong::format_upper_case , (byte) printf_ulong::format_radix)
(label) printf_ulong::@1
(label) printf_ulong::@2
(label) printf_ulong::@return
(struct printf_format_number) printf_ulong::format
(byte) printf_ulong::format_justify_left
(byte) printf_ulong::format_min_length
(byte) printf_ulong::format_radix
(byte) printf_ulong::format_sign_always
(byte) printf_ulong::format_upper_case
(byte) printf_ulong::format_zero_padding
(dword) printf_ulong::uvalue
(dword) printf_ulong::uvalue#0 uvalue zp[4]:2 22.0
(dword) printf_ulong::uvalue#1 uvalue zp[4]:2 20002.0
(dword) printf_ulong::uvalue#2 uvalue zp[4]:2 55006.5
(void()) queens()
(byte~) queens::$2 reg byte a 2002.0
(label) queens::@1
(label) queens::@2
(label) queens::@3
(label) queens::@4
(label) queens::@5
(label) queens::@6
(label) queens::@7
(label) queens::@8
(label) queens::@9
(label) queens::@return
(byte) queens::row
(byte) queens::row#1 row zp[1]:28 2002.0
(byte) queens::row#10 row zp[1]:28 1144.0
(byte) queens::row#2 row zp[1]:28 2002.0
(word()) strlen((byte*) strlen::str)
(label) strlen::@1
(label) strlen::@2
(label) strlen::@return
(word) strlen::len
(word) strlen::len#1 len zp[2]:10 1.000000000001E12
(word) strlen::len#2 len zp[2]:10 5.0002500000075E11
(word) strlen::return
(word) strlen::return#2 return zp[2]:10 2.00000002E8
(byte*) strlen::str
(byte*) strlen::str#0 str zp[2]:18 2.000000000002E12
(byte*) strlen::str#3 str zp[2]:18 1.000000000001E12
(byte*()) strupr((byte*) strupr::str)
(byte~) strupr::$0 reg byte a 2.000000000002E12
(label) strupr::@1
(label) strupr::@2
(label) strupr::@3
(label) strupr::@return
(byte*) strupr::return
(byte*) strupr::src
(byte*) strupr::src#1 src zp[2]:16 2.000000000002E12
(byte*) strupr::src#2 src zp[2]:16 7.142857142864285E11
(byte*) strupr::str
(const byte*) strupr::str#0 str = (byte*)&(struct printf_buffer_number) printf_buffer+(const byte) OFFSET_STRUCT_PRINTF_BUFFER_NUMBER_DIGITS
(const byte*) tod_buffer[]  = (byte*) "00:00:00:00"
(void()) tod_init((byte) tod_init::tod_TENTHS , (byte) tod_init::tod_SEC , (byte) tod_init::tod_MIN , (byte) tod_init::tod_HOURS)
(label) tod_init::@return
(struct TIME_OF_DAY) tod_init::tod
(byte) tod_init::tod_HOURS
(byte) tod_init::tod_HOURS#0 reg byte y 37.33333333333333
(byte) tod_init::tod_MIN
(byte) tod_init::tod_MIN#0 reg byte x 22.4
(byte) tod_init::tod_SEC
(byte) tod_init::tod_SEC#0 tod_SEC zp[1]:27 16.0
(byte) tod_init::tod_TENTHS
(byte) tod_init::tod_TENTHS#0 tod_TENTHS zp[1]:26 12.444444444444443
(struct TIME_OF_DAY()) tod_read()
(label) tod_read::@return
(byte) tod_read::hours
(byte) tod_read::mins
(struct TIME_OF_DAY) tod_read::return
(byte) tod_read::return_HOURS
(byte) tod_read::return_HOURS#0 return_HOURS zp[1]:35 12.444444444444443
(byte) tod_read::return_HOURS#2 reg byte a 5.5
(byte) tod_read::return_MIN
(byte) tod_read::return_MIN#0 reg byte a 16.0
(byte) tod_read::return_MIN#2 return_MIN zp[1]:28 5.5
(byte) tod_read::return_SEC
(byte) tod_read::return_SEC#0 reg byte x 22.4
(byte) tod_read::return_SEC#2 reg byte x 5.5
(byte) tod_read::return_TENTHS
(byte) tod_read::return_TENTHS#0 reg byte y 37.33333333333333
(byte) tod_read::return_TENTHS#2 reg byte y 5.5
(byte) tod_read::secs
(byte) tod_read::tenths
(byte) tod_read::tod_HOURS
(byte) tod_read::tod_MIN
(byte) tod_read::tod_SEC
(byte) tod_read::tod_TENTHS
(byte*()) tod_str((byte) tod_str::tod_TENTHS , (byte) tod_str::tod_SEC , (byte) tod_str::tod_MIN , (byte) tod_str::tod_HOURS)
(byte~) tod_str::$0 reg byte a 202.0
(byte~) tod_str::$1 reg byte a 202.0
(byte~) tod_str::$10 reg byte a 202.0
(byte~) tod_str::$11 reg byte a 202.0
(byte~) tod_str::$12 reg byte a 202.0
(byte~) tod_str::$13 reg byte a 202.0
(byte~) tod_str::$14 reg byte a 202.0
(byte~) tod_str::$15 reg byte a 202.0
(byte~) tod_str::$2 reg byte a 202.0
(byte~) tod_str::$3 reg byte a 202.0
(byte~) tod_str::$4 reg byte a 202.0
(byte~) tod_str::$5 reg byte a 202.0
(byte~) tod_str::$6 reg byte a 202.0
(byte~) tod_str::$7 reg byte a 202.0
(byte~) tod_str::$8 reg byte a 202.0
(byte~) tod_str::$9 reg byte a 202.0
(label) tod_str::@return
(byte*) tod_str::return
(struct TIME_OF_DAY) tod_str::tod
(byte) tod_str::tod_HOURS
(byte) tod_str::tod_HOURS#0 reg byte x 53.25
(byte) tod_str::tod_MIN
(byte) tod_str::tod_MIN#0 reg byte y 19.363636363636363
(byte) tod_str::tod_SEC
(byte) tod_str::tod_SEC#0 tod_SEC zp[1]:30 11.833333333333332
(byte) tod_str::tod_TENTHS
(byte) tod_str::tod_TENTHS#0 tod_TENTHS zp[1]:29 8.52
(byte()) toupper((byte) toupper::ch)
(label) toupper::@1
(label) toupper::@2
(label) toupper::@return
(byte) toupper::ch
(byte) toupper::ch#0 reg byte a 1.7000000000001998E13
(byte) toupper::return
(byte) toupper::return#0 reg byte a 2.0000000000002E13
(byte) toupper::return#2 reg byte a 1.0333333333334666E13
(byte) toupper::return#3 reg byte a 2.000000000002E12
(void()) uctoa((byte) uctoa::value , (byte*) uctoa::buffer , (byte) uctoa::radix)
(label) uctoa::@1
(label) uctoa::@2
(label) uctoa::@3
(label) uctoa::@4
(label) uctoa::@5
(label) uctoa::@6
(label) uctoa::@7
(label) uctoa::@return
(byte*) uctoa::buffer
(byte*) uctoa::buffer#11 buffer zp[2]:16 3.3350000000500004E10
(byte*) uctoa::buffer#14 buffer zp[2]:16 1.500000000015E11
(byte*) uctoa::buffer#3 buffer zp[2]:16 2.00000002E8
(byte*) uctoa::buffer#4 buffer zp[2]:16 2.00000000002E11
(byte) uctoa::digit
(byte) uctoa::digit#1 digit zp[1]:13 2.00000000002E11
(byte) uctoa::digit#2 digit zp[1]:13 3.076923076953846E10
(byte) uctoa::digit_value
(byte) uctoa::digit_value#0 digit_value zp[1]:36 6.0000000000600006E10
(byte*) uctoa::digit_values
(byte) uctoa::max_digits
(byte) uctoa::radix
(byte) uctoa::started
(byte) uctoa::started#2 started zp[1]:14 6.0000000000600006E10
(byte) uctoa::started#4 started zp[1]:14 1.00000000001E11
(byte) uctoa::value
(byte) uctoa::value#0 reg byte x 1.00000000001E11
(byte) uctoa::value#1 reg byte x 5.5000001E7
(byte) uctoa::value#2 reg byte x 6.670000000100001E10
(byte) uctoa::value#6 reg byte x 1.500000000015E11
(byte()) uctoa_append((byte*) uctoa_append::buffer , (byte) uctoa_append::value , (byte) uctoa_append::sub)
(label) uctoa_append::@1
(label) uctoa_append::@2
(label) uctoa_append::@3
(label) uctoa_append::@return
(byte*) uctoa_append::buffer
(byte*) uctoa_append::buffer#0 buffer zp[2]:16 1.3750000000025E11
(byte) uctoa_append::digit
(byte) uctoa_append::digit#1 reg byte y 1.0E16
(byte) uctoa_append::digit#2 reg byte y 1.00005E16
(byte) uctoa_append::return
(byte) uctoa_append::return#0 reg byte x 2.00000000002E11
(byte) uctoa_append::sub
(byte) uctoa_append::sub#0 sub zp[1]:36 3.33335E15
(byte) uctoa_append::value
(byte) uctoa_append::value#0 reg byte x 3.666666666673334E11
(byte) uctoa_append::value#1 reg byte x 2.0E16
(byte) uctoa_append::value#2 reg byte x 5.000183333333334E15
(void()) ultoa((dword) ultoa::value , (byte*) ultoa::buffer , (byte) ultoa::radix)
(byte~) ultoa::$10 reg byte a 2.00000002E8
(byte~) ultoa::$11 reg byte a 2000002.0
(label) ultoa::@1
(label) ultoa::@2
(label) ultoa::@3
(label) ultoa::@4
(label) ultoa::@5
(label) ultoa::@6
(label) ultoa::@7
(label) ultoa::@return
(byte*) ultoa::buffer
(byte*) ultoa::buffer#11 buffer zp[2]:10 2.871428614285714E7
(byte*) ultoa::buffer#14 buffer zp[2]:10 1.500000015E8
(byte*) ultoa::buffer#3 buffer zp[2]:10 2000002.0
(byte*) ultoa::buffer#4 buffer zp[2]:10 2.00000002E8
(byte) ultoa::digit
(byte) ultoa::digit#1 digit zp[1]:35 2.00000002E8
(byte) ultoa::digit#2 digit zp[1]:35 2.857142885714286E7
(dword) ultoa::digit_value
(dword) ultoa::digit_value#0 digit_value zp[4]:31 6.0000000599999994E7
(dword*) ultoa::digit_values
(byte) ultoa::max_digits
(byte) ultoa::radix
(byte) ultoa::started
(byte) ultoa::started#2 reg byte x 5.00000005E7
(byte) ultoa::started#4 reg byte x 1.00000001E8
(dword) ultoa::value
(dword) ultoa::value#0 value zp[4]:6 1.00000001E8
(dword) ultoa::value#1 value zp[4]:6 550001.0
(dword) ultoa::value#2 value zp[4]:6 5.7285715E7
(dword) ultoa::value#6 value zp[4]:6 1.500000015E8
(dword()) ultoa_append((byte*) ultoa_append::buffer , (dword) ultoa_append::value , (dword) ultoa_append::sub)
(label) ultoa_append::@1
(label) ultoa_append::@2
(label) ultoa_append::@3
(label) ultoa_append::@return
(byte*) ultoa_append::buffer
(byte*) ultoa_append::buffer#0 buffer zp[2]:10 1.3750000025E8
(byte) ultoa_append::digit
(byte) ultoa_append::digit#1 reg byte x 1.000000000001E12
(byte) ultoa_append::digit#2 reg byte x 1.0005000000015E12
(dword) ultoa_append::return
(dword) ultoa_append::return#0 return zp[4]:6 2.00000002E8
(dword) ultoa_append::sub
(dword) ultoa_append::sub#0 sub zp[4]:31 3.333500000005E11
(dword) ultoa_append::value
(dword) ultoa_append::value#0 value zp[4]:6 3.666666673333334E8
(dword) ultoa_append::value#1 value zp[4]:6 2.000000000002E12
(dword) ultoa_append::value#2 value zp[4]:6 5.0018333333416675E11
(void()) utoa((word) utoa::value , (byte*) utoa::buffer , (byte) utoa::radix)
(byte~) utoa::$10 reg byte a 20002.0
(byte~) utoa::$11 reg byte a 2002.0
(label) utoa::@1
(label) utoa::@2
(label) utoa::@3
(label) utoa::@4
(label) utoa::@5
(label) utoa::@6
(label) utoa::@7
(label) utoa::@return
(byte*) utoa::buffer
(byte*) utoa::buffer#11 buffer zp[2]:18 3000.4285714285716
(byte*) utoa::buffer#14 buffer zp[2]:18 15001.5
(byte*) utoa::buffer#3 buffer zp[2]:18 2002.0
(byte*) utoa::buffer#4 buffer zp[2]:18 20002.0
(byte) utoa::digit
(byte) utoa::digit#1 digit zp[1]:15 20002.0
(byte) utoa::digit#2 digit zp[1]:15 2857.4285714285716
(word) utoa::digit_value
(word) utoa::digit_value#0 digit_value zp[2]:37 6000.6
(word*) utoa::digit_values
(byte) utoa::max_digits
(const byte) utoa::max_digits#1 max_digits = (byte) 5
(byte) utoa::radix
(byte) utoa::started
(byte) utoa::started#2 reg byte x 5000.5
(byte) utoa::started#4 reg byte x 10001.0
(word) utoa::value
(word) utoa::value#0 value zp[2]:16 10001.0
(word) utoa::value#2 value zp[2]:16 5714.857142857143
(word) utoa::value#6 value zp[2]:16 15001.5
(word()) utoa_append((byte*) utoa_append::buffer , (word) utoa_append::value , (word) utoa_append::sub)
(label) utoa_append::@1
(label) utoa_append::@2
(label) utoa_append::@3
(label) utoa_append::@return
(byte*) utoa_append::buffer
(byte*) utoa_append::buffer#0 buffer zp[2]:18 13750.25
(byte) utoa_append::digit
(byte) utoa_append::digit#1 reg byte x 1.0000001E7
(byte) utoa_append::digit#2 reg byte x 1.00500015E7
(word) utoa_append::return
(word) utoa_append::return#0 return zp[2]:16 20002.0
(word) utoa_append::sub
(word) utoa_append::sub#0 sub zp[2]:37 3335000.5
(word) utoa_append::value
(word) utoa_append::value#0 value zp[2]:16 36667.33333333333
(word) utoa_append::value#1 value zp[2]:16 2.0000002E7
(word) utoa_append::value#2 value zp[2]:16 5018334.166666666

reg byte a [ cputc::c#3 cputc::c#0 cputc::c#2 cputc::c#1 ]
reg byte x [ memset::c#4 ]
zp[4]:2 [ printf_ulong::uvalue#2 printf_ulong::uvalue#0 printf_ulong::uvalue#1 count#10 count#25 ]
reg byte x [ printf_number_buffer::format_min_length#3 ]
reg byte y [ printf_number_buffer::len#2 printf_number_buffer::len#0 printf_number_buffer::len#1 ]
reg byte a [ toupper::return#2 toupper::return#0 toupper::ch#0 ]
zp[4]:6 [ ultoa::value#2 ultoa::value#6 ultoa::value#1 ultoa::value#0 ultoa_append::value#2 ultoa_append::value#0 ultoa_append::value#1 ultoa_append::return#0 ]
reg byte x [ ultoa::started#2 ultoa::started#4 ]
zp[2]:10 [ ultoa::buffer#11 ultoa::buffer#14 ultoa::buffer#4 ultoa::buffer#3 ultoa_append::buffer#0 strlen::len#2 strlen::len#1 strlen::return#2 printf_number_buffer::$19 memcpy::source#2 memcpy::src#2 memcpy::src#4 memcpy::src#1 memset::str#3 memset::dst#2 memset::dst#4 memset::dst#1 ]
reg byte x [ ultoa_append::digit#2 ultoa_append::digit#1 ]
zp[1]:12 [ print::j#2 print::j#1 printf_number_buffer::format_zero_padding#10 ]
reg byte x [ printf_uchar::uvalue#2 printf_uchar::uvalue#1 printf_uchar::uvalue#0 ]
zp[1]:13 [ uctoa::digit#2 uctoa::digit#1 printf_number_buffer::buffer_sign#10 printf_number_buffer::buffer_sign#2 printf_number_buffer::buffer_sign#1 printf_number_buffer::buffer_sign#0 ]
reg byte x [ uctoa::value#2 uctoa::value#6 uctoa::value#1 uctoa::value#0 ]
zp[1]:14 [ uctoa::started#2 uctoa::started#4 printf_number_buffer::format_upper_case#10 ]
reg byte x [ uctoa_append::value#2 uctoa_append::value#0 uctoa_append::value#1 ]
reg byte y [ uctoa_append::digit#2 uctoa_append::digit#1 ]
reg byte y [ legal::i#10 legal::i#1 ]
reg byte a [ legal::return#4 ]
reg byte a [ legal::diff2_return#2 legal::diff2_return#0 legal::diff2_return#1 ]
zp[1]:15 [ utoa::digit#2 utoa::digit#1 printf_padding::length#6 printf_padding::length#1 printf_padding::length#2 printf_padding::length#0 ]
zp[2]:16 [ utoa::value#2 utoa::value#6 utoa::value#0 utoa_append::value#2 utoa_append::value#0 utoa_append::value#1 utoa_append::return#0 uctoa::buffer#11 uctoa::buffer#14 uctoa::buffer#4 uctoa::buffer#3 uctoa_append::buffer#0 strupr::src#2 strupr::src#1 cputs::s#13 cputs::s#14 cputs::s#0 ]
reg byte x [ utoa::started#2 utoa::started#4 ]
reg byte x [ utoa_append::digit#2 utoa_append::digit#1 ]
reg byte x [ clrscr::l#2 clrscr::l#1 ]
zp[2]:18 [ clrscr::line_text#5 clrscr::line_text#1 utoa::buffer#11 utoa::buffer#14 utoa::buffer#4 utoa::buffer#3 utoa_append::buffer#0 strlen::str#3 strlen::str#0 memcpy::destination#2 memcpy::dst#2 memcpy::dst#4 memcpy::dst#1 ]
reg byte y [ clrscr::c#2 clrscr::c#1 ]
zp[1]:20 [ conio_cursor_x ]
zp[1]:21 [ conio_cursor_y ]
zp[2]:22 [ conio_line_text clrscr::line_cols#5 clrscr::line_cols#1 ]
zp[2]:24 [ conio_line_color ]
zp[1]:26 [ tod_init::tod_TENTHS#0 printf_padding::pad#7 ]
zp[1]:27 [ tod_init::tod_SEC#0 printf_padding::i#2 printf_padding::i#1 ]
reg byte x [ tod_init::tod_MIN#0 ]
reg byte y [ tod_init::tod_HOURS#0 ]
reg byte y [ tod_read::return_TENTHS#2 ]
reg byte x [ tod_read::return_SEC#2 ]
zp[1]:28 [ tod_read::return_MIN#2 queens::row#10 queens::row#1 queens::row#2 legal::row#0 ]
reg byte a [ tod_read::return_HOURS#2 ]
zp[1]:29 [ tod_str::tod_TENTHS#0 print::i#2 print::i#1 ]
zp[1]:30 [ tod_str::tod_SEC#0 print::i1#2 print::i1#1 ]
reg byte y [ tod_str::tod_MIN#0 ]
reg byte x [ tod_str::tod_HOURS#0 ]
reg byte a [ cputs::c#1 ]
reg byte a [ toupper::return#3 ]
reg byte a [ strupr::$0 ]
reg byte a [ ultoa::$11 ]
reg byte a [ ultoa::$10 ]
zp[4]:31 [ ultoa::digit_value#0 ultoa_append::sub#0 ]
reg byte a [ tod_str::$0 ]
reg byte a [ tod_str::$1 ]
reg byte a [ tod_str::$2 ]
reg byte a [ tod_str::$3 ]
reg byte a [ tod_str::$4 ]
reg byte a [ tod_str::$5 ]
reg byte a [ tod_str::$6 ]
reg byte a [ tod_str::$7 ]
reg byte a [ tod_str::$8 ]
reg byte a [ tod_str::$9 ]
reg byte a [ tod_str::$10 ]
reg byte a [ tod_str::$11 ]
reg byte a [ tod_str::$12 ]
reg byte a [ tod_str::$13 ]
reg byte a [ tod_str::$14 ]
reg byte a [ tod_str::$15 ]
reg byte a [ tod_read::return_MIN#0 ]
reg byte x [ tod_read::return_SEC#0 ]
reg byte y [ tod_read::return_TENTHS#0 ]
zp[1]:35 [ legal::column#0 tod_read::return_HOURS#0 ultoa::digit#2 ultoa::digit#1 printf_number_buffer::format_justify_left#10 ]
reg byte a [ legal::return#0 ]
reg byte a [ queens::$2 ]
zp[1]:36 [ uctoa::digit_value#0 uctoa_append::sub#0 legal::diff1_return#2 legal::diff1_return#0 legal::diff1_return#1 printf_number_buffer::padding#10 printf_number_buffer::padding#1 ]
reg byte x [ uctoa_append::return#0 ]
reg byte x [ legal::$0 ]
reg byte a [ legal::diff1_a#0 ]
reg byte a [ utoa::$11 ]
reg byte a [ utoa::$10 ]
zp[2]:37 [ utoa::digit_value#0 utoa_append::sub#0 memcpy::src_end#0 memset::end#0 ]
mem[12] [ printf_buffer ]
mem[4] [ TOD_ZERO ]
