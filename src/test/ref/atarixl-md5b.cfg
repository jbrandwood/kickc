
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] line = (byte*) 1024
  [2] idx = 0
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [3] phi()
  [4] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [5] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [6] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [7] main::s#2 = phi( main/(byte*) 1024, main::@2/main::s#1 )
  [8] if(main::s#2<$800) goto main::@2
  to:main::@3
main::@3: scope:[main]  from main::@1
  [9] phi()
  [10] call md5 
  to:main::@4
main::@4: scope:[main]  from main::@3 main::@4
  [11] phi()
  to:main::@4
main::@2: scope:[main]  from main::@1
  [12] *main::s#2 = ' '
  [13] main::s#1 = ++ main::s#2
  to:main::@1

void md5()
md5: scope:[md5]  from main::@3
  [14] phi()
  to:md5::@1
md5::@1: scope:[md5]  from md5 md5::@6
  [15] md5::a#1 = phi( md5/md5::c#0, md5::@6/md5::a#6 )
  [15] md5::b#2 = phi( md5/$ef, md5::@6/md5::b#8 )
  [15] md5::a#2 = phi( md5/$67, md5::@6/md5::a#5 )
  [15] md5::i#2 = phi( md5/0, md5::@6/md5::i#1 )
  [16] if(md5::i#2<4) goto md5::@2
  to:md5::@return
md5::@return: scope:[md5]  from md5::@1
  [17] return 
  to:@return
md5::@2: scope:[md5]  from md5::@1
  [18] print::i#0 = md5::i#2
  [19] print::a#0 = md5::a#2
  [20] print::b#0 = md5::b#2
  [21] print::c#0 = md5::a#1
  [22] call print 
  to:md5::@5
md5::@5: scope:[md5]  from md5::@2
  [23] md5::$2 = md5::i#2 & 1
  [24] if(0!=md5::$2) goto md5::@3
  to:md5::@4
md5::@4: scope:[md5]  from md5::@5
  [25] phi()
  to:md5::@3
md5::@3: scope:[md5]  from md5::@4 md5::@5
  [26] md5::b#1 = md5::b#2 + 1
  [27] print::i#1 = md5::i#2
  [28] print::a#1 = md5::a#1
  [29] print::b#1 = md5::b#1
  [30] print::c#1 = md5::b#2
  [31] call print 
  to:md5::@6
md5::@6: scope:[md5]  from md5::@3
  [32] md5::i#1 = ++ md5::i#2
  [33] md5::a#5 = md5::a#1
  [34] md5::b#8 = md5::b#1
  [35] md5::a#6 = md5::b#2
  to:md5::@1

void print(byte print::i , byte print::a , byte print::b , byte print::c)
print: scope:[print]  from md5::@2 md5::@3
  [36] print::c#2 = phi( md5::@2/print::c#0, md5::@3/print::c#1 )
  [36] print::b#2 = phi( md5::@2/print::b#0, md5::@3/print::b#1 )
  [36] print::a#2 = phi( md5::@2/print::a#0, md5::@3/print::a#1 )
  [36] print::print321_l#0 = phi( md5::@2/print::i#0, md5::@3/print::i#1 )
  to:print::print321
print::print321: scope:[print]  from print
  [37] print::print321_$0 = print::print321_l#0 >> 4
  [38] line[idx] = HEX[print::print321_$0]
  [39] idx = ++ idx
  [40] print::print321_$1 = print::print321_l#0 & $f
  [41] line[idx] = HEX[print::print321_$1]
  [42] idx = ++ idx
  [43] line[idx] = ' '
  [44] idx = ++ idx
  to:print::print322
print::print322: scope:[print]  from print::print321
  [45] print::print322_$0 = print::a#2 >> 4
  [46] line[idx] = HEX[print::print322_$0]
  [47] idx = ++ idx
  [48] print::print322_$1 = print::a#2 & $f
  [49] line[idx] = HEX[print::print322_$1]
  [50] idx = ++ idx
  [51] line[idx] = ' '
  [52] idx = ++ idx
  to:print::print323
print::print323: scope:[print]  from print::print322
  [53] print::print323_$0 = print::b#2 >> 4
  [54] line[idx] = HEX[print::print323_$0]
  [55] idx = ++ idx
  [56] print::print323_$1 = print::b#2 & $f
  [57] line[idx] = HEX[print::print323_$1]
  [58] idx = ++ idx
  [59] line[idx] = ' '
  [60] idx = ++ idx
  to:print::print324
print::print324: scope:[print]  from print::print323
  [61] print::print324_$0 = print::c#2 >> 4
  [62] line[idx] = HEX[print::print324_$0]
  [63] idx = ++ idx
  [64] print::print324_$1 = print::c#2 & $f
  [65] line[idx] = HEX[print::print324_$1]
  [66] idx = ++ idx
  [67] line[idx] = ' '
  [68] idx = ++ idx
  to:print::println1
print::println1: scope:[print]  from print::print324
  [69] line = line + $28
  [70] idx = 0
  to:print::@return
print::@return: scope:[print]  from print::println1
  [71] return 
  to:@return
