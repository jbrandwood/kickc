@begin: scope:[]  from
  to:@1
@1: scope:[]  from @begin
  [0] call main param-assignment [ ] ( )
  to:@end
@end: scope:[]  from @1
main: scope:[main]  from @1
  [1] phi() [ ] ( main:0 [ ] )
  to:main::@1
main::@1: scope:[main]  from main main::@5
  [2] (byte) main::j#6 ← phi( main/(byte/signed byte/word/signed word) 0 main::@5/(byte) main::j#1 ) [ main::j#6 ] ( main:0 [ main::j#6 ] )
  to:main::@2
main::@2: scope:[main]  from main::@1 main::@4
  [3] (byte) main::i#4 ← phi( main::@1/(byte/signed byte/word/signed word) 0 main::@4/(byte) main::i#1 ) [ main::j#6 main::i#4 ] ( main:0 [ main::j#6 main::i#4 ] )
  to:main::@3
main::@3: scope:[main]  from main::@2 main::@3
  [4] (byte) main::k#2 ← phi( main::@2/(byte/signed byte/word/signed word) 0 main::@3/(byte) main::k#1 ) [ main::j#6 main::i#4 main::k#2 ] ( main:0 [ main::j#6 main::i#4 main::k#2 ] )
  [5] (byte*) main::zpptr2#0 ← (const byte*) main::zpptr#0 + (byte) main::i#4 [ main::j#6 main::i#4 main::k#2 main::zpptr2#0 ] ( main:0 [ main::j#6 main::i#4 main::k#2 main::zpptr2#0 ] )
  [6] (word) main::w#0 ← ((word)) (byte) main::j#6 [ main::j#6 main::i#4 main::k#2 main::zpptr2#0 main::w#0 ] ( main:0 [ main::j#6 main::i#4 main::k#2 main::zpptr2#0 main::w#0 ] )
  [7] (byte*) main::zpptr2#1 ← (byte*) main::zpptr2#0 + (word) main::w#0 [ main::j#6 main::i#4 main::k#2 main::zpptr2#1 ] ( main:0 [ main::j#6 main::i#4 main::k#2 main::zpptr2#1 ] )
  [8] *((byte*) main::zpptr2#1) ← (byte) main::k#2 [ main::j#6 main::i#4 main::k#2 ] ( main:0 [ main::j#6 main::i#4 main::k#2 ] )
  [9] (byte) main::k#1 ← ++ (byte) main::k#2 [ main::j#6 main::i#4 main::k#1 ] ( main:0 [ main::j#6 main::i#4 main::k#1 ] )
  [10] if((byte) main::k#1!=(byte/signed byte/word/signed word) 11) goto main::@3 [ main::j#6 main::i#4 main::k#1 ] ( main:0 [ main::j#6 main::i#4 main::k#1 ] )
  to:main::@4
main::@4: scope:[main]  from main::@3
  [11] (byte) main::i#1 ← ++ (byte) main::i#4 [ main::j#6 main::i#1 ] ( main:0 [ main::j#6 main::i#1 ] )
  [12] if((byte) main::i#1!=(byte/signed byte/word/signed word) 11) goto main::@2 [ main::j#6 main::i#1 ] ( main:0 [ main::j#6 main::i#1 ] )
  to:main::@5
main::@5: scope:[main]  from main::@4
  [13] (byte) main::j#1 ← ++ (byte) main::j#6 [ main::j#1 ] ( main:0 [ main::j#1 ] )
  [14] if((byte) main::j#1!=(byte/signed byte/word/signed word) 11) goto main::@1 [ main::j#1 ] ( main:0 [ main::j#1 ] )
  to:main::@return
main::@return: scope:[main]  from main::@5
  [15] return  [ ] ( main:0 [ ] )
  to:@return
