
void main()
main: scope:[main]  from
  [0] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@2
  [1] idx#25 = phi( main/0, main::@2/idx#22 )
  [1] main::c#2 = phi( main/0, main::@2/main::c#1 )
  [2] outsw::c#0 = main::c#2
  [3] call outsw 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [4] main::c#1 = ++ main::c#2
  [5] if(main::c#1!=$28) goto main::@1
  to:main::@return
main::@return: scope:[main]  from main::@2
  [6] return 
  to:@return

void outsw(byte outsw::c)
outsw: scope:[outsw]  from main::@1
  [7] phi()
  [8] call out 
  to:outsw::@1
outsw::@1: scope:[outsw]  from outsw
  [9] outw::c#0 = outsw::c#0
  [10] call outw 
  to:outsw::@return
outsw::@return: scope:[outsw]  from outsw::@1
  [11] return 
  to:@return

void out(byte out::c)
out: scope:[out]  from outsw outw outw::@1
  [12] out::c#3 = phi( outsw/'-', outw/out::c#1, outw::@1/out::c#2 )
  [12] idx#21 = phi( outsw/idx#25, outw/idx#22, outw::@1/idx#22 )
  [13] idx#22 = ++ idx#21
  [14] SCREEN[idx#22] = out::c#3
  to:out::@return
out::@return: scope:[out]  from out
  [15] return 
  to:@return

void outw(byte outw::c)
outw: scope:[outw]  from outsw::@1
  [16] out::c#1 = outw::c#0 << 4
  [17] call out 
  to:outw::@1
outw::@1: scope:[outw]  from outw
  [18] out::c#2 = outw::c#0 & $f
  [19] call out 
  to:outw::@return
outw::@return: scope:[outw]  from outw::@1
  [20] return 
  to:@return
