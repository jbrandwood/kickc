(const nomodify byte*) BASIC_ROM = (byte*) 40960
(const nomodify byte*) IO_RAM = (byte*) 53248
(const nomodify byte*) KERNAL_ROM = (byte*) 57344
(byte) MOS6526_CIA::INTERRUPT
(byte) MOS6526_CIA::PORT_A
(byte) MOS6526_CIA::PORT_A_DDR
(byte) MOS6526_CIA::PORT_B
(byte) MOS6526_CIA::PORT_B_DDR
(byte) MOS6526_CIA::SERIAL_DATA
(word) MOS6526_CIA::TIMER_A
(byte) MOS6526_CIA::TIMER_A_CONTROL
(word) MOS6526_CIA::TIMER_B
(byte) MOS6526_CIA::TIMER_B_CONTROL
(byte) MOS6526_CIA::TOD_10THS
(byte) MOS6526_CIA::TOD_HOURS
(byte) MOS6526_CIA::TOD_MIN
(byte) MOS6526_CIA::TOD_SEC
(byte) MOS6569_VICII::BG_COLOR
(byte) MOS6569_VICII::BG_COLOR1
(byte) MOS6569_VICII::BG_COLOR2
(byte) MOS6569_VICII::BG_COLOR3
(byte) MOS6569_VICII::BORDER_COLOR
(byte) MOS6569_VICII::CONTROL1
(byte) MOS6569_VICII::CONTROL2
(byte) MOS6569_VICII::IRQ_ENABLE
(byte) MOS6569_VICII::IRQ_STATUS
(byte) MOS6569_VICII::LIGHTPEN_X
(byte) MOS6569_VICII::LIGHTPEN_Y
(byte) MOS6569_VICII::MEMORY
(byte) MOS6569_VICII::RASTER
(byte) MOS6569_VICII::SPRITE0_COLOR
(byte) MOS6569_VICII::SPRITE0_X
(byte) MOS6569_VICII::SPRITE0_Y
(byte) MOS6569_VICII::SPRITE1_COLOR
(byte) MOS6569_VICII::SPRITE1_X
(byte) MOS6569_VICII::SPRITE1_Y
(byte) MOS6569_VICII::SPRITE2_COLOR
(byte) MOS6569_VICII::SPRITE2_X
(byte) MOS6569_VICII::SPRITE2_Y
(byte) MOS6569_VICII::SPRITE3_COLOR
(byte) MOS6569_VICII::SPRITE3_X
(byte) MOS6569_VICII::SPRITE3_Y
(byte) MOS6569_VICII::SPRITE4_COLOR
(byte) MOS6569_VICII::SPRITE4_X
(byte) MOS6569_VICII::SPRITE4_Y
(byte) MOS6569_VICII::SPRITE5_COLOR
(byte) MOS6569_VICII::SPRITE5_X
(byte) MOS6569_VICII::SPRITE5_Y
(byte) MOS6569_VICII::SPRITE6_COLOR
(byte) MOS6569_VICII::SPRITE6_X
(byte) MOS6569_VICII::SPRITE6_Y
(byte) MOS6569_VICII::SPRITE7_COLOR
(byte) MOS6569_VICII::SPRITE7_X
(byte) MOS6569_VICII::SPRITE7_Y
(byte) MOS6569_VICII::SPRITES_BG_COLLISION
(byte) MOS6569_VICII::SPRITES_COLLISION
(byte) MOS6569_VICII::SPRITES_ENABLE
(byte) MOS6569_VICII::SPRITES_EXPAND_X
(byte) MOS6569_VICII::SPRITES_EXPAND_Y
(byte) MOS6569_VICII::SPRITES_MC
(byte) MOS6569_VICII::SPRITES_MCOLOR1
(byte) MOS6569_VICII::SPRITES_MCOLOR2
(byte) MOS6569_VICII::SPRITES_PRIORITY
(byte) MOS6569_VICII::SPRITES_XMSB
(byte) MOS6581_SID::CH1_ATTACK_DECAY
(byte) MOS6581_SID::CH1_CONTROL
(word) MOS6581_SID::CH1_FREQ
(word) MOS6581_SID::CH1_PULSE_WIDTH
(byte) MOS6581_SID::CH1_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH2_ATTACK_DECAY
(byte) MOS6581_SID::CH2_CONTROL
(word) MOS6581_SID::CH2_FREQ
(word) MOS6581_SID::CH2_PULSE_WIDTH
(byte) MOS6581_SID::CH2_SUSTAIN_RELEASE
(byte) MOS6581_SID::CH3_ATTACK_DECAY
(byte) MOS6581_SID::CH3_CONTROL
(byte) MOS6581_SID::CH3_ENV
(word) MOS6581_SID::CH3_FREQ
(byte) MOS6581_SID::CH3_OSC
(word) MOS6581_SID::CH3_PULSE_WIDTH
(byte) MOS6581_SID::CH3_SUSTAIN_RELEASE
(byte) MOS6581_SID::FILTER_CUTOFF_HIGH
(byte) MOS6581_SID::FILTER_CUTOFF_LOW
(byte) MOS6581_SID::FILTER_SETUP
(byte) MOS6581_SID::POT_X
(byte) MOS6581_SID::POT_Y
(byte) MOS6581_SID::VOLUME_FILTER_MODE
(const nomodify byte*) PROCPORT = (byte*) 1
(const nomodify byte) PROCPORT_BASIC_KERNEL_IO = (byte) 7
(const nomodify byte*) PROCPORT_DDR = (byte*) 0
(const nomodify byte) PROCPORT_DDR_MEMORY_MASK = (byte) 7
(const nomodify byte) PROCPORT_KERNEL_IO = (byte) 6
(const nomodify byte) PROCPORT_RAM_ALL = (byte) 0
(const nomodify byte) PROCPORT_RAM_CHARROM = (byte) 1
(const nomodify byte) PROCPORT_RAM_IO = (byte) 5
(const byte) RADIX::BINARY = (number) 2
(const byte) RADIX::DECIMAL = (number) $a
(const byte) RADIX::HEXADECIMAL = (number) $10
(const byte) RADIX::OCTAL = (number) 8
(const nomodify byte*) SCREEN = (byte*) 1024
(void()) main()
(label) main::@1
(label) main::@10
(label) main::@11
(label) main::@12
(label) main::@13
(label) main::@14
(label) main::@15
(label) main::@16
(label) main::@17
(label) main::@18
(label) main::@19
(label) main::@2
(label) main::@20
(label) main::@21
(label) main::@22
(label) main::@23
(label) main::@24
(label) main::@25
(label) main::@26
(label) main::@27
(label) main::@3
(label) main::@4
(label) main::@5
(label) main::@6
(label) main::@7
(label) main::@8
(label) main::@9
(const byte*) main::str[(byte) $28]  = (byte*) "ddr port ddr2 $00 $01 $a000 $d000 $e000"
(void*()) memset((void*) memset::str , (byte) memset::c , (word) memset::num)
(label) memset::@1
(label) memset::@2
(label) memset::@return
(byte) memset::c
(const byte) memset::c#0 c = (byte) ' '
(byte*) memset::dst
(byte*) memset::dst#1 dst zp[2]:8 2002.0
(byte*) memset::dst#2 dst zp[2]:8 1334.6666666666667
(byte*) memset::end
(const byte*) memset::end#0 end = (byte*)(const void*) memset::str#0+(const word) memset::num#0
(word) memset::num
(const word) memset::num#0 num = (word) $3e8
(void*) memset::return
(void*) memset::str
(const void*) memset::str#0 str = (void*)(const byte*) print_screen#0
(void()) print_char((byte) print_char::ch)
(label) print_char::@return
(byte) print_char::ch
(byte) print_char::ch#0 reg byte a 2002.0
(byte) print_char::ch#1 reg byte a 202.0
(byte) print_char::ch#2 reg byte a 202.0
(byte) print_char::ch#3 reg byte a 11204.0
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp[2]:4 88.24
(byte*) print_char_cursor#118 print_char_cursor zp[2]:4 253.5
(byte*) print_char_cursor#124 print_char_cursor zp[2]:4 189.0
(byte*) print_char_cursor#126 print_char_cursor zp[2]:4 22.0
(byte*) print_char_cursor#66 print_char_cursor zp[2]:4 10602.5
(byte*) print_char_cursor#67 print_char_cursor zp[2]:4 447.64000000000004
(void()) print_cls()
(label) print_cls::@return
(const to_nomodify byte*) print_hextab[]  = (byte*) "0123456789abcdef"z
(byte*) print_line_cursor
(byte*) print_line_cursor#0 print_line_cursor zp[2]:8 33.61111111111111
(byte*) print_line_cursor#35 print_line_cursor zp[2]:8 2103.0
(byte*) print_line_cursor#69 print_line_cursor zp[2]:8 112.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(const byte*) print_screen#0 print_screen = (byte*) 1024
(void()) print_str((byte*) print_str::str)
(label) print_str::@1
(label) print_str::@2
(label) print_str::@3
(label) print_str::@return
(byte*) print_str::str
(byte*) print_str::str#0 str zp[2]:6 2002.0
(byte*) print_str::str#10 str zp[2]:6 1026.25
(byte*) print_str::str#13 str zp[2]:6 101.0
(void()) print_uchar((byte) print_uchar::b)
(byte~) print_uchar::$0 reg byte a 202.0
(byte~) print_uchar::$2 reg byte x 202.0
(label) print_uchar::@1
(label) print_uchar::@return
(byte) print_uchar::b
(byte) print_uchar::b#0 reg byte x 22.0
(byte) print_uchar::b#1 reg byte x 22.0
(byte) print_uchar::b#2 reg byte x 22.0
(byte) print_uchar::b#3 reg byte x 22.0
(byte) print_uchar::b#4 reg byte x 22.0
(byte) print_uchar::b#5 reg byte x 22.0
(byte) print_uchar::b#6 reg byte x 22.0
(byte) print_uchar::b#7 reg byte x 22.0
(byte) print_uchar::b#8 reg byte x 72.5
(void()) testProcport((byte) testProcport::ddr , (byte) testProcport::port , (byte) testProcport::ddr2)
(label) testProcport::@1
(label) testProcport::@10
(label) testProcport::@11
(label) testProcport::@12
(label) testProcport::@13
(label) testProcport::@14
(label) testProcport::@15
(label) testProcport::@16
(label) testProcport::@2
(label) testProcport::@3
(label) testProcport::@4
(label) testProcport::@5
(label) testProcport::@6
(label) testProcport::@7
(label) testProcport::@8
(label) testProcport::@9
(label) testProcport::@return
(byte) testProcport::ddr
(byte) testProcport::ddr#23 reg byte x 2.75
(byte) testProcport::ddr2
(byte) testProcport::ddr2#23 ddr2 zp[1]:3 1.375
(byte) testProcport::port
(byte) testProcport::port#23 port zp[1]:2 1.8333333333333333
(const byte*) testProcport::str[(byte) 2]  = (byte*) " "
(const byte*) testProcport::str1[(byte) 4]  = (byte*) "   "
(const byte*) testProcport::str3[(byte) 3]  = (byte*) "  "
(const byte*) testProcport::str5[(byte) 5]  = (byte*) "    "

reg byte x [ testProcport::ddr#23 ]
zp[1]:2 [ testProcport::port#23 ]
zp[1]:3 [ testProcport::ddr2#23 ]
reg byte x [ print_uchar::b#8 print_uchar::b#0 print_uchar::b#5 print_uchar::b#6 print_uchar::b#7 print_uchar::b#1 print_uchar::b#2 print_uchar::b#3 print_uchar::b#4 ]
reg byte a [ print_char::ch#3 print_char::ch#0 print_char::ch#1 print_char::ch#2 ]
zp[2]:4 [ print_char_cursor#124 print_char_cursor#126 print_char_cursor#66 print_char_cursor#118 print_char_cursor#1 print_char_cursor#67 ]
zp[2]:6 [ print_str::str#10 print_str::str#13 print_str::str#0 ]
zp[2]:8 [ memset::dst#2 memset::dst#1 print_line_cursor#35 print_line_cursor#69 print_line_cursor#0 ]
reg byte a [ print_uchar::$0 ]
reg byte x [ print_uchar::$2 ]
