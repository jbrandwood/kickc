
void __start()
__start: scope:[__start]  from
  [0] phi()
  to:__start::__init1
__start::__init1: scope:[__start]  from __start
  [1] conio_cursor_x = 0
  [2] conio_cursor_y = 0
  [3] conio_line_text = DEFAULT_SCREEN
  [4] conio_line_color = COLORRAM
  [5] conio_textcolor = LIGHT_BLUE
  [6] conio_scroll_enable = 1
  [7] XSize = 0
  [8] YSize = 0
  [9] call conio_c64_init 
  to:__start::@1
__start::@1: scope:[__start]  from __start::__init1
  [10] phi()
  [11] call main 
  to:__start::@return
__start::@return: scope:[__start]  from __start::@1
  [12] return 
  to:@return

void conio_c64_init()
conio_c64_init: scope:[conio_c64_init]  from __start::__init1
  [13] conio_c64_init::line#0 = *conio_c64_init::BASIC_CURSOR_LINE
  [14] if(conio_c64_init::line#0<$19) goto conio_c64_init::@2
  to:conio_c64_init::@1
conio_c64_init::@2: scope:[conio_c64_init]  from conio_c64_init
  [15] phi()
  to:conio_c64_init::@1
conio_c64_init::@1: scope:[conio_c64_init]  from conio_c64_init conio_c64_init::@2
  [16] conio_c64_init::line#2 = phi( conio_c64_init::@2/conio_c64_init::line#0, conio_c64_init/$19-1 )
  [17] gotoxy::y#4 = conio_c64_init::line#2
  [18] call gotoxy 
  to:conio_c64_init::@return
conio_c64_init::@return: scope:[conio_c64_init]  from conio_c64_init::@1
  [19] return 
  to:@return

void main()
main: scope:[main]  from __start::@1
  [20] *VIC_MEMORY = $17
  [21] call screensize 
  to:main::@3
main::@3: scope:[main]  from main
  [22] phi()
  [23] call MakeNiceScreen 
  to:main::@1
main::@1: scope:[main]  from main::@3 main::@4
  [24] phi()
  [25] call kbhit 
  [26] kbhit::return#2 = kbhit::return#0
  to:main::@4
main::@4: scope:[main]  from main::@1
  [27] main::$3 = kbhit::return#2
  [28] if(0==main::$3) goto main::@1
  to:main::@2
main::@2: scope:[main]  from main::@4
  [29] phi()
  [30] call clrscr 
  to:main::@return
main::@return: scope:[main]  from main::@2
  [31] return 
  to:@return

void gotoxy(byte gotoxy::x , byte gotoxy::y)
gotoxy: scope:[gotoxy]  from conio_c64_init::@1 cputcxy cputsxy cscroll::@2 cvline::@3 cvlinexy
  [32] gotoxy::x#10 = phi( conio_c64_init::@1/0, cputcxy/0, cputsxy/gotoxy::x#3, cscroll::@2/0, cvline::@3/gotoxy::x#5, cvlinexy/gotoxy::x#6 )
  [32] gotoxy::y#7 = phi( conio_c64_init::@1/gotoxy::y#4, cputcxy/gotoxy::y#2, cputsxy/gotoxy::y#3, cscroll::@2/0, cvline::@3/gotoxy::y#5, cvlinexy/1 )
  [33] if(gotoxy::y#7<$19+1) goto gotoxy::@3
  to:gotoxy::@1
gotoxy::@3: scope:[gotoxy]  from gotoxy
  [34] phi()
  to:gotoxy::@1
gotoxy::@1: scope:[gotoxy]  from gotoxy gotoxy::@3
  [35] gotoxy::y#10 = phi( gotoxy::@3/gotoxy::y#7, gotoxy/0 )
  [36] if(gotoxy::x#10<$28) goto gotoxy::@4
  to:gotoxy::@2
gotoxy::@4: scope:[gotoxy]  from gotoxy::@1
  [37] phi()
  to:gotoxy::@2
gotoxy::@2: scope:[gotoxy]  from gotoxy::@1 gotoxy::@4
  [38] gotoxy::x#8 = phi( gotoxy::@4/gotoxy::x#10, gotoxy::@1/0 )
  [39] conio_cursor_x = gotoxy::x#8
  [40] conio_cursor_y = gotoxy::y#10
  [41] gotoxy::$7 = (word)gotoxy::y#10
  [42] gotoxy::$8 = gotoxy::$7 << 2
  [43] gotoxy::$9 = gotoxy::$8 + gotoxy::$7
  [44] gotoxy::line_offset#0 = gotoxy::$9 << 3
  [45] gotoxy::$5 = DEFAULT_SCREEN + gotoxy::line_offset#0
  [46] conio_line_text = gotoxy::$5
  [47] gotoxy::$6 = COLORRAM + gotoxy::line_offset#0
  [48] conio_line_color = gotoxy::$6
  to:gotoxy::@return
gotoxy::@return: scope:[gotoxy]  from gotoxy::@2
  [49] return 
  to:@return

void screensize(byte* screensize::x , byte* screensize::y)
screensize: scope:[screensize]  from main
  [50] *screensize::x#0 = $28
  [51] *screensize::y#0 = $19
  to:screensize::@return
screensize::@return: scope:[screensize]  from screensize
  [52] return 
  to:@return

void MakeNiceScreen()
MakeNiceScreen: scope:[MakeNiceScreen]  from main::@3
  [53] phi()
  [54] call scroll 
  to:MakeNiceScreen::@3
MakeNiceScreen::@3: scope:[MakeNiceScreen]  from MakeNiceScreen
  [55] phi()
  [56] call textcolor 
  to:MakeNiceScreen::@4
MakeNiceScreen::@4: scope:[MakeNiceScreen]  from MakeNiceScreen::@3
  [57] phi()
  [58] call bordercolor 
  to:MakeNiceScreen::@5
MakeNiceScreen::@5: scope:[MakeNiceScreen]  from MakeNiceScreen::@4
  [59] phi()
  [60] call bgcolor 
  to:MakeNiceScreen::@6
MakeNiceScreen::@6: scope:[MakeNiceScreen]  from MakeNiceScreen::@5
  [61] phi()
  [62] call clrscr 
  to:MakeNiceScreen::@7
MakeNiceScreen::@7: scope:[MakeNiceScreen]  from MakeNiceScreen::@6
  [63] phi()
  [64] call cputcxy 
  to:MakeNiceScreen::@8
MakeNiceScreen::@8: scope:[MakeNiceScreen]  from MakeNiceScreen::@7
  [65] chline::length#1 = XSize - 2
  [66] call chline 
  to:MakeNiceScreen::@9
MakeNiceScreen::@9: scope:[MakeNiceScreen]  from MakeNiceScreen::@8
  [67] phi()
  [68] call cputc 
  to:MakeNiceScreen::@10
MakeNiceScreen::@10: scope:[MakeNiceScreen]  from MakeNiceScreen::@9
  [69] phi()
  [70] call cvlinexy 
  to:MakeNiceScreen::@11
MakeNiceScreen::@11: scope:[MakeNiceScreen]  from MakeNiceScreen::@10
  [71] phi()
  [72] call cputc 
  to:MakeNiceScreen::@12
MakeNiceScreen::@12: scope:[MakeNiceScreen]  from MakeNiceScreen::@11
  [73] chline::length#2 = XSize - 2
  [74] call chline 
  to:MakeNiceScreen::@13
MakeNiceScreen::@13: scope:[MakeNiceScreen]  from MakeNiceScreen::@12
  [75] phi()
  [76] call cputc 
  to:MakeNiceScreen::@14
MakeNiceScreen::@14: scope:[MakeNiceScreen]  from MakeNiceScreen::@13
  [77] cvlinexy::x#1 = XSize - 1
  [78] call cvlinexy 
  to:MakeNiceScreen::@15
MakeNiceScreen::@15: scope:[MakeNiceScreen]  from MakeNiceScreen::@14
  [79] phi()
  [80] call MakeTeeLine 
  to:MakeNiceScreen::@16
MakeNiceScreen::@16: scope:[MakeNiceScreen]  from MakeNiceScreen::@15
  [81] phi()
  [82] call MakeTeeLine 
  to:MakeNiceScreen::@1
MakeNiceScreen::@1: scope:[MakeNiceScreen]  from MakeNiceScreen::@16 MakeNiceScreen::@18
  [83] MakeNiceScreen::T#3 = phi( MakeNiceScreen::@16/MakeNiceScreen::Text, MakeNiceScreen::@18/MakeNiceScreen::T#2 )
  [83] MakeNiceScreen::I#3 = phi( MakeNiceScreen::@16/0, MakeNiceScreen::@18/MakeNiceScreen::I#2 )
  [84] if(MakeNiceScreen::I#3<$c*$29/$29) goto MakeNiceScreen::@2
  to:MakeNiceScreen::@return
MakeNiceScreen::@return: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  [85] return 
  to:@return
MakeNiceScreen::@2: scope:[MakeNiceScreen]  from MakeNiceScreen::@1
  [86] strlen::str#1 = (byte*)MakeNiceScreen::T#3 + 1
  [87] call strlen 
  [88] strlen::return#2 = strlen::len#2
  to:MakeNiceScreen::@17
MakeNiceScreen::@17: scope:[MakeNiceScreen]  from MakeNiceScreen::@2
  [89] MakeNiceScreen::$22 = strlen::return#2
  [90] MakeNiceScreen::$34 = (byte)MakeNiceScreen::$22
  [91] MakeNiceScreen::$23 = XSize - MakeNiceScreen::$34
  [92] MakeNiceScreen::X#1 = MakeNiceScreen::$23 >> 1
  [93] cputsxy::s#0 = (byte*)MakeNiceScreen::T#3 + 1
  [94] cputsxy::x#0 = MakeNiceScreen::X#1
  [95] cputsxy::y#0 = *((byte*)MakeNiceScreen::T#3)
  [96] call cputsxy 
  to:MakeNiceScreen::@18
MakeNiceScreen::@18: scope:[MakeNiceScreen]  from MakeNiceScreen::@17
  [97] MakeNiceScreen::T#2 = MakeNiceScreen::T#3 + $29
  [98] MakeNiceScreen::I#2 = ++ MakeNiceScreen::I#3
  to:MakeNiceScreen::@1

byte kbhit()
kbhit: scope:[kbhit]  from main::@1
  [99] *kbhit::CIA1_PORT_A = 0
  [100] kbhit::return#0 = ~ *kbhit::CIA1_PORT_B
  to:kbhit::@return
kbhit::@return: scope:[kbhit]  from kbhit
  [101] return 
  to:@return

void clrscr()
clrscr: scope:[clrscr]  from MakeNiceScreen::@6 main::@2
  [102] phi()
  to:clrscr::@1
clrscr::@1: scope:[clrscr]  from clrscr clrscr::@5
  [103] clrscr::line_cols#5 = phi( clrscr/COLORRAM, clrscr::@5/clrscr::line_cols#1 )
  [103] clrscr::line_text#5 = phi( clrscr/DEFAULT_SCREEN, clrscr::@5/clrscr::line_text#1 )
  [103] clrscr::l#2 = phi( clrscr/0, clrscr::@5/clrscr::l#1 )
  [104] if(clrscr::l#2<$19) goto clrscr::@3
  to:clrscr::@2
clrscr::@2: scope:[clrscr]  from clrscr::@1
  [105] conio_cursor_x = 0
  [106] conio_cursor_y = 0
  [107] conio_line_text = DEFAULT_SCREEN
  [108] conio_line_color = COLORRAM
  to:clrscr::@return
clrscr::@return: scope:[clrscr]  from clrscr::@2
  [109] return 
  to:@return
clrscr::@3: scope:[clrscr]  from clrscr::@1 clrscr::@4
  [110] clrscr::c#2 = phi( clrscr::@1/0, clrscr::@4/clrscr::c#1 )
  [111] if(clrscr::c#2<$28) goto clrscr::@4
  to:clrscr::@5
clrscr::@5: scope:[clrscr]  from clrscr::@3
  [112] clrscr::line_text#1 = clrscr::line_text#5 + $28
  [113] clrscr::line_cols#1 = clrscr::line_cols#5 + $28
  [114] clrscr::l#1 = ++ clrscr::l#2
  to:clrscr::@1
clrscr::@4: scope:[clrscr]  from clrscr::@3
  [115] clrscr::line_text#5[clrscr::c#2] = ' '
  [116] clrscr::line_cols#5[clrscr::c#2] = conio_textcolor
  [117] clrscr::c#1 = ++ clrscr::c#2
  to:clrscr::@3

byte scroll(byte scroll::onoff)
scroll: scope:[scroll]  from MakeNiceScreen
  [118] conio_scroll_enable = scroll::onoff#0
  to:scroll::@return
scroll::@return: scope:[scroll]  from scroll
  [119] return 
  to:@return

byte textcolor(byte textcolor::color)
textcolor: scope:[textcolor]  from MakeNiceScreen::@3
  [120] conio_textcolor = COLOR_GRAY3
  to:textcolor::@return
textcolor::@return: scope:[textcolor]  from textcolor
  [121] return 
  to:@return

byte bordercolor(byte bordercolor::color)
bordercolor: scope:[bordercolor]  from MakeNiceScreen::@4
  [122] *bordercolor::CONIO_BORDERCOLOR = COLOR_BLACK
  to:bordercolor::@return
bordercolor::@return: scope:[bordercolor]  from bordercolor
  [123] return 
  to:@return

byte bgcolor(byte bgcolor::color)
bgcolor: scope:[bgcolor]  from MakeNiceScreen::@5
  [124] *bgcolor::CONIO_BGCOLOR = COLOR_BLACK
  to:bgcolor::@return
bgcolor::@return: scope:[bgcolor]  from bgcolor
  [125] return 
  to:@return

void cputcxy(byte cputcxy::x , byte cputcxy::y , byte cputcxy::c)
cputcxy: scope:[cputcxy]  from MakeNiceScreen::@7 MakeTeeLine
  [126] cputcxy::c#2 = phi( MakeNiceScreen::@7/CH_ULCORNER, MakeTeeLine/CH_LTEE )
  [126] cputcxy::y#2 = phi( MakeNiceScreen::@7/0, MakeTeeLine/cputcxy::y#0 )
  [127] gotoxy::y#2 = cputcxy::y#2
  [128] call gotoxy 
  to:cputcxy::@1
cputcxy::@1: scope:[cputcxy]  from cputcxy
  [129] cputc::c#1 = cputcxy::c#2
  [130] call cputc 
  to:cputcxy::@return
cputcxy::@return: scope:[cputcxy]  from cputcxy::@1
  [131] return 
  to:@return

void chline(byte chline::length)
chline: scope:[chline]  from MakeNiceScreen::@12 MakeNiceScreen::@8 MakeTeeLine::@1
  [132] chline::length#4 = phi( MakeNiceScreen::@12/chline::length#2, MakeNiceScreen::@8/chline::length#1, MakeTeeLine::@1/chline::length#0 )
  to:chline::@1
chline::@1: scope:[chline]  from chline chline::@3
  [133] chline::i#2 = phi( chline/0, chline::@3/chline::i#1 )
  [134] if(chline::i#2<chline::length#4) goto chline::@2
  to:chline::@return
chline::@return: scope:[chline]  from chline::@1
  [135] return 
  to:@return
chline::@2: scope:[chline]  from chline::@1
  [136] phi()
  [137] call cputc 
  to:chline::@3
chline::@3: scope:[chline]  from chline::@2
  [138] chline::i#1 = ++ chline::i#2
  to:chline::@1

void cputc(byte cputc::c)
cputc: scope:[cputc]  from MakeNiceScreen::@11 MakeNiceScreen::@13 MakeNiceScreen::@9 MakeTeeLine::@2 chline::@2 cputcxy::@1 cputs::@2 cvline::@2
  [139] cputc::c#8 = phi( MakeNiceScreen::@9/CH_URCORNER, MakeNiceScreen::@11/CH_LLCORNER, MakeNiceScreen::@13/CH_LRCORNER, MakeTeeLine::@2/CH_RTEE, chline::@2/CH_HLINE, cputcxy::@1/cputc::c#1, cputs::@2/cputc::c#0, cvline::@2/CH_VLINE )
  [140] if(cputc::c#8=='
') goto cputc::@1
  to:cputc::@2
cputc::@2: scope:[cputc]  from cputc
  [141] conio_line_text[conio_cursor_x] = cputc::c#8
  [142] conio_line_color[conio_cursor_x] = conio_textcolor
  [143] conio_cursor_x = ++ conio_cursor_x
  [144] if(conio_cursor_x!=$28) goto cputc::@return
  to:cputc::@3
cputc::@3: scope:[cputc]  from cputc::@2
  [145] phi()
  [146] call cputln 
  to:cputc::@return
cputc::@return: scope:[cputc]  from cputc::@1 cputc::@2 cputc::@3
  [147] return 
  to:@return
cputc::@1: scope:[cputc]  from cputc
  [148] phi()
  [149] call cputln 
  to:cputc::@return

void cvlinexy(byte cvlinexy::x , byte cvlinexy::y , byte cvlinexy::length)
cvlinexy: scope:[cvlinexy]  from MakeNiceScreen::@10 MakeNiceScreen::@14
  [150] cvlinexy::x#2 = phi( MakeNiceScreen::@10/0, MakeNiceScreen::@14/cvlinexy::x#1 )
  [151] gotoxy::x#6 = cvlinexy::x#2
  [152] call gotoxy 
  to:cvlinexy::@1
cvlinexy::@1: scope:[cvlinexy]  from cvlinexy
  [153] phi()
  [154] call cvline 
  to:cvlinexy::@return
cvlinexy::@return: scope:[cvlinexy]  from cvlinexy::@1
  [155] return 
  to:@return

void MakeTeeLine(byte MakeTeeLine::Y)
MakeTeeLine: scope:[MakeTeeLine]  from MakeNiceScreen::@15 MakeNiceScreen::@16
  [156] MakeTeeLine::Y#2 = phi( MakeNiceScreen::@15/7, MakeNiceScreen::@16/$16 )
  [157] cputcxy::y#0 = MakeTeeLine::Y#2
  [158] call cputcxy 
  to:MakeTeeLine::@1
MakeTeeLine::@1: scope:[MakeTeeLine]  from MakeTeeLine
  [159] chline::length#0 = XSize - 2
  [160] call chline 
  to:MakeTeeLine::@2
MakeTeeLine::@2: scope:[MakeTeeLine]  from MakeTeeLine::@1
  [161] phi()
  [162] call cputc 
  to:MakeTeeLine::@return
MakeTeeLine::@return: scope:[MakeTeeLine]  from MakeTeeLine::@2
  [163] return 
  to:@return

word strlen(byte* strlen::str)
strlen: scope:[strlen]  from MakeNiceScreen::@2
  [164] phi()
  to:strlen::@1
strlen::@1: scope:[strlen]  from strlen strlen::@2
  [165] strlen::len#2 = phi( strlen/0, strlen::@2/strlen::len#1 )
  [165] strlen::str#2 = phi( strlen/strlen::str#1, strlen::@2/strlen::str#0 )
  [166] if(0!=*strlen::str#2) goto strlen::@2
  to:strlen::@return
strlen::@return: scope:[strlen]  from strlen::@1
  [167] return 
  to:@return
strlen::@2: scope:[strlen]  from strlen::@1
  [168] strlen::len#1 = ++ strlen::len#2
  [169] strlen::str#0 = ++ strlen::str#2
  to:strlen::@1

void cputsxy(byte cputsxy::x , byte cputsxy::y , to_nomodify byte* cputsxy::s)
cputsxy: scope:[cputsxy]  from MakeNiceScreen::@17
  [170] gotoxy::x#3 = cputsxy::x#0
  [171] gotoxy::y#3 = cputsxy::y#0
  [172] call gotoxy 
  to:cputsxy::@1
cputsxy::@1: scope:[cputsxy]  from cputsxy
  [173] cputs::s#1 = cputsxy::s#0
  [174] call cputs 
  to:cputsxy::@return
cputsxy::@return: scope:[cputsxy]  from cputsxy::@1
  [175] return 
  to:@return

void cputln()
cputln: scope:[cputln]  from cputc::@1 cputc::@3
  [176] conio_line_text = conio_line_text + $28
  [177] conio_line_color = conio_line_color + $28
  [178] conio_cursor_x = 0
  [179] conio_cursor_y = ++ conio_cursor_y
  [180] call cscroll 
  to:cputln::@return
cputln::@return: scope:[cputln]  from cputln
  [181] return 
  to:@return

void cvline(byte cvline::length)
cvline: scope:[cvline]  from cvlinexy::@1
  [182] cvline::x#0 = conio_cursor_x
  [183] cvline::y#0 = conio_cursor_y
  to:cvline::@1
cvline::@1: scope:[cvline]  from cvline cvline::@4
  [184] cvline::y#2 = phi( cvline/cvline::y#0, cvline::@4/cvline::y#1 )
  [184] cvline::i#2 = phi( cvline/0, cvline::@4/cvline::i#1 )
  [185] if(cvline::i#2<cvline::length#0) goto cvline::@2
  to:cvline::@return
cvline::@return: scope:[cvline]  from cvline::@1
  [186] return 
  to:@return
cvline::@2: scope:[cvline]  from cvline::@1
  [187] phi()
  [188] call cputc 
  to:cvline::@3
cvline::@3: scope:[cvline]  from cvline::@2
  [189] cvline::y#1 = ++ cvline::y#2
  [190] gotoxy::x#5 = cvline::x#0
  [191] gotoxy::y#5 = cvline::y#1
  [192] call gotoxy 
  to:cvline::@4
cvline::@4: scope:[cvline]  from cvline::@3
  [193] cvline::i#1 = ++ cvline::i#2
  to:cvline::@1

void cputs(to_nomodify byte* cputs::s)
cputs: scope:[cputs]  from cputsxy::@1
  [194] phi()
  to:cputs::@1
cputs::@1: scope:[cputs]  from cputs cputs::@2
  [195] cputs::s#2 = phi( cputs/cputs::s#1, cputs::@2/cputs::s#0 )
  [196] cputs::c#1 = *cputs::s#2
  [197] cputs::s#0 = ++ cputs::s#2
  [198] if(0!=cputs::c#1) goto cputs::@2
  to:cputs::@return
cputs::@return: scope:[cputs]  from cputs::@1
  [199] return 
  to:@return
cputs::@2: scope:[cputs]  from cputs::@1
  [200] cputc::c#0 = cputs::c#1
  [201] call cputc 
  to:cputs::@1

void cscroll()
cscroll: scope:[cscroll]  from cputln
  [202] if(conio_cursor_y!=$19) goto cscroll::@return
  to:cscroll::@1
cscroll::@1: scope:[cscroll]  from cscroll
  [203] if(0!=conio_scroll_enable) goto cscroll::@3
  to:cscroll::@2
cscroll::@2: scope:[cscroll]  from cscroll::@1
  [204] phi()
  [205] call gotoxy 
  to:cscroll::@return
cscroll::@return: scope:[cscroll]  from cscroll cscroll::@2 cscroll::@7
  [206] return 
  to:@return
cscroll::@3: scope:[cscroll]  from cscroll::@1
  [207] phi()
  [208] call memcpy 
  to:cscroll::@4
cscroll::@4: scope:[cscroll]  from cscroll::@3
  [209] phi()
  [210] call memcpy 
  to:cscroll::@5
cscroll::@5: scope:[cscroll]  from cscroll::@4
  [211] phi()
  [212] call memset 
  to:cscroll::@6
cscroll::@6: scope:[cscroll]  from cscroll::@5
  [213] memset::c#1 = conio_textcolor
  [214] call memset 
  to:cscroll::@7
cscroll::@7: scope:[cscroll]  from cscroll::@6
  [215] conio_line_text = conio_line_text - $28
  [216] conio_line_color = conio_line_color - $28
  [217] conio_cursor_y = -- conio_cursor_y
  to:cscroll::@return

void* memcpy(void* memcpy::destination , void* memcpy::source , word memcpy::num)
memcpy: scope:[memcpy]  from cscroll::@3 cscroll::@4
  [218] memcpy::destination#2 = phi( cscroll::@3/(void*)DEFAULT_SCREEN, cscroll::@4/(void*)COLORRAM )
  [218] memcpy::source#2 = phi( cscroll::@3/(void*)DEFAULT_SCREEN+$28, cscroll::@4/(void*)COLORRAM+$28 )
  [219] memcpy::src_end#0 = (byte*)memcpy::source#2 + (word)$19*$28-$28
  [220] memcpy::src#4 = (byte*)memcpy::source#2
  [221] memcpy::dst#4 = (byte*)memcpy::destination#2
  to:memcpy::@1
memcpy::@1: scope:[memcpy]  from memcpy memcpy::@2
  [222] memcpy::dst#2 = phi( memcpy/memcpy::dst#4, memcpy::@2/memcpy::dst#1 )
  [222] memcpy::src#2 = phi( memcpy/memcpy::src#4, memcpy::@2/memcpy::src#1 )
  [223] if(memcpy::src#2!=memcpy::src_end#0) goto memcpy::@2
  to:memcpy::@return
memcpy::@return: scope:[memcpy]  from memcpy::@1
  [224] return 
  to:@return
memcpy::@2: scope:[memcpy]  from memcpy::@1
  [225] *memcpy::dst#2 = *memcpy::src#2
  [226] memcpy::dst#1 = ++ memcpy::dst#2
  [227] memcpy::src#1 = ++ memcpy::src#2
  to:memcpy::@1

void* memset(void* memset::str , byte memset::c , word memset::num)
memset: scope:[memset]  from cscroll::@5 cscroll::@6
  [228] memset::c#4 = phi( cscroll::@5/' ', cscroll::@6/memset::c#1 )
  [228] memset::str#3 = phi( cscroll::@5/(void*)DEFAULT_SCREEN+(word)$19*$28-$28, cscroll::@6/(void*)COLORRAM+(word)$19*$28-$28 )
  to:memset::@1
memset::@1: scope:[memset]  from memset
  [229] memset::end#0 = (byte*)memset::str#3 + $28
  [230] memset::dst#4 = (byte*)memset::str#3
  to:memset::@2
memset::@2: scope:[memset]  from memset::@1 memset::@3
  [231] memset::dst#2 = phi( memset::@1/memset::dst#4, memset::@3/memset::dst#1 )
  [232] if(memset::dst#2!=memset::end#0) goto memset::@3
  to:memset::@return
memset::@return: scope:[memset]  from memset::@2
  [233] return 
  to:@return
memset::@3: scope:[memset]  from memset::@2
  [234] *memset::dst#2 = memset::c#4
  [235] memset::dst#1 = ++ memset::dst#2
  to:memset::@2
