char ba
char ba#0 // ba zp[1]:2 22.0
char ba#1 // ba zp[1]:2 19.471698113207548
char bb
char bb#1 // bb zp[1]:3 71.0
char bb#10 // bb zp[1]:3 101.0
char bb#102 // bb_1 zp[1]:4 202.0
char bb#103 // bb_1 zp[1]:4 202.0
char bb#104 // bb_1 zp[1]:4 202.0
char bb#105 // bb_1 zp[1]:4 202.0
char bb#106 // bb_1 zp[1]:4 202.0
char bb#107 // bb_1 zp[1]:4 202.0
char bb#108 // bb_1 zp[1]:4 202.0
char bb#109 // bb_1 zp[1]:4 202.0
char bb#110 // bb_1 zp[1]:4 202.0
char bb#12 // bb zp[1]:3 28.0
char bb#19 // bb zp[1]:3 202.0
char bb#2 // bb zp[1]:3 101.0
char bb#20 // bb zp[1]:3 202.0
char bb#21 // bb zp[1]:3 202.0
char bb#22 // bb zp[1]:3 202.0
char bb#23 // bb zp[1]:3 202.0
char bb#24 // bb zp[1]:3 202.0
char bb#25 // bb zp[1]:3 202.0
char bb#26 // bb zp[1]:3 202.0
char bb#28 // bb_1 zp[1]:4 237.36956521739125
char bb#3 // bb zp[1]:3 101.0
char bb#4 // bb zp[1]:3 101.0
char bb#5 // bb zp[1]:3 101.0
char bb#52 // bb zp[1]:3 151.5
char bb#6 // bb zp[1]:3 101.0
char bb#69 // bb zp[1]:3 101.0
char bb#70 // bb zp[1]:3 101.0
char bb#71 // bb zp[1]:3 101.0
char bc
char bc#1 // reg byte x 42.599999999999994
char bc#100 // reg byte x 101.0
char bc#101 // reg byte x 101.0
char bc#102 // reg byte x 101.0
char bc#103 // reg byte x 101.0
char bc#104 // reg byte x 101.0
char bc#105 // reg byte x 101.0
char bc#106 // reg byte x 1001.0
char bc#107 // reg byte x 1001.0
char bc#108 // reg byte x 1001.0
char bc#109 // reg byte x 1001.0
char bc#110 // reg byte x 1001.0
char bc#111 // reg byte x 1001.0
char bc#112 // reg byte x 1001.0
char bc#113 // reg byte x 1001.0
char bc#114 // reg byte x 1001.0
char bc#115 // bc zp[1]:5 2369.978260869566
char bc#12 // reg byte x 53.25
char bc#174 // bc zp[1]:5 2002.0
char bc#175 // bc zp[1]:5 2002.0
char bc#176 // bc zp[1]:5 2002.0
char bc#177 // bc zp[1]:5 2002.0
char bc#178 // bc zp[1]:5 2002.0
char bc#179 // bc zp[1]:5 2002.0
char bc#180 // bc zp[1]:5 2002.0
char bc#181 // bc zp[1]:5 2002.0
char bc#182 // bc zp[1]:5 2002.0
char bc#23 // reg byte x 167.58333333333334
char bc#40 // reg byte x 1506.0
char bc#41 // reg byte x 2002.0
char bc#42 // reg byte x 2002.0
char bc#43 // reg byte x 2002.0
char bc#44 // reg byte x 2002.0
char bc#45 // reg byte x 2002.0
char bc#46 // reg byte x 2002.0
char bc#47 // reg byte x 2002.0
char bc#48 // reg byte x 2002.0
char bc#65 // reg byte x 101.0
char bc#66 // reg byte x 101.0
char bc#73 // reg byte x 134.66666666666666
char bc#85 // reg byte x 1501.5
char bd
char bd#1 // reg byte y 42.599999999999994
char bd#100 // reg byte y 1001.0
char bd#101 // reg byte y 1001.0
char bd#102 // reg byte y 1001.0
char bd#103 // reg byte y 1001.0
char bd#104 // reg byte y 1001.0
char bd#105 // reg byte y 1001.0
char bd#106 // reg byte y 1334.6666666666667
char bd#108 // reg byte y 15006.0
char bd#109 // reg byte y 20002.0
char bd#110 // reg byte y 20002.0
char bd#111 // reg byte y 20002.0
char bd#112 // reg byte y 20002.0
char bd#113 // reg byte y 20002.0
char bd#114 // reg byte y 20002.0
char bd#115 // reg byte y 20002.0
char bd#116 // reg byte y 20002.0
char bd#118 // reg byte y 15001.5
char bd#119 // reg byte a 57369.421052631566
char bd#12 // reg byte y 53.25
char bd#131 // reg byte y 101.0
char bd#132 // reg byte y 101.0
char bd#133 // reg byte y 101.0
char bd#134 // reg byte y 101.0
char bd#135 // reg byte y 101.0
char bd#136 // reg byte y 101.0
char bd#137 // reg byte y 101.0
char bd#138 // reg byte y 101.0
char bd#139 // reg byte y 753.0
char bd#140 // reg byte y 1001.0
char bd#141 // reg byte y 1001.0
char bd#148 // reg byte y 10001.0
char bd#149 // reg byte y 10001.0
char bd#150 // reg byte y 10001.0
char bd#151 // reg byte y 10001.0
char bd#152 // reg byte y 10001.0
char bd#153 // reg byte y 10001.0
char bd#154 // reg byte y 10001.0
char bd#155 // reg byte y 10001.0
char bd#156 // reg byte y 10001.0
char bd#23 // reg byte y 251.0
char bd#237 // reg byte a 20002.0
char bd#238 // reg byte a 20002.0
char bd#239 // reg byte a 20002.0
char bd#240 // reg byte a 20002.0
char bd#241 // reg byte a 20002.0
char bd#242 // reg byte a 20002.0
char bd#243 // reg byte a 20002.0
char bd#244 // reg byte a 20002.0
char bd#245 // reg byte a 20002.0
char bd#34 // reg byte y 1667.5833333333333
char bd#95 // reg byte y 134.66666666666666
void f0()
void fa()
void fb()
void fc()
void main()

zp[1]:2 [ ba#1 ba#0 ]
zp[1]:3 [ bb#52 bb#10 bb#26 bb#71 bb#25 bb#70 bb#24 bb#69 bb#23 bb#6 bb#22 bb#5 bb#21 bb#20 bb#19 bb#1 bb#12 bb#2 bb#3 bb#4 ]
zp[1]:4 [ bb#28 bb#102 bb#103 bb#104 bb#105 bb#106 bb#107 bb#108 bb#109 bb#110 ]
reg byte x [ bc#85 bc#114 bc#48 bc#113 bc#47 bc#112 bc#46 bc#111 bc#45 bc#110 bc#44 bc#109 bc#43 bc#42 bc#41 bc#40 bc#73 bc#105 bc#104 bc#103 bc#102 bc#101 bc#100 bc#66 bc#65 bc#1 bc#12 bc#23 bc#106 bc#107 bc#108 ]
zp[1]:5 [ bc#115 bc#174 bc#175 bc#176 bc#177 bc#178 bc#179 bc#180 bc#181 bc#182 ]
reg byte y [ bd#118 bd#156 bd#116 bd#155 bd#115 bd#154 bd#114 bd#153 bd#113 bd#152 bd#112 bd#151 bd#111 bd#110 bd#109 bd#108 bd#106 bd#105 bd#104 bd#103 bd#102 bd#101 bd#100 bd#141 bd#140 bd#139 bd#95 bd#138 bd#137 bd#136 bd#135 bd#134 bd#133 bd#132 bd#131 bd#1 bd#12 bd#23 bd#34 bd#148 bd#149 bd#150 ]
reg byte a [ bd#119 bd#237 bd#238 bd#239 bd#240 bd#241 bd#242 bd#243 bd#244 bd#245 ]
