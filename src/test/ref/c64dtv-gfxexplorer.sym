(label) @1
(label) @begin
(label) @end
(byte*) BGCOL
(const byte*) BGCOL#0 BGCOL = ((byte*))(word/dword/signed dword) $d021
(byte*) BGCOL1
(const byte*) BGCOL1#0 BGCOL1 = ((byte*))(word/dword/signed dword) $d021
(byte*) BGCOL2
(const byte*) BGCOL2#0 BGCOL2 = ((byte*))(word/dword/signed dword) $d022
(byte*) BGCOL3
(const byte*) BGCOL3#0 BGCOL3 = ((byte*))(word/dword/signed dword) $d023
(byte*) BGCOL4
(const byte*) BGCOL4#0 BGCOL4 = ((byte*))(word/dword/signed dword) $d024
(byte) BLACK
(byte) BLUE
(byte*) BORDERCOL
(const byte*) BORDERCOL#0 BORDERCOL = ((byte*))(word/dword/signed dword) $d020
(byte) BROWN
(byte*) CHARGEN
(const byte*) CHARGEN#0 CHARGEN = ((byte*))(word/dword/signed dword) $d000
(byte*) CIA1_INTERRUPT
(byte*) CIA1_PORT_A
(const byte*) CIA1_PORT_A#0 CIA1_PORT_A = ((byte*))(word/dword/signed dword) $dc00
(byte*) CIA1_PORT_A_DDR
(const byte*) CIA1_PORT_A_DDR#0 CIA1_PORT_A_DDR = ((byte*))(word/dword/signed dword) $dc02
(byte*) CIA1_PORT_B
(const byte*) CIA1_PORT_B#0 CIA1_PORT_B = ((byte*))(word/dword/signed dword) $dc01
(byte*) CIA1_PORT_B_DDR
(const byte*) CIA1_PORT_B_DDR#0 CIA1_PORT_B_DDR = ((byte*))(word/dword/signed dword) $dc03
(byte*) CIA2_INTERRUPT
(byte*) CIA2_PORT_A
(const byte*) CIA2_PORT_A#0 CIA2_PORT_A = ((byte*))(word/dword/signed dword) $dd00
(byte*) CIA2_PORT_A_DDR
(const byte*) CIA2_PORT_A_DDR#0 CIA2_PORT_A_DDR = ((byte*))(word/dword/signed dword) $dd02
(byte*) CIA2_PORT_B
(byte*) CIA2_PORT_B_DDR
(byte) CIA_INTERRUPT_CLEAR
(byte*) COLS
(const byte*) COLS#0 COLS = ((byte*))(word/dword/signed dword) $d800
(byte) CYAN
(byte*) D011
(byte*) D016
(byte*) D018
(byte) DARK_GREY
(byte) DTV_BADLINE_OFF
(byte*) DTV_BLITTER_ALU
(byte*) DTV_BLITTER_CONTROL
(byte*) DTV_BLITTER_CONTROL2
(byte*) DTV_BLITTER_DEST_HI
(byte*) DTV_BLITTER_DEST_LIN_HI
(byte*) DTV_BLITTER_DEST_LIN_LO
(byte*) DTV_BLITTER_DEST_LO
(byte*) DTV_BLITTER_DEST_MI
(byte*) DTV_BLITTER_DEST_MOD_HI
(byte*) DTV_BLITTER_DEST_MOD_LO
(byte*) DTV_BLITTER_DEST_STEP
(byte*) DTV_BLITTER_LEN_HI
(byte*) DTV_BLITTER_LEN_LO
(byte*) DTV_BLITTER_SRCA_HI
(byte*) DTV_BLITTER_SRCA_LIN_HI
(byte*) DTV_BLITTER_SRCA_LIN_LO
(byte*) DTV_BLITTER_SRCA_LO
(byte*) DTV_BLITTER_SRCA_MI
(byte*) DTV_BLITTER_SRCA_MOD_HI
(byte*) DTV_BLITTER_SRCA_MOD_LO
(byte*) DTV_BLITTER_SRCA_STEP
(byte*) DTV_BLITTER_SRCB_HI
(byte*) DTV_BLITTER_SRCB_LIN_HI
(byte*) DTV_BLITTER_SRCB_LIN_LO
(byte*) DTV_BLITTER_SRCB_LO
(byte*) DTV_BLITTER_SRCB_MI
(byte*) DTV_BLITTER_SRCB_MOD_HI
(byte*) DTV_BLITTER_SRCB_MOD_LO
(byte*) DTV_BLITTER_SRCB_STEP
(byte*) DTV_BLITTER_TRANSPARANCY
(byte) DTV_BLIT_ADD
(byte) DTV_BLIT_AND
(byte) DTV_BLIT_CIA_IRQ
(byte) DTV_BLIT_CLEAR_IRQ
(byte) DTV_BLIT_DEST_CONT
(byte) DTV_BLIT_DEST_FWD
(byte) DTV_BLIT_DISABLE_B
(byte) DTV_BLIT_FORCE_START
(byte) DTV_BLIT_IRQ_EN
(byte) DTV_BLIT_NAND
(byte) DTV_BLIT_NOR
(byte) DTV_BLIT_OR
(byte) DTV_BLIT_SHIFT0
(byte) DTV_BLIT_SHIFT1
(byte) DTV_BLIT_SHIFT2
(byte) DTV_BLIT_SHIFT3
(byte) DTV_BLIT_SHIFT4
(byte) DTV_BLIT_SHIFT5
(byte) DTV_BLIT_SHIFT6
(byte) DTV_BLIT_SHIFT7
(byte) DTV_BLIT_SRCA_CONT
(byte) DTV_BLIT_SRCA_FWD
(byte) DTV_BLIT_SRCB_CONT
(byte) DTV_BLIT_SRCB_FWD
(byte) DTV_BLIT_STATUS_BUSY
(byte) DTV_BLIT_STATUS_IRQ
(byte) DTV_BLIT_SUB
(byte) DTV_BLIT_TRANSPARANCY_NONE
(byte) DTV_BLIT_VBLANK
(byte) DTV_BLIT_VIC_IRQ
(byte) DTV_BLIT_WRITE_NONTRANSPARENT
(byte) DTV_BLIT_WRITE_TRANSPARENT
(byte) DTV_BLIT_XNOR
(byte) DTV_BLIT_XOR
(byte) DTV_BORDER_OFF
(const byte) DTV_BORDER_OFF#0 DTV_BORDER_OFF = (byte/signed byte/word/signed word/dword/signed dword) 2
(byte) DTV_CHUNKY
(const byte) DTV_CHUNKY#0 DTV_CHUNKY = (byte/signed byte/word/signed word/dword/signed dword) $40
(byte) DTV_COLORRAM_OFF
(const byte) DTV_COLORRAM_OFF#0 DTV_COLORRAM_OFF = (byte/signed byte/word/signed word/dword/signed dword) $10
(dword) DTV_COLOR_BANK_DEFAULT
(const dword) DTV_COLOR_BANK_DEFAULT#0 DTV_COLOR_BANK_DEFAULT = (dword/signed dword) $1d800
(byte*) DTV_COLOR_BANK_HI
(const byte*) DTV_COLOR_BANK_HI#0 DTV_COLOR_BANK_HI = ((byte*))(word/dword/signed dword) $d037
(byte*) DTV_COLOR_BANK_LO
(const byte*) DTV_COLOR_BANK_LO#0 DTV_COLOR_BANK_LO = ((byte*))(word/dword/signed dword) $d036
(byte*) DTV_CONTROL
(const byte*) DTV_CONTROL#0 DTV_CONTROL = ((byte*))(word/dword/signed dword) $d03c
(byte*) DTV_FEATURE
(const byte*) DTV_FEATURE#0 DTV_FEATURE = ((byte*))(word/dword/signed dword) $d03f
(byte) DTV_FEATURE_DISABLE_TIL_RESET
(byte) DTV_FEATURE_ENABLE
(const byte) DTV_FEATURE_ENABLE#0 DTV_FEATURE_ENABLE = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) DTV_GRAPHICS_HICOL_BANK
(byte*) DTV_GRAPHICS_VIC_BANK
(const byte*) DTV_GRAPHICS_VIC_BANK#0 DTV_GRAPHICS_VIC_BANK = ((byte*))(word/dword/signed dword) $d03d
(byte) DTV_HIGHCOLOR
(const byte) DTV_HIGHCOLOR#0 DTV_HIGHCOLOR = (byte/signed byte/word/signed word/dword/signed dword) 4
(byte) DTV_LINEAR
(const byte) DTV_LINEAR#0 DTV_LINEAR = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte) DTV_OVERSCAN
(const byte) DTV_OVERSCAN#0 DTV_OVERSCAN = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte*) DTV_PALETTE
(const byte*) DTV_PALETTE#0 DTV_PALETTE = ((byte*))(word/dword/signed dword) $d200
(byte[$10]) DTV_PALETTE_DEFAULT
(const byte[$10]) DTV_PALETTE_DEFAULT#0 DTV_PALETTE_DEFAULT = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $36, (byte/word/signed word/dword/signed dword) $be, (byte/signed byte/word/signed word/dword/signed dword) $58, (byte/word/signed word/dword/signed dword) $db, (byte/word/signed word/dword/signed dword) $86, (byte/word/signed word/dword/signed dword) $ff, (byte/signed byte/word/signed word/dword/signed dword) $29, (byte/signed byte/word/signed word/dword/signed dword) $26, (byte/signed byte/word/signed word/dword/signed dword) $3b, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/word/signed word/dword/signed dword) $df, (byte/word/signed word/dword/signed dword) $9a, (byte/signed byte/word/signed word/dword/signed dword) $a }
(byte*) DTV_PLANEA_MODULO_HI
(const byte*) DTV_PLANEA_MODULO_HI#0 DTV_PLANEA_MODULO_HI = ((byte*))(word/dword/signed dword) $d039
(byte*) DTV_PLANEA_MODULO_LO
(const byte*) DTV_PLANEA_MODULO_LO#0 DTV_PLANEA_MODULO_LO = ((byte*))(word/dword/signed dword) $d038
(byte*) DTV_PLANEA_START_HI
(const byte*) DTV_PLANEA_START_HI#0 DTV_PLANEA_START_HI = ((byte*))(word/dword/signed dword) $d045
(byte*) DTV_PLANEA_START_LO
(const byte*) DTV_PLANEA_START_LO#0 DTV_PLANEA_START_LO = ((byte*))(word/dword/signed dword) $d03a
(byte*) DTV_PLANEA_START_MI
(const byte*) DTV_PLANEA_START_MI#0 DTV_PLANEA_START_MI = ((byte*))(word/dword/signed dword) $d03b
(byte*) DTV_PLANEA_STEP
(const byte*) DTV_PLANEA_STEP#0 DTV_PLANEA_STEP = ((byte*))(word/dword/signed dword) $d046
(byte*) DTV_PLANEB_MODULO_HI
(const byte*) DTV_PLANEB_MODULO_HI#0 DTV_PLANEB_MODULO_HI = ((byte*))(word/dword/signed dword) $d048
(byte*) DTV_PLANEB_MODULO_LO
(const byte*) DTV_PLANEB_MODULO_LO#0 DTV_PLANEB_MODULO_LO = ((byte*))(word/dword/signed dword) $d047
(byte*) DTV_PLANEB_START_HI
(const byte*) DTV_PLANEB_START_HI#0 DTV_PLANEB_START_HI = ((byte*))(word/dword/signed dword) $d04b
(byte*) DTV_PLANEB_START_LO
(const byte*) DTV_PLANEB_START_LO#0 DTV_PLANEB_START_LO = ((byte*))(word/dword/signed dword) $d049
(byte*) DTV_PLANEB_START_MI
(const byte*) DTV_PLANEB_START_MI#0 DTV_PLANEB_START_MI = ((byte*))(word/dword/signed dword) $d04a
(byte*) DTV_PLANEB_STEP
(const byte*) DTV_PLANEB_STEP#0 DTV_PLANEB_STEP = ((byte*))(word/dword/signed dword) $d04c
(byte*) DTV_SPRITE_BANK
(byte*) FORM_CHARSET
(const byte*) FORM_CHARSET#0 FORM_CHARSET = ((byte*))(word/signed word/dword/signed dword) $1800
(byte[]) FORM_COLS
(const byte[]) FORM_COLS#0 FORM_COLS = (string) "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@"+(string) "                                        @"+(string) "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa@"+(string) "                                        @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   ooooooooo  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm              @"+(string) " nnnnnnnnnnnn                jjjjjjjjj  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"+(string) " nnnnnnnnnnnn   mmmmmmmmmm   jjjjjjjjj  @"+(string) "@"
(signed byte) FORM_CURSOR_BLINK
(const signed byte) FORM_CURSOR_BLINK#0 FORM_CURSOR_BLINK = (byte/signed byte/word/signed word/dword/signed dword) $28
(byte*) FORM_SCREEN
(const byte*) FORM_SCREEN#0 FORM_SCREEN = ((byte*))(word/signed word/dword/signed dword) $400
(byte[]) FORM_TEXT
(const byte[]) FORM_TEXT#0 FORM_TEXT = (string) " C64 DTV Graphics Mode Explorer         @"+(string) "                                        @"+(string) " PRESET 0 Standard Charset              @"+(string) "                                        @"+(string) " CONTROL        PLANE  A     VIC II     @"+(string) " bmm        0   pattern p0   screen s0  @"+(string) " mcm        0   start   00   gfx    g0  @"+(string) " ecm        0   step    00   colors c0  @"+(string) " hicolor    0   modulo  00              @"+(string) " linear     0                COLORS     @"+(string) " color off  0   PLANE  B     palet   0  @"+(string) " chunky     0   pattern p0   bgcol0 00  @"+(string) " border off 0   start   00   bgcol1 00  @"+(string) " overscan   0   step    00   bgcol2 00  @"+(string) "                modulo  00   bgcol3 00  @"+(string) "@"
(byte) GREEN
(byte) GREY
(void()**) HARDWARE_IRQ
(byte) IRQ_COLLISION_BG
(byte) IRQ_COLLISION_SPRITE
(byte*) IRQ_ENABLE
(byte) IRQ_LIGHTPEN
(byte) IRQ_RASTER
(byte*) IRQ_STATUS
(void()**) KERNEL_IRQ
(byte) KEY_0
(byte) KEY_1
(byte) KEY_2
(byte) KEY_3
(byte) KEY_4
(byte) KEY_5
(byte) KEY_6
(byte) KEY_7
(byte) KEY_8
(byte) KEY_9
(byte) KEY_A
(byte) KEY_ARROW_LEFT
(byte) KEY_ARROW_UP
(byte) KEY_ASTERISK
(byte) KEY_AT
(byte) KEY_B
(byte) KEY_C
(byte) KEY_COLON
(byte) KEY_COMMA
(byte) KEY_COMMODORE
(const byte) KEY_COMMODORE#0 KEY_COMMODORE = (byte/signed byte/word/signed word/dword/signed dword) $3d
(byte) KEY_CRSR_DOWN
(const byte) KEY_CRSR_DOWN#0 KEY_CRSR_DOWN = (byte/signed byte/word/signed word/dword/signed dword) 7
(byte) KEY_CRSR_RIGHT
(const byte) KEY_CRSR_RIGHT#0 KEY_CRSR_RIGHT = (byte/signed byte/word/signed word/dword/signed dword) 2
(byte) KEY_CTRL
(const byte) KEY_CTRL#0 KEY_CTRL = (byte/signed byte/word/signed word/dword/signed dword) $3a
(byte) KEY_D
(byte) KEY_DEL
(byte) KEY_DOT
(byte) KEY_E
(byte) KEY_EQUALS
(byte) KEY_F
(byte) KEY_F1
(byte) KEY_F3
(byte) KEY_F5
(byte) KEY_F7
(byte) KEY_G
(byte) KEY_H
(byte) KEY_HOME
(byte) KEY_I
(byte) KEY_J
(byte) KEY_K
(byte) KEY_L
(byte) KEY_LSHIFT
(const byte) KEY_LSHIFT#0 KEY_LSHIFT = (byte/signed byte/word/signed word/dword/signed dword) $f
(byte) KEY_M
(byte) KEY_MINUS
(byte) KEY_MODIFIER_COMMODORE
(const byte) KEY_MODIFIER_COMMODORE#0 KEY_MODIFIER_COMMODORE = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) KEY_MODIFIER_CTRL
(const byte) KEY_MODIFIER_CTRL#0 KEY_MODIFIER_CTRL = (byte/signed byte/word/signed word/dword/signed dword) 4
(byte) KEY_MODIFIER_LSHIFT
(const byte) KEY_MODIFIER_LSHIFT#0 KEY_MODIFIER_LSHIFT = (byte/signed byte/word/signed word/dword/signed dword) 1
(byte) KEY_MODIFIER_RSHIFT
(const byte) KEY_MODIFIER_RSHIFT#0 KEY_MODIFIER_RSHIFT = (byte/signed byte/word/signed word/dword/signed dword) 2
(byte) KEY_MODIFIER_SHIFT
(const byte) KEY_MODIFIER_SHIFT#0 KEY_MODIFIER_SHIFT = (const byte) KEY_MODIFIER_LSHIFT#0|(const byte) KEY_MODIFIER_RSHIFT#0
(byte) KEY_N
(byte) KEY_O
(byte) KEY_P
(byte) KEY_PLUS
(byte) KEY_POUND
(byte) KEY_Q
(byte) KEY_R
(byte) KEY_RETURN
(byte) KEY_RSHIFT
(const byte) KEY_RSHIFT#0 KEY_RSHIFT = (byte/signed byte/word/signed word/dword/signed dword) $34
(byte) KEY_RUNSTOP
(byte) KEY_S
(byte) KEY_SEMICOLON
(byte) KEY_SLASH
(byte) KEY_SPACE
(const byte) KEY_SPACE#0 KEY_SPACE = (byte/signed byte/word/signed word/dword/signed dword) $3c
(byte) KEY_T
(byte) KEY_U
(byte) KEY_V
(byte) KEY_W
(byte) KEY_X
(byte) KEY_Y
(byte) KEY_Z
(byte*) LIGHTPEN_X
(byte*) LIGHTPEN_Y
(byte) LIGHT_BLUE
(byte) LIGHT_GREEN
(byte) LIGHT_GREY
(byte) ORANGE
(byte) PINK
(dword) PLANE_8BPP_CHUNKY
(const dword) PLANE_8BPP_CHUNKY#0 PLANE_8BPP_CHUNKY = (dword/signed dword) $20000
(dword) PLANE_BLANK
(const dword) PLANE_BLANK#0 PLANE_BLANK = (dword/signed dword) $38000
(dword) PLANE_CHARSET8
(const dword) PLANE_CHARSET8#0 PLANE_CHARSET8 = (dword/signed dword) $3c000
(dword) PLANE_FULL
(const dword) PLANE_FULL#0 PLANE_FULL = (dword/signed dword) $3a000
(dword) PLANE_HORISONTAL
(const dword) PLANE_HORISONTAL#0 PLANE_HORISONTAL = (dword/signed dword) $30000
(dword) PLANE_HORISONTAL2
(const dword) PLANE_HORISONTAL2#0 PLANE_HORISONTAL2 = (dword/signed dword) $34000
(dword) PLANE_VERTICAL
(const dword) PLANE_VERTICAL#0 PLANE_VERTICAL = (dword/signed dword) $32000
(dword) PLANE_VERTICAL2
(const dword) PLANE_VERTICAL2#0 PLANE_VERTICAL2 = (dword/signed dword) $36000
(byte*) PROCPORT
(const byte*) PROCPORT#0 PROCPORT = ((byte*))(byte/signed byte/word/signed word/dword/signed dword) 1
(byte) PROCPORT_BASIC_KERNEL_IO
(byte*) PROCPORT_DDR
(const byte*) PROCPORT_DDR#0 PROCPORT_DDR = ((byte*))(byte/signed byte/word/signed word/dword/signed dword) 0
(byte) PROCPORT_DDR_MEMORY_MASK
(const byte) PROCPORT_DDR_MEMORY_MASK#0 PROCPORT_DDR_MEMORY_MASK = (byte/signed byte/word/signed word/dword/signed dword) 7
(byte) PROCPORT_KERNEL_IO
(byte) PROCPORT_RAM_ALL
(byte) PROCPORT_RAM_CHARROM
(const byte) PROCPORT_RAM_CHARROM#0 PROCPORT_RAM_CHARROM = (byte/signed byte/word/signed word/dword/signed dword) $31
(byte) PROCPORT_RAM_IO
(const byte) PROCPORT_RAM_IO#0 PROCPORT_RAM_IO = (byte/signed byte/word/signed word/dword/signed dword) $35
(byte) PURPLE
(byte*) RASTER
(const byte*) RASTER#0 RASTER = ((byte*))(word/dword/signed dword) $d012
(byte) RED
(byte*) SPRITES_COLS
(byte*) SPRITES_ENABLE
(byte*) SPRITES_EXPAND_X
(byte*) SPRITES_EXPAND_Y
(byte*) SPRITES_MC
(byte*) SPRITES_MC1
(byte*) SPRITES_MC2
(byte*) SPRITES_PRIORITY
(byte*) SPRITES_XMSB
(byte*) SPRITES_XPOS
(byte*) SPRITES_YPOS
(word) SPRITE_PTRS
(byte*) VIC_BITMAP
(const byte*) VIC_BITMAP#0 VIC_BITMAP = ((byte*))(word/signed word/dword/signed dword) $6000
(byte) VIC_BMM
(const byte) VIC_BMM#0 VIC_BMM = (byte/signed byte/word/signed word/dword/signed dword) $20
(byte*) VIC_CHARSET_ROM
(const byte*) VIC_CHARSET_ROM#0 VIC_CHARSET_ROM = ((byte*))(word/signed word/dword/signed dword) $5800
(byte*) VIC_CONTROL
(const byte*) VIC_CONTROL#0 VIC_CONTROL = ((byte*))(word/dword/signed dword) $d011
(byte*) VIC_CONTROL2
(const byte*) VIC_CONTROL2#0 VIC_CONTROL2 = ((byte*))(word/dword/signed dword) $d016
(byte) VIC_CSEL
(const byte) VIC_CSEL#0 VIC_CSEL = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) VIC_DEN
(const byte) VIC_DEN#0 VIC_DEN = (byte/signed byte/word/signed word/dword/signed dword) $10
(byte) VIC_ECM
(const byte) VIC_ECM#0 VIC_ECM = (byte/signed byte/word/signed word/dword/signed dword) $40
(byte) VIC_MCM
(const byte) VIC_MCM#0 VIC_MCM = (byte/signed byte/word/signed word/dword/signed dword) $10
(byte*) VIC_MEMORY
(const byte*) VIC_MEMORY#0 VIC_MEMORY = ((byte*))(word/dword/signed dword) $d018
(byte) VIC_RSEL
(const byte) VIC_RSEL#0 VIC_RSEL = (byte/signed byte/word/signed word/dword/signed dword) 8
(byte) VIC_RST8
(byte*) VIC_SCREEN0
(const byte*) VIC_SCREEN0#0 VIC_SCREEN0 = ((byte*))(word/signed word/dword/signed dword) $4000
(byte*) VIC_SCREEN1
(const byte*) VIC_SCREEN1#0 VIC_SCREEN1 = ((byte*))(word/signed word/dword/signed dword) $4400
(byte*) VIC_SCREEN2
(const byte*) VIC_SCREEN2#0 VIC_SCREEN2 = ((byte*))(word/signed word/dword/signed dword) $4800
(byte*) VIC_SCREEN3
(const byte*) VIC_SCREEN3#0 VIC_SCREEN3 = ((byte*))(word/signed word/dword/signed dword) $4c00
(byte*) VIC_SCREEN4
(const byte*) VIC_SCREEN4#0 VIC_SCREEN4 = ((byte*))(word/signed word/dword/signed dword) $5000
(byte) WHITE
(byte) YELLOW
(void()) apply_preset((byte) apply_preset::idx)
(label) apply_preset::@1
(label) apply_preset::@10
(label) apply_preset::@11
(label) apply_preset::@12
(label) apply_preset::@13
(label) apply_preset::@2
(label) apply_preset::@3
(label) apply_preset::@4
(label) apply_preset::@5
(label) apply_preset::@6
(label) apply_preset::@7
(label) apply_preset::@8
(label) apply_preset::@9
(label) apply_preset::@return
(byte) apply_preset::i
(byte) apply_preset::i#1 reg byte y 1501.5
(byte) apply_preset::i#2 reg byte y 2002.0
(byte) apply_preset::idx
(byte) apply_preset::idx#0 reg byte a 11.18181818181818
(byte*) apply_preset::preset
(byte*) apply_preset::preset#14 preset zp ZP_WORD:3 200.2
(void()) bitmap_clear()
(word~) bitmap_clear::$3 $3 zp ZP_WORD:3 2.0
(label) bitmap_clear::@1
(label) bitmap_clear::@2
(label) bitmap_clear::@3
(label) bitmap_clear::@return
(byte*) bitmap_clear::bitmap
(byte*) bitmap_clear::bitmap#1 bitmap zp ZP_WORD:3 42.599999999999994
(byte*) bitmap_clear::bitmap#2 bitmap zp ZP_WORD:3 157.0
(byte*) bitmap_clear::bitmap#3 bitmap zp ZP_WORD:3 24.0
(byte*~) bitmap_clear::bitmap#5 bitmap zp ZP_WORD:3 4.0
(byte) bitmap_clear::x
(byte) bitmap_clear::x#1 reg byte x 151.5
(byte) bitmap_clear::x#2 reg byte x 67.33333333333333
(byte) bitmap_clear::y
(byte) bitmap_clear::y#1 y zp ZP_BYTE:2 16.5
(byte) bitmap_clear::y#4 y zp ZP_BYTE:2 3.6666666666666665
(void()) bitmap_init((byte*) bitmap_init::bitmap)
(byte~) bitmap_init::$0 reg byte a 22.0
(byte~) bitmap_init::$10 reg byte a 22.0
(byte~) bitmap_init::$6 $6 zp ZP_BYTE:2 11.0
(byte~) bitmap_init::$7 reg byte a 22.0
(byte~) bitmap_init::$8 reg byte a 22.0
(byte~) bitmap_init::$9 reg byte a 22.0
(label) bitmap_init::@1
(label) bitmap_init::@2
(label) bitmap_init::@3
(label) bitmap_init::@4
(label) bitmap_init::@5
(label) bitmap_init::@6
(label) bitmap_init::@return
(byte*) bitmap_init::bitmap
(byte) bitmap_init::bits
(byte) bitmap_init::bits#1 reg byte y 11.0
(byte) bitmap_init::bits#3 reg byte y 6.6000000000000005
(byte) bitmap_init::bits#4 reg byte y 7.333333333333333
(byte) bitmap_init::x
(byte) bitmap_init::x#1 reg byte x 16.5
(byte) bitmap_init::x#2 reg byte x 7.333333333333334
(byte) bitmap_init::y
(byte) bitmap_init::y#1 reg byte x 16.5
(byte) bitmap_init::y#2 reg byte x 6.0
(byte*) bitmap_init::yoffs
(byte*) bitmap_init::yoffs#1 yoffs zp ZP_WORD:3 22.0
(byte*) bitmap_init::yoffs#2 yoffs zp ZP_WORD:3 6.111111111111112
(byte*) bitmap_init::yoffs#4 yoffs zp ZP_WORD:3 11.0
(void()) bitmap_line((byte) bitmap_line::x0 , (byte) bitmap_line::x1 , (byte) bitmap_line::y0 , (byte) bitmap_line::y1)
(label) bitmap_line::@1
(label) bitmap_line::@10
(label) bitmap_line::@11
(label) bitmap_line::@12
(label) bitmap_line::@13
(label) bitmap_line::@14
(label) bitmap_line::@2
(label) bitmap_line::@3
(label) bitmap_line::@4
(label) bitmap_line::@5
(label) bitmap_line::@6
(label) bitmap_line::@7
(label) bitmap_line::@8
(label) bitmap_line::@9
(label) bitmap_line::@return
(byte) bitmap_line::x0
(byte) bitmap_line::x0#0 x0 zp ZP_BYTE:13 1.260869565217391
(byte) bitmap_line::x1
(byte) bitmap_line::x1#0 reg byte x 1.3181818181818181
(byte) bitmap_line::xd
(byte) bitmap_line::xd#1 xd zp ZP_BYTE:8 0.7
(byte) bitmap_line::xd#2 xd zp ZP_BYTE:8 0.7
(byte) bitmap_line::y0
(byte) bitmap_line::y0#0 y0 zp ZP_BYTE:15 1.6666666666666674
(byte) bitmap_line::y1
(byte) bitmap_line::y1#0 y1 zp ZP_BYTE:18 1.7500000000000007
(byte) bitmap_line::yd
(byte) bitmap_line::yd#1 reg byte y 0.8888888888888888
(byte) bitmap_line::yd#10 reg byte y 0.8888888888888888
(byte) bitmap_line::yd#11 reg byte y 0.8888888888888888
(byte) bitmap_line::yd#2 reg byte y 0.8888888888888888
(void()) bitmap_line_xdyd((byte) bitmap_line_xdyd::x , (byte) bitmap_line_xdyd::y , (byte) bitmap_line_xdyd::x1 , (byte) bitmap_line_xdyd::xd , (byte) bitmap_line_xdyd::yd)
(byte/signed word/word/dword/signed dword~) bitmap_line_xdyd::$6 reg byte x 202.0
(label) bitmap_line_xdyd::@1
(label) bitmap_line_xdyd::@2
(label) bitmap_line_xdyd::@3
(label) bitmap_line_xdyd::@4
(label) bitmap_line_xdyd::@return
(byte) bitmap_line_xdyd::e
(byte) bitmap_line_xdyd::e#0 e zp ZP_BYTE:18 4.0
(byte) bitmap_line_xdyd::e#1 e zp ZP_BYTE:18 134.66666666666666
(byte) bitmap_line_xdyd::e#2 e zp ZP_BYTE:18 202.0
(byte) bitmap_line_xdyd::e#3 e zp ZP_BYTE:18 40.8
(byte) bitmap_line_xdyd::e#6 e zp ZP_BYTE:18 101.0
(byte) bitmap_line_xdyd::x
(byte) bitmap_line_xdyd::x#0 x zp ZP_BYTE:14 0.8
(byte) bitmap_line_xdyd::x#1 x zp ZP_BYTE:14 0.8
(byte) bitmap_line_xdyd::x#2 x zp ZP_BYTE:14 37.875
(byte) bitmap_line_xdyd::x#3 x zp ZP_BYTE:14 76.25
(byte) bitmap_line_xdyd::x#6 x zp ZP_BYTE:14 3.0
(byte) bitmap_line_xdyd::x1
(byte) bitmap_line_xdyd::x1#0 x1 zp ZP_BYTE:13 1.3333333333333333
(byte) bitmap_line_xdyd::x1#1 x1 zp ZP_BYTE:13 1.3333333333333333
(byte) bitmap_line_xdyd::x1#6 x1 zp ZP_BYTE:13 7.5
(byte) bitmap_line_xdyd::xd
(byte) bitmap_line_xdyd::xd#0 xd zp ZP_BYTE:8 2.0
(byte) bitmap_line_xdyd::xd#1 xd zp ZP_BYTE:8 2.0
(byte) bitmap_line_xdyd::xd#5 xd zp ZP_BYTE:8 14.714285714285715
(byte) bitmap_line_xdyd::y
(byte) bitmap_line_xdyd::y#0 y zp ZP_BYTE:15 1.0
(byte) bitmap_line_xdyd::y#1 y zp ZP_BYTE:15 1.0
(byte) bitmap_line_xdyd::y#2 y zp ZP_BYTE:15 101.0
(byte) bitmap_line_xdyd::y#3 y zp ZP_BYTE:15 58.00000000000001
(byte) bitmap_line_xdyd::y#5 y zp ZP_BYTE:15 3.0
(byte) bitmap_line_xdyd::y#6 y zp ZP_BYTE:15 101.0
(byte) bitmap_line_xdyd::yd
(byte) bitmap_line_xdyd::yd#0 yd zp ZP_BYTE:7 4.0
(byte) bitmap_line_xdyd::yd#1 yd zp ZP_BYTE:7 4.0
(byte) bitmap_line_xdyd::yd#2 yd zp ZP_BYTE:7 7.642857142857143
(void()) bitmap_line_xdyi((byte) bitmap_line_xdyi::x , (byte) bitmap_line_xdyi::y , (byte) bitmap_line_xdyi::x1 , (byte) bitmap_line_xdyi::xd , (byte) bitmap_line_xdyi::yd)
(byte/signed word/word/dword/signed dword~) bitmap_line_xdyi::$6 reg byte x 202.0
(label) bitmap_line_xdyi::@1
(label) bitmap_line_xdyi::@2
(label) bitmap_line_xdyi::@3
(label) bitmap_line_xdyi::@4
(label) bitmap_line_xdyi::@return
(byte) bitmap_line_xdyi::e
(byte) bitmap_line_xdyi::e#0 e zp ZP_BYTE:18 4.0
(byte) bitmap_line_xdyi::e#1 e zp ZP_BYTE:18 134.66666666666666
(byte) bitmap_line_xdyi::e#2 e zp ZP_BYTE:18 202.0
(byte) bitmap_line_xdyi::e#3 e zp ZP_BYTE:18 40.8
(byte) bitmap_line_xdyi::e#6 e zp ZP_BYTE:18 101.0
(byte) bitmap_line_xdyi::x
(byte) bitmap_line_xdyi::x#0 x zp ZP_BYTE:14 0.8
(byte) bitmap_line_xdyi::x#1 x zp ZP_BYTE:14 0.8
(byte) bitmap_line_xdyi::x#2 x zp ZP_BYTE:14 37.875
(byte) bitmap_line_xdyi::x#3 x zp ZP_BYTE:14 76.25
(byte) bitmap_line_xdyi::x#6 x zp ZP_BYTE:14 3.0
(byte) bitmap_line_xdyi::x1
(byte) bitmap_line_xdyi::x1#0 x1 zp ZP_BYTE:13 1.3333333333333333
(byte) bitmap_line_xdyi::x1#1 x1 zp ZP_BYTE:13 1.3333333333333333
(byte) bitmap_line_xdyi::x1#6 x1 zp ZP_BYTE:13 7.5
(byte) bitmap_line_xdyi::xd
(byte) bitmap_line_xdyi::xd#0 xd zp ZP_BYTE:8 2.0
(byte) bitmap_line_xdyi::xd#1 xd zp ZP_BYTE:8 2.0
(byte) bitmap_line_xdyi::xd#5 xd zp ZP_BYTE:8 14.714285714285715
(byte) bitmap_line_xdyi::y
(byte) bitmap_line_xdyi::y#0 y zp ZP_BYTE:15 1.0
(byte) bitmap_line_xdyi::y#1 y zp ZP_BYTE:15 1.0
(byte) bitmap_line_xdyi::y#2 y zp ZP_BYTE:15 101.0
(byte) bitmap_line_xdyi::y#3 y zp ZP_BYTE:15 58.00000000000001
(byte) bitmap_line_xdyi::y#5 y zp ZP_BYTE:15 3.0
(byte) bitmap_line_xdyi::y#6 y zp ZP_BYTE:15 101.0
(byte) bitmap_line_xdyi::yd
(byte) bitmap_line_xdyi::yd#0 yd zp ZP_BYTE:7 4.0
(byte) bitmap_line_xdyi::yd#1 yd zp ZP_BYTE:7 4.0
(byte) bitmap_line_xdyi::yd#2 yd zp ZP_BYTE:7 7.642857142857143
(void()) bitmap_line_ydxd((byte) bitmap_line_ydxd::y , (byte) bitmap_line_ydxd::x , (byte) bitmap_line_ydxd::y1 , (byte) bitmap_line_ydxd::yd , (byte) bitmap_line_ydxd::xd)
(byte/signed word/word/dword/signed dword~) bitmap_line_ydxd::$6 reg byte a 202.0
(label) bitmap_line_ydxd::@1
(label) bitmap_line_ydxd::@2
(label) bitmap_line_ydxd::@3
(label) bitmap_line_ydxd::@4
(label) bitmap_line_ydxd::@return
(byte) bitmap_line_ydxd::e
(byte) bitmap_line_ydxd::e#0 e zp ZP_BYTE:13 4.0
(byte) bitmap_line_ydxd::e#1 e zp ZP_BYTE:13 134.66666666666666
(byte) bitmap_line_ydxd::e#2 e zp ZP_BYTE:13 202.0
(byte) bitmap_line_ydxd::e#3 e zp ZP_BYTE:13 40.8
(byte) bitmap_line_ydxd::e#6 e zp ZP_BYTE:13 101.0
(byte) bitmap_line_ydxd::x
(byte) bitmap_line_ydxd::x#0 reg byte x 1.0
(byte) bitmap_line_ydxd::x#1 reg byte x 1.0
(byte) bitmap_line_ydxd::x#2 reg byte x 101.0
(byte) bitmap_line_ydxd::x#3 reg byte x 58.00000000000001
(byte) bitmap_line_ydxd::x#5 reg byte x 3.0
(byte) bitmap_line_ydxd::x#6 reg byte x 101.0
(byte) bitmap_line_ydxd::xd
(byte) bitmap_line_ydxd::xd#0 xd zp ZP_BYTE:8 4.0
(byte) bitmap_line_ydxd::xd#1 xd zp ZP_BYTE:8 4.0
(byte) bitmap_line_ydxd::xd#2 xd zp ZP_BYTE:8 7.642857142857143
(byte) bitmap_line_ydxd::y
(byte) bitmap_line_ydxd::y#0 y zp ZP_BYTE:14 0.8
(byte) bitmap_line_ydxd::y#1 y zp ZP_BYTE:14 0.8
(byte) bitmap_line_ydxd::y#2 y zp ZP_BYTE:14 76.25
(byte) bitmap_line_ydxd::y#3 y zp ZP_BYTE:14 37.875
(byte) bitmap_line_ydxd::y#7 y zp ZP_BYTE:14 3.0
(byte) bitmap_line_ydxd::y1
(byte) bitmap_line_ydxd::y1#0 y1 zp ZP_BYTE:15 1.3333333333333333
(byte) bitmap_line_ydxd::y1#1 y1 zp ZP_BYTE:15 1.3333333333333333
(byte) bitmap_line_ydxd::y1#6 y1 zp ZP_BYTE:15 7.5
(byte) bitmap_line_ydxd::yd
(byte) bitmap_line_ydxd::yd#0 yd zp ZP_BYTE:7 2.0
(byte) bitmap_line_ydxd::yd#1 yd zp ZP_BYTE:7 2.0
(byte) bitmap_line_ydxd::yd#5 yd zp ZP_BYTE:7 14.714285714285715
(void()) bitmap_line_ydxi((byte) bitmap_line_ydxi::y , (byte) bitmap_line_ydxi::x , (byte) bitmap_line_ydxi::y1 , (byte) bitmap_line_ydxi::yd , (byte) bitmap_line_ydxi::xd)
(byte/signed word/word/dword/signed dword~) bitmap_line_ydxi::$6 reg byte a 202.0
(label) bitmap_line_ydxi::@1
(label) bitmap_line_ydxi::@2
(label) bitmap_line_ydxi::@3
(label) bitmap_line_ydxi::@4
(label) bitmap_line_ydxi::@return
(byte) bitmap_line_ydxi::e
(byte) bitmap_line_ydxi::e#0 e zp ZP_BYTE:13 4.0
(byte) bitmap_line_ydxi::e#1 e zp ZP_BYTE:13 134.66666666666666
(byte) bitmap_line_ydxi::e#2 e zp ZP_BYTE:13 202.0
(byte) bitmap_line_ydxi::e#3 e zp ZP_BYTE:13 40.8
(byte) bitmap_line_ydxi::e#6 e zp ZP_BYTE:13 101.0
(byte) bitmap_line_ydxi::x
(byte) bitmap_line_ydxi::x#0 reg byte x 1.0
(byte) bitmap_line_ydxi::x#1 reg byte x 1.0
(byte) bitmap_line_ydxi::x#2 reg byte x 101.0
(byte) bitmap_line_ydxi::x#3 reg byte x 58.00000000000001
(byte) bitmap_line_ydxi::x#5 reg byte x 3.0
(byte) bitmap_line_ydxi::x#6 reg byte x 101.0
(byte) bitmap_line_ydxi::xd
(byte) bitmap_line_ydxi::xd#0 xd zp ZP_BYTE:8 4.0
(byte) bitmap_line_ydxi::xd#1 xd zp ZP_BYTE:8 4.0
(byte) bitmap_line_ydxi::xd#2 xd zp ZP_BYTE:8 7.642857142857143
(byte) bitmap_line_ydxi::y
(byte) bitmap_line_ydxi::y#0 y zp ZP_BYTE:14 0.8
(byte) bitmap_line_ydxi::y#1 y zp ZP_BYTE:14 0.8
(byte) bitmap_line_ydxi::y#2 y zp ZP_BYTE:14 37.875
(byte) bitmap_line_ydxi::y#3 y zp ZP_BYTE:14 76.25
(byte) bitmap_line_ydxi::y#6 y zp ZP_BYTE:14 3.0
(byte) bitmap_line_ydxi::y1
(byte) bitmap_line_ydxi::y1#0 y1 zp ZP_BYTE:18 1.3333333333333333
(byte) bitmap_line_ydxi::y1#1 y1 zp ZP_BYTE:18 1.3333333333333333
(byte) bitmap_line_ydxi::y1#6 y1 zp ZP_BYTE:18 7.5
(byte) bitmap_line_ydxi::yd
(byte) bitmap_line_ydxi::yd#0 yd zp ZP_BYTE:7 2.0
(byte) bitmap_line_ydxi::yd#1 yd zp ZP_BYTE:7 2.0
(byte) bitmap_line_ydxi::yd#5 yd zp ZP_BYTE:7 14.714285714285715
(void()) bitmap_plot((byte) bitmap_plot::x , (byte) bitmap_plot::y)
(word~) bitmap_plot::$0 $0 zp ZP_WORD:3 1.0
(byte~) bitmap_plot::$1 reg byte a 4.0
(label) bitmap_plot::@return
(byte*) bitmap_plot::plotter
(word) bitmap_plot::plotter_x
(word) bitmap_plot::plotter_x#0 plotter_x zp ZP_WORD:3 2.0
(word) bitmap_plot::plotter_y
(word) bitmap_plot::plotter_y#0 plotter_y zp ZP_WORD:5 4.0
(byte) bitmap_plot::x
(byte) bitmap_plot::x#0 reg byte x 101.0
(byte) bitmap_plot::x#1 reg byte x 101.0
(byte) bitmap_plot::x#2 reg byte x 101.0
(byte) bitmap_plot::x#3 reg byte x 101.0
(byte) bitmap_plot::x#4 reg byte x 102.5
(byte) bitmap_plot::y
(byte) bitmap_plot::y#0 reg byte y 202.0
(byte) bitmap_plot::y#1 reg byte y 202.0
(byte) bitmap_plot::y#2 reg byte y 202.0
(byte) bitmap_plot::y#3 reg byte y 202.0
(byte) bitmap_plot::y#4 reg byte y 204.0
(byte[$100]) bitmap_plot_bit
(const byte[$100]) bitmap_plot_bit#0 bitmap_plot_bit = { fill( $100, 0) }
(byte[$100]) bitmap_plot_xhi
(const byte[$100]) bitmap_plot_xhi#0 bitmap_plot_xhi = { fill( $100, 0) }
(byte[$100]) bitmap_plot_xlo
(const byte[$100]) bitmap_plot_xlo#0 bitmap_plot_xlo = { fill( $100, 0) }
(byte[$100]) bitmap_plot_yhi
(const byte[$100]) bitmap_plot_yhi#0 bitmap_plot_yhi = { fill( $100, 0) }
(byte[$100]) bitmap_plot_ylo
(const byte[$100]) bitmap_plot_ylo#0 bitmap_plot_ylo = { fill( $100, 0) }
(void()) dtvSetCpuBankSegment1((byte) dtvSetCpuBankSegment1::cpuBankIdx)
(label) dtvSetCpuBankSegment1::@return
(byte*) dtvSetCpuBankSegment1::cpuBank
(const byte*) dtvSetCpuBankSegment1::cpuBank#0 cpuBank = ((byte*))(byte/word/signed word/dword/signed dword) $ff
(byte) dtvSetCpuBankSegment1::cpuBankIdx
(byte) dtvSetCpuBankSegment1::cpuBankIdx#1 reg byte a 202.0
(byte) dtvSetCpuBankSegment1::cpuBankIdx#11 reg byte a 4.0
(byte) dtvSetCpuBankSegment1::cpuBankIdx#13 reg byte a 105.0
(byte*) form_a_mod_hi
(const byte*) form_a_mod_hi#0 form_a_mod_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $f
(byte*) form_a_mod_lo
(const byte*) form_a_mod_lo#0 form_a_mod_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $10
(byte*) form_a_pattern
(const byte*) form_a_pattern#0 form_a_pattern = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $a
(byte*) form_a_start_hi
(const byte*) form_a_start_hi#0 form_a_start_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $b
(byte*) form_a_start_lo
(const byte*) form_a_start_lo#0 form_a_start_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $c
(byte*) form_a_step_hi
(const byte*) form_a_step_hi#0 form_a_step_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $d
(byte*) form_a_step_lo
(const byte*) form_a_step_lo#0 form_a_step_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $e
(byte*) form_b_mod_hi
(const byte*) form_b_mod_hi#0 form_b_mod_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $16
(byte*) form_b_mod_lo
(const byte*) form_b_mod_lo#0 form_b_mod_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $17
(byte*) form_b_pattern
(const byte*) form_b_pattern#0 form_b_pattern = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $11
(byte*) form_b_start_hi
(const byte*) form_b_start_hi#0 form_b_start_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $12
(byte*) form_b_start_lo
(const byte*) form_b_start_lo#0 form_b_start_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $13
(byte*) form_b_step_hi
(const byte*) form_b_step_hi#0 form_b_step_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $14
(byte*) form_b_step_lo
(const byte*) form_b_step_lo#0 form_b_step_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $15
(byte()) form_control()
(byte~) form_control::$13 reg byte a 4.0
(byte/word/dword~) form_control::$14 reg byte a 4.0
(byte~) form_control::$15 reg byte a 4.0
(byte~) form_control::$16 reg byte a 4.0
(byte~) form_control::$24 reg byte a 4.0
(label) form_control::@1
(label) form_control::@10
(label) form_control::@11
(label) form_control::@12
(label) form_control::@13
(label) form_control::@14
(label) form_control::@15
(label) form_control::@16
(label) form_control::@17
(label) form_control::@18
(label) form_control::@19
(label) form_control::@2
(label) form_control::@20
(label) form_control::@21
(label) form_control::@22
(label) form_control::@23
(label) form_control::@3
(label) form_control::@4
(label) form_control::@5
(label) form_control::@6
(label) form_control::@7
(label) form_control::@8
(label) form_control::@9
(label) form_control::@return
(byte*) form_control::field
(byte*) form_control::field#0 field zp ZP_WORD:3 0.5925925925925926
(byte) form_control::key_event
(byte) form_control::key_event#0 reg byte a 2.6666666666666665
(byte) form_control::return
(byte) form_control::return#0 reg byte a 2002.0
(byte) form_control::return#2 reg byte x 333.6666666666667
(byte*) form_ctrl_bmm
(const byte*) form_ctrl_bmm#0 form_ctrl_bmm = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 1
(byte*) form_ctrl_borof
(const byte*) form_ctrl_borof#0 form_ctrl_borof = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 8
(byte*) form_ctrl_chunk
(const byte*) form_ctrl_chunk#0 form_ctrl_chunk = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 7
(byte*) form_ctrl_colof
(const byte*) form_ctrl_colof#0 form_ctrl_colof = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 6
(byte*) form_ctrl_ecm
(const byte*) form_ctrl_ecm#0 form_ctrl_ecm = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 3
(byte*) form_ctrl_hicol
(const byte*) form_ctrl_hicol#0 form_ctrl_hicol = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 4
(byte*) form_ctrl_line
(const byte*) form_ctrl_line#0 form_ctrl_line = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 5
(byte*) form_ctrl_mcm
(const byte*) form_ctrl_mcm#0 form_ctrl_mcm = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 2
(byte*) form_ctrl_overs
(const byte*) form_ctrl_overs#0 form_ctrl_overs = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) 9
(signed byte) form_cursor_count
(signed byte) form_cursor_count#1 form_cursor_count zp ZP_BYTE:13 0.3333333333333333
(signed byte) form_cursor_count#15 form_cursor_count zp ZP_BYTE:13 0.4
(signed byte) form_cursor_count#16 form_cursor_count zp ZP_BYTE:13 65.82352941176472
(signed byte) form_cursor_count#21 form_cursor_count zp ZP_BYTE:13 157.99999999999997
(signed byte) form_cursor_count#5 form_cursor_count zp ZP_BYTE:13 2.0
(byte*) form_dtv_palet
(const byte*) form_dtv_palet#0 form_dtv_palet = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $1b
(byte) form_field_idx
(byte) form_field_idx#1 form_field_idx zp ZP_BYTE:14 0.3333333333333333
(byte) form_field_idx#18 form_field_idx zp ZP_BYTE:14 65.94117647058826
(byte) form_field_idx#28 form_field_idx zp ZP_BYTE:14 29.17948717948718
(byte) form_field_idx#31 form_field_idx zp ZP_BYTE:14 6.0
(byte) form_field_idx#44 form_field_idx zp ZP_BYTE:14 2.0
(byte) form_field_idx#45 form_field_idx zp ZP_BYTE:14 2.0
(byte*()) form_field_ptr((byte) form_field_ptr::field_idx)
(word~) form_field_ptr::$2 $2 zp ZP_WORD:3 1.0
(label) form_field_ptr::@return
(byte*) form_field_ptr::field
(byte) form_field_ptr::field_idx
(byte) form_field_ptr::field_idx#0 reg byte y 2002.0
(byte) form_field_ptr::field_idx#1 reg byte y 4.0
(byte) form_field_ptr::field_idx#2 reg byte y 335.66666666666674
(byte*) form_field_ptr::line
(byte*) form_field_ptr::return
(byte*) form_field_ptr::return#0 return zp ZP_WORD:3 251.25
(byte*) form_field_ptr::return#2 return zp ZP_WORD:3 2002.0
(byte*) form_field_ptr::return#3 return zp ZP_WORD:3 4.0
(byte) form_field_ptr::x
(byte) form_field_ptr::x#0 reg byte a 4.0
(byte) form_field_ptr::y
(byte) form_field_ptr::y#0 reg byte x 6.0
(byte) form_fields_cnt
(const byte) form_fields_cnt#0 form_fields_cnt = (byte/signed byte/word/signed word/dword/signed dword) $24
(byte[]) form_fields_max
(const byte[]) form_fields_max#0 form_fields_max = { (byte/signed byte/word/signed word/dword/signed dword) $a, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) 3, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f, (byte/signed byte/word/signed word/dword/signed dword) $f }
(byte[]) form_fields_val
(const byte[]) form_fields_val#0 form_fields_val = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) form_fields_x
(const byte[]) form_fields_x#0 form_fields_x = { (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $18, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $18, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $18, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $18, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $18, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $18, (byte/signed byte/word/signed word/dword/signed dword) $19, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $24, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $24, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $24, (byte/signed byte/word/signed word/dword/signed dword) $25, (byte/signed byte/word/signed word/dword/signed dword) $24, (byte/signed byte/word/signed word/dword/signed dword) $25 }
(byte[]) form_fields_y
(const byte[]) form_fields_y#0 form_fields_y = { (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 9, (byte/signed byte/word/signed word/dword/signed dword) $a, (byte/signed byte/word/signed word/dword/signed dword) $b, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) $b, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) $e, (byte/signed byte/word/signed word/dword/signed dword) $e, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) $a, (byte/signed byte/word/signed word/dword/signed dword) $b, (byte/signed byte/word/signed word/dword/signed dword) $b, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) $e, (byte/signed byte/word/signed word/dword/signed dword) $e }
(byte[$19]) form_line_hi
(const byte[$19]) form_line_hi#0 form_line_hi = { fill( $19, 0) }
(byte[$19]) form_line_lo
(const byte[$19]) form_line_lo#0 form_line_lo = { fill( $19, 0) }
(void()) form_mode()
(byte~) form_mode::$36 reg byte a 2002.0
(label) form_mode::@1
(label) form_mode::@10
(label) form_mode::@11
(label) form_mode::@12
(label) form_mode::@13
(label) form_mode::@14
(label) form_mode::@15
(label) form_mode::@16
(label) form_mode::@17
(label) form_mode::@18
(label) form_mode::@19
(label) form_mode::@2
(label) form_mode::@3
(label) form_mode::@4
(label) form_mode::@5
(label) form_mode::@6
(label) form_mode::@7
(label) form_mode::@8
(label) form_mode::@9
(label) form_mode::@return
(byte) form_mode::i
(byte) form_mode::i#1 reg byte x 151.5
(byte) form_mode::i#2 reg byte x 202.0
(byte) form_mode::preset_current
(byte) form_mode::preset_current#0 preset_current zp ZP_BYTE:15 4.0
(byte) form_mode::preset_current#1 preset_current zp ZP_BYTE:15 50.5
(byte) form_mode::preset_current#6 preset_current zp ZP_BYTE:15 157.71428571428572
(byte*) form_preset
(void()) form_render_values()
(label) form_render_values::@1
(label) form_render_values::@2
(label) form_render_values::@return
(byte*) form_render_values::field
(byte*) form_render_values::field#0 field zp ZP_WORD:3 2002.0
(byte) form_render_values::idx
(byte) form_render_values::idx#1 idx zp ZP_BYTE:2 1501.5
(byte) form_render_values::idx#2 idx zp ZP_BYTE:2 667.3333333333334
(void()) form_set_screen((byte*) form_set_screen::screen)
(byte~) form_set_screen::$0 reg byte a 202.0
(byte~) form_set_screen::$1 reg byte a 202.0
(label) form_set_screen::@1
(label) form_set_screen::@return
(byte*) form_set_screen::line
(byte*) form_set_screen::line#1 line zp ZP_WORD:3 67.33333333333333
(byte*) form_set_screen::line#2 line zp ZP_WORD:3 80.8
(byte*) form_set_screen::screen
(byte) form_set_screen::y
(byte) form_set_screen::y#1 reg byte x 151.5
(byte) form_set_screen::y#2 reg byte x 67.33333333333333
(byte*) form_vic_bg0_hi
(const byte*) form_vic_bg0_hi#0 form_vic_bg0_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $1c
(byte*) form_vic_bg0_lo
(const byte*) form_vic_bg0_lo#0 form_vic_bg0_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $1d
(byte*) form_vic_bg1_hi
(const byte*) form_vic_bg1_hi#0 form_vic_bg1_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $1e
(byte*) form_vic_bg1_lo
(const byte*) form_vic_bg1_lo#0 form_vic_bg1_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $1f
(byte*) form_vic_bg2_hi
(const byte*) form_vic_bg2_hi#0 form_vic_bg2_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $20
(byte*) form_vic_bg2_lo
(const byte*) form_vic_bg2_lo#0 form_vic_bg2_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $21
(byte*) form_vic_bg3_hi
(const byte*) form_vic_bg3_hi#0 form_vic_bg3_hi = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $22
(byte*) form_vic_bg3_lo
(const byte*) form_vic_bg3_lo#0 form_vic_bg3_lo = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $23
(byte*) form_vic_cols
(const byte*) form_vic_cols#0 form_vic_cols = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $1a
(byte*) form_vic_gfx
(const byte*) form_vic_gfx#0 form_vic_gfx = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $19
(byte*) form_vic_screen
(const byte*) form_vic_screen#0 form_vic_screen = (const byte[]) form_fields_val#0+(byte/signed byte/word/signed word/dword/signed dword) $18
(dword()) get_plane((byte) get_plane::idx)
(label) get_plane::@1
(label) get_plane::@10
(label) get_plane::@11
(label) get_plane::@12
(label) get_plane::@13
(label) get_plane::@14
(label) get_plane::@2
(label) get_plane::@3
(label) get_plane::@4
(label) get_plane::@5
(label) get_plane::@6
(label) get_plane::@7
(label) get_plane::@8
(label) get_plane::@9
(label) get_plane::@return
(byte) get_plane::idx
(byte) get_plane::idx#0 reg byte a 4.0
(byte) get_plane::idx#1 reg byte a 4.0
(byte) get_plane::idx#10 reg byte a 2.285714285714285
(dword) get_plane::return
(dword) get_plane::return#14 return zp ZP_DWORD:9 1.0
(dword) get_plane::return#16 return zp ZP_DWORD:9 4.0
(dword) get_plane::return#17 return zp ZP_DWORD:9 4.0
(byte*()) get_vic_charset((byte) get_vic_charset::idx)
(label) get_vic_charset::@1
(label) get_vic_charset::@2
(label) get_vic_charset::@return
(byte) get_vic_charset::idx
(byte) get_vic_charset::idx#0 reg byte a 3.0
(byte*) get_vic_charset::return
(byte*) get_vic_charset::return#2 return zp ZP_WORD:3 0.6666666666666666
(byte*) get_vic_charset::return#4 return zp ZP_WORD:3 4.0
(byte*()) get_vic_screen((byte) get_vic_screen::idx)
(label) get_vic_screen::@1
(label) get_vic_screen::@2
(label) get_vic_screen::@3
(label) get_vic_screen::@4
(label) get_vic_screen::@5
(label) get_vic_screen::@return
(byte) get_vic_screen::idx
(byte) get_vic_screen::idx#0 reg byte a 4.0
(byte) get_vic_screen::idx#1 reg byte a 4.0
(byte) get_vic_screen::idx#2 reg byte a 2.8
(byte*) get_vic_screen::return
(byte*) get_vic_screen::return#10 return zp ZP_WORD:3 4.0
(byte*) get_vic_screen::return#11 return zp ZP_WORD:3 4.0
(byte*) get_vic_screen::return#5 return zp ZP_WORD:3 1.0
(void()) gfx_init()
(label) gfx_init::@1
(label) gfx_init::@10
(label) gfx_init::@11
(label) gfx_init::@12
(label) gfx_init::@13
(label) gfx_init::@14
(label) gfx_init::@2
(label) gfx_init::@3
(label) gfx_init::@4
(label) gfx_init::@5
(label) gfx_init::@6
(label) gfx_init::@7
(label) gfx_init::@8
(label) gfx_init::@9
(label) gfx_init::@return
(void()) gfx_init_charset()
(label) gfx_init_charset::@1
(label) gfx_init_charset::@2
(label) gfx_init_charset::@3
(label) gfx_init_charset::@4
(label) gfx_init_charset::@return
(byte) gfx_init_charset::c
(byte) gfx_init_charset::c#1 c zp ZP_BYTE:2 16.5
(byte) gfx_init_charset::c#4 c zp ZP_BYTE:2 3.142857142857143
(byte*) gfx_init_charset::chargen
(byte*) gfx_init_charset::chargen#1 chargen zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_charset::chargen#2 chargen zp ZP_WORD:3 104.66666666666666
(byte*) gfx_init_charset::chargen#3 chargen zp ZP_WORD:3 22.0
(byte*) gfx_init_charset::charset
(byte*) gfx_init_charset::charset#1 charset zp ZP_WORD:5 35.5
(byte*) gfx_init_charset::charset#2 charset zp ZP_WORD:5 157.0
(byte*) gfx_init_charset::charset#3 charset zp ZP_WORD:5 22.0
(byte) gfx_init_charset::l
(byte) gfx_init_charset::l#1 reg byte x 151.5
(byte) gfx_init_charset::l#2 reg byte x 50.5
(void()) gfx_init_plane_8bppchunky()
(word~) gfx_init_plane_8bppchunky::$9 $9 zp ZP_WORD:16 202.0
(label) gfx_init_plane_8bppchunky::@1
(label) gfx_init_plane_8bppchunky::@2
(label) gfx_init_plane_8bppchunky::@3
(label) gfx_init_plane_8bppchunky::@4
(label) gfx_init_plane_8bppchunky::@5
(label) gfx_init_plane_8bppchunky::@6
(label) gfx_init_plane_8bppchunky::@7
(label) gfx_init_plane_8bppchunky::@return
(byte) gfx_init_plane_8bppchunky::c
(byte) gfx_init_plane_8bppchunky::c#0 reg byte a 202.0
(byte*) gfx_init_plane_8bppchunky::gfxb
(byte*) gfx_init_plane_8bppchunky::gfxb#1 gfxb zp ZP_WORD:5 42.599999999999994
(byte*) gfx_init_plane_8bppchunky::gfxb#3 gfxb zp ZP_WORD:5 157.0
(byte*) gfx_init_plane_8bppchunky::gfxb#4 gfxb zp ZP_WORD:5 75.75
(byte*) gfx_init_plane_8bppchunky::gfxb#5 gfxb zp ZP_WORD:5 22.0
(byte) gfx_init_plane_8bppchunky::gfxbCpuBank
(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#2 reg byte x 202.0
(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#4 reg byte x 103.75
(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#7 reg byte x 22.0
(byte) gfx_init_plane_8bppchunky::gfxbCpuBank#8 reg byte x 34.888888888888886
(word) gfx_init_plane_8bppchunky::x
(word) gfx_init_plane_8bppchunky::x#1 x zp ZP_WORD:3 151.5
(word) gfx_init_plane_8bppchunky::x#2 x zp ZP_WORD:3 30.299999999999997
(byte) gfx_init_plane_8bppchunky::y
(byte) gfx_init_plane_8bppchunky::y#1 y zp ZP_BYTE:2 16.5
(byte) gfx_init_plane_8bppchunky::y#6 y zp ZP_BYTE:2 9.461538461538462
(void()) gfx_init_plane_blank()
(label) gfx_init_plane_blank::@return
(void()) gfx_init_plane_charset8()
(byte~) gfx_init_plane_charset8::$8 reg byte a 2002.0
(label) gfx_init_plane_charset8::@1
(label) gfx_init_plane_charset8::@2
(label) gfx_init_plane_charset8::@3
(label) gfx_init_plane_charset8::@4
(label) gfx_init_plane_charset8::@5
(label) gfx_init_plane_charset8::@6
(label) gfx_init_plane_charset8::@7
(label) gfx_init_plane_charset8::@8
(label) gfx_init_plane_charset8::@9
(label) gfx_init_plane_charset8::@return
(byte) gfx_init_plane_charset8::bits
(byte) gfx_init_plane_charset8::bits#0 bits zp ZP_BYTE:8 101.0
(byte) gfx_init_plane_charset8::bits#1 bits zp ZP_BYTE:8 500.5
(byte) gfx_init_plane_charset8::bits#2 bits zp ZP_BYTE:8 443.42857142857144
(byte) gfx_init_plane_charset8::c
(byte) gfx_init_plane_charset8::c#2 reg byte a 2002.0
(byte~) gfx_init_plane_charset8::c#3 reg byte a 2002.0
(byte) gfx_init_plane_charset8::ch
(byte) gfx_init_plane_charset8::ch#1 ch zp ZP_BYTE:2 16.5
(byte) gfx_init_plane_charset8::ch#8 ch zp ZP_BYTE:2 1.2941176470588236
(byte*) gfx_init_plane_charset8::chargen
(byte*) gfx_init_plane_charset8::chargen#1 chargen zp ZP_WORD:3 13.3125
(byte*) gfx_init_plane_charset8::chargen#2 chargen zp ZP_WORD:3 157.0
(byte*) gfx_init_plane_charset8::chargen#3 chargen zp ZP_WORD:3 22.0
(byte) gfx_init_plane_charset8::col
(byte) gfx_init_plane_charset8::col#1 col zp ZP_BYTE:13 302.0
(byte) gfx_init_plane_charset8::col#2 col zp ZP_BYTE:13 388.0
(byte) gfx_init_plane_charset8::col#5 col zp ZP_BYTE:13 71.0
(byte) gfx_init_plane_charset8::col#6 col zp ZP_BYTE:13 22.0
(byte) gfx_init_plane_charset8::cp
(byte) gfx_init_plane_charset8::cp#1 reg byte x 1501.5
(byte) gfx_init_plane_charset8::cp#2 reg byte x 222.44444444444446
(byte) gfx_init_plane_charset8::cr
(byte) gfx_init_plane_charset8::cr#1 cr zp ZP_BYTE:7 151.5
(byte) gfx_init_plane_charset8::cr#6 cr zp ZP_BYTE:7 14.428571428571429
(byte*) gfx_init_plane_charset8::gfxa
(byte*) gfx_init_plane_charset8::gfxa#1 gfxa zp ZP_WORD:5 234.8888888888889
(byte*) gfx_init_plane_charset8::gfxa#2 gfxa zp ZP_WORD:5 517.3333333333334
(byte*) gfx_init_plane_charset8::gfxa#5 gfxa zp ZP_WORD:5 71.0
(byte*) gfx_init_plane_charset8::gfxa#6 gfxa zp ZP_WORD:5 22.0
(byte) gfx_init_plane_charset8::gfxbCpuBank
(const byte) gfx_init_plane_charset8::gfxbCpuBank#0 gfxbCpuBank = ((byte))(const dword) PLANE_CHARSET8#0/(word/signed word/dword/signed dword) $4000
(void()) gfx_init_plane_fill((dword) gfx_init_plane_fill::plane_addr , (byte) gfx_init_plane_fill::fill)
(dword~) gfx_init_plane_fill::$0 $0 zp ZP_DWORD:19 4.0
(word~) gfx_init_plane_fill::$1 $1 zp ZP_WORD:3 4.0
(word~) gfx_init_plane_fill::$4 $4 zp ZP_WORD:3 4.0
(word~) gfx_init_plane_fill::$5 $5 zp ZP_WORD:3 4.0
(word/signed dword/dword~) gfx_init_plane_fill::$6 $6 zp ZP_WORD:3 2.0
(label) gfx_init_plane_fill::@1
(label) gfx_init_plane_fill::@2
(label) gfx_init_plane_fill::@3
(label) gfx_init_plane_fill::@4
(label) gfx_init_plane_fill::@5
(label) gfx_init_plane_fill::@return
(byte) gfx_init_plane_fill::bx
(byte) gfx_init_plane_fill::bx#1 reg byte x 151.5
(byte) gfx_init_plane_fill::bx#2 reg byte x 67.33333333333333
(byte) gfx_init_plane_fill::by
(byte) gfx_init_plane_fill::by#1 by zp ZP_BYTE:7 16.5
(byte) gfx_init_plane_fill::by#4 by zp ZP_BYTE:7 3.6666666666666665
(byte) gfx_init_plane_fill::fill
(byte) gfx_init_plane_fill::fill#6 fill zp ZP_BYTE:2 5.315789473684211
(byte*) gfx_init_plane_fill::gfxb
(byte*) gfx_init_plane_fill::gfxb#1 gfxb zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_plane_fill::gfxb#2 gfxb zp ZP_WORD:3 157.0
(byte*) gfx_init_plane_fill::gfxb#3 gfxb zp ZP_WORD:3 24.0
(byte*~) gfx_init_plane_fill::gfxb#6 gfxb zp ZP_WORD:3 4.0
(byte) gfx_init_plane_fill::gfxbCpuBank
(byte) gfx_init_plane_fill::gfxbCpuBank#0 reg byte x 2.0
(byte) gfx_init_plane_fill::gfxbCpuBank#1 reg byte x 20.0
(dword) gfx_init_plane_fill::plane_addr
(dword) gfx_init_plane_fill::plane_addr#3 plane_addr zp ZP_DWORD:9 0.5714285714285714
(void()) gfx_init_plane_full()
(label) gfx_init_plane_full::@return
(void()) gfx_init_plane_horisontal()
(byte~) gfx_init_plane_horisontal::$8 reg byte a 202.0
(label) gfx_init_plane_horisontal::@1
(label) gfx_init_plane_horisontal::@2
(label) gfx_init_plane_horisontal::@3
(label) gfx_init_plane_horisontal::@4
(label) gfx_init_plane_horisontal::@5
(label) gfx_init_plane_horisontal::@6
(label) gfx_init_plane_horisontal::@7
(label) gfx_init_plane_horisontal::@return
(byte) gfx_init_plane_horisontal::ax
(byte) gfx_init_plane_horisontal::ax#1 reg byte x 151.5
(byte) gfx_init_plane_horisontal::ax#2 reg byte x 25.25
(byte) gfx_init_plane_horisontal::ay
(byte) gfx_init_plane_horisontal::ay#1 ay zp ZP_BYTE:2 16.5
(byte) gfx_init_plane_horisontal::ay#4 ay zp ZP_BYTE:2 11.181818181818182
(byte*) gfx_init_plane_horisontal::gfxa
(byte*) gfx_init_plane_horisontal::gfxa#1 gfxa zp ZP_WORD:3 202.0
(byte*) gfx_init_plane_horisontal::gfxa#2 gfxa zp ZP_WORD:3 202.0
(byte*) gfx_init_plane_horisontal::gfxa#3 gfxa zp ZP_WORD:3 103.2
(byte*) gfx_init_plane_horisontal::gfxa#6 gfxa zp ZP_WORD:3 22.0
(byte*) gfx_init_plane_horisontal::gfxa#7 gfxa zp ZP_WORD:3 62.8
(byte) gfx_init_plane_horisontal::gfxbCpuBank
(const byte) gfx_init_plane_horisontal::gfxbCpuBank#0 gfxbCpuBank = ((byte))(const dword) PLANE_HORISONTAL#0/(word/signed word/dword/signed dword) $4000
(void()) gfx_init_plane_horisontal2()
(byte~) gfx_init_plane_horisontal2::$8 reg byte a 202.0
(label) gfx_init_plane_horisontal2::@1
(label) gfx_init_plane_horisontal2::@2
(label) gfx_init_plane_horisontal2::@3
(label) gfx_init_plane_horisontal2::@4
(label) gfx_init_plane_horisontal2::@return
(byte) gfx_init_plane_horisontal2::ax
(byte) gfx_init_plane_horisontal2::ax#1 reg byte x 151.5
(byte) gfx_init_plane_horisontal2::ax#2 reg byte x 40.4
(byte) gfx_init_plane_horisontal2::ay
(byte) gfx_init_plane_horisontal2::ay#1 ay zp ZP_BYTE:2 16.5
(byte) gfx_init_plane_horisontal2::ay#4 ay zp ZP_BYTE:2 15.375
(byte*) gfx_init_plane_horisontal2::gfxa
(byte*) gfx_init_plane_horisontal2::gfxa#1 gfxa zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_plane_horisontal2::gfxa#2 gfxa zp ZP_WORD:3 78.5
(byte*) gfx_init_plane_horisontal2::gfxa#3 gfxa zp ZP_WORD:3 22.0
(byte) gfx_init_plane_horisontal2::gfxbCpuBank
(const byte) gfx_init_plane_horisontal2::gfxbCpuBank#0 gfxbCpuBank = ((byte))(const dword) PLANE_HORISONTAL2#0/(word/signed word/dword/signed dword) $4000
(byte) gfx_init_plane_horisontal2::row
(byte) gfx_init_plane_horisontal2::row#0 reg byte a 202.0
(byte[]) gfx_init_plane_horisontal2::row_bitmask
(const byte[]) gfx_init_plane_horisontal2::row_bitmask#0 row_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $55, (byte/word/signed word/dword/signed dword) $aa, (byte/word/signed word/dword/signed dword) $ff }
(void()) gfx_init_plane_vertical()
(label) gfx_init_plane_vertical::@1
(label) gfx_init_plane_vertical::@2
(label) gfx_init_plane_vertical::@3
(label) gfx_init_plane_vertical::@4
(label) gfx_init_plane_vertical::@return
(byte) gfx_init_plane_vertical::bx
(byte) gfx_init_plane_vertical::bx#1 reg byte x 151.5
(byte) gfx_init_plane_vertical::bx#2 reg byte x 67.33333333333333
(byte) gfx_init_plane_vertical::by
(byte) gfx_init_plane_vertical::by#1 by zp ZP_BYTE:2 16.5
(byte) gfx_init_plane_vertical::by#4 by zp ZP_BYTE:2 3.6666666666666665
(byte*) gfx_init_plane_vertical::gfxb
(byte*) gfx_init_plane_vertical::gfxb#1 gfxb zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_plane_vertical::gfxb#2 gfxb zp ZP_WORD:3 157.0
(byte*) gfx_init_plane_vertical::gfxb#3 gfxb zp ZP_WORD:3 22.0
(byte) gfx_init_plane_vertical::gfxbCpuBank
(const byte) gfx_init_plane_vertical::gfxbCpuBank#0 gfxbCpuBank = ((byte))(const dword) PLANE_VERTICAL#0/(word/signed word/dword/signed dword) $4000
(void()) gfx_init_plane_vertical2()
(label) gfx_init_plane_vertical2::@return
(void()) gfx_init_screen0()
(byte~) gfx_init_screen0::$0 reg byte a 202.0
(byte~) gfx_init_screen0::$1 $1 zp ZP_BYTE:7 101.0
(byte~) gfx_init_screen0::$2 reg byte a 202.0
(byte~) gfx_init_screen0::$3 reg byte a 202.0
(label) gfx_init_screen0::@1
(label) gfx_init_screen0::@2
(label) gfx_init_screen0::@3
(label) gfx_init_screen0::@return
(byte*) gfx_init_screen0::ch
(byte*) gfx_init_screen0::ch#1 ch zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_screen0::ch#2 ch zp ZP_WORD:3 52.33333333333333
(byte*) gfx_init_screen0::ch#3 ch zp ZP_WORD:3 22.0
(byte) gfx_init_screen0::cx
(byte) gfx_init_screen0::cx#1 reg byte x 151.5
(byte) gfx_init_screen0::cx#2 reg byte x 43.285714285714285
(byte) gfx_init_screen0::cy
(byte) gfx_init_screen0::cy#1 cy zp ZP_BYTE:2 16.5
(byte) gfx_init_screen0::cy#4 cy zp ZP_BYTE:2 12.299999999999999
(void()) gfx_init_screen1()
(byte~) gfx_init_screen1::$0 reg byte a 202.0
(byte~) gfx_init_screen1::$1 reg byte a 202.0
(label) gfx_init_screen1::@1
(label) gfx_init_screen1::@2
(label) gfx_init_screen1::@3
(label) gfx_init_screen1::@return
(byte*) gfx_init_screen1::ch
(byte*) gfx_init_screen1::ch#1 ch zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_screen1::ch#2 ch zp ZP_WORD:3 78.5
(byte*) gfx_init_screen1::ch#3 ch zp ZP_WORD:3 22.0
(byte) gfx_init_screen1::cx
(byte) gfx_init_screen1::cx#1 reg byte x 151.5
(byte) gfx_init_screen1::cx#2 reg byte x 60.599999999999994
(byte) gfx_init_screen1::cy
(byte) gfx_init_screen1::cy#1 cy zp ZP_BYTE:2 16.5
(byte) gfx_init_screen1::cy#4 cy zp ZP_BYTE:2 15.375
(void()) gfx_init_screen2()
(byte~) gfx_init_screen2::$0 reg byte a 202.0
(byte~) gfx_init_screen2::$3 reg byte a 202.0
(byte~) gfx_init_screen2::$4 reg byte a 202.0
(label) gfx_init_screen2::@1
(label) gfx_init_screen2::@2
(label) gfx_init_screen2::@3
(label) gfx_init_screen2::@return
(byte*) gfx_init_screen2::ch
(byte*) gfx_init_screen2::ch#1 ch zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_screen2::ch#2 ch zp ZP_WORD:3 44.85714285714286
(byte*) gfx_init_screen2::ch#3 ch zp ZP_WORD:3 22.0
(byte) gfx_init_screen2::col
(byte) gfx_init_screen2::col#0 reg byte y 151.5
(byte) gfx_init_screen2::col2
(byte) gfx_init_screen2::col2#0 col2 zp ZP_BYTE:7 101.0
(byte) gfx_init_screen2::cx
(byte) gfx_init_screen2::cx#1 reg byte x 151.5
(byte) gfx_init_screen2::cx#2 reg byte x 37.875
(byte) gfx_init_screen2::cy
(byte) gfx_init_screen2::cy#1 cy zp ZP_BYTE:2 16.5
(byte) gfx_init_screen2::cy#4 cy zp ZP_BYTE:2 11.181818181818182
(void()) gfx_init_screen3()
(byte~) gfx_init_screen3::$0 reg byte a 202.0
(byte~) gfx_init_screen3::$1 $1 zp ZP_BYTE:7 101.0
(byte~) gfx_init_screen3::$2 reg byte a 202.0
(byte~) gfx_init_screen3::$3 reg byte a 202.0
(label) gfx_init_screen3::@1
(label) gfx_init_screen3::@2
(label) gfx_init_screen3::@3
(label) gfx_init_screen3::@return
(byte*) gfx_init_screen3::ch
(byte*) gfx_init_screen3::ch#1 ch zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_screen3::ch#2 ch zp ZP_WORD:3 52.33333333333333
(byte*) gfx_init_screen3::ch#3 ch zp ZP_WORD:3 22.0
(byte) gfx_init_screen3::cx
(byte) gfx_init_screen3::cx#1 reg byte x 151.5
(byte) gfx_init_screen3::cx#2 reg byte x 43.285714285714285
(byte) gfx_init_screen3::cy
(byte) gfx_init_screen3::cy#1 cy zp ZP_BYTE:2 16.5
(byte) gfx_init_screen3::cy#4 cy zp ZP_BYTE:2 12.299999999999999
(void()) gfx_init_screen4()
(label) gfx_init_screen4::@1
(label) gfx_init_screen4::@2
(label) gfx_init_screen4::@3
(label) gfx_init_screen4::@return
(byte*) gfx_init_screen4::ch
(byte*) gfx_init_screen4::ch#1 ch zp ZP_WORD:3 42.599999999999994
(byte*) gfx_init_screen4::ch#2 ch zp ZP_WORD:3 157.0
(byte*) gfx_init_screen4::ch#3 ch zp ZP_WORD:3 22.0
(byte) gfx_init_screen4::cx
(byte) gfx_init_screen4::cx#1 reg byte x 151.5
(byte) gfx_init_screen4::cx#2 reg byte x 67.33333333333333
(byte) gfx_init_screen4::cy
(byte) gfx_init_screen4::cy#1 cy zp ZP_BYTE:2 16.5
(byte) gfx_init_screen4::cy#4 cy zp ZP_BYTE:2 3.6666666666666665
(void()) gfx_init_vic_bitmap()
(label) gfx_init_vic_bitmap::@1
(label) gfx_init_vic_bitmap::@2
(label) gfx_init_vic_bitmap::@3
(label) gfx_init_vic_bitmap::@return
(byte) gfx_init_vic_bitmap::l
(byte) gfx_init_vic_bitmap::l#1 l zp ZP_BYTE:2 16.5
(byte) gfx_init_vic_bitmap::l#2 l zp ZP_BYTE:2 11.0
(byte) gfx_init_vic_bitmap::lines_cnt
(const byte) gfx_init_vic_bitmap::lines_cnt#0 lines_cnt = (byte/signed byte/word/signed word/dword/signed dword) 9
(byte[]) gfx_init_vic_bitmap::lines_x
(const byte[]) gfx_init_vic_bitmap::lines_x#0 lines_x = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/word/signed word/dword/signed dword) $ff, (byte/word/signed word/dword/signed dword) $ff, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/word/signed word/dword/signed dword) $80, (byte/word/signed word/dword/signed dword) $ff, (byte/word/signed word/dword/signed dword) $80, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/word/signed word/dword/signed dword) $80 }
(byte[]) gfx_init_vic_bitmap::lines_y
(const byte[]) gfx_init_vic_bitmap::lines_y#0 lines_y = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/word/signed word/dword/signed dword) $c7, (byte/word/signed word/dword/signed dword) $c7, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $64, (byte/word/signed word/dword/signed dword) $c7, (byte/signed byte/word/signed word/dword/signed dword) $64, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(void()) gfx_mode()
(byte~) gfx_mode::$20 reg byte a 4.0
(dword~) gfx_mode::$22 $22 zp ZP_DWORD:9 4.0
(word~) gfx_mode::$24 $24 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$25 reg byte a 4.0
(word~) gfx_mode::$26 $26 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$27 reg byte a 4.0
(word~) gfx_mode::$28 $28 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$29 reg byte a 4.0
(byte~) gfx_mode::$30 reg byte a 4.0
(byte~) gfx_mode::$31 reg byte a 4.0
(byte~) gfx_mode::$32 reg byte a 4.0
(byte~) gfx_mode::$33 reg byte a 4.0
(byte~) gfx_mode::$34 reg byte a 4.0
(dword~) gfx_mode::$36 $36 zp ZP_DWORD:9 4.0
(word~) gfx_mode::$38 $38 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$39 reg byte a 4.0
(word~) gfx_mode::$40 $40 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$41 reg byte a 4.0
(word~) gfx_mode::$42 $42 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$43 reg byte a 4.0
(byte~) gfx_mode::$44 reg byte a 4.0
(byte~) gfx_mode::$45 reg byte a 4.0
(byte~) gfx_mode::$46 reg byte a 4.0
(byte~) gfx_mode::$47 reg byte a 4.0
(byte*~) gfx_mode::$52 $52 zp ZP_WORD:3 2.0
(word~) gfx_mode::$54 $54 zp ZP_WORD:3 4.0
(word~) gfx_mode::$55 $55 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$56 $56 zp ZP_BYTE:2 0.5
(byte*~) gfx_mode::$57 $57 zp ZP_WORD:3 2.0
(word~) gfx_mode::$59 $59 zp ZP_WORD:3 4.0
(byte~) gfx_mode::$60 reg byte a 4.0
(byte~) gfx_mode::$61 reg byte a 4.0
(byte~) gfx_mode::$62 reg byte a 4.0
(byte~) gfx_mode::$64 reg byte a 4.0
(byte~) gfx_mode::$65 reg byte a 4.0
(byte~) gfx_mode::$66 reg byte a 4.0
(byte~) gfx_mode::$67 reg byte a 4.0
(byte~) gfx_mode::$68 reg byte a 4.0
(byte~) gfx_mode::$69 reg byte a 4.0
(byte~) gfx_mode::$70 reg byte a 4.0
(byte~) gfx_mode::$71 reg byte a 4.0
(label) gfx_mode::@1
(label) gfx_mode::@10
(label) gfx_mode::@11
(label) gfx_mode::@12
(label) gfx_mode::@13
(label) gfx_mode::@14
(label) gfx_mode::@15
(label) gfx_mode::@16
(label) gfx_mode::@17
(label) gfx_mode::@18
(label) gfx_mode::@19
(label) gfx_mode::@2
(label) gfx_mode::@20
(label) gfx_mode::@21
(label) gfx_mode::@22
(label) gfx_mode::@23
(label) gfx_mode::@24
(label) gfx_mode::@25
(label) gfx_mode::@26
(label) gfx_mode::@27
(label) gfx_mode::@28
(label) gfx_mode::@29
(label) gfx_mode::@3
(label) gfx_mode::@30
(label) gfx_mode::@31
(label) gfx_mode::@32
(label) gfx_mode::@33
(label) gfx_mode::@4
(label) gfx_mode::@5
(label) gfx_mode::@6
(label) gfx_mode::@7
(label) gfx_mode::@8
(label) gfx_mode::@9
(label) gfx_mode::@return
(byte*) gfx_mode::col
(byte*) gfx_mode::col#1 col zp ZP_WORD:5 350.5
(byte*) gfx_mode::col#2 col zp ZP_WORD:5 1552.0
(byte*) gfx_mode::col#3 col zp ZP_WORD:5 202.0
(byte) gfx_mode::cx
(byte) gfx_mode::cx#1 reg byte x 1501.5
(byte) gfx_mode::cx#2 reg byte x 500.5
(byte) gfx_mode::cy
(byte) gfx_mode::cy#1 cy zp ZP_BYTE:2 151.5
(byte) gfx_mode::cy#4 cy zp ZP_BYTE:2 28.857142857142858
(byte) gfx_mode::dtv_control
(byte) gfx_mode::dtv_control#10 reg byte x 4.0
(byte) gfx_mode::dtv_control#11 reg byte x 4.0
(byte) gfx_mode::dtv_control#12 reg byte x 6.0
(byte) gfx_mode::dtv_control#13 reg byte x 4.0
(byte) gfx_mode::dtv_control#14 reg byte x 2.0
(byte) gfx_mode::dtv_control#15 reg byte x 4.0
(byte) gfx_mode::dtv_control#2 reg byte x 4.0
(byte) gfx_mode::dtv_control#3 reg byte x 4.0
(byte) gfx_mode::dtv_control#4 reg byte x 4.0
(byte) gfx_mode::dtv_control#5 reg byte x 4.0
(byte) gfx_mode::dtv_control#6 reg byte x 4.0
(byte) gfx_mode::i
(byte) gfx_mode::i#1 reg byte x 151.5
(byte) gfx_mode::i#2 reg byte x 202.0
(byte) gfx_mode::j
(byte) gfx_mode::j#1 reg byte x 151.5
(byte) gfx_mode::j#2 reg byte x 202.0
(byte) gfx_mode::keyboard_event
(byte) gfx_mode::keyboard_event#0 reg byte a 202.0
(dword) gfx_mode::plane_a
(dword) gfx_mode::plane_a#0 plane_a zp ZP_DWORD:9 1.1428571428571428
(byte) gfx_mode::plane_a_offs
(byte) gfx_mode::plane_a_offs#0 reg byte x 0.8
(dword) gfx_mode::plane_b
(dword) gfx_mode::plane_b#0 plane_b zp ZP_DWORD:9 1.1428571428571428
(byte) gfx_mode::plane_b_offs
(byte) gfx_mode::plane_b_offs#0 reg byte x 0.8
(byte*) gfx_mode::vic_colors
(byte*) gfx_mode::vic_colors#0 vic_colors zp ZP_WORD:3 4.0
(byte*) gfx_mode::vic_colors#1 vic_colors zp ZP_WORD:3 420.59999999999997
(byte*) gfx_mode::vic_colors#2 vic_colors zp ZP_WORD:3 1034.6666666666667
(byte*) gfx_mode::vic_colors#3 vic_colors zp ZP_WORD:3 204.0
(byte) gfx_mode::vic_control
(byte) gfx_mode::vic_control#2 reg byte x 4.0
(byte) gfx_mode::vic_control#4 reg byte x 6.0
(byte) gfx_mode::vic_control#5 reg byte x 2.0
(byte) gfx_mode::vic_control2
(byte) gfx_mode::vic_control2#2 reg byte a 2.0
(byte[]) keyboard_char_keycodes
(byte()) keyboard_event_get()
(label) keyboard_event_get::@1
(label) keyboard_event_get::@return
(byte) keyboard_event_get::return
(byte) keyboard_event_get::return#1 reg byte a 4.0
(byte) keyboard_event_get::return#2 reg byte a 26.25
(byte) keyboard_event_get::return#3 reg byte a 202.0
(byte) keyboard_event_get::return#4 reg byte a 4.0
(byte()) keyboard_event_pressed((byte) keyboard_event_pressed::keycode)
(byte~) keyboard_event_pressed::$0 reg byte a 4.0
(byte~) keyboard_event_pressed::$1 reg byte a 4.0
(label) keyboard_event_pressed::@return
(byte) keyboard_event_pressed::keycode
(byte) keyboard_event_pressed::keycode#4 keycode zp ZP_BYTE:2 1.3333333333333333
(byte) keyboard_event_pressed::return
(byte) keyboard_event_pressed::return#0 reg byte a 4.0
(byte) keyboard_event_pressed::return#1 reg byte a 4.0
(byte) keyboard_event_pressed::return#10 reg byte a 1.6666666666666665
(byte) keyboard_event_pressed::return#2 reg byte a 4.0
(byte) keyboard_event_pressed::return#3 reg byte a 4.0
(byte) keyboard_event_pressed::row_bits
(byte) keyboard_event_pressed::row_bits#0 row_bits zp ZP_BYTE:7 2.0
(void()) keyboard_event_scan()
(byte~) keyboard_event_scan::$0 reg byte a 4.0
(byte~) keyboard_event_scan::$15 reg byte a 200002.0
(byte~) keyboard_event_scan::$16 reg byte a 200002.0
(byte/word/dword~) keyboard_event_scan::$23 reg byte a 200002.0
(byte~) keyboard_event_scan::$3 reg byte a 4.0
(byte~) keyboard_event_scan::$6 reg byte a 4.0
(byte~) keyboard_event_scan::$9 reg byte a 4.0
(label) keyboard_event_scan::@1
(label) keyboard_event_scan::@10
(label) keyboard_event_scan::@11
(label) keyboard_event_scan::@12
(label) keyboard_event_scan::@13
(label) keyboard_event_scan::@14
(label) keyboard_event_scan::@15
(label) keyboard_event_scan::@16
(label) keyboard_event_scan::@17
(label) keyboard_event_scan::@18
(label) keyboard_event_scan::@19
(label) keyboard_event_scan::@2
(label) keyboard_event_scan::@20
(label) keyboard_event_scan::@21
(label) keyboard_event_scan::@22
(label) keyboard_event_scan::@23
(label) keyboard_event_scan::@3
(label) keyboard_event_scan::@4
(label) keyboard_event_scan::@5
(label) keyboard_event_scan::@6
(label) keyboard_event_scan::@7
(label) keyboard_event_scan::@8
(label) keyboard_event_scan::@9
(label) keyboard_event_scan::@return
(byte) keyboard_event_scan::col
(byte) keyboard_event_scan::col#1 reg byte x 150001.5
(byte) keyboard_event_scan::col#2 reg byte x 28571.714285714286
(byte) keyboard_event_scan::event_type
(byte) keyboard_event_scan::event_type#0 reg byte a 200002.0
(byte) keyboard_event_scan::keycode
(byte) keyboard_event_scan::keycode#1 keycode zp ZP_BYTE:7 20002.0
(byte) keyboard_event_scan::keycode#10 keycode zp ZP_BYTE:7 31538.846153846156
(byte) keyboard_event_scan::keycode#11 keycode zp ZP_BYTE:7 5000.5
(byte) keyboard_event_scan::keycode#14 keycode zp ZP_BYTE:7 10001.0
(byte) keyboard_event_scan::keycode#15 keycode zp ZP_BYTE:7 52500.75
(byte) keyboard_event_scan::row
(byte) keyboard_event_scan::row#1 row zp ZP_BYTE:2 15001.5
(byte) keyboard_event_scan::row#2 row zp ZP_BYTE:2 6000.24
(byte) keyboard_event_scan::row_scan
(byte) keyboard_event_scan::row_scan#0 row_scan zp ZP_BYTE:18 12778.055555555557
(byte[8]) keyboard_events
(const byte[8]) keyboard_events#0 keyboard_events = { fill( 8, 0) }
(byte) keyboard_events_size
(byte) keyboard_events_size#1 keyboard_events_size zp ZP_BYTE:8 200002.0
(byte) keyboard_events_size#100 keyboard_events_size zp ZP_BYTE:8 882.6176470588235
(byte) keyboard_events_size#110 keyboard_events_size zp ZP_BYTE:8 105.0
(byte) keyboard_events_size#118 keyboard_events_size zp ZP_BYTE:8 102001.2
(byte) keyboard_events_size#119 keyboard_events_size zp ZP_BYTE:8 4286.428571428572
(byte) keyboard_events_size#18 keyboard_events_size zp ZP_BYTE:8 81000.90000000001
(byte) keyboard_events_size#2 keyboard_events_size zp ZP_BYTE:8 200002.0
(byte) keyboard_events_size#24 keyboard_events_size zp ZP_BYTE:8 6.6923076923076925
(byte) keyboard_events_size#27 keyboard_events_size zp ZP_BYTE:8 0.3333333333333333
(byte) keyboard_events_size#4 keyboard_events_size zp ZP_BYTE:8 3.0
(byte) keyboard_events_size#47 keyboard_events_size zp ZP_BYTE:8 65.05882352941177
(void()) keyboard_init()
(label) keyboard_init::@return
(byte[8]) keyboard_matrix_col_bitmask
(const byte[8]) keyboard_matrix_col_bitmask#0 keyboard_matrix_col_bitmask = { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) $10, (byte/signed byte/word/signed word/dword/signed dword) $20, (byte/signed byte/word/signed word/dword/signed dword) $40, (byte/word/signed word/dword/signed dword) $80 }
(byte()) keyboard_matrix_read((byte) keyboard_matrix_read::rowid)
(label) keyboard_matrix_read::@return
(byte) keyboard_matrix_read::return
(byte) keyboard_matrix_read::return#0 reg byte a 3334.333333333333
(byte) keyboard_matrix_read::return#2 reg byte a 20002.0
(byte) keyboard_matrix_read::row_pressed_bits
(byte) keyboard_matrix_read::rowid
(byte) keyboard_matrix_read::rowid#0 reg byte x 10003.0
(byte[8]) keyboard_matrix_row_bitmask
(const byte[8]) keyboard_matrix_row_bitmask#0 keyboard_matrix_row_bitmask = { (byte/word/signed word/dword/signed dword) $fe, (byte/word/signed word/dword/signed dword) $fd, (byte/word/signed word/dword/signed dword) $fb, (byte/word/signed word/dword/signed dword) $f7, (byte/word/signed word/dword/signed dword) $ef, (byte/word/signed word/dword/signed dword) $df, (byte/word/signed word/dword/signed dword) $bf, (byte/signed byte/word/signed word/dword/signed dword) $7f }
(byte) keyboard_modifiers
(byte) keyboard_modifiers#18 reg byte x 0.8
(byte) keyboard_modifiers#19 reg byte x 1.6
(byte) keyboard_modifiers#20 reg byte x 1.6
(byte) keyboard_modifiers#21 reg byte x 0.7272727272727273
(byte) keyboard_modifiers#3 reg byte x 4.0
(byte) keyboard_modifiers#4 reg byte x 4.0
(byte) keyboard_modifiers#5 reg byte x 4.0
(byte[8]) keyboard_scan_values
(const byte[8]) keyboard_scan_values#0 keyboard_scan_values = { fill( 8, 0) }
(void()) main()
(label) main::@1
(label) main::@2
(label) main::@3
(label) main::@4
(byte[]) preset_8bpppixelcell
(const byte[]) preset_8bpppixelcell#0 preset_8bpppixelcell = { (byte/signed byte/word/signed word/dword/signed dword) $a, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $b, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_chunky
(const byte[]) preset_chunky#0 preset_chunky = { (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_ecmchar
(const byte[]) preset_ecmchar#0 preset_ecmchar = { (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 6 }
(byte[]) preset_hi_ecmchar
(const byte[]) preset_hi_ecmchar#0 preset_hi_ecmchar = { (byte/signed byte/word/signed word/dword/signed dword) 5, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 3, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 9, (byte/signed byte/word/signed word/dword/signed dword) $c, (byte/signed byte/word/signed word/dword/signed dword) $c }
(byte[]) preset_hi_stdchar
(const byte[]) preset_hi_stdchar#0 preset_hi_stdchar = { (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_mcbm
(const byte[]) preset_mcbm#0 preset_mcbm = { (byte/signed byte/word/signed word/dword/signed dword) 3, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 9, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_sixsfred
(const byte[]) preset_sixsfred#0 preset_sixsfred = { (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 9, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $a, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_sixsfred2
(const byte[]) preset_sixsfred2#0 preset_sixsfred2 = { (byte/signed byte/word/signed word/dword/signed dword) 9, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 9, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $a, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_stdbm
(const byte[]) preset_stdbm#0 preset_stdbm = { (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 2, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_stdchar
(const byte[]) preset_stdchar#0 preset_stdchar = { (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte[]) preset_twoplane
(const byte[]) preset_twoplane#0 preset_twoplane = { (byte/signed byte/word/signed word/dword/signed dword) 6, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 8, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 1, (byte/signed byte/word/signed word/dword/signed dword) 7, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) $d, (byte/signed byte/word/signed word/dword/signed dword) 4, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0, (byte/signed byte/word/signed word/dword/signed dword) 0 }
(byte*) print_char_cursor
(byte*) print_char_cursor#1 print_char_cursor zp ZP_WORD:5 2002.0
(byte*) print_char_cursor#20 print_char_cursor zp ZP_WORD:5 821.0
(byte*) print_char_cursor#22 print_char_cursor zp ZP_WORD:5 102.0
(byte*) print_char_cursor#38 print_char_cursor zp ZP_WORD:5 572.0
(byte*~) print_char_cursor#77 print_char_cursor zp ZP_WORD:5 4.0
(byte*~) print_char_cursor#78 print_char_cursor zp ZP_WORD:5 202.0
(void()) print_cls()
(byte*~) print_cls::$0 $0 zp ZP_WORD:5 202.0
(label) print_cls::@1
(label) print_cls::@return
(byte*) print_cls::sc
(byte*) print_cls::sc#0 sc zp ZP_WORD:3 4.0
(byte*) print_cls::sc#1 sc zp ZP_WORD:3 101.0
(byte*) print_cls::sc#2 sc zp ZP_WORD:3 152.5
(byte[]) print_hextab
(const byte[]) print_hextab#0 print_hextab = (string) "0123456789abcdef"
(byte*) print_line_cursor
(byte*) print_line_cursor#2 print_line_cursor zp ZP_WORD:16 8.749999999999998
(byte*) print_line_cursor#21 print_line_cursor zp ZP_WORD:16 2004.0
(byte*) print_line_cursor#22 print_line_cursor zp ZP_WORD:16 641.0
(void()) print_ln()
(label) print_ln::@1
(label) print_ln::@return
(byte*) print_screen
(void()) print_set_screen((byte*) print_set_screen::screen)
(label) print_set_screen::@return
(byte*) print_set_screen::screen
(byte*) print_set_screen::screen#2 screen zp ZP_WORD:16 5.631578947368421
(void()) print_str_at((byte*) print_str_at::str , (byte*) print_str_at::at)
(label) print_str_at::@1
(label) print_str_at::@2
(label) print_str_at::@return
(byte*) print_str_at::at
(byte*) print_str_at::at#0 at zp ZP_WORD:5 1001.0
(byte*) print_str_at::at#2 at zp ZP_WORD:5 1001.0
(byte*) print_str_at::str
(byte*) print_str_at::str#0 str zp ZP_WORD:3 2002.0
(byte*) print_str_at::str#1 str zp ZP_WORD:3 2.0
(byte*) print_str_at::str#2 str zp ZP_WORD:3 1001.5
(void()) print_str_lines((byte*) print_str_lines::str)
(label) print_str_lines::@1
(label) print_str_lines::@2
(label) print_str_lines::@3
(label) print_str_lines::@4
(label) print_str_lines::@5
(label) print_str_lines::@return
(byte) print_str_lines::ch
(byte) print_str_lines::ch#0 reg byte a 667.3333333333334
(byte*) print_str_lines::str
(byte*) print_str_lines::str#0 str zp ZP_WORD:3 233.66666666666669
(byte*) print_str_lines::str#3 str zp ZP_WORD:3 152.5
(byte*) print_str_lines::str#4 str zp ZP_WORD:3 1552.0
(byte*) print_str_lines::str#5 str zp ZP_WORD:3 1.0
(void()) render_preset_name((byte) render_preset_name::idx)
(label) render_preset_name::@1
(label) render_preset_name::@10
(label) render_preset_name::@11
(label) render_preset_name::@12
(label) render_preset_name::@2
(label) render_preset_name::@3
(label) render_preset_name::@4
(label) render_preset_name::@5
(label) render_preset_name::@6
(label) render_preset_name::@7
(label) render_preset_name::@8
(label) render_preset_name::@9
(label) render_preset_name::@return
(byte) render_preset_name::idx
(byte) render_preset_name::idx#0 reg byte a 4.0
(byte) render_preset_name::idx#1 reg byte a 202.0
(byte) render_preset_name::idx#10 reg byte a 11.363636363636362
(byte*) render_preset_name::name
(const byte*) render_preset_name::name#1 name#1 = (string) "Standard Charset              @"
(const byte*) render_preset_name::name#10 name#10 = (string) "Sixs Fred 2                   @"
(const byte*) render_preset_name::name#11 name#11 = (string) "8bpp Pixel Cell               @"
(byte*) render_preset_name::name#13 name zp ZP_WORD:3 2.0
(const byte*) render_preset_name::name#2 name#2 = (string) "Extended Color Charset        @"
(const byte*) render_preset_name::name#3 name#3 = (string) "Standard Bitmap               @"
(const byte*) render_preset_name::name#4 name#4 = (string) "Multicolor Bitmap             @"
(const byte*) render_preset_name::name#5 name#5 = (string) "Hicolor Charset               @"
(const byte*) render_preset_name::name#6 name#6 = (string) "Hicolor Extended Color Charset@"
(const byte*) render_preset_name::name#7 name#7 = (string) "Twoplane Bitmap               @"
(const byte*) render_preset_name::name#8 name#8 = (string) "Chunky 8bpp                   @"
(const byte*) render_preset_name::name#9 name#9 = (string) "Sixs Fred                     @"

reg byte x [ gfx_mode::dtv_control#12 gfx_mode::dtv_control#6 gfx_mode::dtv_control#13 gfx_mode::dtv_control#5 gfx_mode::dtv_control#11 gfx_mode::dtv_control#4 gfx_mode::dtv_control#10 gfx_mode::dtv_control#3 gfx_mode::dtv_control#15 gfx_mode::dtv_control#14 gfx_mode::dtv_control#2 ]
reg byte x [ gfx_mode::vic_control#4 gfx_mode::vic_control#2 gfx_mode::vic_control#5 ]
reg byte a [ gfx_mode::vic_control2#2 ]
zp ZP_BYTE:2 [ gfx_mode::cy#4 gfx_mode::cy#1 keyboard_event_scan::row#2 keyboard_event_scan::row#1 keyboard_event_pressed::keycode#4 form_render_values::idx#2 form_render_values::idx#1 gfx_init_plane_fill::fill#6 gfx_init_plane_horisontal2::ay#4 gfx_init_plane_horisontal2::ay#1 gfx_init_plane_vertical::by#4 gfx_init_plane_vertical::by#1 gfx_init_plane_horisontal::ay#4 gfx_init_plane_horisontal::ay#1 gfx_init_plane_charset8::ch#8 gfx_init_plane_charset8::ch#1 gfx_init_plane_8bppchunky::y#6 gfx_init_plane_8bppchunky::y#1 gfx_init_vic_bitmap::l#2 gfx_init_vic_bitmap::l#1 bitmap_clear::y#4 bitmap_clear::y#1 gfx_init_charset::c#4 gfx_init_charset::c#1 gfx_init_screen4::cy#4 gfx_init_screen4::cy#1 gfx_init_screen3::cy#4 gfx_init_screen3::cy#1 gfx_init_screen2::cy#4 gfx_init_screen2::cy#1 gfx_init_screen1::cy#4 gfx_init_screen1::cy#1 gfx_init_screen0::cy#4 gfx_init_screen0::cy#1 gfx_mode::$56 bitmap_init::$6 ]
zp ZP_WORD:3 [ gfx_mode::vic_colors#2 gfx_mode::vic_colors#3 gfx_mode::vic_colors#1 gfx_mode::vic_colors#0 get_vic_screen::return#11 get_vic_screen::return#5 get_vic_screen::return#10 gfx_mode::$52 gfx_mode::$54 gfx_mode::$55 get_vic_charset::return#2 get_vic_charset::return#4 gfx_mode::$57 gfx_mode::$59 render_preset_name::name#13 print_str_at::str#2 print_str_at::str#1 print_str_at::str#0 apply_preset::preset#14 form_set_screen::line#2 form_set_screen::line#1 print_str_lines::str#4 print_str_lines::str#3 print_str_lines::str#5 print_str_lines::str#0 print_cls::sc#2 print_cls::sc#0 print_cls::sc#1 gfx_init_plane_fill::gfxb#2 gfx_init_plane_fill::gfxb#3 gfx_init_plane_fill::gfxb#1 gfx_init_plane_fill::gfxb#6 gfx_init_plane_fill::$6 gfx_init_plane_fill::$4 gfx_init_plane_fill::$5 gfx_init_plane_horisontal2::gfxa#2 gfx_init_plane_horisontal2::gfxa#3 gfx_init_plane_horisontal2::gfxa#1 gfx_init_plane_vertical::gfxb#2 gfx_init_plane_vertical::gfxb#3 gfx_init_plane_vertical::gfxb#1 gfx_init_plane_horisontal::gfxa#3 gfx_init_plane_horisontal::gfxa#6 gfx_init_plane_horisontal::gfxa#7 gfx_init_plane_horisontal::gfxa#1 gfx_init_plane_horisontal::gfxa#2 gfx_init_plane_charset8::chargen#2 gfx_init_plane_charset8::chargen#3 gfx_init_plane_charset8::chargen#1 gfx_init_plane_8bppchunky::x#2 gfx_init_plane_8bppchunky::x#1 bitmap_clear::bitmap#2 bitmap_clear::bitmap#3 bitmap_clear::bitmap#5 bitmap_clear::bitmap#1 bitmap_clear::$3 bitmap_init::yoffs#2 bitmap_init::yoffs#4 bitmap_init::yoffs#1 gfx_init_charset::chargen#2 gfx_init_charset::chargen#3 gfx_init_charset::chargen#1 gfx_init_screen4::ch#2 gfx_init_screen4::ch#3 gfx_init_screen4::ch#1 gfx_init_screen3::ch#2 gfx_init_screen3::ch#3 gfx_init_screen3::ch#1 gfx_init_screen2::ch#2 gfx_init_screen2::ch#3 gfx_init_screen2::ch#1 gfx_init_screen1::ch#2 gfx_init_screen1::ch#3 gfx_init_screen1::ch#1 gfx_init_screen0::ch#2 gfx_init_screen0::ch#3 gfx_init_screen0::ch#1 gfx_mode::$24 gfx_mode::$26 gfx_mode::$28 gfx_mode::$38 gfx_mode::$40 gfx_mode::$42 form_field_ptr::return#2 form_render_values::field#0 form_field_ptr::return#0 form_field_ptr::$2 form_field_ptr::return#3 form_control::field#0 gfx_init_plane_fill::$1 bitmap_plot::plotter_x#0 bitmap_plot::$0 ]
zp ZP_WORD:5 [ gfx_mode::col#2 gfx_mode::col#3 gfx_mode::col#1 print_str_at::at#2 print_str_at::at#0 print_char_cursor#20 print_char_cursor#22 print_char_cursor#77 print_char_cursor#78 print_char_cursor#38 print_char_cursor#1 gfx_init_plane_charset8::gfxa#2 gfx_init_plane_charset8::gfxa#5 gfx_init_plane_charset8::gfxa#6 gfx_init_plane_charset8::gfxa#1 gfx_init_plane_8bppchunky::gfxb#4 gfx_init_plane_8bppchunky::gfxb#3 gfx_init_plane_8bppchunky::gfxb#5 gfx_init_plane_8bppchunky::gfxb#1 gfx_init_charset::charset#2 gfx_init_charset::charset#3 gfx_init_charset::charset#1 print_cls::$0 bitmap_plot::plotter_y#0 ]
reg byte x [ gfx_mode::cx#2 gfx_mode::cx#1 ]
reg byte x [ gfx_mode::j#2 gfx_mode::j#1 ]
reg byte x [ gfx_mode::i#2 gfx_mode::i#1 ]
reg byte a [ keyboard_event_get::return#2 keyboard_event_get::return#1 ]
reg byte x [ keyboard_modifiers#21 keyboard_modifiers#20 keyboard_modifiers#19 keyboard_modifiers#18 keyboard_modifiers#3 keyboard_modifiers#4 keyboard_modifiers#5 ]
reg byte x [ keyboard_event_scan::col#2 keyboard_event_scan::col#1 ]
zp ZP_BYTE:7 [ keyboard_event_scan::keycode#10 keyboard_event_scan::keycode#11 keyboard_event_scan::keycode#14 keyboard_event_scan::keycode#15 keyboard_event_scan::keycode#1 gfx_init_plane_fill::by#4 gfx_init_plane_fill::by#1 gfx_init_plane_charset8::cr#6 gfx_init_plane_charset8::cr#1 bitmap_line_xdyi::yd#2 bitmap_line_xdyi::yd#0 bitmap_line_xdyi::yd#1 bitmap_line_ydxi::yd#5 bitmap_line_ydxi::yd#1 bitmap_line_ydxi::yd#0 bitmap_line_xdyd::yd#2 bitmap_line_xdyd::yd#0 bitmap_line_xdyd::yd#1 bitmap_line_ydxd::yd#5 bitmap_line_ydxd::yd#0 bitmap_line_ydxd::yd#1 keyboard_event_pressed::row_bits#0 gfx_init_screen3::$1 gfx_init_screen2::col2#0 gfx_init_screen0::$1 ]
zp ZP_BYTE:8 [ keyboard_events_size#18 keyboard_events_size#119 keyboard_events_size#110 keyboard_events_size#47 keyboard_events_size#27 keyboard_events_size#24 keyboard_events_size#100 keyboard_events_size#4 keyboard_events_size#118 keyboard_events_size#1 keyboard_events_size#2 gfx_init_plane_charset8::bits#2 gfx_init_plane_charset8::bits#0 gfx_init_plane_charset8::bits#1 bitmap_line_xdyi::xd#5 bitmap_line_xdyi::xd#0 bitmap_line_xdyi::xd#1 bitmap_line::xd#2 bitmap_line::xd#1 bitmap_line_ydxi::xd#2 bitmap_line_ydxi::xd#1 bitmap_line_ydxi::xd#0 bitmap_line_xdyd::xd#5 bitmap_line_xdyd::xd#0 bitmap_line_xdyd::xd#1 bitmap_line_ydxd::xd#2 bitmap_line_ydxd::xd#0 bitmap_line_ydxd::xd#1 ]
reg byte a [ get_vic_screen::idx#2 get_vic_screen::idx#0 get_vic_screen::idx#1 ]
reg byte a [ get_plane::idx#10 get_plane::idx#1 get_plane::idx#0 ]
zp ZP_DWORD:9 [ get_plane::return#14 get_plane::return#16 get_plane::return#17 gfx_mode::$22 gfx_mode::plane_a#0 gfx_mode::$36 gfx_mode::plane_b#0 gfx_init_plane_fill::plane_addr#3 ]
reg byte x [ form_mode::i#2 form_mode::i#1 ]
zp ZP_BYTE:13 [ form_cursor_count#21 form_cursor_count#1 form_cursor_count#16 form_cursor_count#15 form_cursor_count#5 gfx_init_plane_charset8::col#2 gfx_init_plane_charset8::col#5 gfx_init_plane_charset8::col#6 gfx_init_plane_charset8::col#1 bitmap_line_xdyi::x1#6 bitmap_line_xdyi::x1#0 bitmap_line_xdyi::x1#1 bitmap_line::x0#0 bitmap_line_xdyd::x1#6 bitmap_line_xdyd::x1#0 bitmap_line_xdyd::x1#1 bitmap_line_ydxi::e#3 bitmap_line_ydxi::e#0 bitmap_line_ydxi::e#6 bitmap_line_ydxi::e#2 bitmap_line_ydxi::e#1 bitmap_line_ydxd::e#3 bitmap_line_ydxd::e#0 bitmap_line_ydxd::e#6 bitmap_line_ydxd::e#2 bitmap_line_ydxd::e#1 ]
zp ZP_BYTE:14 [ form_field_idx#28 form_field_idx#1 form_field_idx#18 form_field_idx#31 form_field_idx#44 form_field_idx#45 bitmap_line_xdyi::x#3 bitmap_line_xdyi::x#6 bitmap_line_xdyi::x#0 bitmap_line_xdyi::x#1 bitmap_line_xdyi::x#2 bitmap_line_ydxi::y#3 bitmap_line_ydxi::y#6 bitmap_line_ydxi::y#1 bitmap_line_ydxi::y#0 bitmap_line_ydxi::y#2 bitmap_line_xdyd::x#3 bitmap_line_xdyd::x#6 bitmap_line_xdyd::x#0 bitmap_line_xdyd::x#1 bitmap_line_xdyd::x#2 bitmap_line_ydxd::y#2 bitmap_line_ydxd::y#7 bitmap_line_ydxd::y#0 bitmap_line_ydxd::y#1 bitmap_line_ydxd::y#3 ]
zp ZP_BYTE:15 [ form_mode::preset_current#6 form_mode::preset_current#0 form_mode::preset_current#1 bitmap_line_xdyi::y#3 bitmap_line_xdyi::y#5 bitmap_line_xdyi::y#0 bitmap_line_xdyi::y#1 bitmap_line_xdyi::y#6 bitmap_line_xdyi::y#2 bitmap_line::y0#0 bitmap_line_xdyd::y#3 bitmap_line_xdyd::y#5 bitmap_line_xdyd::y#0 bitmap_line_xdyd::y#1 bitmap_line_xdyd::y#6 bitmap_line_xdyd::y#2 bitmap_line_ydxd::y1#6 bitmap_line_ydxd::y1#0 bitmap_line_ydxd::y1#1 ]
reg byte a [ render_preset_name::idx#10 render_preset_name::idx#0 render_preset_name::idx#1 ]
reg byte y [ form_field_ptr::field_idx#2 form_field_ptr::field_idx#1 form_field_ptr::field_idx#0 ]
reg byte y [ apply_preset::i#2 apply_preset::i#1 ]
reg byte x [ form_control::return#2 ]
reg byte x [ form_set_screen::y#2 form_set_screen::y#1 ]
zp ZP_WORD:16 [ print_line_cursor#21 print_line_cursor#2 print_set_screen::screen#2 print_line_cursor#22 gfx_init_plane_8bppchunky::$9 ]
reg byte x [ gfx_init_plane_fill::bx#2 gfx_init_plane_fill::bx#1 ]
reg byte a [ dtvSetCpuBankSegment1::cpuBankIdx#13 dtvSetCpuBankSegment1::cpuBankIdx#1 dtvSetCpuBankSegment1::cpuBankIdx#11 ]
reg byte x [ gfx_init_plane_horisontal2::ax#2 gfx_init_plane_horisontal2::ax#1 ]
reg byte x [ gfx_init_plane_vertical::bx#2 gfx_init_plane_vertical::bx#1 ]
reg byte x [ gfx_init_plane_horisontal::ax#2 gfx_init_plane_horisontal::ax#1 ]
reg byte x [ gfx_init_plane_charset8::cp#2 gfx_init_plane_charset8::cp#1 ]
reg byte a [ gfx_init_plane_charset8::c#2 gfx_init_plane_charset8::c#3 ]
reg byte x [ gfx_init_plane_8bppchunky::gfxbCpuBank#4 gfx_init_plane_8bppchunky::gfxbCpuBank#7 gfx_init_plane_8bppchunky::gfxbCpuBank#8 gfx_init_plane_8bppchunky::gfxbCpuBank#2 ]
zp ZP_BYTE:18 [ bitmap_line_xdyi::e#3 bitmap_line_xdyi::e#0 bitmap_line_xdyi::e#6 bitmap_line_xdyi::e#2 bitmap_line_xdyi::e#1 bitmap_line_ydxi::y1#6 bitmap_line_ydxi::y1#1 bitmap_line_ydxi::y1#0 bitmap_line::y1#0 bitmap_line_xdyd::e#3 bitmap_line_xdyd::e#0 bitmap_line_xdyd::e#6 bitmap_line_xdyd::e#2 bitmap_line_xdyd::e#1 keyboard_event_scan::row_scan#0 ]
reg byte x [ bitmap_plot::x#4 bitmap_plot::x#1 bitmap_plot::x#0 bitmap_plot::x#3 bitmap_plot::x#2 ]
reg byte y [ bitmap_plot::y#4 bitmap_plot::y#1 bitmap_plot::y#0 bitmap_plot::y#3 bitmap_plot::y#2 ]
reg byte x [ bitmap_line_ydxi::x#3 bitmap_line_ydxi::x#5 bitmap_line_ydxi::x#1 bitmap_line_ydxi::x#0 bitmap_line_ydxi::x#6 bitmap_line_ydxi::x#2 ]
reg byte x [ bitmap_line_ydxd::x#3 bitmap_line_ydxd::x#5 bitmap_line_ydxd::x#0 bitmap_line_ydxd::x#1 bitmap_line_ydxd::x#6 bitmap_line_ydxd::x#2 ]
reg byte x [ bitmap_clear::x#2 bitmap_clear::x#1 ]
reg byte x [ bitmap_init::x#2 bitmap_init::x#1 ]
reg byte y [ bitmap_init::bits#3 bitmap_init::bits#4 bitmap_init::bits#1 ]
reg byte x [ bitmap_init::y#2 bitmap_init::y#1 ]
reg byte x [ gfx_init_charset::l#2 gfx_init_charset::l#1 ]
reg byte x [ gfx_init_screen4::cx#2 gfx_init_screen4::cx#1 ]
reg byte x [ gfx_init_screen3::cx#2 gfx_init_screen3::cx#1 ]
reg byte x [ gfx_init_screen2::cx#2 gfx_init_screen2::cx#1 ]
reg byte x [ gfx_init_screen1::cx#2 gfx_init_screen1::cx#1 ]
reg byte x [ gfx_init_screen0::cx#2 gfx_init_screen0::cx#1 ]
reg byte a [ gfx_mode::$20 ]
reg byte x [ gfx_mode::plane_a_offs#0 ]
reg byte a [ gfx_mode::$25 ]
reg byte a [ gfx_mode::$27 ]
reg byte a [ gfx_mode::$29 ]
reg byte a [ gfx_mode::$30 ]
reg byte a [ gfx_mode::$31 ]
reg byte a [ gfx_mode::$32 ]
reg byte a [ gfx_mode::$33 ]
reg byte a [ gfx_mode::$34 ]
reg byte x [ gfx_mode::plane_b_offs#0 ]
reg byte a [ gfx_mode::$39 ]
reg byte a [ gfx_mode::$41 ]
reg byte a [ gfx_mode::$43 ]
reg byte a [ gfx_mode::$44 ]
reg byte a [ gfx_mode::$45 ]
reg byte a [ gfx_mode::$46 ]
reg byte a [ gfx_mode::$47 ]
reg byte a [ get_vic_charset::idx#0 ]
reg byte a [ gfx_mode::$60 ]
reg byte a [ gfx_mode::$61 ]
reg byte a [ gfx_mode::$62 ]
reg byte a [ gfx_mode::$64 ]
reg byte a [ gfx_mode::$65 ]
reg byte a [ gfx_mode::$66 ]
reg byte a [ gfx_mode::$67 ]
reg byte a [ gfx_mode::$68 ]
reg byte a [ gfx_mode::$69 ]
reg byte a [ gfx_mode::$70 ]
reg byte a [ gfx_mode::$71 ]
reg byte a [ keyboard_event_get::return#3 ]
reg byte a [ gfx_mode::keyboard_event#0 ]
reg byte x [ keyboard_matrix_read::rowid#0 ]
reg byte a [ keyboard_matrix_read::return#2 ]
reg byte a [ keyboard_event_pressed::return#0 ]
reg byte a [ keyboard_event_scan::$0 ]
reg byte a [ keyboard_event_pressed::return#1 ]
reg byte a [ keyboard_event_scan::$3 ]
reg byte a [ keyboard_event_pressed::return#2 ]
reg byte a [ keyboard_event_scan::$6 ]
reg byte a [ keyboard_event_pressed::return#3 ]
reg byte a [ keyboard_event_scan::$9 ]
reg byte a [ keyboard_event_scan::$15 ]
reg byte a [ keyboard_event_scan::$16 ]
reg byte a [ keyboard_event_scan::event_type#0 ]
reg byte a [ keyboard_event_scan::$23 ]
reg byte a [ keyboard_event_pressed::$0 ]
reg byte a [ keyboard_event_pressed::$1 ]
reg byte a [ keyboard_event_pressed::return#10 ]
reg byte a [ keyboard_matrix_read::return#0 ]
reg byte a [ form_control::return#0 ]
reg byte a [ form_mode::$36 ]
reg byte a [ apply_preset::idx#0 ]
reg byte x [ form_field_ptr::y#0 ]
reg byte a [ form_field_ptr::x#0 ]
reg byte a [ form_control::$13 ]
reg byte a [ keyboard_event_get::return#4 ]
reg byte a [ form_control::key_event#0 ]
reg byte a [ form_control::$15 ]
reg byte a [ form_control::$16 ]
reg byte a [ form_control::$24 ]
reg byte a [ form_control::$14 ]
reg byte a [ form_set_screen::$0 ]
reg byte a [ form_set_screen::$1 ]
reg byte a [ print_str_lines::ch#0 ]
zp ZP_DWORD:19 [ gfx_init_plane_fill::$0 ]
reg byte x [ gfx_init_plane_fill::gfxbCpuBank#0 ]
reg byte x [ gfx_init_plane_fill::gfxbCpuBank#1 ]
reg byte a [ gfx_init_plane_horisontal2::$8 ]
reg byte a [ gfx_init_plane_horisontal2::row#0 ]
reg byte a [ gfx_init_plane_horisontal::$8 ]
reg byte a [ gfx_init_plane_charset8::$8 ]
reg byte a [ gfx_init_plane_8bppchunky::c#0 ]
reg byte x [ bitmap_line::x1#0 ]
reg byte y [ bitmap_line::yd#2 ]
reg byte y [ bitmap_line::yd#1 ]
reg byte y [ bitmap_line::yd#10 ]
reg byte y [ bitmap_line::yd#11 ]
reg byte x [ bitmap_line_xdyi::$6 ]
reg byte a [ bitmap_plot::$1 ]
reg byte a [ bitmap_line_ydxi::$6 ]
reg byte x [ bitmap_line_xdyd::$6 ]
reg byte a [ bitmap_line_ydxd::$6 ]
reg byte a [ bitmap_init::$0 ]
reg byte a [ bitmap_init::$7 ]
reg byte a [ bitmap_init::$8 ]
reg byte a [ bitmap_init::$9 ]
reg byte a [ bitmap_init::$10 ]
reg byte a [ gfx_init_screen3::$0 ]
reg byte a [ gfx_init_screen3::$2 ]
reg byte a [ gfx_init_screen3::$3 ]
reg byte a [ gfx_init_screen2::$0 ]
reg byte y [ gfx_init_screen2::col#0 ]
reg byte a [ gfx_init_screen2::$3 ]
reg byte a [ gfx_init_screen2::$4 ]
reg byte a [ gfx_init_screen1::$0 ]
reg byte a [ gfx_init_screen1::$1 ]
reg byte a [ gfx_init_screen0::$0 ]
reg byte a [ gfx_init_screen0::$2 ]
reg byte a [ gfx_init_screen0::$3 ]
