@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()

(void()) main()
main: scope:[main]  from @1
  [4] *((const byte*) main::jesper_name) ← memcpy(*(&(const byte*) $0), byte, (number) $40)
  [5] call print_person 
  to:main::@1
main::@1: scope:[main]  from main
  [6] *((const byte*) main::henriette_name) ← memcpy(*(&(const byte*) $1), byte, (number) $40)
  [7] call print_person 
  to:main::@return
main::@return: scope:[main]  from main::@1
  [8] return 
  to:@return

(void()) print_person((byte) print_person::person_id , (byte*) print_person::person_name)
print_person: scope:[print_person]  from main main::@1
  [9] (byte*) print_person::person_name#4 ← phi( main/(const byte*) main::jesper_name main::@1/(const byte*) main::henriette_name )
  [9] (byte) idx#13 ← phi( main/(byte) 0 main::@1/(byte) idx#16 )
  [9] (byte) print_person::person_id#2 ← phi( main/(const byte) main::jesper_id main::@1/(const byte) main::henriette_id )
  [10] *((const byte*) SCREEN + (byte) idx#13) ← *((const byte*) DIGIT + (byte) print_person::person_id#2)
  [11] (byte) idx#4 ← ++ (byte) idx#13
  [12] *((const byte*) SCREEN + (byte) idx#4) ← (byte) ' '
  [13] (byte) idx#5 ← ++ (byte) idx#4
  to:print_person::@1
print_person::@1: scope:[print_person]  from print_person print_person::@2
  [14] (byte) idx#14 ← phi( print_person/(byte) idx#5 print_person::@2/(byte) idx#6 )
  [14] (byte) print_person::i#2 ← phi( print_person/(byte) 0 print_person::@2/(byte) print_person::i#1 )
  [15] if((byte) 0!=*((byte*) print_person::person_name#4 + (byte) print_person::i#2)) goto print_person::@2
  to:print_person::@3
print_person::@3: scope:[print_person]  from print_person::@1
  [16] *((const byte*) SCREEN + (byte) idx#14) ← (byte) ' '
  [17] (byte) idx#16 ← ++ (byte) idx#14
  to:print_person::@return
print_person::@return: scope:[print_person]  from print_person::@3
  [18] return 
  to:@return
print_person::@2: scope:[print_person]  from print_person::@1
  [19] *((const byte*) SCREEN + (byte) idx#14) ← *((byte*) print_person::person_name#4 + (byte) print_person::i#2)
  [20] (byte) idx#6 ← ++ (byte) idx#14
  [21] (byte) print_person::i#1 ← ++ (byte) print_person::i#2
  to:print_person::@1
