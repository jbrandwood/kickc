@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] phi()
  to:main::@1
main::@1: scope:[main]  from main main::@3
  [5] (struct fileentry*) main::file#2 ← phi( main/(struct fileentry*) 0 main::@3/(struct fileentry*) main::file#1 )
  [6] if((struct fileentry*) main::file#2!=(const struct fileentry*) filesEnd#0) goto main::@2
  to:main::@return
main::@return: scope:[main]  from main::@1
  [7] return 
  to:@return
main::@2: scope:[main]  from main::@1
  [8] (struct fileentry*) PrintName::file#0 ← (struct fileentry*) main::file#2
  [9] call PrintName 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] (struct fileentry*) main::file#1 ← (struct fileentry*) main::file#2 + (const byte) SIZEOF_STRUCT_FILEENTRY
  to:main::@1
PrintName: scope:[PrintName]  from main::@2
  [11] if((struct fileentry*) PrintName::file#0!=(const struct fileentry*) dir#0) goto PrintName::@return
  to:PrintName::@1
PrintName::@1: scope:[PrintName]  from PrintName
  [12] *((byte*) 199) ← (byte) 1
  to:PrintName::@return
PrintName::@return: scope:[PrintName]  from PrintName PrintName::@1
  [13] return 
  to:@return
