@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] *((const byte*) BGCOL#0) ← (byte) 5
  [5] call print_cls 
  to:main::@1
main::@1: scope:[main]  from main
  [6] phi()
  [7] call mulf_init 
  to:main::@2
main::@2: scope:[main]  from main::@1
  [8] phi()
  [9] call mulf_init_asm 
  to:main::@3
main::@3: scope:[main]  from main::@2
  [10] phi()
  [11] call mulf_tables_cmp 
  to:main::@4
main::@4: scope:[main]  from main::@3
  [12] phi()
  [13] call mul8u_compare 
  to:main::@5
main::@5: scope:[main]  from main::@4
  [14] phi()
  [15] call mul8s_compare 
  to:main::@return
main::@return: scope:[main]  from main::@5
  [16] return 
  to:@return
mul8s_compare: scope:[mul8s_compare]  from main::@5
  [17] phi()
  to:mul8s_compare::@1
mul8s_compare::@1: scope:[mul8s_compare]  from mul8s_compare mul8s_compare::@8
  [18] (signed byte) mul8s_compare::a#7 ← phi( mul8s_compare/(signed byte) -$80 mul8s_compare::@8/(signed byte) mul8s_compare::a#1 )
  to:mul8s_compare::@2
mul8s_compare::@2: scope:[mul8s_compare]  from mul8s_compare::@1 mul8s_compare::@5
  [19] (signed byte) mul8s_compare::b#10 ← phi( mul8s_compare::@1/(signed byte) -$80 mul8s_compare::@5/(signed byte) mul8s_compare::b#1 )
  [20] (signed byte) muls8s::a#0 ← (signed byte) mul8s_compare::a#7
  [21] (signed byte) muls8s::b#0 ← (signed byte) mul8s_compare::b#10
  [22] call muls8s 
  [23] (signed word) muls8s::return#2 ← (signed word) muls8s::return#0
  to:mul8s_compare::@10
mul8s_compare::@10: scope:[mul8s_compare]  from mul8s_compare::@2
  [24] (signed word) mul8s_compare::ms#0 ← (signed word) muls8s::return#2
  [25] (signed byte) mulf8s::a#0 ← (signed byte) mul8s_compare::a#7
  [26] (signed byte) mulf8s::b#0 ← (signed byte) mul8s_compare::b#10
  [27] call mulf8s 
  to:mul8s_compare::@11
mul8s_compare::@11: scope:[mul8s_compare]  from mul8s_compare::@10
  [28] (signed byte) mul8s::a#0 ← (signed byte) mul8s_compare::a#7
  [29] (signed byte) mul8s::b#0 ← (signed byte) mul8s_compare::b#10
  [30] call mul8s 
  to:mul8s_compare::@12
mul8s_compare::@12: scope:[mul8s_compare]  from mul8s_compare::@11
  [31] if((signed word) mul8s_compare::ms#0==(signed word)(word) mulf8s_prepared::m#4) goto mul8s_compare::@3
  to:mul8s_compare::@6
mul8s_compare::@6: scope:[mul8s_compare]  from mul8s_compare::@12
  [32] phi()
  to:mul8s_compare::@3
mul8s_compare::@3: scope:[mul8s_compare]  from mul8s_compare::@12 mul8s_compare::@6
  [33] (byte) mul8s_compare::ok#4 ← phi( mul8s_compare::@12/(byte) 1 mul8s_compare::@6/(byte) 0 )
  [34] if((signed word) mul8s_compare::ms#0==(signed word)(word) mul8s::m#4) goto mul8s_compare::@14
  to:mul8s_compare::@4
mul8s_compare::@14: scope:[mul8s_compare]  from mul8s_compare::@3
  [35] phi()
  to:mul8s_compare::@4
mul8s_compare::@4: scope:[mul8s_compare]  from mul8s_compare::@14 mul8s_compare::@3
  [36] (byte) mul8s_compare::ok#3 ← phi( mul8s_compare::@14/(byte) mul8s_compare::ok#4 mul8s_compare::@3/(byte) 0 )
  [37] if((byte) mul8s_compare::ok#3!=(byte) 0) goto mul8s_compare::@5
  to:mul8s_compare::@7
mul8s_compare::@7: scope:[mul8s_compare]  from mul8s_compare::@4
  [38] *((const byte*) BGCOL#0) ← (byte) 2
  [39] (signed byte) mul8s_error::a#0 ← (signed byte) mul8s_compare::a#7
  [40] (signed byte) mul8s_error::b#0 ← (signed byte) mul8s_compare::b#10
  [41] (signed word) mul8s_error::ms#0 ← (signed word) mul8s_compare::ms#0
  [42] call mul8s_error 
  to:mul8s_compare::@return
mul8s_compare::@return: scope:[mul8s_compare]  from mul8s_compare::@13 mul8s_compare::@7
  [43] return 
  to:@return
mul8s_compare::@5: scope:[mul8s_compare]  from mul8s_compare::@4
  [44] (signed byte) mul8s_compare::b#1 ← ++ (signed byte) mul8s_compare::b#10
  [45] if((signed byte) mul8s_compare::b#1!=(signed byte) -$80) goto mul8s_compare::@2
  to:mul8s_compare::@8
mul8s_compare::@8: scope:[mul8s_compare]  from mul8s_compare::@5
  [46] (signed byte) mul8s_compare::a#1 ← ++ (signed byte) mul8s_compare::a#7
  [47] if((signed byte) mul8s_compare::a#1!=(signed byte) -$80) goto mul8s_compare::@1
  to:mul8s_compare::@9
mul8s_compare::@9: scope:[mul8s_compare]  from mul8s_compare::@8
  [48] (byte*~) print_char_cursor#187 ← (byte*) print_line_cursor#1
  [49] call print_str 
  to:mul8s_compare::@13
mul8s_compare::@13: scope:[mul8s_compare]  from mul8s_compare::@9
  [50] phi()
  [51] call print_ln 
  to:mul8s_compare::@return
print_ln: scope:[print_ln]  from mul8s_compare::@13 mul8s_error::@10 mul8u_compare::@13 mul8u_error::@10 mulf_tables_cmp::@8
  [52] (byte*) print_char_cursor#133 ← phi( mul8s_compare::@13/(byte*) print_char_cursor#132 mul8s_error::@10/(byte*) print_char_cursor#18 mul8u_compare::@13/(byte*) print_char_cursor#132 mul8u_error::@10/(byte*) print_char_cursor#18 mulf_tables_cmp::@8/(byte*) print_char_cursor#132 )
  [52] (byte*) print_line_cursor#45 ← phi( mul8s_compare::@13/(byte*) print_line_cursor#1 mul8s_error::@10/(byte*) print_line_cursor#1 mul8u_compare::@13/(byte*) print_line_cursor#10 mul8u_error::@10/(byte*) print_line_cursor#10 mulf_tables_cmp::@8/(byte*) 1024 )
  to:print_ln::@1
print_ln::@1: scope:[print_ln]  from print_ln print_ln::@1
  [53] (byte*) print_line_cursor#23 ← phi( print_ln/(byte*) print_line_cursor#45 print_ln::@1/(byte*) print_line_cursor#1 )
  [54] (byte*) print_line_cursor#1 ← (byte*) print_line_cursor#23 + (byte) $28
  [55] if((byte*) print_line_cursor#1<(byte*) print_char_cursor#133) goto print_ln::@1
  to:print_ln::@return
print_ln::@return: scope:[print_ln]  from print_ln::@1
  [56] return 
  to:@return
print_str: scope:[print_str]  from mul8s_compare::@9 mul8s_error mul8s_error::@2 mul8s_error::@4 mul8s_error::@6 mul8s_error::@8 mul8u_compare::@9 mul8u_error mul8u_error::@2 mul8u_error::@4 mul8u_error::@6 mul8u_error::@8 mulf_tables_cmp::@3 mulf_tables_cmp::@4 mulf_tables_cmp::@6
  [57] (byte*) print_char_cursor#152 ← phi( mul8s_compare::@9/(byte*~) print_char_cursor#187 mul8s_error/(byte*~) print_char_cursor#188 mul8s_error::@2/(byte*) print_char_cursor#18 mul8s_error::@4/(byte*) print_char_cursor#18 mul8s_error::@6/(byte*) print_char_cursor#18 mul8s_error::@8/(byte*) print_char_cursor#18 mul8u_compare::@9/(byte*) print_char_cursor#31 mul8u_error/(byte*) print_char_cursor#31 mul8u_error::@2/(byte*) print_char_cursor#18 mul8u_error::@4/(byte*) print_char_cursor#18 mul8u_error::@6/(byte*) print_char_cursor#18 mul8u_error::@8/(byte*) print_char_cursor#18 mulf_tables_cmp::@3/(byte*) 1024 mulf_tables_cmp::@4/(byte*) 1024 mulf_tables_cmp::@6/(byte*) print_char_cursor#18 )
  [57] (byte*) print_str::str#18 ← phi( mul8s_compare::@9/(const string) mul8s_compare::str mul8s_error/(const string) mul8s_error::str mul8s_error::@2/(const string) str1 mul8s_error::@4/(const string) str2 mul8s_error::@6/(const string) str3 mul8s_error::@8/(const string) str4 mul8u_compare::@9/(const string) mul8u_compare::str mul8u_error/(const string) mul8u_error::str mul8u_error::@2/(const string) str1 mul8u_error::@4/(const string) str2 mul8u_error::@6/(const string) str3 mul8u_error::@8/(const string) str4 mulf_tables_cmp::@3/(const string) mulf_tables_cmp::str mulf_tables_cmp::@4/(const string) mulf_tables_cmp::str2 mulf_tables_cmp::@6/(const string) mulf_tables_cmp::str1 )
  to:print_str::@1
print_str::@1: scope:[print_str]  from print_str print_str::@2
  [58] (byte*) print_char_cursor#132 ← phi( print_str/(byte*) print_char_cursor#152 print_str::@2/(byte*) print_char_cursor#1 )
  [58] (byte*) print_str::str#16 ← phi( print_str/(byte*) print_str::str#18 print_str::@2/(byte*) print_str::str#0 )
  [59] if(*((byte*) print_str::str#16)!=(byte) '@') goto print_str::@2
  to:print_str::@return
print_str::@return: scope:[print_str]  from print_str::@1
  [60] return 
  to:@return
print_str::@2: scope:[print_str]  from print_str::@1
  [61] *((byte*) print_char_cursor#132) ← *((byte*) print_str::str#16)
  [62] (byte*) print_char_cursor#1 ← ++ (byte*) print_char_cursor#132
  [63] (byte*) print_str::str#0 ← ++ (byte*) print_str::str#16
  to:print_str::@1
mul8s_error: scope:[mul8s_error]  from mul8s_compare::@7
  [64] (byte*~) print_char_cursor#188 ← (byte*) print_line_cursor#1
  [65] call print_str 
  to:mul8s_error::@1
mul8s_error::@1: scope:[mul8s_error]  from mul8s_error
  [66] (signed byte) print_sbyte::b#1 ← (signed byte) mul8s_error::a#0
  [67] call print_sbyte 
  to:mul8s_error::@2
mul8s_error::@2: scope:[mul8s_error]  from mul8s_error::@1
  [68] phi()
  [69] call print_str 
  to:mul8s_error::@3
mul8s_error::@3: scope:[mul8s_error]  from mul8s_error::@2
  [70] (signed byte) print_sbyte::b#2 ← (signed byte) mul8s_error::b#0
  [71] call print_sbyte 
  to:mul8s_error::@4
mul8s_error::@4: scope:[mul8s_error]  from mul8s_error::@3
  [72] phi()
  [73] call print_str 
  to:mul8s_error::@5
mul8s_error::@5: scope:[mul8s_error]  from mul8s_error::@4
  [74] (signed word) print_sword::w#1 ← (signed word) mul8s_error::ms#0
  [75] call print_sword 
  to:mul8s_error::@6
mul8s_error::@6: scope:[mul8s_error]  from mul8s_error::@5
  [76] phi()
  [77] call print_str 
  to:mul8s_error::@7
mul8s_error::@7: scope:[mul8s_error]  from mul8s_error::@6
  [78] (signed word~) print_sword::w#9 ← (signed word)(word) mul8s::m#4
  [79] call print_sword 
  to:mul8s_error::@8
mul8s_error::@8: scope:[mul8s_error]  from mul8s_error::@7
  [80] phi()
  [81] call print_str 
  to:mul8s_error::@9
mul8s_error::@9: scope:[mul8s_error]  from mul8s_error::@8
  [82] (signed word~) print_sword::w#10 ← (signed word)(word) mulf8s_prepared::m#4
  [83] call print_sword 
  to:mul8s_error::@10
mul8s_error::@10: scope:[mul8s_error]  from mul8s_error::@9
  [84] phi()
  [85] call print_ln 
  to:mul8s_error::@return
mul8s_error::@return: scope:[mul8s_error]  from mul8s_error::@10
  [86] return 
  to:@return
print_sword: scope:[print_sword]  from mul8s_error::@5 mul8s_error::@7 mul8s_error::@9
  [87] (signed word) print_sword::w#4 ← phi( mul8s_error::@5/(signed word) print_sword::w#1 mul8s_error::@7/(signed word~) print_sword::w#9 mul8s_error::@9/(signed word~) print_sword::w#10 )
  [88] if((signed word) print_sword::w#4>=(signed byte) 0) goto print_sword::@1
  to:print_sword::@2
print_sword::@2: scope:[print_sword]  from print_sword
  [89] phi()
  [90] call print_char 
  to:print_sword::@3
print_sword::@3: scope:[print_sword]  from print_sword::@2
  [91] (signed word) print_sword::w#0 ← - (signed word) print_sword::w#4
  to:print_sword::@1
print_sword::@1: scope:[print_sword]  from print_sword print_sword::@3
  [92] (byte*) print_char_cursor#134 ← phi( print_sword/(byte*) print_char_cursor#132 print_sword::@3/(byte*) print_char_cursor#18 )
  [92] (signed word) print_sword::w#5 ← phi( print_sword/(signed word) print_sword::w#4 print_sword::@3/(signed word) print_sword::w#0 )
  [93] (word~) print_word::w#13 ← (word)(signed word) print_sword::w#5
  [94] call print_word 
  to:print_sword::@return
print_sword::@return: scope:[print_sword]  from print_sword::@1
  [95] return 
  to:@return
print_word: scope:[print_word]  from mul8u_error::@5 mul8u_error::@7 mul8u_error::@9 mulf_tables_cmp::@5 mulf_tables_cmp::@7 print_sword::@1
  [96] (byte*) print_char_cursor#139 ← phi( mul8u_error::@5/(byte*) print_char_cursor#132 mul8u_error::@7/(byte*) print_char_cursor#132 mul8u_error::@9/(byte*) print_char_cursor#132 mulf_tables_cmp::@5/(byte*) print_char_cursor#132 mulf_tables_cmp::@7/(byte*) print_char_cursor#132 print_sword::@1/(byte*) print_char_cursor#134 )
  [96] (word) print_word::w#6 ← phi( mul8u_error::@5/(word) print_word::w#3 mul8u_error::@7/(word) print_word::w#4 mul8u_error::@9/(word) print_word::w#5 mulf_tables_cmp::@5/(word~) print_word::w#11 mulf_tables_cmp::@7/(word~) print_word::w#12 print_sword::@1/(word~) print_word::w#13 )
  [97] (byte) print_byte::b#1 ← > (word) print_word::w#6
  [98] call print_byte 
  to:print_word::@1
print_word::@1: scope:[print_word]  from print_word
  [99] (byte) print_byte::b#2 ← < (word) print_word::w#6
  [100] call print_byte 
  to:print_word::@return
print_word::@return: scope:[print_word]  from print_word::@1
  [101] return 
  to:@return
print_byte: scope:[print_byte]  from mul8u_error::@1 mul8u_error::@3 print_sbyte::@2 print_word print_word::@1
  [102] (byte*) print_char_cursor#140 ← phi( mul8u_error::@1/(byte*) print_char_cursor#132 mul8u_error::@3/(byte*) print_char_cursor#132 print_sbyte::@2/(byte*) print_char_cursor#18 print_word/(byte*) print_char_cursor#139 print_word::@1/(byte*) print_char_cursor#18 )
  [102] (byte) print_byte::b#5 ← phi( mul8u_error::@1/(byte) print_byte::b#3 mul8u_error::@3/(byte) print_byte::b#4 print_sbyte::@2/(byte~) print_byte::b#9 print_word/(byte) print_byte::b#1 print_word::@1/(byte) print_byte::b#2 )
  [103] (byte~) print_byte::$0 ← (byte) print_byte::b#5 >> (byte) 4
  [104] (byte) print_char::ch#3 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$0)
  [105] call print_char 
  to:print_byte::@1
print_byte::@1: scope:[print_byte]  from print_byte
  [106] (byte~) print_byte::$2 ← (byte) print_byte::b#5 & (byte) $f
  [107] (byte) print_char::ch#4 ← *((const byte[]) print_hextab#0 + (byte~) print_byte::$2)
  [108] call print_char 
  to:print_byte::@return
print_byte::@return: scope:[print_byte]  from print_byte::@1
  [109] return 
  to:@return
print_char: scope:[print_char]  from print_byte print_byte::@1 print_sbyte::@1 print_sbyte::@3 print_sword::@2
  [110] (byte*) print_char_cursor#84 ← phi( print_byte/(byte*) print_char_cursor#140 print_byte::@1/(byte*) print_char_cursor#18 print_sbyte::@1/(byte*) print_char_cursor#132 print_sbyte::@3/(byte*) print_char_cursor#132 print_sword::@2/(byte*) print_char_cursor#132 )
  [110] (byte) print_char::ch#5 ← phi( print_byte/(byte) print_char::ch#3 print_byte::@1/(byte) print_char::ch#4 print_sbyte::@1/(byte) '-' print_sbyte::@3/(byte) ' ' print_sword::@2/(byte) '-' )
  [111] *((byte*) print_char_cursor#84) ← (byte) print_char::ch#5
  [112] (byte*) print_char_cursor#18 ← ++ (byte*) print_char_cursor#84
  to:print_char::@return
print_char::@return: scope:[print_char]  from print_char
  [113] return 
  to:@return
print_sbyte: scope:[print_sbyte]  from mul8s_error::@1 mul8s_error::@3
  [114] (signed byte) print_sbyte::b#3 ← phi( mul8s_error::@1/(signed byte) print_sbyte::b#1 mul8s_error::@3/(signed byte) print_sbyte::b#2 )
  [115] if((signed byte) print_sbyte::b#3<(signed byte) 0) goto print_sbyte::@1
  to:print_sbyte::@3
print_sbyte::@3: scope:[print_sbyte]  from print_sbyte
  [116] phi()
  [117] call print_char 
  to:print_sbyte::@2
print_sbyte::@2: scope:[print_sbyte]  from print_sbyte::@3 print_sbyte::@4
  [118] (signed byte) print_sbyte::b#5 ← phi( print_sbyte::@4/(signed byte) print_sbyte::b#0 print_sbyte::@3/(signed byte) print_sbyte::b#3 )
  [119] (byte~) print_byte::b#9 ← (byte)(signed byte) print_sbyte::b#5
  [120] call print_byte 
  to:print_sbyte::@return
print_sbyte::@return: scope:[print_sbyte]  from print_sbyte::@2
  [121] return 
  to:@return
print_sbyte::@1: scope:[print_sbyte]  from print_sbyte
  [122] phi()
  [123] call print_char 
  to:print_sbyte::@4
print_sbyte::@4: scope:[print_sbyte]  from print_sbyte::@1
  [124] (signed byte) print_sbyte::b#0 ← - (signed byte) print_sbyte::b#3
  to:print_sbyte::@2
mul8s: scope:[mul8s]  from mul8s_compare::@11
  [125] (word~) mul8u::mb#6 ← (byte)(signed byte) mul8s::b#0
  [126] (byte~) mul8u::a#8 ← (byte)(signed byte) mul8s::a#0
  [127] call mul8u 
  [128] (word) mul8u::return#2 ← (word) mul8u::res#2
  to:mul8s::@5
mul8s::@5: scope:[mul8s]  from mul8s
  [129] (word) mul8s::m#0 ← (word) mul8u::return#2
  [130] if((signed byte) mul8s::a#0>=(signed byte) 0) goto mul8s::@1
  to:mul8s::@3
mul8s::@3: scope:[mul8s]  from mul8s::@5
  [131] (byte~) mul8s::$9 ← > (word) mul8s::m#0
  [132] (byte~) mul8s::$16 ← (byte~) mul8s::$9 - (byte)(signed byte) mul8s::b#0
  [133] (word) mul8s::m#1 ← (word) mul8s::m#0 hi= (byte~) mul8s::$16
  to:mul8s::@1
mul8s::@1: scope:[mul8s]  from mul8s::@3 mul8s::@5
  [134] (word) mul8s::m#5 ← phi( mul8s::@3/(word) mul8s::m#1 mul8s::@5/(word) mul8s::m#0 )
  [135] if((signed byte) mul8s::b#0>=(signed byte) 0) goto mul8s::@2
  to:mul8s::@4
mul8s::@4: scope:[mul8s]  from mul8s::@1
  [136] (byte~) mul8s::$13 ← > (word) mul8s::m#5
  [137] (byte~) mul8s::$17 ← (byte~) mul8s::$13 - (byte)(signed byte) mul8s::a#0
  [138] (word) mul8s::m#2 ← (word) mul8s::m#5 hi= (byte~) mul8s::$17
  to:mul8s::@2
mul8s::@2: scope:[mul8s]  from mul8s::@1 mul8s::@4
  [139] (word) mul8s::m#4 ← phi( mul8s::@1/(word) mul8s::m#5 mul8s::@4/(word) mul8s::m#2 )
  to:mul8s::@return
mul8s::@return: scope:[mul8s]  from mul8s::@2
  [140] return 
  to:@return
mul8u: scope:[mul8u]  from mul8s mul8u_compare::@11
  [141] (byte) mul8u::a#6 ← phi( mul8s/(byte~) mul8u::a#8 mul8u_compare::@11/(byte) mul8u::a#2 )
  [141] (word) mul8u::mb#0 ← phi( mul8s/(word~) mul8u::mb#6 mul8u_compare::@11/(byte) mul8u::b#1 )
  to:mul8u::@1
mul8u::@1: scope:[mul8u]  from mul8u mul8u::@3
  [142] (word) mul8u::mb#2 ← phi( mul8u/(word) mul8u::mb#0 mul8u::@3/(word) mul8u::mb#1 )
  [142] (word) mul8u::res#2 ← phi( mul8u/(byte) 0 mul8u::@3/(word) mul8u::res#6 )
  [142] (byte) mul8u::a#3 ← phi( mul8u/(byte) mul8u::a#6 mul8u::@3/(byte) mul8u::a#0 )
  [143] if((byte) mul8u::a#3!=(byte) 0) goto mul8u::@2
  to:mul8u::@return
mul8u::@return: scope:[mul8u]  from mul8u::@1
  [144] return 
  to:@return
mul8u::@2: scope:[mul8u]  from mul8u::@1
  [145] (byte~) mul8u::$1 ← (byte) mul8u::a#3 & (byte) 1
  [146] if((byte~) mul8u::$1==(byte) 0) goto mul8u::@3
  to:mul8u::@4
mul8u::@4: scope:[mul8u]  from mul8u::@2
  [147] (word) mul8u::res#1 ← (word) mul8u::res#2 + (word) mul8u::mb#2
  to:mul8u::@3
mul8u::@3: scope:[mul8u]  from mul8u::@2 mul8u::@4
  [148] (word) mul8u::res#6 ← phi( mul8u::@2/(word) mul8u::res#2 mul8u::@4/(word) mul8u::res#1 )
  [149] (byte) mul8u::a#0 ← (byte) mul8u::a#3 >> (byte) 1
  [150] (word) mul8u::mb#1 ← (word) mul8u::mb#2 << (byte) 1
  to:mul8u::@1
mulf8s: scope:[mulf8s]  from mul8s_compare::@10
  [151] phi()
  to:mulf8s::mulf8s_prepare1
mulf8s::mulf8s_prepare1: scope:[mulf8s]  from mulf8s
  [152] (byte~) mulf8u_prepare::a#3 ← (byte)(signed byte) mulf8s::a#0
  [153] call mulf8u_prepare 
  to:mulf8s::@1
mulf8s::@1: scope:[mulf8s]  from mulf8s::mulf8s_prepare1
  [154] (signed byte) mulf8s_prepared::b#0 ← (signed byte) mulf8s::b#0
  [155] call mulf8s_prepared 
  to:mulf8s::@return
mulf8s::@return: scope:[mulf8s]  from mulf8s::@1
  [156] return 
  to:@return
mulf8s_prepared: scope:[mulf8s_prepared]  from mulf8s::@1
  [157] (byte~) mulf8u_prepared::b#3 ← (byte)(signed byte) mulf8s_prepared::b#0
  [158] call mulf8u_prepared 
  [159] (word) mulf8u_prepared::return#3 ← (word) mulf8u_prepared::return#0
  to:mulf8s_prepared::@5
mulf8s_prepared::@5: scope:[mulf8s_prepared]  from mulf8s_prepared
  [160] (word) mulf8s_prepared::m#0 ← (word) mulf8u_prepared::return#3
  [161] if(*((const signed byte*) mulf8s_prepared::memA#0)>=(signed byte) 0) goto mulf8s_prepared::@1
  to:mulf8s_prepared::@3
mulf8s_prepared::@3: scope:[mulf8s_prepared]  from mulf8s_prepared::@5
  [162] (byte~) mulf8s_prepared::$8 ← > (word) mulf8s_prepared::m#0
  [163] (byte~) mulf8s_prepared::$15 ← (byte~) mulf8s_prepared::$8 - (byte)(signed byte) mulf8s_prepared::b#0
  [164] (word) mulf8s_prepared::m#1 ← (word) mulf8s_prepared::m#0 hi= (byte~) mulf8s_prepared::$15
  to:mulf8s_prepared::@1
mulf8s_prepared::@1: scope:[mulf8s_prepared]  from mulf8s_prepared::@3 mulf8s_prepared::@5
  [165] (word) mulf8s_prepared::m#5 ← phi( mulf8s_prepared::@3/(word) mulf8s_prepared::m#1 mulf8s_prepared::@5/(word) mulf8s_prepared::m#0 )
  [166] if((signed byte) mulf8s_prepared::b#0>=(signed byte) 0) goto mulf8s_prepared::@2
  to:mulf8s_prepared::@4
mulf8s_prepared::@4: scope:[mulf8s_prepared]  from mulf8s_prepared::@1
  [167] (byte~) mulf8s_prepared::$12 ← > (word) mulf8s_prepared::m#5
  [168] (byte~) mulf8s_prepared::$16 ← (byte~) mulf8s_prepared::$12 - (byte)*((const signed byte*) mulf8s_prepared::memA#0)
  [169] (word) mulf8s_prepared::m#2 ← (word) mulf8s_prepared::m#5 hi= (byte~) mulf8s_prepared::$16
  to:mulf8s_prepared::@2
mulf8s_prepared::@2: scope:[mulf8s_prepared]  from mulf8s_prepared::@1 mulf8s_prepared::@4
  [170] (word) mulf8s_prepared::m#4 ← phi( mulf8s_prepared::@1/(word) mulf8s_prepared::m#5 mulf8s_prepared::@4/(word) mulf8s_prepared::m#2 )
  to:mulf8s_prepared::@return
mulf8s_prepared::@return: scope:[mulf8s_prepared]  from mulf8s_prepared::@2
  [171] return 
  to:@return
mulf8u_prepared: scope:[mulf8u_prepared]  from mulf8s_prepared mulf8u::@1
  [172] (byte) mulf8u_prepared::b#2 ← phi( mulf8s_prepared/(byte~) mulf8u_prepared::b#3 mulf8u::@1/(byte) mulf8u_prepared::b#0 )
  [173] *((const byte*) mulf8u_prepared::memB#0) ← (byte) mulf8u_prepared::b#2
  asm { ldxmemB sec sm1: ldamulf_sqr1_lo,x sm2: sbcmulf_sqr2_lo,x staresL sm3: ldamulf_sqr1_hi,x sm4: sbcmulf_sqr2_hi,x stamemB  }
  [175] (word) mulf8u_prepared::return#0 ← *((const byte*) mulf8u_prepared::memB#0) w= *((const byte*) mulf8u_prepared::resL#0)
  to:mulf8u_prepared::@return
mulf8u_prepared::@return: scope:[mulf8u_prepared]  from mulf8u_prepared
  [176] return 
  to:@return
mulf8u_prepare: scope:[mulf8u_prepare]  from mulf8s::mulf8s_prepare1 mulf8u
  [177] (byte) mulf8u_prepare::a#2 ← phi( mulf8s::mulf8s_prepare1/(byte~) mulf8u_prepare::a#3 mulf8u/(byte) mulf8u_prepare::a#0 )
  [178] *((const byte*) mulf8u_prepare::memA#0) ← (byte) mulf8u_prepare::a#2
  asm { ldamemA stamulf8u_prepared.sm1+1 stamulf8u_prepared.sm3+1 eor#$ff stamulf8u_prepared.sm2+1 stamulf8u_prepared.sm4+1  }
  to:mulf8u_prepare::@return
mulf8u_prepare::@return: scope:[mulf8u_prepare]  from mulf8u_prepare
  [180] return 
  to:@return
muls8s: scope:[muls8s]  from mul8s_compare::@2
  [181] if((signed byte) muls8s::a#0<(signed byte) 0) goto muls8s::@4
  to:muls8s::@2
muls8s::@2: scope:[muls8s]  from muls8s
  [182] if((signed byte) muls8s::a#0<=(signed byte) 0) goto muls8s::@1
  to:muls8s::@3
muls8s::@3: scope:[muls8s]  from muls8s::@2 muls8s::@3
  [183] (signed byte) muls8s::j#2 ← phi( muls8s::@2/(signed byte) 0 muls8s::@3/(signed byte) muls8s::j#1 )
  [183] (signed word) muls8s::m#3 ← phi( muls8s::@2/(signed byte) 0 muls8s::@3/(signed word) muls8s::m#1 )
  [184] (signed word) muls8s::m#1 ← (signed word) muls8s::m#3 + (signed byte) muls8s::b#0
  [185] (signed byte) muls8s::j#1 ← ++ (signed byte) muls8s::j#2
  [186] if((signed byte) muls8s::j#1!=(signed byte) muls8s::a#0) goto muls8s::@3
  to:muls8s::@1
muls8s::@1: scope:[muls8s]  from muls8s::@2 muls8s::@3 muls8s::@4
  [187] (signed word) muls8s::return#0 ← phi( muls8s::@4/(signed word) muls8s::m#2 muls8s::@2/(signed byte) 0 muls8s::@3/(signed word) muls8s::m#1 )
  to:muls8s::@return
muls8s::@return: scope:[muls8s]  from muls8s::@1
  [188] return 
  to:@return
muls8s::@4: scope:[muls8s]  from muls8s muls8s::@4
  [189] (signed byte) muls8s::i#2 ← phi( muls8s/(signed byte) 0 muls8s::@4/(signed byte) muls8s::i#1 )
  [189] (signed word) muls8s::m#5 ← phi( muls8s/(signed byte) 0 muls8s::@4/(signed word) muls8s::m#2 )
  [190] (signed word) muls8s::m#2 ← (signed word) muls8s::m#5 - (signed byte) muls8s::b#0
  [191] (signed byte) muls8s::i#1 ← -- (signed byte) muls8s::i#2
  [192] if((signed byte) muls8s::i#1!=(signed byte) muls8s::a#0) goto muls8s::@4
  to:muls8s::@1
mul8u_compare: scope:[mul8u_compare]  from main::@4
  [193] phi()
  to:mul8u_compare::@1
mul8u_compare::@1: scope:[mul8u_compare]  from mul8u_compare mul8u_compare::@8
  [194] (byte) mul8u_compare::a#7 ← phi( mul8u_compare/(byte) 0 mul8u_compare::@8/(byte) mul8u_compare::a#1 )
  to:mul8u_compare::@2
mul8u_compare::@2: scope:[mul8u_compare]  from mul8u_compare::@1 mul8u_compare::@5
  [195] (byte) mul8u_compare::b#10 ← phi( mul8u_compare::@1/(byte) 0 mul8u_compare::@5/(byte) mul8u_compare::b#1 )
  [196] (byte) muls8u::a#0 ← (byte) mul8u_compare::a#7
  [197] (byte) muls8u::b#0 ← (byte) mul8u_compare::b#10
  [198] call muls8u 
  [199] (word) muls8u::return#2 ← (word) muls8u::return#0
  to:mul8u_compare::@10
mul8u_compare::@10: scope:[mul8u_compare]  from mul8u_compare::@2
  [200] (word) mul8u_compare::ms#0 ← (word) muls8u::return#2
  [201] (byte) mulf8u::a#0 ← (byte) mul8u_compare::a#7
  [202] (byte) mulf8u::b#0 ← (byte) mul8u_compare::b#10
  [203] call mulf8u 
  [204] (word) mulf8u::return#2 ← (word) mulf8u::return#0
  to:mul8u_compare::@11
mul8u_compare::@11: scope:[mul8u_compare]  from mul8u_compare::@10
  [205] (word) mul8u_compare::mf#0 ← (word) mulf8u::return#2
  [206] (byte) mul8u::a#2 ← (byte) mul8u_compare::a#7
  [207] (byte) mul8u::b#1 ← (byte) mul8u_compare::b#10
  [208] call mul8u 
  [209] (word) mul8u::return#3 ← (word) mul8u::res#2
  to:mul8u_compare::@12
mul8u_compare::@12: scope:[mul8u_compare]  from mul8u_compare::@11
  [210] (word) mul8u_compare::mn#0 ← (word) mul8u::return#3
  [211] if((word) mul8u_compare::ms#0==(word) mul8u_compare::mf#0) goto mul8u_compare::@3
  to:mul8u_compare::@6
mul8u_compare::@6: scope:[mul8u_compare]  from mul8u_compare::@12
  [212] phi()
  to:mul8u_compare::@3
mul8u_compare::@3: scope:[mul8u_compare]  from mul8u_compare::@12 mul8u_compare::@6
  [213] (byte) mul8u_compare::ok#4 ← phi( mul8u_compare::@12/(byte) 1 mul8u_compare::@6/(byte) 0 )
  [214] if((word) mul8u_compare::ms#0==(word) mul8u_compare::mn#0) goto mul8u_compare::@14
  to:mul8u_compare::@4
mul8u_compare::@14: scope:[mul8u_compare]  from mul8u_compare::@3
  [215] phi()
  to:mul8u_compare::@4
mul8u_compare::@4: scope:[mul8u_compare]  from mul8u_compare::@14 mul8u_compare::@3
  [216] (byte) mul8u_compare::ok#3 ← phi( mul8u_compare::@14/(byte) mul8u_compare::ok#4 mul8u_compare::@3/(byte) 0 )
  [217] if((byte) mul8u_compare::ok#3!=(byte) 0) goto mul8u_compare::@5
  to:mul8u_compare::@7
mul8u_compare::@7: scope:[mul8u_compare]  from mul8u_compare::@4
  [218] *((const byte*) BGCOL#0) ← (byte) 2
  [219] (byte) mul8u_error::a#0 ← (byte) mul8u_compare::a#7
  [220] (byte) mul8u_error::b#0 ← (byte) mul8u_compare::b#10
  [221] (word) mul8u_error::ms#0 ← (word) mul8u_compare::ms#0
  [222] (word) mul8u_error::mn#0 ← (word) mul8u_compare::mn#0
  [223] (word) mul8u_error::mf#0 ← (word) mul8u_compare::mf#0
  [224] call mul8u_error 
  to:mul8u_compare::@return
mul8u_compare::@return: scope:[mul8u_compare]  from mul8u_compare::@13 mul8u_compare::@7
  [225] return 
  to:@return
mul8u_compare::@5: scope:[mul8u_compare]  from mul8u_compare::@4
  [226] (byte) mul8u_compare::b#1 ← ++ (byte) mul8u_compare::b#10
  [227] if((byte) mul8u_compare::b#1!=(byte) 0) goto mul8u_compare::@2
  to:mul8u_compare::@8
mul8u_compare::@8: scope:[mul8u_compare]  from mul8u_compare::@5
  [228] (byte) mul8u_compare::a#1 ← ++ (byte) mul8u_compare::a#7
  [229] if((byte) mul8u_compare::a#1!=(byte) 0) goto mul8u_compare::@1
  to:mul8u_compare::@9
mul8u_compare::@9: scope:[mul8u_compare]  from mul8u_compare::@8
  [230] phi()
  [231] call print_str 
  to:mul8u_compare::@13
mul8u_compare::@13: scope:[mul8u_compare]  from mul8u_compare::@9
  [232] phi()
  [233] call print_ln 
  to:mul8u_compare::@return
mul8u_error: scope:[mul8u_error]  from mul8u_compare::@7
  [234] phi()
  [235] call print_str 
  to:mul8u_error::@1
mul8u_error::@1: scope:[mul8u_error]  from mul8u_error
  [236] (byte) print_byte::b#3 ← (byte) mul8u_error::a#0
  [237] call print_byte 
  to:mul8u_error::@2
mul8u_error::@2: scope:[mul8u_error]  from mul8u_error::@1
  [238] phi()
  [239] call print_str 
  to:mul8u_error::@3
mul8u_error::@3: scope:[mul8u_error]  from mul8u_error::@2
  [240] (byte) print_byte::b#4 ← (byte) mul8u_error::b#0
  [241] call print_byte 
  to:mul8u_error::@4
mul8u_error::@4: scope:[mul8u_error]  from mul8u_error::@3
  [242] phi()
  [243] call print_str 
  to:mul8u_error::@5
mul8u_error::@5: scope:[mul8u_error]  from mul8u_error::@4
  [244] (word) print_word::w#3 ← (word) mul8u_error::ms#0
  [245] call print_word 
  to:mul8u_error::@6
mul8u_error::@6: scope:[mul8u_error]  from mul8u_error::@5
  [246] phi()
  [247] call print_str 
  to:mul8u_error::@7
mul8u_error::@7: scope:[mul8u_error]  from mul8u_error::@6
  [248] (word) print_word::w#4 ← (word) mul8u_error::mn#0
  [249] call print_word 
  to:mul8u_error::@8
mul8u_error::@8: scope:[mul8u_error]  from mul8u_error::@7
  [250] phi()
  [251] call print_str 
  to:mul8u_error::@9
mul8u_error::@9: scope:[mul8u_error]  from mul8u_error::@8
  [252] (word) print_word::w#5 ← (word) mul8u_error::mf#0
  [253] call print_word 
  to:mul8u_error::@10
mul8u_error::@10: scope:[mul8u_error]  from mul8u_error::@9
  [254] phi()
  [255] call print_ln 
  to:mul8u_error::@return
mul8u_error::@return: scope:[mul8u_error]  from mul8u_error::@10
  [256] return 
  to:@return
mulf8u: scope:[mulf8u]  from mul8u_compare::@10
  [257] (byte) mulf8u_prepare::a#0 ← (byte) mulf8u::a#0
  [258] call mulf8u_prepare 
  to:mulf8u::@1
mulf8u::@1: scope:[mulf8u]  from mulf8u
  [259] (byte) mulf8u_prepared::b#0 ← (byte) mulf8u::b#0
  [260] call mulf8u_prepared 
  [261] (word) mulf8u_prepared::return#2 ← (word) mulf8u_prepared::return#0
  to:mulf8u::@2
mulf8u::@2: scope:[mulf8u]  from mulf8u::@1
  [262] (word) mulf8u::return#0 ← (word) mulf8u_prepared::return#2
  to:mulf8u::@return
mulf8u::@return: scope:[mulf8u]  from mulf8u::@2
  [263] return 
  to:@return
muls8u: scope:[muls8u]  from mul8u_compare::@2
  [264] if((byte) muls8u::a#0==(byte) 0) goto muls8u::@1
  to:muls8u::@2
muls8u::@2: scope:[muls8u]  from muls8u muls8u::@2
  [265] (byte) muls8u::i#2 ← phi( muls8u/(byte) 0 muls8u::@2/(byte) muls8u::i#1 )
  [265] (word) muls8u::m#3 ← phi( muls8u/(byte) 0 muls8u::@2/(word) muls8u::m#1 )
  [266] (word) muls8u::m#1 ← (word) muls8u::m#3 + (byte) muls8u::b#0
  [267] (byte) muls8u::i#1 ← ++ (byte) muls8u::i#2
  [268] if((byte) muls8u::i#1!=(byte) muls8u::a#0) goto muls8u::@2
  to:muls8u::@1
muls8u::@1: scope:[muls8u]  from muls8u muls8u::@2
  [269] (word) muls8u::return#0 ← phi( muls8u/(byte) 0 muls8u::@2/(word) muls8u::m#1 )
  to:muls8u::@return
muls8u::@return: scope:[muls8u]  from muls8u::@1
  [270] return 
  to:@return
mulf_tables_cmp: scope:[mulf_tables_cmp]  from main::@3
  [271] phi()
  to:mulf_tables_cmp::@1
mulf_tables_cmp::@1: scope:[mulf_tables_cmp]  from mulf_tables_cmp mulf_tables_cmp::@2
  [272] (byte*) mulf_tables_cmp::asm_sqr#2 ← phi( mulf_tables_cmp/(const byte[$200]) mula_sqr1_lo#0 mulf_tables_cmp::@2/(byte*) mulf_tables_cmp::asm_sqr#1 )
  [272] (byte*) mulf_tables_cmp::kc_sqr#2 ← phi( mulf_tables_cmp/(const byte[$200]) mulf_sqr1_lo#0 mulf_tables_cmp::@2/(byte*) mulf_tables_cmp::kc_sqr#1 )
  [273] if(*((byte*) mulf_tables_cmp::kc_sqr#2)==*((byte*) mulf_tables_cmp::asm_sqr#2)) goto mulf_tables_cmp::@2
  to:mulf_tables_cmp::@3
mulf_tables_cmp::@3: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@1
  [274] *((const byte*) BGCOL#0) ← (byte) 2
  [275] call print_str 
  to:mulf_tables_cmp::@5
mulf_tables_cmp::@5: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@3
  [276] (word~) print_word::w#11 ← (word)(byte*) mulf_tables_cmp::asm_sqr#2
  [277] call print_word 
  to:mulf_tables_cmp::@6
mulf_tables_cmp::@6: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@5
  [278] phi()
  [279] call print_str 
  to:mulf_tables_cmp::@7
mulf_tables_cmp::@7: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@6
  [280] (word~) print_word::w#12 ← (word)(byte*) mulf_tables_cmp::kc_sqr#2
  [281] call print_word 
  to:mulf_tables_cmp::@return
mulf_tables_cmp::@return: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@7 mulf_tables_cmp::@9
  [282] (byte*) print_line_cursor#10 ← phi( mulf_tables_cmp::@9/(byte*) print_line_cursor#1 mulf_tables_cmp::@7/(byte*) 1024 )
  [282] (byte*) print_char_cursor#31 ← phi( mulf_tables_cmp::@9/(byte*~) print_char_cursor#225 mulf_tables_cmp::@7/(byte*) print_char_cursor#18 )
  [283] return 
  to:@return
mulf_tables_cmp::@2: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@1
  [284] (byte*) mulf_tables_cmp::asm_sqr#1 ← ++ (byte*) mulf_tables_cmp::asm_sqr#2
  [285] (byte*) mulf_tables_cmp::kc_sqr#1 ← ++ (byte*) mulf_tables_cmp::kc_sqr#2
  [286] if((byte*) mulf_tables_cmp::kc_sqr#1<(const byte[$200]) mulf_sqr1_lo#0+(word)(number) $200*(number) 4) goto mulf_tables_cmp::@1
  to:mulf_tables_cmp::@4
mulf_tables_cmp::@4: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@2
  [287] phi()
  [288] call print_str 
  to:mulf_tables_cmp::@8
mulf_tables_cmp::@8: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@4
  [289] phi()
  [290] call print_ln 
  to:mulf_tables_cmp::@9
mulf_tables_cmp::@9: scope:[mulf_tables_cmp]  from mulf_tables_cmp::@8
  [291] (byte*~) print_char_cursor#225 ← (byte*) print_line_cursor#1
  to:mulf_tables_cmp::@return
mulf_init_asm: scope:[mulf_init_asm]  from main::@2
  asm { ldx#$00 txa .byte$c9 lb1: tya adc#$00 ml1: stamula_sqr1_hi,x tay cmp#$40 txa ror ml9: adc#$00 staml9+1 inx ml0: stamula_sqr1_lo,x bnelb1 incml0+2 incml1+2 clc iny bnelb1 ldx#$00 ldy#$ff !: ldamula_sqr1_hi+1,x stamula_sqr2_hi+$100,x ldamula_sqr1_hi,x stamula_sqr2_hi,y ldamula_sqr1_lo+1,x stamula_sqr2_lo+$100,x ldamula_sqr1_lo,x stamula_sqr2_lo,y dey inx bne!-  }
  [293] *((const byte*) mulf_init_asm::mem#0) ← *((const byte[$200]) mula_sqr1_lo#0)
  [294] *((const byte*) mulf_init_asm::mem#0) ← *((const byte[$200]) mula_sqr1_hi#0)
  [295] *((const byte*) mulf_init_asm::mem#0) ← *((const byte[$200]) mula_sqr2_lo#0)
  [296] *((const byte*) mulf_init_asm::mem#0) ← *((const byte[$200]) mula_sqr2_hi#0)
  to:mulf_init_asm::@return
mulf_init_asm::@return: scope:[mulf_init_asm]  from mulf_init_asm
  [297] return 
  to:@return
mulf_init: scope:[mulf_init]  from main::@1
  [298] phi()
  to:mulf_init::@1
mulf_init::@1: scope:[mulf_init]  from mulf_init mulf_init::@2
  [299] (byte) mulf_init::x_2#3 ← phi( mulf_init/(byte) 0 mulf_init::@2/(byte) mulf_init::x_2#2 )
  [299] (byte*) mulf_init::sqr1_hi#2 ← phi( mulf_init/(const byte[$200]) mulf_sqr1_hi#0+(byte) 1 mulf_init::@2/(byte*) mulf_init::sqr1_hi#1 )
  [299] (byte*) mulf_init::sqr1_lo#2 ← phi( mulf_init/(const byte[$200]) mulf_sqr1_lo#0+(byte) 1 mulf_init::@2/(byte*) mulf_init::sqr1_lo#1 )
  [299] (word) mulf_init::sqr#4 ← phi( mulf_init/(byte) 0 mulf_init::@2/(word) mulf_init::sqr#1 )
  [299] (byte) mulf_init::c#2 ← phi( mulf_init/(byte) 0 mulf_init::@2/(byte) mulf_init::c#1 )
  [300] (byte) mulf_init::c#1 ← ++ (byte) mulf_init::c#2
  [301] (byte~) mulf_init::$7 ← (byte) mulf_init::c#1 & (byte) 1
  [302] if((byte~) mulf_init::$7!=(byte) 0) goto mulf_init::@2
  to:mulf_init::@3
mulf_init::@3: scope:[mulf_init]  from mulf_init::@1
  [303] (byte) mulf_init::x_2#1 ← ++ (byte) mulf_init::x_2#3
  [304] (word) mulf_init::sqr#2 ← ++ (word) mulf_init::sqr#4
  to:mulf_init::@2
mulf_init::@2: scope:[mulf_init]  from mulf_init::@1 mulf_init::@3
  [305] (byte) mulf_init::x_2#2 ← phi( mulf_init::@1/(byte) mulf_init::x_2#3 mulf_init::@3/(byte) mulf_init::x_2#1 )
  [305] (word) mulf_init::sqr#3 ← phi( mulf_init::@1/(word) mulf_init::sqr#4 mulf_init::@3/(word) mulf_init::sqr#2 )
  [306] (byte~) mulf_init::$10 ← < (word) mulf_init::sqr#3
  [307] *((byte*) mulf_init::sqr1_lo#2) ← (byte~) mulf_init::$10
  [308] (byte~) mulf_init::$11 ← > (word) mulf_init::sqr#3
  [309] *((byte*) mulf_init::sqr1_hi#2) ← (byte~) mulf_init::$11
  [310] (byte*) mulf_init::sqr1_hi#1 ← ++ (byte*) mulf_init::sqr1_hi#2
  [311] (word) mulf_init::sqr#1 ← (word) mulf_init::sqr#3 + (byte) mulf_init::x_2#2
  [312] (byte*) mulf_init::sqr1_lo#1 ← ++ (byte*) mulf_init::sqr1_lo#2
  [313] if((byte*) mulf_init::sqr1_lo#1!=(const byte[$200]) mulf_sqr1_lo#0+(word) $200) goto mulf_init::@1
  to:mulf_init::@4
mulf_init::@4: scope:[mulf_init]  from mulf_init::@2 mulf_init::@5
  [314] (byte) mulf_init::dir#2 ← phi( mulf_init::@2/(byte) $ff mulf_init::@5/(byte) mulf_init::dir#3 )
  [314] (byte*) mulf_init::sqr2_hi#2 ← phi( mulf_init::@2/(const byte[$200]) mulf_sqr2_hi#0 mulf_init::@5/(byte*) mulf_init::sqr2_hi#1 )
  [314] (byte*) mulf_init::sqr2_lo#2 ← phi( mulf_init::@2/(const byte[$200]) mulf_sqr2_lo#0 mulf_init::@5/(byte*) mulf_init::sqr2_lo#1 )
  [314] (byte) mulf_init::x_255#2 ← phi( mulf_init::@2/(byte) -1 mulf_init::@5/(byte) mulf_init::x_255#1 )
  [315] *((byte*) mulf_init::sqr2_lo#2) ← *((const byte[$200]) mulf_sqr1_lo#0 + (byte) mulf_init::x_255#2)
  [316] *((byte*) mulf_init::sqr2_hi#2) ← *((const byte[$200]) mulf_sqr1_hi#0 + (byte) mulf_init::x_255#2)
  [317] (byte*) mulf_init::sqr2_hi#1 ← ++ (byte*) mulf_init::sqr2_hi#2
  [318] (byte) mulf_init::x_255#1 ← (byte) mulf_init::x_255#2 + (byte) mulf_init::dir#2
  [319] if((byte) mulf_init::x_255#1!=(byte) 0) goto mulf_init::@7
  to:mulf_init::@5
mulf_init::@7: scope:[mulf_init]  from mulf_init::@4
  [320] phi()
  to:mulf_init::@5
mulf_init::@5: scope:[mulf_init]  from mulf_init::@4 mulf_init::@7
  [321] (byte) mulf_init::dir#3 ← phi( mulf_init::@7/(byte) mulf_init::dir#2 mulf_init::@4/(byte) 1 )
  [322] (byte*) mulf_init::sqr2_lo#1 ← ++ (byte*) mulf_init::sqr2_lo#2
  [323] if((byte*) mulf_init::sqr2_lo#1!=(const byte[$200]) mulf_sqr2_lo#0+(word) $1ff) goto mulf_init::@4
  to:mulf_init::@6
mulf_init::@6: scope:[mulf_init]  from mulf_init::@5
  [324] *((const byte[$200]) mulf_sqr2_lo#0+(word) $1ff) ← *((const byte[$200]) mulf_sqr1_lo#0+(word) $100)
  [325] *((const byte[$200]) mulf_sqr2_hi#0+(word) $1ff) ← *((const byte[$200]) mulf_sqr1_hi#0+(word) $100)
  to:mulf_init::@return
mulf_init::@return: scope:[mulf_init]  from mulf_init::@6
  [326] return 
  to:@return
print_cls: scope:[print_cls]  from main
  [327] phi()
  to:print_cls::@1
print_cls::@1: scope:[print_cls]  from print_cls print_cls::@1
  [328] (byte*) print_cls::sc#2 ← phi( print_cls/(byte*) 1024 print_cls::@1/(byte*) print_cls::sc#1 )
  [329] *((byte*) print_cls::sc#2) ← (byte) ' '
  [330] (byte*) print_cls::sc#1 ← ++ (byte*) print_cls::sc#2
  [331] if((byte*) print_cls::sc#1!=(byte*) 1024+(word) $3e8) goto print_cls::@1
  to:print_cls::@return
print_cls::@return: scope:[print_cls]  from print_cls::@1
  [332] return 
  to:@return
