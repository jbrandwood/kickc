@begin: scope:[]  from
  [0] phi()
  to:@1
@1: scope:[]  from @begin
  [1] phi()
  [2] call main 
  to:@end
@end: scope:[]  from @1
  [3] phi()
main: scope:[main]  from @1
  [4] *((const byte*) BGCOL#0) ← ++ *((const byte*) BGCOL#0)
  to:main::@return
main::@return: scope:[main]  from main
  [5] return 
  to:@return
nmiHandler: scope:[nmiHandler]  from
  [6] *((const byte*) BGCOL#0) ← ++ *((const byte*) BGCOL#0)
  to:nmiHandler::@return
nmiHandler::@return: scope:[nmiHandler]  from nmiHandler
  [7] return 
  to:@return
entryPoint: scope:[entryPoint]  from
  [8] phi()
  to:entryPoint::@1
entryPoint::@1: scope:[entryPoint]  from entryPoint entryPoint::@1
  [9] (byte) entryPoint::i#2 ← phi( entryPoint/(byte) 0 entryPoint::@1/(byte) entryPoint::i#1 )
  [10] *((const byte[$32]) SCREEN#0 + (byte) entryPoint::i#2) ← *((const byte[]) MESSAGE#0 + (byte) entryPoint::i#2)
  [11] (byte) entryPoint::i#1 ← ++ (byte) entryPoint::i#2
  [12] if((byte) entryPoint::i#1!=(byte) $32) goto entryPoint::@1
  to:entryPoint::@return
entryPoint::@return: scope:[entryPoint]  from entryPoint::@1
  [13] return 
  to:@return
